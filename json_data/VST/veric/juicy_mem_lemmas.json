{
    "filename": "veric/juicy_mem_lemmas.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.veric.juicy_base.",
            "VernacRequire",
            "7a63c83b17327e7ee5b9ab38e2ae76d2d22b7583"
        ],
        [
            "Require Import VST.veric.juicy_mem.",
            "VernacRequire",
            "f1eecf3ecf80d465588513629a8e6b5706759bd8"
        ],
        [
            "Require Import VST.veric.res_predicates.",
            "VernacRequire",
            "768b4200cf583d1957d2bf97075bbe3044eb3f8d"
        ],
        [
            "Require Import VST.veric.shares.",
            "VernacRequire",
            "3704a447cd367fa0955afd14b15f7281894f1482"
        ],
        [
            "Definition juicy_mem_core (j: juicy_mem) : rmap := core (m_phi j).",
            "VernacDefinition",
            "74742d18137125c87365930a94720602b8ff2a42"
        ],
        [
            "Definition no_VALs (phi: rmap) := forall loc, match phi @ loc with | YES _ _ (VAL _) _ => False | _ => True end.",
            "VernacDefinition",
            "6f1e82d5c755675690029ef193e2ed7501f38423"
        ],
        [
            "Lemma components_join_joins {A} {JA: Join A}{PA: Perm_alg A}{TA: Trip_alg A}: forall a b c d, join a b c -> joins a d -> joins b d -> joins c d.",
            "VernacStartTheoremProof",
            "a866d49c8540ff67fdf6e18233555057a5276947"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0 as [x ?].",
            "VernacExtend",
            "9f6c106fe6f17839746156f659fe70371cc61637"
        ],
        [
            "destruct H1 as [y ?].",
            "VernacExtend",
            "ab789bd3810839731316b457c1629699a1c0b5e0"
        ],
        [
            "destruct (TA a b d c y x H H1 H0).",
            "VernacExtend",
            "b8b4b8f7ba22954d061d3167359ca5852f061596"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contents_cohere_join_sub: forall m phi phi', contents_cohere m phi -> join_sub phi' phi -> contents_cohere m phi'.",
            "VernacStartTheoremProof",
            "e7cec5d4d4c8b9c2eb063f5770f9a0a4613e6606"
        ],
        [
            "unfold contents_cohere.",
            "VernacExtend",
            "408704dacbc3546bf86d04a14f65fc3da2ef4922"
        ],
        [
            "intros until phi'; intros H H0.",
            "VernacExtend",
            "4bb2890537d0634f6ec8783e06ec0b02b74899f3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0 as [phi1 H0].",
            "VernacExtend",
            "b13d463deb810c404e9d4952ff7190cb1a9b43e1"
        ],
        [
            "generalize (resource_at_join phi' phi1 phi loc H0); intro H2.",
            "VernacExtend",
            "ad8a3eff2741c4bd1ad614a0c7645aa1409de0c8"
        ],
        [
            "rewrite H1 in H2.",
            "VernacExtend",
            "3ddaddaf8f89728f77671f580e26162e25035230"
        ],
        [
            "inv H2; symmetry in H8; destruct (H _ _ _ _ _ H8); auto.",
            "VernacExtend",
            "f67e392e5ebb6eff591b41c06b2c8667f5871ef0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_sh_join_sub: forall (sh1 sh2: Share.t) p, perm_of_sh sh1 = Some p -> join_sub sh1 sh2 -> perm_order' (perm_of_sh sh2) p.",
            "VernacStartTheoremProof",
            "16f11062a53e320598aaebeef68966e9d38c888d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "unfold perm_of_sh in *.",
            "VernacExtend",
            "daa3eecfcac4b0e7c6215fbb9230715428265ac1"
        ],
        [
            "repeat if_tac in H; inv H.",
            "VernacExtend",
            "236db04d7d4ff24d4d40cac9dd199daec9736f67"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "rewrite Share.glb_commute, Share.glb_top in H; subst x.",
            "VernacExtend",
            "c64e2b15aa9df5df2bf55b36f1cf129a4e1dacc0"
        ],
        [
            "rewrite (Share.lub_bot).",
            "VernacExtend",
            "dd5f3f2e10a287f0e4a77d2d1958c88f837ce5dd"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply join_writable01 in H0 ;auto.",
            "VernacExtend",
            "6cd02e724d5140ffb43e1f2bcbf1cfa8e2fd1944"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply join_readable1 in H0; auto.",
            "VernacExtend",
            "44a38f38712666095b5eba364530c58e8b18db6a"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (sh2 <> Share.bot).",
            "VernacExtend",
            "4780df661e68017d7de4c70ca9da114d9ebcee15"
        ],
        [
            "contradict H3.",
            "VernacExtend",
            "4165cfca2fce31090e02fe156593ea5578faed3a"
        ],
        [
            "apply split_identity in H0; auto.",
            "VernacExtend",
            "8c2c181a04f03171f6f3397761454e24348efbc2"
        ],
        [
            "apply identity_share_bot; auto.",
            "VernacExtend",
            "ace4985618bc2eb99aaff3f457a840805844feb0"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "repeat if_tac; try constructor.",
            "VernacExtend",
            "d9f601cacdcd556096a6757474b5159b1ad61ee8"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_order'_trans: forall p1 p2 p3, perm_order' (Some p1) p2 -> perm_order' (Some p2) p3 -> perm_order' (Some p1) p3.",
            "VernacStartTheoremProof",
            "dacf99af13aae1861db1cc1a9016b1148e84eb95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold perm_order' in *.",
            "VernacExtend",
            "70a9b810494d89048bdafa374a3caeb3b73b9d8d"
        ],
        [
            "eapply perm_order_trans; eauto.",
            "VernacExtend",
            "c0dbeff8a1892c945f3ea9ca4448944a12e90c0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmap_unage_YES: forall phi phi' sh rsh k pp loc, age phi phi' -> phi' @ loc = YES sh rsh k pp -> exists pp', phi @ loc = YES sh rsh k pp'.",
            "VernacStartTheoremProof",
            "6041d7fc7da0857ed60c50f88dda8dad81d9a776"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold age in H.",
            "VernacExtend",
            "a58746f69ab5a2d203fc8a1730289020249d8c72"
        ],
        [
            "case_eq (phi @ loc).",
            "VernacExtend",
            "d416dd6a026c865ab9782d095182903e590ed2a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (necR phi phi').",
            "VernacExtend",
            "419db8e2d6fccf71970c5c12de175829f60bed4f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (necR_NO phi phi' loc sh0 n H2).",
            "VernacExtend",
            "3b2f128506b7aa9ef36384f3c366fe997263e47d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H3 in H1.",
            "VernacExtend",
            "0727e7dabf7e3bf6566adfd897eda8466c8046e1"
        ],
        [
            "rewrite H1 in H0; inv H0.",
            "VernacExtend",
            "e5ff33e4a332b0bd8a610a4f0eae15c08fe5b7f5"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists p.",
            "VernacExtend",
            "cb4eaff811cdb91cdb614614b7df264de4996b62"
        ],
        [
            "apply necR_YES with (phi' := phi') in H1.",
            "VernacExtend",
            "53d8257a9cfc679d62f3c62f52f8f6b32e0e746e"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "apply YES_ext; auto.",
            "VernacExtend",
            "de11c6c787d0eac9ac58a93f7237a80e14cf27c0"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "eapply necR_PURE in H1.",
            "VernacExtend",
            "eafa8877bb23c0b063f20ea172d8d873a85e62f4"
        ],
        [
            "2: constructor 1; eassumption.",
            "VernacExtend",
            "6163d3ccdaa1af79d54772a139cc47b521cc068d"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma preds_fmap_NoneP_approx: forall pp lev1 lev2, preds_fmap (approx lev1) (approx lev1) pp = NoneP -> preds_fmap (approx lev2) (approx lev2) pp = NoneP.",
            "VernacStartTheoremProof",
            "55853e4c19c2417acfd6d104a3a78bf742965c9e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct pp.",
            "VernacExtend",
            "6311fc8449085429d1a0fedab42ad1035563cf49"
        ],
        [
            "unfold NoneP, approx, compose in *.",
            "VernacExtend",
            "308bd4b72d1e7d81d5457953534deec00f6089b9"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "unfold compose in *.",
            "VernacExtend",
            "c44342f17e1f781010c0f7ff8e47a2f4d73db095"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply EqdepFacts.eq_sigT_eq_dep in H2.",
            "VernacExtend",
            "59dc61a53f9154425725fc9261f4ae68bb38fad0"
        ],
        [
            "apply Eqdep.EqdepTheory.eq_dep_eq in H2.",
            "VernacExtend",
            "7bc4280c398be2af929e8591062a5eafde853460"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oracle_unage: forall (jm': juicy_mem) (w: rmap), age w (m_phi jm') -> exists jm, age jm jm' /\\ m_phi jm = w.",
            "VernacStartTheoremProof",
            "b3d88c1b9a310001a1c97ac4a020c5d72bfd383d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct jm' as [m phi' CONTENTS ACCESS MAXA ALLOC].",
            "VernacExtend",
            "dc99061bb461014287bccaf40961299249d2a28c"
        ],
        [
            "simpl m_phi in H.",
            "VernacExtend",
            "86aefa748690e41049c2ee221ad480975cba98fe"
        ],
        [
            "assert (contents_cohere m w).",
            "VernacExtend",
            "ca922ae9b1a35e69c80bf7a8bdae4f89cbe0f61f"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "destruct (necR_YES'' w phi' loc rsh sh (VAL v)).",
            "VernacExtend",
            "0103b0341776e399a633a7a8e417830241e4a576"
        ],
        [
            "constructor 1; auto.",
            "VernacExtend",
            "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
        ],
        [
            "destruct H1 as [p ?].",
            "VernacExtend",
            "46257b737ae7a2bc11cb62e3490e9f7ffb3f6ad1"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "destruct (CONTENTS _ _ _ _ _ H1); eauto.",
            "VernacExtend",
            "eeb291a039616d9b2416131bf9b933ccb2de32d6"
        ],
        [
            "subst p.",
            "VernacExtend",
            "caedf09ae2f4d633332b36c55c808e07b2752cd1"
        ],
        [
            "apply (age1_YES w phi') in H1; auto.",
            "VernacExtend",
            "5cd0684ab5c02df1490045b7a65abcf16049ddec"
        ],
        [
            "inversion2 H0 H1.",
            "VernacExtend",
            "9b20beae3f3208c76620c275cc1b9ef37c595ddd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (access_cohere m w).",
            "VernacExtend",
            "06bad40a37ba548a0e06ed3969214b8154162594"
        ],
        [
            "intro loc; specialize (ACCESS loc).",
            "VernacExtend",
            "58a39abdf990e66ba986251b3724922b4137d9a4"
        ],
        [
            "case_eq (w @ loc); intros.",
            "VernacExtend",
            "788f5a6c03e605c0924bccd3a61928a0286c844b"
        ],
        [
            "apply (necR_NO w phi') in H1.",
            "VernacExtend",
            "2155f59de7701163f6e89040de2c54ebdb5a9ff5"
        ],
        [
            "rewrite H1 in ACCESS; auto.",
            "VernacExtend",
            "4c789286d982db8e0b6414a5bca014eff59b8aa8"
        ],
        [
            "constructor 1;auto.",
            "VernacExtend",
            "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
        ],
        [
            "apply (necR_YES w phi') in H1.",
            "VernacExtend",
            "a86833e2056b67d6643a2d8591df5c9dd14dd119"
        ],
        [
            "rewrite H1 in ACCESS; auto.",
            "VernacExtend",
            "4c789286d982db8e0b6414a5bca014eff59b8aa8"
        ],
        [
            "constructor 1; auto.",
            "VernacExtend",
            "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
        ],
        [
            "apply (necR_PURE w phi') in H1.",
            "VernacExtend",
            "eda16ceacd7b4c0ed741d0c9e2fb25394b45b141"
        ],
        [
            "rewrite H1 in ACCESS; auto.",
            "VernacExtend",
            "4c789286d982db8e0b6414a5bca014eff59b8aa8"
        ],
        [
            "constructor 1; auto.",
            "VernacExtend",
            "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
        ],
        [
            "assert (max_access_cohere m w).",
            "VernacExtend",
            "0b5284dc842162d139d64b585df5afc4f1a6c56e"
        ],
        [
            "intro loc; specialize (MAXA loc).",
            "VernacExtend",
            "c592d902e7d530906b56324e650f410d9d4cc014"
        ],
        [
            "case_eq (w @ loc); intros; auto.",
            "VernacExtend",
            "1c4ca43b01359f023d5b2a8a3366510473c0e82c"
        ],
        [
            "apply (necR_NO w phi') in H2.",
            "VernacExtend",
            "76d32ebdc1cbb97b5f3b7758a72a5cecd0baa2ff"
        ],
        [
            "rewrite H2 in MAXA.",
            "VernacExtend",
            "8720fc6b7a44e8698e5e5fbd87c72dc9be358c40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "constructor 1; auto.",
            "VernacExtend",
            "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
        ],
        [
            "apply (necR_YES w phi') in H2.",
            "VernacExtend",
            "e9b092847dc6e03a1bc81eec53aec7ce2439c802"
        ],
        [
            "rewrite H2 in MAXA; auto.",
            "VernacExtend",
            "ab9fbcf2452c4ce90aa0b514f5f7de834518f816"
        ],
        [
            "constructor 1; auto.",
            "VernacExtend",
            "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
        ],
        [
            "apply (necR_PURE w phi') in H2.",
            "VernacExtend",
            "d24dd354696261bbb9913d42c94edc3f9c5af679"
        ],
        [
            "rewrite H2 in MAXA; auto.",
            "VernacExtend",
            "ab9fbcf2452c4ce90aa0b514f5f7de834518f816"
        ],
        [
            "constructor 1; auto.",
            "VernacExtend",
            "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
        ],
        [
            "assert (alloc_cohere m w).",
            "VernacExtend",
            "b4ab18b53d0ccf0e26a2cfe81feba2784e17c5e4"
        ],
        [
            "intros loc ?.",
            "VernacExtend",
            "cf48ae8e8f423a3add2222c7dd7ae1757ad74f1b"
        ],
        [
            "specialize (ALLOC _ H3).",
            "VernacExtend",
            "5d781d0bdb9ecfda25232dedd4b8af4fc499a1ee"
        ],
        [
            "apply (necR_NO w phi').",
            "VernacExtend",
            "05a88ab2c595f741805cf63a5e9fdd577302927d"
        ],
        [
            "constructor 1; auto.",
            "VernacExtend",
            "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (mkJuicyMem m w H0 H1 H2 H3).",
            "VernacExtend",
            "bbf5b515df90244869009f3803d9f6036b7cbce0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply age1_juicy_mem_unpack''; simpl; auto.",
            "VernacExtend",
            "8e692199176b74641914f73bf66e8cc00e627a99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma writable_perm: forall b i jm, writable (b,i) (m_phi jm) -> Mem.perm (m_dry jm) b i Cur Writable.",
            "VernacStartTheoremProof",
            "dfdaa40488730c995f8853adf65d5f809b92e9cd"
        ],
        [
            "intros until jm; intros H.",
            "VernacExtend",
            "34e28e3b0cbf951eb256de1891746f4791637219"
        ],
        [
            "assert (Hacc := juicy_mem_access jm).",
            "VernacExtend",
            "0199a01bf4fdcf63e25ad19d2e1d15bd08f22ed9"
        ],
        [
            "unfold access_cohere in Hacc.",
            "VernacExtend",
            "fda57091671fa95e4bf2fc25b3f54965994f9d8a"
        ],
        [
            "unfold Mem.perm, Mem.perm_order'.",
            "VernacExtend",
            "3a3278c639652d1b72e934be34e517045635fbc0"
        ],
        [
            "specialize ( Hacc (b, i)).",
            "VernacExtend",
            "5fbea15b9093e0a580e99b7f252586afe4adb144"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct (m_phi jm @ (b, i)).",
            "VernacExtend",
            "5229e07a96b2b2f3a0a1672ebdc930411b3828f3"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "destruct H as [H1 H2].",
            "VernacExtend",
            "c7474c5d52e048046b184a41b5748899e80e4e65"
        ],
        [
            "destruct k; inv H2.",
            "VernacExtend",
            "5d7b123a92d8e23f89651d2ddccf0494b61016d2"
        ],
        [
            "unfold access_at in Hacc.",
            "VernacExtend",
            "b80750d07dd06df672935f5771555c2264af954f"
        ],
        [
            "simpl in Hacc.",
            "VernacExtend",
            "139d71b2c9157182140ca2b712ad65345c3014ab"
        ],
        [
            "rewrite Hacc.",
            "VernacExtend",
            "5aa36c812c5f21e8630eae84edd92c0d641ba0d2"
        ],
        [
            "clear - H1.",
            "VernacExtend",
            "a97560cbbe2cd31ef128e29a3cf251870622f56a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_access_None: forall m ch b b' ofs ofs' p, Mem.valid_access m ch b ofs p -> adr_range (b, ofs) (size_chunk ch) (b', ofs') -> access_at m (b', ofs') Cur = None -> False.",
            "VernacStartTheoremProof",
            "bc09501614fbe8949d555213ab6e669d9401d4ea"
        ],
        [
            "unfold access_at, Mem.valid_access, Mem.perm, Mem.range_perm, Mem.perm, Mem.perm_order'.",
            "VernacExtend",
            "7638a8e884e788637f712935cdd5e012d6100d05"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [H ?].",
            "VernacExtend",
            "c34840c1cda88f2dcdd5b66e2cc04d89e75a5af3"
        ],
        [
            "destruct H0 as [H3 H4].",
            "VernacExtend",
            "92b09c19348239c3b31b78e3edaa70678a565abc"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "specialize( H ofs' H4).",
            "VernacExtend",
            "bed3fadd2af572040995e9a925ac1e3b9ec26418"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma core_load_getN: forall ch v b ofs bl phi m, contents_cohere m phi -> (core_load' ch (b, ofs) v bl)%pred phi -> bl = Mem.getN (size_chunk_nat ch) ofs (PMap.get b (Mem.mem_contents m)).",
            "VernacStartTheoremProof",
            "c87f95380250a1397f3f41aa893bc178c44c2569"
        ],
        [
            "intros until m; intros H0 H.",
            "VernacExtend",
            "a97a69c1ae0e01189d6d23c9e968346188c27d40"
        ],
        [
            "destruct H as [[H3 H4] H].",
            "VernacExtend",
            "33d23d3bfbe7395c7c00b742a84611769e512ba8"
        ],
        [
            "unfold allp, jam in H.",
            "VernacExtend",
            "861f396d81009c832c46b7bcd98663a686d99dc0"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "clear H4.",
            "VernacExtend",
            "b63698fbba7b38f68086944744e776a2fb5bc886"
        ],
        [
            "revert ofs H H3.",
            "VernacExtend",
            "dcfec22b6dac3d4bbc90aedf5e17e80ee73ea2a4"
        ],
        [
            "assert (H: size_chunk_nat ch = nat_of_Z (size_chunk ch)) by auto.",
            "VernacExtend",
            "ac72fd0edd4de858114dafbd98feddd7114795ce"
        ],
        [
            "rewrite H; clear H.",
            "VernacExtend",
            "a60de8fe6903e17bd74acece0951cbb10e6ef842"
        ],
        [
            "generalize (size_chunk ch) as z.",
            "VernacExtend",
            "e1571f7d272aea328eb74ab2b3698b19dd308050"
        ],
        [
            "induction bl; intros; simpl; auto.",
            "VernacExtend",
            "6db71a059a82b9c64c910c6edc4f00e0e3518ddf"
        ],
        [
            "rewrite IHbl with (ofs := ofs + 1) (z := z - 1); auto.",
            "VernacExtend",
            "2f8f97481be2a70e8cdc5b010df90f54dad9e1fb"
        ],
        [
            "rewrite Mem.getN_length.",
            "VernacExtend",
            "4dbe91ea4ae3295fce3029ab2c177631e7016449"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "specialize ( H (b, ofs)).",
            "VernacExtend",
            "33708fcedd6076100adb17c16194e449de69ecf5"
        ],
        [
            "cut (adr_range (b, ofs) z (b, ofs)); [intro H6|].",
            "VernacExtend",
            "a0981b710bba3e27db76f110fb2a29ecf1b4edfa"
        ],
        [
            "destruct (adr_range_dec (b, ofs) z (b, ofs)).",
            "VernacExtend",
            "451e520ee19f71fe7113cd62fcc94b817bc6ff06"
        ],
        [
            "2: elimtype False; auto.",
            "VernacExtend",
            "6efaa75c82fa4a49d0ecf4746dfe84f55cf6c794"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "cut (nat_of_Z (ofs - ofs) = O); [intro H7|].",
            "VernacExtend",
            "9f594638e5ee1eebb078b2f453f55ea94d6b0199"
        ],
        [
            "rewrite H7 in H.",
            "VernacExtend",
            "81aff065b26a671ff405f7680ce44377d2209252"
        ],
        [
            "destruct H as [sh [rsh H]].",
            "VernacExtend",
            "837478cc801230d24a5e854b3c83d6586d0a8f2f"
        ],
        [
            "unfold contents_cohere in H0.",
            "VernacExtend",
            "e774da489e09d3be037e8b58fbbcaa0539478568"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "destruct (H0 _ _ _ _ _ H) as [? _].",
            "VernacExtend",
            "ee86b802041efd07aec265f85cacd7ffad9405a7"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "replace (ofs - ofs) with 0 by omega; auto.",
            "VernacExtend",
            "6228d1e37d856ff496f4bf484fcec387ad8058e1"
        ],
        [
            "unfold adr_range; split; auto.",
            "VernacExtend",
            "d03f8f9ed9f66a2ca0a8ad125a78892cc21838b0"
        ],
        [
            "cut (z > 0).",
            "VernacExtend",
            "36459cdfad82d82f53d098e0e41c974d9aae9832"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "inversion H3.",
            "VernacExtend",
            "129aa425681b58d2ed0d3637122128b1b28fd63b"
        ],
        [
            "cut (z = Z_of_nat (length bl) + 1).",
            "VernacExtend",
            "6399302978139074073c4928e304f539dbd21eaa"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (HS_nat_Z: forall n z, S n = nat_of_Z z -> Z_of_nat n + 1 = z).",
            "VernacExtend",
            "40880f6e5c4d2caeb0dc13732d3848e05672dfc9"
        ],
        [
            "intros n z' H4.",
            "VernacExtend",
            "4b564a441600af0aabd5c90f96dbe1b79bdf62f2"
        ],
        [
            "cut (Z_of_nat 1 = 1).",
            "VernacExtend",
            "082d8e6bc0acd4cb6cb452e15b5e5b6383d9c231"
        ],
        [
            "intro H5.",
            "VernacExtend",
            "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
        ],
        [
            "rewrite <- H5.",
            "VernacExtend",
            "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
        ],
        [
            "rewrite <- inj_plus.",
            "VernacExtend",
            "38264963460e784421807bb3298490bcd7d458f9"
        ],
        [
            "replace (Z_of_nat (n + 1%nat)) with (Z_of_nat (S n)).",
            "VernacExtend",
            "d50fe91dab873838a02703a3262f9df4c48e267c"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "rewrite Coqlib.nat_of_Z_eq; auto.",
            "VernacExtend",
            "f1ed53d4deb1ed44bf5eb965bab974bfc1fefe36"
        ],
        [
            "destruct z'; try solve [omega].",
            "VernacExtend",
            "4e122c2f19d65603cb6327d1f0b4b271dde94da7"
        ],
        [
            "inversion H4.",
            "VernacExtend",
            "184e412874313f14014d688ef3b69568302d00ff"
        ],
        [
            "rewrite <- nat_of_P_o_P_of_succ_nat_eq_succ in H6.",
            "VernacExtend",
            "23c802e884341db06086b35b016e08c6474ee419"
        ],
        [
            "rewrite Zpos_eq_Z_of_nat_o_nat_of_P.",
            "VernacExtend",
            "fcd2cac1c936b65742c5af3307259383cd66d194"
        ],
        [
            "rewrite <- H6.",
            "VernacExtend",
            "87f0bbdef7718e8c7d1d8eeab2d9828935bcf389"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "simpl in H4.",
            "VernacExtend",
            "31358c428a532f17f4c3cd16100d65b9f5ba8243"
        ],
        [
            "inv H4.",
            "VernacExtend",
            "901a2034cad394e040195b9b10020bf0a16b908e"
        ],
        [
            "idtac.",
            "VernacExtend",
            "31a9516ab7a0061b876094f40f8973273413025d"
        ],
        [
            "replace (plus n (S 0)) with (S n).",
            "VernacExtend",
            "b1171f0849c1ac013aae22778e4f9b4f4643dbbb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "symmetry; apply HS_nat_Z; auto.",
            "VernacExtend",
            "7826c88357d4b4e97a3fe2b3b5c9f97c1949956f"
        ],
        [
            "intros loc'.",
            "VernacExtend",
            "528c286184ea5dbf57dccb486d628cf899ba6f17"
        ],
        [
            "specialize (H loc').",
            "VernacExtend",
            "3cc36d1ff95d580634bd110292610ebd0056659a"
        ],
        [
            "cut ( adr_range (b, ofs + 1) (z - 1) loc' -> adr_range (b, ofs) z loc').",
            "VernacExtend",
            "5287222416eb8d6da7cf3a8f40f4ba665b636ecb"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "destruct (adr_range_dec (b, ofs + 1) (z - 1) loc').",
            "VernacExtend",
            "865585eda4e76b84e62c38df4dc77fff11e9be07"
        ],
        [
            "destruct (adr_range_dec (b, ofs) z loc').",
            "VernacExtend",
            "e5ce72890bd082d277672e08af6fbf5a688e8e1a"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "case_eq (nat_of_Z (snd loc' - ofs)).",
            "VernacExtend",
            "c8f15d5ec9dfcd68520582e4f73ecb5af1fae5a0"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "destruct loc' as (b', ofs').",
            "VernacExtend",
            "fbcc25c90fe535466427c901d599cda0ae460072"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "cut (ofs' > ofs).",
            "VernacExtend",
            "5eeec743e029d411087ee11b3bc2b93116e45e6d"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "cut (exists p, ofs' - ofs = Zpos p).",
            "VernacExtend",
            "e409e21983ad480b4449556f9d58b8ed7adb10c4"
        ],
        [
            "intros [p H5].",
            "VernacExtend",
            "197ef2612a6dfbf41989c5645c1af0881a026c64"
        ],
        [
            "unfold nat_of_Z in H2.",
            "VernacExtend",
            "db797473809f7b3eb62a3511cef46a070d59a513"
        ],
        [
            "rewrite H5 in H2.",
            "VernacExtend",
            "faa2464cf13a21d1e8705f16677ea4aa949a426b"
        ],
        [
            "unfold nat_of_P in H2.",
            "VernacExtend",
            "fd13b1a38f45d0fe657897da2c6a26733409d123"
        ],
        [
            "generalize (le_Pmult_nat p 1) as H6; intro.",
            "VernacExtend",
            "649e2b4e3aea9f5b142864d30ffd870788800a64"
        ],
        [
            "rewrite Pmult_nat_mult in H6.",
            "VernacExtend",
            "9e90efed5d81e935daedb94db843fe66e21df2a6"
        ],
        [
            "rewrite mult_1_r in H6.",
            "VernacExtend",
            "4ab3894962d67020f01992673ce9bd740a47be4d"
        ],
        [
            "change (Pos.to_nat p) with (Z.to_nat (Z.pos p)) in H6.",
            "VernacExtend",
            "c9c2c91f54f3dd5027066e160c19dcb1a579f9a3"
        ],
        [
            "rewrite H2 in H6.",
            "VernacExtend",
            "d7ac31e4d66e2237b6d96219caf30514d41bf24a"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "assert (ofs' - ofs > 0).",
            "VernacExtend",
            "d0b4afb9dd39313e12a0a28481cb84911e9ba992"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (forall z, z > 0 -> exists p, z = Zpos p).",
            "VernacExtend",
            "93e4088aae35bcd2ce08680dece9b8bcd2b7ace2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists n, nat_of_Z z0 = S n).",
            "VernacExtend",
            "6d794be6505c823302d58b2e9e3f85094a73a59f"
        ],
        [
            "exists (nat_of_Z (z0 - 1)).",
            "VernacExtend",
            "aaea36e047665c0da8cab2303b9a678cc7ad97f4"
        ],
        [
            "destruct z0; try solve [inv H6].",
            "VernacExtend",
            "37f106222effbffcbb0c3ee13c8c9dd061f3a213"
        ],
        [
            "destruct p; auto.",
            "VernacExtend",
            "94280b3a49c08b76852fac1fca3c7461587f918a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "change (nat_of_P p~0 = S (nat_of_P (p~0 - 1))).",
            "VernacExtend",
            "456964c3d46def521aaa3993f402fa620e99fd73"
        ],
        [
            "rewrite <- nat_of_P_succ_morphism.",
            "VernacExtend",
            "87d7e4f5140dce3accf8bec7366a3a781562a5da"
        ],
        [
            "rewrite <- Ppred_minus.",
            "VernacExtend",
            "3e6a551bc1366279ee3b2b9ed4129eb469f452f2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Psucc_o_double_minus_one_eq_xO.",
            "VernacExtend",
            "3a5d3f59ca5112726965e79ea5de4f3897d3331a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct H7 as [n ?].",
            "VernacExtend",
            "f296c3a8d8dc13c3766c9cbe3d6be252454d3837"
        ],
        [
            "exists (P_of_succ_nat n).",
            "VernacExtend",
            "74cc02170323e8858acfb44e3c19ae35af0a929a"
        ],
        [
            "rewrite Zpos_P_of_succ_nat.",
            "VernacExtend",
            "6a4c2af16ce4d37393ed4fdea70252e40197d360"
        ],
        [
            "rewrite <- inj_S.",
            "VernacExtend",
            "b6950ccc5c677059053aae73b6f88af880010a2f"
        ],
        [
            "rewrite <- H7.",
            "VernacExtend",
            "15eb34513c3298e9d5b8731fdb6616cb0a4f6a80"
        ],
        [
            "rewrite Coqlib.nat_of_Z_eq.",
            "VernacExtend",
            "7befd3e0b41e6fbe983869cd8c379a7f7eb18e6b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply H6; auto.",
            "VernacExtend",
            "991b52fa2aa4a421e14189d20a004b7bf8b46321"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros n H2.",
            "VernacExtend",
            "097661148cd5ae983b19f4050842030005ff7139"
        ],
        [
            "rewrite H2 in H.",
            "VernacExtend",
            "5c57065bc35a25df99bc7f4746a61a8b7705ac48"
        ],
        [
            "assert (nat_of_Z (snd loc' - (ofs + 1)) = n).",
            "VernacExtend",
            "4e57a8fcaeb50c83b96aa3d8815e7aaa8b0e5c56"
        ],
        [
            "destruct loc'.",
            "VernacExtend",
            "e689a9ec47f833fe677774b7508cca27b5d7b1ad"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "assert (Z_of_nat (nat_of_Z (z0 - ofs)) = Z_of_nat (S n)).",
            "VernacExtend",
            "0af1331e5228d81cad08d554227f986dd1458fd9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (z0 - ofs > 0).",
            "VernacExtend",
            "6af4605b1912c47b3fe16ece13935e7330024a52"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Coqlib.nat_of_Z_eq in H4; try solve [omega].",
            "VernacExtend",
            "235c003254d7eb06e14af57bf1ddb1b2962a1e0b"
        ],
        [
            "replace (z0 - (ofs + 1)) with (z0 - ofs - 1) by omega.",
            "VernacExtend",
            "d4999bc4d2a17dad7077953a7388d0b0f789dc74"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "destruct n; try solve [simpl; omega].",
            "VernacExtend",
            "866aeb2650172563f60c7629a6aa96666d21913d"
        ],
        [
            "replace (Z_of_nat (S (S n)) - 1) with (Z_of_nat (S n)).",
            "VernacExtend",
            "92b2ee7e7d62158ddb6ad8b932bca53f50f01aeb"
        ],
        [
            "rewrite nat_of_Z_eq.",
            "VernacExtend",
            "0f6e1f78e813484783696c49ba7561b792e0da93"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (Z_of_nat (S n)) with (Zpos (P_of_succ_nat n)) by auto.",
            "VernacExtend",
            "45c09159f48f973658f42158faf6852a131989d8"
        ],
        [
            "replace (Z_of_nat (S (S n))) with (Zpos (P_of_succ_nat (S n))) by auto.",
            "VernacExtend",
            "39b34e14cf51a276ddb0fa357329043cb4b0f9d0"
        ],
        [
            "do 2 rewrite Zpos_P_of_succ_nat.",
            "VernacExtend",
            "0aa24fdb73db6fa4b8a1faeb7e5b4efbbece10bb"
        ],
        [
            "replace (Z.succ (Z_of_nat (S n)) - 1) with (Z_of_nat (S n)) by omega.",
            "VernacExtend",
            "0e65fd19464aa33571c38f1f66ebda46f0761829"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Zpos_P_of_succ_nat.",
            "VernacExtend",
            "6a4c2af16ce4d37393ed4fdea70252e40197d360"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold adr_range.",
            "VernacExtend",
            "b0e528febe3305fcc3909e875d29c117ccd363ea"
        ],
        [
            "destruct loc' as (b', ofs').",
            "VernacExtend",
            "fbcc25c90fe535466427c901d599cda0ae460072"
        ],
        [
            "intros [H1 H2].",
            "VernacExtend",
            "0ae6198f19882a3028e7ce40d84662e28da622ee"
        ],
        [
            "split; auto || omega.",
            "VernacExtend",
            "ae24e38304a7bb65a5a92987d15e9a817815c6e8"
        ],
        [
            "inversion H3.",
            "VernacExtend",
            "129aa425681b58d2ed0d3637122128b1b28fd63b"
        ],
        [
            "assert (z > 0).",
            "VernacExtend",
            "9c2ac5d225befe4472112994d0411c95002cffed"
        ],
        [
            "assert (forall n z, S n = nat_of_Z z -> z > 0).",
            "VernacExtend",
            "87f15b274e0142ca47a62793520ed27eda382050"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct z0; try solve [inv H1].",
            "VernacExtend",
            "b6bca3042fb2877261163d92cee216671c880548"
        ],
        [
            "apply Zgt_pos_0.",
            "VernacExtend",
            "ee9eede62f81f850b5b174d93142e52a6ebddcae"
        ],
        [
            "eapply H1; eauto.",
            "VernacExtend",
            "a39b28d1af95bbb3acaf075e03f3a2ae4b6f7cab"
        ],
        [
            "assert (z - 1 >= 0).",
            "VernacExtend",
            "998b78ded7e2ee4fcf161c5cfc060fdf70c584fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (Z_of_nat (S (length bl)) = Z_of_nat (nat_of_Z z)).",
            "VernacExtend",
            "e516cdf88d9232643d090bcaff2e735b7546a922"
        ],
        [
            "rewrite Coqlib.nat_of_Z_eq; try solve [omega].",
            "VernacExtend",
            "88cf97ebee4177f68523e4f20b165f949c1ade76"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite Coqlib.nat_of_Z_eq; try solve [omega].",
            "VernacExtend",
            "88cf97ebee4177f68523e4f20b165f949c1ade76"
        ],
        [
            "rewrite Coqlib.nat_of_Z_eq in H5; try solve [omega].",
            "VernacExtend",
            "24128ae6b96a895cc0d8e31aca06409ff8d9dd4b"
        ],
        [
            "rewrite <- H5.",
            "VernacExtend",
            "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
        ],
        [
            "rewrite inj_S.",
            "VernacExtend",
            "d9f39a95338187eacc0449352f36ed1a3018cf13"
        ],
        [
            "assert (forall z, Z.succ z - 1 = z) by (intros; omega).",
            "VernacExtend",
            "d223a4fc5dc09255a504319d6441cfaf8f9b04f5"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "rewrite nat_of_Z_eq.",
            "VernacExtend",
            "0f6e1f78e813484783696c49ba7561b792e0da93"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma core_load_valid: forall ch v b ofs m phi, (core_load ch (b, ofs) v)%pred phi -> access_cohere m phi -> Mem.valid_access m ch b ofs Readable.",
            "VernacStartTheoremProof",
            "20414172311578422637c829ab1337b587c3d682"
        ],
        [
            "intros until phi; intros H H0.",
            "VernacExtend",
            "692d249b90a487d4e04bbd3a02b7ef233f276dc2"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "destruct H as [bl [[H1 [H2 Halign]] H]].",
            "VernacExtend",
            "d63eeeddddc86a1166b2a52f1e6253af36f3a24f"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros ofs' H4.",
            "VernacExtend",
            "29d349e27a6cd88f8ae8fba5e3aeb017dad5b1ed"
        ],
        [
            "specialize (H (b, ofs')).",
            "VernacExtend",
            "8665ceb8260713a4801a948137f8ecc6ceb13b00"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "destruct (adr_range_dec (b, ofs) (size_chunk ch) (b, ofs')) as [H5|H5].",
            "VernacExtend",
            "5dfb25e931f66cc574752433a1cb2d7a2a9e7556"
        ],
        [
            "2: unfold adr_range in H5.",
            "VernacExtend",
            "9db9e768cb3e8f665cda5895eecca3080e874d12"
        ],
        [
            "2: elimtype False; apply H5; split; auto.",
            "VernacExtend",
            "45870cdf893819f5dab93cb91aea06002edb320f"
        ],
        [
            "destruct H as [sh [rsh H]].",
            "VernacExtend",
            "837478cc801230d24a5e854b3c83d6586d0a8f2f"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "unfold access_cohere in H0.",
            "VernacExtend",
            "c53b07520207b6ee497a497dd5cf60a9fa03bec1"
        ],
        [
            "specialize (H0 (b, ofs')).",
            "VernacExtend",
            "60899ceee7dc9b5271fcea5471f0f88f1774c827"
        ],
        [
            "unfold Mem.perm, Mem.perm_order'.",
            "VernacExtend",
            "3a3278c639652d1b72e934be34e517045635fbc0"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "unfold access_at in H0.",
            "VernacExtend",
            "cb18fcc1d5a3c28f924a0f275e8501708c534e69"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "destruct ((mem_access m) !! b ofs' Cur).",
            "VernacExtend",
            "18f5fba46b5024944b1d2fa9315d64b5e870fd3b"
        ],
        [
            "clear - H0 rsh.",
            "VernacExtend",
            "40c2d851742f198f0059c9a2764d0292fd268d50"
        ],
        [
            "unfold perm_of_sh in H0.",
            "VernacExtend",
            "2a9783dc235d51d3b681c76881257d17aaebef6f"
        ],
        [
            "if_tac in H0.",
            "VernacExtend",
            "15f9266c5365480e9bc3c0c2843ecd43267959df"
        ],
        [
            "if_tac in H0; inv H0; constructor.",
            "VernacExtend",
            "89b163aac85dd40d414857115383d61dd5f7a5b3"
        ],
        [
            "rewrite if_true in H0.",
            "VernacExtend",
            "4573f942288cf3a19d49130b64ee51446df02d4e"
        ],
        [
            "inv H0; constructor.",
            "VernacExtend",
            "65a6f82f5ab24c83c9fb3360961716e776dc4b66"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "clear - rsh H0.",
            "VernacExtend",
            "ac30bae80bd7af7ea038d7161f7121c9ea3c8a66"
        ],
        [
            "unfold perm_of_sh in H0.",
            "VernacExtend",
            "2a9783dc235d51d3b681c76881257d17aaebef6f"
        ],
        [
            "repeat if_tac in H0; inv H0.",
            "VernacExtend",
            "a6d7d3c5a56fe2ba23d2ced8f5ddfa10c1934b47"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma core_load_load': forall ch b ofs v m, core_load ch (b, ofs) v (m_phi m) -> Mem.load ch (m_dry m) b ofs = Some v.",
            "VernacStartTheoremProof",
            "f800ba214bab57f155997371d93b25b77b2e072e"
        ],
        [
            "intros until m; intros H.",
            "VernacExtend",
            "6e78991c0ec4dea645e38380601a51b33bc1c077"
        ],
        [
            "generalize H as Hcore_load; intro.",
            "VernacExtend",
            "28df2a9f234184e427e64067a66e1eb8877180ff"
        ],
        [
            "Transparent Mem.load.",
            "VernacSetOpacity",
            "cb4386ed2df74adeacf0fd1828a2ae19d4cfeb2e"
        ],
        [
            "unfold core_load in H; unfold Mem.load.",
            "VernacExtend",
            "98b40fb698d15ad912d0c19f7cd0078ea759f8ed"
        ],
        [
            "unfold allp, jam in H.",
            "VernacExtend",
            "861f396d81009c832c46b7bcd98663a686d99dc0"
        ],
        [
            "destruct H as [bl [[H0 [H1 Halign]] H]].",
            "VernacExtend",
            "19081a99f96a5b6a2a36fdd9cb02d018283a3608"
        ],
        [
            "assert (H3 := juicy_mem_contents m).",
            "VernacExtend",
            "880d7740b18edd0452e3f7ada13b125270c41b52"
        ],
        [
            "pose proof I.",
            "VernacExtend",
            "abc787e9ace0638243c51c43605b46fde630e9f6"
        ],
        [
            "pose proof I.",
            "VernacExtend",
            "abc787e9ace0638243c51c43605b46fde630e9f6"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "generalize (core_load_getN ch v b ofs bl (m_phi m) (m_dry m) H3) as H7; intro.",
            "VernacExtend",
            "26c097827a117eaf5141ebdc5b5a641e97cb6497"
        ],
        [
            "rewrite <- H7; auto.",
            "VernacExtend",
            "406504592306b63cc5a1938ea01009d8641da306"
        ],
        [
            "unfold core_load'.",
            "VernacExtend",
            "ee40ce393ae29b796cede933d495f1d1d2ed43af"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "eapply core_load_valid; eauto.",
            "VernacExtend",
            "2a7f47b46704924cb3075e362c5f75b633a69362"
        ],
        [
            "apply juicy_mem_access.",
            "VernacExtend",
            "9bfc0d667630656dd4780c00f0a7a4174979ded0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zminus_lem: forall z1 z2, z1 <= z2 -> nat_of_Z (z2 - z1) = O -> z1=z2.",
            "VernacStartTheoremProof",
            "5f45e5ed8963d3ce0209a405e341e1612025cfe7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (z2 - z1).",
            "VernacExtend",
            "1f943403b128a54036b8aa80e2ef91cf972ec2e2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "symmetry; apply Zminus_eq; auto.",
            "VernacExtend",
            "08d0fc5928003649246cc921e9f1f1be61552d4e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (lt_O_nat_of_P p).",
            "VernacExtend",
            "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Zlt_neg_0 p).",
            "VernacExtend",
            "637d02490871fb9f59e7a41d516d8a7ba03ab3bd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_of_Z_lem1: forall n z, S n = nat_of_Z z -> n = nat_of_Z (z - 1).",
            "VernacStartTheoremProof",
            "817e4c7eaf5dc4b86175598c5b570ff64c767b02"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct z; try solve [inv H].",
            "VernacExtend",
            "d63e3e9aa09f2c31cddd1060f915149bd985822d"
        ],
        [
            "generalize (lt_O_nat_of_P p).",
            "VernacExtend",
            "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case_eq (Zpos p - 1).",
            "VernacExtend",
            "326351c2626655e772e5240e251548f6ed12627a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Zpos p = 1) by omega.",
            "VernacExtend",
            "446aaf993eb4783e2fcdc849125943e3b0f2780c"
        ],
        [
            "rewrite H2 in H.",
            "VernacExtend",
            "5c57065bc35a25df99bc7f4746a61a8b7705ac48"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Zpos p = Zpos p0 + 1) by omega.",
            "VernacExtend",
            "b6b266593b5fa471cef2a5718dc3674c4d001494"
        ],
        [
            "rewrite H2 in H.",
            "VernacExtend",
            "5c57065bc35a25df99bc7f4746a61a8b7705ac48"
        ],
        [
            "rewrite nat_of_Z_plus in H; try omega.",
            "VernacExtend",
            "88645e9025561fdddb9ed4e9e94450ea4e63c0e7"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (forall m n, S m = n + 1 -> m = n)%nat.",
            "VernacExtend",
            "bd661569947a92efd06cbdd4831597f8ced27ae8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply H3; auto.",
            "VernacExtend",
            "22ff15660c2558c792e23d36c3bbf8c255cb56ba"
        ],
        [
            "generalize (lt_O_nat_of_P p0).",
            "VernacExtend",
            "dc4a63b88395c5c00ce9abeb6be0b152132a50aa"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite Zpos_eq_Z_of_nat_o_nat_of_P.",
            "VernacExtend",
            "fcd2cac1c936b65742c5af3307259383cd66d194"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Zpos p = Zneg p0 + 1) by omega.",
            "VernacExtend",
            "369ec9b5e3392bf5ccd701acf3cdba97590751b8"
        ],
        [
            "assert (Zpos p > 0) by (rewrite Zpos_eq_Z_of_nat_o_nat_of_P; omega).",
            "VernacExtend",
            "ae5a893474fb3e59592bc33b9c11cfd5033f3bd3"
        ],
        [
            "generalize (Zlt_neg_0 p0).",
            "VernacExtend",
            "e54f236f82030cc86dd3cd27ff11e2fa61c077de"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_of_Z_lem2: forall n z1 z2, S n = nat_of_Z (z1 - z2) -> n = nat_of_Z (z1 - z2 - 1).",
            "VernacStartTheoremProof",
            "88fd34863456c3e388bfb38763c944cb6ba87ea6"
        ],
        [
            "intros; apply nat_of_Z_lem1; auto.",
            "VernacExtend",
            "fe7275a62e78cc5735c4740e02aa345f202217b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_getN: forall m b ofs ofs' z, ofs <= ofs' < ofs + z -> z >= 0 -> contents_at m (b, ofs') = nth (nat_of_Z (ofs' - ofs)) (Mem.getN (nat_of_Z z) ofs (PMap.get b (Mem.mem_contents m))) Undef.",
            "VernacStartTheoremProof",
            "0458f7dbfe7a300f6cbfcd3ec5aacdd4d915a56e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert ofs ofs' H H0.",
            "VernacExtend",
            "25b343414f633cea23f6e429933695345adf9fd1"
        ],
        [
            "remember (nat_of_Z z) as n.",
            "VernacExtend",
            "f9a2a427493b1e9215e19d02303ab4173996181b"
        ],
        [
            "revert n z Heqn.",
            "VernacExtend",
            "46fa20e751a9d719186c9b0d8955cb78df5c0bdf"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "destruct z.",
            "VernacExtend",
            "7ad6537de6adc4973a413756c31bffcd5e25902c"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "generalize (lt_O_nat_of_P p).",
            "VernacExtend",
            "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "generalize (Zlt_neg_0 p).",
            "VernacExtend",
            "637d02490871fb9f59e7a41d516d8a7ba03ab3bd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq (nat_of_Z (ofs' - ofs)).",
            "VernacExtend",
            "92c8f7de74041158e82b8587f1364a2fbd35cb19"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (ofs = ofs').",
            "VernacExtend",
            "e40f1fe325da11e781345d94c0b496dbdf25e8e7"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply Zminus_lem; auto.",
            "VernacExtend",
            "0f66a187089c944d07cb0a560584136fec9d493b"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry in H1.",
            "VernacExtend",
            "f7b1eec3579cf9c7bc576c77a03265fe014ab9a1"
        ],
        [
            "assert (n = nat_of_Z (z - 1)) by (apply nat_of_Z_lem1 in Heqn; auto).",
            "VernacExtend",
            "5f48455189e195aa93bb38cf7d1dc9fcce940616"
        ],
        [
            "rewrite (IHn (z - 1) H2 (ofs + 1)); try solve [auto|omega].",
            "VernacExtend",
            "5cefad4cdcb062f3f930ce05ea91484cd55bd174"
        ],
        [
            "assert (nat_of_Z (ofs' - (ofs + 1)) = n0).",
            "VernacExtend",
            "cb566b651505685d861c73ce49b90cc0978df661"
        ],
        [
            "replace (ofs' - (ofs + 1)) with (ofs' - ofs - 1) by omega.",
            "VernacExtend",
            "7a31435b68d0472d08e87487b8526c66f2f086c8"
        ],
        [
            "apply nat_of_Z_lem1 in H1.",
            "VernacExtend",
            "af5055d2c80bc0f4e551a467c6ee9851ac94446c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H3; auto.",
            "VernacExtend",
            "81f0b52fdaf5f5da8eefafd4263db88cb26c67d0"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "case_eq (ofs' - ofs).",
            "VernacExtend",
            "8934502898b365acc73cf7b33ba8a14085f2108b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H4 in H1.",
            "VernacExtend",
            "8c5b5df9fad672e6e5e81d3d0efb0ec2ed09e9bf"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "7549fbb600c3af6072a6d21bdcba999a253a2e01"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H4 in H1.",
            "VernacExtend",
            "8c5b5df9fad672e6e5e81d3d0efb0ec2ed09e9bf"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "generalize (lt_O_nat_of_P p).",
            "VernacExtend",
            "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (1 <= ofs' - ofs).",
            "VernacExtend",
            "32d9b3e676aa08d952ced2afc471c07c7ba6fb7f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "generalize (Zpos_eq_Z_of_nat_o_nat_of_P p).",
            "VernacExtend",
            "cde619929afedfe54513a1e38852f81624a9a8d5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Zlt_neg_0 p).",
            "VernacExtend",
            "637d02490871fb9f59e7a41d516d8a7ba03ab3bd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma load_core_load: forall ch b ofs v m, Mem.load ch (m_dry m) b ofs = Some v -> (forall z, ofs <= z < ofs + size_chunk ch -> perm_order'' (perm_of_res (m_phi m @ (b,z))) (Some Readable)) -> core_load ch (b, ofs) v (m_phi m).",
            "VernacStartTheoremProof",
            "f982884a8143b86a99072dd70eda2850fe0395a8"
        ],
        [
            "intros until m; intros H PERM.",
            "VernacExtend",
            "9f95c26f86fbc6035b56aef31998834bf6bfe0d3"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "unfold Mem.load in H.",
            "VernacExtend",
            "b294f49c1cf48ee036bb886bebf036c9ec4a40b3"
        ],
        [
            "if_tac in H; try solve [inv H].",
            "VernacExtend",
            "b6d3f50d5e8209d95c307f70e0188d5a03c988f3"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "exists (Mem.getN (size_chunk_nat ch) ofs (PMap.get b (Mem.mem_contents (m_dry m)))).",
            "VernacExtend",
            "c0d8cf88fa72224e67a7b9a94e43ef6033cad286"
        ],
        [
            "generalize H0 as H0'; intro.",
            "VernacExtend",
            "fb6e301352cf99bc234914117a382a61a6c2f864"
        ],
        [
            "Local Hint Resolve Mem.getN_length.",
            "VernacHints",
            "6d2fc0a48ca26e720ff989a2be2a970292857fc2"
        ],
        [
            "unfold Mem.valid_access in H0'.",
            "VernacExtend",
            "281655dffc50084fd4f72ddf766275a6e5ad5bf1"
        ],
        [
            "destruct H0' as [H0'1 H0'2].",
            "VernacExtend",
            "86fb92e4f7c2354b26bc3124913fe4975091cfa3"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "clear H0'1 H0'2.",
            "VernacExtend",
            "20a663a4ccdd6832f258adfcc53aa3420f7bb7a9"
        ],
        [
            "intros (b', ofs').",
            "VernacExtend",
            "159d52740e241ab06446bd661368bcbae3f1d8d3"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "if_tac; hnf; auto.",
            "VernacExtend",
            "e57cddd4a7133bc4a5b888d9e7337768bfa0dcd5"
        ],
        [
            "assert (Heqbb': b = b').",
            "VernacExtend",
            "bbc0295deb001984a19e53bb72a2ca44e619f4d5"
        ],
        [
            "unfold adr_range in H.",
            "VernacExtend",
            "c83f1b7682d9a15ef3d1a3fb437f535a090fb8d4"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "pose proof (juicy_mem_contents m).",
            "VernacExtend",
            "ddd217afcf8b7d59e9ea1124f44c89c0afd6646d"
        ],
        [
            "pose proof I.",
            "VernacExtend",
            "abc787e9ace0638243c51c43605b46fde630e9f6"
        ],
        [
            "pose proof I.",
            "VernacExtend",
            "abc787e9ace0638243c51c43605b46fde630e9f6"
        ],
        [
            "pose proof I.",
            "VernacExtend",
            "abc787e9ace0638243c51c43605b46fde630e9f6"
        ],
        [
            "clear H4.",
            "VernacExtend",
            "b63698fbba7b38f68086944744e776a2fb5bc886"
        ],
        [
            "subst b'; clear H5.",
            "VernacExtend",
            "1fa0a023b007c9b077b8786e9a3945897fe5d64f"
        ],
        [
            "destruct H as [_ ?].",
            "VernacExtend",
            "5045e662bf6d349113786389a91ca10008129578"
        ],
        [
            "specialize (PERM ofs' H).",
            "VernacExtend",
            "1e6dd8bcb8444c9fe9c80778fafe1ffb1e223009"
        ],
        [
            "unfold perm_of_res in *.",
            "VernacExtend",
            "3a70e4076fe6c6e063354b05356fcb252c96cbe8"
        ],
        [
            "destruct H0 as [H0 _].",
            "VernacExtend",
            "8f90a517b7ad9a1408dfe16cf81bc54ee151a50e"
        ],
        [
            "specialize (H0 ofs').",
            "VernacExtend",
            "08da8cfc51cd284b776298d45fbd624cae5d919f"
        ],
        [
            "specialize (H0 H).",
            "VernacExtend",
            "e3763637041cd8aa415aa3fb72b88309ab3b5b20"
        ],
        [
            "hnf in H0.",
            "VernacExtend",
            "ef2ef5338fe3c3f98be9c585e08b6598bfd5a754"
        ],
        [
            "destruct ((mem_access (m_dry m)) !! b ofs' Cur); try contradiction.",
            "VernacExtend",
            "a6e3eedd6bcd1fc7c9a064d89d4b32bd5534e406"
        ],
        [
            "destruct (m_phi m @ (b, ofs')) eqn:H8; try contradiction.",
            "VernacExtend",
            "562ed341f51f8c62489104be3a60bab94b4af5db"
        ],
        [
            "if_tac in PERM; inv PERM.",
            "VernacExtend",
            "c886c4f828f86b0414a534de7e94b077c5c1bb94"
        ],
        [
            "destruct k; try now inv PERM.",
            "VernacExtend",
            "d2219e1a50fb8a4b244f41b30cbfe63b7b0d397c"
        ],
        [
            "pose proof (size_chunk_pos ch).",
            "VernacExtend",
            "0a00b3511ad2d13c58e5f74906599c88fe621d5b"
        ],
        [
            "rewrite <- nth_getN with (ofs := ofs) (z := size_chunk ch); auto; try omega.",
            "VernacExtend",
            "fdccb7c4e4284e6486950766e2dc072ed179300f"
        ],
        [
            "exists sh, r.",
            "VernacExtend",
            "57989b8edc9f18d2c86f1288336c94155bbda5c2"
        ],
        [
            "destruct (H1 _ _ _ _ _ H8); subst.",
            "VernacExtend",
            "cc048a81bb36de2ec8adff6ef27a94e803ee2371"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "inv PERM.",
            "VernacExtend",
            "c0072e3d1fbc1cfd26f8f9c2102e08854b90c4a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma core_load_load: forall ch b ofs v m, (forall z, ofs <= z < ofs + size_chunk ch -> perm_order'' (perm_of_res (m_phi m @ (b,z))) (Some Readable)) -> (core_load ch (b, ofs) v (m_phi m) <-> Mem.load ch (m_dry m) b ofs = Some v).",
            "VernacStartTheoremProof",
            "7a2117eb47023fdb73f600b1846b92ea78aa330c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; [apply core_load_load'| ].",
            "VernacExtend",
            "42cd65916f6e0b9e87bd5020ba9345b19ce92f05"
        ],
        [
            "intros; apply load_core_load; auto.",
            "VernacExtend",
            "9c078f8817778ea1d7d3711931766406aaac7980"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapsto_valid_access: forall ch v sh b ofs jm, (address_mapsto ch v sh (b, ofs) * TT)%pred (m_phi jm) -> Mem.valid_access (m_dry jm) ch b ofs Readable.",
            "VernacStartTheoremProof",
            "9bfb0c3319ef4a63fd68f8cdae764f99d83a6c37"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold address_mapsto in H.",
            "VernacExtend",
            "aa2ed75efbf00ac90dc094ca1ce4f4d9ab4502e5"
        ],
        [
            "unfold Mem.valid_access, Mem.range_perm.",
            "VernacExtend",
            "e9a0f77d0b780c1ae1d39dfb4b24ce69bff488fc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "destruct H as [x [y [Hjoin ?]]].",
            "VernacExtend",
            "e8d126363d43a889890993ad3f07d4501c62081e"
        ],
        [
            "destruct H as [[bl [[[H2 [H3 H3']] H] Hg]] ?].",
            "VernacExtend",
            "561df8cf69e8b8ee092140cef850a2d82b82c8dd"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "intros ofs' H4.",
            "VernacExtend",
            "29d349e27a6cd88f8ae8fba5e3aeb017dad5b1ed"
        ],
        [
            "specialize (H (b, ofs')).",
            "VernacExtend",
            "8665ceb8260713a4801a948137f8ecc6ceb13b00"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "destruct (adr_range_dec (b, ofs) (size_chunk ch) (b, ofs')) as [H5|H5].",
            "VernacExtend",
            "5dfb25e931f66cc574752433a1cb2d7a2a9e7556"
        ],
        [
            "2: unfold adr_range in H5.",
            "VernacExtend",
            "9db9e768cb3e8f665cda5895eecca3080e874d12"
        ],
        [
            "2: elimtype False; apply H5; split; auto.",
            "VernacExtend",
            "45870cdf893819f5dab93cb91aea06002edb320f"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "destruct H as [pf H].",
            "VernacExtend",
            "4f8c6714e49a0800f61bf466006a367840298631"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "rewrite preds_fmap_NoneP in H.",
            "VernacExtend",
            "71229b3fc1b671c8fa61e188204b15a8f846c3da"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "generalize (resource_at_join _ _ _ (b,ofs') Hjoin); rewrite H; intro.",
            "VernacExtend",
            "61cb4e9ac84ef2f847ea60ee7894efd4499957fb"
        ],
        [
            "forget ((nth (nat_of_Z (ofs' - ofs)) bl Undef)) as v'.",
            "VernacExtend",
            "636b21dfaf7ea1ecb8026a625da56a03e9190855"
        ],
        [
            "assert (exists rsh', exists sh', m_phi jm @ (b,ofs') = YES rsh' sh' (VAL v') NoneP).",
            "VernacExtend",
            "804017e5594acc9cd14190dfe96e73bfecbd19cc"
        ],
        [
            "inv H1; eauto.",
            "VernacExtend",
            "47e0563d72ad903860bb9b3e9e3aa4f1671c7415"
        ],
        [
            "destruct H6 as [rsh' [sh' ?]].",
            "VernacExtend",
            "fde33ab9b21abad340448fbcc5944fa05ff0e4b7"
        ],
        [
            "generalize (juicy_mem_access jm (b,ofs')); rewrite H6; unfold perm_of_res; simpl; intro.",
            "VernacExtend",
            "b08e6b016ca3314f72a30ddef8630d50734f6cc3"
        ],
        [
            "clear - H7 sh'.",
            "VernacExtend",
            "bae91acbf34269333433f0bcd1c33582eba0cbe6"
        ],
        [
            "unfold perm, access_at in *.",
            "VernacExtend",
            "6d8dbfeea686210d9868b109d0ba4f2d6c8dbe12"
        ],
        [
            "simpl in H7.",
            "VernacExtend",
            "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
        ],
        [
            "forget ((mem_access (m_dry jm)) !! b ofs' Cur) as p1.",
            "VernacExtend",
            "a98296582ef6809663f9a7d642e30d17310b7e0b"
        ],
        [
            "unfold perm_of_sh in H7.",
            "VernacExtend",
            "eb6e68e4be47e96bcf05b80bbf804cd4519b864e"
        ],
        [
            "if_tac in H7.",
            "VernacExtend",
            "abf4f505a06789f9ffe70d83212682116d8c3110"
        ],
        [
            "if_tac in H7; inv H7; constructor.",
            "VernacExtend",
            "afe5741a233bc788c911a22d884d8f9e1c018574"
        ],
        [
            "rewrite if_true in H7 by auto.",
            "VernacExtend",
            "af1282187da70e0f0ccd665a8c9cf98ef26db1b8"
        ],
        [
            "subst; constructor.",
            "VernacExtend",
            "2a34d406b44c0249e6d528ed9fbda3887e9b4712"
        ],
        [
            "repeat match goal with [ H: context[ _ /\\ _ ] |- _] => destruct H end.",
            "VernacExtend",
            "056524b31928c37bb75b933ab6ceedf7caf126e8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapsto_valid_access_wr: forall ch v sh (wsh: writable0_share sh) b ofs jm, (address_mapsto ch v sh (b, ofs) * TT)%pred (m_phi jm) -> Mem.valid_access (m_dry jm) ch b ofs Writable.",
            "VernacStartTheoremProof",
            "da64b265649d92affc141423bcd5c98bf29e8c60"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold address_mapsto in H.",
            "VernacExtend",
            "aa2ed75efbf00ac90dc094ca1ce4f4d9ab4502e5"
        ],
        [
            "unfold Mem.valid_access, Mem.range_perm.",
            "VernacExtend",
            "e9a0f77d0b780c1ae1d39dfb4b24ce69bff488fc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "destruct H as [x [y [Hjoin ?]]].",
            "VernacExtend",
            "e8d126363d43a889890993ad3f07d4501c62081e"
        ],
        [
            "destruct H as [[bl [[[H2 [H3 H3']] H] Hg]] ?].",
            "VernacExtend",
            "561df8cf69e8b8ee092140cef850a2d82b82c8dd"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "intros ofs' H4.",
            "VernacExtend",
            "29d349e27a6cd88f8ae8fba5e3aeb017dad5b1ed"
        ],
        [
            "specialize (H (b, ofs')).",
            "VernacExtend",
            "8665ceb8260713a4801a948137f8ecc6ceb13b00"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "destruct (adr_range_dec (b, ofs) (size_chunk ch) (b, ofs')) as [H5|H5].",
            "VernacExtend",
            "5dfb25e931f66cc574752433a1cb2d7a2a9e7556"
        ],
        [
            "2: unfold adr_range in H5.",
            "VernacExtend",
            "9db9e768cb3e8f665cda5895eecca3080e874d12"
        ],
        [
            "2: elimtype False; apply H5; split; auto.",
            "VernacExtend",
            "45870cdf893819f5dab93cb91aea06002edb320f"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "destruct H as [pf H].",
            "VernacExtend",
            "4f8c6714e49a0800f61bf466006a367840298631"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "rewrite preds_fmap_NoneP in H.",
            "VernacExtend",
            "71229b3fc1b671c8fa61e188204b15a8f846c3da"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "generalize (resource_at_join _ _ _ (b,ofs') Hjoin); rewrite H; intro.",
            "VernacExtend",
            "61cb4e9ac84ef2f847ea60ee7894efd4499957fb"
        ],
        [
            "forget ((nth (nat_of_Z (ofs' - ofs)) bl Undef)) as v'.",
            "VernacExtend",
            "636b21dfaf7ea1ecb8026a625da56a03e9190855"
        ],
        [
            "assert (exists sh' (wsh': writable0_share sh'), m_phi jm @ (b,ofs') = YES sh' (writable0_readable wsh') (VAL v') NoneP).",
            "VernacExtend",
            "49cb8095765a87c0990182031cfd02d0e523c42a"
        ],
        [
            "inv H1; [ | contradiction (join_writable0_readable RJ wsh rsh2)].",
            "VernacExtend",
            "111e940651d5385a2434da90bf9fa79611b8165a"
        ],
        [
            "exists sh3, (join_writable01 RJ wsh).",
            "VernacExtend",
            "eeb0f2756f263dee8cd4c45a38afd95b550d1474"
        ],
        [
            "apply YES_ext; auto.",
            "VernacExtend",
            "de11c6c787d0eac9ac58a93f7237a80e14cf27c0"
        ],
        [
            "destruct H6 as [sh' [wsh' ?]].",
            "VernacExtend",
            "d7d9e67820d6dfe404bc2396b0345a9c1ebcd6c0"
        ],
        [
            "generalize (juicy_mem_access jm (b,ofs')); rewrite H6; unfold perm_of_res; simpl; intro.",
            "VernacExtend",
            "b08e6b016ca3314f72a30ddef8630d50734f6cc3"
        ],
        [
            "clear - H7 wsh'.",
            "VernacExtend",
            "d4bc44aee6cbb537f93330f83e84b444f5b1ab2e"
        ],
        [
            "unfold perm, access_at in *.",
            "VernacExtend",
            "6d8dbfeea686210d9868b109d0ba4f2d6c8dbe12"
        ],
        [
            "simpl in H7.",
            "VernacExtend",
            "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
        ],
        [
            "forget ((mem_access (m_dry jm)) !! b ofs' Cur) as p1.",
            "VernacExtend",
            "a98296582ef6809663f9a7d642e30d17310b7e0b"
        ],
        [
            "unfold perm_of_sh in H7.",
            "VernacExtend",
            "eb6e68e4be47e96bcf05b80bbf804cd4519b864e"
        ],
        [
            "rewrite if_true in H7 by auto.",
            "VernacExtend",
            "af1282187da70e0f0ccd665a8c9cf98ef26db1b8"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "repeat match goal with [ H: context[ _ /\\ _ ] |- _] => destruct H end.",
            "VernacExtend",
            "056524b31928c37bb75b933ab6ceedf7caf126e8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition mapsto_can_store_definition ch v sh (wsh: writable0_share sh) b ofs jm (v':val) (MAPSTO: (address_mapsto ch v sh (b, ofs) * TT)%pred (m_phi jm)): Memory.mem.",
            "VernacDefinition",
            "6c4446bf5e826e75bc2219b52bce4303fd5afefd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (mapsto_valid_access_wr _ _ _ wsh _ _ _ MAPSTO).",
            "VernacExtend",
            "db7eaf708d1d18af647f720a64e628f8fa2f991e"
        ],
        [
            "apply (mkmem (PMap.set b (setN (encode_val ch v') ofs (PMap.get b (mem_contents (m_dry jm)))) (mem_contents (m_dry jm))) (mem_access (m_dry jm)) (nextblock (m_dry jm)) (access_max (m_dry jm)) (nextblock_noaccess (m_dry jm))).",
            "VernacExtend",
            "c764620cca4d916c618640771e5aaef073e24e87"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct jm; simpl.",
            "VernacExtend",
            "4efaf9b8104cb735fc188ce85c8366abd93d8e93"
        ],
        [
            "rewrite PMap.gsspec.",
            "VernacExtend",
            "208df7f9699f271a00c45eb42e79661332f7bd43"
        ],
        [
            "destruct (peq b0 b).",
            "VernacExtend",
            "8e5e8842963eba94987bb0bd5c60f09a9b56d9b5"
        ],
        [
            "rewrite setN_default.",
            "VernacExtend",
            "517d52330b49dc77d5e97d41db71a54f34f15705"
        ],
        [
            "apply contents_default.",
            "VernacExtend",
            "e7bea6f05c11d9a921e73087a4fd488c24708183"
        ],
        [
            "apply contents_default.",
            "VernacExtend",
            "e7bea6f05c11d9a921e73087a4fd488c24708183"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma mapsto_can_store_property: forall (ch:memory_chunk) v sh (wsh: writable0_share sh) b ofs jm v' (MAPSTO: (address_mapsto ch v sh (b, ofs) * TT)%pred (m_phi jm)), Mem.store ch (m_dry jm) b ofs v' = Some(mapsto_can_store_definition _ _ _ wsh _ _ jm v' MAPSTO).",
            "VernacStartTheoremProof",
            "e813f66af260a04a6cc34f0bf2cc82e2e9caebe7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (mapsto_valid_access_wr _ _ _ wsh _ _ _ MAPSTO).",
            "VernacExtend",
            "db7eaf708d1d18af647f720a64e628f8fa2f991e"
        ],
        [
            "unfold mapsto_can_store_definition.",
            "VernacExtend",
            "5308e58ba28964e06a676c3dd197edb591612a85"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Transparent Mem.store.",
            "VernacSetOpacity",
            "f10067bd8f3db16f0a6db03ff5a0621e6a684ebd"
        ],
        [
            "unfold store.",
            "VernacExtend",
            "8cda0e4f3826d6635a485a8da3de4d146b936fd9"
        ],
        [
            "destruct (valid_access_dec (m_dry jm) ch b ofs Writable).",
            "VernacExtend",
            "e86e467e3df22bb9a623a1696f7871b421b5cda4"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal; auto with extensionality.",
            "VernacExtend",
            "315313a415dd3d8e4850242b9ba6e1c000430bf7"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Opaque Mem.store.",
            "VernacSetOpacity",
            "4afb1480e7753d35fa3a7b21dfd80d5ae34c3673"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapsto_can_store: forall ch v sh (wsh: writable0_share sh) b ofs jm v', (address_mapsto ch v sh (b, ofs) * TT)%pred (m_phi jm) -> exists m', Mem.store ch (m_dry jm) b ofs v' = Some m'.",
            "VernacStartTheoremProof",
            "7f0f6eb6133b75e6101f3cfc211eee745aea702f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (mapsto_can_store_definition _ _ _ wsh _ _ jm v' H).",
            "VernacExtend",
            "624870ca62c48b84ef4bd1b043189633a161f0b5"
        ],
        [
            "apply mapsto_can_store_property.",
            "VernacExtend",
            "051d2d3a701f009e038f275c53df1a30f099aa2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma store_outside': forall ch m b z v m', Mem.store ch m b z v = Some m' -> (forall b' ofs, (b=b' /\\ z <= ofs < z + size_chunk ch) \\/ contents_at m (b', ofs) = contents_at m' (b', ofs)) /\\ access_at m = access_at m' /\\ Mem.nextblock m = Mem.nextblock m'.",
            "VernacStartTheoremProof",
            "95605a124d29467be41400361cf1db835081d3b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Mem.store_mem_contents _ _ _ _ _ _ H); intro.",
            "VernacExtend",
            "10e5030e254ffcb95a2dcf3dc8249e7558d2816a"
        ],
        [
            "destruct (eq_block b b').",
            "VernacExtend",
            "a2205f83057799a26a6aacf2bdeabec945c8b20c"
        ],
        [
            "subst b'.",
            "VernacExtend",
            "998445e3e44d7190637615c1934547ff4b392560"
        ],
        [
            "assert (z <= ofs < z + size_chunk ch \\/ (ofs < z \\/ ofs >= z + size_chunk ch)) by omega.",
            "VernacExtend",
            "d8aa3120fc2e790c39ce6cd4202900c043d192a5"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold contents_at; rewrite H0; clear H0.",
            "VernacExtend",
            "ec266705fa88fb4eea6fc0f1121f5696c4734456"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PMap.gss.",
            "VernacExtend",
            "b5a245c2e8793ec855a664f9951af0c15417e45b"
        ],
        [
            "rewrite Mem.setN_other; auto.",
            "VernacExtend",
            "582383becc2ea7b0204fdffc635fe06d71ca478e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite encode_val_length in H0.",
            "VernacExtend",
            "f43cc4c3ba9d0a9a7f77e0ea3a87b0670b616bc2"
        ],
        [
            "rewrite <- size_chunk_conv in H0.",
            "VernacExtend",
            "149360263dfbe02aa7bc4eb8a8f0bad6205b29f6"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold contents_at; rewrite H0; clear H0.",
            "VernacExtend",
            "ec266705fa88fb4eea6fc0f1121f5696c4734456"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PMap.gso by auto.",
            "VernacExtend",
            "7c813a7ad67552a3e6193c5f25800496b5bb3804"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold access_at.",
            "VernacExtend",
            "62798782afe09c554efd8c2a969dcf4529e62bb3"
        ],
        [
            "extensionality loc k.",
            "VernacExtend",
            "26fc8f81d303f51ff9574bc11ba81b97bc3b435c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry; eapply Mem.store_access; eauto.",
            "VernacExtend",
            "1d28f6dd0909d68e2e2e9f3d9a51dc5fe7e77057"
        ],
        [
            "symmetry; eapply Mem.nextblock_store; eauto.",
            "VernacExtend",
            "a93a811a555333ee1c3339038a2bf918f8fc3aa1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adr_range_zle_zlt : forall b lo hi ofs, adr_range (b,lo) (hi-lo) (b,ofs) -> zle lo ofs && zlt ofs hi = true.",
            "VernacStartTheoremProof",
            "cd86d03a1a49a2fbc1721af2c95c1b26856bdf53"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [H [H1 H2]].",
            "VernacExtend",
            "0425b602e3d93ce921d626d67326208a2c88e3c0"
        ],
        [
            "rewrite andb_true_iff.",
            "VernacExtend",
            "2e0a0ffca5d243f404153bc36ad3db5c01c2e4b5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold zle.",
            "VernacExtend",
            "e74b9f74856a074feb445d282af5d55d05744b86"
        ],
        [
            "case_eq (Z_le_gt_dec lo ofs); intros; auto.",
            "VernacExtend",
            "9bab9cdfe35865638b922771d1571713e0ef8c6e"
        ],
        [
            "unfold zlt.",
            "VernacExtend",
            "b59e064f3c4dfe1ae9018311b59fb788cc91551b"
        ],
        [
            "case_eq (Z_lt_dec ofs hi); intros; auto.",
            "VernacExtend",
            "5c2e24c3ee678912111ed20c4a37f8e2efbd5dfe"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_top: forall sh2 sh, join Share.top sh2 sh -> sh = Share.top.",
            "VernacStartTheoremProof",
            "346bcbb2f9f9c8b9bf7325a8954fe4484a686664"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite Share.lub_commute, Share.lub_top in H0.",
            "VernacExtend",
            "402b2f3f932423b21ace339d2fc9a10514b2107c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma juicy_free_aux_lemma: forall phi b lo hi F, app_pred (VALspec_range (hi-lo) Share.top (b,lo) * F) phi -> (forall ofs : Z, lo <= ofs < hi -> perm_of_res (phi @ (b, ofs)) = Some Freeable).",
            "VernacStartTheoremProof",
            "7ca3173d27411e3dfb8675c67df435f6102fe09e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [phi1 [phi2 [? [? ?]]]].",
            "VernacExtend",
            "a305f8a56c23db847ee16964b6f1c57dab7abda8"
        ],
        [
            "destruct H1 as [H1 _]; specialize (H1 (b,ofs)).",
            "VernacExtend",
            "4461d29ce56776535341676d7cc866d51da133fd"
        ],
        [
            "apply (resource_at_join _ _ _ (b,ofs)) in H.",
            "VernacExtend",
            "6fed890685b0e8b38efd7b49942288e63efa3020"
        ],
        [
            "hnf in H1.",
            "VernacExtend",
            "94324ef603315a47e5f4c48a0cd13f6c1b983007"
        ],
        [
            "rewrite if_true in H1 by (split; auto; omega).",
            "VernacExtend",
            "e139321aa51411f8d95a19a04aa3fca856689831"
        ],
        [
            "destruct H1 as [? [? ?]].",
            "VernacExtend",
            "787dbc926803499e9a09503c86fee4ac1727e31b"
        ],
        [
            "hnf in H1.",
            "VernacExtend",
            "94324ef603315a47e5f4c48a0cd13f6c1b983007"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "clear - RJ.",
            "VernacExtend",
            "50ec0a4e249c455599072b4927d27091ad784e87"
        ],
        [
            "apply join_top in RJ.",
            "VernacExtend",
            "13d96977c9efd480f667b8c8fbd543770fdb55b6"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply perm_of_freeable.",
            "VernacExtend",
            "63da4381f10f7c70b389d5b3e353a2bdb574b80c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply join_top in RJ.",
            "VernacExtend",
            "13d96977c9efd480f667b8c8fbd543770fdb55b6"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply perm_of_freeable.",
            "VernacExtend",
            "63da4381f10f7c70b389d5b3e353a2bdb574b80c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma juicy_free_lemma: forall {j b lo hi m' m1 F} (H: Mem.free (m_dry j) b lo hi = Some m') (VR: app_pred (VALspec_range (hi-lo) Share.top (b,lo) * F) (m_phi j)), VALspec_range (hi-lo) Share.top (b,lo) m1 -> core m1 = core (m_phi j) -> (forall l sh rsh k pp, m1 @ l = YES sh rsh k pp -> exists sh', exists (rsh': readable_share sh'), exists pp', join_sub sh sh' /\\ m_phi j @ l = YES sh' rsh' k pp') -> join m1 (m_phi (free_juicy_mem _ _ _ _ _ H)) (m_phi j).",
            "VernacStartTheoremProof",
            "f0629db536f55a00eef7b5b46cb90eff49cafc9e"
        ],
        [
            "intros j b lo hi m' m1.",
            "VernacExtend",
            "08b4e4f64af8aa42594b77b5ef816a8dd70222ff"
        ],
        [
            "pose (H0 :=True).",
            "VernacExtend",
            "f1843c69ec2b90732a197ba1b7aad31ddc58c0d6"
        ],
        [
            "intros R H VR H1 H2 Hyes.",
            "VernacExtend",
            "89c0b86f8a22a2c0cd821c6c83a535f552c0ae90"
        ],
        [
            "assert (forall l, ~adr_range (b,lo) (hi-lo) l -> identity (m1 @ l)).",
            "VernacExtend",
            "bb0b894e55ed0f94c62361436b4400a4fc522d41"
        ],
        [
            "unfold VALspec_range, allp, jam in H1.",
            "VernacExtend",
            "adf07e54327949da027d689721f47113eaf65466"
        ],
        [
            "intros l.",
            "VernacExtend",
            "dd0961f3ab7d1ab267b93180e66e020db2e681bc"
        ],
        [
            "destruct H1 as [H1 _]; specialize (H1 l).",
            "VernacExtend",
            "6e2abd504594fdfa5162e66d0f5a7be2fbfb1ef1"
        ],
        [
            "intros H3.",
            "VernacExtend",
            "c1623f76abecf456ca910b5562e076f972290355"
        ],
        [
            "hnf in H1; if_tac in H1; try solve [contradiction].",
            "VernacExtend",
            "f606fe1badef4a4c33ba4fdebfd244f11593d5de"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assert (forall l, adr_range (b,lo) (hi-lo) l -> exists mv, yesat NoneP (VAL mv) Share.top l m1).",
            "VernacExtend",
            "392b0719d98643c14452268f3b26f5b4a6d37e2b"
        ],
        [
            "unfold VALspec_range, allp, jam in H1.",
            "VernacExtend",
            "adf07e54327949da027d689721f47113eaf65466"
        ],
        [
            "intros l.",
            "VernacExtend",
            "dd0961f3ab7d1ab267b93180e66e020db2e681bc"
        ],
        [
            "destruct H1 as [H1 _]; specialize (H1 l).",
            "VernacExtend",
            "6e2abd504594fdfa5162e66d0f5a7be2fbfb1ef1"
        ],
        [
            "intros H4.",
            "VernacExtend",
            "142447ea7bb5f7d87b7f5d3d866f877f7448eb75"
        ],
        [
            "hnf in H1; if_tac in H1; try solve [contradiction].",
            "VernacExtend",
            "f606fe1badef4a4c33ba4fdebfd244f11593d5de"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "remember (free_juicy_mem _ _ _ _ _ H) as j'.",
            "VernacExtend",
            "96cb5dc2183b72f249d4503e4a2956de82e352f6"
        ],
        [
            "assert (m' = m_dry j') by (subst; reflexivity).",
            "VernacExtend",
            "0cf94df233dbe0a0dcda98c8cfa34c9301d7b532"
        ],
        [
            "assert (Ha := juicy_mem_access j').",
            "VernacExtend",
            "0bad9b67c27b72354f3f92fe87c8e98c53b538bd"
        ],
        [
            "unfold access_cohere in Ha.",
            "VernacExtend",
            "bc0274cd83682766a593075ce3956912b68c624c"
        ],
        [
            "apply resource_at_join2; auto.",
            "VernacExtend",
            "a24f66c65d72a11ddb904e4fb6d7b6503151f183"
        ],
        [
            "rewrite <- (level_core m1).",
            "VernacExtend",
            "43af3f998ebd6992d81b565ec36091fbf8ab9d36"
        ],
        [
            "rewrite <- (level_core (m_phi j)).",
            "VernacExtend",
            "dc018276178e14cccea8667cad5d66a1b10e0a94"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "subst j'.",
            "VernacExtend",
            "d09a2198b9a4fcbbf118c37498fe448b88c0de8f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold inflate_free.",
            "VernacExtend",
            "5ee509edc8afe85614bbeab7e834b65cacd138c8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite level_make_rmap.",
            "VernacExtend",
            "378bac6c0de25ad4ef74a1236b879bf72f93f938"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros (b0, ofs0).",
            "VernacExtend",
            "1cf6fa124292f718fb2e44bcec829fded21a4234"
        ],
        [
            "subst j'.",
            "VernacExtend",
            "d09a2198b9a4fcbbf118c37498fe448b88c0de8f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold inflate_free; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "a10a5b3398532072522b231cbc5155c4e38c2cdf"
        ],
        [
            "destruct (adr_range_dec (b,lo) (hi-lo) (b0,ofs0)).",
            "VernacExtend",
            "7200dcf412b05478e6b92ae17ec085289d2200fa"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "specialize (H4 (b0,ofs0) a).",
            "VernacExtend",
            "7b7ccee9e717ea62949d6361cfe38f3288125951"
        ],
        [
            "destruct H4 as [mv H4].",
            "VernacExtend",
            "4c89263f0132e574ef81c003717766f815ab6235"
        ],
        [
            "unfold yesat, yesat_raw in H4.",
            "VernacExtend",
            "fdab018475e6f53d79d37f7388e4b0de3a33647e"
        ],
        [
            "destruct H4 as [pp H4].",
            "VernacExtend",
            "63d905db59a95c4fe4ecb054737e58e1c4f93357"
        ],
        [
            "simpl in H4.",
            "VernacExtend",
            "31358c428a532f17f4c3cd16100d65b9f5ba8243"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert (H0 : access_at m' (b0, ofs0) Cur = None).",
            "VernacExtend",
            "273bbec71a50ca5df3463c3eedac0bb11aafe44f"
        ],
        [
            "clear - H a.",
            "VernacExtend",
            "5a9b6f6ed74490d513e4de864e083e1a0eb16fd1"
        ],
        [
            "Transparent free.",
            "VernacSetOpacity",
            "2759de7f8190f6cc12bf391de500e447df4e557d"
        ],
        [
            "unfold free in H.",
            "VernacExtend",
            "623a4b096d2914b1604e4c984d92a9d4cc22f03d"
        ],
        [
            "if_tac in H; try solve [congruence].",
            "VernacExtend",
            "f4ddbf316b4c86077fe5859ccb10502e662f425d"
        ],
        [
            "unfold unchecked_free in H.",
            "VernacExtend",
            "b07596f5752252ea6c829bd043bafb018b0f6ff7"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (b = b0) by (destruct a; auto).",
            "VernacExtend",
            "238e895c3ba20edeaad6881ff1fc9f84e836e960"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold access_at; simpl.",
            "VernacExtend",
            "e53fee8f670e70a2884a9538a4d8f0cd52ac6853"
        ],
        [
            "rewrite PMap.gss.",
            "VernacExtend",
            "b5a245c2e8793ec855a664f9951af0c15417e45b"
        ],
        [
            "rewrite adr_range_zle_zlt with (b:=b0); auto.",
            "VernacExtend",
            "2d43b63e043760ed52e10fb21dc0ee68f342526a"
        ],
        [
            "specialize (Ha (b0,ofs0)).",
            "VernacExtend",
            "6b5b957299289dbfa0d0d84c99c69f16b95b0b64"
        ],
        [
            "rewrite <- H5 in Ha.",
            "VernacExtend",
            "ac09f7f8f1e12650e337dff2fdc7b6885fa65325"
        ],
        [
            "rewrite H0 in Ha.",
            "VernacExtend",
            "5f77ce55437021527ff31034bc75fe9fea03080c"
        ],
        [
            "assert (H3 : m_phi j @ (b0, ofs0) = YES Share.top readable_share_top (VAL mv) NoneP).",
            "VernacExtend",
            "d5c22697c59b6e72dc1129c2fbb018bfd1bb2cf0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear - H H4 a Hyes.",
            "VernacExtend",
            "e8a1f3b18525163195c0d0127b971599e5085254"
        ],
        [
            "assert (Ha := juicy_mem_access j (b0,ofs0)).",
            "VernacExtend",
            "37fd0ca7006e9596cfcec71511fe96bc9829910a"
        ],
        [
            "generalize (Hyes _ _ _ _ _ H4); intros.",
            "VernacExtend",
            "8c4127edb3ab05b8faf6f27e7e4cc5dfe463d10c"
        ],
        [
            "repeat rewrite preds_fmap_NoneP in *.",
            "VernacExtend",
            "e680f6491648986076dca4adb3b256ede797baf9"
        ],
        [
            "destruct H0 as [sh' [rsh' [? [RJ ?]]]].",
            "VernacExtend",
            "8ba557f3aa1775c9ec486c264114f631377dfdba"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "repeat f_equal.",
            "VernacExtend",
            "ef52a498e8dfd0e6e312a5f55aa7a117295c3b16"
        ],
        [
            "destruct RJ as [? RJ]; apply join_top in RJ.",
            "VernacExtend",
            "97f6a77dc498372af02dc9bd35ae6f633d2ba6b0"
        ],
        [
            "subst sh'.",
            "VernacExtend",
            "0cf27cd97207c8c5a97308ac062403f1a2d2d8c4"
        ],
        [
            "pose proof (juicy_mem_contents j).",
            "VernacExtend",
            "97221fd8c49d11c7a1734cb0ae4008b727a94dcb"
        ],
        [
            "destruct (H1 _ _ _ _ _ H0); auto.",
            "VernacExtend",
            "74d28fb8f8eb7272503315c9c317925e42300a89"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply YES_ext; auto.",
            "VernacExtend",
            "de11c6c787d0eac9ac58a93f7237a80e14cf27c0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "repeat rewrite preds_fmap_NoneP.",
            "VernacExtend",
            "0a96bd8b95a9eed5e8221c3556134ac7562fbd00"
        ],
        [
            "unfold pfullshare.",
            "VernacExtend",
            "30a03c36af82c69d079041230e46bc13fdee4ef7"
        ],
        [
            "apply join_unit2.",
            "VernacExtend",
            "cd8b87f273bc2d4d4f983961be11e63557534e78"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply join_unit1; auto.",
            "VernacExtend",
            "4b51a100dbd89ea2b10afd9c3e726d4e54437983"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply proof_irr.",
            "VernacExtend",
            "10d46e46974f89c2b3a9463c04a06ee6c39cd171"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "generalize (H3 _ n); intro H3'.",
            "VernacExtend",
            "876c16460d717e4d50274c42caf640620329669c"
        ],
        [
            "assert (core (m1 @ (b0,ofs0)) = core (m_phi j @ (b0,ofs0))).",
            "VernacExtend",
            "2b73d6e4829c0331947f72f31f51c39d4541fd97"
        ],
        [
            "do 2 rewrite core_resource_at.",
            "VernacExtend",
            "7e5246ac74e82c9199aafcb8554a0279bfaa5310"
        ],
        [
            "unfold Join_rmap in *.",
            "VernacExtend",
            "233d735d046310847b7ba20708bbdbbd3203cb9f"
        ],
        [
            "unfold Sep_rmap in *; congruence.",
            "VernacExtend",
            "ca43411a58405dd70d6e1edd6e04b071ca1166d1"
        ],
        [
            "apply identity_resource in H3'.",
            "VernacExtend",
            "eaaf224932ce31b21923d9d2cd1cec97ab767ae2"
        ],
        [
            "revert H3'; case_eq (m1 @ (b0,ofs0));intros; try contradiction; try constructor.",
            "VernacExtend",
            "fb52dcabd4bb804dbf9a002c83c2ff1d3a3d5e68"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply identity_share_bot in H3'; subst sh.",
            "VernacExtend",
            "55156d69eaa288fa03ab6ef48f08e834af6ca7f0"
        ],
        [
            "rename H6 into Hm1.",
            "VernacExtend",
            "d8bd5c3b4cec6c3fdad219248ac918c061fb8776"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "destruct (free_nadr_range_eq _ _ _ _ _ _ _ n H) as [H0 H10].",
            "VernacExtend",
            "b40b8a6dd3d3b7e9ff087f626fb9ed75ace21223"
        ],
        [
            "assert (Ha0 := juicy_mem_access j (b0,ofs0)).",
            "VernacExtend",
            "54dcdd3bdc4e107fb9fda6d0aab12f4c6f2bf2ef"
        ],
        [
            "revert Ha0; case_eq (m_phi j @ (b0,ofs0)); intros.",
            "VernacExtend",
            "238085699795c86b8566c60292e1f9423b3214c1"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply join_unit1; auto.",
            "VernacExtend",
            "4b51a100dbd89ea2b10afd9c3e726d4e54437983"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply join_unit1; auto.",
            "VernacExtend",
            "4b51a100dbd89ea2b10afd9c3e726d4e54437983"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "clear - H2 Hm1 H0 H6.",
            "VernacExtend",
            "2274bd711f1e856c18fd00429fcddf08ec49d3ea"
        ],
        [
            "assert (core (m1 @ (b0,ofs0)) = core (m_phi j @ (b0,ofs0))).",
            "VernacExtend",
            "2b73d6e4829c0331947f72f31f51c39d4541fd97"
        ],
        [
            "do 2 rewrite core_resource_at.",
            "VernacExtend",
            "7e5246ac74e82c9199aafcb8554a0279bfaa5310"
        ],
        [
            "unfold Join_rmap in *; unfold Sep_rmap in *; congruence.",
            "VernacExtend",
            "4ad5cf5b5810342f1c319914504ba48c45a46a97"
        ],
        [
            "rewrite Hm1 in H.",
            "VernacExtend",
            "8ca15678e892f78c2cfecd6865497d55a631bc9d"
        ],
        [
            "rewrite H6 in H.",
            "VernacExtend",
            "1f34ad0f80545f65c108b19a3763e278485a18bc"
        ],
        [
            "rewrite core_PURE in H.",
            "VernacExtend",
            "2f035b36f1ef9f1aab93adcd187db1734c021885"
        ],
        [
            "rewrite core_NO in H; inv H.",
            "VernacExtend",
            "3d18f45ac92c70b1cf7609197614cfc9ab812178"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite H6 in H0.",
            "VernacExtend",
            "62fb32e4c27bdc9bb1f2db6e8ccb492493e234ca"
        ],
        [
            "rewrite core_PURE in H0.",
            "VernacExtend",
            "71179e1ea36d440208c9b0f536bd922432bca32f"
        ],
        [
            "destruct (m_phi j @ (b0,ofs0)).",
            "VernacExtend",
            "527c15f793378ab98d4cea77a85f6155491a087c"
        ],
        [
            "rewrite core_NO in H0; inv H0.",
            "VernacExtend",
            "ac3bc90a6c2966c8dce92b8bdfbedca0dbbf5bb8"
        ],
        [
            "rewrite core_YES in H0; inv H0.",
            "VernacExtend",
            "be560aae8e5ad188b1a707bec3e5fccd59a9ffec"
        ],
        [
            "rewrite core_PURE in H0.",
            "VernacExtend",
            "71179e1ea36d440208c9b0f536bd922432bca32f"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "subst k0 p0; constructor.",
            "VernacExtend",
            "ddf1359f29cf5d61c26db0c0f976e46695d8353f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct H1 as [_ Hg].",
            "VernacExtend",
            "758aec7bf8df8c95ce69880d418befbe91d042d4"
        ],
        [
            "rewrite (identity_core Hg), core_ghost_of, H2.",
            "VernacExtend",
            "974eca863fa8b15430c177aaba8a326eba4b881f"
        ],
        [
            "subst j'; simpl.",
            "VernacExtend",
            "fc6e44d874f8beca2c9f458025f51732f18393cd"
        ],
        [
            "unfold inflate_free.",
            "VernacExtend",
            "5ee509edc8afe85614bbeab7e834b65cacd138c8"
        ],
        [
            "rewrite ghost_of_make_rmap.",
            "VernacExtend",
            "2881a2602035f3c7f18b38813cca1b614d0c66d4"
        ],
        [
            "rewrite <- core_ghost_of; apply core_unit.",
            "VernacExtend",
            "f9a7161d977039a7d4a98de15788b9a81f20dbee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section free.",
            "VernacBeginSection",
            "14eb66cb610dff2e107525e13163b43729b23879"
        ],
        [
            "Variables (jm :juicy_mem) (m': mem) (b: block) (lo hi: Z) (FREE: free (m_dry jm) b lo hi = Some m') (PERM: forall ofs, lo <= ofs < hi -> perm_of_res (m_phi jm @ (b,ofs)) = Some Freeable) (phi1 phi2 : rmap) (Hphi1: VALspec_range (hi-lo) Share.top (b,lo) phi1) (Hjoin : join phi1 phi2 (m_phi jm)).",
            "VernacAssumption",
            "39b8b27f7798383b7d4a1b0724a398fcee75ef37"
        ],
        [
            "Lemma phi2_eq : m_phi (free_juicy_mem _ _ _ _ _ FREE) = phi2.",
            "VernacStartTheoremProof",
            "303dfc7c283d9408e27646a9d871256609bd9ed7"
        ],
        [
            "apply rmap_ext; simpl; unfold inflate_free; rewrite ?level_make_rmap, ?resource_at_make_rmap.",
            "VernacExtend",
            "f25b7989977988c0f7487e10b6aff7586fb84d19"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply join_level in Hjoin; destruct Hjoin; auto.",
            "VernacExtend",
            "680062ba9c74df5d4c46b3df22bd1e5916f3f56b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct Hphi1 as [Hphi1' _].",
            "VernacExtend",
            "e2a91b46f8178d8f32c9686e367cce64fa6842fe"
        ],
        [
            "specialize (Hphi1' l); simpl in Hphi1'.",
            "VernacExtend",
            "d73c683c8d7f3f23d3b146c8007b47a46a71231b"
        ],
        [
            "apply (resource_at_join _ _ _ l) in Hjoin.",
            "VernacExtend",
            "c917454d43830498ac00dd3b8d9e201a898b71f6"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct Hphi1' as (? & ? & H1); rewrite H1 in Hjoin; inv Hjoin.",
            "VernacExtend",
            "b001e5001e7572653417b0b2444f511c9d735983"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof (join_top _ _ RJ); subst; apply sepalg.join_comm, unit_identity, identity_share_bot in RJ.",
            "VernacExtend",
            "8f87713bb2b1bd2186ab57d16f04b4b7948fdc8a"
        ],
        [
            "subst; apply f_equal, proof_irr.",
            "VernacExtend",
            "10a30f8bbcf760b2882db916edcc7935cd9f7007"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof (join_top _ _ RJ); subst; apply sepalg.join_comm, unit_identity, identity_share_bot in RJ.",
            "VernacExtend",
            "8f87713bb2b1bd2186ab57d16f04b4b7948fdc8a"
        ],
        [
            "subst; contradiction bot_unreadable.",
            "VernacExtend",
            "a76e9d55ffba692928b2de274685f4a3d982699e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Hphi1' in Hjoin; auto.",
            "VernacExtend",
            "404d113e3a9f7b0df70af3f51b6eb7e0e28eb689"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite ghost_of_make_rmap.",
            "VernacExtend",
            "2881a2602035f3c7f18b38813cca1b614d0c66d4"
        ],
        [
            "destruct Hphi1 as [_ Hg].",
            "VernacExtend",
            "4b2eddb7bd4ed8b09d148cba0761f78d6cb6a26e"
        ],
        [
            "apply ghost_of_join in Hjoin.",
            "VernacExtend",
            "1d69ac230efffd0dde5e5734c9e9a4e3d5b784e8"
        ],
        [
            "symmetry; apply Hg; auto.",
            "VernacExtend",
            "e6445d3020e05ca738426959acd9f6b8c399ab07"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End free.",
            "VernacEndSegment",
            "b7829bc49cbe8e957a35d6fc704ced948b991f77"
        ],
        [
            "Lemma juicy_free_lemma': forall {j b lo hi m' m1 m2 F} (H: Mem.free (m_dry j) b lo hi = Some m') (VR: app_pred (VALspec_range (hi-lo) Share.top (b,lo) * F) (m_phi j)), VALspec_range (hi-lo) Share.top (b,lo) m1 -> join m1 m2 (m_phi j) -> m_phi (free_juicy_mem _ _ _ _ _ H) = m2.",
            "VernacStartTheoremProof",
            "c3a1d9981d84ac3e9757e9f3771a1ca73a6cff99"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply phi2_eq; eauto.",
            "VernacExtend",
            "632ef0d7c36322943a5724720b1b898faa4e549e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma initial_mem_core: forall lev m j IOK, j = initial_mem m lev IOK -> juicy_mem_core j = core lev.",
            "VernacStartTheoremProof",
            "35207a86fef09ef6d8dbebe0653532a5c5382566"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct j; simpl.",
            "VernacExtend",
            "91a3fb4cf04ba148f81b4789a2625d7ab926c18a"
        ],
        [
            "unfold initial_mem in H.",
            "VernacExtend",
            "e4c08e963421867def785005a50fbe1cb657582a"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "unfold juicy_mem_core.",
            "VernacExtend",
            "022a1d2c5022587e77da913c03060fc851607c17"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "clear - IOK.",
            "VernacExtend",
            "32fea96a566b7aa7c5b36d29914d06da690d9143"
        ],
        [
            "apply rmap_ext.",
            "VernacExtend",
            "701222aa76534c5be47679d0d5cc744259f1ffe3"
        ],
        [
            "repeat rewrite level_core.",
            "VernacExtend",
            "8e78f61a7bef9bc207830b728e6432cb9c383764"
        ],
        [
            "erewrite inflate_initial_mem_level; eauto.",
            "VernacExtend",
            "a76850c1e2150adc1caa6da01301aed8cf246645"
        ],
        [
            "intro loc.",
            "VernacExtend",
            "8b9938ec34ded7bb0e723c290989a39c80117118"
        ],
        [
            "repeat rewrite <- core_resource_at.",
            "VernacExtend",
            "31f684f11fa6060d515cf9c14446869d3aa2567e"
        ],
        [
            "unfold inflate_initial_mem.",
            "VernacExtend",
            "10fc48aa696d5d82a3e620084de54bc3b29eae69"
        ],
        [
            "rewrite resource_at_make_rmap.",
            "VernacExtend",
            "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
        ],
        [
            "unfold inflate_initial_mem'.",
            "VernacExtend",
            "14562ffe0135e7b138dcd2ce81a541e5e6d5472c"
        ],
        [
            "repeat rewrite <- core_resource_at.",
            "VernacExtend",
            "31f684f11fa6060d515cf9c14446869d3aa2567e"
        ],
        [
            "destruct (IOK loc).",
            "VernacExtend",
            "e0c37fe532da11959f1a4f1ccd2670c05809b2a9"
        ],
        [
            "clear IOK.",
            "VernacExtend",
            "7806a17c18740d22176f430289c91add7d922dba"
        ],
        [
            "revert H0; case_eq (lev @ loc); intros.",
            "VernacExtend",
            "99b98886b26b2776481efe0e80f22318ad3c4d1d"
        ],
        [
            "rewrite core_NO.",
            "VernacExtend",
            "ac3e1e5f0b68d57235bec952c80777f274e37017"
        ],
        [
            "destruct (access_at m loc); try destruct p; try rewrite core_NO; try rewrite core_YES; auto.",
            "VernacExtend",
            "59bdeb973273bcc8f01a88d52654b068a70e44e9"
        ],
        [
            "destruct (access_at m loc); try destruct p0; try rewrite core_NO; repeat rewrite core_YES; auto.",
            "VernacExtend",
            "3a4a6e514c20942637dbd4c8cfccaac285d3a2ea"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold inflate_initial_mem.",
            "VernacExtend",
            "10fc48aa696d5d82a3e620084de54bc3b29eae69"
        ],
        [
            "rewrite <- core_ghost_of, ghost_of_make_rmap, core_ghost_of; auto.",
            "VernacExtend",
            "41bbd19623b5b9c62c9f2b6ffc6187ae77db818d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma writable_writable_after_alloc' : forall m1 m2 lo hi b lev loc IOK1 IOK2, alloc m1 lo hi = (m2, b) -> writable loc (m_phi (initial_mem m1 lev IOK1)) -> writable loc (m_phi (initial_mem m2 lev IOK2)).",
            "VernacStartTheoremProof",
            "8d5fed6474474df34cacc67945abc7ecb1528ab7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf in *.",
            "VernacExtend",
            "2b83f930e16edf1e74901190007d847b58b5d93a"
        ],
        [
            "case_eq (m_phi (initial_mem m1 lev IOK1) @ loc); intros.",
            "VernacExtend",
            "a0ac502a72f78f3c142f359736931db4f3a73a23"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "assert (~adr_range (b,lo) (hi-lo) loc).",
            "VernacExtend",
            "d0e13edd08803732bef55963245c66ed9671d7ee"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Ha := juicy_mem_access (initial_mem m1 lev IOK1) loc).",
            "VernacExtend",
            "1f37db73b080034f959e40f400118b44ca707578"
        ],
        [
            "destruct loc.",
            "VernacExtend",
            "6ab83f2bd13426602834d7131fa9acd989a73ad2"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite H1 in Ha.",
            "VernacExtend",
            "d47d85df181253a347a1ead80cd5a78e4f656fcf"
        ],
        [
            "destruct H0 as [_ H0].",
            "VernacExtend",
            "cae529ff53664a0c5eb1e51204e222143f36e13c"
        ],
        [
            "destruct k; inv H0.",
            "VernacExtend",
            "c484d0bfa68af15a8f421fdc67f59652919af88f"
        ],
        [
            "intro Contra.",
            "VernacExtend",
            "ba990817c84f194344d51913d0532730f6b7148d"
        ],
        [
            "destruct Contra.",
            "VernacExtend",
            "6e89ea928768edb83249f5bc2dfc79b75648507f"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (access_at m1 (nextblock m1, z) Cur = None).",
            "VernacExtend",
            "b2623fb5710e19259f5463789228f2b004c68ae3"
        ],
        [
            "unfold access_at; apply nextblock_noaccess; simpl; xomega.",
            "VernacExtend",
            "396fad2e56f175624c4bbb6c17a1972fa0630206"
        ],
        [
            "assert (b0 = nextblock m1) by (eapply alloc_result; eauto).",
            "VernacExtend",
            "3fc80d8c78f631c42225295482caf4d96dc9cb8d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite Ha in H0.",
            "VernacExtend",
            "0939c8f825b505da36b57a46060c3f923998c40d"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "clear - r H0.",
            "VernacExtend",
            "38f3a0b615347db41c329a52825695b8a6ebd732"
        ],
        [
            "unfold perm_of_sh in H0.",
            "VernacExtend",
            "2a9783dc235d51d3b681c76881257d17aaebef6f"
        ],
        [
            "repeat if_tac in H0; try contradiction; inv H0.",
            "VernacExtend",
            "4bc734c9d9059b48de29e616f7e79ec82b78ea5a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply alloc_dry_unchanged_on with (m1:=m1)(m2:=m2) in H2; auto.",
            "VernacExtend",
            "3e343067b8a72399ecf010c61f4a406a85234168"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "unfold initial_mem; simpl.",
            "VernacExtend",
            "25c2929cf4428c72b600447d65dce4d548d5b2fa"
        ],
        [
            "unfold inflate_initial_mem, inflate_initial_mem'.",
            "VernacExtend",
            "f5c2c86fb72a46dd200c875a8cc38d5343f6de3e"
        ],
        [
            "rewrite resource_at_make_rmap.",
            "VernacExtend",
            "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
        ],
        [
            "destruct loc as (b',ofs').",
            "VernacExtend",
            "63dbdeaee387547c984378a6e0abede29f76c3b9"
        ],
        [
            "assert (Ha := juicy_mem_access (initial_mem m1 lev IOK1) (b',ofs')).",
            "VernacExtend",
            "7a5c2207f2276e844ef842e179df45731ad045fe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite H1 in Ha.",
            "VernacExtend",
            "d47d85df181253a347a1ead80cd5a78e4f656fcf"
        ],
        [
            "destruct H0 as [Hfree H0].",
            "VernacExtend",
            "bef4198ecb48b470fa3929d71dc16c27a47059bf"
        ],
        [
            "destruct k; try solve [inversion H0].",
            "VernacExtend",
            "be9d0ea2f51f3379119b653a4107893ddb73dda6"
        ],
        [
            "unfold perm_of_res in Ha.",
            "VernacExtend",
            "b4693a2b97b1c178dd50f3c896759c23b7fbb39b"
        ],
        [
            "simpl in Ha.",
            "VernacExtend",
            "c1db80496fbd6c0cb640dc94edb269fd49a6fe58"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "rewrite Ha.",
            "VernacExtend",
            "db99b88bb3732768157ba3daf5d3a4fc59534398"
        ],
        [
            "clear - Hfree r.",
            "VernacExtend",
            "9783e7981a081f75eacb0ede16e9a8a0f5d85037"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "rewrite Ha.",
            "VernacExtend",
            "db99b88bb3732768157ba3daf5d3a4fc59534398"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "clear; if_tac; congruence.",
            "VernacExtend",
            "29df06f79d82d18d6112bda00fcbcbd2b8355d0a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma readable_eq_after_alloc' : forall m1 m2 lo hi b lev loc IOK1 IOK2, alloc m1 lo hi = (m2, b) -> readable loc (m_phi (initial_mem m1 lev IOK1)) -> m_phi (initial_mem m1 lev IOK1) @ loc=m_phi (initial_mem m2 lev IOK2) @ loc.",
            "VernacStartTheoremProof",
            "799e6a020f2313c68e71c4e0183168e5f22fdc81"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf in H0.",
            "VernacExtend",
            "ef2ef5338fe3c3f98be9c585e08b6598bfd5a754"
        ],
        [
            "case_eq (m_phi (initial_mem m1 lev IOK1) @ loc); intros.",
            "VernacExtend",
            "a0ac502a72f78f3c142f359736931db4f3a73a23"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "assert (~adr_range (b,lo) (hi-lo) loc).",
            "VernacExtend",
            "d0e13edd08803732bef55963245c66ed9671d7ee"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Ha := juicy_mem_access (initial_mem m1 lev IOK1) loc).",
            "VernacExtend",
            "1f37db73b080034f959e40f400118b44ca707578"
        ],
        [
            "destruct loc.",
            "VernacExtend",
            "6ab83f2bd13426602834d7131fa9acd989a73ad2"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite H1 in Ha.",
            "VernacExtend",
            "d47d85df181253a347a1ead80cd5a78e4f656fcf"
        ],
        [
            "destruct k; try solve [inv H0].",
            "VernacExtend",
            "573ccf9e0c1f7cae02afba058eb6206c34e99b4d"
        ],
        [
            "intro Contra.",
            "VernacExtend",
            "ba990817c84f194344d51913d0532730f6b7148d"
        ],
        [
            "destruct Contra.",
            "VernacExtend",
            "6e89ea928768edb83249f5bc2dfc79b75648507f"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (b0 = nextblock m1) by (eapply alloc_result; eauto).",
            "VernacExtend",
            "3fc80d8c78f631c42225295482caf4d96dc9cb8d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl in Ha.",
            "VernacExtend",
            "c1db80496fbd6c0cb640dc94edb269fd49a6fe58"
        ],
        [
            "assert (access_at m1 (nextblock m1, z) Cur = None).",
            "VernacExtend",
            "b2623fb5710e19259f5463789228f2b004c68ae3"
        ],
        [
            "unfold access_at.",
            "VernacExtend",
            "62798782afe09c554efd8c2a969dcf4529e62bb3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply nextblock_noaccess.",
            "VernacExtend",
            "9740c385a0167a9adcc850f66cdea346e6a510ec"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "rewrite H2 in Ha.",
            "VernacExtend",
            "7fb412882efb8389fd83e96f44945dc8808b2b2d"
        ],
        [
            "clear - Ha r.",
            "VernacExtend",
            "bd9cd925078058e9b8e7d912f5978553d53def53"
        ],
        [
            "unfold perm_of_sh in Ha.",
            "VernacExtend",
            "505b51a9c8fb38ed0d667c8df9850a70e3b0b0ad"
        ],
        [
            "repeat if_tac in Ha; inv Ha; try contradiction.",
            "VernacExtend",
            "a0cec6118f720e199520245a419189e23c608fa0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply alloc_dry_unchanged_on with (m1:=m1)(m2:=m2) in H2; auto.",
            "VernacExtend",
            "3e343067b8a72399ecf010c61f4a406a85234168"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "unfold initial_mem; simpl.",
            "VernacExtend",
            "25c2929cf4428c72b600447d65dce4d548d5b2fa"
        ],
        [
            "unfold inflate_initial_mem, inflate_initial_mem'.",
            "VernacExtend",
            "f5c2c86fb72a46dd200c875a8cc38d5343f6de3e"
        ],
        [
            "do 2 rewrite resource_at_make_rmap.",
            "VernacExtend",
            "4d3e0808cb34168e63c875709f7a95f239775c37"
        ],
        [
            "destruct loc as (b',ofs').",
            "VernacExtend",
            "63dbdeaee387547c984378a6e0abede29f76c3b9"
        ],
        [
            "assert (Ha := juicy_mem_access (initial_mem m1 lev IOK1) (b',ofs')).",
            "VernacExtend",
            "7a5c2207f2276e844ef842e179df45731ad045fe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite H1 in Ha.",
            "VernacExtend",
            "d47d85df181253a347a1ead80cd5a78e4f656fcf"
        ],
        [
            "unfold perm_of_res in Ha; simpl in Ha.",
            "VernacExtend",
            "8457c2d90cbae92f3f4fc20003ac7a63ba577f80"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "destruct k; try contradiction.",
            "VernacExtend",
            "ad13bdf7a78eecd414c7bd5d85e453b7959c8dea"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "rewrite Ha in *.",
            "VernacExtend",
            "bedc45d8ed6f08b2cce8a696b9fa7f7bcdd99aa5"
        ],
        [
            "spec H3.",
            "VernacExtend",
            "5bb186f7e3b7dbecb3841a0e07c966b4a09081ed"
        ],
        [
            "clear - r.",
            "VernacExtend",
            "d4cd11b02955f207f4b9cb29ce8ef56841d68ef3"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "repeat if_tac; try congruence; contradiction.",
            "VernacExtend",
            "d5037cb34d62ff9b22f0c56f50627761894476c5"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma necR_m_dry: forall jm jm', necR jm jm' -> m_dry jm = m_dry jm'.",
            "VernacStartTheoremProof",
            "156e5fcb8dac615e4f6c7e4040cf72973c3e3276"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H; auto.",
            "VernacExtend",
            "90cc3845c5168577531b5e1147599d755edab1c2"
        ],
        [
            "unfold age in H.",
            "VernacExtend",
            "a58746f69ab5a2d203fc8a1730289020249d8c72"
        ],
        [
            "apply age1_juicy_mem_unpack in H.",
            "VernacExtend",
            "038a86437c4db2d4bbb256cddc1618fa21bd7075"
        ],
        [
            "decompose [and] H; auto.",
            "VernacExtend",
            "f1c1887dac672632e0a1a774d2a2bd700aab2d83"
        ],
        [
            "inv IHclos_refl_trans1.",
            "VernacExtend",
            "b840308c5fc0fe8ef35928da11ff2439229a66c4"
        ],
        [
            "inv IHclos_refl_trans2.",
            "VernacExtend",
            "2cb3abf0e8b7c930e146b4e447c484d81e7077f1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_order''_trans p1 p2 p3 : perm_order'' p1 p2 -> perm_order'' p2 p3 -> perm_order'' p1 p3.",
            "VernacStartTheoremProof",
            "56e24978760f95bac38174f653c26321fd4194fb"
        ],
        [
            "destruct p1, p2, p3; simpl; try tauto.",
            "VernacExtend",
            "0ea455905703f3af98f9e45a0d257f9a7b51da5e"
        ],
        [
            "apply perm_order_trans.",
            "VernacExtend",
            "84270de03c1787df6a3c634db34dbfab1b527eee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma po_join_sub_sh sh1 sh2 : join_sub sh2 sh1 -> Mem.perm_order'' (perm_of_sh sh1) (perm_of_sh sh2).",
            "VernacStartTheoremProof",
            "27d4154f45b4cb5c26f4b3512a90b8f2ad5678da"
        ],
        [
            "intros [sh J].",
            "VernacExtend",
            "efe8ab2d01fde49cf1a2e37b2c4daca25168cade"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "repeat if_tac; constructor.",
            "VernacExtend",
            "eacdbf9950d2e13905d967d3560aa957f911fd0f"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "rewrite if_false.",
            "VernacExtend",
            "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply join_top in J; auto.",
            "VernacExtend",
            "ba441c3c882f1a101ad7f8ff89480ea89f4eb520"
        ],
        [
            "repeat if_tac; constructor.",
            "VernacExtend",
            "eacdbf9950d2e13905d967d3560aa957f911fd0f"
        ],
        [
            "assert (~writable0_share sh2) by (contradict H; eapply join_writable01; eauto).",
            "VernacExtend",
            "df68bf9b51844a13fd34adaeddf256465a9e0617"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "rewrite if_false by auto.",
            "VernacExtend",
            "5a76c3b1b70df813cbad68c4a8a05295b8091083"
        ],
        [
            "repeat if_tac; constructor.",
            "VernacExtend",
            "eacdbf9950d2e13905d967d3560aa957f911fd0f"
        ],
        [
            "rewrite (if_false (writable0_share sh2)) by auto.",
            "VernacExtend",
            "7624a9c547c95440557a77d74f558136d35d2667"
        ],
        [
            "assert (~readable_share sh2) by (contradict H1; eapply join_readable1; eauto).",
            "VernacExtend",
            "dbe7c13298ab6aa5fa444b6c35cf932f6a1a741b"
        ],
        [
            "rewrite (if_false (readable_share sh2)) by auto.",
            "VernacExtend",
            "4e283f932cd87714e0ec02e2216dfd10f39ec094"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply split_identity in J.",
            "VernacExtend",
            "b177a2111e4d5917a19c1e6a6dab7d16aceef7cc"
        ],
        [
            "apply identity_share_bot in J.",
            "VernacExtend",
            "01de582b7652aef83da95ad86f5681e6d7fb19bc"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma po_join_sub r1 r2 : join_sub r2 r1 -> Mem.perm_order'' (perm_of_res r1) (perm_of_res r2).",
            "VernacStartTheoremProof",
            "28122ba3fb85f8129441584185041da0c08855e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [r J].",
            "VernacExtend",
            "336d28902c4ba5362c850e87872f617deb106964"
        ],
        [
            "inv J; simpl.",
            "VernacExtend",
            "babc498b424cb57ef03fd53894224cc0956b6900"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply split_identity in RJ.",
            "VernacExtend",
            "223cdcd99feb119248886fa5de46adb9423066e4"
        ],
        [
            "apply identity_share_bot in RJ.",
            "VernacExtend",
            "27b09b1b70a46617237a9d133b017a1d5cc10e1a"
        ],
        [
            "rewrite if_true by auto; constructor.",
            "VernacExtend",
            "d164640312b329fb269c26951a68d5dc1ea3e20c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "destruct k; try constructor; apply po_join_sub_sh; eexists; eauto.",
            "VernacExtend",
            "665fb6679c4543431d2d575d99ce3a58e59cd028"
        ],
        [
            "apply perm_order''_trans with (Some Nonempty).",
            "VernacExtend",
            "d9f0e98469f8d43f743b82ed2a7705f0e7b4630f"
        ],
        [
            "destruct k; try constructor.",
            "VernacExtend",
            "6d7fade25f39956359e370bf89db073abc14961b"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "rewrite if_true by auto; constructor.",
            "VernacExtend",
            "d164640312b329fb269c26951a68d5dc1ea3e20c"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "destruct k; try constructor.",
            "VernacExtend",
            "6d7fade25f39956359e370bf89db073abc14961b"
        ],
        [
            "apply po_join_sub_sh; eexists; eauto.",
            "VernacExtend",
            "d6ad756a66bd35fcd380f26bb80012cd3fadf651"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_res_lock_not_Freeable: forall r, perm_order'' (Some Writable) (perm_of_res_lock r).",
            "VernacStartTheoremProof",
            "485e41d176a33628ec7a81b57a80aa3ace845a2d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold perm_of_res_lock.",
            "VernacExtend",
            "f4b75f758714154fca9952dc9842d8c91d2a3e57"
        ],
        [
            "destruct r; try constructor.",
            "VernacExtend",
            "6747014d81bc9a8ce0ad20623fb874987011cad6"
        ],
        [
            "destruct k; try constructor.",
            "VernacExtend",
            "6d7fade25f39956359e370bf89db073abc14961b"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "rewrite if_false.",
            "VernacExtend",
            "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply glb_Rsh_not_top.",
            "VernacExtend",
            "65e0a9226eadea33e2919e965e50b79a0b67b445"
        ],
        [
            "repeat if_tac; constructor.",
            "VernacExtend",
            "eacdbf9950d2e13905d967d3560aa957f911fd0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition readable_perm (p: option permission) : {perm_order'' p (Some Readable)}+{~perm_order'' p (Some Readable)}.",
            "VernacDefinition",
            "7059b49d8a9d595dedf68ad5a0546de461f46a96"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "destruct p; try solve [left; constructor].",
            "VernacExtend",
            "cb07d76ba135fdd6c7f5239aeab43dca0f51a958"
        ],
        [
            "all: right; intro; inv H.",
            "VernacExtend",
            "3ee8f238cf6fc419dc70378bb4b3aad904ecf567"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition rebuild_juicy_mem_fmap (jm: juicy_mem) (m': mem) : (AV.address -> resource) := fun loc => match m_phi jm @ loc with PURE k pp => PURE k pp | NO sh rsh => if readable_perm (access_at m' loc Cur) then YES Tsh (writable_readable writable_share_top) (VAL (contents_at m' loc)) NoneP else NO sh rsh | YES sh rsh (VAL _) _ => if readable_perm (access_at m' loc Cur) then YES sh rsh (VAL (contents_at m' loc)) NoneP else NO _ bot_unreadable | YES sh rsh _ _ => m_phi jm @ loc end.",
            "VernacDefinition",
            "b47de67abeead38d0d7c6d56fc0be46fe393d48b"
        ],
        [
            "Definition rebuild_juicy_mem_rmap (jm: juicy_mem) (m': mem) : {phi : rmap | level phi = level jm /\\ resource_at phi = rebuild_juicy_mem_fmap jm m' /\\ ghost_of phi = ghost_of (m_phi jm)}.",
            "VernacDefinition",
            "31233f9ea7e5f9ab533b152e4a73c6234e4b109f"
        ],
        [
            "refine (make_rmap (rebuild_juicy_mem_fmap jm m') (ghost_of (m_phi jm)) (level jm) _ _).",
            "VernacExtend",
            "6b3d25a5f88623ff88b3d8424b7575a8c952e864"
        ],
        [
            "extensionality loc.",
            "VernacExtend",
            "1e7eb6ee95191abc4fc69ac4ede8caa2d6671fd4"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "unfold rebuild_juicy_mem_fmap.",
            "VernacExtend",
            "bccce195278da306ef0005cf29f81e702b39917a"
        ],
        [
            "destruct (m_phi jm @ loc) eqn:?H.",
            "VernacExtend",
            "7be848b58a334118100d7701b671ffe4519be620"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "pose proof (resource_at_approx (m_phi jm) loc).",
            "VernacExtend",
            "7ddccac9d61335422b8d7e4ca52f79545123dd12"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "destruct k; simpl; auto.",
            "VernacExtend",
            "22221ec2842f7bf8384caac4e4ac38fb4bc62b89"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "pose proof (resource_at_approx (m_phi jm) loc).",
            "VernacExtend",
            "7ddccac9d61335422b8d7e4ca52f79545123dd12"
        ],
        [
            "rewrite H in *; auto.",
            "VernacExtend",
            "76b598c038f506f498e94a4cba3eb27569382cd9"
        ],
        [
            "apply ghost_of_approx.",
            "VernacExtend",
            "2648a9984afd808c97e6cfad6d25a110f77c6c1e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ]
    ],
    "proofs": [
        {
            "name": "components_join_joins",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [x ?].",
                        "VernacExtend",
                        "9f6c106fe6f17839746156f659fe70371cc61637"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [y ?].",
                        "VernacExtend",
                        "ab789bd3810839731316b457c1629699a1c0b5e0"
                    ]
                },
                {
                    "command": [
                        "destruct (TA a b d c y x H H1 H0).",
                        "VernacExtend",
                        "b8b4b8f7ba22954d061d3167359ca5852f061596"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contents_cohere_join_sub",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "unfold contents_cohere.",
                        "VernacExtend",
                        "408704dacbc3546bf86d04a14f65fc3da2ef4922"
                    ]
                },
                {
                    "command": [
                        "intros until phi'; intros H H0.",
                        "VernacExtend",
                        "4bb2890537d0634f6ec8783e06ec0b02b74899f3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [phi1 H0].",
                        "VernacExtend",
                        "b13d463deb810c404e9d4952ff7190cb1a9b43e1"
                    ]
                },
                {
                    "command": [
                        "generalize (resource_at_join phi' phi1 phi loc H0); intro H2.",
                        "VernacExtend",
                        "ad8a3eff2741c4bd1ad614a0c7645aa1409de0c8"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H2.",
                        "VernacExtend",
                        "3ddaddaf8f89728f77671f580e26162e25035230"
                    ]
                },
                {
                    "command": [
                        "inv H2; symmetry in H8; destruct (H _ _ _ _ _ H8); auto.",
                        "VernacExtend",
                        "f67e392e5ebb6eff591b41c06b2c8667f5871ef0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_sh_join_sub",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh in *.",
                        "VernacExtend",
                        "daa3eecfcac4b0e7c6215fbb9230715428265ac1"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac in H; inv H.",
                        "VernacExtend",
                        "236db04d7d4ff24d4d40cac9dd199daec9736f67"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "2721274aada33cbec3c1f62204a14a93dcf297fd"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.glb_commute, Share.glb_top in H; subst x.",
                        "VernacExtend",
                        "c64e2b15aa9df5df2bf55b36f1cf129a4e1dacc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (Share.lub_bot).",
                        "VernacExtend",
                        "dd5f3f2e10a287f0e4a77d2d1958c88f837ce5dd"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply join_writable01 in H0 ;auto.",
                        "VernacExtend",
                        "6cd02e724d5140ffb43e1f2bcbf1cfa8e2fd1944"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "if_tac; constructor.",
                        "VernacExtend",
                        "02059178128c6a04306aa1a2033748b366218991"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply join_readable1 in H0; auto.",
                        "VernacExtend",
                        "44a38f38712666095b5eba364530c58e8b18db6a"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "if_tac; constructor.",
                        "VernacExtend",
                        "02059178128c6a04306aa1a2033748b366218991"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (sh2 <> Share.bot).",
                        "VernacExtend",
                        "4780df661e68017d7de4c70ca9da114d9ebcee15"
                    ]
                },
                {
                    "command": [
                        "contradict H3.",
                        "VernacExtend",
                        "4165cfca2fce31090e02fe156593ea5578faed3a"
                    ]
                },
                {
                    "command": [
                        "apply split_identity in H0; auto.",
                        "VernacExtend",
                        "8c2c181a04f03171f6f3397761454e24348efbc2"
                    ]
                },
                {
                    "command": [
                        "apply identity_share_bot; auto.",
                        "VernacExtend",
                        "ace4985618bc2eb99aaff3f457a840805844feb0"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac; try constructor.",
                        "VernacExtend",
                        "d9f601cacdcd556096a6757474b5159b1ad61ee8"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_order'_trans",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold perm_order' in *.",
                        "VernacExtend",
                        "70a9b810494d89048bdafa374a3caeb3b73b9d8d"
                    ]
                },
                {
                    "command": [
                        "eapply perm_order_trans; eauto.",
                        "VernacExtend",
                        "c0dbeff8a1892c945f3ea9ca4448944a12e90c0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "preds_fmap_NoneP_approx",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct pp.",
                        "VernacExtend",
                        "6311fc8449085429d1a0fedab42ad1035563cf49"
                    ]
                },
                {
                    "command": [
                        "unfold NoneP, approx, compose in *.",
                        "VernacExtend",
                        "308bd4b72d1e7d81d5457953534deec00f6089b9"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "unfold compose in *.",
                        "VernacExtend",
                        "c44342f17e1f781010c0f7ff8e47a2f4d73db095"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply EqdepFacts.eq_sigT_eq_dep in H2.",
                        "VernacExtend",
                        "59dc61a53f9154425725fc9261f4ae68bb38fad0"
                    ]
                },
                {
                    "command": [
                        "apply Eqdep.EqdepTheory.eq_dep_eq in H2.",
                        "VernacExtend",
                        "7bc4280c398be2af929e8591062a5eafde853460"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oracle_unage",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct jm' as [m phi' CONTENTS ACCESS MAXA ALLOC].",
                        "VernacExtend",
                        "dc99061bb461014287bccaf40961299249d2a28c"
                    ]
                },
                {
                    "command": [
                        "simpl m_phi in H.",
                        "VernacExtend",
                        "86aefa748690e41049c2ee221ad480975cba98fe"
                    ]
                },
                {
                    "command": [
                        "assert (contents_cohere m w).",
                        "VernacExtend",
                        "ca922ae9b1a35e69c80bf7a8bdae4f89cbe0f61f"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "destruct (necR_YES'' w phi' loc rsh sh (VAL v)).",
                        "VernacExtend",
                        "0103b0341776e399a633a7a8e417830241e4a576"
                    ]
                },
                {
                    "command": [
                        "constructor 1; auto.",
                        "VernacExtend",
                        "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [p ?].",
                        "VernacExtend",
                        "46257b737ae7a2bc11cb62e3490e9f7ffb3f6ad1"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "destruct (CONTENTS _ _ _ _ _ H1); eauto.",
                        "VernacExtend",
                        "eeb291a039616d9b2416131bf9b933ccb2de32d6"
                    ]
                },
                {
                    "command": [
                        "subst p.",
                        "VernacExtend",
                        "caedf09ae2f4d633332b36c55c808e07b2752cd1"
                    ]
                },
                {
                    "command": [
                        "apply (age1_YES w phi') in H1; auto.",
                        "VernacExtend",
                        "5cd0684ab5c02df1490045b7a65abcf16049ddec"
                    ]
                },
                {
                    "command": [
                        "inversion2 H0 H1.",
                        "VernacExtend",
                        "9b20beae3f3208c76620c275cc1b9ef37c595ddd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (access_cohere m w).",
                        "VernacExtend",
                        "06bad40a37ba548a0e06ed3969214b8154162594"
                    ]
                },
                {
                    "command": [
                        "intro loc; specialize (ACCESS loc).",
                        "VernacExtend",
                        "58a39abdf990e66ba986251b3724922b4137d9a4"
                    ]
                },
                {
                    "command": [
                        "case_eq (w @ loc); intros.",
                        "VernacExtend",
                        "788f5a6c03e605c0924bccd3a61928a0286c844b"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO w phi') in H1.",
                        "VernacExtend",
                        "2155f59de7701163f6e89040de2c54ebdb5a9ff5"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in ACCESS; auto.",
                        "VernacExtend",
                        "4c789286d982db8e0b6414a5bca014eff59b8aa8"
                    ]
                },
                {
                    "command": [
                        "constructor 1;auto.",
                        "VernacExtend",
                        "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
                    ]
                },
                {
                    "command": [
                        "apply (necR_YES w phi') in H1.",
                        "VernacExtend",
                        "a86833e2056b67d6643a2d8591df5c9dd14dd119"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in ACCESS; auto.",
                        "VernacExtend",
                        "4c789286d982db8e0b6414a5bca014eff59b8aa8"
                    ]
                },
                {
                    "command": [
                        "constructor 1; auto.",
                        "VernacExtend",
                        "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
                    ]
                },
                {
                    "command": [
                        "apply (necR_PURE w phi') in H1.",
                        "VernacExtend",
                        "eda16ceacd7b4c0ed741d0c9e2fb25394b45b141"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in ACCESS; auto.",
                        "VernacExtend",
                        "4c789286d982db8e0b6414a5bca014eff59b8aa8"
                    ]
                },
                {
                    "command": [
                        "constructor 1; auto.",
                        "VernacExtend",
                        "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
                    ]
                },
                {
                    "command": [
                        "assert (max_access_cohere m w).",
                        "VernacExtend",
                        "0b5284dc842162d139d64b585df5afc4f1a6c56e"
                    ]
                },
                {
                    "command": [
                        "intro loc; specialize (MAXA loc).",
                        "VernacExtend",
                        "c592d902e7d530906b56324e650f410d9d4cc014"
                    ]
                },
                {
                    "command": [
                        "case_eq (w @ loc); intros; auto.",
                        "VernacExtend",
                        "1c4ca43b01359f023d5b2a8a3366510473c0e82c"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO w phi') in H2.",
                        "VernacExtend",
                        "76d32ebdc1cbb97b5f3b7758a72a5cecd0baa2ff"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in MAXA.",
                        "VernacExtend",
                        "8720fc6b7a44e8698e5e5fbd87c72dc9be358c40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "constructor 1; auto.",
                        "VernacExtend",
                        "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
                    ]
                },
                {
                    "command": [
                        "apply (necR_YES w phi') in H2.",
                        "VernacExtend",
                        "e9b092847dc6e03a1bc81eec53aec7ce2439c802"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in MAXA; auto.",
                        "VernacExtend",
                        "ab9fbcf2452c4ce90aa0b514f5f7de834518f816"
                    ]
                },
                {
                    "command": [
                        "constructor 1; auto.",
                        "VernacExtend",
                        "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
                    ]
                },
                {
                    "command": [
                        "apply (necR_PURE w phi') in H2.",
                        "VernacExtend",
                        "d24dd354696261bbb9913d42c94edc3f9c5af679"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in MAXA; auto.",
                        "VernacExtend",
                        "ab9fbcf2452c4ce90aa0b514f5f7de834518f816"
                    ]
                },
                {
                    "command": [
                        "constructor 1; auto.",
                        "VernacExtend",
                        "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
                    ]
                },
                {
                    "command": [
                        "assert (alloc_cohere m w).",
                        "VernacExtend",
                        "b4ab18b53d0ccf0e26a2cfe81feba2784e17c5e4"
                    ]
                },
                {
                    "command": [
                        "intros loc ?.",
                        "VernacExtend",
                        "cf48ae8e8f423a3add2222c7dd7ae1757ad74f1b"
                    ]
                },
                {
                    "command": [
                        "specialize (ALLOC _ H3).",
                        "VernacExtend",
                        "5d781d0bdb9ecfda25232dedd4b8af4fc499a1ee"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO w phi').",
                        "VernacExtend",
                        "05a88ab2c595f741805cf63a5e9fdd577302927d"
                    ]
                },
                {
                    "command": [
                        "constructor 1; auto.",
                        "VernacExtend",
                        "01aafa4c5bcffd8f1625ee1a04ab9f4941140f70"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (mkJuicyMem m w H0 H1 H2 H3).",
                        "VernacExtend",
                        "bbf5b515df90244869009f3803d9f6036b7cbce0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply age1_juicy_mem_unpack''; simpl; auto.",
                        "VernacExtend",
                        "8e692199176b74641914f73bf66e8cc00e627a99"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "writable_perm",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros until jm; intros H.",
                        "VernacExtend",
                        "34e28e3b0cbf951eb256de1891746f4791637219"
                    ]
                },
                {
                    "command": [
                        "assert (Hacc := juicy_mem_access jm).",
                        "VernacExtend",
                        "0199a01bf4fdcf63e25ad19d2e1d15bd08f22ed9"
                    ]
                },
                {
                    "command": [
                        "unfold access_cohere in Hacc.",
                        "VernacExtend",
                        "fda57091671fa95e4bf2fc25b3f54965994f9d8a"
                    ]
                },
                {
                    "command": [
                        "unfold Mem.perm, Mem.perm_order'.",
                        "VernacExtend",
                        "3a3278c639652d1b72e934be34e517045635fbc0"
                    ]
                },
                {
                    "command": [
                        "specialize ( Hacc (b, i)).",
                        "VernacExtend",
                        "5fbea15b9093e0a580e99b7f252586afe4adb144"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi jm @ (b, i)).",
                        "VernacExtend",
                        "5229e07a96b2b2f3a0a1672ebdc930411b3828f3"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "destruct H as [H1 H2].",
                        "VernacExtend",
                        "c7474c5d52e048046b184a41b5748899e80e4e65"
                    ]
                },
                {
                    "command": [
                        "destruct k; inv H2.",
                        "VernacExtend",
                        "5d7b123a92d8e23f89651d2ddccf0494b61016d2"
                    ]
                },
                {
                    "command": [
                        "unfold access_at in Hacc.",
                        "VernacExtend",
                        "b80750d07dd06df672935f5771555c2264af954f"
                    ]
                },
                {
                    "command": [
                        "simpl in Hacc.",
                        "VernacExtend",
                        "139d71b2c9157182140ca2b712ad65345c3014ab"
                    ]
                },
                {
                    "command": [
                        "rewrite Hacc.",
                        "VernacExtend",
                        "5aa36c812c5f21e8630eae84edd92c0d641ba0d2"
                    ]
                },
                {
                    "command": [
                        "clear - H1.",
                        "VernacExtend",
                        "a97560cbbe2cd31ef128e29a3cf251870622f56a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "if_tac; constructor.",
                        "VernacExtend",
                        "02059178128c6a04306aa1a2033748b366218991"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_access_None",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "unfold access_at, Mem.valid_access, Mem.perm, Mem.range_perm, Mem.perm, Mem.perm_order'.",
                        "VernacExtend",
                        "7638a8e884e788637f712935cdd5e012d6100d05"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [H ?].",
                        "VernacExtend",
                        "c34840c1cda88f2dcdd5b66e2cc04d89e75a5af3"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [H3 H4].",
                        "VernacExtend",
                        "92b09c19348239c3b31b78e3edaa70678a565abc"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "specialize( H ofs' H4).",
                        "VernacExtend",
                        "bed3fadd2af572040995e9a925ac1e3b9ec26418"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H.",
                        "VernacExtend",
                        "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zminus_lem",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (z2 - z1).",
                        "VernacExtend",
                        "1f943403b128a54036b8aa80e2ef91cf972ec2e2"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H0.",
                        "VernacExtend",
                        "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Zminus_eq; auto.",
                        "VernacExtend",
                        "08d0fc5928003649246cc921e9f1f1be61552d4e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P p).",
                        "VernacExtend",
                        "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H0.",
                        "VernacExtend",
                        "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_neg_0 p).",
                        "VernacExtend",
                        "637d02490871fb9f59e7a41d516d8a7ba03ab3bd"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H0.",
                        "VernacExtend",
                        "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_of_Z_lem1",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct z; try solve [inv H].",
                        "VernacExtend",
                        "d63e3e9aa09f2c31cddd1060f915149bd985822d"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P p).",
                        "VernacExtend",
                        "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "case_eq (Zpos p - 1).",
                        "VernacExtend",
                        "326351c2626655e772e5240e251548f6ed12627a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Zpos p = 1) by omega.",
                        "VernacExtend",
                        "446aaf993eb4783e2fcdc849125943e3b0f2780c"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H.",
                        "VernacExtend",
                        "5c57065bc35a25df99bc7f4746a61a8b7705ac48"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Zpos p = Zpos p0 + 1) by omega.",
                        "VernacExtend",
                        "b6b266593b5fa471cef2a5718dc3674c4d001494"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H.",
                        "VernacExtend",
                        "5c57065bc35a25df99bc7f4746a61a8b7705ac48"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_Z_plus in H; try omega.",
                        "VernacExtend",
                        "88645e9025561fdddb9ed4e9e94450ea4e63c0e7"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (forall m n, S m = n + 1 -> m = n)%nat.",
                        "VernacExtend",
                        "bd661569947a92efd06cbdd4831597f8ced27ae8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply H3; auto.",
                        "VernacExtend",
                        "22ff15660c2558c792e23d36c3bbf8c255cb56ba"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P p0).",
                        "VernacExtend",
                        "dc4a63b88395c5c00ce9abeb6be0b152132a50aa"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite Zpos_eq_Z_of_nat_o_nat_of_P.",
                        "VernacExtend",
                        "fcd2cac1c936b65742c5af3307259383cd66d194"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Zpos p = Zneg p0 + 1) by omega.",
                        "VernacExtend",
                        "369ec9b5e3392bf5ccd701acf3cdba97590751b8"
                    ]
                },
                {
                    "command": [
                        "assert (Zpos p > 0) by (rewrite Zpos_eq_Z_of_nat_o_nat_of_P; omega).",
                        "VernacExtend",
                        "ae5a893474fb3e59592bc33b9c11cfd5033f3bd3"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_neg_0 p0).",
                        "VernacExtend",
                        "e54f236f82030cc86dd3cd27ff11e2fa61c077de"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_of_Z_lem2",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "intros; apply nat_of_Z_lem1; auto.",
                        "VernacExtend",
                        "fe7275a62e78cc5735c4740e02aa345f202217b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_getN",
            "line_nb": 443,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert ofs ofs' H H0.",
                        "VernacExtend",
                        "25b343414f633cea23f6e429933695345adf9fd1"
                    ]
                },
                {
                    "command": [
                        "remember (nat_of_Z z) as n.",
                        "VernacExtend",
                        "f9a2a427493b1e9215e19d02303ab4173996181b"
                    ]
                },
                {
                    "command": [
                        "revert n z Heqn.",
                        "VernacExtend",
                        "46fa20e751a9d719186c9b0d8955cb78df5c0bdf"
                    ]
                },
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "destruct z.",
                        "VernacExtend",
                        "7ad6537de6adc4973a413756c31bffcd5e25902c"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P p).",
                        "VernacExtend",
                        "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_neg_0 p).",
                        "VernacExtend",
                        "637d02490871fb9f59e7a41d516d8a7ba03ab3bd"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq (nat_of_Z (ofs' - ofs)).",
                        "VernacExtend",
                        "92c8f7de74041158e82b8587f1364a2fbd35cb19"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (ofs = ofs').",
                        "VernacExtend",
                        "e40f1fe325da11e781345d94c0b496dbdf25e8e7"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply Zminus_lem; auto.",
                        "VernacExtend",
                        "0f66a187089c944d07cb0a560584136fec9d493b"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "symmetry in H1.",
                        "VernacExtend",
                        "f7b1eec3579cf9c7bc576c77a03265fe014ab9a1"
                    ]
                },
                {
                    "command": [
                        "assert (n = nat_of_Z (z - 1)) by (apply nat_of_Z_lem1 in Heqn; auto).",
                        "VernacExtend",
                        "5f48455189e195aa93bb38cf7d1dc9fcce940616"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHn (z - 1) H2 (ofs + 1)); try solve [auto|omega].",
                        "VernacExtend",
                        "5cefad4cdcb062f3f930ce05ea91484cd55bd174"
                    ]
                },
                {
                    "command": [
                        "assert (nat_of_Z (ofs' - (ofs + 1)) = n0).",
                        "VernacExtend",
                        "cb566b651505685d861c73ce49b90cc0978df661"
                    ]
                },
                {
                    "command": [
                        "replace (ofs' - (ofs + 1)) with (ofs' - ofs - 1) by omega.",
                        "VernacExtend",
                        "7a31435b68d0472d08e87487b8526c66f2f086c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_Z_lem1 in H1.",
                        "VernacExtend",
                        "af5055d2c80bc0f4e551a467c6ee9851ac94446c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; auto.",
                        "VernacExtend",
                        "81f0b52fdaf5f5da8eefafd4263db88cb26c67d0"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "case_eq (ofs' - ofs).",
                        "VernacExtend",
                        "8934502898b365acc73cf7b33ba8a14085f2108b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H4 in H1.",
                        "VernacExtend",
                        "8c5b5df9fad672e6e5e81d3d0efb0ec2ed09e9bf"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "7549fbb600c3af6072a6d21bdcba999a253a2e01"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H4 in H1.",
                        "VernacExtend",
                        "8c5b5df9fad672e6e5e81d3d0efb0ec2ed09e9bf"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P p).",
                        "VernacExtend",
                        "a31e1fe61170ef6d9b53d10c65fc9ef8bc956811"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (1 <= ofs' - ofs).",
                        "VernacExtend",
                        "32d9b3e676aa08d952ced2afc471c07c7ba6fb7f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "generalize (Zpos_eq_Z_of_nat_o_nat_of_P p).",
                        "VernacExtend",
                        "cde619929afedfe54513a1e38852f81624a9a8d5"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Zlt_neg_0 p).",
                        "VernacExtend",
                        "637d02490871fb9f59e7a41d516d8a7ba03ab3bd"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "core_load_load",
            "line_nb": 546,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; [apply core_load_load'| ].",
                        "VernacExtend",
                        "42cd65916f6e0b9e87bd5020ba9345b19ce92f05"
                    ]
                },
                {
                    "command": [
                        "intros; apply load_core_load; auto.",
                        "VernacExtend",
                        "9c078f8817778ea1d7d3711931766406aaac7980"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapsto_can_store_definition",
            "line_nb": 626,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (mapsto_valid_access_wr _ _ _ wsh _ _ _ MAPSTO).",
                        "VernacExtend",
                        "db7eaf708d1d18af647f720a64e628f8fa2f991e"
                    ]
                },
                {
                    "command": [
                        "apply (mkmem (PMap.set b (setN (encode_val ch v') ofs (PMap.get b (mem_contents (m_dry jm)))) (mem_contents (m_dry jm))) (mem_access (m_dry jm)) (nextblock (m_dry jm)) (access_max (m_dry jm)) (nextblock_noaccess (m_dry jm))).",
                        "VernacExtend",
                        "c764620cca4d916c618640771e5aaef073e24e87"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct jm; simpl.",
                        "VernacExtend",
                        "4efaf9b8104cb735fc188ce85c8366abd93d8e93"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gsspec.",
                        "VernacExtend",
                        "208df7f9699f271a00c45eb42e79661332f7bd43"
                    ]
                },
                {
                    "command": [
                        "destruct (peq b0 b).",
                        "VernacExtend",
                        "8e5e8842963eba94987bb0bd5c60f09a9b56d9b5"
                    ]
                },
                {
                    "command": [
                        "rewrite setN_default.",
                        "VernacExtend",
                        "517d52330b49dc77d5e97d41db71a54f34f15705"
                    ]
                },
                {
                    "command": [
                        "apply contents_default.",
                        "VernacExtend",
                        "e7bea6f05c11d9a921e73087a4fd488c24708183"
                    ]
                },
                {
                    "command": [
                        "apply contents_default.",
                        "VernacExtend",
                        "e7bea6f05c11d9a921e73087a4fd488c24708183"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "mapsto_can_store",
            "line_nb": 651,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (mapsto_can_store_definition _ _ _ wsh _ _ jm v' H).",
                        "VernacExtend",
                        "624870ca62c48b84ef4bd1b043189633a161f0b5"
                    ]
                },
                {
                    "command": [
                        "apply mapsto_can_store_property.",
                        "VernacExtend",
                        "051d2d3a701f009e038f275c53df1a30f099aa2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "store_outside'",
            "line_nb": 656,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Mem.store_mem_contents _ _ _ _ _ _ H); intro.",
                        "VernacExtend",
                        "10e5030e254ffcb95a2dcf3dc8249e7558d2816a"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_block b b').",
                        "VernacExtend",
                        "a2205f83057799a26a6aacf2bdeabec945c8b20c"
                    ]
                },
                {
                    "command": [
                        "subst b'.",
                        "VernacExtend",
                        "998445e3e44d7190637615c1934547ff4b392560"
                    ]
                },
                {
                    "command": [
                        "assert (z <= ofs < z + size_chunk ch \\/ (ofs < z \\/ ofs >= z + size_chunk ch)) by omega.",
                        "VernacExtend",
                        "d8aa3120fc2e790c39ce6cd4202900c043d192a5"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold contents_at; rewrite H0; clear H0.",
                        "VernacExtend",
                        "ec266705fa88fb4eea6fc0f1121f5696c4734456"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gss.",
                        "VernacExtend",
                        "b5a245c2e8793ec855a664f9951af0c15417e45b"
                    ]
                },
                {
                    "command": [
                        "rewrite Mem.setN_other; auto.",
                        "VernacExtend",
                        "582383becc2ea7b0204fdffc635fe06d71ca478e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite encode_val_length in H0.",
                        "VernacExtend",
                        "f43cc4c3ba9d0a9a7f77e0ea3a87b0670b616bc2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- size_chunk_conv in H0.",
                        "VernacExtend",
                        "149360263dfbe02aa7bc4eb8a8f0bad6205b29f6"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold contents_at; rewrite H0; clear H0.",
                        "VernacExtend",
                        "ec266705fa88fb4eea6fc0f1121f5696c4734456"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gso by auto.",
                        "VernacExtend",
                        "7c813a7ad67552a3e6193c5f25800496b5bb3804"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold access_at.",
                        "VernacExtend",
                        "62798782afe09c554efd8c2a969dcf4529e62bb3"
                    ]
                },
                {
                    "command": [
                        "extensionality loc k.",
                        "VernacExtend",
                        "26fc8f81d303f51ff9574bc11ba81b97bc3b435c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "symmetry; eapply Mem.store_access; eauto.",
                        "VernacExtend",
                        "1d28f6dd0909d68e2e2e9f3d9a51dc5fe7e77057"
                    ]
                },
                {
                    "command": [
                        "symmetry; eapply Mem.nextblock_store; eauto.",
                        "VernacExtend",
                        "a93a811a555333ee1c3339038a2bf918f8fc3aa1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adr_range_zle_zlt",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [H [H1 H2]].",
                        "VernacExtend",
                        "0425b602e3d93ce921d626d67326208a2c88e3c0"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff.",
                        "VernacExtend",
                        "2e0a0ffca5d243f404153bc36ad3db5c01c2e4b5"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold zle.",
                        "VernacExtend",
                        "e74b9f74856a074feb445d282af5d55d05744b86"
                    ]
                },
                {
                    "command": [
                        "case_eq (Z_le_gt_dec lo ofs); intros; auto.",
                        "VernacExtend",
                        "9bab9cdfe35865638b922771d1571713e0ef8c6e"
                    ]
                },
                {
                    "command": [
                        "unfold zlt.",
                        "VernacExtend",
                        "b59e064f3c4dfe1ae9018311b59fb788cc91551b"
                    ]
                },
                {
                    "command": [
                        "case_eq (Z_lt_dec ofs hi); intros; auto.",
                        "VernacExtend",
                        "5c2e24c3ee678912111ed20c4a37f8e2efbd5dfe"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_top",
            "line_nb": 700,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.lub_commute, Share.lub_top in H0.",
                        "VernacExtend",
                        "402b2f3f932423b21ace339d2fc9a10514b2107c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_free_aux_lemma",
            "line_nb": 706,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [phi1 [phi2 [? [? ?]]]].",
                        "VernacExtend",
                        "a305f8a56c23db847ee16964b6f1c57dab7abda8"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [H1 _]; specialize (H1 (b,ofs)).",
                        "VernacExtend",
                        "4461d29ce56776535341676d7cc866d51da133fd"
                    ]
                },
                {
                    "command": [
                        "apply (resource_at_join _ _ _ (b,ofs)) in H.",
                        "VernacExtend",
                        "6fed890685b0e8b38efd7b49942288e63efa3020"
                    ]
                },
                {
                    "command": [
                        "hnf in H1.",
                        "VernacExtend",
                        "94324ef603315a47e5f4c48a0cd13f6c1b983007"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true in H1 by (split; auto; omega).",
                        "VernacExtend",
                        "e139321aa51411f8d95a19a04aa3fca856689831"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [? [? ?]].",
                        "VernacExtend",
                        "787dbc926803499e9a09503c86fee4ac1727e31b"
                    ]
                },
                {
                    "command": [
                        "hnf in H1.",
                        "VernacExtend",
                        "94324ef603315a47e5f4c48a0cd13f6c1b983007"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H.",
                        "VernacExtend",
                        "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "clear - RJ.",
                        "VernacExtend",
                        "50ec0a4e249c455599072b4927d27091ad784e87"
                    ]
                },
                {
                    "command": [
                        "apply join_top in RJ.",
                        "VernacExtend",
                        "13d96977c9efd480f667b8c8fbd543770fdb55b6"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply perm_of_freeable.",
                        "VernacExtend",
                        "63da4381f10f7c70b389d5b3e353a2bdb574b80c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply join_top in RJ.",
                        "VernacExtend",
                        "13d96977c9efd480f667b8c8fbd543770fdb55b6"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply perm_of_freeable.",
                        "VernacExtend",
                        "63da4381f10f7c70b389d5b3e353a2bdb574b80c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "phi2_eq",
            "line_nb": 861,
            "steps": [
                {
                    "command": [
                        "apply rmap_ext; simpl; unfold inflate_free; rewrite ?level_make_rmap, ?resource_at_make_rmap.",
                        "VernacExtend",
                        "f25b7989977988c0f7487e10b6aff7586fb84d19"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply join_level in Hjoin; destruct Hjoin; auto.",
                        "VernacExtend",
                        "680062ba9c74df5d4c46b3df22bd1e5916f3f56b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct Hphi1 as [Hphi1' _].",
                        "VernacExtend",
                        "e2a91b46f8178d8f32c9686e367cce64fa6842fe"
                    ]
                },
                {
                    "command": [
                        "specialize (Hphi1' l); simpl in Hphi1'.",
                        "VernacExtend",
                        "d73c683c8d7f3f23d3b146c8007b47a46a71231b"
                    ]
                },
                {
                    "command": [
                        "apply (resource_at_join _ _ _ l) in Hjoin.",
                        "VernacExtend",
                        "c917454d43830498ac00dd3b8d9e201a898b71f6"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct Hphi1' as (? & ? & H1); rewrite H1 in Hjoin; inv Hjoin.",
                        "VernacExtend",
                        "b001e5001e7572653417b0b2444f511c9d735983"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof (join_top _ _ RJ); subst; apply sepalg.join_comm, unit_identity, identity_share_bot in RJ.",
                        "VernacExtend",
                        "8f87713bb2b1bd2186ab57d16f04b4b7948fdc8a"
                    ]
                },
                {
                    "command": [
                        "subst; apply f_equal, proof_irr.",
                        "VernacExtend",
                        "10a30f8bbcf760b2882db916edcc7935cd9f7007"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof (join_top _ _ RJ); subst; apply sepalg.join_comm, unit_identity, identity_share_bot in RJ.",
                        "VernacExtend",
                        "8f87713bb2b1bd2186ab57d16f04b4b7948fdc8a"
                    ]
                },
                {
                    "command": [
                        "subst; contradiction bot_unreadable.",
                        "VernacExtend",
                        "a76e9d55ffba692928b2de274685f4a3d982699e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Hphi1' in Hjoin; auto.",
                        "VernacExtend",
                        "404d113e3a9f7b0df70af3f51b6eb7e0e28eb689"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite ghost_of_make_rmap.",
                        "VernacExtend",
                        "2881a2602035f3c7f18b38813cca1b614d0c66d4"
                    ]
                },
                {
                    "command": [
                        "destruct Hphi1 as [_ Hg].",
                        "VernacExtend",
                        "4b2eddb7bd4ed8b09d148cba0761f78d6cb6a26e"
                    ]
                },
                {
                    "command": [
                        "apply ghost_of_join in Hjoin.",
                        "VernacExtend",
                        "1d69ac230efffd0dde5e5734c9e9a4e3d5b784e8"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Hg; auto.",
                        "VernacExtend",
                        "e6445d3020e05ca738426959acd9f6b8c399ab07"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_free_lemma'",
            "line_nb": 888,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply phi2_eq; eauto.",
                        "VernacExtend",
                        "632ef0d7c36322943a5724720b1b898faa4e549e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "initial_mem_core",
            "line_nb": 892,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct j; simpl.",
                        "VernacExtend",
                        "91a3fb4cf04ba148f81b4789a2625d7ab926c18a"
                    ]
                },
                {
                    "command": [
                        "unfold initial_mem in H.",
                        "VernacExtend",
                        "e4c08e963421867def785005a50fbe1cb657582a"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst.",
                        "VernacExtend",
                        "123ebc73101dcac5781200440a60232218464ea1"
                    ]
                },
                {
                    "command": [
                        "unfold juicy_mem_core.",
                        "VernacExtend",
                        "022a1d2c5022587e77da913c03060fc851607c17"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "clear - IOK.",
                        "VernacExtend",
                        "32fea96a566b7aa7c5b36d29914d06da690d9143"
                    ]
                },
                {
                    "command": [
                        "apply rmap_ext.",
                        "VernacExtend",
                        "701222aa76534c5be47679d0d5cc744259f1ffe3"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite level_core.",
                        "VernacExtend",
                        "8e78f61a7bef9bc207830b728e6432cb9c383764"
                    ]
                },
                {
                    "command": [
                        "erewrite inflate_initial_mem_level; eauto.",
                        "VernacExtend",
                        "a76850c1e2150adc1caa6da01301aed8cf246645"
                    ]
                },
                {
                    "command": [
                        "intro loc.",
                        "VernacExtend",
                        "8b9938ec34ded7bb0e723c290989a39c80117118"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- core_resource_at.",
                        "VernacExtend",
                        "31f684f11fa6060d515cf9c14446869d3aa2567e"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_initial_mem.",
                        "VernacExtend",
                        "10fc48aa696d5d82a3e620084de54bc3b29eae69"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_initial_mem'.",
                        "VernacExtend",
                        "14562ffe0135e7b138dcd2ce81a541e5e6d5472c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- core_resource_at.",
                        "VernacExtend",
                        "31f684f11fa6060d515cf9c14446869d3aa2567e"
                    ]
                },
                {
                    "command": [
                        "destruct (IOK loc).",
                        "VernacExtend",
                        "e0c37fe532da11959f1a4f1ccd2670c05809b2a9"
                    ]
                },
                {
                    "command": [
                        "clear IOK.",
                        "VernacExtend",
                        "7806a17c18740d22176f430289c91add7d922dba"
                    ]
                },
                {
                    "command": [
                        "revert H0; case_eq (lev @ loc); intros.",
                        "VernacExtend",
                        "99b98886b26b2776481efe0e80f22318ad3c4d1d"
                    ]
                },
                {
                    "command": [
                        "rewrite core_NO.",
                        "VernacExtend",
                        "ac3e1e5f0b68d57235bec952c80777f274e37017"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m loc); try destruct p; try rewrite core_NO; try rewrite core_YES; auto.",
                        "VernacExtend",
                        "59bdeb973273bcc8f01a88d52654b068a70e44e9"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m loc); try destruct p0; try rewrite core_NO; repeat rewrite core_YES; auto.",
                        "VernacExtend",
                        "3a4a6e514c20942637dbd4c8cfccaac285d3a2ea"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_initial_mem.",
                        "VernacExtend",
                        "10fc48aa696d5d82a3e620084de54bc3b29eae69"
                    ]
                },
                {
                    "command": [
                        "rewrite <- core_ghost_of, ghost_of_make_rmap, core_ghost_of; auto.",
                        "VernacExtend",
                        "41bbd19623b5b9c62c9f2b6ffc6187ae77db818d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "necR_m_dry",
            "line_nb": 1038,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H; auto.",
                        "VernacExtend",
                        "90cc3845c5168577531b5e1147599d755edab1c2"
                    ]
                },
                {
                    "command": [
                        "unfold age in H.",
                        "VernacExtend",
                        "a58746f69ab5a2d203fc8a1730289020249d8c72"
                    ]
                },
                {
                    "command": [
                        "apply age1_juicy_mem_unpack in H.",
                        "VernacExtend",
                        "038a86437c4db2d4bbb256cddc1618fa21bd7075"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H; auto.",
                        "VernacExtend",
                        "f1c1887dac672632e0a1a774d2a2bd700aab2d83"
                    ]
                },
                {
                    "command": [
                        "inv IHclos_refl_trans1.",
                        "VernacExtend",
                        "b840308c5fc0fe8ef35928da11ff2439229a66c4"
                    ]
                },
                {
                    "command": [
                        "inv IHclos_refl_trans2.",
                        "VernacExtend",
                        "2cb3abf0e8b7c930e146b4e447c484d81e7077f1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_order''_trans",
            "line_nb": 1048,
            "steps": [
                {
                    "command": [
                        "destruct p1, p2, p3; simpl; try tauto.",
                        "VernacExtend",
                        "0ea455905703f3af98f9e45a0d257f9a7b51da5e"
                    ]
                },
                {
                    "command": [
                        "apply perm_order_trans.",
                        "VernacExtend",
                        "84270de03c1787df6a3c634db34dbfab1b527eee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "po_join_sub_sh",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "intros [sh J].",
                        "VernacExtend",
                        "efe8ab2d01fde49cf1a2e37b2c4daca25168cade"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac; constructor.",
                        "VernacExtend",
                        "eacdbf9950d2e13905d967d3560aa957f911fd0f"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false.",
                        "VernacExtend",
                        "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply join_top in J; auto.",
                        "VernacExtend",
                        "ba441c3c882f1a101ad7f8ff89480ea89f4eb520"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac; constructor.",
                        "VernacExtend",
                        "eacdbf9950d2e13905d967d3560aa957f911fd0f"
                    ]
                },
                {
                    "command": [
                        "assert (~writable0_share sh2) by (contradict H; eapply join_writable01; eauto).",
                        "VernacExtend",
                        "df68bf9b51844a13fd34adaeddf256465a9e0617"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false by auto.",
                        "VernacExtend",
                        "5a76c3b1b70df813cbad68c4a8a05295b8091083"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac; constructor.",
                        "VernacExtend",
                        "eacdbf9950d2e13905d967d3560aa957f911fd0f"
                    ]
                },
                {
                    "command": [
                        "rewrite (if_false (writable0_share sh2)) by auto.",
                        "VernacExtend",
                        "7624a9c547c95440557a77d74f558136d35d2667"
                    ]
                },
                {
                    "command": [
                        "assert (~readable_share sh2) by (contradict H1; eapply join_readable1; eauto).",
                        "VernacExtend",
                        "dbe7c13298ab6aa5fa444b6c35cf932f6a1a741b"
                    ]
                },
                {
                    "command": [
                        "rewrite (if_false (readable_share sh2)) by auto.",
                        "VernacExtend",
                        "4e283f932cd87714e0ec02e2216dfd10f39ec094"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply split_identity in J.",
                        "VernacExtend",
                        "b177a2111e4d5917a19c1e6a6dab7d16aceef7cc"
                    ]
                },
                {
                    "command": [
                        "apply identity_share_bot in J.",
                        "VernacExtend",
                        "01de582b7652aef83da95ad86f5681e6d7fb19bc"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "if_tac; constructor.",
                        "VernacExtend",
                        "02059178128c6a04306aa1a2033748b366218991"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "po_join_sub",
            "line_nb": 1081,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [r J].",
                        "VernacExtend",
                        "336d28902c4ba5362c850e87872f617deb106964"
                    ]
                },
                {
                    "command": [
                        "inv J; simpl.",
                        "VernacExtend",
                        "babc498b424cb57ef03fd53894224cc0956b6900"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply split_identity in RJ.",
                        "VernacExtend",
                        "223cdcd99feb119248886fa5de46adb9423066e4"
                    ]
                },
                {
                    "command": [
                        "apply identity_share_bot in RJ.",
                        "VernacExtend",
                        "27b09b1b70a46617237a9d133b017a1d5cc10e1a"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto; constructor.",
                        "VernacExtend",
                        "d164640312b329fb269c26951a68d5dc1ea3e20c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "if_tac; constructor.",
                        "VernacExtend",
                        "02059178128c6a04306aa1a2033748b366218991"
                    ]
                },
                {
                    "command": [
                        "destruct k; try constructor; apply po_join_sub_sh; eexists; eauto.",
                        "VernacExtend",
                        "665fb6679c4543431d2d575d99ce3a58e59cd028"
                    ]
                },
                {
                    "command": [
                        "apply perm_order''_trans with (Some Nonempty).",
                        "VernacExtend",
                        "d9f0e98469f8d43f743b82ed2a7705f0e7b4630f"
                    ]
                },
                {
                    "command": [
                        "destruct k; try constructor.",
                        "VernacExtend",
                        "6d7fade25f39956359e370bf89db073abc14961b"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "if_tac; constructor.",
                        "VernacExtend",
                        "02059178128c6a04306aa1a2033748b366218991"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto; constructor.",
                        "VernacExtend",
                        "d164640312b329fb269c26951a68d5dc1ea3e20c"
                    ]
                },
                {
                    "command": [
                        "if_tac; constructor.",
                        "VernacExtend",
                        "02059178128c6a04306aa1a2033748b366218991"
                    ]
                },
                {
                    "command": [
                        "destruct k; try constructor.",
                        "VernacExtend",
                        "6d7fade25f39956359e370bf89db073abc14961b"
                    ]
                },
                {
                    "command": [
                        "apply po_join_sub_sh; eexists; eauto.",
                        "VernacExtend",
                        "d6ad756a66bd35fcd380f26bb80012cd3fadf651"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_res_lock_not_Freeable",
            "line_nb": 1104,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_res_lock.",
                        "VernacExtend",
                        "f4b75f758714154fca9952dc9842d8c91d2a3e57"
                    ]
                },
                {
                    "command": [
                        "destruct r; try constructor.",
                        "VernacExtend",
                        "6747014d81bc9a8ce0ad20623fb874987011cad6"
                    ]
                },
                {
                    "command": [
                        "destruct k; try constructor.",
                        "VernacExtend",
                        "6d7fade25f39956359e370bf89db073abc14961b"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false.",
                        "VernacExtend",
                        "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply glb_Rsh_not_top.",
                        "VernacExtend",
                        "65e0a9226eadea33e2919e965e50b79a0b67b445"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac; constructor.",
                        "VernacExtend",
                        "eacdbf9950d2e13905d967d3560aa957f911fd0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rebuild_juicy_mem_rmap",
            "line_nb": 1122,
            "steps": [
                {
                    "command": [
                        "refine (make_rmap (rebuild_juicy_mem_fmap jm m') (ghost_of (m_phi jm)) (level jm) _ _).",
                        "VernacExtend",
                        "6b3d25a5f88623ff88b3d8424b7575a8c952e864"
                    ]
                },
                {
                    "command": [
                        "extensionality loc.",
                        "VernacExtend",
                        "1e7eb6ee95191abc4fc69ac4ede8caa2d6671fd4"
                    ]
                },
                {
                    "command": [
                        "unfold compose.",
                        "VernacExtend",
                        "d80e23bf133762584228beafbd8610d99d5d02d5"
                    ]
                },
                {
                    "command": [
                        "unfold rebuild_juicy_mem_fmap.",
                        "VernacExtend",
                        "bccce195278da306ef0005cf29f81e702b39917a"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi jm @ loc) eqn:?H.",
                        "VernacExtend",
                        "7be848b58a334118100d7701b671ffe4519be620"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto.",
                        "VernacExtend",
                        "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
                    ]
                },
                {
                    "command": [
                        "pose proof (resource_at_approx (m_phi jm) loc).",
                        "VernacExtend",
                        "7ddccac9d61335422b8d7e4ca52f79545123dd12"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "destruct k; simpl; auto.",
                        "VernacExtend",
                        "22221ec2842f7bf8384caac4e4ac38fb4bc62b89"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto.",
                        "VernacExtend",
                        "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
                    ]
                },
                {
                    "command": [
                        "pose proof (resource_at_approx (m_phi jm) loc).",
                        "VernacExtend",
                        "7ddccac9d61335422b8d7e4ca52f79545123dd12"
                    ]
                },
                {
                    "command": [
                        "rewrite H in *; auto.",
                        "VernacExtend",
                        "76b598c038f506f498e94a4cba3eb27569382cd9"
                    ]
                },
                {
                    "command": [
                        "apply ghost_of_approx.",
                        "VernacExtend",
                        "2648a9984afd808c97e6cfad6d25a110f77c6c1e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}