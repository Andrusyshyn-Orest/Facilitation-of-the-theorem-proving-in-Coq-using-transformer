{
    "filename": "veric/coqlib4.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Coq.Arith.EqNat.",
            "VernacRequire",
            "9b659d62b654c9405ee02b95ba0db6e2949efea1"
        ],
        [
            "Require Import Coq.Relations.Relations.",
            "VernacRequire",
            "711709d1a8dabb57391deb948e0db0b064ccece7"
        ],
        [
            "Require Import Coq.Sorting.Permutation.",
            "VernacRequire",
            "91cb696adf793d75c8f1c3333c2ab6d7da008e71"
        ],
        [
            "Require Import compcert.lib.Coqlib.",
            "VernacRequire",
            "0e8012a6c0062230df0c959370d96e0e84eae6bb"
        ],
        [
            "Require Import compcert.lib.Integers.",
            "VernacRequire",
            "0da1bf41e581d14cf922c3b0e0da86b37eba58b1"
        ],
        [
            "Require Import VST.msl.Coqlib2.",
            "VernacRequire",
            "8c6da0b17b3d2a1d9fdc906278adc35947d0c031"
        ],
        [
            "Require Export VST.msl.eq_dec.",
            "VernacRequire",
            "7211d0f3f73be3b56a2e383b31e34bb1e10e46b6"
        ],
        [
            "Lemma max_two_power_nat: forall n1 n2, Z.max (two_power_nat n1) (two_power_nat n2) = two_power_nat (Nat.max n1 n2).",
            "VernacStartTheoremProof",
            "97353f692de5b38f4aaf84afdbad63eb3b826586"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite !two_power_nat_two_p.",
            "VernacExtend",
            "2319d81ed8c6fd4a9fb2d8ff528aa131b6a0bd70"
        ],
        [
            "pose proof Zle_0_nat n1; pose proof Zle_0_nat n2.",
            "VernacExtend",
            "f907e3df022cb609724cbdc4f9ffc30aad2e9d44"
        ],
        [
            "rewrite Nat2Z.inj_max.",
            "VernacExtend",
            "08139377c84fc9c4e583596c11f5d0ebb3bb76d7"
        ],
        [
            "forget (Z.of_nat n1) as m1; forget (Z.of_nat n2) as m2.",
            "VernacExtend",
            "ec17ee04789b50fb5905c56896bf54b489426bff"
        ],
        [
            "destruct (Z_le_dec m1 m2).",
            "VernacExtend",
            "c5effc444d8876617d1045e0e0778cd5210fa730"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (Z.max_r m1 m2) by omega.",
            "VernacExtend",
            "f999cc93e44ef310a0e3113492a91de373de3da0"
        ],
        [
            "apply Z.max_r.",
            "VernacExtend",
            "4809f70dd4e432503f09e9f56a9df527753b3f3d"
        ],
        [
            "apply two_p_monotone; omega.",
            "VernacExtend",
            "6c1d964516dac16120b1f86d129f0edb3dae8c16"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (Z.max_l m1 m2) by omega.",
            "VernacExtend",
            "3487d94df92428ba0283f3926cdaeb06d4caeab9"
        ],
        [
            "apply Z.max_l.",
            "VernacExtend",
            "397548bdbbbf16dcf812c7c6271d50f8519ff7bc"
        ],
        [
            "apply two_p_monotone; omega.",
            "VernacExtend",
            "6c1d964516dac16120b1f86d129f0edb3dae8c16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_max_two_p: forall m1 m2, (exists n, m1 = two_power_nat n) -> (exists n, m2 = two_power_nat n) -> (exists n, Z.max m1 m2 = two_power_nat n).",
            "VernacStartTheoremProof",
            "783f3a09f500b54da7049382b99fa1b605cf7772"
        ],
        [
            "intros ? ? [? ?] [? ?].",
            "VernacExtend",
            "d48d380cf8ba752324cf105821f150ab1705b447"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite max_two_power_nat.",
            "VernacExtend",
            "3a00e443a07e3a319830bb30b17fbe8f9676f1fc"
        ],
        [
            "eexists; reflexivity.",
            "VernacExtend",
            "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma power_nat_divide: forall n m, two_power_nat n <= two_power_nat m -> Z.divide (two_power_nat n) (two_power_nat m).",
            "VernacStartTheoremProof",
            "34c7e69158b204468e71cd35e2c9e330c742fbb7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite two_power_nat_two_p in *.",
            "VernacExtend",
            "76eaf7de202dd20d623931ccc37a3208d28fb13d"
        ],
        [
            "unfold Z.divide.",
            "VernacExtend",
            "d25f5683f4c5f53aca08811a775e86f27b27b79a"
        ],
        [
            "exists (two_p (Z.of_nat m - Z.of_nat n)).",
            "VernacExtend",
            "c2fac60956c4aff5604f29e1c8e0225eb20d356b"
        ],
        [
            "assert ((Z.of_nat m) = (Z.of_nat m - Z.of_nat n) + Z.of_nat n) by omega.",
            "VernacExtend",
            "cdfdc5d79a9f6bc16cbb7dbb5c89f5d0566a5126"
        ],
        [
            "rewrite H0 at 1.",
            "VernacExtend",
            "4e52b21df18c8b0210ec90283fd944b8533f66e5"
        ],
        [
            "assert (Z.of_nat m >= 0) by omega.",
            "VernacExtend",
            "89a30e67e8b1fba5ca01bade53fca85dbf686784"
        ],
        [
            "assert (Z.of_nat n >= 0) by omega.",
            "VernacExtend",
            "84820415f8c931e05235b76594d5ed6e0e1a9f29"
        ],
        [
            "assert (Z.of_nat n <= Z.of_nat m).",
            "VernacExtend",
            "3a13a1c0c69a7d734de247247ef0972da5549e0d"
        ],
        [
            "destruct (Z_le_gt_dec (Z.of_nat n) (Z.of_nat m)).",
            "VernacExtend",
            "5f74b4c94ee47d88eb866e69e17fcfb2ac392f0c"
        ],
        [
            "exact l.",
            "VernacExtend",
            "efa2b6abdbd0965137045bcf56cd8ae18b3db15c"
        ],
        [
            "assert (Z.of_nat m < Z.of_nat n) by omega.",
            "VernacExtend",
            "7d46d224c1cf694b5b332c9f6951bc4da4e14431"
        ],
        [
            "assert (two_p (Z.of_nat m) < two_p (Z.of_nat n)) by (apply two_p_monotone_strict; omega).",
            "VernacExtend",
            "e20db6029d677ab78dea6d408d252bbbbac55a29"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply (two_p_is_exp (Z.of_nat m - Z.of_nat n) (Z.of_nat n)); omega.",
            "VernacExtend",
            "5c5929d01ad3e411df39d7c01765578944b22adf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma power_nat_divide_ge: forall n m: Z, (exists N, n = two_power_nat N) -> (exists M, m = two_power_nat M) -> (n >= m <-> (m | n)).",
            "VernacStartTheoremProof",
            "9d2ebaa075f36021106efb31ff7b1f5612b2c513"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H, H0.",
            "VernacExtend",
            "8db9e1441c64ed20802e4526963172d1abdaee94"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply power_nat_divide.",
            "VernacExtend",
            "d5cd701dcefc9477ca6b34ed893c8758fcf134f6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H1 as [k ?].",
            "VernacExtend",
            "90d785ebb05b666cc6f5dd94e903028464ea7144"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "pose proof two_power_nat_pos x0.",
            "VernacExtend",
            "752512e9cf11757fe98ec31d14a8283b1a2dc555"
        ],
        [
            "pose proof two_power_nat_pos x.",
            "VernacExtend",
            "03337d56d8af1f684c98ef38233331dd9fe110d0"
        ],
        [
            "assert (k > 0).",
            "VernacExtend",
            "4ccf60ee5602140d83550b1534f2cd5a4866b11b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply Zmult_gt_0_reg_l.",
            "VernacExtend",
            "0ec5f29b66dd34affbde41c5d45ae6ddc926bd64"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- H0, Z.mul_comm; omega.",
            "VernacExtend",
            "891de86c2176d7a7eab18f248b030844046cf30e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- (Z.mul_1_l m) at 2.",
            "VernacExtend",
            "08728c768c36941d39bc4f926de83ad3d9ff8118"
        ],
        [
            "apply Zmult_ge_compat_r; omega.",
            "VernacExtend",
            "ab18882d1213bd6647173600fc54848016546542"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma power_nat_divide_le: forall n m: Z, (exists N, n = two_power_nat N) -> (exists M, m = two_power_nat M) -> (m <= n <-> (m | n)).",
            "VernacStartTheoremProof",
            "1ba8236da611939894dcda23f33129be3c964326"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- power_nat_divide_ge; auto.",
            "VernacExtend",
            "611f5db6ea7a32f35b78e117feaac2544ff7bec3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma two_p_max_divide: forall m1 m2 m, (exists n, m1 = two_power_nat n) -> (exists n, m2 = two_power_nat n) -> ((Z.max m1 m2 | m) <-> (m1 | m) /\\ (m2 | m)).",
            "VernacStartTheoremProof",
            "12aa97c7328988a0ba81f3675f70b9e1cc381045"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Z_le_dec m1 m2).",
            "VernacExtend",
            "c5effc444d8876617d1045e0e0778cd5210fa730"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Z.max_r by omega.",
            "VernacExtend",
            "8781eace12c9cb209471cff64545a076e9d72b4f"
        ],
        [
            "rewrite power_nat_divide_le in l by auto.",
            "VernacExtend",
            "31bcc410d66efb605941a5932eb86a3c585a313a"
        ],
        [
            "pose proof Zdivides_trans m1 m2 m.",
            "VernacExtend",
            "ebcd76a13cc15674cb2cc838b68b90eaaab58449"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Z.max_l by omega.",
            "VernacExtend",
            "33008bfe4a3b1ffcaa54873a74678ce072eb8059"
        ],
        [
            "assert (m2 <= m1) by omega.",
            "VernacExtend",
            "0687495f4c3f30e249eda82f33725ffb014b5479"
        ],
        [
            "rewrite power_nat_divide_le in H1 by auto.",
            "VernacExtend",
            "cb88677dc9f4b4c57e3fb8a377738424f8e46137"
        ],
        [
            "pose proof Zdivides_trans m2 m1 m.",
            "VernacExtend",
            "6a06509a80a2e269279bc582e7acbca45ed8451a"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma two_p_max_1: forall m1 m2, (exists n, m1 = two_power_nat n) -> (exists n, m2 = two_power_nat n) -> (Z.max m1 m2 = 1 <-> m1 = 1 /\\ m2 = 1).",
            "VernacStartTheoremProof",
            "d1630002df1c10d753a48b1cfaa3158457b0c76b"
        ],
        [
            "assert (forall x, (exists n : nat, x = two_power_nat n) -> (x = 1 <-> (x | 1))).",
            "VernacExtend",
            "452913e0b3923127e00a8b3cf4bb6988c592330c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "exists 1; auto.",
            "VernacExtend",
            "f6a24efe77b3bd079df4c7ebf20984f4355b5b4f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- power_nat_divide_le in H0 by (auto; exists 0%nat; auto).",
            "VernacExtend",
            "3699b8e7723d62940989264300f865e07111f242"
        ],
        [
            "destruct H as [n ?]; subst x.",
            "VernacExtend",
            "25986fcbce3e6f7a17cb744813eabb7e1316b9e7"
        ],
        [
            "pose proof two_power_nat_pos n.",
            "VernacExtend",
            "8f31e240ccec9b0852cdec6d369386c37cbf1ebe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros m1 m2 Hm1 Hm2.",
            "VernacExtend",
            "91f590ef2a60f83cc11d45ebd7e51a5bb347d936"
        ],
        [
            "pose proof Z_max_two_p _ _ Hm1 Hm2 as Hmax.",
            "VernacExtend",
            "7ea07c647cdc741ebe83972ab27372d30d10b622"
        ],
        [
            "rewrite (H _ Hm1), (H _ Hm2), (H _ Hmax).",
            "VernacExtend",
            "f11e100ff48a974dde68a616c905221c4b845363"
        ],
        [
            "apply two_p_max_divide; auto.",
            "VernacExtend",
            "c5f1124866d4060e31fa36485750580bc1618daf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma two_power_nat_0: forall x, (exists n, x = two_power_nat n) -> x <> 0.",
            "VernacStartTheoremProof",
            "c4f84fba075301f3d91e5f05bef79362add14332"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "pose proof two_power_nat_pos x0.",
            "VernacExtend",
            "752512e9cf11757fe98ec31d14a8283b1a2dc555"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite andb_true_iff: align.",
            "VernacExtend",
            "f3ca700837785bfe8b843b3ca7516aace1d1cf31"
        ],
        [
            "Hint Rewrite <- Zle_is_le_bool: align.",
            "VernacExtend",
            "3e9f78acdfff889967c3399d390925765627dd33"
        ],
        [
            "Hint Rewrite Z.eqb_eq: align.",
            "VernacExtend",
            "1f18fbf820d8fa61a16504d31f063983e459de93"
        ],
        [
            "Hint Rewrite power_nat_divide_le using (auto with align): align.",
            "VernacExtend",
            "9aef163ad389fd3f7bbb3e87dee63a61acd88bee"
        ],
        [
            "Hint Rewrite Z.mod_divide using (apply two_power_nat_0; auto with align): align.",
            "VernacExtend",
            "7bb32d2adf9f283850a3cbbbdd9edcfb6b90a604"
        ],
        [
            "Hint Rewrite two_p_max_divide using (auto with align): align.",
            "VernacExtend",
            "fdd884efe3668c15d10b8b2eadfa35e2421333e6"
        ],
        [
            "Hint Rewrite two_p_max_1 using (auto with align): align.",
            "VernacExtend",
            "6259a667eff1fc0cb84c2590cabc677ecb635d0c"
        ],
        [
            "Hint Resolve Z_max_two_p: align.",
            "VernacHints",
            "f5548b9a2dbc8a2b4f8f1f2369bf5c710b2b2a2c"
        ],
        [
            "Lemma Z_of_nat_ge_O: forall n, Z.of_nat n >= 0.",
            "VernacStartTheoremProof",
            "f8ae9ef62899b7d457d718b2884ff1b2fc9aba46"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change 0 with (Z.of_nat O).",
            "VernacExtend",
            "2df72b6fda32553bbf98cf45ad75fbb17ace0c3d"
        ],
        [
            "apply inj_ge.",
            "VernacExtend",
            "ce53a074a612a9a4a69b5bf740e2ac01d292b962"
        ],
        [
            "clear; omega.",
            "VernacExtend",
            "eec4b40e7fab9dab9db362824141f438dba9b179"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_error_nth: forall A (al: list A) (z: A) i, (i < length al)%nat -> nth_error al i = Some (nth i al z).",
            "VernacStartTheoremProof",
            "28abf5e6c97125e33fa36679c4829d5aca1b1820"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert al H; induction i; destruct al; simpl; intros; auto; try omega.",
            "VernacExtend",
            "2d69a3543fd177827eadec43b119762735f45285"
        ],
        [
            "apply IHi.",
            "VernacExtend",
            "6d0640aefb702ff5a66a35d1980233055f0d9211"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_of_Z_eq: forall i, nat_of_Z (Z_of_nat i) = i.",
            "VernacStartTheoremProof",
            "2128ad217654c170657cf29b37282fa39ebc1d93"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply inj_eq_rev.",
            "VernacExtend",
            "8dd355b5b56fc654e5ddb32b1855346dfd65ac11"
        ],
        [
            "rewrite nat_of_Z_eq; auto.",
            "VernacExtend",
            "db000db23c3776a4c3b261e73dac9d34cc9762b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_error_length: forall {A} i (l: list A), nth_error l i = None <-> (i >= length l)%nat.",
            "VernacStartTheoremProof",
            "87f29773bff1a37f034f0d114f7f19247c364b0d"
        ],
        [
            "induction i; destruct l; simpl; intuition.",
            "VernacExtend",
            "fda64df184238aaf613f1ca468efb375f099d857"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "rewrite IHi in H.",
            "VernacExtend",
            "e9191ef3bc87df46609f12c69daf2c11417848fe"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite IHi.",
            "VernacExtend",
            "ebe0c4ed2591450f51fb016f126e1c4b576366f5"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prop_unext: forall P Q: Prop, P=Q -> (P<->Q).",
            "VernacStartTheoremProof",
            "9fadb5c1626494d9bc959172438ccbb069b1e857"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst; split; auto.",
            "VernacExtend",
            "c451ef2914ab67806aed8494e25bb2724f9ace83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_norepet_In_In: forall {K X} a x y (l:list (K*X)), list_norepet (map (@fst K X) l) -> In (a, x) l -> In (a, y) l -> x = y.",
            "VernacStartTheoremProof",
            "8521d3cecb156ee52a5bc2bf4aa340d5161a963c"
        ],
        [
            "induction l; intros N Ix Iy.",
            "VernacExtend",
            "7933bfe4c2dbca43458c4365eded80f110a3d3f7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv Ix.",
            "VernacExtend",
            "aeccb8b0a4e44edd26455ff5ce612d5a36cc7575"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in N; inv N.",
            "VernacExtend",
            "672b3d7f17405a21571cb7774ad8b31e7aab5044"
        ],
        [
            "destruct Ix.",
            "VernacExtend",
            "a1fe003c4c54b948ee515b9ce1b44f6a57f902e3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl in Iy; destruct Iy as [|Iy]; [congruence|].",
            "VernacExtend",
            "0c0d2e1f6ae31964455adce8b123cb131b1f3f9c"
        ],
        [
            "exfalso; apply (in_map (@fst K X)) in Iy; tauto.",
            "VernacExtend",
            "0efc742e71ebc87cd02428b186c403122bf701e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in Iy; destruct Iy as [|Iy].",
            "VernacExtend",
            "e0e124c17b4f30f546233ada134f93a1f3c7ecb2"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "exfalso; apply (in_map (@fst K X)) in H; tauto.",
            "VernacExtend",
            "caa23057e035a4150e2c151b9a6f435f9189a017"
        ],
        [
            "apply IHl; auto.",
            "VernacExtend",
            "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive sublist {A} : list A -> list A -> Prop := | sublist_nil : sublist nil nil | sublist_cons a l1 l2 : sublist l1 l2 -> sublist (a :: l1) (a :: l2) | sublist_drop a l1 l2 : sublist l1 l2 -> sublist l1 (a :: l2).",
            "VernacInductive",
            "7eb1c702374f3d03665f3a5eaff8bd8e840a7b93"
        ],
        [
            "Lemma sublist_In {A} (a : A) l1 l2 : sublist l1 l2 -> In a l1 -> In a l2.",
            "VernacStartTheoremProof",
            "c42dbd92c69a1abf054ebdca33ea8afbd58ab5d2"
        ],
        [
            "intros S; induction S; intros I.",
            "VernacExtend",
            "8de354ce75d6a4f11eb45de0e16d46ae40e35403"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion I.",
            "VernacExtend",
            "7255b3c700ed94352741e847c89f807f989634a4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in I; destruct I.",
            "VernacExtend",
            "93ad9343874d008805443d39c767b7e0ff115f8f"
        ],
        [
            "subst; left; auto.",
            "VernacExtend",
            "4d4a557d886ffffd40fb1d320c99b797cdf2b0b4"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_norepet {A} (l1 l2 : list A) : sublist l1 l2 -> list_norepet l2 -> list_norepet l1.",
            "VernacStartTheoremProof",
            "6eea6facf672ac96bf453216bd797308d3b4f96a"
        ],
        [
            "intros S; induction S; intros N; auto.",
            "VernacExtend",
            "cb8aff2e22331ef8193e96cf9bac4f05a7708f9f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion N; subst; constructor; auto.",
            "VernacExtend",
            "6d7ca73f7a978bb96f51346081b4081f379a35f7"
        ],
        [
            "pose proof sublist_In a l1 l2; auto.",
            "VernacExtend",
            "89d3db7204fda851f1cf7cc5c9f56f790fc2cd6f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion N; auto.",
            "VernacExtend",
            "3b8664f65ee47f689cc6132e045567960c21ebfb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import Coq.Sets.Ensembles.",
            "VernacRequire",
            "f3932269b2bb547fb3f8384be53442617199f07a"
        ],
        [
            "Definition Ensemble_join {A} (X Y Z: Ensemble A): Prop := (forall a, Z a <-> X a \\/ Y a) /\\ (forall a, X a -> Y a -> False).",
            "VernacDefinition",
            "6021d87eef8683f4955de8351e9fe5c4b6bf4f70"
        ],
        [
            "Require Coq.Logic.ConstructiveEpsilon.",
            "VernacRequire",
            "00071c35deb0e02d33362da6c01d1d9f634f92ee"
        ],
        [
            "Lemma decidable_countable_ex_sig {A} (f : nat -> A) (Hf : forall a, exists n, a = f n) (P : A -> Prop) (Pdec : forall x, {P x} + {~ P x}) : (exists x : A, P x) -> {x : A | P x}.",
            "VernacStartTheoremProof",
            "665bfe2addc5657b9b00de961e8ac666dc5c5deb"
        ],
        [
            "intros E.",
            "VernacExtend",
            "7ecb6d4dc9a9ce53bbd861c2f62e95916583a3a9"
        ],
        [
            "cut ({n | P (f n)}).",
            "VernacExtend",
            "80ce001b9ed27ebe097fd61d3bc55ca532e8445a"
        ],
        [
            "intros [n Hn]; eauto.",
            "VernacExtend",
            "aa8bbb4948191c9aeb16de8bce3e01f70eae7724"
        ],
        [
            "apply ConstructiveEpsilon.constructive_indefinite_ground_description_nat.",
            "VernacExtend",
            "828f6375282f0bacdb8292a39f75393be0631392"
        ],
        [
            "intro; apply Pdec.",
            "VernacExtend",
            "64e72e177d95c9726579f2b50fa83868face78f1"
        ],
        [
            "destruct E as [x Hx].",
            "VernacExtend",
            "cd08c3a7687cb99b5400dd60a7da60a3efa89e97"
        ],
        [
            "destruct (Hf x) as [n ->].",
            "VernacExtend",
            "689852da2ac988f1d6607a84d64e971fc10c0b07"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Tactic Notation \"if_tac\" \"eq:\" simple_intropattern(E) := match goal with |- context [if ?a then _ else _] => destruct a as [?H | ?H] eqn:E end.",
            "VernacExtend",
            "22c09d7bcbe8697b726c131a9579d56cd77e8c2b"
        ],
        [
            "Tactic Notation \"if_tac\" simple_intropattern(H) \"eq:\" simple_intropattern(E):= match goal with |- context [if ?a then _ else _] => destruct a as H eqn:E end.",
            "VernacExtend",
            "e7833c6dacd233c7ddcfb06d351e36a60ce13b32"
        ],
        [
            "Tactic Notation \"if_tac\" \"in\" hyp(H0) \"eq:\" simple_intropattern(E) := match type of H0 with context [if ?a then _ else _] => destruct a as [?H | ?H] eqn:E end.",
            "VernacExtend",
            "b37bc1e24d7bec8cc7108b6d57efb60ddb584066"
        ],
        [
            "Tactic Notation \"if_tac\" simple_intropattern(H) \"in\" hyp(H1) \"eq:\" simple_intropattern(E) := match type of H1 with context [if ?a then _ else _] => destruct a as H eqn:E end.",
            "VernacExtend",
            "b9c6b22930f3710fc6f9a602d2d80e90e07a74d6"
        ],
        [
            "Tactic Notation \"assert_specialize\" hyp(H) := match type of H with forall x : ?P, _ => let Htemp := fresh \"Htemp\" in assert P as Htemp; [ | specialize (H Htemp); try clear Htemp ] end.",
            "VernacExtend",
            "cf8153edbd03dcec4a143f595ae64ef25747fea6"
        ],
        [
            "Tactic Notation \"assert_specialize\" hyp(H) \"by\" tactic1(tac) := match type of H with forall x : ?P, _ => let Htemp := fresh \"Htemp\" in assert P as Htemp by tac; specialize (H Htemp); try clear Htemp end.",
            "VernacExtend",
            "e0809142d3aac348620b9b6fca5d842f0c5090b8"
        ],
        [
            "Tactic Notation \"assert_specialize\" hyp(H) \"as\" simple_intropattern(Hnew) := match type of H with forall x : ?P, _ => assert P as Hnew; [ | specialize (H Hnew) ] end.",
            "VernacExtend",
            "c4a7384f54878a4106b87503629e63162335cb60"
        ],
        [
            "Tactic Notation \"assert_specialize\" hyp(H) \"as\" simple_intropattern(Hnew) \"by\" tactic1(tac) := match type of H with forall x : ?P, _ => assert P as Hnew by tac; specialize (H Hnew) end.",
            "VernacExtend",
            "dde45d5de6505782af9167b818d30f470495609e"
        ],
        [
            "Ltac autospec H := specialize (H ltac:(solve [eauto])).",
            "VernacExtend",
            "4fbc640282a32b8e8f806243028b059111a2aebc"
        ],
        [
            "Ltac exact_eq H := revert H; match goal with |- ?p -> ?q => cut (p = q); [intros ->; auto | ] end.",
            "VernacExtend",
            "0e8fb6a531984889228815efe97e6ee7dc6a76a1"
        ],
        [
            "Tactic Notation \"rewr\" := match goal with | H : ?f = _ |- context [?f] => rewrite H | H : ?f _ = ?f _ |- _ => try (injection H; repeat intros ->) end.",
            "VernacExtend",
            "aba26d5ba7fd0b8e2467f73cb5e49c619872342a"
        ],
        [
            "Tactic Notation \"rewr\" constr(e) := match goal with E : e = _ |- _ => rewrite E | E : _ = e |- _ => rewrite <-E end.",
            "VernacExtend",
            "d3151c550697a6ca5a12265c3e3732df6279ea0e"
        ],
        [
            "Tactic Notation \"rewr\" constr(e) \"in\" \"*\" := match goal with E : e = _ |- _ => rewrite E in * | E : _ = e |- _ => rewrite <-E in * end.",
            "VernacExtend",
            "33b40a9223e8dcf11b0187330189e02f4d37ce03"
        ],
        [
            "Tactic Notation \"rewr\" constr(e) \"in\" hyp(H) := match goal with E : e = _ |- _ => rewrite E in H | E : _ = e |- _ => rewrite <-E in H end.",
            "VernacExtend",
            "3f67cb92258fa66e5c492e79963845ffb3ff8433"
        ],
        [
            "Lemma perm_search: forall {A} (a b: A) r s t, Permutation (a::t) s -> Permutation (b::t) r -> Permutation (a::r) (b::s).",
            "VernacStartTheoremProof",
            "3081176b683f9c4ff3e08cae4b067c2c18c3f4c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply perm_trans.",
            "VernacExtend",
            "de46b6efbf74e81a9d2be9aae043ae41759cc2e9"
        ],
        [
            "apply perm_skip.",
            "VernacExtend",
            "88d9c437306dbe4b5a3f0f8693d406682ecdb8a8"
        ],
        [
            "apply Permutation_sym.",
            "VernacExtend",
            "94262274c360805dd9834746f95363628f0dc4c6"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "eapply perm_trans.",
            "VernacExtend",
            "de46b6efbf74e81a9d2be9aae043ae41759cc2e9"
        ],
        [
            "apply perm_swap.",
            "VernacExtend",
            "ae31658d1834adacffd39ae0769b514845f20926"
        ],
        [
            "apply perm_skip.",
            "VernacExtend",
            "88d9c437306dbe4b5a3f0f8693d406682ecdb8a8"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_concat: forall {A} (P Q: list (list A)), Permutation P Q -> Permutation (concat P) (concat Q).",
            "VernacStartTheoremProof",
            "f32251db51721f68d8697503e1d8227c3d82d6b0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Permutation_refl.",
            "VernacExtend",
            "7d86172c1ec447099a072693514416eb00b5a015"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Permutation_app_head; auto.",
            "VernacExtend",
            "416d0667f73c057d8849ec26a131ba1b6d6f7996"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite !app_assoc.",
            "VernacExtend",
            "ca36acf6bd12bb065995e044329f33fdd0b3b5e4"
        ],
        [
            "apply Permutation_app_tail.",
            "VernacExtend",
            "00ff0f324e2e18af1e07ab04a0a785b87c8d977c"
        ],
        [
            "apply Permutation_app_comm.",
            "VernacExtend",
            "8cc81e9e367d4b09f69c2fe8d104bdd2b0a73621"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply Permutation_trans; eauto.",
            "VernacExtend",
            "593fceff18cbf0e6fb45d8143a14208d1df77b8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_app_comm_trans: forall (A: Type) (a b c : list A), Permutation (b++a) c -> Permutation (a++b) c.",
            "VernacStartTheoremProof",
            "fe80f65b9f0113cba5588897f79971d7516e026e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply Permutation_trans.",
            "VernacExtend",
            "fa01422a6c31e2994b7e8ba1a24e3a1e83c3f7be"
        ],
        [
            "apply Permutation_app_comm.",
            "VernacExtend",
            "8cc81e9e367d4b09f69c2fe8d104bdd2b0a73621"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac solve_perm := try match goal with | |- Permutation (?A ++ ?B) _ => is_evar A; first [is_evar B; fail 1| idtac]; apply Permutation_app_comm_trans end; repeat first [ apply Permutation_refl | apply perm_skip | eapply perm_search ].",
            "VernacExtend",
            "c949f97b83be2c4950422a8f2399ecfd849a79bd"
        ],
        [
            "Goal exists e, Permutation ((1::2::nil)++e) (3::2::1::5::nil).",
            "VernacDefinition",
            "d0a522cddbf02dd3825a72140f12f563388c7643"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "solve_perm.",
            "VernacExtend",
            "f643d53337a788c0fc13973ba8aefbb92d7f7505"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma range_pred_dec: forall (P: nat -> Prop), (forall n, {P n} + {~ P n}) -> forall m, {forall n, (n < m)%nat -> P n} + {~ forall n, (n < m)%nat -> P n}.",
            "VernacStartTheoremProof",
            "887486822f07c35598e06706a822fa92dffd9c31"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction m.",
            "VernacExtend",
            "6f6279e892ad221278939a9b429a59edaeeb1676"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (H m); [destruct IHm |].",
            "VernacExtend",
            "91dd99590015641160233573e335fcd6df185a15"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec n m).",
            "VernacExtend",
            "f7b80e24f51241e6d92529316480855608b287e4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply p0; omega.",
            "VernacExtend",
            "94c72ebf5c5c5db6182b499ade741b30ec2659f2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply n; clear n.",
            "VernacExtend",
            "56c5cbea2ffa17a2d76ebe7acc508b9a003269e4"
        ],
        [
            "intros; apply H0; omega.",
            "VernacExtend",
            "470aaf7c9fcb6ed3ea36501fbc72a7d7d12968aa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply n; clear n.",
            "VernacExtend",
            "56c5cbea2ffa17a2d76ebe7acc508b9a003269e4"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z2Nat_neg: forall i, i < 0 -> Z.to_nat i = 0%nat.",
            "VernacStartTheoremProof",
            "cc238dc990ccc70ad9490fbba8788b9ff0c7dbca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct i; try reflexivity.",
            "VernacExtend",
            "dd0cc5e041cb8bfecbca1c74c2e4f8cba968ecec"
        ],
        [
            "pose proof Zgt_pos_0 p; omega.",
            "VernacExtend",
            "79b3f867c79ee73a4c2844d9eb75ad931512939c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zrange_pred_dec: forall (P: Z -> Prop), (forall z, {P z} + {~ P z}) -> forall l r, {forall z, l <= z < r -> P z} + {~ forall z, l <= z < r -> P z}.",
            "VernacStartTheoremProof",
            "25550a25d2a5669a42300171609f58b6c931009b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((forall n: nat, (n < Z.to_nat (r - l))%nat -> P (l + Z.of_nat n)) <-> (forall z : Z, l <= z < r -> P z)).",
            "VernacExtend",
            "c09f31d04838dfbdf24ab55a0746b0239b16a0c9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "specialize (H0 (Z.to_nat (z - l))).",
            "VernacExtend",
            "3e93796a2e7aee9f03c4f23336298cc3868d3aa0"
        ],
        [
            "rewrite <- Z2Nat.inj_lt in H0 by omega.",
            "VernacExtend",
            "32edb52b22e0737561c88f4ed82f3cfc8307db51"
        ],
        [
            "spec H0; [omega |].",
            "VernacExtend",
            "49a5f196182784e8d969dd9e962c567f1ef57a18"
        ],
        [
            "rewrite Z2Nat.id in H0 by omega.",
            "VernacExtend",
            "1d02b26337c0b9083be1e29d80d993d9e2cf9760"
        ],
        [
            "replace (l + (z - l)) with z in H0 by omega.",
            "VernacExtend",
            "d762b2fde8faf5ec3385fd5bf27aa5f7d67ed57b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "rewrite Nat2Z.inj_lt in H1.",
            "VernacExtend",
            "58ef91830fcbcd0553a617bce58d9b5edb2d4661"
        ],
        [
            "destruct (zlt (r - l) 0).",
            "VernacExtend",
            "db56e7a531e3b1bddb20a84c59e85c443b419648"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z2Nat_neg in H1 by omega.",
            "VernacExtend",
            "5142a7101570669cac6e410ef51e739fa96721f9"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z2Nat.id in H1 by omega.",
            "VernacExtend",
            "c8f7cbbf392f0adf671906b3e0d0e965b957b124"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "eapply sumbool_dec_iff; [clear H0 | eassumption].",
            "VernacExtend",
            "1fef075759bea98a616694cc5b600bdbe4fcd8b3"
        ],
        [
            "apply range_pred_dec.",
            "VernacExtend",
            "82bfd363302f809b0a43ca9a10e1464c0cdc2f09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eqb_list {A: Type} (eqb_A: A -> A -> bool): list A -> list A -> bool := fix eqb_list (l1 l2: list A): bool := match l1, l2 with | nil, nil => true | a1 :: l1, a2 :: l2 => eqb_A a1 a2 && eqb_list l1 l2 | _, _ => false end.",
            "VernacDefinition",
            "d9bad37bca35969de5f162f6241b5db6f1241b45"
        ],
        [
            "Lemma eqb_list_spec: forall {A: Type} (eqb_A: A -> A -> bool), (forall a1 a2, eqb_A a1 a2 = true <-> a1 = a2) -> (forall l1 l2, eqb_list eqb_A l1 l2 = true <-> l1 = l2).",
            "VernacStartTheoremProof",
            "a32e5e4194f3458fc57415bb16c732c6f6a1c792"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert l2; induction l1 as [| a1 l1]; intros; destruct l2 as [| a2 l2].",
            "VernacExtend",
            "d10af233a8afc5801787cf302aa4221518a1429d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; intros; congruence.",
            "VernacExtend",
            "e6e7134eeb6213890fdce2a7ed77f1313465a8a9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; intros; congruence.",
            "VernacExtend",
            "e6e7134eeb6213890fdce2a7ed77f1313465a8a9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite andb_true_iff.",
            "VernacExtend",
            "2e0a0ffca5d243f404153bc36ad3db5c01c2e4b5"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite IHl1.",
            "VernacExtend",
            "ff982e15bacd402f06c6809dc374790cc3fb6db2"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H0; subst; auto.",
            "VernacExtend",
            "e9aeda1ee1fd1484ea62ff8f483ed19c5daf94d7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H0; auto.",
            "VernacExtend",
            "a747752c9ff1861588c8959f4ce90cf59f358ae3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_ind2_Type: forall P : nat -> Type, ((forall n, (forall j:nat, (j<n )%nat -> P j) -> P n):Type) -> (forall n, P n).",
            "VernacStartTheoremProof",
            "7a58ec6a2916015e9316595043eaebba2ca58570"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall j , (j <= n)%nat -> P j).",
            "VernacExtend",
            "158f006955a7bfe967f1e35b4977cd0c1ad35cb7"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace j with 0%nat ; try omega.",
            "VernacExtend",
            "499655f52a6fb0d79ed7abff36453f481d29d498"
        ],
        [
            "apply X; intros.",
            "VernacExtend",
            "76ee591070c3e27da956030e5a29352af726c4dc"
        ],
        [
            "elimtype False; omega.",
            "VernacExtend",
            "528b630f62bf971d3e6394d60b9ec83d551b6f98"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply X.",
            "VernacExtend",
            "1a06263bf241d2c272a11be0f0a1522334cc2c93"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply X0.",
            "VernacExtend",
            "88c6262898de272b4535722e555a725a07f1a728"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_ind2: forall P : nat -> Prop, (forall n, (forall j:nat, (j<n )%nat -> P j) -> P n) -> (forall n, P n).",
            "VernacStartTheoremProof",
            "af2aca6b47686d49b36ab1cc490fb9332c5db796"
        ],
        [
            "intros; apply Wf_nat.lt_wf_ind.",
            "VernacExtend",
            "e18d4e86677fa4eb730e38ea1870234f2f4af65a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equiv_e2 : forall A B: Prop, A=B -> B -> A.",
            "VernacStartTheoremProof",
            "444f7f56d60eb28ad82dd2776fb4cf9030058c9f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments equiv_e2 [A B] _ _.",
            "VernacArguments",
            "cd4af84b28facee50acd24276b478e0b5aa8a331"
        ],
        [
            "Definition opt2list (A: Type) (x: option A) := match x with Some a => a::nil | None => nil end.",
            "VernacDefinition",
            "eb5e6090c4144067da3fd6c76c6fbfcd22c88477"
        ],
        [
            "Arguments opt2list [A] _.",
            "VernacArguments",
            "3b1d6ab1679cc4155402b68afafd96c5d352c68b"
        ],
        [
            "Definition isSome {A} (o: option A) := match o with Some _ => True | None => False end.",
            "VernacDefinition",
            "737d50f3cf1e438e28fe937b8607b3703c2f6221"
        ],
        [
            "Definition isSome_dec: forall {A} (P: option A), isSome P + ~ isSome P.",
            "VernacDefinition",
            "54e11922ac43d45fa150c8647a3f9ea0022efdc3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct P; simpl; auto.",
            "VernacExtend",
            "d62833077f9cd8960bec9a80ce8bd170d595c3c3"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ]
    ],
    "proofs": [
        {
            "name": "max_two_power_nat",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite !two_power_nat_two_p.",
                        "VernacExtend",
                        "2319d81ed8c6fd4a9fb2d8ff528aa131b6a0bd70"
                    ]
                },
                {
                    "command": [
                        "pose proof Zle_0_nat n1; pose proof Zle_0_nat n2.",
                        "VernacExtend",
                        "f907e3df022cb609724cbdc4f9ffc30aad2e9d44"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_max.",
                        "VernacExtend",
                        "08139377c84fc9c4e583596c11f5d0ebb3bb76d7"
                    ]
                },
                {
                    "command": [
                        "forget (Z.of_nat n1) as m1; forget (Z.of_nat n2) as m2.",
                        "VernacExtend",
                        "ec17ee04789b50fb5905c56896bf54b489426bff"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec m1 m2).",
                        "VernacExtend",
                        "c5effc444d8876617d1045e0e0778cd5210fa730"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite (Z.max_r m1 m2) by omega.",
                        "VernacExtend",
                        "f999cc93e44ef310a0e3113492a91de373de3da0"
                    ]
                },
                {
                    "command": [
                        "apply Z.max_r.",
                        "VernacExtend",
                        "4809f70dd4e432503f09e9f56a9df527753b3f3d"
                    ]
                },
                {
                    "command": [
                        "apply two_p_monotone; omega.",
                        "VernacExtend",
                        "6c1d964516dac16120b1f86d129f0edb3dae8c16"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite (Z.max_l m1 m2) by omega.",
                        "VernacExtend",
                        "3487d94df92428ba0283f3926cdaeb06d4caeab9"
                    ]
                },
                {
                    "command": [
                        "apply Z.max_l.",
                        "VernacExtend",
                        "397548bdbbbf16dcf812c7c6271d50f8519ff7bc"
                    ]
                },
                {
                    "command": [
                        "apply two_p_monotone; omega.",
                        "VernacExtend",
                        "6c1d964516dac16120b1f86d129f0edb3dae8c16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_max_two_p",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros ? ? [? ?] [? ?].",
                        "VernacExtend",
                        "d48d380cf8ba752324cf105821f150ab1705b447"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite max_two_power_nat.",
                        "VernacExtend",
                        "3a00e443a07e3a319830bb30b17fbe8f9676f1fc"
                    ]
                },
                {
                    "command": [
                        "eexists; reflexivity.",
                        "VernacExtend",
                        "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "power_nat_divide",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite two_power_nat_two_p in *.",
                        "VernacExtend",
                        "76eaf7de202dd20d623931ccc37a3208d28fb13d"
                    ]
                },
                {
                    "command": [
                        "unfold Z.divide.",
                        "VernacExtend",
                        "d25f5683f4c5f53aca08811a775e86f27b27b79a"
                    ]
                },
                {
                    "command": [
                        "exists (two_p (Z.of_nat m - Z.of_nat n)).",
                        "VernacExtend",
                        "c2fac60956c4aff5604f29e1c8e0225eb20d356b"
                    ]
                },
                {
                    "command": [
                        "assert ((Z.of_nat m) = (Z.of_nat m - Z.of_nat n) + Z.of_nat n) by omega.",
                        "VernacExtend",
                        "cdfdc5d79a9f6bc16cbb7dbb5c89f5d0566a5126"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 at 1.",
                        "VernacExtend",
                        "4e52b21df18c8b0210ec90283fd944b8533f66e5"
                    ]
                },
                {
                    "command": [
                        "assert (Z.of_nat m >= 0) by omega.",
                        "VernacExtend",
                        "89a30e67e8b1fba5ca01bade53fca85dbf686784"
                    ]
                },
                {
                    "command": [
                        "assert (Z.of_nat n >= 0) by omega.",
                        "VernacExtend",
                        "84820415f8c931e05235b76594d5ed6e0e1a9f29"
                    ]
                },
                {
                    "command": [
                        "assert (Z.of_nat n <= Z.of_nat m).",
                        "VernacExtend",
                        "3a13a1c0c69a7d734de247247ef0972da5549e0d"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_gt_dec (Z.of_nat n) (Z.of_nat m)).",
                        "VernacExtend",
                        "5f74b4c94ee47d88eb866e69e17fcfb2ac392f0c"
                    ]
                },
                {
                    "command": [
                        "exact l.",
                        "VernacExtend",
                        "efa2b6abdbd0965137045bcf56cd8ae18b3db15c"
                    ]
                },
                {
                    "command": [
                        "assert (Z.of_nat m < Z.of_nat n) by omega.",
                        "VernacExtend",
                        "7d46d224c1cf694b5b332c9f6951bc4da4e14431"
                    ]
                },
                {
                    "command": [
                        "assert (two_p (Z.of_nat m) < two_p (Z.of_nat n)) by (apply two_p_monotone_strict; omega).",
                        "VernacExtend",
                        "e20db6029d677ab78dea6d408d252bbbbac55a29"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply (two_p_is_exp (Z.of_nat m - Z.of_nat n) (Z.of_nat n)); omega.",
                        "VernacExtend",
                        "5c5929d01ad3e411df39d7c01765578944b22adf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "power_nat_divide_le",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- power_nat_divide_ge; auto.",
                        "VernacExtend",
                        "611f5db6ea7a32f35b78e117feaac2544ff7bec3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_p_max_divide",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec m1 m2).",
                        "VernacExtend",
                        "c5effc444d8876617d1045e0e0778cd5210fa730"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.max_r by omega.",
                        "VernacExtend",
                        "8781eace12c9cb209471cff64545a076e9d72b4f"
                    ]
                },
                {
                    "command": [
                        "rewrite power_nat_divide_le in l by auto.",
                        "VernacExtend",
                        "31bcc410d66efb605941a5932eb86a3c585a313a"
                    ]
                },
                {
                    "command": [
                        "pose proof Zdivides_trans m1 m2 m.",
                        "VernacExtend",
                        "ebcd76a13cc15674cb2cc838b68b90eaaab58449"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.max_l by omega.",
                        "VernacExtend",
                        "33008bfe4a3b1ffcaa54873a74678ce072eb8059"
                    ]
                },
                {
                    "command": [
                        "assert (m2 <= m1) by omega.",
                        "VernacExtend",
                        "0687495f4c3f30e249eda82f33725ffb014b5479"
                    ]
                },
                {
                    "command": [
                        "rewrite power_nat_divide_le in H1 by auto.",
                        "VernacExtend",
                        "cb88677dc9f4b4c57e3fb8a377738424f8e46137"
                    ]
                },
                {
                    "command": [
                        "pose proof Zdivides_trans m2 m1 m.",
                        "VernacExtend",
                        "6a06509a80a2e269279bc582e7acbca45ed8451a"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_p_max_1",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "assert (forall x, (exists n : nat, x = two_power_nat n) -> (x = 1 <-> (x | 1))).",
                        "VernacExtend",
                        "452913e0b3923127e00a8b3cf4bb6988c592330c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "exists 1; auto.",
                        "VernacExtend",
                        "f6a24efe77b3bd079df4c7ebf20984f4355b5b4f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- power_nat_divide_le in H0 by (auto; exists 0%nat; auto).",
                        "VernacExtend",
                        "3699b8e7723d62940989264300f865e07111f242"
                    ]
                },
                {
                    "command": [
                        "destruct H as [n ?]; subst x.",
                        "VernacExtend",
                        "25986fcbce3e6f7a17cb744813eabb7e1316b9e7"
                    ]
                },
                {
                    "command": [
                        "pose proof two_power_nat_pos n.",
                        "VernacExtend",
                        "8f31e240ccec9b0852cdec6d369386c37cbf1ebe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros m1 m2 Hm1 Hm2.",
                        "VernacExtend",
                        "91f590ef2a60f83cc11d45ebd7e51a5bb347d936"
                    ]
                },
                {
                    "command": [
                        "pose proof Z_max_two_p _ _ Hm1 Hm2 as Hmax.",
                        "VernacExtend",
                        "7ea07c647cdc741ebe83972ab27372d30d10b622"
                    ]
                },
                {
                    "command": [
                        "rewrite (H _ Hm1), (H _ Hm2), (H _ Hmax).",
                        "VernacExtend",
                        "f11e100ff48a974dde68a616c905221c4b845363"
                    ]
                },
                {
                    "command": [
                        "apply two_p_max_divide; auto.",
                        "VernacExtend",
                        "c5f1124866d4060e31fa36485750580bc1618daf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_power_nat_0",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "pose proof two_power_nat_pos x0.",
                        "VernacExtend",
                        "752512e9cf11757fe98ec31d14a8283b1a2dc555"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_of_nat_ge_O",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change 0 with (Z.of_nat O).",
                        "VernacExtend",
                        "2df72b6fda32553bbf98cf45ad75fbb17ace0c3d"
                    ]
                },
                {
                    "command": [
                        "apply inj_ge.",
                        "VernacExtend",
                        "ce53a074a612a9a4a69b5bf740e2ac01d292b962"
                    ]
                },
                {
                    "command": [
                        "clear; omega.",
                        "VernacExtend",
                        "eec4b40e7fab9dab9db362824141f438dba9b179"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_error_nth",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert al H; induction i; destruct al; simpl; intros; auto; try omega.",
                        "VernacExtend",
                        "2d69a3543fd177827eadec43b119762735f45285"
                    ]
                },
                {
                    "command": [
                        "apply IHi.",
                        "VernacExtend",
                        "6d0640aefb702ff5a66a35d1980233055f0d9211"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_of_Z_eq",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply inj_eq_rev.",
                        "VernacExtend",
                        "8dd355b5b56fc654e5ddb32b1855346dfd65ac11"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_Z_eq; auto.",
                        "VernacExtend",
                        "db000db23c3776a4c3b261e73dac9d34cc9762b7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_error_length",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "induction i; destruct l; simpl; intuition.",
                        "VernacExtend",
                        "fda64df184238aaf613f1ca468efb375f099d857"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "rewrite IHi in H.",
                        "VernacExtend",
                        "e9191ef3bc87df46609f12c69daf2c11417848fe"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite IHi.",
                        "VernacExtend",
                        "ebe0c4ed2591450f51fb016f126e1c4b576366f5"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prop_unext",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst; split; auto.",
                        "VernacExtend",
                        "c451ef2914ab67806aed8494e25bb2724f9ace83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_norepet_In_In",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "induction l; intros N Ix Iy.",
                        "VernacExtend",
                        "7933bfe4c2dbca43458c4365eded80f110a3d3f7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv Ix.",
                        "VernacExtend",
                        "aeccb8b0a4e44edd26455ff5ce612d5a36cc7575"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in N; inv N.",
                        "VernacExtend",
                        "672b3d7f17405a21571cb7774ad8b31e7aab5044"
                    ]
                },
                {
                    "command": [
                        "destruct Ix.",
                        "VernacExtend",
                        "a1fe003c4c54b948ee515b9ce1b44f6a57f902e3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "simpl in Iy; destruct Iy as [|Iy]; [congruence|].",
                        "VernacExtend",
                        "0c0d2e1f6ae31964455adce8b123cb131b1f3f9c"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply (in_map (@fst K X)) in Iy; tauto.",
                        "VernacExtend",
                        "0efc742e71ebc87cd02428b186c403122bf701e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in Iy; destruct Iy as [|Iy].",
                        "VernacExtend",
                        "e0e124c17b4f30f546233ada134f93a1f3c7ecb2"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply (in_map (@fst K X)) in H; tauto.",
                        "VernacExtend",
                        "caa23057e035a4150e2c151b9a6f435f9189a017"
                    ]
                },
                {
                    "command": [
                        "apply IHl; auto.",
                        "VernacExtend",
                        "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_In",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros S; induction S; intros I.",
                        "VernacExtend",
                        "8de354ce75d6a4f11eb45de0e16d46ae40e35403"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion I.",
                        "VernacExtend",
                        "7255b3c700ed94352741e847c89f807f989634a4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in I; destruct I.",
                        "VernacExtend",
                        "93ad9343874d008805443d39c767b7e0ff115f8f"
                    ]
                },
                {
                    "command": [
                        "subst; left; auto.",
                        "VernacExtend",
                        "4d4a557d886ffffd40fb1d320c99b797cdf2b0b4"
                    ]
                },
                {
                    "command": [
                        "right; auto.",
                        "VernacExtend",
                        "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right; auto.",
                        "VernacExtend",
                        "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_norepet",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros S; induction S; intros N; auto.",
                        "VernacExtend",
                        "cb8aff2e22331ef8193e96cf9bac4f05a7708f9f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion N; subst; constructor; auto.",
                        "VernacExtend",
                        "6d7ca73f7a978bb96f51346081b4081f379a35f7"
                    ]
                },
                {
                    "command": [
                        "pose proof sublist_In a l1 l2; auto.",
                        "VernacExtend",
                        "89d3db7204fda851f1cf7cc5c9f56f790fc2cd6f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion N; auto.",
                        "VernacExtend",
                        "3b8664f65ee47f689cc6132e045567960c21ebfb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decidable_countable_ex_sig",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros E.",
                        "VernacExtend",
                        "7ecb6d4dc9a9ce53bbd861c2f62e95916583a3a9"
                    ]
                },
                {
                    "command": [
                        "cut ({n | P (f n)}).",
                        "VernacExtend",
                        "80ce001b9ed27ebe097fd61d3bc55ca532e8445a"
                    ]
                },
                {
                    "command": [
                        "intros [n Hn]; eauto.",
                        "VernacExtend",
                        "aa8bbb4948191c9aeb16de8bce3e01f70eae7724"
                    ]
                },
                {
                    "command": [
                        "apply ConstructiveEpsilon.constructive_indefinite_ground_description_nat.",
                        "VernacExtend",
                        "828f6375282f0bacdb8292a39f75393be0631392"
                    ]
                },
                {
                    "command": [
                        "intro; apply Pdec.",
                        "VernacExtend",
                        "64e72e177d95c9726579f2b50fa83868face78f1"
                    ]
                },
                {
                    "command": [
                        "destruct E as [x Hx].",
                        "VernacExtend",
                        "cd08c3a7687cb99b5400dd60a7da60a3efa89e97"
                    ]
                },
                {
                    "command": [
                        "destruct (Hf x) as [n ->].",
                        "VernacExtend",
                        "689852da2ac988f1d6607a84d64e971fc10c0b07"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_concat",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_refl.",
                        "VernacExtend",
                        "7d86172c1ec447099a072693514416eb00b5a015"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_app_head; auto.",
                        "VernacExtend",
                        "416d0667f73c057d8849ec26a131ba1b6d6f7996"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite !app_assoc.",
                        "VernacExtend",
                        "ca36acf6bd12bb065995e044329f33fdd0b3b5e4"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_app_tail.",
                        "VernacExtend",
                        "00ff0f324e2e18af1e07ab04a0a785b87c8d977c"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_app_comm.",
                        "VernacExtend",
                        "8cc81e9e367d4b09f69c2fe8d104bdd2b0a73621"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply Permutation_trans; eauto.",
                        "VernacExtend",
                        "593fceff18cbf0e6fb45d8143a14208d1df77b8b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "range_pred_dec",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction m.",
                        "VernacExtend",
                        "6f6279e892ad221278939a9b429a59edaeeb1676"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (H m); [destruct IHm |].",
                        "VernacExtend",
                        "91dd99590015641160233573e335fcd6df185a15"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec n m).",
                        "VernacExtend",
                        "f7b80e24f51241e6d92529316480855608b287e4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply p0; omega.",
                        "VernacExtend",
                        "94c72ebf5c5c5db6182b499ade741b30ec2659f2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply n; clear n.",
                        "VernacExtend",
                        "56c5cbea2ffa17a2d76ebe7acc508b9a003269e4"
                    ]
                },
                {
                    "command": [
                        "intros; apply H0; omega.",
                        "VernacExtend",
                        "470aaf7c9fcb6ed3ea36501fbc72a7d7d12968aa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply n; clear n.",
                        "VernacExtend",
                        "56c5cbea2ffa17a2d76ebe7acc508b9a003269e4"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2Nat_neg",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct i; try reflexivity.",
                        "VernacExtend",
                        "dd0cc5e041cb8bfecbca1c74c2e4f8cba968ecec"
                    ]
                },
                {
                    "command": [
                        "pose proof Zgt_pos_0 p; omega.",
                        "VernacExtend",
                        "79b3f867c79ee73a4c2844d9eb75ad931512939c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zrange_pred_dec",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((forall n: nat, (n < Z.to_nat (r - l))%nat -> P (l + Z.of_nat n)) <-> (forall z : Z, l <= z < r -> P z)).",
                        "VernacExtend",
                        "c09f31d04838dfbdf24ab55a0746b0239b16a0c9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 (Z.to_nat (z - l))).",
                        "VernacExtend",
                        "3e93796a2e7aee9f03c4f23336298cc3868d3aa0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2Nat.inj_lt in H0 by omega.",
                        "VernacExtend",
                        "32edb52b22e0737561c88f4ed82f3cfc8307db51"
                    ]
                },
                {
                    "command": [
                        "spec H0; [omega |].",
                        "VernacExtend",
                        "49a5f196182784e8d969dd9e962c567f1ef57a18"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.id in H0 by omega.",
                        "VernacExtend",
                        "1d02b26337c0b9083be1e29d80d993d9e2cf9760"
                    ]
                },
                {
                    "command": [
                        "replace (l + (z - l)) with z in H0 by omega.",
                        "VernacExtend",
                        "d762b2fde8faf5ec3385fd5bf27aa5f7d67ed57b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_lt in H1.",
                        "VernacExtend",
                        "58ef91830fcbcd0553a617bce58d9b5edb2d4661"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (r - l) 0).",
                        "VernacExtend",
                        "db56e7a531e3b1bddb20a84c59e85c443b419648"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat_neg in H1 by omega.",
                        "VernacExtend",
                        "5142a7101570669cac6e410ef51e739fa96721f9"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.id in H1 by omega.",
                        "VernacExtend",
                        "c8f7cbbf392f0adf671906b3e0d0e965b957b124"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "eapply sumbool_dec_iff; [clear H0 | eassumption].",
                        "VernacExtend",
                        "1fef075759bea98a616694cc5b600bdbe4fcd8b3"
                    ]
                },
                {
                    "command": [
                        "apply range_pred_dec.",
                        "VernacExtend",
                        "82bfd363302f809b0a43ca9a10e1464c0cdc2f09"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_list_spec",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert l2; induction l1 as [| a1 l1]; intros; destruct l2 as [| a2 l2].",
                        "VernacExtend",
                        "d10af233a8afc5801787cf302aa4221518a1429d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; intros; congruence.",
                        "VernacExtend",
                        "e6e7134eeb6213890fdce2a7ed77f1313465a8a9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; intros; congruence.",
                        "VernacExtend",
                        "e6e7134eeb6213890fdce2a7ed77f1313465a8a9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff.",
                        "VernacExtend",
                        "2e0a0ffca5d243f404153bc36ad3db5c01c2e4b5"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1.",
                        "VernacExtend",
                        "ff982e15bacd402f06c6809dc374790cc3fb6db2"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H0; subst; auto.",
                        "VernacExtend",
                        "e9aeda1ee1fd1484ea62ff8f483ed19c5daf94d7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv H0; auto.",
                        "VernacExtend",
                        "a747752c9ff1861588c8959f4ce90cf59f358ae3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_ind2_Type",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall j , (j <= n)%nat -> P j).",
                        "VernacExtend",
                        "158f006955a7bfe967f1e35b4977cd0c1ad35cb7"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace j with 0%nat ; try omega.",
                        "VernacExtend",
                        "499655f52a6fb0d79ed7abff36453f481d29d498"
                    ]
                },
                {
                    "command": [
                        "apply X; intros.",
                        "VernacExtend",
                        "76ee591070c3e27da956030e5a29352af726c4dc"
                    ]
                },
                {
                    "command": [
                        "elimtype False; omega.",
                        "VernacExtend",
                        "528b630f62bf971d3e6394d60b9ec83d551b6f98"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply X.",
                        "VernacExtend",
                        "1a06263bf241d2c272a11be0f0a1522334cc2c93"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply X0.",
                        "VernacExtend",
                        "88c6262898de272b4535722e555a725a07f1a728"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_ind2",
            "line_nb": 358,
            "steps": [
                {
                    "command": [
                        "intros; apply Wf_nat.lt_wf_ind.",
                        "VernacExtend",
                        "e18d4e86677fa4eb730e38ea1870234f2f4af65a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equiv_e2",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isSome_dec",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct P; simpl; auto.",
                        "VernacExtend",
                        "d62833077f9cd8960bec9a80ce8bd170d595c3c3"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}