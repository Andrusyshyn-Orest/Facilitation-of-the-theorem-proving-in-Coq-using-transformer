{
    "filename": "veric/align_mem.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Coq.Sorting.Permutation.",
            "VernacRequire",
            "91cb696adf793d75c8f1c3333c2ab6d7da008e71"
        ],
        [
            "Require Import Coq.Sorting.Sorting.",
            "VernacRequire",
            "827f5de4d2069b37ded3898dbc26d381ac4ceb8c"
        ],
        [
            "Require Import Coq.Structures.Orders.",
            "VernacRequire",
            "3d314ce5a8211f9514cd0d318aca556f0adb5451"
        ],
        [
            "Require Import VST.veric.base.",
            "VernacRequire",
            "44430f3044f6ed3bc31c11a137cd98cdfe01c277"
        ],
        [
            "Require Import compcert.cfrontend.Ctypes.",
            "VernacRequire",
            "7112843117c4021682751b14f43439fd963104b6"
        ],
        [
            "Require Import VST.veric.type_induction.",
            "VernacRequire",
            "37952b686b9cca469f5496a7d821c5c05fa8416d"
        ],
        [
            "Require Import VST.veric.composite_compute.",
            "VernacRequire",
            "4012156c6ea129f43d08826402d0c803d4add346"
        ],
        [
            "Section align_compatible_rec.",
            "VernacBeginSection",
            "c22908bdd09080738aa9b21c334c9d9bb7e25d58"
        ],
        [
            "Context (cenv: composite_env).",
            "VernacContext",
            "17675fcbff1a4b6b07d0e154ffd74ea6d6e48295"
        ],
        [
            "Inductive align_compatible_rec: type -> Z -> Prop := | align_compatible_rec_by_value: forall t ch z, access_mode t = By_value ch -> (Memdata.align_chunk ch | z) -> align_compatible_rec t z | align_compatible_rec_Tarray: forall t n a z, (forall i, 0 <= i < n -> align_compatible_rec t (z + sizeof cenv t * i)) -> align_compatible_rec (Tarray t n a) z | align_compatible_rec_Tstruct: forall i a co z, cenv ! i = Some co -> (forall i0 t0 z0, field_type i0 (co_members co) = Errors.OK t0 -> field_offset cenv i0 (co_members co) = Errors.OK z0 -> align_compatible_rec t0 (z + z0)) -> align_compatible_rec (Tstruct i a) z | align_compatible_rec_Tunion: forall i a co z, cenv ! i = Some co -> (forall i0 t0, field_type i0 (co_members co) = Errors.OK t0 -> align_compatible_rec t0 z) -> align_compatible_rec (Tunion i a) z.",
            "VernacInductive",
            "59516f6b972f70726dd049a6bf81585be6ea391f"
        ],
        [
            "Lemma align_compatible_rec_by_value_inv : forall t ch z, access_mode t = By_value ch -> align_compatible_rec t z -> (Memdata.align_chunk ch | z).",
            "VernacStartTheoremProof",
            "8f6781c70a6c11b1ab287fddd8195c5259b6ab2d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite H in H1; inv H1; auto.",
            "VernacExtend",
            "3e6af54f96b57b74b0d4113ff4baa936e24ab1f5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma align_compatible_rec_Tarray_inv: forall t n a z, align_compatible_rec (Tarray t n a) z -> (forall i : Z, 0 <= i < n -> align_compatible_rec t (z + sizeof cenv t * i)).",
            "VernacStartTheoremProof",
            "204c2612b13998c9c6b22378429e9d5f9ad292be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma align_compatible_rec_Tstruct_inv: forall i a co z, cenv ! i = Some co -> align_compatible_rec (Tstruct i a) z -> (forall i0 t0 z0, field_type i0 (co_members co) = Errors.OK t0 -> field_offset cenv i0 (co_members co) = Errors.OK z0 -> align_compatible_rec t0 (z + z0)).",
            "VernacStartTheoremProof",
            "a8204d5c7aa157b4172c44521c1daa45445ec7a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite H in H5; inv H5.",
            "VernacExtend",
            "ef2bdd9d257b1206e190ebde9f14c48a09bd7d83"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma align_compatible_rec_Tunion_inv: forall i a co z, cenv ! i = Some co -> align_compatible_rec (Tunion i a) z -> (forall i0 t0, field_type i0 (co_members co) = Errors.OK t0 -> align_compatible_rec t0 z).",
            "VernacStartTheoremProof",
            "07598a6b0648a125d26edb26766644eb019f3284"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "6144021562e950304ba8e947fdc2423691182458"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite H in H4; inv H4.",
            "VernacExtend",
            "fba5152d9a2b45c51aa8e16cb037df94febbb30b"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End align_compatible_rec.",
            "VernacEndSegment",
            "ad593867a73173ef679e4da5a96d8b6a07a91b0f"
        ],
        [
            "Lemma align_chunk_1248: forall ch, align_chunk ch = 1 \\/ align_chunk ch = 2 \\/ align_chunk ch = 4 \\/ align_chunk ch = 8.",
            "VernacStartTheoremProof",
            "99d49b5e500495dc58d5a716853a596eb37fa2a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct ch; simpl; auto.",
            "VernacExtend",
            "ca31ee8ad25babde097a5eb76b1032964630785a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma align_chunk_two_p: forall ch, exists n, align_chunk ch = two_power_nat n.",
            "VernacStartTheoremProof",
            "edee396c0cfe94bc27689ba5850c108da16aa1b2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof align_chunk_1248 ch as [| [| [|]]]; rewrite H.",
            "VernacExtend",
            "47d78660ffd4219d0cc105882bb4151b705be891"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists 0%nat; auto.",
            "VernacExtend",
            "815a7dfd5eb81dc69151fb22cee9f66c11e56534"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists 1%nat; auto.",
            "VernacExtend",
            "2b4c33e3cb6b14781b3b5e62b655e12632e3b4c7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists 2%nat; auto.",
            "VernacExtend",
            "504fd4180e3e367b21e89718b9778c5c9e7af0f3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists 3%nat; auto.",
            "VernacExtend",
            "73d8fae57aa9afd7bfb02fa9f4f8689aba361cf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint hardware_alignof (ha_env: PTree.t Z) t: Z := match t with | Tarray t' _ _ => hardware_alignof ha_env t' | Tstruct id _ => match ha_env ! id with | Some ha => ha | None => 1 end | Tunion id _ => match ha_env ! id with | Some ha => ha | None => 1 end | _ => match access_mode t with | By_value ch => Memdata.align_chunk ch | _ => 1 end end.",
            "VernacFixpoint",
            "5b734e6e536cdaf0c617dd8a4471fd2306d58058"
        ],
        [
            "Fixpoint hardware_alignof_composite (ha_env: PTree.t Z) (m: members): Z := match m with | nil => 1 | (_, t) :: m' => Z.max (hardware_alignof ha_env t) (hardware_alignof_composite ha_env m') end.",
            "VernacFixpoint",
            "86106cdbf80b7bad6a92eac78b0bd73af26aa9b2"
        ],
        [
            "Definition hardware_alignof_env (cenv: composite_env): PTree.t Z := let l := composite_reorder.rebuild_composite_elements cenv in fold_right (fun (ic: positive * composite) (T0: PTree.t Z) => let (i, co) := ic in let T := T0 in PTree.set i (hardware_alignof_composite T (co_members co)) T) (PTree.empty _) l.",
            "VernacDefinition",
            "73ebab48f2e4000d51d96aa6dd9515705e3c2134"
        ],
        [
            "Definition hardware_alignof_env_consistent (cenv: composite_env) (ha_env: PTree.t Z): Prop := forall i co ha, cenv ! i = Some co -> ha_env ! i = Some ha -> ha = hardware_alignof_composite ha_env (co_members co).",
            "VernacDefinition",
            "be4918c1ec2f28e0e824613a909b1bdda8fe02ff"
        ],
        [
            "Definition hardware_alignof_env_complete (cenv: composite_env) (ha_env: PTree.t Z): Prop := forall i, (exists co, cenv ! i = Some co) <-> (exists ha, ha_env ! i = Some ha).",
            "VernacDefinition",
            "12d5a6dcfbc7e4c51e63e5281dceddc85c116744"
        ],
        [
            "Module Type HARDWARE_ALIGNOF_FACTS.",
            "VernacDeclareModuleType",
            "78b2eea2322a1446271ebd04155e10c47c12be24"
        ],
        [
            "Axiom hardware_alignof_consistency: forall (cenv: composite_env) (ha_env: PTree.t Z), composite_env_consistent cenv -> ha_env = hardware_alignof_env cenv -> hardware_alignof_env_consistent cenv ha_env.",
            "VernacAssumption",
            "d3767b92ba2da2b7c8c54ff0a693f1e28f80b87d"
        ],
        [
            "Axiom hardware_alignof_completeness: forall (cenv: composite_env) (ha_env: PTree.t Z), ha_env = hardware_alignof_env cenv -> hardware_alignof_env_complete cenv ha_env.",
            "VernacAssumption",
            "51bf62a9234ca874488c35b2de16ad3c7bdf490e"
        ],
        [
            "End HARDWARE_ALIGNOF_FACTS.",
            "VernacEndSegment",
            "43d984725a114817e5ae072c38fa151f58521072"
        ],
        [
            "Module hardware_alignof_facts: HARDWARE_ALIGNOF_FACTS.",
            "VernacDefineModule",
            "46d287b299dbea14d2a191a3d0665bee348e4ee8"
        ],
        [
            "Lemma aux1: forall T co, (fix fm (l : list (ident * type * Z)) : Z := match l with | nil => 1 | (_, _, ha) :: l' => Z.max ha (fm l') end) (map (fun it0 : positive * type => let (i0, t0) := it0 in (i0, t0, type_func.F (fun t : type => match access_mode t with | By_value ch => align_chunk ch | By_reference => 1 | By_copy => 1 | By_nothing => 1 end) (fun (ha : Z) (_ : type) (_: Z) (_ : attr) => ha) (fun (ha : Z) (_ : ident) (_ : attr) => ha) (fun (ha : Z) (_ : ident) (_ : attr) => ha) T t0)) (co_members co)) = hardware_alignof_composite T (co_members co).",
            "VernacStartTheoremProof",
            "a9da1d0b2bc1cf9cc0d4c6882e92ad1cca55f847"
        ],
        [
            "intros; unfold hardware_alignof_composite, hardware_alignof.",
            "VernacExtend",
            "fce5e44702f971c0884c8055e19b459a79eca36d"
        ],
        [
            "induction (co_members co) as [| [i t] ?].",
            "VernacExtend",
            "5b3df932792dfe21b5867f7050535c95c04f61a6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction t; auto.",
            "VernacExtend",
            "f3a71cbb1d4317191cf94a3dde1e0ae84fc436cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux2: forall (cenv: composite_env), type_func.Env (fun t : type => match access_mode t with | By_value ch => align_chunk ch | By_reference => 1 | By_copy => 1 | By_nothing => 1 end) (fun (ha : Z) (_ : type) (_: Z) (_ : attr) => ha) (fun (ha : Z) (_ : ident) (_ : attr) => ha) (fun (ha : Z) (_ : ident) (_ : attr) => ha) (fun _ : struct_or_union => fix fm (l : list (ident * type * Z)) : Z := match l with | nil => 1 | (_, _, ha) :: l' => Z.max ha (fm l') end) (composite_reorder.rebuild_composite_elements cenv) = hardware_alignof_env cenv.",
            "VernacStartTheoremProof",
            "323d855173e9d25105bc6bdcfdc5b6b1e2c53e89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold type_func.Env, type_func.env_rec, hardware_alignof_env.",
            "VernacExtend",
            "ac53c5b556d973ae5073b20cfdb97df719cbfc07"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "extensionality ic.",
            "VernacExtend",
            "57f05dc30ed5bfb12c1ef624b024d336f61fe8b3"
        ],
        [
            "destruct ic as [i co].",
            "VernacExtend",
            "efcdf2791cfac89f8e0ac2d9e73cf63114e7d2e4"
        ],
        [
            "extensionality T.",
            "VernacExtend",
            "7e990be5ec41e750c4486c3da12415315aed4485"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply aux1.",
            "VernacExtend",
            "ff4c3cdb3bbf4ee91d0fd45d8205de6d4ae91dc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hardware_alignof_consistency (cenv: composite_env) (ha_env: PTree.t Z): composite_env_consistent cenv -> ha_env = hardware_alignof_env cenv -> forall i co ha, cenv ! i = Some co -> ha_env ! i = Some ha -> ha = hardware_alignof_composite ha_env (co_members co).",
            "VernacStartTheoremProof",
            "c4760c5ca84d0dc7815b48847c49799f064d634a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof @composite_reorder_consistent Z cenv (fun t => match access_mode t with | By_value ch => Memdata.align_chunk ch | _ => 1 end) (fun ha _ _ _ => ha) (fun ha _ _ => ha) (fun ha _ _ => ha) (fun _ => fix fm (l: list (ident * type * Z)): Z := match l with | nil => 1 | (_, _, ha) :: l' => Z.max ha (fm l') end) H as HH.",
            "VernacExtend",
            "6449aed77ce899fbdbddea44d11fa11789a2bed3"
        ],
        [
            "hnf in HH.",
            "VernacExtend",
            "ec87d32c3120e3baadd932e5ade957aaf0068642"
        ],
        [
            "subst ha_env.",
            "VernacExtend",
            "6b6bdda3e3bc454265ff92f5d4ed560dd42f89e6"
        ],
        [
            "rewrite aux2 in HH.",
            "VernacExtend",
            "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
        ],
        [
            "specialize (HH _ _ ha H1 H2).",
            "VernacExtend",
            "11a53d7fedd7aaf27edfebebcaf8be8a8963b591"
        ],
        [
            "rewrite HH, aux1; auto.",
            "VernacExtend",
            "82f8059a79bb087f20dd1dc98c6985680ad1e13f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hardware_alignof_completeness (cenv: composite_env) (ha_env: PTree.t Z): ha_env = hardware_alignof_env cenv -> forall i, (exists co, cenv ! i = Some co) <-> (exists ha, ha_env ! i = Some ha).",
            "VernacStartTheoremProof",
            "c04ec0bbdf024ec0ec851206dac0bc2b19fefe82"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof @composite_reorder_complete Z cenv (fun t => match access_mode t with | By_value ch => Memdata.align_chunk ch | _ => 1 end) (fun ha _ _ _ => ha) (fun ha _ _ => ha) (fun ha _ _ => ha) (fun _ => fix fm (l: list (ident * type * Z)): Z := match l with | nil => 1 | (_, _, ha) :: l' => Z.max ha (fm l') end) as HH.",
            "VernacExtend",
            "c53aadcd798830b02a44f16d65a019aaae00ac7d"
        ],
        [
            "hnf in HH.",
            "VernacExtend",
            "ec87d32c3120e3baadd932e5ade957aaf0068642"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite aux2 in HH.",
            "VernacExtend",
            "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End hardware_alignof_facts.",
            "VernacEndSegment",
            "7e98a1cfd80699451b4dfcc1af2a912b6e231290"
        ],
        [
            "Export hardware_alignof_facts.",
            "VernacImport",
            "cc1ac4f9be1d4f500902a4995f99ae13253155b7"
        ],
        [
            "Lemma hardware_alignof_two_p: forall (cenv: composite_env) (ha_env: PTree.t Z), composite_env_consistent cenv -> hardware_alignof_env_consistent cenv ha_env -> hardware_alignof_env_complete cenv ha_env -> forall t, exists n, hardware_alignof ha_env t = two_power_nat n.",
            "VernacStartTheoremProof",
            "905ab7cf41a0eec086af81013aee6cf1d7b31ac9"
        ],
        [
            "intros ? ? CENV_CONS HA_ENV_CONS HA_ENV_COMPL ?.",
            "VernacExtend",
            "f4bca247b5c5f71108fc754a69e77d1991b73677"
        ],
        [
            "type_induction t cenv CENV_CONS.",
            "VernacExtend",
            "d9c8aa8aa944b025f68fdb4be1439c702e96be67"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists 0%nat; reflexivity.",
            "VernacExtend",
            "fe3e4a322fd724f6b5422383151c7be1ffa0f073"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s, i; try solve [exists 0%nat; reflexivity | exists 1%nat; reflexivity | exists 2%nat; reflexivity | exists 3%nat; reflexivity].",
            "VernacExtend",
            "f61732a1d36ac738f3d2c2ecbef973ce7bba70ed"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s; try solve [exists 0%nat; reflexivity | exists 1%nat; reflexivity | exists 2%nat; reflexivity | exists 3%nat; reflexivity].",
            "VernacExtend",
            "ae69499d756cedb13121192a484508ad4b231e3d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct f; try solve [exists 0%nat; reflexivity | exists 1%nat; reflexivity | exists 2%nat; reflexivity | exists 3%nat; reflexivity].",
            "VernacExtend",
            "345366f56d334c5f9d502a2e78d473bb09242799"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Mptr.",
            "VernacExtend",
            "d4e004fdff64e12ff711236a559df9838364f869"
        ],
        [
            "destruct Archi.ptr64; [exists 3%nat | exists 2%nat]; reflexivity.",
            "VernacExtend",
            "1717b536bb02ce1aa5ed44882de44653d777e46a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists 0%nat; reflexivity.",
            "VernacExtend",
            "fe3e4a322fd724f6b5422383151c7be1ffa0f073"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "pose proof HA_ENV_CONS id; pose proof HA_ENV_COMPL id.",
            "VernacExtend",
            "5a313a67f4ab1e8c5c11908b4998646dc12e71c0"
        ],
        [
            "destruct (cenv ! id) as [co |] eqn:?H, (ha_env ! id) eqn:?H.",
            "VernacExtend",
            "e6066e8a4d8515d4cc118c381581cff2b7553195"
        ],
        [
            "2: {",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "pose proof proj1 H0 (ex_intro _ _ eq_refl) as [? ?]; congruence.",
            "VernacExtend",
            "a758f11d884b818b5d93edfb111b2bcb9a379ae6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "2: {",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "pose proof proj2 H0 (ex_intro _ _ eq_refl) as [? ?]; congruence.",
            "VernacExtend",
            "283c91f3070f44386d7e468ab4070766a586c8f8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (H _ _ eq_refl eq_refl).",
            "VernacExtend",
            "1b399f64d87c58852c110c90fc72125881925a8a"
        ],
        [
            "subst z.",
            "VernacExtend",
            "164f309c003709d10ea3bbb7324dbfe980b258de"
        ],
        [
            "clear - IH.",
            "VernacExtend",
            "98d7e1c5a10458dfe9d9fb2e34be93bcf7de1076"
        ],
        [
            "induction IH.",
            "VernacExtend",
            "f3f95d09b6daed9162ab7ae3bebf99051e4b9207"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exists 0%nat; reflexivity.",
            "VernacExtend",
            "fe3e4a322fd724f6b5422383151c7be1ffa0f073"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct x as [i t], H as [n1 ?], IHIH as [n2 ?].",
            "VernacExtend",
            "498e3d126b82034f1fcef5ae117c2d8e4ab2b3f1"
        ],
        [
            "simpl in H |- *.",
            "VernacExtend",
            "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
        ],
        [
            "rewrite H, H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "rewrite max_two_power_nat.",
            "VernacExtend",
            "3a00e443a07e3a319830bb30b17fbe8f9676f1fc"
        ],
        [
            "eexists; reflexivity.",
            "VernacExtend",
            "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 0%nat; reflexivity.",
            "VernacExtend",
            "fe3e4a322fd724f6b5422383151c7be1ffa0f073"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "pose proof HA_ENV_CONS id; pose proof HA_ENV_COMPL id.",
            "VernacExtend",
            "5a313a67f4ab1e8c5c11908b4998646dc12e71c0"
        ],
        [
            "destruct (cenv ! id) as [co |] eqn:?H, (ha_env ! id) eqn:?H.",
            "VernacExtend",
            "e6066e8a4d8515d4cc118c381581cff2b7553195"
        ],
        [
            "2: {",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "pose proof proj1 H0 (ex_intro _ _ eq_refl) as [? ?]; congruence.",
            "VernacExtend",
            "a758f11d884b818b5d93edfb111b2bcb9a379ae6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "2: {",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "pose proof proj2 H0 (ex_intro _ _ eq_refl) as [? ?]; congruence.",
            "VernacExtend",
            "283c91f3070f44386d7e468ab4070766a586c8f8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (H _ _ eq_refl eq_refl).",
            "VernacExtend",
            "1b399f64d87c58852c110c90fc72125881925a8a"
        ],
        [
            "subst z.",
            "VernacExtend",
            "164f309c003709d10ea3bbb7324dbfe980b258de"
        ],
        [
            "clear - IH.",
            "VernacExtend",
            "98d7e1c5a10458dfe9d9fb2e34be93bcf7de1076"
        ],
        [
            "induction IH.",
            "VernacExtend",
            "f3f95d09b6daed9162ab7ae3bebf99051e4b9207"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exists 0%nat; reflexivity.",
            "VernacExtend",
            "fe3e4a322fd724f6b5422383151c7be1ffa0f073"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct x as [i t], H as [n1 ?], IHIH as [n2 ?].",
            "VernacExtend",
            "498e3d126b82034f1fcef5ae117c2d8e4ab2b3f1"
        ],
        [
            "simpl in H |- *.",
            "VernacExtend",
            "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
        ],
        [
            "rewrite H, H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "rewrite max_two_power_nat.",
            "VernacExtend",
            "3a00e443a07e3a319830bb30b17fbe8f9676f1fc"
        ],
        [
            "eexists; reflexivity.",
            "VernacExtend",
            "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 0%nat; reflexivity.",
            "VernacExtend",
            "fe3e4a322fd724f6b5422383151c7be1ffa0f073"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hardware_alignof_pos: forall (cenv: composite_env) (ha_env: PTree.t Z), composite_env_consistent cenv -> hardware_alignof_env_consistent cenv ha_env -> hardware_alignof_env_complete cenv ha_env -> forall t, hardware_alignof ha_env t > 0.",
            "VernacStartTheoremProof",
            "26af7c0a8cce10902addaf7aa3638156d64ab8c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof hardware_alignof_two_p _ _ H H0 H1 t as [n ?].",
            "VernacExtend",
            "a62f99679e2c0dbc403ae08c40f5a4e0d2c21f2d"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply two_power_nat_pos.",
            "VernacExtend",
            "b662a9ac34dd1a59671605f975e998a807dd01e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hardware_alignof_composite_two_p: forall (cenv: composite_env) (ha_env: PTree.t Z), composite_env_consistent cenv -> hardware_alignof_env_consistent cenv ha_env -> hardware_alignof_env_complete cenv ha_env -> forall m, exists n, hardware_alignof_composite ha_env m = two_power_nat n.",
            "VernacStartTheoremProof",
            "d88771b7d56059a44b1ad72e2ad4a5480e5a4138"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction m as [| [i t] ?].",
            "VernacExtend",
            "e3b4dd1ab90494612f4e748656596261451f0737"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists 0%nat.",
            "VernacExtend",
            "ecf2e229db1efa1d9dec061865f354468879442a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct IHm as [n1 ?], (hardware_alignof_two_p _ _ H H0 H1 t) as [n2 ?].",
            "VernacExtend",
            "a45034f7fa461fe1a3fe898e8e6a2f837d21eb32"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H2, H3.",
            "VernacExtend",
            "bd045133fa028ed96950f3be8d169110b98b6951"
        ],
        [
            "rewrite max_two_power_nat.",
            "VernacExtend",
            "3a00e443a07e3a319830bb30b17fbe8f9676f1fc"
        ],
        [
            "eexists; reflexivity.",
            "VernacExtend",
            "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve alignof_two_p: align.",
            "VernacHints",
            "5551fb431094c6d1b9ad45027b824e02fa49481a"
        ],
        [
            "Hint Resolve align_chunk_two_p: align.",
            "VernacHints",
            "6d35212cdb0430f4a947c639238bc1ed9fe110ce"
        ],
        [
            "Hint Extern 10 (exists n: nat, hardware_alignof _ _ = two_power_nat n) => (eapply hardware_alignof_two_p; eassumption): align.",
            "VernacHints",
            "722b3ad7e665235665388e26ebe4708d84b3c370"
        ],
        [
            "Hint Extern 10 (exists n: nat, hardware_alignof_composite _ _ = two_power_nat n) => (eapply hardware_alignof_composite_two_p; eassumption): align.",
            "VernacHints",
            "f99573b53cc28e99b09e38b01c3ee9b5b0ca6234"
        ],
        [
            "Lemma hardware_alignof_by_value: forall ha_env t ch, access_mode t = By_value ch -> hardware_alignof ha_env t = align_chunk ch.",
            "VernacStartTheoremProof",
            "4c4bd3806b4ebe683d40f68b7fb9cbc9ec99b873"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct t as [| [| | |] [|] | [|] | [|] | | | | |]; inv H; auto.",
            "VernacExtend",
            "6479222db46ff8b63e216e733f4a4b08293f3e4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma align_compatible_rec_hardware_alignof_divide: forall cenv ha_env t z1 z2, composite_env_consistent cenv -> composite_env_complete_legal_cosu_type cenv -> hardware_alignof_env_consistent cenv ha_env -> hardware_alignof_env_complete cenv ha_env -> complete_legal_cosu_type cenv t = true -> (hardware_alignof ha_env t | z1 - z2) -> (align_compatible_rec cenv t z1 <-> align_compatible_rec cenv t z2).",
            "VernacStartTheoremProof",
            "1b68ebc146bb43e7b4144bb735a73bb694fc97e5"
        ],
        [
            "intros ? ? ? ? ? CENV_CONS CENV_COSU HA_ENV_CONS HA_ENV_COMPL.",
            "VernacExtend",
            "1a9e51ddb275f383a0e7c9b65792a5c9eab8166d"
        ],
        [
            "revert t z1 z2.",
            "VernacExtend",
            "b33fc566ef2bd01bf4370fb7f400b74a40fcab8e"
        ],
        [
            "assert (BY_VALUE: forall t z1 z2, (exists ch, access_mode t = By_value ch) -> (hardware_alignof ha_env t | z1 - z2) -> align_compatible_rec cenv t z1 <-> align_compatible_rec cenv t z2).",
            "VernacExtend",
            "3ba15c2de2463300629092971e588a67b006e9da"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros ? ? ? [? ?] ?.",
            "VernacExtend",
            "7ebf480d80a55c619427a2b9c6cb2f43d2a02b6e"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply align_compatible_rec_by_value_inv in H1; eauto.",
            "VernacExtend",
            "977d7621284c6eab94aa678d83ad58596dcb9912"
        ],
        [
            "eapply align_compatible_rec_by_value; eauto.",
            "VernacExtend",
            "f4db0e75a0fe01e6bbc90c62515d385fb98b4f71"
        ],
        [
            "replace z2 with (z1 - (z1 - z2)) by omega.",
            "VernacExtend",
            "0c6104e856f6d0daea7591cb6ac0ff920bc37734"
        ],
        [
            "erewrite hardware_alignof_by_value in H0 by eauto.",
            "VernacExtend",
            "29cf69376d8cdbd0d81b5ae602ba098ac6294e7f"
        ],
        [
            "apply Z.divide_sub_r; auto.",
            "VernacExtend",
            "e7e1253a0103068a0cb430b4826c8d37ce0e7443"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply align_compatible_rec_by_value_inv in H1; eauto.",
            "VernacExtend",
            "977d7621284c6eab94aa678d83ad58596dcb9912"
        ],
        [
            "eapply align_compatible_rec_by_value; eauto.",
            "VernacExtend",
            "f4db0e75a0fe01e6bbc90c62515d385fb98b4f71"
        ],
        [
            "replace z1 with (z2 + (z1 - z2)) by omega.",
            "VernacExtend",
            "6ac2ce57569d3daf0910a45d8bdd2d3ed6ee3931"
        ],
        [
            "erewrite hardware_alignof_by_value in H0 by eauto.",
            "VernacExtend",
            "29cf69376d8cdbd0d81b5ae602ba098ac6294e7f"
        ],
        [
            "apply Z.divide_add_r; auto.",
            "VernacExtend",
            "e3c971e0308291f72e95aaad33fe2ae1e1e55607"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro t; type_induction t cenv CENV_CONS; intros.",
            "VernacExtend",
            "a2af3c51b5bddcb0d074388ac9c4b7fed91429c5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split; intros; inv H1; inv H2.",
            "VernacExtend",
            "d9f214b6c979337e94235b2cb2f5cb2bd4242354"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply BY_VALUE; auto.",
            "VernacExtend",
            "a3a60b8fc931599d381b14db153f12c5aca29c1e"
        ],
        [
            "destruct s, i; eexists; reflexivity.",
            "VernacExtend",
            "b0e3a85071d242a0c86f650d7cacad200be55b36"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply BY_VALUE; auto.",
            "VernacExtend",
            "a3a60b8fc931599d381b14db153f12c5aca29c1e"
        ],
        [
            "destruct s; eexists; reflexivity.",
            "VernacExtend",
            "ea20a2a98a9fe957682f51363ac948810a2963db"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply BY_VALUE; auto.",
            "VernacExtend",
            "a3a60b8fc931599d381b14db153f12c5aca29c1e"
        ],
        [
            "destruct f; eexists; reflexivity.",
            "VernacExtend",
            "e77df896c59ea9db3c2d83f4b94fe883454bba4b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply BY_VALUE; auto.",
            "VernacExtend",
            "a3a60b8fc931599d381b14db153f12c5aca29c1e"
        ],
        [
            "eexists; reflexivity.",
            "VernacExtend",
            "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "split; intros; apply align_compatible_rec_Tarray; intros; eapply align_compatible_rec_Tarray_inv in H1; eauto.",
            "VernacExtend",
            "301b0176186f49ad5c8c5434e223ab778bcefe83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (IH (z1 + sizeof cenv t0 * i) (z2 + sizeof cenv t0 * i)).",
            "VernacExtend",
            "c90843685827c1a9b626e05f7cebaa7209601a4b"
        ],
        [
            "replace (z1 + sizeof cenv t0 * i - (z2 + sizeof cenv t0 * i)) with (z1 - z2) in IH by omega.",
            "VernacExtend",
            "11bd07ae7d744136225a13bf866cadf315aaaf33"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (IH (z1 + sizeof cenv t0 * i) (z2 + sizeof cenv t0 * i)).",
            "VernacExtend",
            "c90843685827c1a9b626e05f7cebaa7209601a4b"
        ],
        [
            "replace (z1 + sizeof cenv t0 * i - (z2 + sizeof cenv t0 * i)) with (z1 - z2) in IH by omega.",
            "VernacExtend",
            "11bd07ae7d744136225a13bf866cadf315aaaf33"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split; intros; inv H1; inv H2; econstructor.",
            "VernacExtend",
            "f9b415970998c4240722d4e92db0bc4b2762158d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H, H0.",
            "VernacExtend",
            "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
        ],
        [
            "destruct (cenv ! id) as [co |] eqn:?H; [| inv H].",
            "VernacExtend",
            "220ad83590e0701e4b8b5b084018745ef8840206"
        ],
        [
            "destruct (co_su co) eqn:?H; inv H.",
            "VernacExtend",
            "5f97baebada45e7191ade3e95985291df9477ec5"
        ],
        [
            "assert (forall i0 t0 ofs0, field_type i0 (co_members co) = Errors.OK t0 -> field_offset cenv i0 (co_members co) = Errors.OK ofs0 -> (align_compatible_rec cenv t0 (z1 + ofs0) <-> align_compatible_rec cenv t0 (z2 + ofs0))) as HH; [ | split; intros; eapply align_compatible_rec_Tstruct; eauto; intros; eapply align_compatible_rec_Tstruct_inv in H; eauto; eapply HH; eauto].",
            "VernacExtend",
            "22cf4ae9c0290e7f84d9391f6a93da60345e3c86"
        ],
        [
            "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ co H1) as [ha ?].",
            "VernacExtend",
            "0e1c7f4fa0bb28bae88a2af9f6b6040414f399f7"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "pose proof HA_ENV_CONS _ _ _ H1 H.",
            "VernacExtend",
            "865e01523bd83145cfcf93d6f8ab250b739f22cc"
        ],
        [
            "rewrite H3 in H0.",
            "VernacExtend",
            "dbae769fea2529c982ec8b4da339407464bc3cb4"
        ],
        [
            "pose proof CENV_COSU _ _ H1.",
            "VernacExtend",
            "2d13e4dde865b5be66dc3bcff9d26456fc62103c"
        ],
        [
            "clear H H1 H2 H3 ha.",
            "VernacExtend",
            "a40159847afb0e83fb15fdc91ca06ce5e7b87972"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "induction IH as [| [i t] ?].",
            "VernacExtend",
            "54df72f5392b07cce77d62ebcaa84788403603c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H, H0, H4.",
            "VernacExtend",
            "859a8f61cca68737ce46ab12d10cd9d743419765"
        ],
        [
            "autorewrite with align in H0, H4.",
            "VernacExtend",
            "393c6dac49d6e9c837694092f40763cc0b3b7b28"
        ],
        [
            "if_tac in H.",
            "VernacExtend",
            "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst i; inv H.",
            "VernacExtend",
            "a594e4ec76a68653058e00420e9eccb03b62ac36"
        ],
        [
            "apply H1; [simpl; tauto |].",
            "VernacExtend",
            "bd07082a0fbf40a472597cdf7181ce4baca8c6dc"
        ],
        [
            "replace (z1 + ofs0 - (z2 + ofs0)) with (z1 - z2) by omega; tauto.",
            "VernacExtend",
            "9da6a7f01dc0c67ddf176c3e90cc47b20a614d91"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHIH; tauto.",
            "VernacExtend",
            "e2d3bf313fac8f11565f3254e4924d618f955c42"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H, H0.",
            "VernacExtend",
            "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
        ],
        [
            "destruct (cenv ! id) as [co |] eqn:?H; [| inv H].",
            "VernacExtend",
            "220ad83590e0701e4b8b5b084018745ef8840206"
        ],
        [
            "destruct (co_su co) eqn:?H; inv H.",
            "VernacExtend",
            "5f97baebada45e7191ade3e95985291df9477ec5"
        ],
        [
            "assert (forall i0 t0, field_type i0 (co_members co) = Errors.OK t0 -> (align_compatible_rec cenv t0 z1 <-> align_compatible_rec cenv t0 z2)) as HH; [ | split; intros; eapply align_compatible_rec_Tunion; eauto; intros; eapply align_compatible_rec_Tunion_inv in H; eauto; eapply HH; eauto].",
            "VernacExtend",
            "0a4c8283a7910219ea4be015b29e9934a7db1e9b"
        ],
        [
            "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ co H1) as [ha ?].",
            "VernacExtend",
            "0e1c7f4fa0bb28bae88a2af9f6b6040414f399f7"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "pose proof HA_ENV_CONS _ _ _ H1 H.",
            "VernacExtend",
            "865e01523bd83145cfcf93d6f8ab250b739f22cc"
        ],
        [
            "rewrite H3 in H0.",
            "VernacExtend",
            "dbae769fea2529c982ec8b4da339407464bc3cb4"
        ],
        [
            "pose proof CENV_COSU _ _ H1.",
            "VernacExtend",
            "2d13e4dde865b5be66dc3bcff9d26456fc62103c"
        ],
        [
            "clear H H1 H2 H3 ha.",
            "VernacExtend",
            "a40159847afb0e83fb15fdc91ca06ce5e7b87972"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction IH as [| [i t] ?].",
            "VernacExtend",
            "54df72f5392b07cce77d62ebcaa84788403603c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H, H0, H4.",
            "VernacExtend",
            "859a8f61cca68737ce46ab12d10cd9d743419765"
        ],
        [
            "autorewrite with align in H0, H4.",
            "VernacExtend",
            "393c6dac49d6e9c837694092f40763cc0b3b7b28"
        ],
        [
            "if_tac in H.",
            "VernacExtend",
            "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst i; inv H.",
            "VernacExtend",
            "a594e4ec76a68653058e00420e9eccb03b62ac36"
        ],
        [
            "apply H1; simpl; tauto.",
            "VernacExtend",
            "2fe3c8027150e51c3fac982387b769714838104b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHIH; tauto.",
            "VernacExtend",
            "e2d3bf313fac8f11565f3254e4924d618f955c42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma align_compatible_rec_hardware_1: forall cenv ha_env t z, composite_env_consistent cenv -> composite_env_complete_legal_cosu_type cenv -> hardware_alignof_env_consistent cenv ha_env -> hardware_alignof_env_complete cenv ha_env -> complete_legal_cosu_type cenv t = true -> hardware_alignof ha_env t = 1 -> align_compatible_rec cenv t z.",
            "VernacStartTheoremProof",
            "93d1a024d433dd4b513838c75a3af597aea6f1b9"
        ],
        [
            "intros ? ? ? ? CENV_CONS CENV_COSU HA_ENV_CONS HA_ENV_COMPL.",
            "VernacExtend",
            "cabcba2586838e8c9b1d044a4ab015123d105137"
        ],
        [
            "revert z; type_induction t cenv CENV_CONS; intros.",
            "VernacExtend",
            "474db12d3fa081036116aca3d52492b575d9d1c0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s, i; inv H0; econstructor; try reflexivity; apply Z.divide_1_l.",
            "VernacExtend",
            "fab631c57e22314643fecdd86de3ac9c3fe2b9f0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s; inv H0.",
            "VernacExtend",
            "70f0b51163205d95503800256d99554919b485de"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct f; inv H0.",
            "VernacExtend",
            "2fe3fb0db9dc9897deaa038b592f72c7cfca6417"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply align_compatible_rec_Tarray.",
            "VernacExtend",
            "f6a604c1a49c432c77551a78ba9cca87d47139e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply IH; auto.",
            "VernacExtend",
            "ab7c838ddd716a3b14059f64c365105253349c54"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H, H0.",
            "VernacExtend",
            "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
        ],
        [
            "destruct (cenv ! id) as [co |] eqn:?H; [| inv H].",
            "VernacExtend",
            "220ad83590e0701e4b8b5b084018745ef8840206"
        ],
        [
            "destruct (co_su co) eqn:?H; inv H.",
            "VernacExtend",
            "5f97baebada45e7191ade3e95985291df9477ec5"
        ],
        [
            "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ co H1) as [ha ?].",
            "VernacExtend",
            "0e1c7f4fa0bb28bae88a2af9f6b6040414f399f7"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "pose proof HA_ENV_CONS _ _ _ H1 H.",
            "VernacExtend",
            "865e01523bd83145cfcf93d6f8ab250b739f22cc"
        ],
        [
            "rewrite H3 in H0.",
            "VernacExtend",
            "dbae769fea2529c982ec8b4da339407464bc3cb4"
        ],
        [
            "pose proof CENV_COSU _ _ H1.",
            "VernacExtend",
            "2d13e4dde865b5be66dc3bcff9d26456fc62103c"
        ],
        [
            "eapply align_compatible_rec_Tstruct; eauto.",
            "VernacExtend",
            "f97e954e1c5736ed0d7022ea6c669e67dc0ef5b9"
        ],
        [
            "clear H H1 H2 H3 ha.",
            "VernacExtend",
            "a40159847afb0e83fb15fdc91ca06ce5e7b87972"
        ],
        [
            "intros; clear H1.",
            "VernacExtend",
            "71f8c9b2e50619169e4819ad9419cd5150b0ac19"
        ],
        [
            "induction IH as [| [i t] ?].",
            "VernacExtend",
            "54df72f5392b07cce77d62ebcaa84788403603c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H, H0, H4.",
            "VernacExtend",
            "859a8f61cca68737ce46ab12d10cd9d743419765"
        ],
        [
            "autorewrite with align in H0, H4.",
            "VernacExtend",
            "393c6dac49d6e9c837694092f40763cc0b3b7b28"
        ],
        [
            "destruct H0, H4.",
            "VernacExtend",
            "ffd6125f9b978233d9816a13201fa620ca00b56d"
        ],
        [
            "if_tac in H.",
            "VernacExtend",
            "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst i; inv H.",
            "VernacExtend",
            "a594e4ec76a68653058e00420e9eccb03b62ac36"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHIH; auto.",
            "VernacExtend",
            "fb42a383285aca93e826aa5e76f16f61fcc3874d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H, H0.",
            "VernacExtend",
            "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
        ],
        [
            "destruct (cenv ! id) as [co |] eqn:?H; [| inv H].",
            "VernacExtend",
            "220ad83590e0701e4b8b5b084018745ef8840206"
        ],
        [
            "destruct (co_su co) eqn:?H; inv H.",
            "VernacExtend",
            "5f97baebada45e7191ade3e95985291df9477ec5"
        ],
        [
            "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ co H1) as [ha ?].",
            "VernacExtend",
            "0e1c7f4fa0bb28bae88a2af9f6b6040414f399f7"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "pose proof HA_ENV_CONS _ _ _ H1 H.",
            "VernacExtend",
            "865e01523bd83145cfcf93d6f8ab250b739f22cc"
        ],
        [
            "rewrite H3 in H0.",
            "VernacExtend",
            "dbae769fea2529c982ec8b4da339407464bc3cb4"
        ],
        [
            "pose proof CENV_COSU _ _ H1.",
            "VernacExtend",
            "2d13e4dde865b5be66dc3bcff9d26456fc62103c"
        ],
        [
            "eapply align_compatible_rec_Tunion; eauto.",
            "VernacExtend",
            "78b3cb85c82cd0bbee098a7fcb41e2561ce60f0f"
        ],
        [
            "clear H H1 H2 H3 ha.",
            "VernacExtend",
            "a40159847afb0e83fb15fdc91ca06ce5e7b87972"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction IH as [| [i t] ?].",
            "VernacExtend",
            "54df72f5392b07cce77d62ebcaa84788403603c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H, H0, H4.",
            "VernacExtend",
            "859a8f61cca68737ce46ab12d10cd9d743419765"
        ],
        [
            "autorewrite with align in H0, H4.",
            "VernacExtend",
            "393c6dac49d6e9c837694092f40763cc0b3b7b28"
        ],
        [
            "destruct H0, H4.",
            "VernacExtend",
            "ffd6125f9b978233d9816a13201fa620ca00b56d"
        ],
        [
            "if_tac in H.",
            "VernacExtend",
            "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst i; inv H.",
            "VernacExtend",
            "a594e4ec76a68653058e00420e9eccb03b62ac36"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHIH; auto.",
            "VernacExtend",
            "fb42a383285aca93e826aa5e76f16f61fcc3874d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module Type LEGAL_ALIGNAS.",
            "VernacDeclareModuleType",
            "cf006724abd505735a6c40247a63ba4d2794ed23"
        ],
        [
            "Parameter legal_alignas_obs: Type.",
            "VernacAssumption",
            "fac9486968a78696ba41ae445930353e53d28e66"
        ],
        [
            "Parameter legal_alignas_type: composite_env -> PTree.t Z -> PTree.t legal_alignas_obs -> type -> legal_alignas_obs.",
            "VernacAssumption",
            "387cdab569aacbd3e3201f12176e70ee64546bd2"
        ],
        [
            "Parameter legal_alignas_composite: composite_env -> PTree.t Z -> PTree.t legal_alignas_obs -> composite -> legal_alignas_obs.",
            "VernacAssumption",
            "4b2e2c228a9cc13e5f1e8883b3115f1c1da19c10"
        ],
        [
            "Parameter legal_alignas_env: composite_env -> PTree.t Z -> PTree.t legal_alignas_obs.",
            "VernacAssumption",
            "15728c96432269ae9172edf906a224a2ffd73fd3"
        ],
        [
            "Parameter is_aligned_aux: legal_alignas_obs -> Z -> Z -> bool.",
            "VernacAssumption",
            "32db9c7f37c9a029507d38fade407df6ba8b69ce"
        ],
        [
            "End LEGAL_ALIGNAS.",
            "VernacEndSegment",
            "b2f3a8f5098905f9107e45dfc532b01969a1d11c"
        ],
        [
            "Module LegalAlignasDefsGen (LegalAlignas: LEGAL_ALIGNAS).",
            "VernacDefineModule",
            "12f12e99d333e33147c6b9e1e5c885b37dcf9efb"
        ],
        [
            "Import LegalAlignas.",
            "VernacImport",
            "ac83af851d39e29129b740e9c2bb5132c4349350"
        ],
        [
            "Definition legal_alignas_env_consistent (cenv: composite_env) (ha_env: PTree.t Z) (la_env: PTree.t legal_alignas_obs): Prop := forall i co la, cenv ! i = Some co -> la_env ! i = Some la -> la = legal_alignas_composite cenv ha_env la_env co.",
            "VernacDefinition",
            "dbeda080a84962c9640d4fc1dc9c93c7a256c682"
        ],
        [
            "Definition legal_alignas_env_complete (cenv: composite_env) (la_env: PTree.t legal_alignas_obs): Prop := forall i, (exists co, cenv ! i = Some co) <-> (exists la, la_env ! i = Some la).",
            "VernacDefinition",
            "88bed5b8ae5e06db031ba08c8bda0dc3ce36952e"
        ],
        [
            "Definition is_aligned cenv ha_env la_env (t: type) (ofs: Z): bool := is_aligned_aux (legal_alignas_type cenv ha_env la_env t) (hardware_alignof ha_env t) ofs.",
            "VernacDefinition",
            "38fe2482386352929428282d44510c5323151b7f"
        ],
        [
            "Definition legal_alignas_env_sound (cenv: composite_env) (ha_env: PTree.t Z) (la_env: PTree.t legal_alignas_obs): Prop := forall ofs t, complete_legal_cosu_type cenv t = true -> is_aligned cenv ha_env la_env t ofs = true -> align_compatible_rec cenv t ofs.",
            "VernacDefinition",
            "c49f9ede2f496ad807feaa8b5e3f6146cfd3f225"
        ],
        [
            "End LegalAlignasDefsGen.",
            "VernacEndSegment",
            "e3db3592ccd52c08ab39f8dd81d637e05ec9070b"
        ],
        [
            "Module Type LEGAL_ALIGNAS_FACTS.",
            "VernacDeclareModuleType",
            "2ce689f8139d80fdc830b5e75ebfcaa13c8817e2"
        ],
        [
            "Declare Module LegalAlignas: LEGAL_ALIGNAS.",
            "VernacDeclareModule",
            "7650e47d71b767e08e8605630a2173925d192fbe"
        ],
        [
            "Module LegalAlignasDefs := LegalAlignasDefsGen (LegalAlignas).",
            "VernacDefineModule",
            "3309d9d4917e2dd63c9e0dce56b8d1286892e5c2"
        ],
        [
            "Export LegalAlignas LegalAlignasDefs.",
            "VernacImport",
            "f797c1d0a50614f389be38725205fc7f2b78cd6f"
        ],
        [
            "Axiom legal_alignas_env_consistency: forall cenv ha_env, composite_env_consistent cenv -> legal_alignas_env_consistent cenv ha_env (legal_alignas_env cenv ha_env).",
            "VernacAssumption",
            "7f0a0ba8920be1ce5ae371f26c901e512fd2a516"
        ],
        [
            "Axiom legal_alignas_env_completeness: forall cenv ha_env, legal_alignas_env_complete cenv (legal_alignas_env cenv ha_env).",
            "VernacAssumption",
            "7a992e71312d8734ec18fd00ddd59b1ea9609222"
        ],
        [
            "Axiom legal_alignas_soundness: forall cenv ha_env la_env, composite_env_consistent cenv -> composite_env_complete_legal_cosu_type cenv -> hardware_alignof_env_consistent cenv ha_env -> hardware_alignof_env_complete cenv ha_env -> legal_alignas_env_consistent cenv ha_env la_env -> legal_alignas_env_complete cenv la_env -> legal_alignas_env_sound cenv ha_env la_env.",
            "VernacAssumption",
            "b5580691da2cad4285ca4508e6ff3dbaed383b3f"
        ],
        [
            "End LEGAL_ALIGNAS_FACTS.",
            "VernacEndSegment",
            "1fa1ca90310bc247d39ddaee676636600db20f51"
        ],
        [
            "Module LegalAlignasStrict <: LEGAL_ALIGNAS.",
            "VernacDefineModule",
            "861354f59730720214180fdf638192d7e302bff7"
        ],
        [
            "Section legal_alignas.",
            "VernacBeginSection",
            "c2142644dd77a0407837945949635b3c8a544b52"
        ],
        [
            "Context (cenv: composite_env) (ha_env: PTree.t Z).",
            "VernacContext",
            "be607833462387137ce3044439820d7c30023078"
        ],
        [
            "Definition legal_alignas_obs: Type := bool.",
            "VernacDefinition",
            "9c9f81806140ef47fbc7059814a58158a6a16a45"
        ],
        [
            "Fixpoint legal_alignas_type (la_env: PTree.t bool) t: bool := (hardware_alignof ha_env t <=? alignof cenv t) && match t with | Tarray t' _ _ => (sizeof cenv t' mod alignof cenv t' =? 0) && legal_alignas_type la_env t' | Tstruct id _ => match la_env ! id with | Some la => la | None => false end | Tunion id _ => match la_env ! id with | Some la => la | None => false end | _ => match access_mode t with | By_value ch => true | _ => false end end.",
            "VernacFixpoint",
            "794ea3bcf947833fc0d2fefebfc404611316cbf1"
        ],
        [
            "Fixpoint legal_alignas_members (la_env: PTree.t bool) (m: members): bool := match m with | nil => true | (_, t) :: m' => (legal_alignas_type la_env t) && (legal_alignas_members la_env m') end.",
            "VernacFixpoint",
            "803c7933e82b28d76bedb76777dc313c7cb1c5db"
        ],
        [
            "Definition legal_alignas_composite (la_env: PTree.t bool) (co: composite): bool := legal_alignas_members la_env (co_members co).",
            "VernacDefinition",
            "034ca6a5f89fecc1b74e73f5ec31639389fd6723"
        ],
        [
            "Definition legal_alignas_env: PTree.t bool := let l := composite_reorder.rebuild_composite_elements cenv in fold_right (fun (ic: positive * composite) (T0: PTree.t bool) => let (i, co) := ic in let T := T0 in PTree.set i (legal_alignas_composite T co) T) (PTree.empty _) l.",
            "VernacDefinition",
            "2b91de79e0816c0c7b3ac194f9014426962d75f2"
        ],
        [
            "Definition is_aligned_aux (b: bool) (ha: Z) (ofs: Z) := b && ((ofs mod ha) =? 0).",
            "VernacDefinition",
            "10d5bd39ce50a4dacd462de7fa636053daa97cc9"
        ],
        [
            "End legal_alignas.",
            "VernacEndSegment",
            "c4ebc4f9af6ffd93e8377c693968b84adc9a95e0"
        ],
        [
            "End LegalAlignasStrict.",
            "VernacEndSegment",
            "cfebaa65578b0c24924037c727d2d09a1e09d721"
        ],
        [
            "Module LegalAlignasStrictFacts: LEGAL_ALIGNAS_FACTS with Module LegalAlignas := LegalAlignasStrict.",
            "VernacDefineModule",
            "e847631f7410ff882697aabbac4056dfc6587969"
        ],
        [
            "Module LegalAlignas := LegalAlignasStrict.",
            "VernacDefineModule",
            "5ceeb42deb28f9f04dc0295d512f76f66fae3045"
        ],
        [
            "Module LegalAlignasDefs := LegalAlignasDefsGen (LegalAlignas).",
            "VernacDefineModule",
            "3309d9d4917e2dd63c9e0dce56b8d1286892e5c2"
        ],
        [
            "Export LegalAlignas LegalAlignasDefs.",
            "VernacImport",
            "f797c1d0a50614f389be38725205fc7f2b78cd6f"
        ],
        [
            "Section legal_alignas.",
            "VernacBeginSection",
            "c2142644dd77a0407837945949635b3c8a544b52"
        ],
        [
            "Context (cenv: composite_env) (ha_env: PTree.t Z).",
            "VernacContext",
            "be607833462387137ce3044439820d7c30023078"
        ],
        [
            "Lemma aux1: forall T co, (fix fm (l : list (ident * type * bool)) : bool := match l with | nil => true | (_, _, la) :: l' => la && fm l' end) (map (fun it0 : positive * type => let (i0, t0) := it0 in (i0, t0, type_func.F (fun t : type => (hardware_alignof ha_env t <=? alignof cenv t) && match access_mode t with | By_value _ => true | By_reference => false | By_copy => false | By_nothing => false end) (fun (la : bool) (t : type) (n : Z) (a0 : attr) => (hardware_alignof ha_env (Tarray t n a0) <=? alignof cenv (Tarray t n a0)) && ((sizeof cenv t mod alignof cenv t =? 0) && la)) (fun (la : bool) (id : ident) (a0 : attr) => (hardware_alignof ha_env (Tstruct id a0) <=? alignof cenv (Tstruct id a0)) && la) (fun (la : bool) (id : ident) (a0 : attr) => (hardware_alignof ha_env (Tunion id a0) <=? alignof cenv (Tunion id a0)) && la) T t0)) (co_members co)) = legal_alignas_composite cenv ha_env T co.",
            "VernacStartTheoremProof",
            "632ca6699d1a796469090da3ca524a3d85eba082"
        ],
        [
            "intros; unfold legal_alignas_composite, legal_alignas_members, legal_alignas_type.",
            "VernacExtend",
            "b9856c31839f5ce32c1fa73baed5f7c971cf611d"
        ],
        [
            "induction (co_members co) as [| [i t] ?].",
            "VernacExtend",
            "5b3df932792dfe21b5867f7050535c95c04f61a6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction t; auto.",
            "VernacExtend",
            "f3a71cbb1d4317191cf94a3dde1e0ae84fc436cb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHt.",
            "VernacExtend",
            "d7c6a10da1c3b93e6cd1b076977ec06f52b9b586"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (T ! i); auto.",
            "VernacExtend",
            "c1c578a9ce15535bd54c2f7bddd194a0ffec6d12"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (T ! i); auto.",
            "VernacExtend",
            "c1c578a9ce15535bd54c2f7bddd194a0ffec6d12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux2: (type_func.Env (fun t : type => (hardware_alignof ha_env t <=? alignof cenv t) && match access_mode t with | By_value _ => true | By_reference => false | By_copy => false | By_nothing => false end) (fun (la : bool) (t : type) (n : Z) (a0 : attr) => (hardware_alignof ha_env (Tarray t n a0) <=? alignof cenv (Tarray t n a0)) && ((sizeof cenv t mod alignof cenv t =? 0) && la)) (fun (la : bool) (id : ident) (a0 : attr) => (hardware_alignof ha_env (Tstruct id a0) <=? alignof cenv (Tstruct id a0)) && la) (fun (la : bool) (id : ident) (a0 : attr) => (hardware_alignof ha_env (Tunion id a0) <=? alignof cenv (Tunion id a0)) && la) (fun _ : struct_or_union => fix fm (l : list (ident * type * bool)) : bool := match l with | nil => true | (_, _, la) :: l' => la && fm l' end) (composite_reorder.rebuild_composite_elements cenv)) = legal_alignas_env cenv ha_env.",
            "VernacStartTheoremProof",
            "9980b5fe90a8b53836b1a882ce0893a47ae62398"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold type_func.Env, type_func.env_rec, legal_alignas_env.",
            "VernacExtend",
            "a090c966e9d89f6703cdcf0d21312fd11261cbd6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "extensionality ic.",
            "VernacExtend",
            "57f05dc30ed5bfb12c1ef624b024d336f61fe8b3"
        ],
        [
            "destruct ic as [i co].",
            "VernacExtend",
            "efcdf2791cfac89f8e0ac2d9e73cf63114e7d2e4"
        ],
        [
            "extensionality T.",
            "VernacExtend",
            "7e990be5ec41e750c4486c3da12415315aed4485"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply aux1.",
            "VernacExtend",
            "ff4c3cdb3bbf4ee91d0fd45d8205de6d4ae91dc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End legal_alignas.",
            "VernacEndSegment",
            "c4ebc4f9af6ffd93e8377c693968b84adc9a95e0"
        ],
        [
            "Theorem legal_alignas_env_consistency: forall (cenv: composite_env) (ha_env: PTree.t Z), composite_env_consistent cenv -> legal_alignas_env_consistent cenv ha_env (legal_alignas_env cenv ha_env).",
            "VernacStartTheoremProof",
            "e259b3315d867c5b01a1eda59d593f96694754b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof @composite_reorder_consistent bool cenv (fun t => (hardware_alignof ha_env t <=? alignof cenv t) && match access_mode t with | By_value _ => true | _ => false end) (fun la t n a => (hardware_alignof ha_env (Tarray t n a) <=? alignof cenv (Tarray t n a)) && ((sizeof cenv t mod alignof cenv t =? 0) && la)) (fun la id a => (hardware_alignof ha_env (Tstruct id a) <=? alignof cenv (Tstruct id a)) && la) (fun la id a => (hardware_alignof ha_env (Tunion id a) <=? alignof cenv (Tunion id a)) && la) (fun _ => fix fm (l: list (ident * type * bool)): bool := match l with | nil => true | (_, _, la) :: l' => la && (fm l') end) H as HH.",
            "VernacExtend",
            "a0d8521dfcd2442936ba2336dd32638652bf7eab"
        ],
        [
            "hnf in HH.",
            "VernacExtend",
            "ec87d32c3120e3baadd932e5ade957aaf0068642"
        ],
        [
            "rewrite aux2 in HH.",
            "VernacExtend",
            "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "specialize (HH _ _ la H0 H1).",
            "VernacExtend",
            "dec471fcf25e8f65428460b9c1c235ae860cafe3"
        ],
        [
            "rewrite HH, aux1; auto.",
            "VernacExtend",
            "82f8059a79bb087f20dd1dc98c6985680ad1e13f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem legal_alignas_env_completeness: forall (cenv: composite_env) (ha_env: PTree.t Z), legal_alignas_env_complete cenv (legal_alignas_env cenv ha_env).",
            "VernacStartTheoremProof",
            "266535072bbf2725f15861608e913f246fa2eb72"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof @composite_reorder_complete bool cenv (fun t => (hardware_alignof ha_env t <=? alignof cenv t) && match access_mode t with | By_value _ => true | _ => false end) (fun la t n a => (hardware_alignof ha_env (Tarray t n a) <=? alignof cenv (Tarray t n a)) && ((sizeof cenv t mod alignof cenv t =? 0) && la)) (fun la id a => (hardware_alignof ha_env (Tstruct id a) <=? alignof cenv (Tstruct id a)) && la) (fun la id a => (hardware_alignof ha_env (Tunion id a) <=? alignof cenv (Tunion id a)) && la) (fun _ => fix fm (l: list (ident * type * bool)): bool := match l with | nil => true | (_, _, la) :: l' => la && (fm l') end) as HH.",
            "VernacExtend",
            "c457006174ea3f5bfe9c5f68fd16674187ef7007"
        ],
        [
            "hnf in HH.",
            "VernacExtend",
            "ec87d32c3120e3baadd932e5ade957aaf0068642"
        ],
        [
            "rewrite aux2 in HH.",
            "VernacExtend",
            "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section soundness.",
            "VernacBeginSection",
            "c06a4280b2216adf6fa777ca98d077bbe4ba610f"
        ],
        [
            "Context (cenv: composite_env) (ha_env: PTree.t Z) (la_env: PTree.t bool) (CENV_CONSI: composite_env_consistent cenv) (CENV_COSU: composite_env_complete_legal_cosu_type cenv) (HA_ENV_CONSI: hardware_alignof_env_consistent cenv ha_env) (HA_ENV_COMPL: hardware_alignof_env_complete cenv ha_env) (LA_ENV_CONSI: legal_alignas_env_consistent cenv ha_env la_env) (LA_ENV_COMPL: legal_alignas_env_complete cenv la_env).",
            "VernacContext",
            "a5ee3997dd79c71c8fa69eb5a396f3bf399aa426"
        ],
        [
            "Lemma legal_alignas_type_divide: forall t, legal_alignas_type cenv ha_env la_env t = true -> (hardware_alignof ha_env t | alignof cenv t).",
            "VernacStartTheoremProof",
            "c7f37b0e4c5a8f97b406afbbfef0c773b5756ae0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (hardware_alignof ha_env t <=? alignof cenv t = true).",
            "VernacExtend",
            "9b4766bb4317f3bac2e5a22efa9aa1374c71cfbe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct t; simpl in H |- *; solve [inv H | rewrite andb_true_iff in H; tauto].",
            "VernacExtend",
            "d0bf65e148123afce29c36b03efd2144a92e15b3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "autorewrite with align in H0.",
            "VernacExtend",
            "acef96ea6d09e5a6c468b977240855ac1776cda4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma by_value_sound: forall t ofs, is_aligned cenv ha_env la_env t ofs = true -> (exists ch, access_mode t = By_value ch) -> align_compatible_rec cenv t ofs.",
            "VernacStartTheoremProof",
            "5636405a0d70a6f88c388ac2e63e89b6f16d6384"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold is_aligned, is_aligned_aux, legal_alignas_type, hardware_alignof in H.",
            "VernacExtend",
            "51d43fd132e07a8d86df7f3d7f55271a789da342"
        ],
        [
            "destruct H0 as [ch ?].",
            "VernacExtend",
            "4c97ae300f82b137da0c2c9dd0dbfc5638a8ca97"
        ],
        [
            "assert ((align_chunk ch <=? alignof cenv t) && true && (ofs mod align_chunk ch =? 0) = true) by (destruct t; try solve [inversion H0]; rewrite H0 in H; auto); clear H.",
            "VernacExtend",
            "5047bee6f33d13d2a9c5e93e58bccb96b7ed1b6d"
        ],
        [
            "autorewrite with align in H1.",
            "VernacExtend",
            "71cbb36bcb014871e0368416b2fcd40326780871"
        ],
        [
            "destruct H1 as [_ ?].",
            "VernacExtend",
            "7e68e8c2df0ca89c3c9a863d0f69060ddd22a3d3"
        ],
        [
            "eapply align_compatible_rec_by_value; eauto.",
            "VernacExtend",
            "f4db0e75a0fe01e6bbc90c62515d385fb98b4f71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem legal_alignas_soundness: legal_alignas_env_sound cenv ha_env la_env.",
            "VernacStartTheoremProof",
            "2da687cc4087cb1a593cd10b56f3c42f803e1900"
        ],
        [
            "pose proof CENV_COSU.",
            "VernacExtend",
            "d8b6e1e8d4a3fb81e3b1069189e799a0d2ca738f"
        ],
        [
            "clear CENV_COSU H.",
            "VernacExtend",
            "64c7c738b0d060dde30853fada356c231368fded"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf; intros ? ? _ ?.",
            "VernacExtend",
            "ea861702fa14b055f6ea6e062dc14cac89a3d25b"
        ],
        [
            "revert ofs H; type_induction t cenv CENV_CONSI; intros.",
            "VernacExtend",
            "ec176ee8520644f032625574fc29217d498df069"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply by_value_sound; eauto.",
            "VernacExtend",
            "9b250edc65831519eee009747ffae476f644b5f3"
        ],
        [
            "destruct i, s; eexists; try reflexivity.",
            "VernacExtend",
            "89e88b3e33aab2527772bc6358e7bc2e256f17cf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply by_value_sound; eauto.",
            "VernacExtend",
            "9b250edc65831519eee009747ffae476f644b5f3"
        ],
        [
            "destruct s; eexists; try reflexivity.",
            "VernacExtend",
            "66a1069f96e52bc6fb750b2bb0b997eaf45e3622"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply by_value_sound; eauto.",
            "VernacExtend",
            "9b250edc65831519eee009747ffae476f644b5f3"
        ],
        [
            "destruct f; eexists; try reflexivity.",
            "VernacExtend",
            "4735d20edd909356f211cc1d9d4bee15c09baf4e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply by_value_sound; eauto.",
            "VernacExtend",
            "9b250edc65831519eee009747ffae476f644b5f3"
        ],
        [
            "eexists; try reflexivity.",
            "VernacExtend",
            "e5b4bb72ca7bc9eb58532599480ca12a18a827b2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply align_compatible_rec_Tarray; intros.",
            "VernacExtend",
            "a699d0a46597b64e09f5e6fdb0a0f315d23e0548"
        ],
        [
            "apply IH; clear IH.",
            "VernacExtend",
            "0e266c72c994f31c867488a78e738b29186f2831"
        ],
        [
            "unfold is_aligned, is_aligned_aux in H |- *.",
            "VernacExtend",
            "4ee014be9a95e2bd27263c7fb4a85a8b6486ac6e"
        ],
        [
            "Opaque alignof.",
            "VernacSetOpacity",
            "6ed607fc398185b3dd0a3f9995ccf4e10474087b"
        ],
        [
            "simpl in H |- *.",
            "VernacExtend",
            "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
        ],
        [
            "Transparent alignof.",
            "VernacSetOpacity",
            "7f52d3b3b206f24bcf574ec8a036901522ca06a7"
        ],
        [
            "autorewrite with align in H |- *.",
            "VernacExtend",
            "7cb5dfa3535d9bc2a482a7bf9e4251d4e4a80722"
        ],
        [
            "destruct H as [[? [? ?]] ?].",
            "VernacExtend",
            "4d5253575daeb7ec041634256c4cc76f51bd42a9"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply Z.divide_add_r; auto.",
            "VernacExtend",
            "e3c971e0308291f72e95aaad33fe2ae1e1e55607"
        ],
        [
            "apply Z.divide_mul_l.",
            "VernacExtend",
            "fbdce9ef1568b87b311481af3c0cd31b791655ed"
        ],
        [
            "clear H H3.",
            "VernacExtend",
            "2e8d2d562a6f325577edc2b92205d71ba1ec0ef8"
        ],
        [
            "apply legal_alignas_type_divide in H2.",
            "VernacExtend",
            "d514ff17f7b636b2cd3353278a390ae5ce08d801"
        ],
        [
            "eapply Z.divide_trans; try eassumption.",
            "VernacExtend",
            "a3c38c679986a31865e7114bb2ede4dabf90bc19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold is_aligned, is_aligned_aux in H, IH.",
            "VernacExtend",
            "2430cda5cbf312a8dd3016de84d0147e32a29ba7"
        ],
        [
            "Opaque alignof.",
            "VernacSetOpacity",
            "6ed607fc398185b3dd0a3f9995ccf4e10474087b"
        ],
        [
            "simpl in H, IH.",
            "VernacExtend",
            "94c983264f5e00bc2b266b29bde8ca982c83c9bd"
        ],
        [
            "Transparent alignof.",
            "VernacSetOpacity",
            "7f52d3b3b206f24bcf574ec8a036901522ca06a7"
        ],
        [
            "destruct (la_env ! id) as [la |] eqn:?H.",
            "VernacExtend",
            "65901c9b69147b6e834d56a6558a19dd815d857d"
        ],
        [
            "2: {",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "rewrite (andb_comm _ false) in H.",
            "VernacExtend",
            "fee7228dde643aeb8a4db5b3303619cb80cdca21"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "pose proof proj2 (LA_ENV_COMPL id) (ex_intro _ _ H0) as [co ?].",
            "VernacExtend",
            "34a4da877044f920a8fbc97ddfb76b4137fe7272"
        ],
        [
            "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ _ H1) as [ha ?].",
            "VernacExtend",
            "a84fa7f2d4f82b53fd67c7266d57cf99f58f8ec7"
        ],
        [
            "rewrite H1 in IH; rewrite H2 in H.",
            "VernacExtend",
            "b2aac0ffca0fcd284d0862fa96bb53c48f2e2ab7"
        ],
        [
            "rewrite (HA_ENV_CONSI id _ _ H1 H2) in H.",
            "VernacExtend",
            "f29696074e03f071547668bf416802af766a2ee5"
        ],
        [
            "rewrite (LA_ENV_CONSI id _ _ H1 H0) in H.",
            "VernacExtend",
            "880873c62e982e86d2801a92cff6a4a2219c5187"
        ],
        [
            "eapply align_compatible_rec_Tstruct; [eassumption | intros].",
            "VernacExtend",
            "d038e1c98c1ba5e140867a968faa22a67a3e5062"
        ],
        [
            "pose proof field_offset_aligned _ _ _ _ _ H4 H3.",
            "VernacExtend",
            "1690b6705bb4cdd1bd06f9bcf7468e2b2cdaf244"
        ],
        [
            "unfold field_offset in H4.",
            "VernacExtend",
            "f6c3f3bc9c1b8b00947f4452531fb473e7bd050b"
        ],
        [
            "clear H0 H1 H2 H4.",
            "VernacExtend",
            "bed8d0d0439ac337f71b49e6465d61853ede7398"
        ],
        [
            "unfold legal_alignas_composite in *.",
            "VernacExtend",
            "aa498c6b5b844aabdcda4a46f3408201e59e9e7a"
        ],
        [
            "induction IH as [| [i t] ?].",
            "VernacExtend",
            "54df72f5392b07cce77d62ebcaa84788403603c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "Opaque alignof.",
            "VernacSetOpacity",
            "6ed607fc398185b3dd0a3f9995ccf4e10474087b"
        ],
        [
            "simpl in H0, H3, H.",
            "VernacExtend",
            "c32ae5da4fdee0cebf74c5af95b04ed7e2b94bad"
        ],
        [
            "Transparent alignof.",
            "VernacSetOpacity",
            "7f52d3b3b206f24bcf574ec8a036901522ca06a7"
        ],
        [
            "if_tac in H3.",
            "VernacExtend",
            "439ca89b0874e88df0510b38faa45de8f8f7e6e3"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst i0; inv H3.",
            "VernacExtend",
            "48b80313057f33f7ea7200956f82a6600884f180"
        ],
        [
            "apply H0; simpl.",
            "VernacExtend",
            "aa0cb77a41e95af99ba85126629956f80b2c7f0d"
        ],
        [
            "autorewrite with align in H |- *.",
            "VernacExtend",
            "7cb5dfa3535d9bc2a482a7bf9e4251d4e4a80722"
        ],
        [
            "destruct H as [[_ [? ?]] [? ?]].",
            "VernacExtend",
            "ff79bf88488603cb17a3685b540f1aef6b5108c2"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply Z.divide_add_r; auto.",
            "VernacExtend",
            "e3c971e0308291f72e95aaad33fe2ae1e1e55607"
        ],
        [
            "apply legal_alignas_type_divide in H.",
            "VernacExtend",
            "f3bf583cdd67390e54d61beff8049d1dbde016e3"
        ],
        [
            "apply Z.divide_trans with (alignof cenv t0); try eassumption.",
            "VernacExtend",
            "d25d8793b3848bb1e8db6042a6e0fc06470f79ba"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHIH; auto.",
            "VernacExtend",
            "fb42a383285aca93e826aa5e76f16f61fcc3874d"
        ],
        [
            "autorewrite with align in H |- *.",
            "VernacExtend",
            "7cb5dfa3535d9bc2a482a7bf9e4251d4e4a80722"
        ],
        [
            "split; [split |]; tauto.",
            "VernacExtend",
            "c33eaf7d107eed477552e02192a651bbc67e3df3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold is_aligned, is_aligned_aux in H, IH.",
            "VernacExtend",
            "2430cda5cbf312a8dd3016de84d0147e32a29ba7"
        ],
        [
            "Opaque alignof.",
            "VernacSetOpacity",
            "6ed607fc398185b3dd0a3f9995ccf4e10474087b"
        ],
        [
            "simpl in H, IH.",
            "VernacExtend",
            "94c983264f5e00bc2b266b29bde8ca982c83c9bd"
        ],
        [
            "Transparent alignof.",
            "VernacSetOpacity",
            "7f52d3b3b206f24bcf574ec8a036901522ca06a7"
        ],
        [
            "destruct (la_env ! id) as [la |] eqn:?H.",
            "VernacExtend",
            "65901c9b69147b6e834d56a6558a19dd815d857d"
        ],
        [
            "2:{",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "rewrite (andb_comm _ false) in H.",
            "VernacExtend",
            "fee7228dde643aeb8a4db5b3303619cb80cdca21"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "pose proof proj2 (LA_ENV_COMPL id) (ex_intro _ _ H0) as [co ?].",
            "VernacExtend",
            "34a4da877044f920a8fbc97ddfb76b4137fe7272"
        ],
        [
            "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ _ H1) as [ha ?].",
            "VernacExtend",
            "a84fa7f2d4f82b53fd67c7266d57cf99f58f8ec7"
        ],
        [
            "rewrite H1 in IH; rewrite H2 in H.",
            "VernacExtend",
            "b2aac0ffca0fcd284d0862fa96bb53c48f2e2ab7"
        ],
        [
            "rewrite (HA_ENV_CONSI id _ _ H1 H2) in H.",
            "VernacExtend",
            "f29696074e03f071547668bf416802af766a2ee5"
        ],
        [
            "rewrite (LA_ENV_CONSI id _ _ H1 H0) in H.",
            "VernacExtend",
            "880873c62e982e86d2801a92cff6a4a2219c5187"
        ],
        [
            "eapply align_compatible_rec_Tunion; [eassumption | intros].",
            "VernacExtend",
            "345907cc44e1bfd36d5434557c2921f7ed0f498f"
        ],
        [
            "clear H0 H1 H2.",
            "VernacExtend",
            "526f31d0d16a282c149dc97e1b467e209adeae4b"
        ],
        [
            "unfold legal_alignas_composite in *.",
            "VernacExtend",
            "aa498c6b5b844aabdcda4a46f3408201e59e9e7a"
        ],
        [
            "induction IH as [| [i t] ?].",
            "VernacExtend",
            "54df72f5392b07cce77d62ebcaa84788403603c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "Opaque alignof.",
            "VernacSetOpacity",
            "6ed607fc398185b3dd0a3f9995ccf4e10474087b"
        ],
        [
            "simpl in H0, H3, H.",
            "VernacExtend",
            "c32ae5da4fdee0cebf74c5af95b04ed7e2b94bad"
        ],
        [
            "Transparent alignof.",
            "VernacSetOpacity",
            "7f52d3b3b206f24bcf574ec8a036901522ca06a7"
        ],
        [
            "if_tac in H3.",
            "VernacExtend",
            "439ca89b0874e88df0510b38faa45de8f8f7e6e3"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst i0; inv H3.",
            "VernacExtend",
            "48b80313057f33f7ea7200956f82a6600884f180"
        ],
        [
            "apply H0; simpl.",
            "VernacExtend",
            "aa0cb77a41e95af99ba85126629956f80b2c7f0d"
        ],
        [
            "autorewrite with align in H |- *.",
            "VernacExtend",
            "7cb5dfa3535d9bc2a482a7bf9e4251d4e4a80722"
        ],
        [
            "destruct H as [[_ [? ?]] [? ?]].",
            "VernacExtend",
            "ff79bf88488603cb17a3685b540f1aef6b5108c2"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHIH; auto.",
            "VernacExtend",
            "fb42a383285aca93e826aa5e76f16f61fcc3874d"
        ],
        [
            "autorewrite with align in H |- *.",
            "VernacExtend",
            "7cb5dfa3535d9bc2a482a7bf9e4251d4e4a80722"
        ],
        [
            "split; [split |]; tauto.",
            "VernacExtend",
            "c33eaf7d107eed477552e02192a651bbc67e3df3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End soundness.",
            "VernacEndSegment",
            "04011f071a777fce303ecc49ebc908aeec5ba44b"
        ],
        [
            "End LegalAlignasStrictFacts.",
            "VernacEndSegment",
            "03d26c446c7632f8a0430f1352fe27f9125ad1ff"
        ],
        [
            "Module LegalAlignasStrong <: LEGAL_ALIGNAS.",
            "VernacDefineModule",
            "e930c575db70e7d9cf797394382e05bc9ba8f65c"
        ],
        [
            "Section legal_alignas.",
            "VernacBeginSection",
            "c2142644dd77a0407837945949635b3c8a544b52"
        ],
        [
            "Context (cenv: composite_env) (ha_env: PTree.t Z).",
            "VernacContext",
            "be607833462387137ce3044439820d7c30023078"
        ],
        [
            "Definition legal_alignas_obs: Type := bool.",
            "VernacDefinition",
            "9c9f81806140ef47fbc7059814a58158a6a16a45"
        ],
        [
            "Fixpoint legal_alignas_type (la_env: PTree.t bool) t: bool := match t with | Tarray t' _ _ => (sizeof cenv t' mod hardware_alignof ha_env t' =? 0) && legal_alignas_type la_env t' | Tstruct id _ => match la_env ! id with | Some la => la | None => false end | Tunion id _ => match la_env ! id with | Some la => la | None => false end | _ => match access_mode t with | By_value ch => true | _ => false end end.",
            "VernacFixpoint",
            "3fae6c706d02c317d8cd68f3661adc34c53d3967"
        ],
        [
            "Fixpoint legal_alignas_struct_members_rec (la_env: PTree.t bool) (m: members) (pos: Z): bool := match m with | nil => true | (_, t) :: m' => (align pos (alignof cenv t) mod hardware_alignof ha_env t =? 0) && (legal_alignas_type la_env t) && (legal_alignas_struct_members_rec la_env m' (align pos (alignof cenv t) + sizeof cenv t)) end.",
            "VernacFixpoint",
            "4bddc012b095dfced071f7f4baf8ef77f058025c"
        ],
        [
            "Fixpoint legal_alignas_union_members_rec (la_env: PTree.t bool) (m: members): bool := match m with | nil => true | (_, t) :: m' => (legal_alignas_type la_env t) && (legal_alignas_union_members_rec la_env m') end.",
            "VernacFixpoint",
            "fef531ed21ca9f43fd38a11b4d9defb2202f5cc4"
        ],
        [
            "Definition legal_alignas_composite (la_env: PTree.t bool) (co: composite): bool := match co_su co with | Struct => legal_alignas_struct_members_rec la_env (co_members co) 0 | Union => legal_alignas_union_members_rec la_env (co_members co) end.",
            "VernacDefinition",
            "f92dba55e5496f1b53ec348d15fa8928ebfd7d05"
        ],
        [
            "Definition legal_alignas_env: PTree.t bool := let l := composite_reorder.rebuild_composite_elements cenv in fold_right (fun (ic: positive * composite) (T0: PTree.t bool) => let (i, co) := ic in let T := T0 in PTree.set i (legal_alignas_composite T co) T) (PTree.empty _) l.",
            "VernacDefinition",
            "2b91de79e0816c0c7b3ac194f9014426962d75f2"
        ],
        [
            "Definition is_aligned_aux (b: bool) (ha: Z) (ofs: Z) := b && ((ofs mod ha) =? 0).",
            "VernacDefinition",
            "10d5bd39ce50a4dacd462de7fa636053daa97cc9"
        ],
        [
            "End legal_alignas.",
            "VernacEndSegment",
            "c4ebc4f9af6ffd93e8377c693968b84adc9a95e0"
        ],
        [
            "End LegalAlignasStrong.",
            "VernacEndSegment",
            "98dfe7417ba32c307fe749526b8e99f37ebe7eaa"
        ],
        [
            "Module LegalAlignasStrongFacts: LEGAL_ALIGNAS_FACTS with Module LegalAlignas := LegalAlignasStrong.",
            "VernacDefineModule",
            "6b74ac4634329436610d0c5cd1db911632150295"
        ],
        [
            "Module LegalAlignas := LegalAlignasStrong.",
            "VernacDefineModule",
            "46a9ddf43064083b780f66ad64d978b34780a617"
        ],
        [
            "Module LegalAlignasDefs := LegalAlignasDefsGen (LegalAlignas).",
            "VernacDefineModule",
            "3309d9d4917e2dd63c9e0dce56b8d1286892e5c2"
        ],
        [
            "Export LegalAlignas LegalAlignasDefs.",
            "VernacImport",
            "f797c1d0a50614f389be38725205fc7f2b78cd6f"
        ],
        [
            "Section legal_alignas.",
            "VernacBeginSection",
            "c2142644dd77a0407837945949635b3c8a544b52"
        ],
        [
            "Context (cenv: composite_env) (ha_env: PTree.t Z).",
            "VernacContext",
            "be607833462387137ce3044439820d7c30023078"
        ],
        [
            "Lemma aux1: forall T co, match co_su co with | Struct => (fix fm (pos : Z) (l : list (ident * type * bool)) {struct l} : bool := match l with | nil => true | (_, t, la) :: l' => (align pos (alignof cenv t) mod hardware_alignof ha_env t =? 0) && la && fm (align pos (alignof cenv t) + sizeof cenv t) l' end) 0 | Union => fix fm (l : list (ident * type * bool)) : bool := match l with | nil => true | (_, _, la) :: l' => la && fm l' end end (map (fun it0 : positive * type => let (i0, t0) := it0 in (i0, t0, type_func.F (fun t : type => match access_mode t with | By_value _ => true | By_reference => false | By_copy => false | By_nothing => false end) (fun (la : bool) (t : type) (_ : Z) (_ : attr) => (sizeof cenv t mod hardware_alignof ha_env t =? 0) && la) (fun (la : bool) (_ : ident) (_ : attr) => la) (fun (la : bool) (_ : ident) (_ : attr) => la) T t0)) (co_members co)) = legal_alignas_composite cenv ha_env T co.",
            "VernacStartTheoremProof",
            "d59314d347b4d4ddb166daeb80c3957995e742b7"
        ],
        [
            "intros; unfold legal_alignas_composite, legal_alignas_type.",
            "VernacExtend",
            "b9c4f8872b7a1bc5e1f1534c5010b0c6935d0a6d"
        ],
        [
            "destruct (co_su co).",
            "VernacExtend",
            "73a102f30e6d36fb234e054b279f946c640ee175"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "generalize 0 at 2 4.",
            "VernacExtend",
            "f5df45479ac51fe9c8f097ed3097c9b7d46ae5d0"
        ],
        [
            "induction (co_members co) as [| [i t] ?]; intros.",
            "VernacExtend",
            "3524229bb6f472b91c088e8c6e75a4269da0d7ee"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal; [f_equal |]; auto.",
            "VernacExtend",
            "3044c1b6d65999bc52b2ec740b36666352b6afbe"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction t; auto.",
            "VernacExtend",
            "f3a71cbb1d4317191cf94a3dde1e0ae84fc436cb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHt.",
            "VernacExtend",
            "d7c6a10da1c3b93e6cd1b076977ec06f52b9b586"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction (co_members co) as [| [i t] ?]; intros.",
            "VernacExtend",
            "3524229bb6f472b91c088e8c6e75a4269da0d7ee"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal; [f_equal |]; auto.",
            "VernacExtend",
            "3044c1b6d65999bc52b2ec740b36666352b6afbe"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction t; auto.",
            "VernacExtend",
            "f3a71cbb1d4317191cf94a3dde1e0ae84fc436cb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHt.",
            "VernacExtend",
            "d7c6a10da1c3b93e6cd1b076977ec06f52b9b586"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux2: (type_func.Env (fun t : type => match access_mode t with | By_value _ => true | By_reference => false | By_copy => false | By_nothing => false end) (fun (la : bool) (t : type) (_ : Z) (_ : attr) => (sizeof cenv t mod hardware_alignof ha_env t =? 0) && la) (fun (la : bool) (_ : ident) (_ : attr) => la) (fun (la : bool) (_ : ident) (_ : attr) => la) (fun su : struct_or_union => match su with | Struct => (fix fm (pos : Z) (l : list (ident * type * bool)) {struct l} : bool := match l with | nil => true | (_, t, la) :: l' => (align pos (alignof cenv t) mod hardware_alignof ha_env t =? 0) && la && fm (align pos (alignof cenv t) + sizeof cenv t) l' end) 0 | Union => fix fm (l : list (ident * type * bool)) : bool := match l with | nil => true | (_, _, la) :: l' => la && fm l' end end) (composite_reorder.rebuild_composite_elements cenv)) = legal_alignas_env cenv ha_env.",
            "VernacStartTheoremProof",
            "07c8dd0d7d79c9ad0c1c0a5edfa0d04449bb5447"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold type_func.Env, type_func.env_rec, legal_alignas_env.",
            "VernacExtend",
            "a090c966e9d89f6703cdcf0d21312fd11261cbd6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "extensionality ic.",
            "VernacExtend",
            "57f05dc30ed5bfb12c1ef624b024d336f61fe8b3"
        ],
        [
            "destruct ic as [i co].",
            "VernacExtend",
            "efcdf2791cfac89f8e0ac2d9e73cf63114e7d2e4"
        ],
        [
            "extensionality T.",
            "VernacExtend",
            "7e990be5ec41e750c4486c3da12415315aed4485"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply aux1.",
            "VernacExtend",
            "ff4c3cdb3bbf4ee91d0fd45d8205de6d4ae91dc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End legal_alignas.",
            "VernacEndSegment",
            "c4ebc4f9af6ffd93e8377c693968b84adc9a95e0"
        ],
        [
            "Theorem legal_alignas_env_consistency: forall (cenv: composite_env) (ha_env: PTree.t Z), composite_env_consistent cenv -> legal_alignas_env_consistent cenv ha_env (legal_alignas_env cenv ha_env).",
            "VernacStartTheoremProof",
            "e259b3315d867c5b01a1eda59d593f96694754b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof @composite_reorder_consistent bool cenv (fun t => match access_mode t with | By_value _ => true | _ => false end) (fun la t n a => ((sizeof cenv t mod hardware_alignof ha_env t =? 0) && la)) (fun la id a => la) (fun la id a => la) (fun su => match su with | Struct => (fix fm (pos: Z) (l: list (ident * type * bool)) : bool := match l with | nil => true | (_, t, la) :: l' => (align pos (alignof cenv t) mod hardware_alignof ha_env t =? 0) && la && (fm (align pos (alignof cenv t) + sizeof cenv t) l') end) 0 | Union => (fix fm (l: list (ident * type * bool)) : bool := match l with | nil => true | (_, t, la) :: l' => la && (fm l') end) end) H as HH.",
            "VernacExtend",
            "2b240c1d1703ee8fb670209e236629bc42c1bbd8"
        ],
        [
            "hnf in HH.",
            "VernacExtend",
            "ec87d32c3120e3baadd932e5ade957aaf0068642"
        ],
        [
            "rewrite aux2 in HH.",
            "VernacExtend",
            "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "specialize (HH _ _ la H0 H1).",
            "VernacExtend",
            "dec471fcf25e8f65428460b9c1c235ae860cafe3"
        ],
        [
            "rewrite HH, <- aux1; auto.",
            "VernacExtend",
            "0da64de6a67efe6fca9ba9eec5cf3e6a05c2a7b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem legal_alignas_env_completeness: forall (cenv: composite_env) (ha_env: PTree.t Z), legal_alignas_env_complete cenv (legal_alignas_env cenv ha_env).",
            "VernacStartTheoremProof",
            "266535072bbf2725f15861608e913f246fa2eb72"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof @composite_reorder_complete bool cenv (fun t => match access_mode t with | By_value _ => true | _ => false end) (fun la t n a => ((sizeof cenv t mod hardware_alignof ha_env t =? 0) && la)) (fun la id a => la) (fun la id a => la) (fun su => match su with | Struct => (fix fm (pos: Z) (l: list (ident * type * bool)) : bool := match l with | nil => true | (_, t, la) :: l' => (align pos (alignof cenv t) mod hardware_alignof ha_env t =? 0) && la && (fm (align pos (alignof cenv t) + sizeof cenv t) l') end) 0 | Union => (fix fm (l: list (ident * type * bool)) : bool := match l with | nil => true | (_, t, la) :: l' => la && (fm l') end) end) as HH.",
            "VernacExtend",
            "314c05b1b9ab84c6b653e235a7f00b1a5eb5d336"
        ],
        [
            "hnf in HH.",
            "VernacExtend",
            "ec87d32c3120e3baadd932e5ade957aaf0068642"
        ],
        [
            "rewrite aux2 in HH.",
            "VernacExtend",
            "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section soundness.",
            "VernacBeginSection",
            "c06a4280b2216adf6fa777ca98d077bbe4ba610f"
        ],
        [
            "Context (cenv: composite_env) (ha_env: PTree.t Z) (la_env: PTree.t bool) (CENV_CONSI: composite_env_consistent cenv) (CENV_COSU: composite_env_complete_legal_cosu_type cenv) (HA_ENV_CONSI: hardware_alignof_env_consistent cenv ha_env) (HA_ENV_COMPL: hardware_alignof_env_complete cenv ha_env) (LA_ENV_CONSI: legal_alignas_env_consistent cenv ha_env la_env) (LA_ENV_COMPL: legal_alignas_env_complete cenv la_env).",
            "VernacContext",
            "a5ee3997dd79c71c8fa69eb5a396f3bf399aa426"
        ],
        [
            "Lemma by_value_sound: forall t ofs, is_aligned cenv ha_env la_env t ofs = true -> (exists ch, access_mode t = By_value ch) -> align_compatible_rec cenv t ofs.",
            "VernacStartTheoremProof",
            "5636405a0d70a6f88c388ac2e63e89b6f16d6384"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold is_aligned, is_aligned_aux, legal_alignas_type, hardware_alignof in H.",
            "VernacExtend",
            "51d43fd132e07a8d86df7f3d7f55271a789da342"
        ],
        [
            "destruct H0 as [ch ?].",
            "VernacExtend",
            "4c97ae300f82b137da0c2c9dd0dbfc5638a8ca97"
        ],
        [
            "assert ((ofs mod align_chunk ch =? 0) = true) by (destruct t; try solve [inversion H0]; rewrite H0 in H; auto); clear H.",
            "VernacExtend",
            "b0a73ff592e0fa15fdd4b4d28f08cd4c5618cf9a"
        ],
        [
            "autorewrite with align in H1.",
            "VernacExtend",
            "71cbb36bcb014871e0368416b2fcd40326780871"
        ],
        [
            "eapply align_compatible_rec_by_value; eauto.",
            "VernacExtend",
            "f4db0e75a0fe01e6bbc90c62515d385fb98b4f71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem legal_alignas_soundness: legal_alignas_env_sound cenv ha_env la_env.",
            "VernacStartTheoremProof",
            "2da687cc4087cb1a593cd10b56f3c42f803e1900"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "revert ofs H H0; type_induction t cenv CENV_CONSI; intros.",
            "VernacExtend",
            "0f373e27872c8a729ad672f12171b06ff14208b2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply by_value_sound; eauto.",
            "VernacExtend",
            "9b250edc65831519eee009747ffae476f644b5f3"
        ],
        [
            "destruct i, s; eexists; try reflexivity.",
            "VernacExtend",
            "89e88b3e33aab2527772bc6358e7bc2e256f17cf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply by_value_sound; eauto.",
            "VernacExtend",
            "9b250edc65831519eee009747ffae476f644b5f3"
        ],
        [
            "destruct s; eexists; try reflexivity.",
            "VernacExtend",
            "66a1069f96e52bc6fb750b2bb0b997eaf45e3622"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply by_value_sound; eauto.",
            "VernacExtend",
            "9b250edc65831519eee009747ffae476f644b5f3"
        ],
        [
            "destruct f; eexists; try reflexivity.",
            "VernacExtend",
            "4735d20edd909356f211cc1d9d4bee15c09baf4e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply by_value_sound; eauto.",
            "VernacExtend",
            "9b250edc65831519eee009747ffae476f644b5f3"
        ],
        [
            "eexists; try reflexivity.",
            "VernacExtend",
            "e5b4bb72ca7bc9eb58532599480ca12a18a827b2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply align_compatible_rec_Tarray; intros.",
            "VernacExtend",
            "a699d0a46597b64e09f5e6fdb0a0f315d23e0548"
        ],
        [
            "apply IH; clear IH; [auto |].",
            "VernacExtend",
            "cbda58d51bad05dc823347157f4f9a1b78b427ad"
        ],
        [
            "unfold is_aligned, is_aligned_aux in H0 |- *.",
            "VernacExtend",
            "8c07e2fc9a4e03433de8d017dc3424ebe3cd8f3f"
        ],
        [
            "simpl in H0 |- *.",
            "VernacExtend",
            "53dfb12d29da9115f22ff2e19bd6e71b0d980d9b"
        ],
        [
            "autorewrite with align in H0 |- *.",
            "VernacExtend",
            "64099ed9bb10bc6824518acb900d96e6bbf904c2"
        ],
        [
            "destruct H0 as [[? ?] ?].",
            "VernacExtend",
            "1789fc4e7e536210cbbfc2a5090b7cd19f2c3981"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply Z.divide_add_r; auto.",
            "VernacExtend",
            "e3c971e0308291f72e95aaad33fe2ae1e1e55607"
        ],
        [
            "apply Z.divide_mul_l; auto.",
            "VernacExtend",
            "607b6ab098229cf71e13ae09076adcf3d10ec057"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold is_aligned, is_aligned_aux in H0, IH.",
            "VernacExtend",
            "b0254611fc62c7e1030e155b6711ee1b5125abe4"
        ],
        [
            "simpl in H, H0, IH.",
            "VernacExtend",
            "b7f54f3db072957a93ed52283a1c5b838f96795a"
        ],
        [
            "destruct (la_env ! id) as [la |] eqn:?H; [| inv H0].",
            "VernacExtend",
            "f7aead9b301b70da5aa2670a4a3d1abaea29bdb4"
        ],
        [
            "pose proof proj2 (LA_ENV_COMPL id) (ex_intro _ _ H1) as [co ?].",
            "VernacExtend",
            "65cb718512bfe5faa12711255b269be19fb86a8a"
        ],
        [
            "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ _ H2) as [ha ?].",
            "VernacExtend",
            "bd0e29bdd029c49a6afd404b721b5f80aa9dca7c"
        ],
        [
            "pose proof CENV_COSU _ _ H2.",
            "VernacExtend",
            "529d2037105ef3b6e7419aafeb1f6da7155e73b5"
        ],
        [
            "rewrite H2 in IH, H; rewrite H3 in H0.",
            "VernacExtend",
            "5494d97dc36af1b3fc20efad0f8b75be9fec1c6d"
        ],
        [
            "rewrite (HA_ENV_CONSI id _ _ H2 H3) in H0.",
            "VernacExtend",
            "95ee1a6cc3a11518012f4f1c646c2321beeb0274"
        ],
        [
            "rewrite (LA_ENV_CONSI id _ _ H2 H1) in H0.",
            "VernacExtend",
            "786d55464a172c9e22f3022ddc6f7b6c4fb29bd8"
        ],
        [
            "autorewrite with align in H0 |- *.",
            "VernacExtend",
            "64099ed9bb10bc6824518acb900d96e6bbf904c2"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "unfold legal_alignas_composite in H0.",
            "VernacExtend",
            "a11f39ecf458bbe88386fa311fb2e17c8f9bfcd5"
        ],
        [
            "destruct (co_su co); [| inv H].",
            "VernacExtend",
            "d22340bd67c2b231fa73cbd963ce73e236d29b44"
        ],
        [
            "eapply align_compatible_rec_Tstruct; [eassumption | intros].",
            "VernacExtend",
            "d038e1c98c1ba5e140867a968faa22a67a3e5062"
        ],
        [
            "unfold field_offset in H7.",
            "VernacExtend",
            "244ce34e348aae7dc0364377d218ad74d47a21ff"
        ],
        [
            "clear H H1 H2 H3.",
            "VernacExtend",
            "3a982b48a06cc9693403f9208af16e9f32fd126a"
        ],
        [
            "revert H0 H4 H5 H6 H7; generalize 0; induction IH as [| [i t] ?]; intros.",
            "VernacExtend",
            "35c95b06688a5f886ceaa61f09a6638a455db099"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H6.",
            "VernacExtend",
            "18148ecb90898142481b96ce8d75b495e98fc93a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H, H0, H4, H5, H6, H7.",
            "VernacExtend",
            "fb2688b38442b247fb5f6c2e4677b091287d208b"
        ],
        [
            "if_tac in H6.",
            "VernacExtend",
            "ca8110d91895f43e3ec86087f492901155642b84"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst i0; inv H6; inv H7.",
            "VernacExtend",
            "b1f89baf53a822428ae8b28c17d46fd647ea87dc"
        ],
        [
            "autorewrite with align in H4, H5, H0 |- *.",
            "VernacExtend",
            "a709bea969f8e4c83ac1e05e43f03506723a15e5"
        ],
        [
            "destruct H0 as [[? ?] ?], H4 as [? ?], H5 as [? ?].",
            "VernacExtend",
            "51ce8010bc5323e258528ccab1b28d0d041b8f80"
        ],
        [
            "apply H; simpl; [tauto |].",
            "VernacExtend",
            "bdc0a3dcaf998568927d3334a49b7ee5b2a7e1d1"
        ],
        [
            "autorewrite with align.",
            "VernacExtend",
            "115e1967b80a450e97d78a95b1384e247bcc7c3f"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply Z.divide_add_r; auto.",
            "VernacExtend",
            "e3c971e0308291f72e95aaad33fe2ae1e1e55607"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "autorewrite with align in H0, H4, H5.",
            "VernacExtend",
            "eab98bb3d73532e359d40c7be26c96b8afeb0315"
        ],
        [
            "destruct H4, H5.",
            "VernacExtend",
            "6cf28c86e46da4c719ce2d40a2c4086682fabb38"
        ],
        [
            "apply (IHIH (align z (alignof cenv t) + sizeof cenv t)); auto.",
            "VernacExtend",
            "aac3afd22e907715de46873385739a6f9f5151b4"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold is_aligned, is_aligned_aux in H0, IH.",
            "VernacExtend",
            "b0254611fc62c7e1030e155b6711ee1b5125abe4"
        ],
        [
            "simpl in H, H0, IH.",
            "VernacExtend",
            "b7f54f3db072957a93ed52283a1c5b838f96795a"
        ],
        [
            "destruct (la_env ! id) as [la |] eqn:?H; [| inv H0].",
            "VernacExtend",
            "f7aead9b301b70da5aa2670a4a3d1abaea29bdb4"
        ],
        [
            "pose proof proj2 (LA_ENV_COMPL id) (ex_intro _ _ H1) as [co ?].",
            "VernacExtend",
            "65cb718512bfe5faa12711255b269be19fb86a8a"
        ],
        [
            "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ _ H2) as [ha ?].",
            "VernacExtend",
            "bd0e29bdd029c49a6afd404b721b5f80aa9dca7c"
        ],
        [
            "pose proof CENV_COSU _ _ H2.",
            "VernacExtend",
            "529d2037105ef3b6e7419aafeb1f6da7155e73b5"
        ],
        [
            "rewrite H2 in IH, H; rewrite H3 in H0.",
            "VernacExtend",
            "5494d97dc36af1b3fc20efad0f8b75be9fec1c6d"
        ],
        [
            "rewrite (HA_ENV_CONSI id _ _ H2 H3) in H0.",
            "VernacExtend",
            "95ee1a6cc3a11518012f4f1c646c2321beeb0274"
        ],
        [
            "rewrite (LA_ENV_CONSI id _ _ H2 H1) in H0.",
            "VernacExtend",
            "786d55464a172c9e22f3022ddc6f7b6c4fb29bd8"
        ],
        [
            "autorewrite with align in H0 |- *.",
            "VernacExtend",
            "64099ed9bb10bc6824518acb900d96e6bbf904c2"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "unfold legal_alignas_composite in H0.",
            "VernacExtend",
            "a11f39ecf458bbe88386fa311fb2e17c8f9bfcd5"
        ],
        [
            "destruct (co_su co); [inv H |].",
            "VernacExtend",
            "37edfca2a57e15bd794342742116293eb1acea27"
        ],
        [
            "eapply align_compatible_rec_Tunion; [eassumption | intros].",
            "VernacExtend",
            "345907cc44e1bfd36d5434557c2921f7ed0f498f"
        ],
        [
            "clear H H1 H2 H3.",
            "VernacExtend",
            "3a982b48a06cc9693403f9208af16e9f32fd126a"
        ],
        [
            "revert H0 H4 H5 H6; induction IH as [| [i t] ?]; intros.",
            "VernacExtend",
            "7aebc892983c9b235d50d430fe96c0dc05215ec5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H6.",
            "VernacExtend",
            "18148ecb90898142481b96ce8d75b495e98fc93a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H, H0, H4, H5, H6.",
            "VernacExtend",
            "de6af072abe6e577af219b06f693b92ed6c1ab20"
        ],
        [
            "if_tac in H6.",
            "VernacExtend",
            "ca8110d91895f43e3ec86087f492901155642b84"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst i0; inv H6.",
            "VernacExtend",
            "2ea7da3e04d61cf37254ea1b0ad8b6955a34efa0"
        ],
        [
            "autorewrite with align in H4, H5, H0 |- *.",
            "VernacExtend",
            "a709bea969f8e4c83ac1e05e43f03506723a15e5"
        ],
        [
            "destruct H0 as [? ?], H4 as [? ?], H5 as [? ?].",
            "VernacExtend",
            "1241adabf4fbbf6e556d111695ad3e35903ba333"
        ],
        [
            "apply H; simpl; [tauto |].",
            "VernacExtend",
            "bdc0a3dcaf998568927d3334a49b7ee5b2a7e1d1"
        ],
        [
            "autorewrite with align.",
            "VernacExtend",
            "115e1967b80a450e97d78a95b1384e247bcc7c3f"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "autorewrite with align in H0, H4, H5.",
            "VernacExtend",
            "eab98bb3d73532e359d40c7be26c96b8afeb0315"
        ],
        [
            "destruct H4, H5.",
            "VernacExtend",
            "6cf28c86e46da4c719ce2d40a2c4086682fabb38"
        ],
        [
            "apply IHIH; auto.",
            "VernacExtend",
            "fb42a383285aca93e826aa5e76f16f61fcc3874d"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End soundness.",
            "VernacEndSegment",
            "04011f071a777fce303ecc49ebc908aeec5ba44b"
        ],
        [
            "End LegalAlignasStrongFacts.",
            "VernacEndSegment",
            "89428edfad759c7a2212a9e656b703d9962874f1"
        ],
        [
            "Module Export LegalAlignasFacts := LegalAlignasStrongFacts.",
            "VernacDefineModule",
            "83cf8cc0475bbcd59dec179fa6dc497792d2b21c"
        ]
    ],
    "proofs": [
        {
            "name": "align_compatible_rec_by_value_inv",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H1; inv H1; auto.",
                        "VernacExtend",
                        "3e6af54f96b57b74b0d4113ff4baa936e24ab1f5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_compatible_rec_Tarray_inv",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_compatible_rec_Tstruct_inv",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H3.",
                        "VernacExtend",
                        "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H5; inv H5.",
                        "VernacExtend",
                        "ef2bdd9d257b1206e190ebde9f14c48a09bd7d83"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_compatible_rec_Tunion_inv",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "6144021562e950304ba8e947fdc2423691182458"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H4; inv H4.",
                        "VernacExtend",
                        "fba5152d9a2b45c51aa8e16cb037df94febbb30b"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_chunk_1248",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct ch; simpl; auto.",
                        "VernacExtend",
                        "ca31ee8ad25babde097a5eb76b1032964630785a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_chunk_two_p",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof align_chunk_1248 ch as [| [| [|]]]; rewrite H.",
                        "VernacExtend",
                        "47d78660ffd4219d0cc105882bb4151b705be891"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat; auto.",
                        "VernacExtend",
                        "815a7dfd5eb81dc69151fb22cee9f66c11e56534"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists 1%nat; auto.",
                        "VernacExtend",
                        "2b4c33e3cb6b14781b3b5e62b655e12632e3b4c7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists 2%nat; auto.",
                        "VernacExtend",
                        "504fd4180e3e367b21e89718b9778c5c9e7af0f3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists 3%nat; auto.",
                        "VernacExtend",
                        "73d8fae57aa9afd7bfb02fa9f4f8689aba361cf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux1",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros; unfold hardware_alignof_composite, hardware_alignof.",
                        "VernacExtend",
                        "fce5e44702f971c0884c8055e19b459a79eca36d"
                    ]
                },
                {
                    "command": [
                        "induction (co_members co) as [| [i t] ?].",
                        "VernacExtend",
                        "5b3df932792dfe21b5867f7050535c95c04f61a6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "induction t; auto.",
                        "VernacExtend",
                        "f3a71cbb1d4317191cf94a3dde1e0ae84fc436cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux2",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold type_func.Env, type_func.env_rec, hardware_alignof_env.",
                        "VernacExtend",
                        "ac53c5b556d973ae5073b20cfdb97df719cbfc07"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "extensionality ic.",
                        "VernacExtend",
                        "57f05dc30ed5bfb12c1ef624b024d336f61fe8b3"
                    ]
                },
                {
                    "command": [
                        "destruct ic as [i co].",
                        "VernacExtend",
                        "efcdf2791cfac89f8e0ac2d9e73cf63114e7d2e4"
                    ]
                },
                {
                    "command": [
                        "extensionality T.",
                        "VernacExtend",
                        "7e990be5ec41e750c4486c3da12415315aed4485"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply aux1.",
                        "VernacExtend",
                        "ff4c3cdb3bbf4ee91d0fd45d8205de6d4ae91dc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hardware_alignof_consistency",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof @composite_reorder_consistent Z cenv (fun t => match access_mode t with | By_value ch => Memdata.align_chunk ch | _ => 1 end) (fun ha _ _ _ => ha) (fun ha _ _ => ha) (fun ha _ _ => ha) (fun _ => fix fm (l: list (ident * type * Z)): Z := match l with | nil => 1 | (_, _, ha) :: l' => Z.max ha (fm l') end) H as HH.",
                        "VernacExtend",
                        "6449aed77ce899fbdbddea44d11fa11789a2bed3"
                    ]
                },
                {
                    "command": [
                        "hnf in HH.",
                        "VernacExtend",
                        "ec87d32c3120e3baadd932e5ade957aaf0068642"
                    ]
                },
                {
                    "command": [
                        "subst ha_env.",
                        "VernacExtend",
                        "6b6bdda3e3bc454265ff92f5d4ed560dd42f89e6"
                    ]
                },
                {
                    "command": [
                        "rewrite aux2 in HH.",
                        "VernacExtend",
                        "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
                    ]
                },
                {
                    "command": [
                        "specialize (HH _ _ ha H1 H2).",
                        "VernacExtend",
                        "11a53d7fedd7aaf27edfebebcaf8be8a8963b591"
                    ]
                },
                {
                    "command": [
                        "rewrite HH, aux1; auto.",
                        "VernacExtend",
                        "82f8059a79bb087f20dd1dc98c6985680ad1e13f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hardware_alignof_completeness",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof @composite_reorder_complete Z cenv (fun t => match access_mode t with | By_value ch => Memdata.align_chunk ch | _ => 1 end) (fun ha _ _ _ => ha) (fun ha _ _ => ha) (fun ha _ _ => ha) (fun _ => fix fm (l: list (ident * type * Z)): Z := match l with | nil => 1 | (_, _, ha) :: l' => Z.max ha (fm l') end) as HH.",
                        "VernacExtend",
                        "c53aadcd798830b02a44f16d65a019aaae00ac7d"
                    ]
                },
                {
                    "command": [
                        "hnf in HH.",
                        "VernacExtend",
                        "ec87d32c3120e3baadd932e5ade957aaf0068642"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite aux2 in HH.",
                        "VernacExtend",
                        "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hardware_alignof_pos",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof hardware_alignof_two_p _ _ H H0 H1 t as [n ?].",
                        "VernacExtend",
                        "a62f99679e2c0dbc403ae08c40f5a4e0d2c21f2d"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply two_power_nat_pos.",
                        "VernacExtend",
                        "b662a9ac34dd1a59671605f975e998a807dd01e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hardware_alignof_composite_two_p",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction m as [| [i t] ?].",
                        "VernacExtend",
                        "e3b4dd1ab90494612f4e748656596261451f0737"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat.",
                        "VernacExtend",
                        "ecf2e229db1efa1d9dec061865f354468879442a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct IHm as [n1 ?], (hardware_alignof_two_p _ _ H H0 H1 t) as [n2 ?].",
                        "VernacExtend",
                        "a45034f7fa461fe1a3fe898e8e6a2f837d21eb32"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H2, H3.",
                        "VernacExtend",
                        "bd045133fa028ed96950f3be8d169110b98b6951"
                    ]
                },
                {
                    "command": [
                        "rewrite max_two_power_nat.",
                        "VernacExtend",
                        "3a00e443a07e3a319830bb30b17fbe8f9676f1fc"
                    ]
                },
                {
                    "command": [
                        "eexists; reflexivity.",
                        "VernacExtend",
                        "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hardware_alignof_by_value",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] [|] | [|] | [|] | | | | |]; inv H; auto.",
                        "VernacExtend",
                        "6479222db46ff8b63e216e733f4a4b08293f3e4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_compatible_rec_hardware_alignof_divide",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? ? ? CENV_CONS CENV_COSU HA_ENV_CONS HA_ENV_COMPL.",
                        "VernacExtend",
                        "1a9e51ddb275f383a0e7c9b65792a5c9eab8166d"
                    ]
                },
                {
                    "command": [
                        "revert t z1 z2.",
                        "VernacExtend",
                        "b33fc566ef2bd01bf4370fb7f400b74a40fcab8e"
                    ]
                },
                {
                    "command": [
                        "assert (BY_VALUE: forall t z1 z2, (exists ch, access_mode t = By_value ch) -> (hardware_alignof ha_env t | z1 - z2) -> align_compatible_rec cenv t z1 <-> align_compatible_rec cenv t z2).",
                        "VernacExtend",
                        "3ba15c2de2463300629092971e588a67b006e9da"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros ? ? ? [? ?] ?.",
                        "VernacExtend",
                        "7ebf480d80a55c619427a2b9c6cb2f43d2a02b6e"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply align_compatible_rec_by_value_inv in H1; eauto.",
                        "VernacExtend",
                        "977d7621284c6eab94aa678d83ad58596dcb9912"
                    ]
                },
                {
                    "command": [
                        "eapply align_compatible_rec_by_value; eauto.",
                        "VernacExtend",
                        "f4db0e75a0fe01e6bbc90c62515d385fb98b4f71"
                    ]
                },
                {
                    "command": [
                        "replace z2 with (z1 - (z1 - z2)) by omega.",
                        "VernacExtend",
                        "0c6104e856f6d0daea7591cb6ac0ff920bc37734"
                    ]
                },
                {
                    "command": [
                        "erewrite hardware_alignof_by_value in H0 by eauto.",
                        "VernacExtend",
                        "29cf69376d8cdbd0d81b5ae602ba098ac6294e7f"
                    ]
                },
                {
                    "command": [
                        "apply Z.divide_sub_r; auto.",
                        "VernacExtend",
                        "e7e1253a0103068a0cb430b4826c8d37ce0e7443"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply align_compatible_rec_by_value_inv in H1; eauto.",
                        "VernacExtend",
                        "977d7621284c6eab94aa678d83ad58596dcb9912"
                    ]
                },
                {
                    "command": [
                        "eapply align_compatible_rec_by_value; eauto.",
                        "VernacExtend",
                        "f4db0e75a0fe01e6bbc90c62515d385fb98b4f71"
                    ]
                },
                {
                    "command": [
                        "replace z1 with (z2 + (z1 - z2)) by omega.",
                        "VernacExtend",
                        "6ac2ce57569d3daf0910a45d8bdd2d3ed6ee3931"
                    ]
                },
                {
                    "command": [
                        "erewrite hardware_alignof_by_value in H0 by eauto.",
                        "VernacExtend",
                        "29cf69376d8cdbd0d81b5ae602ba098ac6294e7f"
                    ]
                },
                {
                    "command": [
                        "apply Z.divide_add_r; auto.",
                        "VernacExtend",
                        "e3c971e0308291f72e95aaad33fe2ae1e1e55607"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro t; type_induction t cenv CENV_CONS; intros.",
                        "VernacExtend",
                        "a2af3c51b5bddcb0d074388ac9c4b7fed91429c5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "split; intros; inv H1; inv H2.",
                        "VernacExtend",
                        "d9f214b6c979337e94235b2cb2f5cb2bd4242354"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply BY_VALUE; auto.",
                        "VernacExtend",
                        "a3a60b8fc931599d381b14db153f12c5aca29c1e"
                    ]
                },
                {
                    "command": [
                        "destruct s, i; eexists; reflexivity.",
                        "VernacExtend",
                        "b0e3a85071d242a0c86f650d7cacad200be55b36"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply BY_VALUE; auto.",
                        "VernacExtend",
                        "a3a60b8fc931599d381b14db153f12c5aca29c1e"
                    ]
                },
                {
                    "command": [
                        "destruct s; eexists; reflexivity.",
                        "VernacExtend",
                        "ea20a2a98a9fe957682f51363ac948810a2963db"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply BY_VALUE; auto.",
                        "VernacExtend",
                        "a3a60b8fc931599d381b14db153f12c5aca29c1e"
                    ]
                },
                {
                    "command": [
                        "destruct f; eexists; reflexivity.",
                        "VernacExtend",
                        "e77df896c59ea9db3c2d83f4b94fe883454bba4b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply BY_VALUE; auto.",
                        "VernacExtend",
                        "a3a60b8fc931599d381b14db153f12c5aca29c1e"
                    ]
                },
                {
                    "command": [
                        "eexists; reflexivity.",
                        "VernacExtend",
                        "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "split; intros; apply align_compatible_rec_Tarray; intros; eapply align_compatible_rec_Tarray_inv in H1; eauto.",
                        "VernacExtend",
                        "301b0176186f49ad5c8c5434e223ab778bcefe83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "specialize (IH (z1 + sizeof cenv t0 * i) (z2 + sizeof cenv t0 * i)).",
                        "VernacExtend",
                        "c90843685827c1a9b626e05f7cebaa7209601a4b"
                    ]
                },
                {
                    "command": [
                        "replace (z1 + sizeof cenv t0 * i - (z2 + sizeof cenv t0 * i)) with (z1 - z2) in IH by omega.",
                        "VernacExtend",
                        "11bd07ae7d744136225a13bf866cadf315aaaf33"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "specialize (IH (z1 + sizeof cenv t0 * i) (z2 + sizeof cenv t0 * i)).",
                        "VernacExtend",
                        "c90843685827c1a9b626e05f7cebaa7209601a4b"
                    ]
                },
                {
                    "command": [
                        "replace (z1 + sizeof cenv t0 * i - (z2 + sizeof cenv t0 * i)) with (z1 - z2) in IH by omega.",
                        "VernacExtend",
                        "11bd07ae7d744136225a13bf866cadf315aaaf33"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "split; intros; inv H1; inv H2; econstructor.",
                        "VernacExtend",
                        "f9b415970998c4240722d4e92db0bc4b2762158d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0.",
                        "VernacExtend",
                        "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
                    ]
                },
                {
                    "command": [
                        "destruct (cenv ! id) as [co |] eqn:?H; [| inv H].",
                        "VernacExtend",
                        "220ad83590e0701e4b8b5b084018745ef8840206"
                    ]
                },
                {
                    "command": [
                        "destruct (co_su co) eqn:?H; inv H.",
                        "VernacExtend",
                        "5f97baebada45e7191ade3e95985291df9477ec5"
                    ]
                },
                {
                    "command": [
                        "assert (forall i0 t0 ofs0, field_type i0 (co_members co) = Errors.OK t0 -> field_offset cenv i0 (co_members co) = Errors.OK ofs0 -> (align_compatible_rec cenv t0 (z1 + ofs0) <-> align_compatible_rec cenv t0 (z2 + ofs0))) as HH; [ | split; intros; eapply align_compatible_rec_Tstruct; eauto; intros; eapply align_compatible_rec_Tstruct_inv in H; eauto; eapply HH; eauto].",
                        "VernacExtend",
                        "22cf4ae9c0290e7f84d9391f6a93da60345e3c86"
                    ]
                },
                {
                    "command": [
                        "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ co H1) as [ha ?].",
                        "VernacExtend",
                        "0e1c7f4fa0bb28bae88a2af9f6b6040414f399f7"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "pose proof HA_ENV_CONS _ _ _ H1 H.",
                        "VernacExtend",
                        "865e01523bd83145cfcf93d6f8ab250b739f22cc"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H0.",
                        "VernacExtend",
                        "dbae769fea2529c982ec8b4da339407464bc3cb4"
                    ]
                },
                {
                    "command": [
                        "pose proof CENV_COSU _ _ H1.",
                        "VernacExtend",
                        "2d13e4dde865b5be66dc3bcff9d26456fc62103c"
                    ]
                },
                {
                    "command": [
                        "clear H H1 H2 H3 ha.",
                        "VernacExtend",
                        "a40159847afb0e83fb15fdc91ca06ce5e7b87972"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "clear H1.",
                        "VernacExtend",
                        "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
                    ]
                },
                {
                    "command": [
                        "induction IH as [| [i t] ?].",
                        "VernacExtend",
                        "54df72f5392b07cce77d62ebcaa84788403603c3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0, H4.",
                        "VernacExtend",
                        "859a8f61cca68737ce46ab12d10cd9d743419765"
                    ]
                },
                {
                    "command": [
                        "autorewrite with align in H0, H4.",
                        "VernacExtend",
                        "393c6dac49d6e9c837694092f40763cc0b3b7b28"
                    ]
                },
                {
                    "command": [
                        "if_tac in H.",
                        "VernacExtend",
                        "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst i; inv H.",
                        "VernacExtend",
                        "a594e4ec76a68653058e00420e9eccb03b62ac36"
                    ]
                },
                {
                    "command": [
                        "apply H1; [simpl; tauto |].",
                        "VernacExtend",
                        "bd07082a0fbf40a472597cdf7181ce4baca8c6dc"
                    ]
                },
                {
                    "command": [
                        "replace (z1 + ofs0 - (z2 + ofs0)) with (z1 - z2) by omega; tauto.",
                        "VernacExtend",
                        "9da6a7f01dc0c67ddf176c3e90cc47b20a614d91"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IHIH; tauto.",
                        "VernacExtend",
                        "e2d3bf313fac8f11565f3254e4924d618f955c42"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0.",
                        "VernacExtend",
                        "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
                    ]
                },
                {
                    "command": [
                        "destruct (cenv ! id) as [co |] eqn:?H; [| inv H].",
                        "VernacExtend",
                        "220ad83590e0701e4b8b5b084018745ef8840206"
                    ]
                },
                {
                    "command": [
                        "destruct (co_su co) eqn:?H; inv H.",
                        "VernacExtend",
                        "5f97baebada45e7191ade3e95985291df9477ec5"
                    ]
                },
                {
                    "command": [
                        "assert (forall i0 t0, field_type i0 (co_members co) = Errors.OK t0 -> (align_compatible_rec cenv t0 z1 <-> align_compatible_rec cenv t0 z2)) as HH; [ | split; intros; eapply align_compatible_rec_Tunion; eauto; intros; eapply align_compatible_rec_Tunion_inv in H; eauto; eapply HH; eauto].",
                        "VernacExtend",
                        "0a4c8283a7910219ea4be015b29e9934a7db1e9b"
                    ]
                },
                {
                    "command": [
                        "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ co H1) as [ha ?].",
                        "VernacExtend",
                        "0e1c7f4fa0bb28bae88a2af9f6b6040414f399f7"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "pose proof HA_ENV_CONS _ _ _ H1 H.",
                        "VernacExtend",
                        "865e01523bd83145cfcf93d6f8ab250b739f22cc"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H0.",
                        "VernacExtend",
                        "dbae769fea2529c982ec8b4da339407464bc3cb4"
                    ]
                },
                {
                    "command": [
                        "pose proof CENV_COSU _ _ H1.",
                        "VernacExtend",
                        "2d13e4dde865b5be66dc3bcff9d26456fc62103c"
                    ]
                },
                {
                    "command": [
                        "clear H H1 H2 H3 ha.",
                        "VernacExtend",
                        "a40159847afb0e83fb15fdc91ca06ce5e7b87972"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction IH as [| [i t] ?].",
                        "VernacExtend",
                        "54df72f5392b07cce77d62ebcaa84788403603c3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0, H4.",
                        "VernacExtend",
                        "859a8f61cca68737ce46ab12d10cd9d743419765"
                    ]
                },
                {
                    "command": [
                        "autorewrite with align in H0, H4.",
                        "VernacExtend",
                        "393c6dac49d6e9c837694092f40763cc0b3b7b28"
                    ]
                },
                {
                    "command": [
                        "if_tac in H.",
                        "VernacExtend",
                        "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst i; inv H.",
                        "VernacExtend",
                        "a594e4ec76a68653058e00420e9eccb03b62ac36"
                    ]
                },
                {
                    "command": [
                        "apply H1; simpl; tauto.",
                        "VernacExtend",
                        "2fe3c8027150e51c3fac982387b769714838104b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IHIH; tauto.",
                        "VernacExtend",
                        "e2d3bf313fac8f11565f3254e4924d618f955c42"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_compatible_rec_hardware_1",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? ? CENV_CONS CENV_COSU HA_ENV_CONS HA_ENV_COMPL.",
                        "VernacExtend",
                        "cabcba2586838e8c9b1d044a4ab015123d105137"
                    ]
                },
                {
                    "command": [
                        "revert z; type_induction t cenv CENV_CONS; intros.",
                        "VernacExtend",
                        "474db12d3fa081036116aca3d52492b575d9d1c0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct s, i; inv H0; econstructor; try reflexivity; apply Z.divide_1_l.",
                        "VernacExtend",
                        "fab631c57e22314643fecdd86de3ac9c3fe2b9f0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct s; inv H0.",
                        "VernacExtend",
                        "70f0b51163205d95503800256d99554919b485de"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct f; inv H0.",
                        "VernacExtend",
                        "2fe3fb0db9dc9897deaa038b592f72c7cfca6417"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply align_compatible_rec_Tarray.",
                        "VernacExtend",
                        "f6a604c1a49c432c77551a78ba9cca87d47139e9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply IH; auto.",
                        "VernacExtend",
                        "ab7c838ddd716a3b14059f64c365105253349c54"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0.",
                        "VernacExtend",
                        "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
                    ]
                },
                {
                    "command": [
                        "destruct (cenv ! id) as [co |] eqn:?H; [| inv H].",
                        "VernacExtend",
                        "220ad83590e0701e4b8b5b084018745ef8840206"
                    ]
                },
                {
                    "command": [
                        "destruct (co_su co) eqn:?H; inv H.",
                        "VernacExtend",
                        "5f97baebada45e7191ade3e95985291df9477ec5"
                    ]
                },
                {
                    "command": [
                        "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ co H1) as [ha ?].",
                        "VernacExtend",
                        "0e1c7f4fa0bb28bae88a2af9f6b6040414f399f7"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "pose proof HA_ENV_CONS _ _ _ H1 H.",
                        "VernacExtend",
                        "865e01523bd83145cfcf93d6f8ab250b739f22cc"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H0.",
                        "VernacExtend",
                        "dbae769fea2529c982ec8b4da339407464bc3cb4"
                    ]
                },
                {
                    "command": [
                        "pose proof CENV_COSU _ _ H1.",
                        "VernacExtend",
                        "2d13e4dde865b5be66dc3bcff9d26456fc62103c"
                    ]
                },
                {
                    "command": [
                        "eapply align_compatible_rec_Tstruct; eauto.",
                        "VernacExtend",
                        "f97e954e1c5736ed0d7022ea6c669e67dc0ef5b9"
                    ]
                },
                {
                    "command": [
                        "clear H H1 H2 H3 ha.",
                        "VernacExtend",
                        "a40159847afb0e83fb15fdc91ca06ce5e7b87972"
                    ]
                },
                {
                    "command": [
                        "intros; clear H1.",
                        "VernacExtend",
                        "71f8c9b2e50619169e4819ad9419cd5150b0ac19"
                    ]
                },
                {
                    "command": [
                        "induction IH as [| [i t] ?].",
                        "VernacExtend",
                        "54df72f5392b07cce77d62ebcaa84788403603c3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0, H4.",
                        "VernacExtend",
                        "859a8f61cca68737ce46ab12d10cd9d743419765"
                    ]
                },
                {
                    "command": [
                        "autorewrite with align in H0, H4.",
                        "VernacExtend",
                        "393c6dac49d6e9c837694092f40763cc0b3b7b28"
                    ]
                },
                {
                    "command": [
                        "destruct H0, H4.",
                        "VernacExtend",
                        "ffd6125f9b978233d9816a13201fa620ca00b56d"
                    ]
                },
                {
                    "command": [
                        "if_tac in H.",
                        "VernacExtend",
                        "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst i; inv H.",
                        "VernacExtend",
                        "a594e4ec76a68653058e00420e9eccb03b62ac36"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IHIH; auto.",
                        "VernacExtend",
                        "fb42a383285aca93e826aa5e76f16f61fcc3874d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0.",
                        "VernacExtend",
                        "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
                    ]
                },
                {
                    "command": [
                        "destruct (cenv ! id) as [co |] eqn:?H; [| inv H].",
                        "VernacExtend",
                        "220ad83590e0701e4b8b5b084018745ef8840206"
                    ]
                },
                {
                    "command": [
                        "destruct (co_su co) eqn:?H; inv H.",
                        "VernacExtend",
                        "5f97baebada45e7191ade3e95985291df9477ec5"
                    ]
                },
                {
                    "command": [
                        "pose proof proj1 (HA_ENV_COMPL id) (ex_intro _ co H1) as [ha ?].",
                        "VernacExtend",
                        "0e1c7f4fa0bb28bae88a2af9f6b6040414f399f7"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "pose proof HA_ENV_CONS _ _ _ H1 H.",
                        "VernacExtend",
                        "865e01523bd83145cfcf93d6f8ab250b739f22cc"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H0.",
                        "VernacExtend",
                        "dbae769fea2529c982ec8b4da339407464bc3cb4"
                    ]
                },
                {
                    "command": [
                        "pose proof CENV_COSU _ _ H1.",
                        "VernacExtend",
                        "2d13e4dde865b5be66dc3bcff9d26456fc62103c"
                    ]
                },
                {
                    "command": [
                        "eapply align_compatible_rec_Tunion; eauto.",
                        "VernacExtend",
                        "78b3cb85c82cd0bbee098a7fcb41e2561ce60f0f"
                    ]
                },
                {
                    "command": [
                        "clear H H1 H2 H3 ha.",
                        "VernacExtend",
                        "a40159847afb0e83fb15fdc91ca06ce5e7b87972"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction IH as [| [i t] ?].",
                        "VernacExtend",
                        "54df72f5392b07cce77d62ebcaa84788403603c3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0, H4.",
                        "VernacExtend",
                        "859a8f61cca68737ce46ab12d10cd9d743419765"
                    ]
                },
                {
                    "command": [
                        "autorewrite with align in H0, H4.",
                        "VernacExtend",
                        "393c6dac49d6e9c837694092f40763cc0b3b7b28"
                    ]
                },
                {
                    "command": [
                        "destruct H0, H4.",
                        "VernacExtend",
                        "ffd6125f9b978233d9816a13201fa620ca00b56d"
                    ]
                },
                {
                    "command": [
                        "if_tac in H.",
                        "VernacExtend",
                        "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst i; inv H.",
                        "VernacExtend",
                        "a594e4ec76a68653058e00420e9eccb03b62ac36"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IHIH; auto.",
                        "VernacExtend",
                        "fb42a383285aca93e826aa5e76f16f61fcc3874d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "legal_alignas_env_consistency",
            "line_nb": 453,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof @composite_reorder_consistent bool cenv (fun t => (hardware_alignof ha_env t <=? alignof cenv t) && match access_mode t with | By_value _ => true | _ => false end) (fun la t n a => (hardware_alignof ha_env (Tarray t n a) <=? alignof cenv (Tarray t n a)) && ((sizeof cenv t mod alignof cenv t =? 0) && la)) (fun la id a => (hardware_alignof ha_env (Tstruct id a) <=? alignof cenv (Tstruct id a)) && la) (fun la id a => (hardware_alignof ha_env (Tunion id a) <=? alignof cenv (Tunion id a)) && la) (fun _ => fix fm (l: list (ident * type * bool)): bool := match l with | nil => true | (_, _, la) :: l' => la && (fm l') end) H as HH.",
                        "VernacExtend",
                        "a0d8521dfcd2442936ba2336dd32638652bf7eab"
                    ]
                },
                {
                    "command": [
                        "hnf in HH.",
                        "VernacExtend",
                        "ec87d32c3120e3baadd932e5ade957aaf0068642"
                    ]
                },
                {
                    "command": [
                        "rewrite aux2 in HH.",
                        "VernacExtend",
                        "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "specialize (HH _ _ la H0 H1).",
                        "VernacExtend",
                        "dec471fcf25e8f65428460b9c1c235ae860cafe3"
                    ]
                },
                {
                    "command": [
                        "rewrite HH, aux1; auto.",
                        "VernacExtend",
                        "82f8059a79bb087f20dd1dc98c6985680ad1e13f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "legal_alignas_env_completeness",
            "line_nb": 462,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof @composite_reorder_complete bool cenv (fun t => (hardware_alignof ha_env t <=? alignof cenv t) && match access_mode t with | By_value _ => true | _ => false end) (fun la t n a => (hardware_alignof ha_env (Tarray t n a) <=? alignof cenv (Tarray t n a)) && ((sizeof cenv t mod alignof cenv t =? 0) && la)) (fun la id a => (hardware_alignof ha_env (Tstruct id a) <=? alignof cenv (Tstruct id a)) && la) (fun la id a => (hardware_alignof ha_env (Tunion id a) <=? alignof cenv (Tunion id a)) && la) (fun _ => fix fm (l: list (ident * type * bool)): bool := match l with | nil => true | (_, _, la) :: l' => la && (fm l') end) as HH.",
                        "VernacExtend",
                        "c457006174ea3f5bfe9c5f68fd16674187ef7007"
                    ]
                },
                {
                    "command": [
                        "hnf in HH.",
                        "VernacExtend",
                        "ec87d32c3120e3baadd932e5ade957aaf0068642"
                    ]
                },
                {
                    "command": [
                        "rewrite aux2 in HH.",
                        "VernacExtend",
                        "5f056f570f919a1af88c3b30bfba217ed5ad56b3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "legal_alignas_type_divide",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (hardware_alignof ha_env t <=? alignof cenv t = true).",
                        "VernacExtend",
                        "9b4766bb4317f3bac2e5a22efa9aa1374c71cfbe"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct t; simpl in H |- *; solve [inv H | rewrite andb_true_iff in H; tauto].",
                        "VernacExtend",
                        "d0bf65e148123afce29c36b03efd2144a92e15b3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "autorewrite with align in H0.",
                        "VernacExtend",
                        "acef96ea6d09e5a6c468b977240855ac1776cda4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "by_value_sound",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold is_aligned, is_aligned_aux, legal_alignas_type, hardware_alignof in H.",
                        "VernacExtend",
                        "51d43fd132e07a8d86df7f3d7f55271a789da342"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [ch ?].",
                        "VernacExtend",
                        "4c97ae300f82b137da0c2c9dd0dbfc5638a8ca97"
                    ]
                },
                {
                    "command": [
                        "assert ((align_chunk ch <=? alignof cenv t) && true && (ofs mod align_chunk ch =? 0) = true) by (destruct t; try solve [inversion H0]; rewrite H0 in H; auto); clear H.",
                        "VernacExtend",
                        "5047bee6f33d13d2a9c5e93e58bccb96b7ed1b6d"
                    ]
                },
                {
                    "command": [
                        "autorewrite with align in H1.",
                        "VernacExtend",
                        "71cbb36bcb014871e0368416b2fcd40326780871"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [_ ?].",
                        "VernacExtend",
                        "7e68e8c2df0ca89c3c9a863d0f69060ddd22a3d3"
                    ]
                },
                {
                    "command": [
                        "eapply align_compatible_rec_by_value; eauto.",
                        "VernacExtend",
                        "f4db0e75a0fe01e6bbc90c62515d385fb98b4f71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}