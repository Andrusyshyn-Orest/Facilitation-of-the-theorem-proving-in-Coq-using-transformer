{
    "filename": "veric/expr_lemmas3.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Coq.Reals.Rdefinitions.",
            "VernacRequire",
            "d007c19f148948ca0b96336d514068b6c1bd639f"
        ],
        [
            "Require Import VST.msl.msl_standard.",
            "VernacRequire",
            "bbb3b33b9509ab47eb7418bd6127eafa914382b1"
        ],
        [
            "Require Import VST.veric.Clight_base.",
            "VernacRequire",
            "03391ebcbe352738cbe4d19626ab439bfac7c2e7"
        ],
        [
            "Require Import VST.veric.compcert_rmaps.",
            "VernacRequire",
            "c684a380737921a2e41654d70bb2fe8e448426cf"
        ],
        [
            "Require Import VST.veric.Clight_lemmas.",
            "VernacRequire",
            "02532b9c71acd440dec2f77aca2af2a0760847e8"
        ],
        [
            "Require Import VST.veric.mpred.",
            "VernacRequire",
            "11652084584e46804583cf99fdbf0fa76aa9fd7a"
        ],
        [
            "Require Import VST.veric.tycontext.",
            "VernacRequire",
            "f8951535af03e9380f7d0a99afae06d1059d4422"
        ],
        [
            "Require Import VST.veric.expr2.",
            "VernacRequire",
            "bf07dfc9a4517a977ef232bb1ba25ac9aaf5c2d9"
        ],
        [
            "Require Export VST.veric.environ_lemmas.",
            "VernacRequire",
            "1803e55e39fc3c24ac8f7f7560b184579e10d282"
        ],
        [
            "Require Import VST.veric.binop_lemmas2.",
            "VernacRequire",
            "288f5ed828eb94a9522c1ac63730306cbf5ac44a"
        ],
        [
            "Require Import VST.veric.expr_lemmas2.",
            "VernacRequire",
            "7669c391f5a6237aea1b7f2f0ee2b20c39894cc6"
        ],
        [
            "Import Cop.",
            "VernacImport",
            "866b3177cf263601a61546355b941920e6b447ef"
        ],
        [
            "Import Cop2.",
            "VernacImport",
            "c70584a5b2793ae02e0a0d71da134f2614ccd9f1"
        ],
        [
            "Import Clight_Cop2.",
            "VernacImport",
            "5c45775214185ddd4d18e1a2d7b45449a34884fc"
        ],
        [
            "Lemma type_eq_true : forall a b, proj_sumbool (type_eq a b) =true -> a = b.",
            "VernacStartTheoremProof",
            "472e45fc0da2e8ced15428850d76050d8e92a050"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (type_eq a b).",
            "VernacExtend",
            "a680b57be213a7e77d8585452ee16ea08adfd9bb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition empty_genv cenv := Build_genv (Globalenvs.Genv.empty_genv fundef type nil) cenv.",
            "VernacDefinition",
            "2a512329d1688fcdfaedcd847fc640aab0e50841"
        ],
        [
            "Definition empty_tenv := PTree.empty val.",
            "VernacDefinition",
            "902ed01adb4f908627ffa49035accf8bbaa6519c"
        ],
        [
            "Definition empty_environ cenv : environ := mkEnviron (filter_genv (empty_genv cenv)) (Map.empty _) (Map.empty _).",
            "VernacDefinition",
            "38adbaf0d5d15cf7da8c286b839bb4ce6d1459e5"
        ],
        [
            "Lemma Zle_bool_rev: forall x y, Zle_bool x y = Zge_bool y x.",
            "VernacStartTheoremProof",
            "367be846b0c57b0baae44de73b1ddf7da8db2278"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Zle_cases x y).",
            "VernacExtend",
            "f39db35bd5e1108ded81cc3fef35b4725a524cfe"
        ],
        [
            "pose proof (Zge_cases y x).",
            "VernacExtend",
            "2af5f00253e82520a2c4dc11be49591a559a134e"
        ],
        [
            "destruct (Zle_bool x y); destruct (Zge_bool y x); auto; elimtype False; omega.",
            "VernacExtend",
            "74be0744f332fa8318242bb80d0f9307dabeda49"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Transparent Float.to_int.",
            "VernacSetOpacity",
            "c22efbd21c37282ce4fd84a55a2bff5ce1b08826"
        ],
        [
            "Transparent Float.to_intu.",
            "VernacSetOpacity",
            "3de655f6a25c0cedda8b812cdcae5e26b890b06d"
        ],
        [
            "Transparent Float32.to_int.",
            "VernacSetOpacity",
            "0f48ea64c3267f97304732fae0a5398889866e2e"
        ],
        [
            "Transparent Float32.to_intu.",
            "VernacSetOpacity",
            "523e07a0e99a8ffa734ca41cb113692f7623ed2f"
        ],
        [
            "Lemma isCastR: forall {CS: compspecs} tfrom tto a, denote_tc_assert (isCastResultType tfrom tto a) = denote_tc_assert match classify_cast tfrom tto with | Cop.cast_case_default => tc_FF (invalid_cast tfrom tto) | Cop.cast_case_f2i _ Signed => tc_andp (tc_Zge a Int.min_signed ) (tc_Zle a Int.max_signed) | Cop.cast_case_s2i _ Signed => tc_andp (tc_Zge a Int.min_signed ) (tc_Zle a Int.max_signed) | Cop.cast_case_f2i _ Unsigned => tc_andp (tc_Zge a 0) (tc_Zle a Int.max_unsigned) | Cop.cast_case_s2i _ Unsigned => tc_andp (tc_Zge a 0) (tc_Zle a Int.max_unsigned) | Cop.cast_case_i2l _ => tc_andp (tc_bool (is_int_type tfrom) (invalid_cast_result tfrom tto)) (if is_pointer_type tto then tc_iszero a else tc_TT) | Cop.cast_case_l2i _ _ => tc_andp (tc_bool (is_long_type tfrom) (invalid_cast_result tfrom tto)) (if is_pointer_type tto then tc_iszero a else tc_TT) | Cop.cast_case_pointer => if eqb_type tfrom tto then tc_TT else if orb (andb (is_pointer_type tto) (is_pointer_type tfrom)) (if Archi.ptr64 then (andb (is_long_type tto) (is_long_type tfrom)) else (andb (is_int_type tto) (is_int_type tfrom))) then tc_TT else if (andb (eqb_type tto int_or_ptr_type) ((if Archi.ptr64 then is_long_type else is_int_type) tfrom)) then tc_TT else if (andb (eqb_type tto int_or_ptr_type) (is_pointer_type tfrom)) then tc_TT else if (andb (eqb_type tfrom int_or_ptr_type) (is_pointer_type tto)) then tc_isptr a else if (andb (eqb_type tfrom int_or_ptr_type) ((if Archi.ptr64 then is_long_type else is_int_type) tto)) then (if Archi.ptr64 then tc_islong else tc_isint) a else tc_iszero a | Cop.cast_case_l2l => tc_bool (is_long_type tfrom && is_long_type tto) (invalid_cast_result tto tto) | Cop.cast_case_f2bool => tc_bool (is_float_type tfrom) (invalid_cast_result tfrom tto) | Cop.cast_case_s2bool => tc_bool (is_single_type tfrom) (invalid_cast_result tfrom tto) | Cop.cast_case_l2bool => if is_pointer_type tfrom then tc_test_eq a (Econst_long Int64.zero (Tlong Unsigned noattr)) else tc_TT | Cop.cast_case_i2bool => if is_pointer_type tfrom then tc_test_eq a (Econst_int Int.zero (Tint I32 Unsigned noattr)) else tc_TT | Cop.cast_case_void => tc_noproof | _ => match tto with | Tint _ _ _ => tc_bool (is_int_type tfrom) (invalid_cast_result tto tto) | Tfloat F64 _ => tc_bool (is_anyfloat_type tfrom) (invalid_cast_result tto tto) | Tfloat F32 _ => tc_bool (is_anyfloat_type tfrom) (invalid_cast_result tto tto) | _ => tc_FF (invalid_cast tfrom tto) end end.",
            "VernacStartTheoremProof",
            "80e920b5c2ee4e259dc114750036e754d439e21a"
        ],
        [
            "intros; extensionality rho.",
            "VernacExtend",
            "876c9ddd2c67098fb113bf57fc855e1053ecc44d"
        ],
        [
            "unfold isCastResultType.",
            "VernacExtend",
            "c3741fb092f118cbca53f26200472a8d705437f3"
        ],
        [
            "destruct (classify_cast tfrom tto) eqn:?; auto.",
            "VernacExtend",
            "ca842a3e2d7036bd0b4e0ce63283e593f73c966b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z2R_pow_0_lt: forall e, 0 <= e -> Rdefinitions.Rlt 0 (Fcore_Raux.Z2R (2 ^ e)).",
            "VernacStartTheoremProof",
            "098734e08cf73a93c15464b4126bc7fa498bf898"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (Z2Nat.id e) by auto.",
            "VernacExtend",
            "4294491901db995240b2f7a12c0376ab95d0f85e"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction (Z.to_nat e).",
            "VernacExtend",
            "874f1f40b72ddda940d0c1cd6cdc977e58ffa6be"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply RIneq.Rlt_0_1.",
            "VernacExtend",
            "b04bdda17a9f4b3f8120c4dfd753651a257fb3ad"
        ],
        [
            "rewrite inj_S.",
            "VernacExtend",
            "d9f39a95338187eacc0449352f36ed1a3018cf13"
        ],
        [
            "rewrite Z.pow_succ_r by omega.",
            "VernacExtend",
            "43fd09e49405e97dff31d240914bc997a81a0675"
        ],
        [
            "rewrite Fcore_Raux.Z2R_mult.",
            "VernacExtend",
            "7794a339e313a04751963920cf97966260b3c270"
        ],
        [
            "apply RIneq.Rmult_lt_0_compat; auto.",
            "VernacExtend",
            "8c8ada7f91d146223e3362c8368f130b48b87943"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "apply DiscrR.Rlt_R0_R2.",
            "VernacExtend",
            "3f96aa0f31a7e36df4cbfdfdd47dedadf7ea6f53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition general_offloat (prec emax : Z) (f: Fappli_IEEE.binary_float prec emax) : option Z := match f with | Fappli_IEEE.B754_zero _ => Some 0 | Fappli_IEEE.B754_infinity _ => None | Fappli_IEEE.B754_nan _ _ => None | Fappli_IEEE.B754_finite s m 0 _ => Some (Fcore_Zaux.cond_Zopp s (Z.pos m)) | Fappli_IEEE.B754_finite s m (Z.pos e) _ => Some (Fcore_Zaux.cond_Zopp s (Z.pos m) * Z.pow_pos 2 e) | Fappli_IEEE.B754_finite s m (Z.neg e) _ => Some (Fcore_Zaux.cond_Zopp s (Z.pos m / Z.pow_pos 2 e)) end.",
            "VernacDefinition",
            "d3d375c2dc97a6888e8a8936eddda8a1f60508ff"
        ],
        [
            "Definition general_float_to_int (prec emax : Z) (lo hi: Z) (f: Fappli_IEEE.binary_float prec emax) : option int := option_map Int.repr (Fappli_IEEE_extra.ZofB_range prec emax f lo hi).",
            "VernacDefinition",
            "fe6863dd39dffc74485193ee8825eed7f94d058a"
        ],
        [
            "Goal Zoffloat = general_offloat 53 1024.",
            "VernacDefinition",
            "b97b05e764cc737041d1ad3cc0f2899e3b2d439a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal Zofsingle = general_offloat 24 128.",
            "VernacDefinition",
            "8c8779eebea2ba6d182452ec24a32211700719cd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal Float.to_int = general_float_to_int 53 1024 Int.min_signed Int.max_signed.",
            "VernacDefinition",
            "f3480f338eaa2e79cf33698f42ef32f494010c30"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal Float.to_intu = general_float_to_int 53 1024 0 Int.max_unsigned.",
            "VernacDefinition",
            "dbeb6fbbbf462d982749c36120bec93879183366"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal Float32.to_int = general_float_to_int 24 128 Int.min_signed Int.max_signed.",
            "VernacDefinition",
            "16c0ec395ccac2f8de02ab78519d943b1fcbc5ec"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal Float32.to_intu = general_float_to_int 24 128 0 Int.max_unsigned.",
            "VernacDefinition",
            "8fcbd6da4559e3541a76c512614c58a779da79da"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma general_float_to_int_ok: forall prec emax lo hi f z, general_offloat prec emax f = Some z -> lo <= z <= hi -> general_float_to_int prec emax lo hi f = Some (Int.repr z).",
            "VernacStartTheoremProof",
            "a85a9a2a7e10a1055b76f5e8d7be909308ff24e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold general_offloat in H.",
            "VernacExtend",
            "655edd4d19a77f9b163258510159ce44cb2e07c7"
        ],
        [
            "unfold general_float_to_int.",
            "VernacExtend",
            "13309ba38621d4ffe0d68d6d6c2dc7a04b4ecd23"
        ],
        [
            "destruct H0 as [H0 H1].",
            "VernacExtend",
            "65c356a8439bd75dc9227d122f71692001387e19"
        ],
        [
            "apply Z.leb_le in H0; apply Z.leb_le in H1.",
            "VernacExtend",
            "0f9741f05c76fe51f04d0f753e8886d4e250eb62"
        ],
        [
            "destruct f; inv H.",
            "VernacExtend",
            "87e717c5e6496194d0abda6e464e06234c8ec9bc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Fappli_IEEE_extra.ZofB_range_correct.",
            "VernacExtend",
            "aacd18b6c813564d59da1224c2f767ce52639847"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Fcore_Raux.Ztrunc.",
            "VernacExtend",
            "ac5c43d083a8463ea9877008107d956bec50f6c1"
        ],
        [
            "rewrite Fcore_Raux.Rlt_bool_false by apply RIneq.Rle_refl.",
            "VernacExtend",
            "b6e2d2ee7b00846d21e88c4a102eb7766f8c684f"
        ],
        [
            "replace (Fcore_Raux.Zfloor 0) with 0.",
            "VernacExtend",
            "1d1f43053092112d6d93c9c774ee34e78c75e546"
        ],
        [
            "rewrite H0,H1.",
            "VernacExtend",
            "9b9dcdf1e4ddc69a8207e12d5be14eb0c18c4f05"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold Fcore_Raux.Zfloor.",
            "VernacExtend",
            "b4a6e9c499ec2db37ee1444aef61430775f60d45"
        ],
        [
            "replace (Rdefinitions.up 0) with 1; [reflexivity |].",
            "VernacExtend",
            "b54d06978376aa3c112671d803b58081f56ced47"
        ],
        [
            "apply R_Ifp.tech_up; simpl.",
            "VernacExtend",
            "0d96cb72edf64da9991a0522c7d5791b27995231"
        ],
        [
            "apply RIneq.Rlt_0_1.",
            "VernacExtend",
            "b04bdda17a9f4b3f8120c4dfd753651a257fb3ad"
        ],
        [
            "rewrite Raxioms.Rplus_comm.",
            "VernacExtend",
            "8aa7da8eaf5c239cd4fd068e6c371c89e66152b3"
        ],
        [
            "rewrite RIneq.Rplus_0_r.",
            "VernacExtend",
            "0bb83d481f0ab52ce5451064444a74a3b101a23e"
        ],
        [
            "apply RIneq.Rle_refl.",
            "VernacExtend",
            "62152a398d6b6d5e4bd3da32917f092f7659233b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (zle 0 e).",
            "VernacExtend",
            "b31665be8dcbd00a5c1d3d5178a3d1496a02cde2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (z = Fcore_Zaux.cond_Zopp b (Z.pos m) * Z.pow 2 e).",
            "VernacExtend",
            "4828731435ff3c99aebe1d4b084f886e7501c367"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct e; inv H3.",
            "VernacExtend",
            "730e21169b4a88b8583afd41b16e0559de91aa97"
        ],
        [
            "rewrite Z.pow_0_r.",
            "VernacExtend",
            "dd28d7f1893d58fd7f2f9194474a8b3068ade983"
        ],
        [
            "rewrite Z.mul_1_r.",
            "VernacExtend",
            "80f92f5dcc09db388a2087f0ef3ff1d16ecdfdff"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Zpower_pos_nat.",
            "VernacExtend",
            "5a2378a4e96e76124bc6c809e1a60a907b7a39a1"
        ],
        [
            "rewrite Zpower_nat_Z.",
            "VernacExtend",
            "dfacf0a88a166382ebf324a1fb9aed4152213406"
        ],
        [
            "rewrite positive_nat_Z; auto.",
            "VernacExtend",
            "c218b119254251ff9ccc39a3a1855d39e0dc5e10"
        ],
        [
            "pose proof (Pos2Z.neg_is_neg p); omega.",
            "VernacExtend",
            "9ec51b511166c439429822d789cb71bd483c1d8a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "subst z.",
            "VernacExtend",
            "164f309c003709d10ea3bbb7324dbfe980b258de"
        ],
        [
            "rewrite Fappli_IEEE_extra.ZofB_range_correct.",
            "VernacExtend",
            "aacd18b6c813564d59da1224c2f767ce52639847"
        ],
        [
            "replace (Fcore_Raux.Ztrunc (Fappli_IEEE.B2R prec emax (Fappli_IEEE.B754_finite prec emax b m e e0))) with (Fcore_Zaux.cond_Zopp b (Z.pos m) * 2^e).",
            "VernacExtend",
            "52e63c8feea8cac801d3bf24f367191f86354d5e"
        ],
        [
            "rewrite H0,H1; clear H0 H1.",
            "VernacExtend",
            "6fda8f85346c48875513a088d1d3f88c7d595774"
        ],
        [
            "rewrite (Fappli_IEEE_extra.is_finite_strict_finite prec emax).",
            "VernacExtend",
            "e446807a384bef8984a60e42537c04ae5f9aafc5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold Fcore_Zaux.cond_Zopp.",
            "VernacExtend",
            "320a3067668e516a1209f031926c1be199508973"
        ],
        [
            "unfold Fcore_Raux.Ztrunc.",
            "VernacExtend",
            "ac5c43d083a8463ea9877008107d956bec50f6c1"
        ],
        [
            "destruct b; [rewrite Fcore_Raux.Rlt_bool_true | rewrite Fcore_Raux.Rlt_bool_false].",
            "VernacExtend",
            "0473fc9a9bedf0095713c25a48b695983fb59f8b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold Fappli_IEEE.B2R.",
            "VernacExtend",
            "707fe4c6b7c2c27acb8fc1ed7ff5e08df2959e5d"
        ],
        [
            "unfold Fcore_Zaux.cond_Zopp.",
            "VernacExtend",
            "320a3067668e516a1209f031926c1be199508973"
        ],
        [
            "unfold Fcore_Raux.Zceil.",
            "VernacExtend",
            "6037f59a1b1dcacb03af37841b196a440eeacbf2"
        ],
        [
            "unfold Fcore_Raux.Zfloor.",
            "VernacExtend",
            "b4a6e9c499ec2db37ee1444aef61430775f60d45"
        ],
        [
            "symmetry; apply Fcore_Raux.Zceil_imp; split.",
            "VernacExtend",
            "500bbbc0ba987d065be9b16266b1564e5c137a5d"
        ],
        [
            "eapply RIneq.Rlt_le_trans.",
            "VernacExtend",
            "20275a0e63e0e40c836aff0b7291b07c54bcc109"
        ],
        [
            "apply Fcore_Raux.Z2R_lt.",
            "VernacExtend",
            "0d574123e7d196c7307e28391f4d4626e2192eed"
        ],
        [
            "instantiate (1 := - Z.pos m * 2 ^ e).",
            "VernacExtend",
            "ec9bd7d6a45f1179602a2e1ea6b2eb6df2b19560"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Fcore_defs.F2R.",
            "VernacExtend",
            "0d16b2bc5c55abf09a7257f2bc21129159041f3e"
        ],
        [
            "rewrite Fcore_Raux.Z2R_mult.",
            "VernacExtend",
            "7794a339e313a04751963920cf97966260b3c270"
        ],
        [
            "match goal with |- _ ?A ?B => replace B with A; [apply RIneq.Rle_refl | ] end.",
            "VernacExtend",
            "4b674c193637f1fa336de400a24c6361426491eb"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- Fcore_Raux.Z2R_Zpower by auto.",
            "VernacExtend",
            "6834896780bf4898d09c12e213a170ec6a3edf30"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "match goal with |- _ ?A ?B => replace B with A; [apply RIneq.Rle_refl | ] end.",
            "VernacExtend",
            "4b674c193637f1fa336de400a24c6361426491eb"
        ],
        [
            "unfold Fcore_defs.F2R.",
            "VernacExtend",
            "0d16b2bc5c55abf09a7257f2bc21129159041f3e"
        ],
        [
            "rewrite Fcore_Raux.Z2R_mult.",
            "VernacExtend",
            "7794a339e313a04751963920cf97966260b3c270"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- Fcore_Raux.Z2R_Zpower by auto.",
            "VernacExtend",
            "6834896780bf4898d09c12e213a170ec6a3edf30"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Fcore_defs.F2R.",
            "VernacExtend",
            "0d16b2bc5c55abf09a7257f2bc21129159041f3e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite RIneq.Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "9fdbaebb5048f16cb3b9218290839344608e341d"
        ],
        [
            "apply RIneq.Ropp_lt_gt_0_contravar.",
            "VernacExtend",
            "46f352cc082c7f17919780e770e8e8c93e7fab16"
        ],
        [
            "unfold Rdefinitions.Rgt.",
            "VernacExtend",
            "5af95bc1d2001951d8b881992ef65112f01a2bca"
        ],
        [
            "apply RIneq.Rmult_lt_0_compat.",
            "VernacExtend",
            "206a0c3888288ff391e6a5659b8cf4c0f14d0353"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "rewrite Fcore_Raux.P2R_INR.",
            "VernacExtend",
            "884ac549df626e7245bef40b30d980b22f8237ce"
        ],
        [
            "apply RIneq.lt_0_INR.",
            "VernacExtend",
            "6a824012ab133b780515b973febe8fe9c2d7562e"
        ],
        [
            "apply Pos2Nat.is_pos.",
            "VernacExtend",
            "f669a5b6973716d27ec1c2d328fd65a5dac53b50"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- Fcore_Raux.Z2R_Zpower by auto.",
            "VernacExtend",
            "6834896780bf4898d09c12e213a170ec6a3edf30"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Z2R_pow_0_lt; auto.",
            "VernacExtend",
            "7f2cb0b8db091863fec6195e13eea97a81e2bb39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold Fappli_IEEE.B2R.",
            "VernacExtend",
            "707fe4c6b7c2c27acb8fc1ed7ff5e08df2959e5d"
        ],
        [
            "unfold Fcore_Zaux.cond_Zopp.",
            "VernacExtend",
            "320a3067668e516a1209f031926c1be199508973"
        ],
        [
            "symmetry; apply Fcore_Raux.Zfloor_imp; split.",
            "VernacExtend",
            "37a5ae00ec9db00404b6ea8f47ba5af45be57aca"
        ],
        [
            "match goal with |- _ ?A ?B => replace B with A; [apply RIneq.Rle_refl | ] end.",
            "VernacExtend",
            "4b674c193637f1fa336de400a24c6361426491eb"
        ],
        [
            "unfold Fcore_defs.F2R.",
            "VernacExtend",
            "0d16b2bc5c55abf09a7257f2bc21129159041f3e"
        ],
        [
            "rewrite Fcore_Raux.Z2R_mult.",
            "VernacExtend",
            "7794a339e313a04751963920cf97966260b3c270"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- Fcore_Raux.Z2R_Zpower by auto.",
            "VernacExtend",
            "6834896780bf4898d09c12e213a170ec6a3edf30"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Fcore_defs.F2R.",
            "VernacExtend",
            "0d16b2bc5c55abf09a7257f2bc21129159041f3e"
        ],
        [
            "eapply RIneq.Rle_lt_trans.",
            "VernacExtend",
            "1392f9f9e2e54e029d60486e4471fbb23d0da03e"
        ],
        [
            "instantiate (1:= (Fcore_Raux.Z2R (Z.pos m * 2 ^ e ))).",
            "VernacExtend",
            "f55ec146ea63298ca5527615674b2a3cdc638b22"
        ],
        [
            "rewrite Fcore_Raux.Z2R_mult.",
            "VernacExtend",
            "7794a339e313a04751963920cf97966260b3c270"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite !Fcore_Raux.P2R_INR.",
            "VernacExtend",
            "da55f28e0d1cc69ee5c331106892ce8e5145370e"
        ],
        [
            "rewrite <- Fcore_Raux.Z2R_Zpower by auto.",
            "VernacExtend",
            "6834896780bf4898d09c12e213a170ec6a3edf30"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "match goal with |- _ ?A ?B => replace B with A; [apply RIneq.Rle_refl | ] end.",
            "VernacExtend",
            "4b674c193637f1fa336de400a24c6361426491eb"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Fcore_Raux.Z2R_plus.",
            "VernacExtend",
            "2dd25703224fe5d0a0813e0bd147c9d5b6a8b7f0"
        ],
        [
            "rewrite Raxioms.Rplus_comm.",
            "VernacExtend",
            "8aa7da8eaf5c239cd4fd068e6c371c89e66152b3"
        ],
        [
            "rewrite <- RIneq.Rplus_0_r at 1.",
            "VernacExtend",
            "35dbf6b5a3827816c2cb7ee7cdc3924a9a03ed96"
        ],
        [
            "rewrite Raxioms.Rplus_comm at 1.",
            "VernacExtend",
            "e04fae8dad62916d23dcc15d323c60ec8c24e742"
        ],
        [
            "apply RIneq.Rplus_lt_le_compat.",
            "VernacExtend",
            "86a585b7309138756f34f2595e126389313eca33"
        ],
        [
            "apply RIneq.Rlt_0_1.",
            "VernacExtend",
            "b04bdda17a9f4b3f8120c4dfd753651a257fb3ad"
        ],
        [
            "apply RIneq.Req_le.",
            "VernacExtend",
            "c763e9b2c68a861f9d0738983fdd8fe58e519747"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold Fappli_IEEE.B2R.",
            "VernacExtend",
            "707fe4c6b7c2c27acb8fc1ed7ff5e08df2959e5d"
        ],
        [
            "unfold Fcore_Zaux.cond_Zopp.",
            "VernacExtend",
            "320a3067668e516a1209f031926c1be199508973"
        ],
        [
            "unfold Fcore_defs.F2R.",
            "VernacExtend",
            "0d16b2bc5c55abf09a7257f2bc21129159041f3e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply RIneq.Rmult_le_pos.",
            "VernacExtend",
            "c30f716a84db38fbc1be6ae8610788dae4e8058c"
        ],
        [
            "rewrite Fcore_Raux.P2R_INR.",
            "VernacExtend",
            "884ac549df626e7245bef40b30d980b22f8237ce"
        ],
        [
            "apply RIneq.pos_INR.",
            "VernacExtend",
            "10a146fa3b5bd61c2e60803e7e93261e8221c8f8"
        ],
        [
            "rewrite <- Fcore_Raux.Z2R_Zpower by auto.",
            "VernacExtend",
            "6834896780bf4898d09c12e213a170ec6a3edf30"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply RIneq.Rlt_le.",
            "VernacExtend",
            "e2aaf6097c2bccae40cddd3c151fc24dd203cfe5"
        ],
        [
            "apply Z2R_pow_0_lt; auto.",
            "VernacExtend",
            "7f2cb0b8db091863fec6195e13eea97a81e2bb39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (HH: (Fcore_Raux.Z2R (2 ^ (- e))) <> Rdefinitions.R0).",
            "VernacExtend",
            "2c613c8e36b1e7be7163b2a4b6b616bfd1e1ba78"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Rdefinitions.R0 <> Fcore_Raux.Z2R (2 ^ (- e))); auto.",
            "VernacExtend",
            "b02230752ffbf6d8ca1db1819add9a7b9aa53bfb"
        ],
        [
            "apply RIneq.Rlt_not_eq.",
            "VernacExtend",
            "b894e9445c079af6443cd7cad9c2d9af0c695a12"
        ],
        [
            "apply (Z2R_pow_0_lt (-e)).",
            "VernacExtend",
            "1c6fbdb30c36012be4d7e57c546ca25871be48fa"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (z = Fcore_Zaux.cond_Zopp b (Z.pos m / Z.pow 2 (- e))).",
            "VernacExtend",
            "dfd097096a618644e468b05d66eeec9aecbf824a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct e; inv H3.",
            "VernacExtend",
            "730e21169b4a88b8583afd41b16e0559de91aa97"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "pose proof (Zgt_pos_0 p); omega.",
            "VernacExtend",
            "79b3f867c79ee73a4c2844d9eb75ad931512939c"
        ],
        [
            "clear g.",
            "VernacExtend",
            "f8f7e6f7ac81c1e88616e5abbc3cf6298814b510"
        ],
        [
            "rewrite Zpower_pos_nat.",
            "VernacExtend",
            "5a2378a4e96e76124bc6c809e1a60a907b7a39a1"
        ],
        [
            "rewrite Zpower_nat_Z.",
            "VernacExtend",
            "dfacf0a88a166382ebf324a1fb9aed4152213406"
        ],
        [
            "rewrite positive_nat_Z; auto.",
            "VernacExtend",
            "c218b119254251ff9ccc39a3a1855d39e0dc5e10"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "subst z.",
            "VernacExtend",
            "164f309c003709d10ea3bbb7324dbfe980b258de"
        ],
        [
            "rewrite Fappli_IEEE_extra.ZofB_range_correct.",
            "VernacExtend",
            "aacd18b6c813564d59da1224c2f767ce52639847"
        ],
        [
            "replace (Fcore_Raux.Ztrunc (Fappli_IEEE.B2R prec emax (Fappli_IEEE.B754_finite prec emax b m e e0))) with (Fcore_Zaux.cond_Zopp b (Z.pos m / 2^(-e))).",
            "VernacExtend",
            "0939811d8493ead559e9e60ec1c5d326895e629a"
        ],
        [
            "rewrite H0,H1; clear H0 H1.",
            "VernacExtend",
            "6fda8f85346c48875513a088d1d3f88c7d595774"
        ],
        [
            "rewrite (Fappli_IEEE_extra.is_finite_strict_finite prec emax).",
            "VernacExtend",
            "e446807a384bef8984a60e42537c04ae5f9aafc5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold Fcore_Zaux.cond_Zopp.",
            "VernacExtend",
            "320a3067668e516a1209f031926c1be199508973"
        ],
        [
            "unfold Fcore_Raux.Ztrunc.",
            "VernacExtend",
            "ac5c43d083a8463ea9877008107d956bec50f6c1"
        ],
        [
            "destruct b; [rewrite Fcore_Raux.Rlt_bool_true | rewrite Fcore_Raux.Rlt_bool_false].",
            "VernacExtend",
            "0473fc9a9bedf0095713c25a48b695983fb59f8b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clear - g.",
            "VernacExtend",
            "bef6922e2756204d308b22054bfec66f5be471d9"
        ],
        [
            "unfold Fappli_IEEE.B2R.",
            "VernacExtend",
            "707fe4c6b7c2c27acb8fc1ed7ff5e08df2959e5d"
        ],
        [
            "unfold Fcore_Zaux.cond_Zopp.",
            "VernacExtend",
            "320a3067668e516a1209f031926c1be199508973"
        ],
        [
            "unfold Fcore_Raux.Zceil.",
            "VernacExtend",
            "6037f59a1b1dcacb03af37841b196a440eeacbf2"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Fcore_defs.F2R.",
            "VernacExtend",
            "0d16b2bc5c55abf09a7257f2bc21129159041f3e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite RIneq.Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "9fdbaebb5048f16cb3b9218290839344608e341d"
        ],
        [
            "rewrite RIneq.Ropp_involutive.",
            "VernacExtend",
            "db1e9cb05c3efd2cab2b73787525193dad7300f5"
        ],
        [
            "rewrite <- Fcore_Raux.Zfloor_div by (apply Z.pow_nonzero; omega).",
            "VernacExtend",
            "2d09282659d7b2976bf18d886c991c42eb7aefee"
        ],
        [
            "rewrite <- (Z.opp_involutive e) at 2.",
            "VernacExtend",
            "5ccc13d1604763dbd10ec578ed0fb276c82ef6d3"
        ],
        [
            "rewrite (Fcore_Raux.bpow_opp _ (-e)).",
            "VernacExtend",
            "3207e88616c1431cdee9672a57b9788246b842e6"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite <- Fcore_Raux.Z2R_Zpower by omega.",
            "VernacExtend",
            "e12f74defbe5f846c0eebb73d2e3dd00228d48ab"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Rdefinitions.Rdiv.",
            "VernacExtend",
            "67ff204e3834ddc9efa16111180f363dfffc7909"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Fcore_float_prop.F2R_lt_0_compat.",
            "VernacExtend",
            "dcc981903de7b34722d9a1325614568ac85947e6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "pose proof (Pos2Z.neg_is_neg m); omega.",
            "VernacExtend",
            "21f866300c87c1db6ad16840f5212085119c7a7f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Fcore_defs.F2R.",
            "VernacExtend",
            "0d16b2bc5c55abf09a7257f2bc21129159041f3e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- (Z.opp_involutive e) at 2.",
            "VernacExtend",
            "5ccc13d1604763dbd10ec578ed0fb276c82ef6d3"
        ],
        [
            "rewrite (Fcore_Raux.bpow_opp _ (-e)).",
            "VernacExtend",
            "3207e88616c1431cdee9672a57b9788246b842e6"
        ],
        [
            "rewrite <- Fcore_Raux.Z2R_Zpower by omega.",
            "VernacExtend",
            "e12f74defbe5f846c0eebb73d2e3dd00228d48ab"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- Fcore_Raux.Zfloor_div by (apply Z.pow_nonzero; omega).",
            "VernacExtend",
            "2d09282659d7b2976bf18d886c991c42eb7aefee"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Fcore_defs.F2R.",
            "VernacExtend",
            "0d16b2bc5c55abf09a7257f2bc21129159041f3e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- (Z.opp_involutive e).",
            "VernacExtend",
            "53d2c8b9578d89e1e20d9a819e91e93337023a2e"
        ],
        [
            "rewrite (Fcore_Raux.bpow_opp _ (-e)).",
            "VernacExtend",
            "3207e88616c1431cdee9672a57b9788246b842e6"
        ],
        [
            "rewrite <- Fcore_Raux.Z2R_Zpower by omega.",
            "VernacExtend",
            "e12f74defbe5f846c0eebb73d2e3dd00228d48ab"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply RIneq.Rmult_le_pos.",
            "VernacExtend",
            "c30f716a84db38fbc1be6ae8610788dae4e8058c"
        ],
        [
            "rewrite Fcore_Raux.P2R_INR.",
            "VernacExtend",
            "884ac549df626e7245bef40b30d980b22f8237ce"
        ],
        [
            "apply RIneq.pos_INR.",
            "VernacExtend",
            "10a146fa3b5bd61c2e60803e7e93261e8221c8f8"
        ],
        [
            "apply RIneq.Rlt_le.",
            "VernacExtend",
            "e2aaf6097c2bccae40cddd3c151fc24dd203cfe5"
        ],
        [
            "apply RIneq.Rinv_0_lt_compat.",
            "VernacExtend",
            "68089fcb291a288ee38e5cef744350fc813af5a9"
        ],
        [
            "apply Z2R_pow_0_lt; omega.",
            "VernacExtend",
            "606814b4dffc4b02b5adf11a6c285b630198c199"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma float_to_int_ok: forall f z, Zoffloat f = Some z -> Int.min_signed <= z <= Int.max_signed -> Float.to_int f = Some (Int.repr z).",
            "VernacStartTheoremProof",
            "1616521499cf0a92da7dd908fd0ef7c7c5b82af2"
        ],
        [
            "apply general_float_to_int_ok.",
            "VernacExtend",
            "c26c5a7eb8f59136fd820393f02a69fc70acb537"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma float_to_intu_ok: forall f z, Zoffloat f = Some z -> 0 <= z <= Int.max_unsigned -> Float.to_intu f = Some (Int.repr z).",
            "VernacStartTheoremProof",
            "4eee08fd2d9809d6ca4abd65f05e8682dc7d33a9"
        ],
        [
            "apply general_float_to_int_ok.",
            "VernacExtend",
            "c26c5a7eb8f59136fd820393f02a69fc70acb537"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma single_to_int_ok: forall f z, Zofsingle f = Some z -> Int.min_signed <= z <= Int.max_signed -> Float32.to_int f = Some (Int.repr z).",
            "VernacStartTheoremProof",
            "322324a418991a0d28b3702c005fe97b40c84712"
        ],
        [
            "apply general_float_to_int_ok.",
            "VernacExtend",
            "c26c5a7eb8f59136fd820393f02a69fc70acb537"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma single_to_intu_ok: forall f z, Zofsingle f = Some z -> 0 <= z <= Int.max_unsigned -> Float32.to_intu f = Some (Int.repr z).",
            "VernacStartTheoremProof",
            "58c267fb5e1a86df89658d3fd7c843f6fdd88461"
        ],
        [
            "apply general_float_to_int_ok.",
            "VernacExtend",
            "c26c5a7eb8f59136fd820393f02a69fc70acb537"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andb_zleb: forall i j k : Z, i <= j <= k -> (i <=? j) && (j <=? k) = true.",
            "VernacStartTheoremProof",
            "a74c85b30d663634dc1cdaea4902f5185fa9cb25"
        ],
        [
            "intros ? ? ? [? ?]; rewrite andb_true_iff; split; apply Z.leb_le; auto.",
            "VernacExtend",
            "d3e6963b8526e7de7d229fed51105a8d9ca898c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sign_ext_range': forall n x, 0 < n < Int.zwordsize -> - two_p (n - 1) <= Int.signed (Int.sign_ext n x) <= two_p (n - 1) -1.",
            "VernacStartTheoremProof",
            "4ab4bdbc619cb8c0f1ed9848384e2e7d12f9b1c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.sign_ext_range n x H).",
            "VernacExtend",
            "2693eecd84a9ccaad049d7d363a6c9645a9c6db0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zero_ext_range': forall n x, 0 <= n < Int.zwordsize -> 0 <= Int.unsigned (Int.zero_ext n x) <= two_p n - 1.",
            "VernacStartTheoremProof",
            "1c7addc19afcea75f34da4311faef7bf6ff7574a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.zero_ext_range n x H); omega.",
            "VernacExtend",
            "acda324e8281ce82582681573cea1a5bc738d510"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int64_eq_e: forall i, Int64.eq i Int64.zero = true -> i=Int64.zero.",
            "VernacStartTheoremProof",
            "64b586954355a1d183ba63a83f0c1553133446ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int64.eq_spec i Int64.zero).",
            "VernacExtend",
            "b3dc4348affea34bc0347c9511c363397279ed3d"
        ],
        [
            "rewrite H in H0; auto.",
            "VernacExtend",
            "d953e01ca15b58600315278be75264ee6e950070"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma long_int_zero_lem: forall i, Int64.eq (Int64.repr (Int64.unsigned i)) Int64.zero = true -> Int.repr (Int64.unsigned i) = Int.zero.",
            "VernacStartTheoremProof",
            "d287cc767997ee021da5107581cbd826ee1fae87"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply int64_eq_e in H.",
            "VernacExtend",
            "6316e8ee7b9ae9d2fa5169d7b8ac4769810c60b7"
        ],
        [
            "unfold Int.zero.",
            "VernacExtend",
            "bfe7cd39a162c33fb639de19c2e03cc76c6e4416"
        ],
        [
            "rewrite Int64.repr_unsigned in H.",
            "VernacExtend",
            "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typecheck_cast_sound: forall {CS: compspecs} Delta rho m e t, typecheck_environ Delta rho -> (denote_tc_assert (typecheck_expr Delta e) rho m -> tc_val (typeof e) (eval_expr e rho)) -> denote_tc_assert (typecheck_expr Delta (Ecast e t)) rho m -> tc_val (typeof (Ecast e t)) (eval_expr (Ecast e t) rho).",
            "VernacStartTheoremProof",
            "8a583cd66f4e21f0940dfbcdf4c877c0a0890f7f"
        ],
        [
            "intros until t; intros H H1 H0.",
            "VernacExtend",
            "bd7bd411d548cb22c4740dbdcbf27e58583338be"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "rewrite denote_tc_assert_andp in H0.",
            "VernacExtend",
            "1240f2f273c30178076ba3eda9094f34e68faa41"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "specialize (H1 H0); clear H0.",
            "VernacExtend",
            "19654233d4df34d2b638abf96abeab44f831981b"
        ],
        [
            "unfold sem_cast, force_val1.",
            "VernacExtend",
            "3d285fe50a5715609cf2a9a3d2b267bd949955e3"
        ],
        [
            "rewrite isCastR in H2.",
            "VernacExtend",
            "e304c68559c1fe19d4d8063af0c50332fcaaef6e"
        ],
        [
            "destruct (classify_cast (typeof e) t) as [ | | | | | | | | sz [ | ] | sz [ | ] | | | | | | [ | ] | [ | ] | | | | | | | | ] eqn:H3; try contradiction; destruct t as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; try discriminate H3; try contradiction; destruct (typeof e) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; try discriminate H3; try contradiction; unfold classify_cast in H3; try replace (if Archi.ptr64 then false else false) with false in H2 by (destruct Archi.ptr64; auto); repeat (progress unfold_lift in H2; simpl in H2); unfold tc_val, is_pointer_type in *; repeat match goal with |- context [eqb_type ?A ?B] => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [apply eqb_type_true in J | apply eqb_type_false in J] end; repeat match goal with H: context [eqb_type ?A ?B] |- _ => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [apply eqb_type_true in J | apply eqb_type_false in J] end; try discriminate; rewrite ?if_true in H3 by auto; rewrite ?if_false in H3 by (clear; congruence); try (destruct Archi.ptr64 eqn:?Hp; try discriminate; [idtac]); repeat match goal with | H: app_pred (denote_tc_assert (tc_andp _ _) _) _ |- _ => rewrite denote_tc_assert_andp in H; destruct H | H: app_pred (denote_tc_assert (if ?A then _ else _) _) _ |- _ => first [change A with false in H | change A with true in H]; cbv iota in H | H: app_pred (denote_tc_assert (tc_iszero _) _) _ |- _ => rewrite denote_tc_assert_iszero in H | H: app_pred (denote_tc_assert (tc_bool _ _) _) _ |- _ => apply tc_bool_e in H | H: app_pred (denote_tc_assert _ _) _ |- _ => unfold denote_tc_assert, denote_tc_Zle, denote_tc_Zge in H; unfold_lift in H end; destruct (eval_expr e rho); try solve [contradiction H1]; try apply I; try solve [contradiction]; unfold sem_cast_pointer, sem_cast_i2i, sem_cast_f2f, sem_cast_s2s, sem_cast_f2i, sem_cast_s2i, cast_float_int, is_pointer_or_null, force_val in *; repeat rewrite Hp in *; repeat match goal with | H: app_pred (prop _) _ |- _ => apply is_true_e in H; try (apply int_eq_e in H; subst); try (apply int64_eq_e in H; subst) end; auto; inv H3; try (simpl in H1|-*; match goal with | |- context[Int.sign_ext ?n ?x] => apply (sign_ext_range' n x); compute; split; congruence | |- context[Int.zero_ext ?n ?x] => apply (zero_ext_range' n x); compute; try split; congruence end); simpl; try match goal with |- (if ?A then _ else _) = _ \\/ (if ?A then _ else _) = _ => destruct A; solve [auto] end; repeat match goal with | H: app_pred match ?A with Some _ => _ | None => _ end _ |- _ => destruct A eqn:?; [ | contradiction H] | H: app_pred (prop _) _ |- _ => apply is_true_e in H; rewrite ?Z.leb_le, ?Z.geb_le in H end.",
            "VernacExtend",
            "a9df2722e22c808a3435bce7b1e0d4efcdaece7c"
        ],
        [
            "all: try (simpl in H0,H2; first [ erewrite float_to_int_ok | erewrite float_to_intu_ok | erewrite single_to_int_ok | erewrite single_to_intu_ok]; [ | eassumption | split; omega]).",
            "VernacExtend",
            "1a7a40ed2ff85261eab410a91c883bb1d0b7b3c5"
        ],
        [
            "all: try match goal with | |- context[Int.sign_ext ?n ?x] => apply (sign_ext_range' n x); compute; split; congruence | |- context[Int.zero_ext ?n ?x] => apply (zero_ext_range' n x); compute; try split; congruence end.",
            "VernacExtend",
            "064674b46a727b0f4dfe16e75234c3b4632ced89"
        ],
        [
            "all: try apply I.",
            "VernacExtend",
            "6e8bbea873e48530843a33defb685a83f179bc7f"
        ],
        [
            "all: rewrite ?Hp; hnf; auto.",
            "VernacExtend",
            "e4066c6b62e6667e279533e756676da375d53fc4"
        ],
        [
            "all: inv J0; congruence.",
            "VernacExtend",
            "f73ba5da5f9b3a2e3afed1f2c00c3c19ba82f6f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "type_eq_true",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (type_eq a b).",
                        "VernacExtend",
                        "a680b57be213a7e77d8585452ee16ea08adfd9bb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_bool_rev",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zle_cases x y).",
                        "VernacExtend",
                        "f39db35bd5e1108ded81cc3fef35b4725a524cfe"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zge_cases y x).",
                        "VernacExtend",
                        "2af5f00253e82520a2c4dc11be49591a559a134e"
                    ]
                },
                {
                    "command": [
                        "destruct (Zle_bool x y); destruct (Zge_bool y x); auto; elimtype False; omega.",
                        "VernacExtend",
                        "74be0744f332fa8318242bb80d0f9307dabeda49"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isCastR",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros; extensionality rho.",
                        "VernacExtend",
                        "876c9ddd2c67098fb113bf57fc855e1053ecc44d"
                    ]
                },
                {
                    "command": [
                        "unfold isCastResultType.",
                        "VernacExtend",
                        "c3741fb092f118cbca53f26200472a8d705437f3"
                    ]
                },
                {
                    "command": [
                        "destruct (classify_cast tfrom tto) eqn:?; auto.",
                        "VernacExtend",
                        "ca842a3e2d7036bd0b4e0ce63283e593f73c966b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_pow_0_lt",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z2Nat.id e) by auto.",
                        "VernacExtend",
                        "4294491901db995240b2f7a12c0376ab95d0f85e"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "induction (Z.to_nat e).",
                        "VernacExtend",
                        "874f1f40b72ddda940d0c1cd6cdc977e58ffa6be"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply RIneq.Rlt_0_1.",
                        "VernacExtend",
                        "b04bdda17a9f4b3f8120c4dfd753651a257fb3ad"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_S.",
                        "VernacExtend",
                        "d9f39a95338187eacc0449352f36ed1a3018cf13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pow_succ_r by omega.",
                        "VernacExtend",
                        "43fd09e49405e97dff31d240914bc997a81a0675"
                    ]
                },
                {
                    "command": [
                        "rewrite Fcore_Raux.Z2R_mult.",
                        "VernacExtend",
                        "7794a339e313a04751963920cf97966260b3c270"
                    ]
                },
                {
                    "command": [
                        "apply RIneq.Rmult_lt_0_compat; auto.",
                        "VernacExtend",
                        "8c8ada7f91d146223e3362c8368f130b48b87943"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "apply DiscrR.Rlt_R0_R2.",
                        "VernacExtend",
                        "3f96aa0f31a7e36df4cbfdfdd47dedadf7ea6f53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm0",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm1",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm2",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm3",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm4",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "float_to_int_ok",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "apply general_float_to_int_ok.",
                        "VernacExtend",
                        "c26c5a7eb8f59136fd820393f02a69fc70acb537"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "float_to_intu_ok",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "apply general_float_to_int_ok.",
                        "VernacExtend",
                        "c26c5a7eb8f59136fd820393f02a69fc70acb537"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "single_to_int_ok",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "apply general_float_to_int_ok.",
                        "VernacExtend",
                        "c26c5a7eb8f59136fd820393f02a69fc70acb537"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "single_to_intu_ok",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "apply general_float_to_int_ok.",
                        "VernacExtend",
                        "c26c5a7eb8f59136fd820393f02a69fc70acb537"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andb_zleb",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? [? ?]; rewrite andb_true_iff; split; apply Z.leb_le; auto.",
                        "VernacExtend",
                        "d3e6963b8526e7de7d229fed51105a8d9ca898c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_range'",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.sign_ext_range n x H).",
                        "VernacExtend",
                        "2693eecd84a9ccaad049d7d363a6c9645a9c6db0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_range'",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.zero_ext_range n x H); omega.",
                        "VernacExtend",
                        "acda324e8281ce82582681573cea1a5bc738d510"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int64_eq_e",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.eq_spec i Int64.zero).",
                        "VernacExtend",
                        "b3dc4348affea34bc0347c9511c363397279ed3d"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0; auto.",
                        "VernacExtend",
                        "d953e01ca15b58600315278be75264ee6e950070"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "long_int_zero_lem",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply int64_eq_e in H.",
                        "VernacExtend",
                        "6316e8ee7b9ae9d2fa5169d7b8ac4769810c60b7"
                    ]
                },
                {
                    "command": [
                        "unfold Int.zero.",
                        "VernacExtend",
                        "bfe7cd39a162c33fb639de19c2e03cc76c6e4416"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.repr_unsigned in H.",
                        "VernacExtend",
                        "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}