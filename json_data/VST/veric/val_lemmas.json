{
    "filename": "veric/val_lemmas.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Coq.Arith.EqNat.",
            "VernacRequire",
            "9b659d62b654c9405ee02b95ba0db6e2949efea1"
        ],
        [
            "Require Import Coq.Relations.Relations.",
            "VernacRequire",
            "711709d1a8dabb57391deb948e0db0b064ccece7"
        ],
        [
            "Require Import compcert.lib.Coqlib.",
            "VernacRequire",
            "0e8012a6c0062230df0c959370d96e0e84eae6bb"
        ],
        [
            "Require Import compcert.lib.Integers.",
            "VernacRequire",
            "0da1bf41e581d14cf922c3b0e0da86b37eba58b1"
        ],
        [
            "Require Import compcert.lib.Floats.",
            "VernacRequire",
            "4afe0eb5af7ab3750fe0f6bfd7c1f8e47609f2f4"
        ],
        [
            "Require Import compcert.common.Values.",
            "VernacRequire",
            "775d93857ac31b6b7ea7c564f3005cd032b058e4"
        ],
        [
            "Require Import VST.msl.Coqlib2.",
            "VernacRequire",
            "8c6da0b17b3d2a1d9fdc906278adc35947d0c031"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Definition is_true (b: bool) := match b with true => True | false => False end.",
            "VernacDefinition",
            "4f38cd9fe224f4bd74a22ef1821dbd757d8f7117"
        ],
        [
            "Definition force_val (v: option val) : val := match v with Some v' => v' | None => Vundef end.",
            "VernacDefinition",
            "6ed1f51d599f293c0552802d93419ce1e7e13aa9"
        ],
        [
            "Definition force_val1 (f: val -> option val) (v: val) := force_val (f v).",
            "VernacDefinition",
            "a5d82a316801338035ede10df1eed5e36da1ba41"
        ],
        [
            "Definition force_val2 (f: val -> val -> option val) (v1 v2: val) := force_val (f v1 v2).",
            "VernacDefinition",
            "c1bbeda2fe2ee0a080445fe4042ab243a978d992"
        ],
        [
            "Arguments force_val1 f v /.",
            "VernacArguments",
            "cdd49d773ef5e47c789f97435f0832bafed7915a"
        ],
        [
            "Arguments force_val2 f v1 v2 /.",
            "VernacArguments",
            "8734bb3622da50ee7c880b643eaaa536b84275e7"
        ],
        [
            "Definition force_int (v: val) := match v with | Vint i => i | _ => Int.zero end.",
            "VernacDefinition",
            "39502eda34644a2a460f7d321ebf973d02c86a5e"
        ],
        [
            "Arguments force_int !v / .",
            "VernacArguments",
            "5eaca417d3e4737b07377ee1cd27e870fd855adc"
        ],
        [
            "Definition force_signed_int v := Int.signed (force_int v).",
            "VernacDefinition",
            "717b65e58437ab04aa86127ce26c88bed3e82a0c"
        ],
        [
            "Arguments force_signed_int !v / .",
            "VernacArguments",
            "28dadcaf242aaa502466a53ff0c33beed2d89cfd"
        ],
        [
            "Lemma force_Vint: forall i, force_int (Vint i) = i.",
            "VernacStartTheoremProof",
            "2ff623d81afaf17383a5c4d825ad2a279f6071e2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite force_Vint : norm.",
            "VernacExtend",
            "79bb4b14b1ac70f8decfde0c38054dc9f845cea1"
        ],
        [
            "Definition force_ptr (v: val) : val := match v with Vptr l ofs => v | _ => Vundef end.",
            "VernacDefinition",
            "4e57fdc8c1dffdc3326607722221b2013b824779"
        ],
        [
            "Definition always {A B: Type} (b: B) (a: A) := b.",
            "VernacDefinition",
            "9a18560398104a0c66924b4d7fed840ca69e8d46"
        ],
        [
            "Definition offset_val (ofs: Z) (v: val) : val := match v with | Vptr b z => Vptr b (Ptrofs.add z (Ptrofs.repr ofs)) | _ => Vundef end.",
            "VernacDefinition",
            "789061f716f67eb9f1600808cf1588228c06d6f4"
        ],
        [
            "Definition range_s32 (i: Z) : bool := andb (Z.leb Int.min_signed i) (Z.leb i Int.max_signed).",
            "VernacDefinition",
            "9154dad695c508fe34c7eea802b21999f678c931"
        ],
        [
            "Definition range_s64 (i: Z) : bool := andb (Z.leb Int64.min_signed i) (Z.leb i Int64.max_signed).",
            "VernacDefinition",
            "cb05abf502b75bd94e5a98b1014cd698d992b647"
        ],
        [
            "Definition is_long (v: val) := match v with Vlong i => True | _ => False end.",
            "VernacDefinition",
            "46640759b10e0d67c87aed5db494d33218909cac"
        ],
        [
            "Definition is_float (v: val) := match v with Vfloat i => True | _ => False end.",
            "VernacDefinition",
            "adee267fa95628bed73b4d01b62be471e74bc09e"
        ],
        [
            "Definition is_single (v: val) := match v with Vsingle i => True | _ => False end.",
            "VernacDefinition",
            "21a30b105cc7307f4cb3fcb67fef8f5ec42b4d33"
        ],
        [
            "Definition is_pointer_or_null (v: val) := match v with | Vint i => if Archi.ptr64 then False else i = Int.zero | Vlong i => if Archi.ptr64 then i=Int64.zero else False | Vptr _ _ => True | _ => False end.",
            "VernacDefinition",
            "a89eba29631a132e3678932cda57e5ba21a383a8"
        ],
        [
            "Definition is_pointer_or_integer (v: val) := match v with | Vint i => if Archi.ptr64 then False else True | Vlong i => if Archi.ptr64 then True else False | Vptr _ _ => True | _ => False end.",
            "VernacDefinition",
            "2e512b900eeee389b406090c68b4641cab867f75"
        ],
        [
            "Definition isptr v := match v with | Vptr _ _ => True | _ => False end.",
            "VernacDefinition",
            "7bea45d6d555708bcdc7bd8811455da1fdcb06b7"
        ],
        [
            "Lemma int_eq_e: forall i j, Int.eq i j = true -> i=j.",
            "VernacStartTheoremProof",
            "3e2d0cece2d42dd0eb88b895aaf4ed87a2600518"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.eq_spec i j); rewrite H in H0; auto.",
            "VernacExtend",
            "11b5c925f06ee246a7b34fcb3b0d611d4522b138"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma two_p_neg: forall n, n<0 -> two_p n = 0.",
            "VernacStartTheoremProof",
            "ef4d9730b82eda70dec2fa2643f371074cbbdda6"
        ],
        [
            "destruct n; intros; simpl; auto; try omega.",
            "VernacExtend",
            "2c7718bf15d747ef07ea841f0f20b0abf1620fd9"
        ],
        [
            "pose proof (Zgt_pos_0 p); omega.",
            "VernacExtend",
            "79b3f867c79ee73a4c2844d9eb75ad931512939c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Lemma testbit_signed_neg: forall i j n, - two_p n <= Int.signed i < 0 -> 0 <= n <= j -> j < Int.zwordsize -> Int.testbit i j = true.",
            "VernacStartTheoremProof",
            "80a2214e6e6cdb9bf4528ff3a7cd57c8d3409f2a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rename H1 into Wj.",
            "VernacExtend",
            "5a7d5357b1b7dd27a837793d5807f8ba79c162ec"
        ],
        [
            "pose proof (Int.unsigned_range i).",
            "VernacExtend",
            "c3a9e19e3d86215533851fab70582d6c3a47266e"
        ],
        [
            "unfold Int.signed in H.",
            "VernacExtend",
            "51dc4022ea7c391c242df7daec8500139d98e284"
        ],
        [
            "if_tac in H.",
            "VernacExtend",
            "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Int.testbit.",
            "VernacExtend",
            "ff8778ff3b6851d64d02b0610ee15115116cccb8"
        ],
        [
            "forget (Int.unsigned i) as i'; clear i; rename i' into i.",
            "VernacExtend",
            "5a5ac029f7ba398b38825e096f8c3293d6ae12d2"
        ],
        [
            "rewrite <- (Z2Nat.id j) in * by omega.",
            "VernacExtend",
            "65da457a5eb18caf0c0859fe6455a9c99ebc4847"
        ],
        [
            "unfold Int.half_modulus in *.",
            "VernacExtend",
            "f1b681f17d21f004d9f607f3bba02e5a606ff60e"
        ],
        [
            "unfold Int.modulus in *.",
            "VernacExtend",
            "aa83435dc35193c128728638893d92b05943bd37"
        ],
        [
            "unfold Int.zwordsize in Wj.",
            "VernacExtend",
            "e4fd33f461c3e171a9975311323e2faf8bb5e12c"
        ],
        [
            "forget Int.wordsize as W.",
            "VernacExtend",
            "b50356b130720111a9ab66fc1242212043f7e8c9"
        ],
        [
            "assert (Z.to_nat j < W)%nat by (apply Nat2Z.inj_lt; auto).",
            "VernacExtend",
            "f7a2dea92ce1551c68a5e31d2e6fbc7dff01d39c"
        ],
        [
            "clear Wj.",
            "VernacExtend",
            "425993e9bad3947a0032c874e009772775ad9b2f"
        ],
        [
            "assert (W = Z.to_nat j + 1 + (W-Z.to_nat j-1))%nat by omega.",
            "VernacExtend",
            "71253665154e997dfbb1af2a89a31e8a065f9542"
        ],
        [
            "forget (W - Z.to_nat j - 1)%nat as K.",
            "VernacExtend",
            "1e1395cb5ead13f81647c0a1e4900eedf0a84246"
        ],
        [
            "subst W.",
            "VernacExtend",
            "2221744b5d6b9fff53227a70f549d1193c5b846f"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "rewrite <- (Z2Nat.id n) in H by omega.",
            "VernacExtend",
            "0319e87e526dfe4c082d3849e58f98cf5eeef80c"
        ],
        [
            "rewrite <- (Z2Nat.id n) in H0 by omega.",
            "VernacExtend",
            "568a1cb87eed481dffde66081e09e17c9d8258f8"
        ],
        [
            "rewrite <- two_power_nat_two_p in H.",
            "VernacExtend",
            "b296acfbcb8248f8c2ae4fa9084a2f32d3e4a6e5"
        ],
        [
            "assert (Z.to_nat n <= Z.to_nat j)%nat.",
            "VernacExtend",
            "52911f07bb0c3666bda40a025a7cc0e918d50e42"
        ],
        [
            "apply Nat2Z.inj_le; omega.",
            "VernacExtend",
            "993ef285eda59551fa181f0a73f429359c530ed4"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "forget (Z.to_nat n) as n'; clear n; rename n' into n.",
            "VernacExtend",
            "95d6da0e27c7419e0cc52eec2540b0b9ad347304"
        ],
        [
            "forget (Z.to_nat j) as j'; clear j; rename j' into j.",
            "VernacExtend",
            "f7b279128d641c465c132552691e2da5108134b7"
        ],
        [
            "destruct H as [H _].",
            "VernacExtend",
            "0f541249a67d975c2964167e140925fc0af38d09"
        ],
        [
            "revert n i H3 H2 H H1; induction j; intros.",
            "VernacExtend",
            "711a062a1b0d8ea382bdeca95bb1903a2a5d4815"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl (Z.of_nat) in *.",
            "VernacExtend",
            "1c9336c32fd789cd58d86b098eb5b41ce848987e"
        ],
        [
            "assert (n=0)%nat by omega.",
            "VernacExtend",
            "9cd2b4c20b9ac1c6500f5bdc7165de91ab32cf04"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "simpl plus in *.",
            "VernacExtend",
            "bdef8f193d64c559667ae0fd2ea3ca1736af5ce6"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "change (- two_power_nat 0) with (-1) in H.",
            "VernacExtend",
            "5afe22917fe5c5ea63b2d8076b78b37e9517616a"
        ],
        [
            "assert (i = (two_power_nat (S K) - 1)) by omega.",
            "VernacExtend",
            "542b078c113a717912f22f4d8487c34147f09abe"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "rewrite two_power_nat_S.",
            "VernacExtend",
            "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "forget (two_power_nat K) as A.",
            "VernacExtend",
            "3c0f7be078b6ca4d5b4b03c192b0f096c63b6282"
        ],
        [
            "replace A with ((A-1)+1) by omega.",
            "VernacExtend",
            "1bc785a4f35620cca4b1c8be2ad1214ef840ef0f"
        ],
        [
            "rewrite Z.mul_add_distr_l.",
            "VernacExtend",
            "94d4ab98e943ee5ba93e42479d34d34fd113bca7"
        ],
        [
            "replace (2 * (A - 1) + 2 * 1 - 1) with (2 * (A - 1) + 1) by omega.",
            "VernacExtend",
            "af01a1dfec64134f82e955b3a5d002cbd0b2e343"
        ],
        [
            "apply Z.testbit_odd_0.",
            "VernacExtend",
            "914938ff3d17529b407d0f89f6249dcc64394521"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "change (- two_power_nat 0)%Z with (-1) in H.",
            "VernacExtend",
            "a2e6e11b7e7df0a39142f1d8145e4e31aaeee39c"
        ],
        [
            "assert (i = two_power_nat (S j + 1 + K) - 1) by omega.",
            "VernacExtend",
            "3ee97a0a7940a5a7cca9df2295e404ac2d7562a1"
        ],
        [
            "clear H H1 H2.",
            "VernacExtend",
            "da007df5fc8927de9297c50eef2213fc1119b71d"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "replace (two_power_nat (S j + 1 + K) - 1) with (Z.ones (Z.of_nat (S j + 1 + K))).",
            "VernacExtend",
            "66e33ee8c60d849a1da43c8a386f1c963216b61c"
        ],
        [
            "apply Z.ones_spec_low.",
            "VernacExtend",
            "86c7ec7487044c5c3494048e8fe71f352ee5e71f"
        ],
        [
            "split; [omega | ].",
            "VernacExtend",
            "2c84913a3ba9cd7f044dc01c555be5c3c2d9150e"
        ],
        [
            "apply Nat2Z.inj_lt.",
            "VernacExtend",
            "6ec2c5bd1d02f2d0261f8c87f0d2bf550988e026"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Z.ones_equiv.",
            "VernacExtend",
            "503203c38bc29f8a4fe474aa17d3e89007dd9ddf"
        ],
        [
            "rewrite two_power_nat_equiv.",
            "VernacExtend",
            "dd4522c9662c9b11308d412434ecf25c231168cf"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite inj_S.",
            "VernacExtend",
            "d9f39a95338187eacc0449352f36ed1a3018cf13"
        ],
        [
            "rewrite Int.Ztestbit_succ by omega.",
            "VernacExtend",
            "d6587171d93211aee4783480d66b308e87f63994"
        ],
        [
            "apply (IHj n); clear IHj.",
            "VernacExtend",
            "036ea50e2a653922f727f3f4f3b0eee453ca37a2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Zdiv2_div.",
            "VernacExtend",
            "faa2b4d775e7c98b35c99ee87bd44efc8c133a91"
        ],
        [
            "apply Z_div_ge; try omega.",
            "VernacExtend",
            "0fe776af987324ec6475e404959ffba84daf1a01"
        ],
        [
            "replace (S j + 1 + K)%nat with (S (j + 1 + K))%nat in H2 by omega.",
            "VernacExtend",
            "c34f36157e548ace16b5c70e09a5ee0c90345711"
        ],
        [
            "rewrite two_power_nat_S in H2.",
            "VernacExtend",
            "cd898985217b0765e1f2b9e298cf6574f8a6cd67"
        ],
        [
            "rewrite Z.mul_comm in H2.",
            "VernacExtend",
            "9d271ff6c108a39f8b4dcfa9b6e9f95cb21cc396"
        ],
        [
            "rewrite Z_div_mult_full in H2 by omega.",
            "VernacExtend",
            "773b6a21b331645eac994d105daa2e91d8968c74"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite two_power_nat_S in H.",
            "VernacExtend",
            "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
        ],
        [
            "replace (S j + 1 + K)%nat with (S (j + 1 + K))%nat in H by omega.",
            "VernacExtend",
            "33652a3c9246f0c7dc984cbcb68d00b3045ee9e3"
        ],
        [
            "rewrite two_power_nat_S in H.",
            "VernacExtend",
            "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
        ],
        [
            "rewrite (Zdiv2_odd_eqn i) in H.",
            "VernacExtend",
            "010071777632462bf40da38e480cd113366edb2f"
        ],
        [
            "destruct (Z.odd i) eqn:?H; omega.",
            "VernacExtend",
            "036732dd2430085afa509c8d8c488a372d7e2862"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "replace (S j + 1 + K)%nat with (S (j + 1 + K))%nat in H1 by omega.",
            "VernacExtend",
            "e1ccd02397aca0aba4b3791b43eff104bfe9177c"
        ],
        [
            "rewrite two_power_nat_S in H1.",
            "VernacExtend",
            "6b0f9eb470a4b66d791546327085515c34b93380"
        ],
        [
            "rewrite (Zdiv2_odd_eqn i) in H1.",
            "VernacExtend",
            "3d2f1b5f411a9d71af049cf42053606209da3e65"
        ],
        [
            "destruct (Z.odd i) eqn:?H; omega.",
            "VernacExtend",
            "036732dd2430085afa509c8d8c488a372d7e2862"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sign_ext_inrange: forall n i, - two_p (n-1) <= Int.signed i <= two_p (n-1) - 1 -> Int.sign_ext n i = i.",
            "VernacStartTheoremProof",
            "815532782e513e5432b907e797ee7d7322d3b5b2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt n Int.zwordsize); [ | apply Int.sign_ext_above; auto].",
            "VernacExtend",
            "805a1a18d476f9d0dc7d68dc801d215ba5f1d30c"
        ],
        [
            "destruct (zlt n 0).",
            "VernacExtend",
            "855490d2fe4809278fc9f7fce136b34b611d9ee4"
        ],
        [
            "assert (n-1 < 0) by omega.",
            "VernacExtend",
            "477a9a83a8c10a6f644e12ddba9eaa1e5959c39c"
        ],
        [
            "repeat rewrite two_p_neg in H by omega.",
            "VernacExtend",
            "c83557100842a312760510d7386e20d771a87bcc"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zeq n 0).",
            "VernacExtend",
            "4176a7e0059dea26cced6a60ea81dc6dae3cc010"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (Int.signed i = 0) by omega.",
            "VernacExtend",
            "2addbf77120fd7da27bcd3b1d320953c67e76bde"
        ],
        [
            "clear - H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "rewrite <- (Int.repr_signed i).",
            "VernacExtend",
            "58865f3753a075ce3387e2d56907cbd92515e439"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assert (0 < n < Int.zwordsize) by omega.",
            "VernacExtend",
            "35fca6cfebd1bccc7f7a67959d9cd516d9008f02"
        ],
        [
            "clear - H H0.",
            "VernacExtend",
            "58e1de226be4685579a9469cbd7d2405ded5f7cf"
        ],
        [
            "apply Int.same_bits_eq; intros j ?.",
            "VernacExtend",
            "d1657f49d45dca9c898047b005ac8421f47e5e73"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite (Int.bits_sign_ext n i j H1 H0).",
            "VernacExtend",
            "b0f7936d7235b0cf607222d63a5176f319c22cc2"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "destruct (zlt (Int.signed i) 0).",
            "VernacExtend",
            "0027004bb7aca7797b661af3f9b175b4bdd37439"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (- two_p (n - 1) <= Int.signed i < 0) by omega.",
            "VernacExtend",
            "862a40997df128834a6736887f93491ebe101cd4"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "rewrite (testbit_signed_neg i (n-1) (n-1)); auto; try omega.",
            "VernacExtend",
            "851cf62a2d497d849819b5ae9b0a14b54f27620b"
        ],
        [
            "rewrite (testbit_signed_neg i j (n-1)%Z); auto; omega.",
            "VernacExtend",
            "14583b37e47dc31383feb9d8b6b190dff58b8590"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite Int.signed_eq_unsigned in H by (apply Int.signed_positive; auto).",
            "VernacExtend",
            "09159db0f5a0ff3784a8330cfd5e44644a886bac"
        ],
        [
            "unfold Int.testbit in *.",
            "VernacExtend",
            "d259758212ada665882b3a443d2e7b91bd9d3051"
        ],
        [
            "transitivity false.",
            "VernacExtend",
            "f4d1c1c9ea7a9a062df4dcfb71e16a45e0d7bfe6"
        ],
        [
            "apply (Int.Ztestbit_above (Z.to_nat (n-1))).",
            "VernacExtend",
            "7d622ea1b01d42f75606def0e932856deaf32bb8"
        ],
        [
            "rewrite two_power_nat_two_p.",
            "VernacExtend",
            "e21f56ecabf68cda5e6534a700cce51443bacebe"
        ],
        [
            "rewrite Z2Nat.id by omega.",
            "VernacExtend",
            "c185dccc0e1f88582cb4af347b0558035bf7be39"
        ],
        [
            "pose proof (Int.unsigned_range i).",
            "VernacExtend",
            "c3a9e19e3d86215533851fab70582d6c3a47266e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Z2Nat.id by omega.",
            "VernacExtend",
            "c185dccc0e1f88582cb4af347b0558035bf7be39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply (Int.Ztestbit_above (Z.to_nat (n-1))).",
            "VernacExtend",
            "7d622ea1b01d42f75606def0e932856deaf32bb8"
        ],
        [
            "rewrite two_power_nat_two_p.",
            "VernacExtend",
            "e21f56ecabf68cda5e6534a700cce51443bacebe"
        ],
        [
            "rewrite Z2Nat.id by omega.",
            "VernacExtend",
            "c185dccc0e1f88582cb4af347b0558035bf7be39"
        ],
        [
            "pose proof (Int.unsigned_range i).",
            "VernacExtend",
            "c3a9e19e3d86215533851fab70582d6c3a47266e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Z2Nat.id by omega.",
            "VernacExtend",
            "c185dccc0e1f88582cb4af347b0558035bf7be39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zero_ext_inrange: forall n i, Int.unsigned i <= two_p n - 1 -> Int.zero_ext n i = i.",
            "VernacStartTheoremProof",
            "3e33f47dda54014524a244da02cc4a6c09d022b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt n Int.zwordsize); [ | apply Int.zero_ext_above; auto].",
            "VernacExtend",
            "b9b2d00cfef6335dc98f879685f0908eca2cbc39"
        ],
        [
            "destruct (zlt n 0).",
            "VernacExtend",
            "855490d2fe4809278fc9f7fce136b34b611d9ee4"
        ],
        [
            "assert (n-1 < 0) by omega.",
            "VernacExtend",
            "477a9a83a8c10a6f644e12ddba9eaa1e5959c39c"
        ],
        [
            "repeat rewrite two_p_neg in H by omega.",
            "VernacExtend",
            "c83557100842a312760510d7386e20d771a87bcc"
        ],
        [
            "pose proof (Int.unsigned_range i).",
            "VernacExtend",
            "c3a9e19e3d86215533851fab70582d6c3a47266e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (zeq n 0).",
            "VernacExtend",
            "4176a7e0059dea26cced6a60ea81dc6dae3cc010"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (Int.unsigned i = 0) by (pose proof (Int.unsigned_range i); omega).",
            "VernacExtend",
            "dcce4a10c3304b19a1c215328dd9c02a68db7775"
        ],
        [
            "clear - H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "rewrite <- (Int.repr_unsigned i).",
            "VernacExtend",
            "2c5606931407d1321e14855ad7036622fefd27ca"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assert (0 < n < Int.zwordsize) by omega.",
            "VernacExtend",
            "35fca6cfebd1bccc7f7a67959d9cd516d9008f02"
        ],
        [
            "clear - H H0.",
            "VernacExtend",
            "58e1de226be4685579a9469cbd7d2405ded5f7cf"
        ],
        [
            "apply Int.same_bits_eq; intros j ?.",
            "VernacExtend",
            "d1657f49d45dca9c898047b005ac8421f47e5e73"
        ],
        [
            "rewrite (Int.bits_zero_ext n i j) by omega.",
            "VernacExtend",
            "f246b0720f31097bc7ee27c261abd4c2497496ac"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "unfold Int.testbit.",
            "VernacExtend",
            "ff8778ff3b6851d64d02b0610ee15115116cccb8"
        ],
        [
            "apply (Int.Ztestbit_above (Z.to_nat n)); [ | rewrite Z2Nat.id by omega; omega].",
            "VernacExtend",
            "0e9529f0a294ea86b15cd1bb5016bedb5142403a"
        ],
        [
            "rewrite two_power_nat_two_p.",
            "VernacExtend",
            "e21f56ecabf68cda5e6534a700cce51443bacebe"
        ],
        [
            "rewrite Z2Nat.id by omega.",
            "VernacExtend",
            "c185dccc0e1f88582cb4af347b0558035bf7be39"
        ],
        [
            "pose proof (Int.unsigned_range i); omega.",
            "VernacExtend",
            "0e7d5c21009a25f28cb82c3dfeb835ee1340e5c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "force_Vint",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_eq_e",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.eq_spec i j); rewrite H in H0; auto.",
                        "VernacExtend",
                        "11b5c925f06ee246a7b34fcb3b0d611d4522b138"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_p_neg",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "destruct n; intros; simpl; auto; try omega.",
                        "VernacExtend",
                        "2c7718bf15d747ef07ea841f0f20b0abf1620fd9"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zgt_pos_0 p); omega.",
                        "VernacExtend",
                        "79b3f867c79ee73a4c2844d9eb75ad931512939c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_signed_neg",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rename H1 into Wj.",
                        "VernacExtend",
                        "5a7d5357b1b7dd27a837793d5807f8ba79c162ec"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i).",
                        "VernacExtend",
                        "c3a9e19e3d86215533851fab70582d6c3a47266e"
                    ]
                },
                {
                    "command": [
                        "unfold Int.signed in H.",
                        "VernacExtend",
                        "51dc4022ea7c391c242df7daec8500139d98e284"
                    ]
                },
                {
                    "command": [
                        "if_tac in H.",
                        "VernacExtend",
                        "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold Int.testbit.",
                        "VernacExtend",
                        "ff8778ff3b6851d64d02b0610ee15115116cccb8"
                    ]
                },
                {
                    "command": [
                        "forget (Int.unsigned i) as i'; clear i; rename i' into i.",
                        "VernacExtend",
                        "5a5ac029f7ba398b38825e096f8c3293d6ae12d2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z2Nat.id j) in * by omega.",
                        "VernacExtend",
                        "65da457a5eb18caf0c0859fe6455a9c99ebc4847"
                    ]
                },
                {
                    "command": [
                        "unfold Int.half_modulus in *.",
                        "VernacExtend",
                        "f1b681f17d21f004d9f607f3bba02e5a606ff60e"
                    ]
                },
                {
                    "command": [
                        "unfold Int.modulus in *.",
                        "VernacExtend",
                        "aa83435dc35193c128728638893d92b05943bd37"
                    ]
                },
                {
                    "command": [
                        "unfold Int.zwordsize in Wj.",
                        "VernacExtend",
                        "e4fd33f461c3e171a9975311323e2faf8bb5e12c"
                    ]
                },
                {
                    "command": [
                        "forget Int.wordsize as W.",
                        "VernacExtend",
                        "b50356b130720111a9ab66fc1242212043f7e8c9"
                    ]
                },
                {
                    "command": [
                        "assert (Z.to_nat j < W)%nat by (apply Nat2Z.inj_lt; auto).",
                        "VernacExtend",
                        "f7a2dea92ce1551c68a5e31d2e6fbc7dff01d39c"
                    ]
                },
                {
                    "command": [
                        "clear Wj.",
                        "VernacExtend",
                        "425993e9bad3947a0032c874e009772775ad9b2f"
                    ]
                },
                {
                    "command": [
                        "assert (W = Z.to_nat j + 1 + (W-Z.to_nat j-1))%nat by omega.",
                        "VernacExtend",
                        "71253665154e997dfbb1af2a89a31e8a065f9542"
                    ]
                },
                {
                    "command": [
                        "forget (W - Z.to_nat j - 1)%nat as K.",
                        "VernacExtend",
                        "1e1395cb5ead13f81647c0a1e4900eedf0a84246"
                    ]
                },
                {
                    "command": [
                        "subst W.",
                        "VernacExtend",
                        "2221744b5d6b9fff53227a70f549d1193c5b846f"
                    ]
                },
                {
                    "command": [
                        "clear H3.",
                        "VernacExtend",
                        "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z2Nat.id n) in H by omega.",
                        "VernacExtend",
                        "0319e87e526dfe4c082d3849e58f98cf5eeef80c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z2Nat.id n) in H0 by omega.",
                        "VernacExtend",
                        "568a1cb87eed481dffde66081e09e17c9d8258f8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- two_power_nat_two_p in H.",
                        "VernacExtend",
                        "b296acfbcb8248f8c2ae4fa9084a2f32d3e4a6e5"
                    ]
                },
                {
                    "command": [
                        "assert (Z.to_nat n <= Z.to_nat j)%nat.",
                        "VernacExtend",
                        "52911f07bb0c3666bda40a025a7cc0e918d50e42"
                    ]
                },
                {
                    "command": [
                        "apply Nat2Z.inj_le; omega.",
                        "VernacExtend",
                        "993ef285eda59551fa181f0a73f429359c530ed4"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "forget (Z.to_nat n) as n'; clear n; rename n' into n.",
                        "VernacExtend",
                        "95d6da0e27c7419e0cc52eec2540b0b9ad347304"
                    ]
                },
                {
                    "command": [
                        "forget (Z.to_nat j) as j'; clear j; rename j' into j.",
                        "VernacExtend",
                        "f7b279128d641c465c132552691e2da5108134b7"
                    ]
                },
                {
                    "command": [
                        "destruct H as [H _].",
                        "VernacExtend",
                        "0f541249a67d975c2964167e140925fc0af38d09"
                    ]
                },
                {
                    "command": [
                        "revert n i H3 H2 H H1; induction j; intros.",
                        "VernacExtend",
                        "711a062a1b0d8ea382bdeca95bb1903a2a5d4815"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl (Z.of_nat) in *.",
                        "VernacExtend",
                        "1c9336c32fd789cd58d86b098eb5b41ce848987e"
                    ]
                },
                {
                    "command": [
                        "assert (n=0)%nat by omega.",
                        "VernacExtend",
                        "9cd2b4c20b9ac1c6500f5bdc7165de91ab32cf04"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "simpl plus in *.",
                        "VernacExtend",
                        "bdef8f193d64c559667ae0fd2ea3ca1736af5ce6"
                    ]
                },
                {
                    "command": [
                        "clear H3.",
                        "VernacExtend",
                        "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
                    ]
                },
                {
                    "command": [
                        "change (- two_power_nat 0) with (-1) in H.",
                        "VernacExtend",
                        "5afe22917fe5c5ea63b2d8076b78b37e9517616a"
                    ]
                },
                {
                    "command": [
                        "assert (i = (two_power_nat (S K) - 1)) by omega.",
                        "VernacExtend",
                        "542b078c113a717912f22f4d8487c34147f09abe"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S.",
                        "VernacExtend",
                        "a9744f6bd9a8fe7c31c0f7154478ac3b90a12f1b"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "forget (two_power_nat K) as A.",
                        "VernacExtend",
                        "3c0f7be078b6ca4d5b4b03c192b0f096c63b6282"
                    ]
                },
                {
                    "command": [
                        "replace A with ((A-1)+1) by omega.",
                        "VernacExtend",
                        "1bc785a4f35620cca4b1c8be2ad1214ef840ef0f"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_add_distr_l.",
                        "VernacExtend",
                        "94d4ab98e943ee5ba93e42479d34d34fd113bca7"
                    ]
                },
                {
                    "command": [
                        "replace (2 * (A - 1) + 2 * 1 - 1) with (2 * (A - 1) + 1) by omega.",
                        "VernacExtend",
                        "af01a1dfec64134f82e955b3a5d002cbd0b2e343"
                    ]
                },
                {
                    "command": [
                        "apply Z.testbit_odd_0.",
                        "VernacExtend",
                        "914938ff3d17529b407d0f89f6249dcc64394521"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "change (- two_power_nat 0)%Z with (-1) in H.",
                        "VernacExtend",
                        "a2e6e11b7e7df0a39142f1d8145e4e31aaeee39c"
                    ]
                },
                {
                    "command": [
                        "assert (i = two_power_nat (S j + 1 + K) - 1) by omega.",
                        "VernacExtend",
                        "3ee97a0a7940a5a7cca9df2295e404ac2d7562a1"
                    ]
                },
                {
                    "command": [
                        "clear H H1 H2.",
                        "VernacExtend",
                        "da007df5fc8927de9297c50eef2213fc1119b71d"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "replace (two_power_nat (S j + 1 + K) - 1) with (Z.ones (Z.of_nat (S j + 1 + K))).",
                        "VernacExtend",
                        "66e33ee8c60d849a1da43c8a386f1c963216b61c"
                    ]
                },
                {
                    "command": [
                        "apply Z.ones_spec_low.",
                        "VernacExtend",
                        "86c7ec7487044c5c3494048e8fe71f352ee5e71f"
                    ]
                },
                {
                    "command": [
                        "split; [omega | ].",
                        "VernacExtend",
                        "2c84913a3ba9cd7f044dc01c555be5c3c2d9150e"
                    ]
                },
                {
                    "command": [
                        "apply Nat2Z.inj_lt.",
                        "VernacExtend",
                        "6ec2c5bd1d02f2d0261f8c87f0d2bf550988e026"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.ones_equiv.",
                        "VernacExtend",
                        "503203c38bc29f8a4fe474aa17d3e89007dd9ddf"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_equiv.",
                        "VernacExtend",
                        "dd4522c9662c9b11308d412434ecf25c231168cf"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_S.",
                        "VernacExtend",
                        "d9f39a95338187eacc0449352f36ed1a3018cf13"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.Ztestbit_succ by omega.",
                        "VernacExtend",
                        "d6587171d93211aee4783480d66b308e87f63994"
                    ]
                },
                {
                    "command": [
                        "apply (IHj n); clear IHj.",
                        "VernacExtend",
                        "036ea50e2a653922f727f3f4f3b0eee453ca37a2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Zdiv2_div.",
                        "VernacExtend",
                        "faa2b4d775e7c98b35c99ee87bd44efc8c133a91"
                    ]
                },
                {
                    "command": [
                        "apply Z_div_ge; try omega.",
                        "VernacExtend",
                        "0fe776af987324ec6475e404959ffba84daf1a01"
                    ]
                },
                {
                    "command": [
                        "replace (S j + 1 + K)%nat with (S (j + 1 + K))%nat in H2 by omega.",
                        "VernacExtend",
                        "c34f36157e548ace16b5c70e09a5ee0c90345711"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S in H2.",
                        "VernacExtend",
                        "cd898985217b0765e1f2b9e298cf6574f8a6cd67"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm in H2.",
                        "VernacExtend",
                        "9d271ff6c108a39f8b4dcfa9b6e9f95cb21cc396"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_div_mult_full in H2 by omega.",
                        "VernacExtend",
                        "773b6a21b331645eac994d105daa2e91d8968c74"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S in H.",
                        "VernacExtend",
                        "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
                    ]
                },
                {
                    "command": [
                        "replace (S j + 1 + K)%nat with (S (j + 1 + K))%nat in H by omega.",
                        "VernacExtend",
                        "33652a3c9246f0c7dc984cbcb68d00b3045ee9e3"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S in H.",
                        "VernacExtend",
                        "3e4a703255e1d1cba37f1db1db4eb3be76c2e046"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdiv2_odd_eqn i) in H.",
                        "VernacExtend",
                        "010071777632462bf40da38e480cd113366edb2f"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd i) eqn:?H; omega.",
                        "VernacExtend",
                        "036732dd2430085afa509c8d8c488a372d7e2862"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "replace (S j + 1 + K)%nat with (S (j + 1 + K))%nat in H1 by omega.",
                        "VernacExtend",
                        "e1ccd02397aca0aba4b3791b43eff104bfe9177c"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_S in H1.",
                        "VernacExtend",
                        "6b0f9eb470a4b66d791546327085515c34b93380"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zdiv2_odd_eqn i) in H1.",
                        "VernacExtend",
                        "3d2f1b5f411a9d71af049cf42053606209da3e65"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.odd i) eqn:?H; omega.",
                        "VernacExtend",
                        "036732dd2430085afa509c8d8c488a372d7e2862"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sign_ext_inrange",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n Int.zwordsize); [ | apply Int.sign_ext_above; auto].",
                        "VernacExtend",
                        "805a1a18d476f9d0dc7d68dc801d215ba5f1d30c"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n 0).",
                        "VernacExtend",
                        "855490d2fe4809278fc9f7fce136b34b611d9ee4"
                    ]
                },
                {
                    "command": [
                        "assert (n-1 < 0) by omega.",
                        "VernacExtend",
                        "477a9a83a8c10a6f644e12ddba9eaa1e5959c39c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite two_p_neg in H by omega.",
                        "VernacExtend",
                        "c83557100842a312760510d7386e20d771a87bcc"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq n 0).",
                        "VernacExtend",
                        "4176a7e0059dea26cced6a60ea81dc6dae3cc010"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assert (Int.signed i = 0) by omega.",
                        "VernacExtend",
                        "2addbf77120fd7da27bcd3b1d320953c67e76bde"
                    ]
                },
                {
                    "command": [
                        "clear - H0.",
                        "VernacExtend",
                        "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_signed i).",
                        "VernacExtend",
                        "58865f3753a075ce3387e2d56907cbd92515e439"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assert (0 < n < Int.zwordsize) by omega.",
                        "VernacExtend",
                        "35fca6cfebd1bccc7f7a67959d9cd516d9008f02"
                    ]
                },
                {
                    "command": [
                        "clear - H H0.",
                        "VernacExtend",
                        "58e1de226be4685579a9469cbd7d2405ded5f7cf"
                    ]
                },
                {
                    "command": [
                        "apply Int.same_bits_eq; intros j ?.",
                        "VernacExtend",
                        "d1657f49d45dca9c898047b005ac8421f47e5e73"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "rewrite (Int.bits_sign_ext n i j H1 H0).",
                        "VernacExtend",
                        "b0f7936d7235b0cf607222d63a5176f319c22cc2"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto.",
                        "VernacExtend",
                        "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Int.signed i) 0).",
                        "VernacExtend",
                        "0027004bb7aca7797b661af3f9b175b4bdd37439"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assert (- two_p (n - 1) <= Int.signed i < 0) by omega.",
                        "VernacExtend",
                        "862a40997df128834a6736887f93491ebe101cd4"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "rewrite (testbit_signed_neg i (n-1) (n-1)); auto; try omega.",
                        "VernacExtend",
                        "851cf62a2d497d849819b5ae9b0a14b54f27620b"
                    ]
                },
                {
                    "command": [
                        "rewrite (testbit_signed_neg i j (n-1)%Z); auto; omega.",
                        "VernacExtend",
                        "14583b37e47dc31383feb9d8b6b190dff58b8590"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.signed_eq_unsigned in H by (apply Int.signed_positive; auto).",
                        "VernacExtend",
                        "09159db0f5a0ff3784a8330cfd5e44644a886bac"
                    ]
                },
                {
                    "command": [
                        "unfold Int.testbit in *.",
                        "VernacExtend",
                        "d259758212ada665882b3a443d2e7b91bd9d3051"
                    ]
                },
                {
                    "command": [
                        "transitivity false.",
                        "VernacExtend",
                        "f4d1c1c9ea7a9a062df4dcfb71e16a45e0d7bfe6"
                    ]
                },
                {
                    "command": [
                        "apply (Int.Ztestbit_above (Z.to_nat (n-1))).",
                        "VernacExtend",
                        "7d622ea1b01d42f75606def0e932856deaf32bb8"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_two_p.",
                        "VernacExtend",
                        "e21f56ecabf68cda5e6534a700cce51443bacebe"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.id by omega.",
                        "VernacExtend",
                        "c185dccc0e1f88582cb4af347b0558035bf7be39"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i).",
                        "VernacExtend",
                        "c3a9e19e3d86215533851fab70582d6c3a47266e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.id by omega.",
                        "VernacExtend",
                        "c185dccc0e1f88582cb4af347b0558035bf7be39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply (Int.Ztestbit_above (Z.to_nat (n-1))).",
                        "VernacExtend",
                        "7d622ea1b01d42f75606def0e932856deaf32bb8"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_two_p.",
                        "VernacExtend",
                        "e21f56ecabf68cda5e6534a700cce51443bacebe"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.id by omega.",
                        "VernacExtend",
                        "c185dccc0e1f88582cb4af347b0558035bf7be39"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i).",
                        "VernacExtend",
                        "c3a9e19e3d86215533851fab70582d6c3a47266e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.id by omega.",
                        "VernacExtend",
                        "c185dccc0e1f88582cb4af347b0558035bf7be39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_ext_inrange",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n Int.zwordsize); [ | apply Int.zero_ext_above; auto].",
                        "VernacExtend",
                        "b9b2d00cfef6335dc98f879685f0908eca2cbc39"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt n 0).",
                        "VernacExtend",
                        "855490d2fe4809278fc9f7fce136b34b611d9ee4"
                    ]
                },
                {
                    "command": [
                        "assert (n-1 < 0) by omega.",
                        "VernacExtend",
                        "477a9a83a8c10a6f644e12ddba9eaa1e5959c39c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite two_p_neg in H by omega.",
                        "VernacExtend",
                        "c83557100842a312760510d7386e20d771a87bcc"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i).",
                        "VernacExtend",
                        "c3a9e19e3d86215533851fab70582d6c3a47266e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq n 0).",
                        "VernacExtend",
                        "4176a7e0059dea26cced6a60ea81dc6dae3cc010"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assert (Int.unsigned i = 0) by (pose proof (Int.unsigned_range i); omega).",
                        "VernacExtend",
                        "dcce4a10c3304b19a1c215328dd9c02a68db7775"
                    ]
                },
                {
                    "command": [
                        "clear - H0.",
                        "VernacExtend",
                        "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_unsigned i).",
                        "VernacExtend",
                        "2c5606931407d1321e14855ad7036622fefd27ca"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assert (0 < n < Int.zwordsize) by omega.",
                        "VernacExtend",
                        "35fca6cfebd1bccc7f7a67959d9cd516d9008f02"
                    ]
                },
                {
                    "command": [
                        "clear - H H0.",
                        "VernacExtend",
                        "58e1de226be4685579a9469cbd7d2405ded5f7cf"
                    ]
                },
                {
                    "command": [
                        "apply Int.same_bits_eq; intros j ?.",
                        "VernacExtend",
                        "d1657f49d45dca9c898047b005ac8421f47e5e73"
                    ]
                },
                {
                    "command": [
                        "rewrite (Int.bits_zero_ext n i j) by omega.",
                        "VernacExtend",
                        "f246b0720f31097bc7ee27c261abd4c2497496ac"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto.",
                        "VernacExtend",
                        "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "unfold Int.testbit.",
                        "VernacExtend",
                        "ff8778ff3b6851d64d02b0610ee15115116cccb8"
                    ]
                },
                {
                    "command": [
                        "apply (Int.Ztestbit_above (Z.to_nat n)); [ | rewrite Z2Nat.id by omega; omega].",
                        "VernacExtend",
                        "0e9529f0a294ea86b15cd1bb5016bedb5142403a"
                    ]
                },
                {
                    "command": [
                        "rewrite two_power_nat_two_p.",
                        "VernacExtend",
                        "e21f56ecabf68cda5e6534a700cce51443bacebe"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.id by omega.",
                        "VernacExtend",
                        "c185dccc0e1f88582cb4af347b0558035bf7be39"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i); omega.",
                        "VernacExtend",
                        "0e7d5c21009a25f28cb82c3dfeb835ee1340e5c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}