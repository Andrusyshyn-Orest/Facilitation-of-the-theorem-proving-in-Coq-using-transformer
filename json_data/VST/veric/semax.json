{
    "filename": "veric/semax.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.veric.juicy_base.",
            "VernacRequire",
            "7a63c83b17327e7ee5b9ab38e2ae76d2d22b7583"
        ],
        [
            "Require Import VST.veric.juicy_mem VST.veric.juicy_mem_lemmas VST.veric.juicy_mem_ops.",
            "VernacRequire",
            "4edea22ed097eae73c71575616e8737d44659699"
        ],
        [
            "Require Import VST.veric.res_predicates.",
            "VernacRequire",
            "768b4200cf583d1957d2bf97075bbe3044eb3f8d"
        ],
        [
            "Require Import VST.veric.extend_tc.",
            "VernacRequire",
            "564e662a5c0df2661afbdfb7024deca6c9efae61"
        ],
        [
            "Require Import VST.veric.Clight_seplog.",
            "VernacRequire",
            "1c1f0c496e85cc069d08a5823a2b1fa13ca08a68"
        ],
        [
            "Require Import VST.veric.Clight_assert_lemmas.",
            "VernacRequire",
            "25afaab0c241e430b633dbbcf2ff965bfaec8c50"
        ],
        [
            "Require Import VST.veric.Clight_new.",
            "VernacRequire",
            "2ae3f5ae880c1748dab70e2b63c40995b60bc670"
        ],
        [
            "Require Import VST.veric.Clight_lemmas.",
            "VernacRequire",
            "02532b9c71acd440dec2f77aca2af2a0760847e8"
        ],
        [
            "Require Import VST.sepcomp.extspec.",
            "VernacRequire",
            "24d2770c0d56f347a534d202b9e8a12e01b32823"
        ],
        [
            "Require Import VST.sepcomp.step_lemmas.",
            "VernacRequire",
            "bef7dc85dfb9e72dc09016b7571a9f43c7c62d70"
        ],
        [
            "Require Import VST.veric.juicy_safety.",
            "VernacRequire",
            "0cc657ca5e84e3a20e4e408ba92c2b105e94e9ba"
        ],
        [
            "Require Import VST.veric.juicy_extspec.",
            "VernacRequire",
            "aa1a3d20d1c24cf96c29cb4ebe5c176da44989a3"
        ],
        [
            "Require Import VST.veric.tycontext.",
            "VernacRequire",
            "f8951535af03e9380f7d0a99afae06d1059d4422"
        ],
        [
            "Require Import VST.veric.expr2.",
            "VernacRequire",
            "bf07dfc9a4517a977ef232bb1ba25ac9aaf5c2d9"
        ],
        [
            "Require Import VST.veric.expr_lemmas.",
            "VernacRequire",
            "81bb802649798b3a2fe3b7de6d0b8a7bb02f9691"
        ],
        [
            "Require Import VST.veric.own.",
            "VernacRequire",
            "5e9d4347a8f5c7601a2319fc2118c8d0952b82f5"
        ],
        [
            "Local Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "7386604700c7eb05ef0ae2947828bc909568dab7"
        ],
        [
            "Local Open Scope pred.",
            "VernacOpenCloseScope",
            "61fa11c1c3de9a21b4672e107d4df33b39563e17"
        ],
        [
            "Definition closed_wrt_modvars c (F: assert) : Prop := closed_wrt_vars (modifiedvars c) F.",
            "VernacDefinition",
            "7787a7901be424792aeaae1a49d2d25629098203"
        ],
        [
            "Definition genv_symb_injective {F V} (ge: Genv.t F V) : extspec.injective_PTree block.",
            "VernacDefinition",
            "7d1b690eeaec7e03176cc12ce147cd26260d944c"
        ],
        [
            "exists (Genv.genv_symb ge).",
            "VernacExtend",
            "ca9c92c68aff4027bfe1c0ae3f82deb7b210bd45"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "eapply Genv.genv_vars_inj; eauto.",
            "VernacExtend",
            "07755eac47e4af64187cf65e2810a81d3f88cffe"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition jsafeN {Z} (Hspec : juicy_ext_spec Z) (ge: genv) := @jsafeN_ genv _ _ genv_symb_injective (cl_core_sem ge) Hspec ge.",
            "VernacDefinition",
            "5b2bf23da493db6f5c2090d3b547fe4e87a63c8c"
        ],
        [
            "Lemma ext_join_approx : forall {Z} (z : Z) n g, joins g (Some (ghost_PCM.ext_ref z, NoneP) :: nil) -> joins (ghost_fmap (approx n) (approx n) g) (Some (ghost_PCM.ext_ref z, NoneP) :: nil).",
            "VernacStartTheoremProof",
            "fe91bb9882d3ae59e46f51f2e08e0d3edb0c18ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "change (Some (ghost_PCM.ext_ref z, NoneP) :: nil) with (ghost_fmap (approx n) (approx n) (Some (ghost_PCM.ext_ref z, NoneP) :: nil)).",
            "VernacExtend",
            "02a06980d5b0bebda71282fff5c060090b3117e7"
        ],
        [
            "eexists; apply ghost_fmap_join; eauto.",
            "VernacExtend",
            "f202ba8bd1908f32a230df8334b3be29c25af8e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ext_join_unapprox : forall {Z} (z : Z) n g, joins (ghost_fmap (approx n) (approx n) g) (Some (ghost_PCM.ext_ref z, NoneP) :: nil) -> joins g (Some (ghost_PCM.ext_ref z, NoneP) :: nil).",
            "VernacStartTheoremProof",
            "2772f7086ded66036902000bdbd7f5ac8df58f76"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as (g' & J).",
            "VernacExtend",
            "d328727d82167a6649e06db6e3281ef586abd311"
        ],
        [
            "destruct g; [eexists; constructor|].",
            "VernacExtend",
            "35c8206b8b75f723df2dffcd970d388a38aa648c"
        ],
        [
            "inv J.",
            "VernacExtend",
            "af4159c400d56d81d2186aefc1a78bfbad5c1e40"
        ],
        [
            "exists (a3 :: g); repeat constructor.",
            "VernacExtend",
            "b97be6edad2695addccf846f0a3208a2a968a21c"
        ],
        [
            "destruct o; inv H4; constructor.",
            "VernacExtend",
            "2aadf98e04567b23264b4097bd624ba1d9d7295d"
        ],
        [
            "destruct p; inv H1; constructor; simpl in *; auto.",
            "VernacExtend",
            "09cc142bbb3a46f3f474bdf842ad318f34d47c39"
        ],
        [
            "destruct p; simpl in *.",
            "VernacExtend",
            "21fa2abfdaae8a18ac0ac4debd1bca139800054d"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "7549fbb600c3af6072a6d21bdcba999a253a2e01"
        ],
        [
            "inj_pair_tac.",
            "VernacExtend",
            "7554d21c8c2172d16c51fb98f9060c21cdadf88e"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "unfold NoneP; f_equal; auto.",
            "VernacExtend",
            "0a557a8ed529b6074850deebf0e04672212222f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition ext_compat {Z} (ora : Z) : mpred := fun w => joins (ghost_of w) (Some (ghost_PCM.ext_ref ora, NoneP) :: nil).",
            "VernacDefinition",
            "038d46817c5d218a6ff113f1fa6210391a061155"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "repeat intro.",
            "VernacExtend",
            "b1b5d9b3004bf4634299c208df98406e88278608"
        ],
        [
            "erewrite age1_ghost_of by eauto.",
            "VernacExtend",
            "b5672dab89c3bd55099a5e1a73382c18363a5d11"
        ],
        [
            "apply ext_join_approx; auto.",
            "VernacExtend",
            "db1c4035f62ba60d2c4aaea31197c01b180574a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition assert_safe (Espec : OracleKind) (ge: genv) ve te (ctl: cont) : assert := fun rho => bupd (fun w => forall ora (jm:juicy_mem), ext_compat ora w -> rho = construct_rho (filter_genv ge) ve te -> m_phi jm = w -> jsafeN (@OK_spec Espec) ge (level w) ora (State ve te ctl) jm).",
            "VernacDefinition",
            "9c574da745026361384a94871717e8ba8f8cff91"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro; intros.",
            "VernacExtend",
            "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct (oracle_unage _ _ H) as [jm0 [? ?]].",
            "VernacExtend",
            "11dcf5b648193ccc0c2f6716ace67c79ccdbe04d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "specialize (H0 ora jm0); spec H0.",
            "VernacExtend",
            "11d8412384f13b7cde62ceac4949fa4a063edf63"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "erewrite age1_ghost_of in H1 by eauto.",
            "VernacExtend",
            "4edb5b46f595cba7f73a95a91c305a4cd959157f"
        ],
        [
            "eapply ext_join_unapprox; eauto.",
            "VernacExtend",
            "203d08c0fe18192e975bff4ae23296c25cc62d6a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "specialize (H0 (eq_refl _) (eq_refl _)).",
            "VernacExtend",
            "15c616bd46b4683e75d70ddcda65e974b08fc0d3"
        ],
        [
            "forget (State ve te ctl) as c.",
            "VernacExtend",
            "e763e30b531ba3ceec5b4ae6ae35702feb1070c7"
        ],
        [
            "clear H ve te ctl.",
            "VernacExtend",
            "6a7db0af97870defae8c54158c1e809fc2a6d7d0"
        ],
        [
            "change (level (m_phi jm)) with (level jm).",
            "VernacExtend",
            "c67b6ac5c28fa487cc540ba83c0fbbbd9cf4fb32"
        ],
        [
            "change (level (m_phi jm0)) with (level jm0) in H0.",
            "VernacExtend",
            "b3c7c5e6ade86026005fb4bb17681917c8c654e3"
        ],
        [
            "eapply age_safe; eauto.",
            "VernacExtend",
            "a1eb22619c2cdf4331edf425ade7ded946fe2f85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition list2opt {T: Type} (vl: list T) : option T := match vl with nil => None | x::_ => Some x end.",
            "VernacDefinition",
            "291a15121d4204fada2398f02837e30c15d0e294"
        ],
        [
            "Definition match_venv (ve: venviron) (vars: list (ident * type)) := forall id, match ve id with Some (b,t) => In (id,t) vars | _ => True end.",
            "VernacDefinition",
            "0a6bd721d55051ca0c6721b1bc34b8e5ed2f1c44"
        ],
        [
            "Definition guard_environ (Delta: tycontext) (f: option function) (rho: environ) : Prop := typecheck_environ Delta rho /\\ match f with | Some f' => match_venv (ve_of rho) (fn_vars f') /\\ ret_type Delta = fn_return f' | None => True end.",
            "VernacDefinition",
            "e6f2164537ed8362c5bc4e62f4082ec04a983a6e"
        ],
        [
            "Lemma guard_environ_e1: forall Delta f rho, guard_environ Delta f rho -> typecheck_environ Delta rho.",
            "VernacStartTheoremProof",
            "cc8de21fbe5c36b5824c64115a7107ab245a74a9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition _guard (Espec : OracleKind) (gx: genv) (Delta: tycontext) (P : assert) (f: option function) (ctl: cont) : pred nat := ALL tx : Clight.temp_env, ALL vx : env, let rho := construct_rho (filter_genv gx) vx tx in !! guard_environ Delta f rho && P rho && funassert Delta rho >=> assert_safe Espec gx vx tx ctl rho.",
            "VernacDefinition",
            "7024317068a1c101124eacc76c801791c4de0455"
        ],
        [
            "Definition guard (Espec : OracleKind) (gx: genv) (Delta: tycontext) (P : assert) (ctl: cont) : pred nat := _guard Espec gx Delta P (current_function ctl) ctl.",
            "VernacDefinition",
            "688d59aebd47ce3efdac9a7ebf85eb0320a70b47"
        ],
        [
            "Definition zap_fn_return (f: function) : function := mkfunction Tvoid f.(fn_callconv) f.(fn_params) f.(fn_vars) f.(fn_temps) f.(fn_body).",
            "VernacDefinition",
            "5f53d2be408f307bf79404cd012557b554557aa8"
        ],
        [
            "Definition exit_cont (ek: exitkind) (vl: option val) (k: cont) : cont := match ek with | EK_normal => k | EK_break => break_cont k | EK_continue => continue_cont k | EK_return => match vl, call_cont k with | Some v, Kcall (Some x) f ve te :: k' => Kseq (Sreturn None) :: Kcall None (zap_fn_return f) ve (PTree.set x v te) :: k' | _,_ => Kseq (Sreturn None) :: call_cont k end end.",
            "VernacDefinition",
            "01c207839ccc2a815f7823214db6343aab7aedf2"
        ],
        [
            "Definition rguard (Espec : OracleKind) (gx: genv) (Delta: tycontext) (R : ret_assert) (ctl: cont) : pred nat := ALL ek: exitkind, ALL vl: option val, _guard Espec gx Delta (proj_ret_assert R ek vl) (current_function ctl) (exit_cont ek vl ctl).",
            "VernacDefinition",
            "203066069d95a804d88551fdd506c6c22cc26b9f"
        ],
        [
            "Record semaxArg :Type := SemaxArg { sa_Delta: tycontext; sa_P: assert; sa_c: statement; sa_R: ret_assert }.",
            "VernacInductive",
            "28b1df55846818f3f793c1d1b70059de7534c3ef"
        ],
        [
            "Definition ext_spec_pre' (Espec: OracleKind) (ef: external_function) (x': ext_spec_type OK_spec ef) (ge_s: injective_PTree block) (ts: list typ) (args: list val) (z: OK_ty) : pred juicy_mem := exist (hereditary age) (ext_spec_pre OK_spec ef x' ge_s ts args z) (JE_pre_hered _ _ _ _ _ _ _ _).",
            "VernacDefinition",
            "285b96a25c79aabcecfe4d70ea82f30ac420f13c"
        ],
        [
            "Program Definition ext_spec_post' (Espec: OracleKind) (ef: external_function) (x': ext_spec_type OK_spec ef) (ge_s: injective_PTree block) (tret: option typ) (ret: option val) (z: OK_ty) : pred juicy_mem := exist (hereditary age) (ext_spec_post OK_spec ef x' ge_s tret ret z) (JE_post_hered _ _ _ _ _ _ _ _).",
            "VernacDefinition",
            "ce098730023059fd20582848a01416c3b1e5d9b4"
        ],
        [
            "Definition juicy_mem_pred (P : pred rmap) (jm: juicy_mem): pred nat := # diamond fashionM (exactly (m_phi jm) && P).",
            "VernacDefinition",
            "53cade0e078fc95240372325e65b7aab4c7ec1e0"
        ],
        [
            "Fixpoint make_ext_args (gx: genviron) (ids: list ident) (vl: list val) := match ids, vl with | id::ids', v::vl' => env_set (make_ext_args gx ids' vl') id v | _, v::vl' => env_set (make_ext_args gx ids vl') 1%positive v | _, _ => mkEnviron gx (Map.empty _) (Map.empty _) end.",
            "VernacFixpoint",
            "78d0433f6b9fcb348b4397df0116482cbc9a5587"
        ],
        [
            "Definition make_ext_rval (gx: genviron) (v: option val):= match v with | Some v' => mkEnviron gx (Map.empty _) (Map.set 1%positive v' (Map.empty _)) | None => mkEnviron gx (Map.empty _) (Map.empty _) end.",
            "VernacDefinition",
            "e311d6e2063a1cbe68c77f875d7aabd545764805"
        ],
        [
            "Definition semax_external (Hspec: OracleKind) (ids: list ident) ef (A: TypeTree) (P Q: forall ts, dependent_type_functor_rec ts (AssertTT A) (pred rmap)): pred nat := ALL gx: genv, ALL Ts: list Type, ALL x: (dependent_type_functor_rec Ts A (pred rmap)), |> ALL F: pred rmap, ALL ts: list typ, ALL args: list val, !!Val.has_type_list args (sig_args (ef_sig ef)) && juicy_mem_op (P Ts x (make_ext_args (filter_genv gx) ids args) * F) >=> EX x': ext_spec_type OK_spec ef, (ALL z:_, juicy_mem_op (ext_compat z) --> ext_spec_pre' Hspec ef x' (genv_symb_injective gx) ts args z) && ! ALL tret: option typ, ALL ret: option val, ALL z': OK_ty, ext_spec_post' Hspec ef x' (genv_symb_injective gx) tret ret z' >=> juicy_mem_op (Q Ts x (make_ext_rval (filter_genv gx) ret) * F).",
            "VernacDefinition",
            "33a212d9ebe86d7182e49e73985de4a1bf41ab7e"
        ],
        [
            "Definition tc_option_val (sig: type) (ret: option val) := match sig, ret with | Tvoid, None => True | Tvoid, Some _ => False | ty, Some v => tc_val ty v | _, _ => False end.",
            "VernacDefinition",
            "de07617b7d7f63615fbc358cd55495282351335e"
        ],
        [
            "Fixpoint zip_with_tl {A : Type} (l1 : list A) (l2 : typelist) : list (A*type) := match l1, l2 with | a::l1', Tcons b l2' => (a,b)::zip_with_tl l1' l2' | _, _ => nil end.",
            "VernacFixpoint",
            "cd5834c6b1aad3753311ac824bd4e3b2864b2232"
        ],
        [
            "Definition believe_external (Hspec: OracleKind) (gx: genv) (v: val) (fsig: funsig) cc (A: TypeTree) (P Q: forall ts, dependent_type_functor_rec ts (AssertTT A) (pred rmap)): pred nat := match Genv.find_funct gx v with | Some (External ef sigargs sigret cc') => let ids := fst (split (fst fsig)) in !! (fsig = (zip_with_tl ids sigargs, sigret) /\\ cc'=cc /\\ ef_sig ef = mksignature (typlist_of_typelist (type_of_params (fst fsig))) (opttyp_of_type (snd fsig)) cc /\\ length (typelist2list sigargs)=length ids) && semax_external Hspec ids ef A P Q && ! (ALL ts: list Type, ALL x: dependent_type_functor_rec ts A (pred rmap), ALL ret:option val, Q ts x (make_ext_rval (filter_genv gx) ret) && !!has_opttyp ret (opttyp_of_type (snd fsig)) >=> !! tc_option_val sigret ret) | _ => FF end.",
            "VernacDefinition",
            "7db52dcfb0a17601eec98703dc74938ffca6b7f2"
        ],
        [
            "Definition fn_funsig (f: function) : funsig := (fn_params f, fn_return f).",
            "VernacDefinition",
            "961bc0a7c1804bd7d8fbe867421e4c1d53ebb846"
        ],
        [
            "Definition var_sizes_ok (cenv: composite_env) (vars: list (ident*type)) := Forall (fun var : ident * type => @sizeof cenv (snd var) <= Ptrofs.max_unsigned)%Z vars.",
            "VernacDefinition",
            "b1a8246128cde20c6641dc9a82b054eab99b2b9d"
        ],
        [
            "Definition var_block' (sh: Share.t) (cenv: composite_env) (idt: ident * type) (rho: environ): mpred := !! (sizeof (snd idt) <= Ptrofs.max_unsigned)%Z && (memory_block sh (sizeof (snd idt))) (eval_lvar (fst idt) (snd idt) rho).",
            "VernacDefinition",
            "bbf0d5b749e2003706033a710aa8e331330d2972"
        ],
        [
            "Definition stackframe_of' (cenv: composite_env) (f: Clight.function) : assert := fold_right (fun P Q rho => P rho * Q rho) (fun rho => emp) (map (fun idt => var_block' Share.top cenv idt) (Clight.fn_vars f)).",
            "VernacDefinition",
            "3589f8d74e04aabacbedbb489f63ea885351faa4"
        ],
        [
            "Definition believe_internal_ (semax:semaxArg -> pred nat) (gx: genv) (Delta: tycontext) v (fsig: funsig) cc (A: TypeTree) (P Q: forall ts, dependent_type_functor_rec ts (AssertTT A) (pred rmap)) : pred nat := (EX b: block, EX f: function, prop (v = Vptr b Ptrofs.zero /\\ Genv.find_funct_ptr gx b = Some (Internal f) /\\ Forall (fun it => complete_type (genv_cenv gx) (snd it) = true) (fn_vars f) /\\ list_norepet (map (@fst _ _) f.(fn_params) ++ map (@fst _ _) f.(fn_temps)) /\\ list_norepet (map (@fst _ _) f.(fn_vars)) /\\ var_sizes_ok (genv_cenv gx) (f.(fn_vars)) /\\ fsig = fn_funsig f /\\ f.(fn_callconv) = cc) && ALL ts: list Type, ALL x : dependent_type_functor_rec ts A (pred rmap), |> semax (SemaxArg (func_tycontext' f Delta) (fun rho => (bind_args f.(fn_params) f.(fn_vars) (P ts x) rho * stackframe_of' (genv_cenv gx) f rho) && funassert (func_tycontext' f Delta) rho) (Ssequence f.(fn_body) (Sreturn None)) (frame_ret_assert (function_body_ret_assert (fn_return f) (Q ts x)) (stackframe_of' (genv_cenv gx) f)))).",
            "VernacDefinition",
            "0b616728a1a2fad6d26c01b60d571ddc9f63dfd3"
        ],
        [
            "Definition empty_environ (ge: genv) := mkEnviron (filter_genv ge) (Map.empty _) (Map.empty _).",
            "VernacDefinition",
            "3c6b9eb743ad8b1ba72393f09c3ac00564005ad8"
        ],
        [
            "Definition claims (ge: genv) (Delta: tycontext) v fsig cc A P Q : Prop := exists id HP HQ, (glob_specs Delta)!id = Some (mk_funspec fsig cc A P Q HP HQ) /\\ exists b, Genv.find_symbol ge id = Some b /\\ v = Vptr b Ptrofs.zero.",
            "VernacDefinition",
            "e7b6082a140533f0b5172945dc6dfe77e522f3e1"
        ],
        [
            "Definition believepred (Espec: OracleKind) (semax: semaxArg -> pred nat) (Delta: tycontext) (gx: genv) (Delta': tycontext) : pred nat := ALL v:val, ALL fsig: funsig, ALL cc: calling_convention, ALL A: TypeTree, ALL P: forall ts, dependent_type_functor_rec ts (AssertTT A) mpred, ALL Q: forall ts, dependent_type_functor_rec ts (AssertTT A) mpred, !! claims gx Delta' v fsig cc A P Q --> (believe_external Espec gx v fsig cc A P Q || believe_internal_ semax gx Delta v fsig cc A P Q).",
            "VernacDefinition",
            "3d4eaadd3c0e95f622e673639a29c2da9ff8f874"
        ],
        [
            "Definition semax_ {CS: compspecs} (Espec: OracleKind) (semax: semaxArg -> pred nat) (a: semaxArg) : pred nat := match a with SemaxArg Delta P c R => ALL gx: genv, ALL Delta': tycontext, !! (tycontext_sub Delta Delta' /\\ genv_cenv gx = cenv_cs)--> (believepred Espec semax Delta' gx Delta') --> ALL k: cont, ALL F: assert, (!! (closed_wrt_modvars c F) && rguard Espec gx Delta' (frame_ret_assert R F) k) --> guard Espec gx Delta' (fun rho => F rho * P rho) (Kseq c :: k) end.",
            "VernacDefinition",
            "f1162ea6b1b57091ead9a68ad5d8335411ca337c"
        ],
        [
            "Definition semax' {CS: compspecs} (Espec: OracleKind) Delta P c R : pred nat := HORec (semax_ Espec) (SemaxArg Delta P c R).",
            "VernacDefinition",
            "b4f50a94be7d89a0ad1172b02a827f6cffb1ef6f"
        ],
        [
            "Definition believe_internal {CS: compspecs} (Espec: OracleKind) (gx: genv) (Delta: tycontext) v (fsig: funsig) cc (A: TypeTree) (P Q: forall ts, dependent_type_functor_rec ts (AssertTT A) (pred rmap)) : pred nat := (EX b: block, EX f: function, prop (v = Vptr b Ptrofs.zero /\\ Genv.find_funct_ptr gx b = Some (Internal f) /\\ Forall (fun it => complete_type (genv_cenv gx) (snd it) = true) (fn_vars f) /\\ list_norepet (map (@fst _ _) f.(fn_params) ++ map (@fst _ _) f.(fn_temps)) /\\ list_norepet (map (@fst _ _) f.(fn_vars)) /\\ var_sizes_ok (genv_cenv gx) (f.(fn_vars)) /\\ fsig = fn_funsig f /\\ f.(fn_callconv) = cc) && ALL ts: list Type, ALL x : dependent_type_functor_rec ts A (pred rmap), |> semax' Espec (func_tycontext' f Delta) (fun rho => (bind_args f.(fn_params) f.(fn_vars) (P ts x) rho * stackframe_of' (genv_cenv gx) f rho) && funassert (func_tycontext' f Delta) rho) (Ssequence f.(fn_body) (Sreturn None)) (frame_ret_assert (function_body_ret_assert (fn_return f) (Q ts x)) (stackframe_of' (genv_cenv gx) f))).",
            "VernacDefinition",
            "a4ea77714fd888019088a969bf2d28d136612499"
        ],
        [
            "Definition believe {CS: compspecs} (Espec:OracleKind) (Delta: tycontext) (gx: genv) (Delta': tycontext): pred nat := ALL v:val, ALL fsig: funsig, ALL cc: calling_convention, ALL A: TypeTree, ALL P: (forall ts, dependent_type_functor_rec ts (AssertTT A) (pred rmap)), ALL Q: (forall ts, dependent_type_functor_rec ts (AssertTT A) (pred rmap)), !! claims gx Delta' v fsig cc A P Q --> (believe_external Espec gx v fsig cc A P Q || believe_internal Espec gx Delta v fsig cc A P Q).",
            "VernacDefinition",
            "d5b210ae41dd18d5c8282941d6d8eb733d43cca9"
        ],
        [
            "Lemma semax_fold_unfold : forall {CS: compspecs} (Espec : OracleKind), semax' Espec = fun Delta P c R => ALL gx: genv, ALL Delta': tycontext, !! (tycontext_sub Delta Delta' /\\ genv_cenv gx = cenv_cs) --> believe Espec Delta' gx Delta' --> ALL k: cont, ALL F: assert, (!! (closed_wrt_modvars c F) && rguard Espec gx Delta' (frame_ret_assert R F) k) --> guard Espec gx Delta' (fun rho => F rho * P rho) (Kseq c :: k).",
            "VernacStartTheoremProof",
            "5b85fc8281608e792a9b98222a747823cb59aa7e"
        ],
        [
            "intros ? ?.",
            "VernacExtend",
            "546ddfdd2482db9e439533251e7f222ee06f71aa"
        ],
        [
            "extensionality G P.",
            "VernacExtend",
            "ea277a89bebb64a36a8a24d28cb6c3ea34f654cb"
        ],
        [
            "extensionality c R.",
            "VernacExtend",
            "222db0900b160ef01c4bf60016a40630acaab1d6"
        ],
        [
            "unfold semax'.",
            "VernacExtend",
            "f869116c8cc3f0d73b2b0931cd25cb5082e14b47"
        ],
        [
            "pattern (HORec (semax_ Espec)) at 1; rewrite HORec_fold_unfold.",
            "VernacExtend",
            "becdb37d8aecad229571ce583b09ef2292bc34a1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply prove_HOcontractive.",
            "VernacExtend",
            "61263284087943425ed002323458806bb2702b75"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold semax_.",
            "VernacExtend",
            "6c771309e7f219505faba14534c137fedda58fb7"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "sub_unfold.",
            "VernacExtend",
            "f7aadedfde71db47ad4af79c7a3bdaa890b7779f"
        ],
        [
            "do 2 (apply subp_allp; intros).",
            "VernacExtend",
            "d5a8495ea8d3129d5a64ad741769433e2e6ca2a9"
        ],
        [
            "apply subp_imp; [auto with contractive | ].",
            "VernacExtend",
            "7b6b023f3bfd59108d7be3d4e39d3fdb8dbe9081"
        ],
        [
            "apply subp_imp; [ | auto 50 with contractive].",
            "VernacExtend",
            "06f75ae63f660bd52e22b994a7099e262c7fd7e9"
        ],
        [
            "apply subp_allp; intros.",
            "VernacExtend",
            "011394d3151cbaf061268aec89d5a26aaef385b8"
        ],
        [
            "apply subp_allp; intros.",
            "VernacExtend",
            "011394d3151cbaf061268aec89d5a26aaef385b8"
        ],
        [
            "apply subp_allp; intros.",
            "VernacExtend",
            "011394d3151cbaf061268aec89d5a26aaef385b8"
        ],
        [
            "apply subp_allp; intros.",
            "VernacExtend",
            "011394d3151cbaf061268aec89d5a26aaef385b8"
        ],
        [
            "apply subp_allp; intros.",
            "VernacExtend",
            "011394d3151cbaf061268aec89d5a26aaef385b8"
        ],
        [
            "apply subp_allp; intros.",
            "VernacExtend",
            "011394d3151cbaf061268aec89d5a26aaef385b8"
        ],
        [
            "apply subp_imp; intros; [ auto 50 with contractive | ].",
            "VernacExtend",
            "2cc1e2bfdc5495328f9a062c0d869c79aa0e7ed1"
        ],
        [
            "apply subp_orp; [ auto 50 with contractive | ].",
            "VernacExtend",
            "9cbd580dea64a654bbc1c9522ec35a8778da2a1e"
        ],
        [
            "apply subp_exp; intros.",
            "VernacExtend",
            "70840b9b9885412ab7136d9bcaab913397d311a9"
        ],
        [
            "apply subp_exp; intros.",
            "VernacExtend",
            "70840b9b9885412ab7136d9bcaab913397d311a9"
        ],
        [
            "auto 50 with contractive.",
            "VernacExtend",
            "3de148cffb2859c6fb1d18f0e7994692829e16e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition weakest_pre {CS: compspecs} (Espec: OracleKind) (Delta: tycontext) c Q: assert := fun rho: environ => ALL gx: genv, ALL Delta': tycontext, !! (tycontext_sub Delta Delta' /\\ genv_cenv gx = cenv_cs) --> unfash (believe Espec Delta' gx Delta') --> ALL k: cont, ALL F: assert, unfash (!! (closed_wrt_modvars c F) && rguard Espec gx Delta' (frame_ret_assert Q F) k) --> ALL tx : Clight.temp_env, ALL vx : env, (!! (rho = construct_rho (filter_genv gx) vx tx)) --> ((!! guard_environ Delta' (current_function (Kseq c :: k)) rho && funassert Delta' rho) --> (F rho -* assert_safe Espec gx vx tx (Kseq c :: k) rho)).",
            "VernacDefinition",
            "22cacfde9d95158144bd5b35dff397c8e1dd8aaf"
        ],
        [
            "Opaque semax'.",
            "VernacSetOpacity",
            "f2fe4973b885fe1778eba2fe5424f6586f787d65"
        ],
        [
            "Definition semax {CS: compspecs} (Espec: OracleKind) (Delta: tycontext) P c Q := forall n, semax' Espec Delta P c Q n.",
            "VernacDefinition",
            "949d322146505b09cfa29b86dddca9d02911c3bd"
        ],
        [
            "Lemma any_level_pred_nat: forall P: pred nat, (forall n, P n) <-> TT |-- P.",
            "VernacStartTheoremProof",
            "6a4c35908fc048faf0cdf803f8e867b2fd6f3a2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "hnf; intros; auto.",
            "VernacExtend",
            "8598c1c028ba31dca0e657604aceeb3661b73623"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "hnf in H; auto.",
            "VernacExtend",
            "cef01ded3eb3ba22c7dce7c366a34778e7e7b471"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_weakest_pre_aux: forall {A: Type} (P: pred nat) (Q R: A -> pred rmap), P = fash (ALL x: A, Q x --> R x) -> (TT |-- P <-> forall x, Q x |-- R x).",
            "VernacStartTheoremProof",
            "ad6f315b0cadf384322413a41c5177db30eb25ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (TT |-- ALL x: A, Q x --> R x <-> (forall x : A, Q x |-- R x)).",
            "VernacExtend",
            "03cf48194f61898b02e8d31c36bf2430d1d18ff3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- (TT_and (Q x)).",
            "VernacExtend",
            "104505d3a8df6a685f2384eaaaee002b981805a1"
        ],
        [
            "rewrite imp_andp_adjoint.",
            "VernacExtend",
            "8818d6fa755caf005a09aa494c1e5bc0faafa798"
        ],
        [
            "eapply derives_trans; [exact H0 |].",
            "VernacExtend",
            "5b0f3ebdbbfbfaad07f2adbd6b6c0e45f674f932"
        ],
        [
            "apply (allp_left _ x); intros.",
            "VernacExtend",
            "b3cb8915c5f87bfc1f065975cbc6c7e4b56d2c3c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply allp_right; intros.",
            "VernacExtend",
            "a1fd790004a550f0f66000a3c13277ba11753894"
        ],
        [
            "rewrite <- imp_andp_adjoint.",
            "VernacExtend",
            "283e51f1c15ef1dd423029659a66b431b956e290"
        ],
        [
            "rewrite (TT_and (Q v)).",
            "VernacExtend",
            "fea4879a8ba365facf8707501efce174e20e0548"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- H0, H.",
            "VernacExtend",
            "99cac8658cee7b0a177fa471bf63b775311a93ad"
        ],
        [
            "clear; forget (ALL x : A , Q x --> R x) as P; clear.",
            "VernacExtend",
            "1f04afb7fb406d15915563b7a5b8eb0cf822fdf0"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold fash in H.",
            "VernacExtend",
            "f9423400a9de82b5f539f19f39154ee3b40b620e"
        ],
        [
            "hnf in H |- *.",
            "VernacExtend",
            "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
        ],
        [
            "intros; simpl in H.",
            "VernacExtend",
            "5e9558e61e8e1e29e5532c2a23617df43497445a"
        ],
        [
            "eapply H; auto.",
            "VernacExtend",
            "7f0e95e9e187fdae85271fdd95c588971782eddb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold fash.",
            "VernacExtend",
            "cd0be75eecccedc5481b5e628a0ab7e622e11697"
        ],
        [
            "hnf in H |- *.",
            "VernacExtend",
            "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
        ],
        [
            "intros; simpl.",
            "VernacExtend",
            "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unfash_allp: forall {A} {agA: ageable A} {B} (f: B -> pred nat), @unfash _ agA (allp f) = allp (fun x:B => unfash (f x)).",
            "VernacStartTheoremProof",
            "6230d93989611a92753e171174b88a10e5860f9f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "intros ? ? ?.",
            "VernacExtend",
            "288cad254af8b9e4d528c95e5e756cb647bbaed6"
        ],
        [
            "specialize (H b).",
            "VernacExtend",
            "41947216987481e09a86f72f58018dea0b6e041a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "repeat intro.",
            "VernacExtend",
            "b1b5d9b3004bf4634299c208df98406e88278608"
        ],
        [
            "apply (H b).",
            "VernacExtend",
            "17d0a8f5613a4a0b3fae6517b7a9a389cfff37f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fash_TT: forall {A} {agA: ageable A}, @unfash A agA TT = TT.",
            "VernacStartTheoremProof",
            "901c716bd257124e41c07dcda4e823232d1c3566"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; intros ? ?; apply I.",
            "VernacExtend",
            "638ae864df23614ea7445b9b8d7bbc312abadec0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma allp_andp: forall {A} {NA: ageable A} {B: Type} (b0: B) (P: B -> pred A) (Q: pred A), (allp P && Q = allp (fun x => P x && Q))%pred.",
            "VernacStartTheoremProof",
            "87b8dfee104d18756fd50a934763d79ec4a5c21c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "intros ? [? ?] b.",
            "VernacExtend",
            "eb2967ebb76d4894bdac83b7e4aa0bcad57ae0f6"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros ? ?.",
            "VernacExtend",
            "546ddfdd2482db9e439533251e7f222ee06f71aa"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro b.",
            "VernacExtend",
            "069cd7d34a03b833d46b6b4ca32ac31560c50264"
        ],
        [
            "apply (H b).",
            "VernacExtend",
            "17d0a8f5613a4a0b3fae6517b7a9a389cfff37f8"
        ],
        [
            "apply (H b0).",
            "VernacExtend",
            "ac97d30d12c2551aee7c0dc7574e581bfe84f8c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unfash_prop_imp: forall {A} {agA: ageable A} (P: Prop) (Q: pred nat), (@unfash _ agA (prop P --> Q) = prop P --> @unfash _ agA Q)%pred.",
            "VernacStartTheoremProof",
            "6bde1fc8eaf8a46b358cc733dca8fbeb911772ca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; repeat intro.",
            "VernacExtend",
            "9e38f123075f533f61a107985b9c078119980560"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply necR_level'; auto.",
            "VernacExtend",
            "cd296b7d17ffa0e0ada973c33fd6c928ad791f1d"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "specialize (H a (necR_refl _) H1).",
            "VernacExtend",
            "95007a5c2e67b92c5c8bc79ebfe9f7d9ca0f6093"
        ],
        [
            "eapply pred_nec_hereditary; try apply H0.",
            "VernacExtend",
            "8d2b6e6d7e0a5c01c2c539d49fe88d69c3535cb5"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Import age_to.",
            "VernacImport",
            "78bdb21331ae26446e14c987e1a1916269f3af29"
        ],
        [
            "Lemma unfash_imp: forall {A} {NA: ageable A} (P Q: pred nat), (@unfash A _ (P --> Q) = (@unfash A _ P) --> @unfash A _ Q)%pred.",
            "VernacStartTheoremProof",
            "a8e13b8596b7166e31ed3a7d133fb63d26b86454"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; repeat intro.",
            "VernacExtend",
            "9e38f123075f533f61a107985b9c078119980560"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply necR_level'; auto.",
            "VernacExtend",
            "cd296b7d17ffa0e0ada973c33fd6c928ad791f1d"
        ],
        [
            "specialize (H (age_to a' a)).",
            "VernacExtend",
            "7e3b49c831b346e0833f7015ef1d2cc2c89bb12c"
        ],
        [
            "spec H.",
            "VernacExtend",
            "c7a045c1cfd9908cdf3626bbe876cad8b9f0c976"
        ],
        [
            "apply age_to_necR.",
            "VernacExtend",
            "2071fbeebef7b389149f8b082a3b8a27fbbee41a"
        ],
        [
            "spec H.",
            "VernacExtend",
            "c7a045c1cfd9908cdf3626bbe876cad8b9f0c976"
        ],
        [
            "do 3 red.",
            "VernacExtend",
            "0d6fbefd005468a675fae9cce27f1d656e5935fb"
        ],
        [
            "rewrite level_age_to; auto.",
            "VernacExtend",
            "d483c07efd924b470e718cfd48bfa6748545dbc4"
        ],
        [
            "apply necR_level in H0.",
            "VernacExtend",
            "1a6698553707a7cdeeee1ccb290781b0d49804e1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "do 3 red in H.",
            "VernacExtend",
            "f2cac86721997c9b5405b005b4693feaca0bc83f"
        ],
        [
            "rewrite level_age_to in H; auto.",
            "VernacExtend",
            "5988d0321588f8ede24628a33d7cd7d3a9664cf1"
        ],
        [
            "apply necR_level in H0.",
            "VernacExtend",
            "1a6698553707a7cdeeee1ccb290781b0d49804e1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unfash_andp: forall {A} {agA: ageable A} (P Q: pred nat), (@unfash A agA (andp P Q) = andp (@unfash A agA P) (@unfash A agA Q)).",
            "VernacStartTheoremProof",
            "199ba131e80d1c29b623dd5343b6a2b4c83df641"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "intros ? ?.",
            "VernacExtend",
            "546ddfdd2482db9e439533251e7f222ee06f71aa"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros ? [? ?].",
            "VernacExtend",
            "86b46942b4b037f84d749269df8ff93077c48e7a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andp_imp_e': forall (A : Type) (agA : ageable A) (P Q : pred A), P && (P --> Q) |-- P && Q.",
            "VernacStartTheoremProof",
            "8ce839e84d68d0f014de3040d29b47e0c05209c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "apply andp_left1; auto.",
            "VernacExtend",
            "fbc9186131c9851d08ff7aadf76f5fc5ca898763"
        ],
        [
            "intros ? [? ?].",
            "VernacExtend",
            "86b46942b4b037f84d749269df8ff93077c48e7a"
        ],
        [
            "eapply H0; auto.",
            "VernacExtend",
            "3d1c260c126511b3d4fa411f782a663bfc53e823"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unfash_fash: forall (A : Type) (agA : ageable A) (P : pred A), unfash (fash P) |-- P.",
            "VernacStartTheoremProof",
            "3762c644a707989eab74b9fa29392b8448259740"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fash, unfash.",
            "VernacExtend",
            "53d90572938e4fc23c06108b4957b211bf6ae4ee"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "hnf; simpl; intros.",
            "VernacExtend",
            "e0b5522baa24e202beb8485721673eb94b7a40e0"
        ],
        [
            "apply (H a).",
            "VernacExtend",
            "4e18e4f2b465483fc612f98e9d4faa76beee1de2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma imp_imp: forall (A : Type) (agA : ageable A) (P Q R: pred A), P --> (Q --> R) = P && Q --> R.",
            "VernacStartTheoremProof",
            "ba12453719c8a0cdd4b80526df237c0e9e8e2608"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply imp_andp_adjoint.",
            "VernacExtend",
            "c8d879371afc1a39c626a3c8c5302ad38a2c6f45"
        ],
        [
            "rewrite <- andp_assoc.",
            "VernacExtend",
            "af620aa2f90527d6460b0d98a5bf2930b4fc0390"
        ],
        [
            "apply imp_andp_adjoint.",
            "VernacExtend",
            "c8d879371afc1a39c626a3c8c5302ad38a2c6f45"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply derives_trans; [apply andp_imp_e' | apply andp_left2].",
            "VernacExtend",
            "4be23fd60dbb969bf8ce3219d6b9b1e1f88ec9b4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- !imp_andp_adjoint.",
            "VernacExtend",
            "c7167f59f1515a8c0cf199b20999e614eef1bf46"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "rewrite imp_andp_adjoint.",
            "VernacExtend",
            "8818d6fa755caf005a09aa494c1e5bc0faafa798"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma imp_allp: forall B (A : Type) (agA : ageable A) (P: pred A) (Q: B -> pred A), P --> allp Q = ALL x: B, P --> Q x.",
            "VernacStartTheoremProof",
            "dafd82817fe02ba876013ddf04cfdfac25c2a326"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply allp_right; intros x.",
            "VernacExtend",
            "25728fe87b411b365b3fff0dd10f71b547f377cb"
        ],
        [
            "rewrite <- imp_andp_adjoint, andp_comm.",
            "VernacExtend",
            "b832f23a4d07e068e747f1deffacfb208c049bc9"
        ],
        [
            "eapply derives_trans; [apply andp_imp_e' |].",
            "VernacExtend",
            "044596d489620cb09d1753948c68c0f307ba4c1d"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply (allp_left _ x).",
            "VernacExtend",
            "5f4aa64d8926a1c5408551ee04ebc7b13c8e4f31"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- imp_andp_adjoint.",
            "VernacExtend",
            "283e51f1c15ef1dd423029659a66b431b956e290"
        ],
        [
            "apply allp_right; intros x.",
            "VernacExtend",
            "25728fe87b411b365b3fff0dd10f71b547f377cb"
        ],
        [
            "rewrite imp_andp_adjoint.",
            "VernacExtend",
            "8818d6fa755caf005a09aa494c1e5bc0faafa798"
        ],
        [
            "apply (allp_left _ x).",
            "VernacExtend",
            "5f4aa64d8926a1c5408551ee04ebc7b13c8e4f31"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fash_prop: forall P: Prop, fash (!! P: pred rmap) = !! P.",
            "VernacStartTheoremProof",
            "60eb016fe5c706a9cea91241a7b1a4ef73e4e365"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; unfold fash; hnf; simpl; intros.",
            "VernacExtend",
            "95407c53b77a0443bc20266c4cb21a8c7c20d694"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (ex_level a) as [r ?].",
            "VernacExtend",
            "f142d0177242cb6ca891090f4882751ab538fb6c"
        ],
        [
            "apply (H r).",
            "VernacExtend",
            "2d9a1c5230983b63d1f8c830579284c90c029f92"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fash_unfash: forall (P : pred nat), fash (unfash P: pred rmap) = P.",
            "VernacStartTheoremProof",
            "efabcaa15bb7eb92f6b2a7e76d1f206fc80f9f21"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fash, unfash.",
            "VernacExtend",
            "53d90572938e4fc23c06108b4957b211bf6ae4ee"
        ],
        [
            "apply pred_ext; hnf; simpl; intros.",
            "VernacExtend",
            "13df3183765002053122fc368527f577e8e35ef6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (ex_level a) as [r ?].",
            "VernacExtend",
            "f142d0177242cb6ca891090f4882751ab538fb6c"
        ],
        [
            "specialize (H r).",
            "VernacExtend",
            "a08bc47e9ba660e8d538eb3905780b2eea35270e"
        ],
        [
            "rewrite H0 in H.",
            "VernacExtend",
            "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
        ],
        [
            "apply H; omega.",
            "VernacExtend",
            "25f1ceb280800c37161013440275309d43c00c5f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply pred_nec_hereditary; [| eassumption].",
            "VernacExtend",
            "7617f04aa42ea80bdca397a3ad0e53298ce5abe7"
        ],
        [
            "rewrite nec_nat; omega.",
            "VernacExtend",
            "54c67aca428f48ca352b9730798719b7b7411cd6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prop_true_imp: forall (P: Prop) (Q: pred rmap), P -> !! P --> Q = Q.",
            "VernacStartTheoremProof",
            "05257a52711118d3f66077eb09fe63f03adc4c4b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- (True_andp_eq P (!! P --> Q)) by auto.",
            "VernacExtend",
            "13bd42159219d604ea1d45038e54b3f6a8703d33"
        ],
        [
            "eapply derives_trans; [apply andp_imp_e' |].",
            "VernacExtend",
            "044596d489620cb09d1753948c68c0f307ba4c1d"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply imp_andp_adjoint.",
            "VernacExtend",
            "c8d879371afc1a39c626a3c8c5302ad38a2c6f45"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma corable_unfash: forall (A : Type) (JA : Join A) (PA : Perm_alg A) (SA : Sep_alg A) (agA : ageable A) (AgeA : Age_alg A) (P : pred nat), corable (! P).",
            "VernacStartTheoremProof",
            "68e442ba13e8b93eece409dad7b857bb3282c678"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold unfash; simpl.",
            "VernacExtend",
            "8e541e3a47901e7f9c157136b2069794703ac2d1"
        ],
        [
            "hnf; simpl; intros.",
            "VernacExtend",
            "e0b5522baa24e202beb8485721673eb94b7a40e0"
        ],
        [
            "rewrite level_core.",
            "VernacExtend",
            "311b7130b0585b6bfe481f394758f6b14e36a5b3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "genv_symb_injective",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "exists (Genv.genv_symb ge).",
                        "VernacExtend",
                        "ca9c92c68aff4027bfe1c0ae3f82deb7b210bd45"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "eapply Genv.genv_vars_inj; eauto.",
                        "VernacExtend",
                        "07755eac47e4af64187cf65e2810a81d3f88cffe"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "ext_join_approx",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "change (Some (ghost_PCM.ext_ref z, NoneP) :: nil) with (ghost_fmap (approx n) (approx n) (Some (ghost_PCM.ext_ref z, NoneP) :: nil)).",
                        "VernacExtend",
                        "02a06980d5b0bebda71282fff5c060090b3117e7"
                    ]
                },
                {
                    "command": [
                        "eexists; apply ghost_fmap_join; eauto.",
                        "VernacExtend",
                        "f202ba8bd1908f32a230df8334b3be29c25af8e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_join_unapprox",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as (g' & J).",
                        "VernacExtend",
                        "d328727d82167a6649e06db6e3281ef586abd311"
                    ]
                },
                {
                    "command": [
                        "destruct g; [eexists; constructor|].",
                        "VernacExtend",
                        "35c8206b8b75f723df2dffcd970d388a38aa648c"
                    ]
                },
                {
                    "command": [
                        "inv J.",
                        "VernacExtend",
                        "af4159c400d56d81d2186aefc1a78bfbad5c1e40"
                    ]
                },
                {
                    "command": [
                        "exists (a3 :: g); repeat constructor.",
                        "VernacExtend",
                        "b97be6edad2695addccf846f0a3208a2a968a21c"
                    ]
                },
                {
                    "command": [
                        "destruct o; inv H4; constructor.",
                        "VernacExtend",
                        "2aadf98e04567b23264b4097bd624ba1d9d7295d"
                    ]
                },
                {
                    "command": [
                        "destruct p; inv H1; constructor; simpl in *; auto.",
                        "VernacExtend",
                        "09cc142bbb3a46f3f474bdf842ad318f34d47c39"
                    ]
                },
                {
                    "command": [
                        "destruct p; simpl in *.",
                        "VernacExtend",
                        "21fa2abfdaae8a18ac0ac4debd1bca139800054d"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "2721274aada33cbec3c1f62204a14a93dcf297fd"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "7549fbb600c3af6072a6d21bdcba999a253a2e01"
                    ]
                },
                {
                    "command": [
                        "inj_pair_tac.",
                        "VernacExtend",
                        "7554d21c8c2172d16c51fb98f9060c21cdadf88e"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "unfold NoneP; f_equal; auto.",
                        "VernacExtend",
                        "0a557a8ed529b6074850deebf0e04672212222f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_compat_obligation_1",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "repeat intro.",
                        "VernacExtend",
                        "b1b5d9b3004bf4634299c208df98406e88278608"
                    ]
                },
                {
                    "command": [
                        "erewrite age1_ghost_of by eauto.",
                        "VernacExtend",
                        "b5672dab89c3bd55099a5e1a73382c18363a5d11"
                    ]
                },
                {
                    "command": [
                        "apply ext_join_approx; auto.",
                        "VernacExtend",
                        "db1c4035f62ba60d2c4aaea31197c01b180574a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "assert_safe_obligation_1",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intro; intros.",
                        "VernacExtend",
                        "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "destruct (oracle_unage _ _ H) as [jm0 [? ?]].",
                        "VernacExtend",
                        "11dcf5b648193ccc0c2f6716ace67c79ccdbe04d"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 ora jm0); spec H0.",
                        "VernacExtend",
                        "11d8412384f13b7cde62ceac4949fa4a063edf63"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "erewrite age1_ghost_of in H1 by eauto.",
                        "VernacExtend",
                        "4edb5b46f595cba7f73a95a91c305a4cd959157f"
                    ]
                },
                {
                    "command": [
                        "eapply ext_join_unapprox; eauto.",
                        "VernacExtend",
                        "203d08c0fe18192e975bff4ae23296c25cc62d6a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 (eq_refl _) (eq_refl _)).",
                        "VernacExtend",
                        "15c616bd46b4683e75d70ddcda65e974b08fc0d3"
                    ]
                },
                {
                    "command": [
                        "forget (State ve te ctl) as c.",
                        "VernacExtend",
                        "e763e30b531ba3ceec5b4ae6ae35702feb1070c7"
                    ]
                },
                {
                    "command": [
                        "clear H ve te ctl.",
                        "VernacExtend",
                        "6a7db0af97870defae8c54158c1e809fc2a6d7d0"
                    ]
                },
                {
                    "command": [
                        "change (level (m_phi jm)) with (level jm).",
                        "VernacExtend",
                        "c67b6ac5c28fa487cc540ba83c0fbbbd9cf4fb32"
                    ]
                },
                {
                    "command": [
                        "change (level (m_phi jm0)) with (level jm0) in H0.",
                        "VernacExtend",
                        "b3c7c5e6ade86026005fb4bb17681917c8c654e3"
                    ]
                },
                {
                    "command": [
                        "eapply age_safe; eauto.",
                        "VernacExtend",
                        "a1eb22619c2cdf4331edf425ade7ded946fe2f85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "guard_environ_e1",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto.",
                        "VernacExtend",
                        "95ae427bd4e09a5f31c59184b718811a23ecb36f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_fold_unfold",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros ? ?.",
                        "VernacExtend",
                        "546ddfdd2482db9e439533251e7f222ee06f71aa"
                    ]
                },
                {
                    "command": [
                        "extensionality G P.",
                        "VernacExtend",
                        "ea277a89bebb64a36a8a24d28cb6c3ea34f654cb"
                    ]
                },
                {
                    "command": [
                        "extensionality c R.",
                        "VernacExtend",
                        "222db0900b160ef01c4bf60016a40630acaab1d6"
                    ]
                },
                {
                    "command": [
                        "unfold semax'.",
                        "VernacExtend",
                        "f869116c8cc3f0d73b2b0931cd25cb5082e14b47"
                    ]
                },
                {
                    "command": [
                        "pattern (HORec (semax_ Espec)) at 1; rewrite HORec_fold_unfold.",
                        "VernacExtend",
                        "becdb37d8aecad229571ce583b09ef2292bc34a1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply prove_HOcontractive.",
                        "VernacExtend",
                        "61263284087943425ed002323458806bb2702b75"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold semax_.",
                        "VernacExtend",
                        "6c771309e7f219505faba14534c137fedda58fb7"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "sub_unfold.",
                        "VernacExtend",
                        "f7aadedfde71db47ad4af79c7a3bdaa890b7779f"
                    ]
                },
                {
                    "command": [
                        "do 2 (apply subp_allp; intros).",
                        "VernacExtend",
                        "d5a8495ea8d3129d5a64ad741769433e2e6ca2a9"
                    ]
                },
                {
                    "command": [
                        "apply subp_imp; [auto with contractive | ].",
                        "VernacExtend",
                        "7b6b023f3bfd59108d7be3d4e39d3fdb8dbe9081"
                    ]
                },
                {
                    "command": [
                        "apply subp_imp; [ | auto 50 with contractive].",
                        "VernacExtend",
                        "06f75ae63f660bd52e22b994a7099e262c7fd7e9"
                    ]
                },
                {
                    "command": [
                        "apply subp_allp; intros.",
                        "VernacExtend",
                        "011394d3151cbaf061268aec89d5a26aaef385b8"
                    ]
                },
                {
                    "command": [
                        "apply subp_allp; intros.",
                        "VernacExtend",
                        "011394d3151cbaf061268aec89d5a26aaef385b8"
                    ]
                },
                {
                    "command": [
                        "apply subp_allp; intros.",
                        "VernacExtend",
                        "011394d3151cbaf061268aec89d5a26aaef385b8"
                    ]
                },
                {
                    "command": [
                        "apply subp_allp; intros.",
                        "VernacExtend",
                        "011394d3151cbaf061268aec89d5a26aaef385b8"
                    ]
                },
                {
                    "command": [
                        "apply subp_allp; intros.",
                        "VernacExtend",
                        "011394d3151cbaf061268aec89d5a26aaef385b8"
                    ]
                },
                {
                    "command": [
                        "apply subp_allp; intros.",
                        "VernacExtend",
                        "011394d3151cbaf061268aec89d5a26aaef385b8"
                    ]
                },
                {
                    "command": [
                        "apply subp_imp; intros; [ auto 50 with contractive | ].",
                        "VernacExtend",
                        "2cc1e2bfdc5495328f9a062c0d869c79aa0e7ed1"
                    ]
                },
                {
                    "command": [
                        "apply subp_orp; [ auto 50 with contractive | ].",
                        "VernacExtend",
                        "9cbd580dea64a654bbc1c9522ec35a8778da2a1e"
                    ]
                },
                {
                    "command": [
                        "apply subp_exp; intros.",
                        "VernacExtend",
                        "70840b9b9885412ab7136d9bcaab913397d311a9"
                    ]
                },
                {
                    "command": [
                        "apply subp_exp; intros.",
                        "VernacExtend",
                        "70840b9b9885412ab7136d9bcaab913397d311a9"
                    ]
                },
                {
                    "command": [
                        "auto 50 with contractive.",
                        "VernacExtend",
                        "3de148cffb2859c6fb1d18f0e7994692829e16e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "any_level_pred_nat",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "hnf; intros; auto.",
                        "VernacExtend",
                        "8598c1c028ba31dca0e657604aceeb3661b73623"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "hnf in H; auto.",
                        "VernacExtend",
                        "cef01ded3eb3ba22c7dce7c366a34778e7e7b471"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_weakest_pre_aux",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (TT |-- ALL x: A, Q x --> R x <-> (forall x : A, Q x |-- R x)).",
                        "VernacExtend",
                        "03cf48194f61898b02e8d31c36bf2430d1d18ff3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (TT_and (Q x)).",
                        "VernacExtend",
                        "104505d3a8df6a685f2384eaaaee002b981805a1"
                    ]
                },
                {
                    "command": [
                        "rewrite imp_andp_adjoint.",
                        "VernacExtend",
                        "8818d6fa755caf005a09aa494c1e5bc0faafa798"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [exact H0 |].",
                        "VernacExtend",
                        "5b0f3ebdbbfbfaad07f2adbd6b6c0e45f674f932"
                    ]
                },
                {
                    "command": [
                        "apply (allp_left _ x); intros.",
                        "VernacExtend",
                        "b3cb8915c5f87bfc1f065975cbc6c7e4b56d2c3c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply allp_right; intros.",
                        "VernacExtend",
                        "a1fd790004a550f0f66000a3c13277ba11753894"
                    ]
                },
                {
                    "command": [
                        "rewrite <- imp_andp_adjoint.",
                        "VernacExtend",
                        "283e51f1c15ef1dd423029659a66b431b956e290"
                    ]
                },
                {
                    "command": [
                        "rewrite (TT_and (Q v)).",
                        "VernacExtend",
                        "fea4879a8ba365facf8707501efce174e20e0548"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0, H.",
                        "VernacExtend",
                        "99cac8658cee7b0a177fa471bf63b775311a93ad"
                    ]
                },
                {
                    "command": [
                        "clear; forget (ALL x : A , Q x --> R x) as P; clear.",
                        "VernacExtend",
                        "1f04afb7fb406d15915563b7a5b8eb0cf822fdf0"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold fash in H.",
                        "VernacExtend",
                        "f9423400a9de82b5f539f19f39154ee3b40b620e"
                    ]
                },
                {
                    "command": [
                        "hnf in H |- *.",
                        "VernacExtend",
                        "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
                    ]
                },
                {
                    "command": [
                        "intros; simpl in H.",
                        "VernacExtend",
                        "5e9558e61e8e1e29e5532c2a23617df43497445a"
                    ]
                },
                {
                    "command": [
                        "eapply H; auto.",
                        "VernacExtend",
                        "7f0e95e9e187fdae85271fdd95c588971782eddb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold fash.",
                        "VernacExtend",
                        "cd0be75eecccedc5481b5e628a0ab7e622e11697"
                    ]
                },
                {
                    "command": [
                        "hnf in H |- *.",
                        "VernacExtend",
                        "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
                    ]
                },
                {
                    "command": [
                        "intros; simpl.",
                        "VernacExtend",
                        "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unfash_allp",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "intros ? ? ?.",
                        "VernacExtend",
                        "288cad254af8b9e4d528c95e5e756cb647bbaed6"
                    ]
                },
                {
                    "command": [
                        "specialize (H b).",
                        "VernacExtend",
                        "41947216987481e09a86f72f58018dea0b6e041a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "repeat intro.",
                        "VernacExtend",
                        "b1b5d9b3004bf4634299c208df98406e88278608"
                    ]
                },
                {
                    "command": [
                        "apply (H b).",
                        "VernacExtend",
                        "17d0a8f5613a4a0b3fae6517b7a9a389cfff37f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fash_TT",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; intros ? ?; apply I.",
                        "VernacExtend",
                        "638ae864df23614ea7445b9b8d7bbc312abadec0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "allp_andp",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "intros ? [? ?] b.",
                        "VernacExtend",
                        "eb2967ebb76d4894bdac83b7e4aa0bcad57ae0f6"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros ? ?.",
                        "VernacExtend",
                        "546ddfdd2482db9e439533251e7f222ee06f71aa"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intro b.",
                        "VernacExtend",
                        "069cd7d34a03b833d46b6b4ca32ac31560c50264"
                    ]
                },
                {
                    "command": [
                        "apply (H b).",
                        "VernacExtend",
                        "17d0a8f5613a4a0b3fae6517b7a9a389cfff37f8"
                    ]
                },
                {
                    "command": [
                        "apply (H b0).",
                        "VernacExtend",
                        "ac97d30d12c2551aee7c0dc7574e581bfe84f8c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unfash_prop_imp",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; repeat intro.",
                        "VernacExtend",
                        "9e38f123075f533f61a107985b9c078119980560"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply necR_level'; auto.",
                        "VernacExtend",
                        "cd296b7d17ffa0e0ada973c33fd6c928ad791f1d"
                    ]
                },
                {
                    "command": [
                        "hnf in H.",
                        "VernacExtend",
                        "b998e5ae98dd847416f4f194f30407c3597ea052"
                    ]
                },
                {
                    "command": [
                        "specialize (H a (necR_refl _) H1).",
                        "VernacExtend",
                        "95007a5c2e67b92c5c8bc79ebfe9f7d9ca0f6093"
                    ]
                },
                {
                    "command": [
                        "eapply pred_nec_hereditary; try apply H0.",
                        "VernacExtend",
                        "8d2b6e6d7e0a5c01c2c539d49fe88d69c3535cb5"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unfash_imp",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; repeat intro.",
                        "VernacExtend",
                        "9e38f123075f533f61a107985b9c078119980560"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply necR_level'; auto.",
                        "VernacExtend",
                        "cd296b7d17ffa0e0ada973c33fd6c928ad791f1d"
                    ]
                },
                {
                    "command": [
                        "specialize (H (age_to a' a)).",
                        "VernacExtend",
                        "7e3b49c831b346e0833f7015ef1d2cc2c89bb12c"
                    ]
                },
                {
                    "command": [
                        "spec H.",
                        "VernacExtend",
                        "c7a045c1cfd9908cdf3626bbe876cad8b9f0c976"
                    ]
                },
                {
                    "command": [
                        "apply age_to_necR.",
                        "VernacExtend",
                        "2071fbeebef7b389149f8b082a3b8a27fbbee41a"
                    ]
                },
                {
                    "command": [
                        "spec H.",
                        "VernacExtend",
                        "c7a045c1cfd9908cdf3626bbe876cad8b9f0c976"
                    ]
                },
                {
                    "command": [
                        "do 3 red.",
                        "VernacExtend",
                        "0d6fbefd005468a675fae9cce27f1d656e5935fb"
                    ]
                },
                {
                    "command": [
                        "rewrite level_age_to; auto.",
                        "VernacExtend",
                        "d483c07efd924b470e718cfd48bfa6748545dbc4"
                    ]
                },
                {
                    "command": [
                        "apply necR_level in H0.",
                        "VernacExtend",
                        "1a6698553707a7cdeeee1ccb290781b0d49804e1"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "do 3 red in H.",
                        "VernacExtend",
                        "f2cac86721997c9b5405b005b4693feaca0bc83f"
                    ]
                },
                {
                    "command": [
                        "rewrite level_age_to in H; auto.",
                        "VernacExtend",
                        "5988d0321588f8ede24628a33d7cd7d3a9664cf1"
                    ]
                },
                {
                    "command": [
                        "apply necR_level in H0.",
                        "VernacExtend",
                        "1a6698553707a7cdeeee1ccb290781b0d49804e1"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unfash_andp",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "intros ? ?.",
                        "VernacExtend",
                        "546ddfdd2482db9e439533251e7f222ee06f71aa"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros ? [? ?].",
                        "VernacExtend",
                        "86b46942b4b037f84d749269df8ff93077c48e7a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andp_imp_e'",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply andp_right.",
                        "VernacExtend",
                        "614688b80ee6a44f752e79383d4234d6d5dfcee8"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1; auto.",
                        "VernacExtend",
                        "fbc9186131c9851d08ff7aadf76f5fc5ca898763"
                    ]
                },
                {
                    "command": [
                        "intros ? [? ?].",
                        "VernacExtend",
                        "86b46942b4b037f84d749269df8ff93077c48e7a"
                    ]
                },
                {
                    "command": [
                        "eapply H0; auto.",
                        "VernacExtend",
                        "3d1c260c126511b3d4fa411f782a663bfc53e823"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unfash_fash",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fash, unfash.",
                        "VernacExtend",
                        "53d90572938e4fc23c06108b4957b211bf6ae4ee"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "hnf; simpl; intros.",
                        "VernacExtend",
                        "e0b5522baa24e202beb8485721673eb94b7a40e0"
                    ]
                },
                {
                    "command": [
                        "apply (H a).",
                        "VernacExtend",
                        "4e18e4f2b465483fc612f98e9d4faa76beee1de2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imp_imp",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply imp_andp_adjoint.",
                        "VernacExtend",
                        "c8d879371afc1a39c626a3c8c5302ad38a2c6f45"
                    ]
                },
                {
                    "command": [
                        "rewrite <- andp_assoc.",
                        "VernacExtend",
                        "af620aa2f90527d6460b0d98a5bf2930b4fc0390"
                    ]
                },
                {
                    "command": [
                        "apply imp_andp_adjoint.",
                        "VernacExtend",
                        "c8d879371afc1a39c626a3c8c5302ad38a2c6f45"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm.",
                        "VernacExtend",
                        "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply andp_imp_e' | apply andp_left2].",
                        "VernacExtend",
                        "4be23fd60dbb969bf8ce3219d6b9b1e1f88ec9b4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !imp_andp_adjoint.",
                        "VernacExtend",
                        "c7167f59f1515a8c0cf199b20999e614eef1bf46"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_assoc.",
                        "VernacExtend",
                        "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
                    ]
                },
                {
                    "command": [
                        "rewrite imp_andp_adjoint.",
                        "VernacExtend",
                        "8818d6fa755caf005a09aa494c1e5bc0faafa798"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imp_allp",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply allp_right; intros x.",
                        "VernacExtend",
                        "25728fe87b411b365b3fff0dd10f71b547f377cb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- imp_andp_adjoint, andp_comm.",
                        "VernacExtend",
                        "b832f23a4d07e068e747f1deffacfb208c049bc9"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply andp_imp_e' |].",
                        "VernacExtend",
                        "044596d489620cb09d1753948c68c0f307ba4c1d"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "apply (allp_left _ x).",
                        "VernacExtend",
                        "5f4aa64d8926a1c5408551ee04ebc7b13c8e4f31"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- imp_andp_adjoint.",
                        "VernacExtend",
                        "283e51f1c15ef1dd423029659a66b431b956e290"
                    ]
                },
                {
                    "command": [
                        "apply allp_right; intros x.",
                        "VernacExtend",
                        "25728fe87b411b365b3fff0dd10f71b547f377cb"
                    ]
                },
                {
                    "command": [
                        "rewrite imp_andp_adjoint.",
                        "VernacExtend",
                        "8818d6fa755caf005a09aa494c1e5bc0faafa798"
                    ]
                },
                {
                    "command": [
                        "apply (allp_left _ x).",
                        "VernacExtend",
                        "5f4aa64d8926a1c5408551ee04ebc7b13c8e4f31"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fash_prop",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; unfold fash; hnf; simpl; intros.",
                        "VernacExtend",
                        "95407c53b77a0443bc20266c4cb21a8c7c20d694"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_level a) as [r ?].",
                        "VernacExtend",
                        "f142d0177242cb6ca891090f4882751ab538fb6c"
                    ]
                },
                {
                    "command": [
                        "apply (H r).",
                        "VernacExtend",
                        "2d9a1c5230983b63d1f8c830579284c90c029f92"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fash_unfash",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fash, unfash.",
                        "VernacExtend",
                        "53d90572938e4fc23c06108b4957b211bf6ae4ee"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; hnf; simpl; intros.",
                        "VernacExtend",
                        "13df3183765002053122fc368527f577e8e35ef6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_level a) as [r ?].",
                        "VernacExtend",
                        "f142d0177242cb6ca891090f4882751ab538fb6c"
                    ]
                },
                {
                    "command": [
                        "specialize (H r).",
                        "VernacExtend",
                        "a08bc47e9ba660e8d538eb3905780b2eea35270e"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H.",
                        "VernacExtend",
                        "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
                    ]
                },
                {
                    "command": [
                        "apply H; omega.",
                        "VernacExtend",
                        "25f1ceb280800c37161013440275309d43c00c5f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply pred_nec_hereditary; [| eassumption].",
                        "VernacExtend",
                        "7617f04aa42ea80bdca397a3ad0e53298ce5abe7"
                    ]
                },
                {
                    "command": [
                        "rewrite nec_nat; omega.",
                        "VernacExtend",
                        "54c67aca428f48ca352b9730798719b7b7411cd6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prop_true_imp",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (True_andp_eq P (!! P --> Q)) by auto.",
                        "VernacExtend",
                        "13bd42159219d604ea1d45038e54b3f6a8703d33"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply andp_imp_e' |].",
                        "VernacExtend",
                        "044596d489620cb09d1753948c68c0f307ba4c1d"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2; auto.",
                        "VernacExtend",
                        "624d28bb04e617622cc0cb522526420dfef62500"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply imp_andp_adjoint.",
                        "VernacExtend",
                        "c8d879371afc1a39c626a3c8c5302ad38a2c6f45"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1.",
                        "VernacExtend",
                        "527caf3623c2439da127093a10760d6fffcc2032"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "corable_unfash",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold unfash; simpl.",
                        "VernacExtend",
                        "8e541e3a47901e7f9c157136b2069794703ac2d1"
                    ]
                },
                {
                    "command": [
                        "hnf; simpl; intros.",
                        "VernacExtend",
                        "e0b5522baa24e202beb8485721673eb94b7a40e0"
                    ]
                },
                {
                    "command": [
                        "rewrite level_core.",
                        "VernacExtend",
                        "311b7130b0585b6bfe481f394758f6b14e36a5b3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}