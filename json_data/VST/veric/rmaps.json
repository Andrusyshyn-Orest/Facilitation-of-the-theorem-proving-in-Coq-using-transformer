{
    "filename": "veric/rmaps.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.msl_standard.",
            "VernacRequire",
            "bbb3b33b9509ab47eb7418bd6127eafa914382b1"
        ],
        [
            "Require Import VST.msl.ghost.",
            "VernacRequire",
            "9760bbff2e5d324064ebd8a4f2f21b05d0152eeb"
        ],
        [
            "Require Import VST.msl.Coqlib2.",
            "VernacRequire",
            "8c6da0b17b3d2a1d9fdc906278adc35947d0c031"
        ],
        [
            "Require Import VST.veric.shares.",
            "VernacRequire",
            "3704a447cd367fa0955afd14b15f7281894f1482"
        ],
        [
            "Module Type ADR_VAL.",
            "VernacDeclareModuleType",
            "987ae6b50c119f02310b33453b473276aec7337f"
        ],
        [
            "Parameter address : Type.",
            "VernacAssumption",
            "765aed4eecd15cfed386d24ac2206a68bf992444"
        ],
        [
            "Parameter some_address:address.",
            "VernacAssumption",
            "c388d297aca2cb011788b69d46882adaf085e42d"
        ],
        [
            "Parameter kind: Type.",
            "VernacAssumption",
            "b79a47271e4e04c72eff246c6bf33c10504a2cbd"
        ],
        [
            "End ADR_VAL.",
            "VernacEndSegment",
            "bd9ad890e60cef18305408aa6be51983e1206019"
        ],
        [
            "Inductive TypeTree: Type := | ConstType: Type -> TypeTree | Mpred: TypeTree | DependentType: nat -> TypeTree | ProdType: TypeTree -> TypeTree -> TypeTree | ArrowType: TypeTree -> TypeTree -> TypeTree | PiType: forall (I : Type), (I -> TypeTree) -> TypeTree | ListType: TypeTree -> TypeTree.",
            "VernacInductive",
            "cfbde18cb84aa6e9e207128b97de8d30c854586f"
        ],
        [
            "Definition dependent_type_functor_rec (ts: list Type): TypeTree -> functor := fix dtfr (T: TypeTree): functor := match T with | ConstType A => fconst A | Mpred => fidentity | DependentType n => fconst (nth n ts unit) | ProdType T1 T2 => fpair (dtfr T1) (dtfr T2) | ArrowType T1 T2 => ffunc (dtfr T1) (dtfr T2) | PiType _ f => fpi (fun i => dtfr (f i)) | ListType T => flist (dtfr T) end.",
            "VernacDefinition",
            "c4892d315e6c1028f0d9c94e3a101ae9c75ab05d"
        ],
        [
            "Opaque dependent_type_functor_rec.",
            "VernacSetOpacity",
            "a4b9e23b4134046efc6ea1433c956bf82dfc2132"
        ],
        [
            "Definition dependent_type_function_rec (ts: list Type) (mpred': Type): TypeTree -> Type := fix dtfr (T: TypeTree): Type := match T with | ConstType A => A | Mpred => mpred' | DependentType n => nth n ts unit | ProdType T1 T2 => (dtfr T1 * dtfr T2)%type | ArrowType T1 T2 => dtfr T1 -> dtfr T2 | PiType A f => forall a, dtfr (f a) | ListType T => list (dtfr T) end.",
            "VernacDefinition",
            "9e112ca7a3559164404636adbd7201fe122ad326"
        ],
        [
            "Definition fpreds: functor := fsig (fun T: TypeTree => fpi (fun ts: list Type => dependent_type_functor_rec ts T)).",
            "VernacDefinition",
            "a283cc4d85f820e6411bac4c9e32ccafb66b7e1c"
        ],
        [
            "Lemma realize_eq: forall {A} (a b: A) P, (exists H: a = b, P H) -> {H: a = b & P H}.",
            "VernacStartTheoremProof",
            "721eea7a5aeccfb2875f17d836de3571d407ce2e"
        ],
        [
            "intros ???? []; subst; exists eq_refl; auto.",
            "VernacExtend",
            "43febaebf9113bc969abf85b140877844708cbd5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lower_join_inv : forall {A} {J: Join A} a b c, lower_join J a b c <-> match a, b, c with | Some a, Some b, Some c => join a b c | Some a, None, Some c | None, Some a, Some c => a = c | None, None, None => True | _, _, _ => False end.",
            "VernacStartTheoremProof",
            "cb6abf65f5f17a4a6f12a83f93e3ba6869b60386"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion 1; subst; auto; destruct c; auto.",
            "VernacExtend",
            "45af63762bebe4e5f0bb69f4c7e9770ab4267fd4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct a, b, c; intros; subst; try contradiction; try constructor; auto.",
            "VernacExtend",
            "b1479487aae4be9ab2754abb02efa1cfbdad3630"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module Type STRAT_MODEL.",
            "VernacDeclareModuleType",
            "44a6a2f077282d51b8612aa56983afda7ce71e29"
        ],
        [
            "Declare Module AV : ADR_VAL.",
            "VernacDeclareModule",
            "ab14368c521f029bae30d2e202858c905b1d9f6c"
        ],
        [
            "Import AV.",
            "VernacImport",
            "6a07e2e137d7561f56ba8cb3c6fff30e711f45c3"
        ],
        [
            "Inductive res (PRED : Type) : Type := | NO': forall sh: Share.t, ~(readable_share sh) -> res PRED | YES': forall sh: Share.t, readable_share sh -> kind -> fpreds PRED -> res PRED | PURE': kind -> fpreds PRED -> res PRED.",
            "VernacInductive",
            "6a045bb060522ad63d9ec2aed63a74330a58397c"
        ],
        [
            "Definition res_fmap (A B:Type) (f:A->B) (g:B->A)(x:res A) : res B := match x with | NO' rsh nsh => NO' B rsh nsh | YES' sh rsh k pds => YES' B sh rsh k (fmap fpreds f g pds) | PURE' k pds => PURE' B k (fmap fpreds f g pds) end.",
            "VernacDefinition",
            "95113c06393b67c5d8d76da6502924a0248b6565"
        ],
        [
            "Axiom ff_res : functorFacts res res_fmap.",
            "VernacAssumption",
            "9dd658aa686a2c7805adec79cf13309163754bd4"
        ],
        [
            "Definition f_res : functor := Functor ff_res.",
            "VernacDefinition",
            "0d4c60adfdf938e9df76fde2309beb1e9343f462"
        ],
        [
            "Inductive res_join (PRED : Type) : f_res PRED -> f_res PRED -> f_res PRED -> Prop := | res_join_NO1 : forall sh1 nsh1 sh2 nsh2 sh3 nsh3, join sh1 sh2 sh3 -> res_join PRED (NO' PRED sh1 nsh1) (NO' PRED sh2 nsh2) (NO' PRED sh3 nsh3) | res_join_NO2 : forall sh1 nsh1 sh2 rsh2 sh3 rsh3 k p, join sh1 sh2 sh3 -> res_join PRED (NO' PRED sh1 nsh1) (YES' PRED sh2 rsh2 k p) (YES' PRED sh3 rsh3 k p) | res_join_NO3 : forall sh1 rsh1 sh2 nsh2 sh3 rsh3 k p, join sh1 sh2 sh3 -> res_join PRED (YES' PRED sh1 rsh1 k p) (NO' PRED sh2 nsh2) (YES' PRED sh3 rsh3 k p) | res_join_YES : forall sh1 rsh1 sh2 rsh2 sh3 rsh3 k p, join sh1 sh2 sh3 -> res_join PRED (YES' PRED sh1 rsh1 k p) (YES' PRED sh2 rsh2 k p) (YES' PRED sh3 rsh3 k p) | res_join_PURE : forall k p, res_join PRED (PURE' PRED k p) (PURE' PRED k p) (PURE' PRED k p).",
            "VernacInductive",
            "340757975e834fb845922790e6279fcfdd79a47a"
        ],
        [
            "Axiom pa_rj : forall PRED, @Perm_alg _ (res_join PRED).",
            "VernacAssumption",
            "654ea35e8e765460cec48b7e5f0086bd7a864b74"
        ],
        [
            "Instance sa_rj : forall PRED, @Sep_alg _ (res_join PRED).",
            "VernacInstance",
            "0ad1c653c0d2882dd579e7511d1b701b592d2bdf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply mkSep with (fun x => match x with NO' _ _ => NO' _ Share.bot bot_unreadable | YES' _ _ _ _ => NO' _ Share.bot bot_unreadable | PURE' k pds => PURE' _ k pds end).",
            "VernacExtend",
            "f32c71b73ff81c14b0aa0042391c863b9edfc99a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct t; constructor; try apply join_unit1; auto.",
            "VernacExtend",
            "627f5aaa13d90ad3025372f342a8350d36ee2908"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; auto.",
            "VernacExtend",
            "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Axiom paf_res : @pafunctor f_res res_join.",
            "VernacAssumption",
            "2dadc5fc9ee1484cd04a7b7098992cda7bae166c"
        ],
        [
            "Definition res_option (PRED : Type) (r: res PRED) : option (rshare * kind):= match r with | NO' _ _ => None | YES' sh rsh k _ => Some (readable_part rsh,k) | PURE' _ _ => None end.",
            "VernacDefinition",
            "71d226dd31fe390d0eb7aa1f8a57995d146f4ce9"
        ],
        [
            "Definition ghost (PRED : Type) : Type := list (option ({g: Ghost & {a: @G g | ghost.valid a}} * fpreds PRED)%type).",
            "VernacDefinition",
            "8e1c7a73b23a8e261b2abb925153b95f0d096ec4"
        ],
        [
            "Definition ghost_fmap (A B:Type) (f:A->B) (g:B->A)(x:ghost A) : ghost B := fmap (flist (foption (fpair (fconst _) fpreds))) f g x.",
            "VernacDefinition",
            "12b954e37828ce39a4b4a0882294fd2019107eab"
        ],
        [
            "Axiom ff_ghost : functorFacts ghost ghost_fmap.",
            "VernacAssumption",
            "4b9e03cf748d1910c026dbfb4111b1f6e844c96c"
        ],
        [
            "Definition f_ghost : functor := Functor ff_ghost.",
            "VernacDefinition",
            "2b3b4493e28ba838948552eb109cd24d45035aa6"
        ],
        [
            "Instance preds_join PRED : Join _ := Join_equiv (fpreds PRED).",
            "VernacInstance",
            "61181a32a2039e9bcab89abbc5e850d624a1295a"
        ],
        [
            "Inductive ghost_elem_join : Join {g: Ghost & {a: @G g | ghost.valid a}} := | elem_join_I g a b c va vb vc: join a b c -> ghost_elem_join (existT _ g (exist _ a va)) (existT _ g (exist _ b vb)) (existT _ g (exist _ c vc)).",
            "VernacInductive",
            "ede7ac2641b90830b8207c03abe1da47e3f76a67"
        ],
        [
            "Existing Instance ghost_elem_join.",
            "VernacDeclareInstances",
            "f811fe3684a41cc9f7cb1818e85ba33a34a4ed3f"
        ],
        [
            "Inductive ghost_join PRED : Join (ghost PRED) := | ghost_join_nil_l m: ghost_join PRED nil m m | ghost_join_nil_r m: ghost_join PRED m nil m | ghost_join_cons a1 a2 m1 m2 a3 m3: join a1 a2 a3 -> ghost_join PRED m1 m2 m3 -> ghost_join PRED (a1 :: m1) (a2 :: m2) (a3 :: m3).",
            "VernacInductive",
            "80732e6f6676763192f198f7b6326462718553bb"
        ],
        [
            "Existing Instance ghost_join.",
            "VernacDeclareInstances",
            "7e324d0362ce3c81ae23004e3f34e2c7a90a4967"
        ],
        [
            "Axiom pa_gj : forall PRED, @Perm_alg _ (ghost_join PRED).",
            "VernacAssumption",
            "380e45e69ac91672d0a46fba447cc8b6a999365b"
        ],
        [
            "Instance sa_gj : forall PRED, @Sep_alg _ (ghost_join PRED).",
            "VernacInstance",
            "e065c33c694559671495e3b5cdc8b86273a25cc0"
        ],
        [
            "intros; exists (fun _ => nil); auto; constructor.",
            "VernacExtend",
            "0b12e90e31e0d1c8418f220dc65fcacefd9d10c1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Axiom paf_ghost : @pafunctor f_ghost ghost_join.",
            "VernacAssumption",
            "7b54a5155c7e0af01bcb9e818c85a8b89b0d215b"
        ],
        [
            "Definition f_pre_rmap : functor := fpair (ffunc (fconst address) f_res) f_ghost.",
            "VernacDefinition",
            "bb0dbf67d0b847dfde544879087752a9abdc2558"
        ],
        [
            "Instance Join_pre_rmap (A: Type) : Join (f_pre_rmap A) := Join_prod _ (Join_fun address (res A) (res_join A)) _ (ghost_join A).",
            "VernacInstance",
            "135cbba2f45c0bf4067fba97ef80ec69c6f997e5"
        ],
        [
            "Declare Instance Perm_pre_rmap: forall (A: Type), Perm_alg (f_pre_rmap A).",
            "VernacInstance",
            "2813a0570dc4968e05518168b3d1a304791eb1b7"
        ],
        [
            "Declare Instance Sep_pre_rmap: forall (A: Type), Sep_alg (f_pre_rmap A).",
            "VernacInstance",
            "2f688a014a328abc8eb4439e9120574ecf3b93b1"
        ],
        [
            "Parameter paf_pre_rmap : @pafunctor f_pre_rmap Join_pre_rmap.",
            "VernacAssumption",
            "6ee78c78ab85f75b50c82f400d51cddf64d22b68"
        ],
        [
            "Existing Instance ghost_join.",
            "VernacDeclareInstances",
            "7e324d0362ce3c81ae23004e3f34e2c7a90a4967"
        ],
        [
            "Instance Join_res A : Join (f_res A) := res_join A.",
            "VernacInstance",
            "475c132fef67f68c288a293ac430766ca622ad40"
        ],
        [
            "Axiom pre_rmap_core: forall (A : Type) (m : f_pre_rmap A), @core (f_pre_rmap A) (Join_pre_rmap A) (Sep_pre_rmap A) m = (@core ((fpair (ffunc (fconst address) f_res) f_ghost) A) (Join_prod ((ffunc (fconst address) f_res) A) (Join_pi ((fconst address) A) (fun _ : (fconst address) A => f_res A) (fun _ : (fconst address) A => Join_res A)) (f_ghost A) (ghost_join A)) (@Sep_prod ((ffunc (fconst address) f_res) A) (Join_pi ((fconst address) A) (fun _ : (fconst address) A => f_res A) (fun _ : (fconst address) A => Join_res A)) (f_ghost A) (ghost_join A) (Sep_pi ((fconst address) A) (fun _ : (fconst address) A => f_res A) (fun _ : (fconst address) A => Join_res A) (fun _ : (fconst address) A => sa_rj A)) (sa_gj A)) m).",
            "VernacAssumption",
            "68fe5dfa3a817cf9c96acc7a1adce1ddf78eccac"
        ],
        [
            "End STRAT_MODEL.",
            "VernacEndSegment",
            "ad921d6ff23379e124911d9a2b121ea72345c5d2"
        ],
        [
            "Module StratModel (AV' : ADR_VAL) : STRAT_MODEL with Module AV:=AV'.",
            "VernacDefineModule",
            "d16314f4cfcc37ba23dd5773b7303185ddacd63d"
        ],
        [
            "Module AV := AV'.",
            "VernacDefineModule",
            "60d6f2721fa2fd0f4eac75ad90a2c4e66608fba8"
        ],
        [
            "Import AV.",
            "VernacImport",
            "6a07e2e137d7561f56ba8cb3c6fff30e711f45c3"
        ],
        [
            "Definition preds: functor := fsig (fun T: TypeTree => fpi (fun ts: list Type => dependent_type_functor_rec ts T)).",
            "VernacDefinition",
            "97dca5cf0950a7edb9e320d10b4b75360f8b0ec0"
        ],
        [
            "Inductive res (PRED : Type) : Type := | NO': forall sh: Share.t, ~(readable_share sh) -> res PRED | YES': forall sh: Share.t, readable_share sh -> kind -> preds PRED -> res PRED | PURE': kind -> preds PRED -> res PRED.",
            "VernacInductive",
            "2cf6a6024a2f4bb50a96f4bf0b0435031ca8f267"
        ],
        [
            "Definition res_fmap (A B:Type) (f:A->B) (g:B->A)(x:res A) : res B := match x with | NO' rsh nsh => NO' B rsh nsh | YES' sh rsh k pds => YES' B sh rsh k (fmap preds f g pds) | PURE' k pds => PURE' B k (fmap preds f g pds) end.",
            "VernacDefinition",
            "fb5eec01fe83650ee9a9e101c5d98d2bb632d2e9"
        ],
        [
            "Lemma ff_res : functorFacts res res_fmap.",
            "VernacStartTheoremProof",
            "ba2889e2e58996385c27ce38da935a49cc556094"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "constructor; intros; extensionality rs; icase rs; unfold res_fmap.",
            "VernacExtend",
            "effe571336809c1a58d0e210db0574a52c7bac39"
        ],
        [
            "rewrite fmap_id...",
            "VernacExtend",
            "2f1a65acf8a01e971b673a0ce4e0218f72948cd6"
        ],
        [
            "rewrite fmap_id...",
            "VernacExtend",
            "2f1a65acf8a01e971b673a0ce4e0218f72948cd6"
        ],
        [
            "rewrite <- fmap_comp...",
            "VernacExtend",
            "69919a1bdfbbb083ed01aa459cbba716cbd4b929"
        ],
        [
            "rewrite <- fmap_comp...",
            "VernacExtend",
            "69919a1bdfbbb083ed01aa459cbba716cbd4b929"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition f_res : functor := Functor ff_res.",
            "VernacDefinition",
            "0d4c60adfdf938e9df76fde2309beb1e9343f462"
        ],
        [
            "Inductive res_join (PRED : Type) : f_res PRED -> f_res PRED -> f_res PRED -> Prop := | res_join_NO1 : forall sh1 nsh1 sh2 nsh2 sh3 nsh3, join sh1 sh2 sh3 -> res_join PRED (NO' PRED sh1 nsh1) (NO' PRED sh2 nsh2) (NO' PRED sh3 nsh3) | res_join_NO2 : forall sh1 nsh1 sh2 rsh2 sh3 rsh3 k p, join sh1 sh2 sh3 -> res_join PRED (NO' PRED sh1 nsh1) (YES' PRED sh2 rsh2 k p) (YES' PRED sh3 rsh3 k p) | res_join_NO3 : forall sh1 rsh1 sh2 nsh2 sh3 rsh3 k p, join sh1 sh2 sh3 -> res_join PRED (YES' PRED sh1 rsh1 k p) (NO' PRED sh2 nsh2) (YES' PRED sh3 rsh3 k p) | res_join_YES : forall sh1 rsh1 sh2 rsh2 sh3 rsh3 k p, join sh1 sh2 sh3 -> res_join PRED (YES' PRED sh1 rsh1 k p) (YES' PRED sh2 rsh2 k p) (YES' PRED sh3 rsh3 k p) | res_join_PURE : forall k p, res_join PRED (PURE' PRED k p) (PURE' PRED k p) (PURE' PRED k p).",
            "VernacInductive",
            "340757975e834fb845922790e6279fcfdd79a47a"
        ],
        [
            "Instance Join_res (PRED: Type) : Join (res PRED) := res_join PRED.",
            "VernacInstance",
            "560c573855c7ca4b4653b499943cf5bf43988b3f"
        ],
        [
            "Instance pa_rj : forall PRED, @Perm_alg _ (res_join PRED).",
            "VernacInstance",
            "331131a034ce9a3f6e40e789b0e45ad953d7d809"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros x y z z' H1 H2; inv H1; inv H2; repeat match goal with H: join ?A ?B _, H': join ?A ?B ?C |- _ => pose proof (join_eq H H'); subst C end; repeat proof_irr; auto.",
            "VernacExtend",
            "8e45247e00e55b95202d0897d89730c2ebebeba7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros a b c d e H1 H2.",
            "VernacExtend",
            "c518a9a80a4ea3d485ca5d839da76ba7065766ef"
        ],
        [
            "destruct d as [rd | rd sd kd pd | kd pd].",
            "VernacExtend",
            "e046ea1425ee380d7414438e6eade45f859745a8"
        ],
        [
            "destruct a as [ra | | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "e0f94aa5f2782b8800402cd11c16021ce3cec0e4"
        ],
        [
            "destruct b as [rb| | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "3dbdb04e0905f1985985d9823a3432cbea44f683"
        ],
        [
            "assert (join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "057c261f589bc97b3dc1945f8e16b3a1fe677f61"
        ],
        [
            "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "6be0dd3a097f0eba9a58be9fdf761762e788f444"
        ],
        [
            "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "5b6c7a92eb7806499695088674e46a183eac3523"
        ],
        [
            "assert (join rd rc re) by (inv H2; auto).",
            "VernacExtend",
            "3bb89ca2713fb59338fa825cf31b209651828d06"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (NO' _ rf (join_unreadable_shares H3 n1 n2)); split; constructor; auto.",
            "VernacExtend",
            "d7a83570ce2c487a3f842167a322a0bdff3bde2d"
        ],
        [
            "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "5b6c7a92eb7806499695088674e46a183eac3523"
        ],
        [
            "assert (join rd rc re) by (inv H2; auto).",
            "VernacExtend",
            "3bb89ca2713fb59338fa825cf31b209651828d06"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES' _ rf (join_readable2 H3 sc) kc pc).",
            "VernacExtend",
            "79b9e11c7f07276cfd6a335467020004819f7148"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
        ],
        [
            "split; constructor; auto.",
            "VernacExtend",
            "c6608d22455cba65ae2ee26abc26f3257320064f"
        ],
        [
            "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "6be0dd3a097f0eba9a58be9fdf761762e788f444"
        ],
        [
            "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "5b6c7a92eb7806499695088674e46a183eac3523"
        ],
        [
            "assert (H0: join rd rc re) by (inv H2; auto).",
            "VernacExtend",
            "91a68676b879ae30be2ea8b4bcec27ab9c728724"
        ],
        [
            "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "c06e3505f829ec26eb5618d0751e53490da6235e"
        ],
        [
            "destruct b as [ | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "d2ab6c10d9e4714190afab12d0b45d98c0498b9d"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES' _ rf (join_readable1 H3 sb) kd pd).",
            "VernacExtend",
            "3eb968a0de1a6ce135cbfa8102c7cb89d4fb9115"
        ],
        [
            "inv H1; inv H2; split; constructor; auto.",
            "VernacExtend",
            "200dfa0a5d72160575937d960ae478d921d75ea8"
        ],
        [
            "destruct b as [ rb | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "80aaf1bde8f53727fe71015b9fa66fa0923cd751"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (NO' _ rf (join_unreadable_shares H3 n0 n)).",
            "VernacExtend",
            "bc7b3c8fb15362fcd1a49c9358ae40ca9c3e74ff"
        ],
        [
            "inv H1; inv H2; split; constructor; auto.",
            "VernacExtend",
            "200dfa0a5d72160575937d960ae478d921d75ea8"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES' _ rf (join_readable1 H3 sb) kb pb).",
            "VernacExtend",
            "5a8348fc0855eb73d4f253da2d24cfd9d9b3cb42"
        ],
        [
            "inv H1; inv H2; split; constructor; auto.",
            "VernacExtend",
            "200dfa0a5d72160575937d960ae478d921d75ea8"
        ],
        [
            "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "5b6c7a92eb7806499695088674e46a183eac3523"
        ],
        [
            "assert (H0: join rd rc re) by (inv H2; auto).",
            "VernacExtend",
            "91a68676b879ae30be2ea8b4bcec27ab9c728724"
        ],
        [
            "destruct b as [ rb | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "80aaf1bde8f53727fe71015b9fa66fa0923cd751"
        ],
        [
            "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "c06e3505f829ec26eb5618d0751e53490da6235e"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES' _ rf (join_readable2 H3 sc) kc pc).",
            "VernacExtend",
            "79b9e11c7f07276cfd6a335467020004819f7148"
        ],
        [
            "inv H1; inv H2; split; constructor; auto.",
            "VernacExtend",
            "200dfa0a5d72160575937d960ae478d921d75ea8"
        ],
        [
            "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "c06e3505f829ec26eb5618d0751e53490da6235e"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES' _ rf (join_readable1 H3 sb) kb pb).",
            "VernacExtend",
            "5a8348fc0855eb73d4f253da2d24cfd9d9b3cb42"
        ],
        [
            "inv H1; inv H2; split; try constructor; auto.",
            "VernacExtend",
            "1eafabaf73fd14b35a53a351ec7f8d593da61680"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES' _ rf (join_readable1 H3 sb) kb pb).",
            "VernacExtend",
            "5a8348fc0855eb73d4f253da2d24cfd9d9b3cb42"
        ],
        [
            "inv H1; inv H2; split; try constructor; auto.",
            "VernacExtend",
            "1eafabaf73fd14b35a53a351ec7f8d593da61680"
        ],
        [
            "exists (PURE' _ kd pd).",
            "VernacExtend",
            "c66d333b24852c1239d384b8a3d761f1a228672a"
        ],
        [
            "inv H1; inv H2; split; constructor.",
            "VernacExtend",
            "39568c874451b84fa1c803d549e1839b021e370a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros a b c H; inv H; econstructor; apply join_comm; auto.",
            "VernacExtend",
            "ee180ca5472b7f5c6edcc15c3d8cbc135db57044"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros; inv H; inv H0; repeat match goal with H: join ?A ?B ?C, H': join ?C ?D ?A |- _ => pose proof (join_positivity H H'); subst C end; repeat proof_irr; auto.",
            "VernacExtend",
            "c728dd9fe975820a719d354796a974d8150a6778"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance sa_rj : forall PRED, @Sep_alg _ (res_join PRED).",
            "VernacInstance",
            "0ad1c653c0d2882dd579e7511d1b701b592d2bdf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply mkSep with (fun x => match x with NO' _ _ => NO' _ Share.bot bot_unreadable | YES' _ _ _ _ => NO' _ Share.bot bot_unreadable | PURE' k pds => PURE' _ k pds end).",
            "VernacExtend",
            "f32c71b73ff81c14b0aa0042391c863b9edfc99a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct t; constructor; try apply join_unit1; auto.",
            "VernacExtend",
            "627f5aaa13d90ad3025372f342a8350d36ee2908"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; auto.",
            "VernacExtend",
            "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition paf_res : @pafunctor f_res res_join.",
            "VernacDefinition",
            "93b4a43377d1764553178bef5280339e5c4295a3"
        ],
        [
            "constructor; repeat intro.",
            "VernacExtend",
            "e53357b67d6471fb9a75c69c70ca9f8996a2cb1d"
        ],
        [
            "inv H; simpl; constructor; trivial.",
            "VernacExtend",
            "1824f8ea257938f34979ac469f428c0ad840df34"
        ],
        [
            "destruct z as [ rz | rz sz kz pz | kz pz ].",
            "VernacExtend",
            "91a0fe422a813f65100de8ae178e0e72588fb596"
        ],
        [
            "destruct x' as [ rx' | rx' sx' kx' px' | kx' px' ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "2cce3d9a58adc56500308c579440defa0ff1134b"
        ],
        [
            "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "17604931d5ff28e8c1c55f647a33f1f22462599c"
        ],
        [
            "exists (NO' _ rx' n0); exists (NO' _ ry n1); inv H; split; constructor; tauto.",
            "VernacExtend",
            "580c787f708c96ed09c808a1b598d83188db7161"
        ],
        [
            "destruct x' as [ rx' | rx' sx' kx' px' | kx' px' ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "2cce3d9a58adc56500308c579440defa0ff1134b"
        ],
        [
            "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "17604931d5ff28e8c1c55f647a33f1f22462599c"
        ],
        [
            "exists (NO' _ rx' n); exists (YES' _ ry sy kz pz); inv H; split; constructor; auto.",
            "VernacExtend",
            "3479c025a939fed6395c69a2521b5fe6e8991471"
        ],
        [
            "simpl in *; f_equal; auto.",
            "VernacExtend",
            "43e80262ad6dbc97e2661ac560f9a6840d334f46"
        ],
        [
            "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "17604931d5ff28e8c1c55f647a33f1f22462599c"
        ],
        [
            "exists (YES' _ rx' sx' kx' pz); exists (NO' _ ry n); inv H; split; constructor; auto.",
            "VernacExtend",
            "a9131f35a38fba2dc5d6b7fadb2eae09f0e830ef"
        ],
        [
            "exists (YES' _ rx' sx' kx' pz); exists (YES' _ ry sy ky pz); inv H; split; constructor; auto; simpl; f_equal; auto.",
            "VernacExtend",
            "7ab58db23691dd6492c7c52af040629f8393889c"
        ],
        [
            "exists (PURE' _ kz pz); exists (PURE' _ kz pz); simpl in *; inv H; split; [constructor | tauto].",
            "VernacExtend",
            "d3b7dafbd9e166cba1654fe83772875281428ec4"
        ],
        [
            "destruct x as [ rx | rx sx kx px | kx px ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "40dc55773706c74c3de2ed1f7a2b959b383c6f27"
        ],
        [
            "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "17604931d5ff28e8c1c55f647a33f1f22462599c"
        ],
        [
            "destruct z' as [ rz | rz sz kz pz | kz pz ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "f9298e4823c53446061a4625b75552de05e52fc9"
        ],
        [
            "exists (NO' _ ry n0); exists (NO' _ rz n1); inv H; split; constructor; auto.",
            "VernacExtend",
            "90f3c72b98eb71c1049e5e2d9b1486f456cede99"
        ],
        [
            "destruct z' as [ rz | rz sz kz pz | kz pz ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "f9298e4823c53446061a4625b75552de05e52fc9"
        ],
        [
            "exists (YES' _ ry sy ky py); exists (YES' _ rz sz ky py); inv H; split; constructor; auto.",
            "VernacExtend",
            "2ca0d71c0019608fded1bdcfb12c7ff90651dc32"
        ],
        [
            "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "17604931d5ff28e8c1c55f647a33f1f22462599c"
        ],
        [
            "destruct z' as [ rz | rz sz kz pz | kz pz ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "f9298e4823c53446061a4625b75552de05e52fc9"
        ],
        [
            "exists (NO' _ ry n); exists (YES' _ rz sz kx px); inv H; split; constructor; auto.",
            "VernacExtend",
            "17b1cf69a21c97a36d2b298cdc3ecb1d67e983fa"
        ],
        [
            "destruct z' as [ rz | rz sz kz pz | kz pz ]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "f9298e4823c53446061a4625b75552de05e52fc9"
        ],
        [
            "exists (YES' _ ry sy kx px); exists (YES' _ rz sz kx px); inv H; split; constructor; auto.",
            "VernacExtend",
            "46ba48da4616d7da5ffcc5f4890864bed6fb283a"
        ],
        [
            "simpl; f_equal; auto.",
            "VernacExtend",
            "649eee8ad709ffbf62b1618162e754841096d2ee"
        ],
        [
            "exists (PURE' _ kx px); exists (PURE' _ kx px); inv H; split; constructor; auto.",
            "VernacExtend",
            "ecbe0689e213d81058ca7b37086f8a716b9acb10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition res_option (PRED : Type) (r: res PRED) : option (rshare * kind):= match r with | NO' _ _ => None | YES' sh rsh k _ => Some (readable_part rsh,k) | PURE' _ _ => None end.",
            "VernacDefinition",
            "71d226dd31fe390d0eb7aa1f8a57995d146f4ce9"
        ],
        [
            "Definition ghost (PRED : Type) : Type := list (option ({g: Ghost & {a: @G g | ghost.valid a}} * fpreds PRED)%type).",
            "VernacDefinition",
            "8e1c7a73b23a8e261b2abb925153b95f0d096ec4"
        ],
        [
            "Definition ghost_fmap (A B:Type) (f:A->B) (g:B->A)(x:ghost A) : ghost B := fmap (flist (foption (fpair (fconst _) fpreds))) f g x.",
            "VernacDefinition",
            "12b954e37828ce39a4b4a0882294fd2019107eab"
        ],
        [
            "Lemma ff_ghost : functorFacts ghost ghost_fmap.",
            "VernacStartTheoremProof",
            "a07a93bdc0b1d802da7c60065192c400b5a52b67"
        ],
        [
            "constructor; intros; extensionality x; unfold ghost_fmap.",
            "VernacExtend",
            "a7005099376c5e2657eb9cf3ab55b7b3db53f860"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite fmap_id; auto.",
            "VernacExtend",
            "571ee35389dd15522fb0012420f7bf84e8a88b76"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- fmap_comp; auto.",
            "VernacExtend",
            "649942f860e15a4eee3d429015acf6da7e0b0114"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition f_ghost : functor := Functor ff_ghost.",
            "VernacDefinition",
            "2b3b4493e28ba838948552eb109cd24d45035aa6"
        ],
        [
            "Instance preds_join PRED : Join _ := Join_equiv (fpreds PRED).",
            "VernacInstance",
            "61181a32a2039e9bcab89abbc5e850d624a1295a"
        ],
        [
            "Inductive ghost_elem_join : Join {g: Ghost & {a: @G g | ghost.valid a}} := | elem_join_I g a b c va vb vc: join a b c -> ghost_elem_join (existT _ g (exist _ a va)) (existT _ g (exist _ b vb)) (existT _ g (exist _ c vc)).",
            "VernacInductive",
            "ede7ac2641b90830b8207c03abe1da47e3f76a67"
        ],
        [
            "Existing Instance ghost_elem_join.",
            "VernacDeclareInstances",
            "f811fe3684a41cc9f7cb1818e85ba33a34a4ed3f"
        ],
        [
            "Inductive ghost_join PRED : Join (ghost PRED) := | ghost_join_nil_l m: ghost_join PRED nil m m | ghost_join_nil_r m: ghost_join PRED m nil m | ghost_join_cons a1 a2 m1 m2 a3 m3: join a1 a2 a3 -> ghost_join PRED m1 m2 m3 -> ghost_join PRED (a1 :: m1) (a2 :: m2) (a3 :: m3).",
            "VernacInductive",
            "80732e6f6676763192f198f7b6326462718553bb"
        ],
        [
            "Hint Constructors ghost_join.",
            "VernacHints",
            "e713d18506c3b906751db6661f81ea08d5160405"
        ],
        [
            "Existing Instance ghost_join.",
            "VernacDeclareInstances",
            "7e324d0362ce3c81ae23004e3f34e2c7a90a4967"
        ],
        [
            "Lemma elem_join_inv: forall a1 a2 a3, ghost_elem_join a1 a2 a3 -> match a1, a2, a3 with | existT g1 (exist x1 _), existT g2 (exist x2 _), existT g3 (exist x3 _) => exists H: g2 = g1, exists H': g3 = g1, join x1 (eq_rect _ _ x2 _ H) (eq_rect _ _ x3 _ H') end.",
            "VernacStartTheoremProof",
            "3f68ce94126f27c1d21c97fdff5320e3fdb92c3d"
        ],
        [
            "inversion 1; subst.",
            "VernacExtend",
            "bc8d5fb79c939337a7050fe493472018372e19e2"
        ],
        [
            "exists eq_refl, eq_refl; auto.",
            "VernacExtend",
            "a6ca18869af72d5e3b761ee6b58e4449a52a611f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ghost_join_inv: forall PRED m1 m2 m3, ghost_join PRED m1 m2 m3 -> match m1, m2 with | nil, _ => m3 = m2 | _, nil => m3 = m1 | a1 :: m1, a2 :: m2 => match m3 with nil => False | a3 :: m3 => join a1 a2 a3 /\\ ghost_join PRED m1 m2 m3 end end.",
            "VernacStartTheoremProof",
            "8849d5345424bb6169a39e9fc288296f43f87eef"
        ],
        [
            "induction 1; simpl; auto.",
            "VernacExtend",
            "c744c0db2f17ed7745b4893bfd3017058a6e4828"
        ],
        [
            "destruct m; simpl; auto.",
            "VernacExtend",
            "94781fbacb55d6a7e74b34f87daed7127004ccb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance pa_gej : @Perm_alg _ ghost_elem_join.",
            "VernacInstance",
            "0e113d6d4fc206a57884e99d144797247dad0505"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion 1; inversion 1; subst.",
            "VernacExtend",
            "ce6b0fb553b0b5f93ea74b3e4865b85bb61c6b44"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst).",
            "VernacExtend",
            "207637b6281a76cfd4ada6eca6b28b2deb557f70"
        ],
        [
            "f_equal; eapply exist_ext, join_eq; eauto.",
            "VernacExtend",
            "e0520ec759434dd1b8c3df5ee8977967d8f366a9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros ????? J1%elem_join_inv J2%elem_join_inv.",
            "VernacExtend",
            "3c0cc37e922c8c939a15ab89f62aff0c8d404f94"
        ],
        [
            "destruct a as (ga & a & ?), b as (gb & b & ?), c as (gc & c & ?), d as (gd & d & ?), e as (ge & e & ?).",
            "VernacExtend",
            "133fd865ca1a99bd1acbac65d59521ea38c0f7fa"
        ],
        [
            "repeat (apply realize_eq in J1; destruct J1 as [? J1]).",
            "VernacExtend",
            "450a3ab880a602995ad32ebdab58e70dba5823a0"
        ],
        [
            "repeat (apply realize_eq in J2; destruct J2 as [? J2]); subst.",
            "VernacExtend",
            "e376952dd2c5d18121e4a828674b43fefc523ab5"
        ],
        [
            "destruct (join_assoc J1 J2) as (f & ? & J).",
            "VernacExtend",
            "39b5943bfabf8cea2129d9f64cf2a45cf36dafc0"
        ],
        [
            "exists (existT _ ga (exist _ f (join_valid _ _ _ (join_comm J) v3))).",
            "VernacExtend",
            "6532b0f70abf6d8e8f2ba41d3598ddec5aa5327f"
        ],
        [
            "split; constructor; auto.",
            "VernacExtend",
            "c6608d22455cba65ae2ee26abc26f3257320064f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion 1; constructor; auto.",
            "VernacExtend",
            "897a7862094a2c2170efdc5720c1f8197bce64b6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion 1; subst; inversion 1; subst; auto.",
            "VernacExtend",
            "c389a43e7db002dc588f7ffb4e6f98f14ecda00d"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst).",
            "VernacExtend",
            "207637b6281a76cfd4ada6eca6b28b2deb557f70"
        ],
        [
            "f_equal; eapply exist_ext, join_positivity; eauto.",
            "VernacExtend",
            "153928d39c3f70b7490d56c70066e221474ffb92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance pa_gj : forall PRED, @Perm_alg _ (ghost_join PRED).",
            "VernacInstance",
            "f7fe45218db6a4b3896f1f2c53378fbe4f68aa5a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros until 1; revert z'; induction H; inversion 1; subst; auto.",
            "VernacExtend",
            "d26839b9f0b27c93c2d46c0427ea2e52f91d5c92"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "eapply join_eq; eauto.",
            "VernacExtend",
            "ccf59f1f695e4c180b0ea6a817cf2aad71c65ad6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction a; intros ???? J1 J2; apply ghost_join_inv in J1; subst.",
            "VernacExtend",
            "860dc17ac4deee4c87458ef71746eeae03407f9f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists e; split; auto; constructor.",
            "VernacExtend",
            "46879c0af8f3ad8d61fbf59090b59e74b60e0886"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct b; subst; [eexists; split; eauto; constructor|].",
            "VernacExtend",
            "4aeae7a3fc64282a7cfd9d1d9565e170f68bdc3c"
        ],
        [
            "destruct d; [contradiction|].",
            "VernacExtend",
            "83c56892b44297469acd7216ab80567d366a2c91"
        ],
        [
            "destruct J1 as [Jc1 J1].",
            "VernacExtend",
            "09498b45d2f0c9c85f69da257828dc87ba2c645a"
        ],
        [
            "apply ghost_join_inv in J2.",
            "VernacExtend",
            "c9f5a568af212525b526f3fec476bdd318112ac1"
        ],
        [
            "destruct c; subst; [eexists; split; eauto; constructor; auto|].",
            "VernacExtend",
            "a7215ea438caca2ebdca551ba1b44a6c7c2aeb94"
        ],
        [
            "destruct e; [contradiction|].",
            "VernacExtend",
            "29bb6899a08667cce45a25660cbb8e80a63a8e07"
        ],
        [
            "destruct J2 as [Jc2 J2].",
            "VernacExtend",
            "feec88a5138071371bcbd51c43c9219841408599"
        ],
        [
            "destruct (join_assoc Jc1 Jc2) as (f & ? & ?).",
            "VernacExtend",
            "8890d9cd57388835604ab19d2e21b0cd3eed5624"
        ],
        [
            "destruct (IHa _ _ _ _ J1 J2) as (f' & ? & ?).",
            "VernacExtend",
            "1e9982b2dab1a3397bfb5fcd397c56fad99e0c41"
        ],
        [
            "exists (f :: f'); split; constructor; auto.",
            "VernacExtend",
            "8b8cb13ce80e24583cdf7fcbedcbc1343b55f587"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction 1; constructor; auto.",
            "VernacExtend",
            "ff51879142eef61207638aeecdcf6617e01ec60f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros until 1; revert b'; induction H; inversion 1; subst; auto.",
            "VernacExtend",
            "95a0dd93b315ac49ada2e7db9c1acad8d77e7dd3"
        ],
        [
            "f_equal; eauto.",
            "VernacExtend",
            "0aaae116840c77af05ab473518cd728dcb792af6"
        ],
        [
            "eapply join_positivity; eauto.",
            "VernacExtend",
            "b262d9d0323b0c99e4dff673bcb8aed87da0254b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance sa_gj : forall PRED, @Sep_alg _ (ghost_join PRED).",
            "VernacInstance",
            "e065c33c694559671495e3b5cdc8b86273a25cc0"
        ],
        [
            "intros; exists (fun _ => nil); auto; constructor.",
            "VernacExtend",
            "0b12e90e31e0d1c8418f220dc65fcacefd9d10c1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Opaque fpreds.",
            "VernacSetOpacity",
            "05afefa7275f21094ed648dc8a57b12586ba9866"
        ],
        [
            "Definition paf_ghost : @pafunctor f_ghost ghost_join.",
            "VernacDefinition",
            "e369a0d7cfb214e085cd28b11a81213d64c72c2a"
        ],
        [
            "constructor; repeat intro.",
            "VernacExtend",
            "e53357b67d6471fb9a75c69c70ca9f8996a2cb1d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction H; constructor; auto.",
            "VernacExtend",
            "0cdcec2c9e6eec98889a8fd6b00452376de5b2ba"
        ],
        [
            "inv H; constructor; auto.",
            "VernacExtend",
            "94c2a63227e9a0494888b6417590039e3b09dc19"
        ],
        [
            "inv H1; constructor; auto.",
            "VernacExtend",
            "00c536575aedd4707ca1576a00dfb739992f69d9"
        ],
        [
            "inv H2; constructor; auto; simpl; congruence.",
            "VernacExtend",
            "0e3b0ce9b1ae3d1e0f42d525f472fe859d6ae47c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "revert dependent z; revert y; induction x'; intros; apply ghost_join_inv in H.",
            "VernacExtend",
            "bf80e172104ebf230e3936b9fc2ec7aa8b79b0a6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists nil, z; split; auto; constructor.",
            "VernacExtend",
            "d794cc4a03f39962f574ec3ff59b4ef49fe9f98a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct y; simpl in *.",
            "VernacExtend",
            "07e55ddd3381d9ecb9f324c907a9fd9c091330a9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists z, nil; split; auto; constructor.",
            "VernacExtend",
            "c414254ba7e0d85a6a611c676d736e068d3f7f37"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct z; [contradiction | simpl in *].",
            "VernacExtend",
            "174e3238f6c8404922011eeca576c3db119694d2"
        ],
        [
            "destruct H as [J1 J2].",
            "VernacExtend",
            "1ddb803c69086b8cb5f03180775c6869022e81ed"
        ],
        [
            "destruct (IHx' _ _ J2) as (x & y' & ? & ? & ?); subst.",
            "VernacExtend",
            "c1dce968d0884931c5b8a346a163ca4f480bcc4c"
        ],
        [
            "apply lower_join_inv in J1.",
            "VernacExtend",
            "ca90223d65ba24abdd20da6711aeff546373eb06"
        ],
        [
            "destruct a as [[[? []]]|].",
            "VernacExtend",
            "7b895c98dfd3c01f0e845230ee43d756d6d97f49"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct o as [[[? []]]|].",
            "VernacExtend",
            "b482b81c17f5d1737326e4b655d489a33f4463c6"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct o0 as [[[? []]]|]; [|contradiction].",
            "VernacExtend",
            "234488782aee0440a2ca29508748cd489a7a144f"
        ],
        [
            "destruct J1 as [J1%elem_join_inv J1']; simpl in *.",
            "VernacExtend",
            "25f30d7441aa6aae6004b40b02bad4680ecd675e"
        ],
        [
            "repeat (apply realize_eq in J1 as [? J1]); subst; simpl in *.",
            "VernacExtend",
            "5497e55908f0c8a054dcef164ae492aa11cebe85"
        ],
        [
            "exists (Some (existT _ x0 (exist _ _ v), _f1) :: x), (Some (existT _ x0 (exist _ _ v0), _f1) :: y').",
            "VernacExtend",
            "6ef1cb77fa67f298fd6c28157157382987d46b76"
        ],
        [
            "split; [repeat constructor; auto|].",
            "VernacExtend",
            "1530f2b70bde3c9df8355df8201672e1e577e61a"
        ],
        [
            "unfold ghost_fmap in *; simpl in *.",
            "VernacExtend",
            "b6757a55a209f8e5dd008f806461d9b519e18dd8"
        ],
        [
            "inv J1'.",
            "VernacExtend",
            "7919468d4e80eb693147dd5bc7f96ece4b4949f5"
        ],
        [
            "rewrite <- H1, <- H2; auto.",
            "VernacExtend",
            "8c1128f81681bb41b21815e09f653800ba23566d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct o0 as [[[? []]]|]; [|contradiction].",
            "VernacExtend",
            "234488782aee0440a2ca29508748cd489a7a144f"
        ],
        [
            "inv J1.",
            "VernacExtend",
            "d81dd68654abd716496fc9cc8cd037487a7c714b"
        ],
        [
            "match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst.",
            "VernacExtend",
            "29ce5e03ab3d26f23d3a8e03c5d606080de26d69"
        ],
        [
            "exists (Some (existT _ x2 (exist _ _ v0), _f0) :: x), (None :: y').",
            "VernacExtend",
            "e3b060683f5600cad5a8a462db48abb5b2e40183"
        ],
        [
            "split; [repeat constructor; auto|].",
            "VernacExtend",
            "1530f2b70bde3c9df8355df8201672e1e577e61a"
        ],
        [
            "unfold ghost_fmap in *; simpl in *.",
            "VernacExtend",
            "b6757a55a209f8e5dd008f806461d9b519e18dd8"
        ],
        [
            "rewrite <- H1; split; f_equal; f_equal; f_equal; f_equal.",
            "VernacExtend",
            "99dc35564b3dcdf19c21c238c930fb5b4bbd6052"
        ],
        [
            "apply exist_ext; auto.",
            "VernacExtend",
            "1838dc4334fa2f223e9f5af0a4dee6936a1b5e3a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists (None :: x), (o0 :: y').",
            "VernacExtend",
            "4ac5c682dda6d541485b2c0c3477ce173c9f1dcf"
        ],
        [
            "split; [repeat constructor; auto|].",
            "VernacExtend",
            "1530f2b70bde3c9df8355df8201672e1e577e61a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "unfold ghost_fmap in *; simpl in *.",
            "VernacExtend",
            "b6757a55a209f8e5dd008f806461d9b519e18dd8"
        ],
        [
            "rewrite <- H1; f_equal.",
            "VernacExtend",
            "101d15354648348a628c7b49983620a37f95bf8c"
        ],
        [
            "destruct o, o0; inv J1; auto.",
            "VernacExtend",
            "e15034e77b82dd397a708087b42d20277ba2ce55"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "revert dependent z'; revert y; induction x; intros; apply ghost_join_inv in H; simpl in H.",
            "VernacExtend",
            "5f961fffdb78c44940382a1af7e9ecf2f7c898e5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists y, y; split; auto; constructor.",
            "VernacExtend",
            "9646ec3f3fd14d15049cf0a36b07616a03ff093e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct y; simpl in *.",
            "VernacExtend",
            "07e55ddd3381d9ecb9f324c907a9fd9c091330a9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists nil, (a :: x); split; auto; constructor.",
            "VernacExtend",
            "25ece4509c76b0e9ffa220e7fea5e190798d55f7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct z'; [contradiction | simpl in *].",
            "VernacExtend",
            "fa4eaaee792b26590fd0e90e185f780ed4a2fb7b"
        ],
        [
            "destruct H as [J1 J2].",
            "VernacExtend",
            "1ddb803c69086b8cb5f03180775c6869022e81ed"
        ],
        [
            "destruct (IHx _ _ J2) as (y' & z & ? & ? & ?); subst.",
            "VernacExtend",
            "698548d2ab0bb4abc9ebf30b3daa42f5172ad69e"
        ],
        [
            "apply lower_join_inv in J1.",
            "VernacExtend",
            "ca90223d65ba24abdd20da6711aeff546373eb06"
        ],
        [
            "destruct a as [[[? []]]|].",
            "VernacExtend",
            "7b895c98dfd3c01f0e845230ee43d756d6d97f49"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct o as [[[? []]]|].",
            "VernacExtend",
            "b482b81c17f5d1737326e4b655d489a33f4463c6"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct o0 as [[[? []]]|]; [|contradiction].",
            "VernacExtend",
            "234488782aee0440a2ca29508748cd489a7a144f"
        ],
        [
            "destruct J1 as [J1%elem_join_inv J1']; simpl in *.",
            "VernacExtend",
            "25f30d7441aa6aae6004b40b02bad4680ecd675e"
        ],
        [
            "repeat (apply realize_eq in J1 as [? J1]); subst; simpl in *.",
            "VernacExtend",
            "5497e55908f0c8a054dcef164ae492aa11cebe85"
        ],
        [
            "exists (Some (existT _ x0 (exist _ _ v0), _f) :: y'), (Some (existT _ x0 (exist _ _ v1), _f) :: z).",
            "VernacExtend",
            "67546fd05a63bb0d7514e0c7e5305beebdbaa542"
        ],
        [
            "split; [repeat constructor; auto|].",
            "VernacExtend",
            "1530f2b70bde3c9df8355df8201672e1e577e61a"
        ],
        [
            "unfold ghost_fmap in *; simpl in *.",
            "VernacExtend",
            "b6757a55a209f8e5dd008f806461d9b519e18dd8"
        ],
        [
            "inv J1'.",
            "VernacExtend",
            "7919468d4e80eb693147dd5bc7f96ece4b4949f5"
        ],
        [
            "rewrite <- H0, <- H1; auto.",
            "VernacExtend",
            "e333609fb223d689dfe799dbc4e2bad4f0e467a6"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct o0 as [[[? []]]|]; [|contradiction].",
            "VernacExtend",
            "234488782aee0440a2ca29508748cd489a7a144f"
        ],
        [
            "inv J1.",
            "VernacExtend",
            "d81dd68654abd716496fc9cc8cd037487a7c714b"
        ],
        [
            "match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst.",
            "VernacExtend",
            "29ce5e03ab3d26f23d3a8e03c5d606080de26d69"
        ],
        [
            "exists (None :: y'), (Some (existT _ x2 (exist _ _ v), _f) :: z).",
            "VernacExtend",
            "a3dce8feb01000b46fad09890f54dcb009da261c"
        ],
        [
            "split; [repeat constructor; auto|].",
            "VernacExtend",
            "1530f2b70bde3c9df8355df8201672e1e577e61a"
        ],
        [
            "unfold ghost_fmap in *; simpl in *.",
            "VernacExtend",
            "b6757a55a209f8e5dd008f806461d9b519e18dd8"
        ],
        [
            "rewrite <- H0; split; f_equal; f_equal; f_equal; f_equal.",
            "VernacExtend",
            "404c1bfe3210fe9724e28863dc30e81234fe081f"
        ],
        [
            "apply exist_ext; auto.",
            "VernacExtend",
            "1838dc4334fa2f223e9f5af0a4dee6936a1b5e3a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists (o :: y'), (o :: z).",
            "VernacExtend",
            "3edbbb32b9808f205057c0bb965879c26666951f"
        ],
        [
            "split; [repeat constructor; auto|].",
            "VernacExtend",
            "1530f2b70bde3c9df8355df8201672e1e577e61a"
        ],
        [
            "unfold ghost_fmap in *; simpl in *; rewrite <- H0; split; f_equal.",
            "VernacExtend",
            "703cbe7beceeed8ec0a8cae767f2cdf4ee796d00"
        ],
        [
            "destruct o, o0; auto; contradiction.",
            "VernacExtend",
            "66d89a8433b8617e3c6054679855f25951ad61b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pre_rmap (A:Type) := ((address -> res A) * ghost A)%type.",
            "VernacDefinition",
            "c73ec77fd97a68257780fbf4f4ce288c786285e2"
        ],
        [
            "Definition f_pre_rmap : functor := fpair (ffunc (fconst address) f_res) f_ghost.",
            "VernacDefinition",
            "bb0dbf67d0b847dfde544879087752a9abdc2558"
        ],
        [
            "Notation Join_obj A := (Join_prod _ (Join_fun address (res A) (res_join A)) _ (ghost_join A)).",
            "VernacSyntacticDefinition",
            "3584c88b7d2acd9912be5e1e5b79e998139387cd"
        ],
        [
            "Instance Join_pre_rmap (A: Type) : Join (pre_rmap A) := Join_obj A.",
            "VernacInstance",
            "059697d7806ea1febd83a68d53b4fe04b4eac628"
        ],
        [
            "Definition paf_pre_rmap : @pafunctor f_pre_rmap Join_pre_rmap := paf_pair (paf_fun address paf_res) paf_ghost.",
            "VernacDefinition",
            "d5a226e1a361f1842a5401a65b800ede5fbd470e"
        ],
        [
            "Definition Perm_pre_rmap (A: Type): Perm_alg (pre_rmap A) := Perm_prod (Perm_fun address _ _ _) (pa_gj A).",
            "VernacDefinition",
            "376c7f13389ddc014fecbeb43deb785a1f05df5e"
        ],
        [
            "Definition Sep_pre_rmap (A: Type): Sep_alg (pre_rmap A) := Sep_prod (Sep_fun address _ _ _) (sa_gj A).",
            "VernacDefinition",
            "6f7e5fdd0338c0926d619d1248801be19e8f4d65"
        ],
        [
            "Lemma pre_rmap_core: forall (A : Type) (m : f_pre_rmap A), @core (f_pre_rmap A) (Join_pre_rmap A) (Sep_pre_rmap A) m = (@core ((fpair (ffunc (fconst address) f_res) f_ghost) A) (Join_prod ((ffunc (fconst address) f_res) A) (Join_pi ((fconst address) A) (fun _ : (fconst address) A => f_res A) (fun _ : (fconst address) A => Join_res A)) (f_ghost A) (ghost_join A)) (@Sep_prod ((ffunc (fconst address) f_res) A) (Join_pi ((fconst address) A) (fun _ : (fconst address) A => f_res A) (fun _ : (fconst address) A => Join_res A)) (f_ghost A) (ghost_join A) (Sep_pi ((fconst address) A) (fun _ : (fconst address) A => f_res A) (fun _ : (fconst address) A => Join_res A) (fun _ : (fconst address) A => sa_rj A)) (sa_gj A)) m).",
            "VernacStartTheoremProof",
            "d7c80ed1d4ee4e47e7669c14edd10b76cba6ef9a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End StratModel.",
            "VernacEndSegment",
            "35ba22a9e63f11d1fbf165f99eec452e34ce1abd"
        ],
        [
            "Local Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "7386604700c7eb05ef0ae2947828bc909568dab7"
        ],
        [
            "Module Type RMAPS.",
            "VernacDeclareModuleType",
            "446876e03589bdcb4fecc012395d6883c0d467fb"
        ],
        [
            "Declare Module AV:ADR_VAL.",
            "VernacDeclareModule",
            "ab14368c521f029bae30d2e202858c905b1d9f6c"
        ],
        [
            "Import AV.",
            "VernacImport",
            "6a07e2e137d7561f56ba8cb3c6fff30e711f45c3"
        ],
        [
            "Parameter rmap : Type.",
            "VernacAssumption",
            "f7486f18cff452801197ea1fb615aa2a9f12b153"
        ],
        [
            "Axiom Join_rmap: Join rmap.",
            "VernacAssumption",
            "c283ce164647c23389dd4232d38923d3f4df9ae4"
        ],
        [
            "Existing Instance Join_rmap.",
            "VernacDeclareInstances",
            "f1085d9c76bcee1a3d8f6132a962ef35923cec25"
        ],
        [
            "Axiom Perm_rmap: Perm_alg rmap.",
            "VernacAssumption",
            "c7778333be2e2a214387a77211077a493dd91127"
        ],
        [
            "Existing Instance Perm_rmap.",
            "VernacDeclareInstances",
            "5b16e56c98d881c2bfb8488f2cff5184a8885bf6"
        ],
        [
            "Axiom Sep_rmap: Sep_alg rmap.",
            "VernacAssumption",
            "52cedbacae506f3972cd4836158798a8a53cf0f7"
        ],
        [
            "Existing Instance Sep_rmap.",
            "VernacDeclareInstances",
            "38257c6177b20e6335a217f2ccbe2c3e7f7551df"
        ],
        [
            "Axiom ag_rmap: ageable rmap.",
            "VernacAssumption",
            "64bb8a9662218481705b370060867d2667a67ff7"
        ],
        [
            "Existing Instance ag_rmap.",
            "VernacDeclareInstances",
            "8f589271598f258423dcdf17849cb9c8f1705292"
        ],
        [
            "Axiom Age_rmap: Age_alg rmap.",
            "VernacAssumption",
            "f90ce0fa372bf0f80f73d0c35c923c3a6c0c2a3f"
        ],
        [
            "Existing Instance Age_rmap.",
            "VernacDeclareInstances",
            "faadef0f83e0ca306dd36d3529aa9094713cfac7"
        ],
        [
            "Inductive preds : Type := SomeP : forall A : TypeTree, (forall ts: list Type, dependent_type_functor_rec ts A (pred rmap)) -> preds.",
            "VernacInductive",
            "503d1fba573dcba5cd5a6756739cb95748ad722b"
        ],
        [
            "Definition NoneP := SomeP (ConstType unit) (fun _ => tt).",
            "VernacDefinition",
            "7e5b1bfb81606057eced7a3e4b579de6e0b6389d"
        ],
        [
            "Inductive resource : Type := | NO: forall sh: Share.t, ~(readable_share sh) -> resource | YES: forall sh: Share.t, readable_share sh -> kind -> preds -> resource | PURE: kind -> preds -> resource.",
            "VernacInductive",
            "f5d90c778718276fed8373aaf908ac565bf611fc"
        ],
        [
            "Definition res_option (r:resource) : option (rshare * kind) := match r with | NO _ _ => None | YES sh rsh k _ => Some (readable_part rsh,k) | PURE k _ => None end.",
            "VernacDefinition",
            "f1dadd9243211b5fbb37230e061745c33351a59e"
        ],
        [
            "Inductive res_join : resource -> resource -> resource -> Prop := | res_join_NO1 : forall sh1 nsh1 sh2 nsh2 sh3 nsh3 (RJ: join sh1 sh2 sh3), res_join (NO sh1 nsh1) (NO sh2 nsh2) (NO sh3 nsh3) | res_join_NO2 : forall sh1 rsh1 sh2 nsh2 sh3 rsh3 k p (RJ: join sh1 sh2 sh3), res_join (YES sh1 rsh1 k p) (NO sh2 nsh2) (YES sh3 rsh3 k p) | res_join_NO3 : forall sh1 nsh1 sh2 rsh2 sh3 rsh3 k p (RJ: join sh1 sh2 sh3), res_join (NO sh1 nsh1) (YES sh2 rsh2 k p) (YES sh3 rsh3 k p) | res_join_YES : forall sh1 rsh1 sh2 rsh2 sh3 rsh3 k p (RJ: join sh1 sh2 sh3), res_join (YES sh1 rsh1 k p) (YES sh2 rsh2 k p) (YES sh3 rsh3 k p) | res_join_PURE : forall k p, res_join (PURE k p) (PURE k p) (PURE k p).",
            "VernacInductive",
            "4f33dce368ee43233d3f4915414d68cfcf17adfd"
        ],
        [
            "Instance Join_resource: Join resource := res_join.",
            "VernacInstance",
            "4da77b1004686649ba29b8ece351303590de973e"
        ],
        [
            "Axiom Perm_resource: Perm_alg resource.",
            "VernacAssumption",
            "fb189134373c94cf71340c2ccb86795e06c7b270"
        ],
        [
            "Existing Instance Perm_resource.",
            "VernacDeclareInstances",
            "4b031c0f885974edb535440d573d78f66d898429"
        ],
        [
            "Axiom Sep_resource: Sep_alg resource.",
            "VernacAssumption",
            "5e49b5ef4bbd70ea38ccf1f6f4a22dd3bc31bdef"
        ],
        [
            "Existing Instance Sep_resource.",
            "VernacDeclareInstances",
            "150c81d2984166bd850366df9bcfbfd177e85162"
        ],
        [
            "Definition preds_fmap (f g: pred rmap -> pred rmap) (x:preds) : preds := match x with SomeP A Q => SomeP A (fmap (fpi _) f g Q) end.",
            "VernacDefinition",
            "a752c12cdf06a15e07e1df8eeaabd2fab11d8c8d"
        ],
        [
            "Axiom preds_fmap_id : preds_fmap (id _) (id _) = id preds.",
            "VernacAssumption",
            "4ca7b41c61c6a9fff7d1912366dd09f322bdc5e3"
        ],
        [
            "Axiom preds_fmap_comp : forall f1 f2 g1 g2, preds_fmap g1 g2 oo preds_fmap f1 f2 = preds_fmap (g1 oo f1) (f2 oo g2).",
            "VernacAssumption",
            "98b6e2f39db238768a4a820937a8ba28e0311ee6"
        ],
        [
            "Definition resource_fmap (f g:pred rmap -> pred rmap) (x:resource) : resource := match x with | NO sh nsh => NO sh nsh | YES sh rsh k p => YES sh rsh k (preds_fmap f g p) | PURE k p => PURE k (preds_fmap f g p) end.",
            "VernacDefinition",
            "bc68655fccb6ba2cc984120db886c582ae90aed9"
        ],
        [
            "Axiom resource_fmap_id : resource_fmap (id _) (id _) = id resource.",
            "VernacAssumption",
            "639f6396c473c2090e144eb877afcab2e842dcb4"
        ],
        [
            "Axiom resource_fmap_comp : forall f1 f2 g1 g2, resource_fmap g1 g2 oo resource_fmap f1 f2 = resource_fmap (g1 oo f1) (f2 oo g2).",
            "VernacAssumption",
            "b16fad69a126ffa783b22a7f5467d7a2d0c019fd"
        ],
        [
            "Definition ghost : Type := list (option ({g: Ghost & {a: @G g | ghost.valid a}} * preds)%type).",
            "VernacDefinition",
            "e23919d49b6d11624babe1d96508de089f7342f4"
        ],
        [
            "Instance preds_join : Join _ := Join_equiv preds.",
            "VernacInstance",
            "ebe295174235928bb043d03b88d4634822974c52"
        ],
        [
            "Inductive ghost_elem_join : Join {g: Ghost & {a: @G g | ghost.valid a}} := | elem_join_I g a b c va vb vc: join a b c -> ghost_elem_join (existT _ g (exist _ a va)) (existT _ g (exist _ b vb)) (existT _ g (exist _ c vc)).",
            "VernacInductive",
            "ede7ac2641b90830b8207c03abe1da47e3f76a67"
        ],
        [
            "Existing Instance ghost_elem_join.",
            "VernacDeclareInstances",
            "f811fe3684a41cc9f7cb1818e85ba33a34a4ed3f"
        ],
        [
            "Inductive ghost_join : Join ghost := | ghost_join_nil_l m: ghost_join nil m m | ghost_join_nil_r m: ghost_join m nil m | ghost_join_cons a1 a2 m1 m2 a3 m3: join a1 a2 a3 -> ghost_join m1 m2 m3 -> ghost_join (a1 :: m1) (a2 :: m2) (a3 :: m3).",
            "VernacInductive",
            "54f560c6a4f222994e3ea958440ac0f4c43dd62b"
        ],
        [
            "Existing Instance ghost_join.",
            "VernacDeclareInstances",
            "7e324d0362ce3c81ae23004e3f34e2c7a90a4967"
        ],
        [
            "Axiom Perm_ghost: Perm_alg ghost.",
            "VernacAssumption",
            "9fa9c0ab034a55e4aecf426b4ea82cb1e5c38491"
        ],
        [
            "Existing Instance Perm_ghost.",
            "VernacDeclareInstances",
            "9c77ed7a3cf8c6bb2dcb5d3c29927defe0f3d3b4"
        ],
        [
            "Axiom Sep_ghost: Sep_alg ghost.",
            "VernacAssumption",
            "27574bb4b7a5f9d4e1376085698859c20666b267"
        ],
        [
            "Existing Instance Sep_ghost.",
            "VernacDeclareInstances",
            "a91822d5b782cae456221f41f9931bbe0a9a10a0"
        ],
        [
            "Axiom ghost_core: forall (g: ghost), core g = nil.",
            "VernacAssumption",
            "fb37944243eda3f8ee93472007f68f955384b164"
        ],
        [
            "Definition ghost_fmap (f g:pred rmap -> pred rmap)(x:ghost) : ghost := map (option_map (fun '(a, b) => (a, preds_fmap f g b))) x.",
            "VernacDefinition",
            "e8bc543e8c83ee5e68e88fdc86e82761a9e67dbd"
        ],
        [
            "Axiom ghost_fmap_id : ghost_fmap (id _) (id _) = id ghost.",
            "VernacAssumption",
            "e3b4054c46da7a871133b1a9215714582afd4d7e"
        ],
        [
            "Axiom ghost_fmap_comp : forall f1 f2 g1 g2, ghost_fmap g1 g2 oo ghost_fmap f1 f2 = ghost_fmap (g1 oo f1) (f2 oo g2).",
            "VernacAssumption",
            "eea50be8bee2bccf7902de563e9878a85dc73bca"
        ],
        [
            "Definition rmap' := ((address -> resource) * ghost)%type.",
            "VernacDefinition",
            "07d9879cea812f521e956796e0a944d257f295c8"
        ],
        [
            "Definition rmap_fmap (f g: pred rmap -> pred rmap) (x:rmap') : rmap' := (resource_fmap f g oo fst x, ghost_fmap f g (snd x)).",
            "VernacDefinition",
            "4a19538afec74c94a899723db7c909a02acdb480"
        ],
        [
            "Axiom rmap_fmap_id : rmap_fmap (id _) (id _) = id rmap'.",
            "VernacAssumption",
            "7ecff85d73d9f243636cdd4828c8c77ea386b325"
        ],
        [
            "Axiom rmap_fmap_comp : forall f1 f2 g1 g2, rmap_fmap g1 g2 oo rmap_fmap f1 f2 = rmap_fmap (g1 oo f1) (f2 oo g2).",
            "VernacAssumption",
            "c2b2302c60386e277fb996a5213a239a07ccda70"
        ],
        [
            "Parameter squash : (nat * rmap') -> rmap.",
            "VernacAssumption",
            "33fbed27cb168033be62205908b923605a9fd594"
        ],
        [
            "Parameter unsquash : rmap -> (nat * rmap').",
            "VernacAssumption",
            "4e4f133fd7a4c8f4a39bc89abfb27d1f47b0bff3"
        ],
        [
            "Axiom rmap_level_eq: @level rmap _ = fun x => fst (unsquash x).",
            "VernacAssumption",
            "cf61e06ee54293727031efad977ea65f05c094a0"
        ],
        [
            "Axiom rmap_age1_eq: @age1 _ _ = fun k => match unsquash k with | (O,_) => None | (S n,x) => Some (squash (n,x)) end.",
            "VernacAssumption",
            "94010fe3ae6e76ea58f1928edbca3be990389920"
        ],
        [
            "Definition resource_at (phi:rmap) : address -> resource := fst (snd (unsquash phi)).",
            "VernacDefinition",
            "e25a284ae8f7b2116d73d229f06107a08e4d4a9e"
        ],
        [
            "Infix \"@\" := resource_at (at level 50, no associativity).",
            "VernacInfix",
            "6a3f87084440b20b74f36d0cc62cfcc8101128bf"
        ],
        [
            "Definition ghost_of (phi:rmap) : ghost := snd (snd (unsquash phi)).",
            "VernacDefinition",
            "48d203a7cf5196b1a28b8fa4dc6748bdd463fd52"
        ],
        [
            "Instance Join_nat_rmap': Join (nat * rmap') := Join_prod _ (Join_equiv nat) _ _.",
            "VernacInstance",
            "789406b208541ea6bc06d1cbe35b3bd9f56a1f15"
        ],
        [
            "Axiom join_unsquash : forall phi1 phi2 phi3, join phi1 phi2 phi3 <-> join (unsquash phi1) (unsquash phi2) (unsquash phi3).",
            "VernacAssumption",
            "379b77db64b74ff545500dd35024370fa31e207a"
        ],
        [
            "Definition rmap_unage (k:rmap) : rmap := match unsquash k with | (n,x) => squash (S n, x) end.",
            "VernacDefinition",
            "6d09e4b6101d842a755411b94bcb274e96895ac9"
        ],
        [
            "Program Definition approx (n:nat) (p: pred rmap) : pred rmap := fun w => level w < n /\\ p w.",
            "VernacDefinition",
            "9aebe30b2e1f1e5b145ab32da2c8dee9923f7e22"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply age_level in H.",
            "VernacExtend",
            "cab1ee3d49024d43572fc289b15512cbdff1144d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply pred_hereditary with a; auto.",
            "VernacExtend",
            "e88f1d2f370031f6b2a4638380db91bdf8cc4305"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Axiom squash_unsquash : forall phi, squash (unsquash phi) = phi.",
            "VernacAssumption",
            "845eb4d973edb4041ae4cf40982ae0bb0c09154c"
        ],
        [
            "Axiom unsquash_squash : forall n rm, unsquash (squash (n,rm)) = (n,rmap_fmap (approx n) (approx n) rm).",
            "VernacAssumption",
            "43a518f486acc062b975593a965ffb05fb5ffd2c"
        ],
        [
            "Axiom ghost_of_core : forall phi, ghost_of (core phi) = core (ghost_of phi).",
            "VernacAssumption",
            "0bb8d28aedfb84c2496b9bddbd44a030d932e61a"
        ],
        [
            "End RMAPS.",
            "VernacEndSegment",
            "afdc20daf0617cb463b9d171aef9b0d4f81948c2"
        ],
        [
            "Module Rmaps (AV':ADR_VAL): RMAPS with Module AV:=AV'.",
            "VernacDefineModule",
            "bcc2a3d8949523b24f35bd2e11efc02aaeae2810"
        ],
        [
            "Module AV:=AV'.",
            "VernacDefineModule",
            "60d6f2721fa2fd0f4eac75ad90a2c4e66608fba8"
        ],
        [
            "Import AV.",
            "VernacImport",
            "6a07e2e137d7561f56ba8cb3c6fff30e711f45c3"
        ],
        [
            "Module SM := StratModel(AV).",
            "VernacDefineModule",
            "2020c076cd5842a3d828af199119522c10b72d6e"
        ],
        [
            "Import SM.",
            "VernacImport",
            "da23cb3cd5439b82f92acd3c8a43a3da065dfab8"
        ],
        [
            "Module TyF.",
            "VernacDefineModule",
            "2c09a49cd1809e20671267e8ee505b5ead604c5a"
        ],
        [
            "Definition F := f_pre_rmap.",
            "VernacDefinition",
            "1ef4a19c85fec26b9b8b4853a6e7da2579f5e9e9"
        ],
        [
            "End TyF.",
            "VernacEndSegment",
            "409b06e34e3698c6324c6f4048ec299fd6e0197e"
        ],
        [
            "Module TyFSA <: KNOT_FULL_SA_INPUT with Module KI:=TyF.",
            "VernacDefineModule",
            "9231d502e92ff2d3e722e8390aa8991a8b1ef9a0"
        ],
        [
            "Module KI := TyF.",
            "VernacDefineModule",
            "e5d5a76b013754ddea93fe25bb359234b2e057fe"
        ],
        [
            "Import KI.",
            "VernacImport",
            "f5e09223d776888e054536981a501caa136b2214"
        ],
        [
            "Instance Join_F: forall A, Join (F A) := _.",
            "VernacInstance",
            "b9a9ba72495b682505a4615d37f6795006a99236"
        ],
        [
            "Definition Perm_F : forall A, Perm_alg (F A) := Perm_pre_rmap.",
            "VernacDefinition",
            "62949e9d85af5581e8c696fd1409c79916ed21ec"
        ],
        [
            "Definition Sep_F := Sep_pre_rmap.",
            "VernacDefinition",
            "b9060c475dee0bfff74bc211cef64d084541b31d"
        ],
        [
            "Definition paf_F := paf_pre_rmap.",
            "VernacDefinition",
            "0d1eef7c3957d0d7b5692f088617d6825c59ef3e"
        ],
        [
            "End TyFSA.",
            "VernacEndSegment",
            "07891fe63f0d2108d8088539ab6c2d8bbfc4f02d"
        ],
        [
            "Module K := Knot_MixVariantHeredProp(TyF).",
            "VernacDefineModule",
            "7cd8274417f2ff8c87060f4a2c078838a6671a91"
        ],
        [
            "Module KL := KnotLemmas_MixVariantHeredProp(K).",
            "VernacDefineModule",
            "d4ef6083daf337a581a4e317a86303a328d76df9"
        ],
        [
            "Module KSa := KnotFullSa(TyFSA)(K)(KL).",
            "VernacDefineModule",
            "88255b6b46e4d5fe944aa733d7b486e0f9c76d87"
        ],
        [
            "Definition rmap := K.knot.",
            "VernacDefinition",
            "0b9ca5ba38d26b1b88e29fdffe149a97e7a12d87"
        ],
        [
            "Instance Join_rmap: Join rmap := KSa.Join_knot.",
            "VernacInstance",
            "2d8de1f5d865a5c0c1d0c7886dd6b15c68b5596f"
        ],
        [
            "Instance Perm_rmap : Perm_alg rmap:= KSa.Perm_knot.",
            "VernacInstance",
            "d71ba234c346a68851e9c01589f22af7583164d6"
        ],
        [
            "Instance Sep_rmap : Sep_alg rmap:= KSa.Sep_knot.",
            "VernacInstance",
            "7fd204c4957ad766a415ee021cabed96e04ffa6d"
        ],
        [
            "Instance ag_rmap : ageable rmap := K.ageable_knot.",
            "VernacInstance",
            "c325b01deaf76e05cf9a3b7acdf09536c2cfd95e"
        ],
        [
            "Instance Age_rmap: Age_alg rmap := KSa.asa_knot.",
            "VernacInstance",
            "24e7df56190f7e8473864bce110b5c56fc261da6"
        ],
        [
            "Inductive preds : Type := SomeP : forall A : TypeTree, (forall ts: list Type, dependent_type_functor_rec ts A (pred rmap)) -> preds.",
            "VernacInductive",
            "503d1fba573dcba5cd5a6756739cb95748ad722b"
        ],
        [
            "Definition NoneP := SomeP (ConstType unit) (fun _ => tt).",
            "VernacDefinition",
            "7e5b1bfb81606057eced7a3e4b579de6e0b6389d"
        ],
        [
            "Inductive resource : Type := | NO: forall sh: Share.t, ~ readable_share sh -> resource | YES: forall sh: Share.t, readable_share sh -> kind -> preds -> resource | PURE: kind -> preds -> resource.",
            "VernacInductive",
            "f5d90c778718276fed8373aaf908ac565bf611fc"
        ],
        [
            "Definition resource2res (r: resource): res (pred rmap) := match r with | NO sh nsh => NO' (pred rmap) sh nsh | YES sh rsh k (SomeP A l) => YES' (pred rmap) sh rsh k (existT _ A l) | PURE k (SomeP A l) => PURE' (pred rmap) k (existT _ A l) end.",
            "VernacDefinition",
            "96a308dbd9b30aefb9e523467cd1f6cd7e4e337d"
        ],
        [
            "Definition res2resource (r: res (pred rmap)) : resource := match r with | NO' sh nsh => NO sh nsh | YES' sh rsh k (existT A l) => YES sh rsh k (SomeP A l) | PURE' k (existT A l) => PURE k (SomeP A l) end.",
            "VernacDefinition",
            "b9de354e512d3c26d6539da2048e17cd4e3dc3e5"
        ],
        [
            "Lemma res2resource2res: forall x, resource2res (res2resource x) = x.",
            "VernacStartTheoremProof",
            "c1cecf2fec34172fb0eee4a8e46db2e23d2f8909"
        ],
        [
            "unfold resource2res, res2resource; destruct x as [? | ? ? ? [? ?] | ? [? ?]]; auto.",
            "VernacExtend",
            "c147d27e806b06f0971ce60c6a1f1ed1ff82699f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma resource2res2resource: forall x, res2resource (resource2res x) = x.",
            "VernacStartTheoremProof",
            "be6d0296d38ac45e016c60471047e64f418742f6"
        ],
        [
            "unfold resource2res, res2resource; destruct x; try destruct p0; try destruct p; auto.",
            "VernacExtend",
            "82748bec133014b5d3f83dfec2211f7f02ad25f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition res_option (r:resource) : option (rshare * kind) := match r with | NO _ _ => None | YES sh rsh k _ => Some (readable_part rsh,k) | PURE k _ => None end.",
            "VernacDefinition",
            "f1dadd9243211b5fbb37230e061745c33351a59e"
        ],
        [
            "Lemma res_option_rewrite: res_option = SM.res_option (pred rmap) oo resource2res.",
            "VernacStartTheoremProof",
            "f2c44d0697240263c8f7cf14b6c62b299a8a8ec7"
        ],
        [
            "unfold SM.res_option, res_option, compose.",
            "VernacExtend",
            "c700019ca99c87d0465452294fbd597687f2f0d6"
        ],
        [
            "extensionality r; destruct r; simpl; auto; destruct p; auto.",
            "VernacExtend",
            "6e4f770b55edd99e5c7711d5c7a94e8c018f779e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ghost : Type := list (option ({g: Ghost & {a: @G g | ghost.valid a}} * preds)%type).",
            "VernacDefinition",
            "e23919d49b6d11624babe1d96508de089f7342f4"
        ],
        [
            "Definition pred2p (p: preds) : fpreds (pred rmap) := match p with SomeP A P => existT _ A P end.",
            "VernacDefinition",
            "d27d8622d06973fe7d5b68d484a573978dd69b9f"
        ],
        [
            "Definition p2pred (p: fpreds (pred rmap)) : preds := match p with existT A P => SomeP A P end.",
            "VernacDefinition",
            "f56f23c99536b50f4887352956d68dd38f219118"
        ],
        [
            "Definition ghost2g (r: ghost): SM.ghost (pred rmap) := map (option_map (fun '(a, b) => (a, pred2p b))) r.",
            "VernacDefinition",
            "bac3f1a852a3891b211ab9f449278768a3a5284b"
        ],
        [
            "Definition g2ghost (r: SM.ghost (pred rmap)) : ghost := map (option_map (fun '(a, b) => (a, p2pred b))) r.",
            "VernacDefinition",
            "163f8da946bbe4d4271a4bb02577afa3393ab252"
        ],
        [
            "Lemma g2ghost2g: forall x, ghost2g (g2ghost x) = x.",
            "VernacStartTheoremProof",
            "2bdce95034043c01393cba4ec4239e0525ff91cb"
        ],
        [
            "induction x; auto; simpl.",
            "VernacExtend",
            "d77d5f0155575049623a7959f08b14192d27e649"
        ],
        [
            "rewrite IHx; destruct a as [[]|]; auto; simpl.",
            "VernacExtend",
            "d561bb3cfd421719bde7a5f0a0899a8c439f1e7d"
        ],
        [
            "destruct _f; auto.",
            "VernacExtend",
            "ba800e73e9e2f7bc7838b295e8239a19bfed4c12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ghost2g2ghost: forall x, g2ghost (ghost2g x) = x.",
            "VernacStartTheoremProof",
            "dc73b80331fabcaa85025483752572d600ab12da"
        ],
        [
            "induction x; auto; simpl.",
            "VernacExtend",
            "d77d5f0155575049623a7959f08b14192d27e649"
        ],
        [
            "rewrite IHx; destruct a as [[]|]; auto; simpl.",
            "VernacExtend",
            "d561bb3cfd421719bde7a5f0a0899a8c439f1e7d"
        ],
        [
            "destruct p; auto.",
            "VernacExtend",
            "94280b3a49c08b76852fac1fca3c7461587f918a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive res_join : resource -> resource -> resource -> Prop := | res_join_NO1 : forall sh1 nsh1 sh2 nsh2 sh3 nsh3 (RJ: join sh1 sh2 sh3), res_join (NO sh1 nsh1) (NO sh2 nsh2) (NO sh3 nsh3) | res_join_NO2 : forall sh1 rsh1 sh2 nsh2 sh3 rsh3 k p (RJ: join sh1 sh2 sh3), res_join (YES sh1 rsh1 k p) (NO sh2 nsh2) (YES sh3 rsh3 k p) | res_join_NO3 : forall sh1 nsh1 sh2 rsh2 sh3 rsh3 k p (RJ: join sh1 sh2 sh3), res_join (NO sh1 nsh1) (YES sh2 rsh2 k p) (YES sh3 rsh3 k p) | res_join_YES : forall sh1 rsh1 sh2 rsh2 sh3 rsh3 k p (RJ: join sh1 sh2 sh3), res_join (YES sh1 rsh1 k p) (YES sh2 rsh2 k p) (YES sh3 rsh3 k p) | res_join_PURE : forall k p, res_join (PURE k p) (PURE k p) (PURE k p).",
            "VernacInductive",
            "4f33dce368ee43233d3f4915414d68cfcf17adfd"
        ],
        [
            "Instance Join_resource: Join resource := res_join.",
            "VernacInstance",
            "4da77b1004686649ba29b8ece351303590de973e"
        ],
        [
            "Instance Perm_resource: Perm_alg resource.",
            "VernacInstance",
            "395b67525337893ceeee090f2ed7aafa707004ad"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros x y z z' H1 H2; inv H1; inv H2; repeat match goal with H: join ?A ?B _, H': join ?A ?B ?C |- _ => pose proof (join_eq H H'); subst C end; repeat proof_irr; auto.",
            "VernacExtend",
            "8e45247e00e55b95202d0897d89730c2ebebeba7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros a b c d e H1 H2.",
            "VernacExtend",
            "c518a9a80a4ea3d485ca5d839da76ba7065766ef"
        ],
        [
            "destruct d as [rd | rd sd kd pd | kd pd].",
            "VernacExtend",
            "e046ea1425ee380d7414438e6eade45f859745a8"
        ],
        [
            "destruct a as [ra | | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "e0f94aa5f2782b8800402cd11c16021ce3cec0e4"
        ],
        [
            "destruct b as [rb| | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "3dbdb04e0905f1985985d9823a3432cbea44f683"
        ],
        [
            "assert (join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "057c261f589bc97b3dc1945f8e16b3a1fe677f61"
        ],
        [
            "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "6be0dd3a097f0eba9a58be9fdf761762e788f444"
        ],
        [
            "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "5b6c7a92eb7806499695088674e46a183eac3523"
        ],
        [
            "assert (join rd rc re) by (inv H2; auto).",
            "VernacExtend",
            "3bb89ca2713fb59338fa825cf31b209651828d06"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (NO rf (join_unreadable_shares H3 n1 n2)); split; constructor; auto.",
            "VernacExtend",
            "c5c3ff72118dd008713b378abaec5b3ea60b3663"
        ],
        [
            "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "5b6c7a92eb7806499695088674e46a183eac3523"
        ],
        [
            "assert (join rd rc re) by (inv H2; auto).",
            "VernacExtend",
            "3bb89ca2713fb59338fa825cf31b209651828d06"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES rf (join_readable2 H3 sc) kc pc).",
            "VernacExtend",
            "3481812416fedbf0300dcfe75548777fb97448a4"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
        ],
        [
            "split; constructor; auto.",
            "VernacExtend",
            "c6608d22455cba65ae2ee26abc26f3257320064f"
        ],
        [
            "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "6be0dd3a097f0eba9a58be9fdf761762e788f444"
        ],
        [
            "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "5b6c7a92eb7806499695088674e46a183eac3523"
        ],
        [
            "assert (H0: join rd rc re) by (inv H2; auto).",
            "VernacExtend",
            "91a68676b879ae30be2ea8b4bcec27ab9c728724"
        ],
        [
            "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "c06e3505f829ec26eb5618d0751e53490da6235e"
        ],
        [
            "destruct b as [ | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "d2ab6c10d9e4714190afab12d0b45d98c0498b9d"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES rf (join_readable1 H3 sb) kd pd).",
            "VernacExtend",
            "5553c567a4ce8f9294cb254f9e9d12c67e1fe0c7"
        ],
        [
            "inv H1; inv H2; split; constructor; auto.",
            "VernacExtend",
            "200dfa0a5d72160575937d960ae478d921d75ea8"
        ],
        [
            "destruct b as [ rb | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "80aaf1bde8f53727fe71015b9fa66fa0923cd751"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (NO rf (join_unreadable_shares H3 n0 n)).",
            "VernacExtend",
            "dd0452984e047b78e58fbe5e6b5b6d1a479c49fb"
        ],
        [
            "inv H1; inv H2; split; constructor; auto.",
            "VernacExtend",
            "200dfa0a5d72160575937d960ae478d921d75ea8"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES rf (join_readable1 H3 sb) kb pb).",
            "VernacExtend",
            "fb0be2688f3e636b2f66e8f87a0ab3b7606d9390"
        ],
        [
            "inv H1; inv H2; split; constructor; auto.",
            "VernacExtend",
            "200dfa0a5d72160575937d960ae478d921d75ea8"
        ],
        [
            "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
            "VernacExtend",
            "5b6c7a92eb7806499695088674e46a183eac3523"
        ],
        [
            "assert (H0: join rd rc re) by (inv H2; auto).",
            "VernacExtend",
            "91a68676b879ae30be2ea8b4bcec27ab9c728724"
        ],
        [
            "destruct b as [ rb | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "80aaf1bde8f53727fe71015b9fa66fa0923cd751"
        ],
        [
            "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "c06e3505f829ec26eb5618d0751e53490da6235e"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES rf (join_readable2 H3 sc) kc pc).",
            "VernacExtend",
            "3481812416fedbf0300dcfe75548777fb97448a4"
        ],
        [
            "inv H1; inv H2; split; constructor; auto.",
            "VernacExtend",
            "200dfa0a5d72160575937d960ae478d921d75ea8"
        ],
        [
            "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "c06e3505f829ec26eb5618d0751e53490da6235e"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES rf (join_readable1 H3 sb) kb pb).",
            "VernacExtend",
            "fb0be2688f3e636b2f66e8f87a0ab3b7606d9390"
        ],
        [
            "inv H1; inv H2; split; try constructor; auto.",
            "VernacExtend",
            "1eafabaf73fd14b35a53a351ec7f8d593da61680"
        ],
        [
            "assert (H: join ra rb rd) by (inv H1; auto).",
            "VernacExtend",
            "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
        ],
        [
            "destruct (join_assoc H H0) as [rf [? ?]].",
            "VernacExtend",
            "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
        ],
        [
            "exists (YES rf (join_readable1 H3 sb) kb pb).",
            "VernacExtend",
            "fb0be2688f3e636b2f66e8f87a0ab3b7606d9390"
        ],
        [
            "inv H1; inv H2; split; try constructor; auto.",
            "VernacExtend",
            "1eafabaf73fd14b35a53a351ec7f8d593da61680"
        ],
        [
            "exists (PURE kd pd).",
            "VernacExtend",
            "1b8fa94a77d0d7e1667787f24f54617f1a0044da"
        ],
        [
            "inv H1; inv H2; split; constructor.",
            "VernacExtend",
            "39568c874451b84fa1c803d549e1839b021e370a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros a b c H; inv H; econstructor; apply join_comm; auto.",
            "VernacExtend",
            "ee180ca5472b7f5c6edcc15c3d8cbc135db57044"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros; inv H; inv H0; repeat match goal with H: join ?A ?B ?C, H': join ?C ?D ?A |- _ => pose proof (join_positivity H H'); subst C end; repeat proof_irr; auto.",
            "VernacExtend",
            "c728dd9fe975820a719d354796a974d8150a6778"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Sep_resource: Sep_alg resource.",
            "VernacInstance",
            "2ac22b40623975ae5db8763e09a3ef7b094495e8"
        ],
        [
            "apply mkSep with (fun x => match x with NO _ _ => NO Share.bot bot_unreadable | YES _ _ _ _ => NO Share.bot bot_unreadable | PURE k pds => PURE k pds end).",
            "VernacExtend",
            "9b369e41c3383f8a3902580ab7eec5e4d6bdf879"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct t; constructor; try apply join_unit1; auto.",
            "VernacExtend",
            "627f5aaa13d90ad3025372f342a8350d36ee2908"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; auto.",
            "VernacExtend",
            "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Instance preds_join : Join _ := Join_equiv preds.",
            "VernacInstance",
            "ebe295174235928bb043d03b88d4634822974c52"
        ],
        [
            "Inductive ghost_elem_join : Join {g: Ghost & {a: @G g | ghost.valid a}} := | elem_join_I g a b c va vb vc: join a b c -> ghost_elem_join (existT _ g (exist _ a va)) (existT _ g (exist _ b vb)) (existT _ g (exist _ c vc)).",
            "VernacInductive",
            "ede7ac2641b90830b8207c03abe1da47e3f76a67"
        ],
        [
            "Existing Instance ghost_elem_join.",
            "VernacDeclareInstances",
            "f811fe3684a41cc9f7cb1818e85ba33a34a4ed3f"
        ],
        [
            "Inductive ghost_join : Join ghost := | ghost_join_nil_l m: ghost_join nil m m | ghost_join_nil_r m: ghost_join m nil m | ghost_join_cons a1 a2 m1 m2 a3 m3: join a1 a2 a3 -> ghost_join m1 m2 m3 -> ghost_join (a1 :: m1) (a2 :: m2) (a3 :: m3).",
            "VernacInductive",
            "54f560c6a4f222994e3ea958440ac0f4c43dd62b"
        ],
        [
            "Existing Instance ghost_join.",
            "VernacDeclareInstances",
            "7e324d0362ce3c81ae23004e3f34e2c7a90a4967"
        ],
        [
            "Lemma elem_join_inv: forall a1 a2 a3, ghost_elem_join a1 a2 a3 -> match a1, a2, a3 with | existT g1 (exist x1 _), existT g2 (exist x2 _), existT g3 (exist x3 _) => exists H: g2 = g1, exists H': g3 = g1, join x1 (eq_rect _ _ x2 _ H) (eq_rect _ _ x3 _ H') end.",
            "VernacStartTheoremProof",
            "3f68ce94126f27c1d21c97fdff5320e3fdb92c3d"
        ],
        [
            "inversion 1; subst.",
            "VernacExtend",
            "bc8d5fb79c939337a7050fe493472018372e19e2"
        ],
        [
            "exists eq_refl, eq_refl; auto.",
            "VernacExtend",
            "a6ca18869af72d5e3b761ee6b58e4449a52a611f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ghost_join_inv: forall m1 m2 m3, ghost_join m1 m2 m3 -> match m1, m2 with | nil, _ => m3 = m2 | _, nil => m3 = m1 | a1 :: m1, a2 :: m2 => match m3 with nil => False | a3 :: m3 => join a1 a2 a3 /\\ ghost_join m1 m2 m3 end end.",
            "VernacStartTheoremProof",
            "79f643a7104e401c841392560d8e95078cf4af46"
        ],
        [
            "induction 1; simpl; auto.",
            "VernacExtend",
            "c744c0db2f17ed7745b4893bfd3017058a6e4828"
        ],
        [
            "destruct m; simpl; auto.",
            "VernacExtend",
            "94781fbacb55d6a7e74b34f87daed7127004ccb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance pa_gej : @Perm_alg _ ghost_elem_join.",
            "VernacInstance",
            "0e113d6d4fc206a57884e99d144797247dad0505"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion 1; inversion 1; subst.",
            "VernacExtend",
            "ce6b0fb553b0b5f93ea74b3e4865b85bb61c6b44"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst).",
            "VernacExtend",
            "207637b6281a76cfd4ada6eca6b28b2deb557f70"
        ],
        [
            "f_equal; eapply exist_ext, join_eq; eauto.",
            "VernacExtend",
            "e0520ec759434dd1b8c3df5ee8977967d8f366a9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros ????? J1%elem_join_inv J2%elem_join_inv.",
            "VernacExtend",
            "3c0cc37e922c8c939a15ab89f62aff0c8d404f94"
        ],
        [
            "destruct a as (ga & a & ?), b as (gb & b & ?), c as (gc & c & ?), d as (gd & d & ?), e as (ge & e & ?).",
            "VernacExtend",
            "133fd865ca1a99bd1acbac65d59521ea38c0f7fa"
        ],
        [
            "repeat (apply realize_eq in J1; destruct J1 as [? J1]).",
            "VernacExtend",
            "450a3ab880a602995ad32ebdab58e70dba5823a0"
        ],
        [
            "repeat (apply realize_eq in J2; destruct J2 as [? J2]); subst.",
            "VernacExtend",
            "e376952dd2c5d18121e4a828674b43fefc523ab5"
        ],
        [
            "destruct (join_assoc J1 J2) as (f & ? & J).",
            "VernacExtend",
            "39b5943bfabf8cea2129d9f64cf2a45cf36dafc0"
        ],
        [
            "exists (existT _ ga (exist _ f (join_valid _ _ _ (join_comm J) v3))).",
            "VernacExtend",
            "6532b0f70abf6d8e8f2ba41d3598ddec5aa5327f"
        ],
        [
            "split; constructor; auto.",
            "VernacExtend",
            "c6608d22455cba65ae2ee26abc26f3257320064f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion 1; constructor; auto.",
            "VernacExtend",
            "897a7862094a2c2170efdc5720c1f8197bce64b6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion 1; subst; inversion 1; subst; auto.",
            "VernacExtend",
            "c389a43e7db002dc588f7ffb4e6f98f14ecda00d"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst).",
            "VernacExtend",
            "207637b6281a76cfd4ada6eca6b28b2deb557f70"
        ],
        [
            "f_equal; eapply exist_ext, join_positivity; eauto.",
            "VernacExtend",
            "153928d39c3f70b7490d56c70066e221474ffb92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Perm_ghost : Perm_alg ghost.",
            "VernacInstance",
            "7540a48e562851b55d7b9973361a23fbcd4da7fc"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros until 1; revert z'; induction H; inversion 1; subst; auto.",
            "VernacExtend",
            "d26839b9f0b27c93c2d46c0427ea2e52f91d5c92"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "eapply join_eq; eauto.",
            "VernacExtend",
            "ccf59f1f695e4c180b0ea6a817cf2aad71c65ad6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction a; intros ???? J1 J2; apply ghost_join_inv in J1; subst.",
            "VernacExtend",
            "860dc17ac4deee4c87458ef71746eeae03407f9f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists e; split; auto; constructor.",
            "VernacExtend",
            "46879c0af8f3ad8d61fbf59090b59e74b60e0886"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct b; subst; [eexists; split; eauto; constructor|].",
            "VernacExtend",
            "4aeae7a3fc64282a7cfd9d1d9565e170f68bdc3c"
        ],
        [
            "destruct d; [contradiction|].",
            "VernacExtend",
            "83c56892b44297469acd7216ab80567d366a2c91"
        ],
        [
            "destruct J1 as [Jc1 J1].",
            "VernacExtend",
            "09498b45d2f0c9c85f69da257828dc87ba2c645a"
        ],
        [
            "apply ghost_join_inv in J2.",
            "VernacExtend",
            "c9f5a568af212525b526f3fec476bdd318112ac1"
        ],
        [
            "destruct c; subst; [eexists; split; eauto; constructor; auto|].",
            "VernacExtend",
            "a7215ea438caca2ebdca551ba1b44a6c7c2aeb94"
        ],
        [
            "destruct e; [contradiction|].",
            "VernacExtend",
            "29bb6899a08667cce45a25660cbb8e80a63a8e07"
        ],
        [
            "destruct J2 as [Jc2 J2].",
            "VernacExtend",
            "feec88a5138071371bcbd51c43c9219841408599"
        ],
        [
            "destruct (join_assoc Jc1 Jc2) as (f & ? & ?).",
            "VernacExtend",
            "8890d9cd57388835604ab19d2e21b0cd3eed5624"
        ],
        [
            "destruct (IHa _ _ _ _ J1 J2) as (f' & ? & ?).",
            "VernacExtend",
            "1e9982b2dab1a3397bfb5fcd397c56fad99e0c41"
        ],
        [
            "exists (f :: f'); split; constructor; auto.",
            "VernacExtend",
            "8b8cb13ce80e24583cdf7fcbedcbc1343b55f587"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction 1; constructor; auto.",
            "VernacExtend",
            "ff51879142eef61207638aeecdcf6617e01ec60f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros until 1; revert b'; induction H; inversion 1; subst; auto.",
            "VernacExtend",
            "95a0dd93b315ac49ada2e7db9c1acad8d77e7dd3"
        ],
        [
            "f_equal; eauto.",
            "VernacExtend",
            "0aaae116840c77af05ab473518cd728dcb792af6"
        ],
        [
            "eapply join_positivity; eauto.",
            "VernacExtend",
            "b262d9d0323b0c99e4dff673bcb8aed87da0254b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Sep_ghost : Sep_alg ghost.",
            "VernacInstance",
            "1961d5e5b4df915eb8e05257958f243dbaea4e2f"
        ],
        [
            "intros; exists (fun _ => nil); auto; constructor.",
            "VernacExtend",
            "0b12e90e31e0d1c8418f220dc65fcacefd9d10c1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma ghost_core : forall (g: ghost), core g = nil.",
            "VernacStartTheoremProof",
            "437c6e892be5c70468aa98db7abd0752af232d89"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rmap' := ((address->resource) * ghost)%type.",
            "VernacDefinition",
            "07d9879cea812f521e956796e0a944d257f295c8"
        ],
        [
            "Definition preds_fmap (f g:(pred rmap)->(pred rmap)) (x:preds) : preds := match x with SomeP A ls => SomeP A (fmap (fpi _) f g ls) end.",
            "VernacDefinition",
            "62e2e4b5c6417b9c6c0e74bf74f038ce82f8daac"
        ],
        [
            "Lemma preds_fmap_id : preds_fmap (id (pred rmap)) (id (pred rmap)) = id preds.",
            "VernacStartTheoremProof",
            "847a27383259a3819440f97f878427314e46765f"
        ],
        [
            "intros; apply extensionality; intro x; destruct x; simpl; auto.",
            "VernacExtend",
            "9b785288690d79e9bcc2bddae1926d811f76f898"
        ],
        [
            "unfold id at 3.",
            "VernacExtend",
            "dec9c924800ab74a810b74e3b669b36643ffc30a"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "extensionality i.",
            "VernacExtend",
            "8733cdd792af6107213a34f779c8c3d7eba32943"
        ],
        [
            "rewrite fmap_id; auto.",
            "VernacExtend",
            "571ee35389dd15522fb0012420f7bf84e8a88b76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma preds_fmap_comp : forall f1 f2 g1 g2, preds_fmap g1 g2 oo preds_fmap f1 f2 = preds_fmap (g1 oo f1) (f2 oo g2).",
            "VernacStartTheoremProof",
            "d7bfab8ca3bf8f42aef779d74417aa1a595f913a"
        ],
        [
            "intros; apply extensionality; intro x; destruct x; simpl.",
            "VernacExtend",
            "0ada1e1ba2a169fdc88f1beb41669ce6b3cd1f65"
        ],
        [
            "unfold preds_fmap, compose at 1; simpl.",
            "VernacExtend",
            "fba396c07a901efc540bbadaa1e21c61813e6014"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "extensionality i.",
            "VernacExtend",
            "8733cdd792af6107213a34f779c8c3d7eba32943"
        ],
        [
            "rewrite <- fmap_comp; auto.",
            "VernacExtend",
            "649942f860e15a4eee3d429015acf6da7e0b0114"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition resource_fmap (f g:pred rmap -> pred rmap) (x:resource) : resource := match x with | NO sh nsh => NO sh nsh | YES sh rsh k p => YES sh rsh k (preds_fmap f g p) | PURE k p => PURE k (preds_fmap f g p) end.",
            "VernacDefinition",
            "bc68655fccb6ba2cc984120db886c582ae90aed9"
        ],
        [
            "Definition ghost_fmap (f g:pred rmap -> pred rmap)(x:ghost) : ghost := map (option_map (fun '(a, b) => (a, preds_fmap f g b))) x.",
            "VernacDefinition",
            "e8bc543e8c83ee5e68e88fdc86e82761a9e67dbd"
        ],
        [
            "Lemma resource_fmap_id : resource_fmap (id (pred rmap)) (id (pred rmap)) = id resource.",
            "VernacStartTheoremProof",
            "e9758c39e228a66d305e39f88bdd4b8477af5ee3"
        ],
        [
            "intros; apply extensionality; intro x.",
            "VernacExtend",
            "c267747c3156614bb8ad233ba2c8a3182fb848fe"
        ],
        [
            "unfold resource_fmap.",
            "VernacExtend",
            "9e3613be03b663ae3677a4b82fcc167d580790d3"
        ],
        [
            "destruct x; simpl; auto.",
            "VernacExtend",
            "6333e7c7dbfdf0572110d1909ab0948c7e960947"
        ],
        [
            "rewrite preds_fmap_id; auto.",
            "VernacExtend",
            "2eb5853afadb07f6200e4b8fd77c2688c07b76e8"
        ],
        [
            "rewrite preds_fmap_id; auto.",
            "VernacExtend",
            "2eb5853afadb07f6200e4b8fd77c2688c07b76e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ghost_fmap_id : ghost_fmap (id (pred rmap)) (id (pred rmap)) = id ghost.",
            "VernacStartTheoremProof",
            "751cd74d940e8f4d19dd0ce5004f44a2fe059648"
        ],
        [
            "extensionality x; induction x; auto; simpl.",
            "VernacExtend",
            "e0f75e6ee4ed63d63d65786e5951d9e6d2125b15"
        ],
        [
            "rewrite IHx; destruct a as [[]|]; auto; simpl.",
            "VernacExtend",
            "d561bb3cfd421719bde7a5f0a0899a8c439f1e7d"
        ],
        [
            "rewrite preds_fmap_id; auto.",
            "VernacExtend",
            "2eb5853afadb07f6200e4b8fd77c2688c07b76e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma resource_fmap_comp : forall f1 f2 g1 g2, resource_fmap g1 g2 oo resource_fmap f1 f2 = resource_fmap (g1 oo f1) (f2 oo g2).",
            "VernacStartTheoremProof",
            "81becf395f63df1237a45212518b8d7e841e1527"
        ],
        [
            "intros f1 f2 g1 g2.",
            "VernacExtend",
            "247b67901873c6c5c286bdfd5aff57dde2328fcc"
        ],
        [
            "apply extensionality; intro x; destruct x; simpl; auto.",
            "VernacExtend",
            "ccc2f959bd68ca2f21a83944856a05a2888ef221"
        ],
        [
            "unfold compose at 1; simpl.",
            "VernacExtend",
            "6b389d9ea98590fca158efa5b247a9bb23c82e7a"
        ],
        [
            "rewrite <- preds_fmap_comp; auto.",
            "VernacExtend",
            "c340ffb84c3f5d0737b3c428c2cccc8cda723a40"
        ],
        [
            "rewrite <- preds_fmap_comp; auto.",
            "VernacExtend",
            "c340ffb84c3f5d0737b3c428c2cccc8cda723a40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ghost_fmap_comp : forall f1 f2 g1 g2, ghost_fmap g1 g2 oo ghost_fmap f1 f2 = ghost_fmap (g1 oo f1) (f2 oo g2).",
            "VernacStartTheoremProof",
            "953ee59fc08e393e09b89f9513e298d6cfb6c2e0"
        ],
        [
            "intros; extensionality x; induction x; auto; simpl.",
            "VernacExtend",
            "f1c72967f6a9f858a6e54d8e8352340a21abb8ff"
        ],
        [
            "rewrite <- IHx; destruct a as [[]|]; auto; simpl.",
            "VernacExtend",
            "d328428cce8d071ccc3d17a3e24b6de0eee4843c"
        ],
        [
            "rewrite <- preds_fmap_comp; auto.",
            "VernacExtend",
            "c340ffb84c3f5d0737b3c428c2cccc8cda723a40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rmap_fmap (f g:(pred rmap)->(pred rmap)) (x:rmap') : rmap' := (resource_fmap f g oo fst x, ghost_fmap f g (snd x)).",
            "VernacDefinition",
            "4a19538afec74c94a899723db7c909a02acdb480"
        ],
        [
            "Lemma rmap_fmap_id : rmap_fmap (id (pred rmap)) (id (pred rmap)) = id rmap'.",
            "VernacStartTheoremProof",
            "162845803b39fcda9a884cfd29c2d6afb1dbde27"
        ],
        [
            "intros; apply extensionality; intro x.",
            "VernacExtend",
            "c267747c3156614bb8ad233ba2c8a3182fb848fe"
        ],
        [
            "unfold rmap_fmap; destruct x.",
            "VernacExtend",
            "433bd0b030f7706787a9e73dbdce1457bedd4df2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite resource_fmap_id, ghost_fmap_id.",
            "VernacExtend",
            "78008a8d494921164a1110932dfdd00983e8bfc9"
        ],
        [
            "rewrite (id_unit2 _ (resource) r).",
            "VernacExtend",
            "55a7fe578586b705fd787c973fa347644654520c"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmap_fmap_comp : forall f1 f2 g1 g2, rmap_fmap g1 g2 oo rmap_fmap f1 f2 = rmap_fmap (g1 oo f1) (f2 oo g2).",
            "VernacStartTheoremProof",
            "1eeebc02516aa6bad9c84ddee7ad0676ebdf6bf3"
        ],
        [
            "intros f1 f2 g1 g2.",
            "VernacExtend",
            "247b67901873c6c5c286bdfd5aff57dde2328fcc"
        ],
        [
            "unfold rmap_fmap.",
            "VernacExtend",
            "3062255324d7e3d7cda5101b6c921ccd0cdb352a"
        ],
        [
            "apply extensionality; intro x.",
            "VernacExtend",
            "8e3f8bfa399390ef89875eb881f5337b84b71c48"
        ],
        [
            "unfold compose at 1.",
            "VernacExtend",
            "e59d2eb696a6b0ea3993069ecb248df53fd22d1c"
        ],
        [
            "destruct x as (r,g).",
            "VernacExtend",
            "6a87a9f4be84eef349ce1a998054b1bef38a9c0f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- compose_assoc.",
            "VernacExtend",
            "2dfd2e1d67183fff30dd8ccf6e4747766f819dc0"
        ],
        [
            "rewrite resource_fmap_comp; auto.",
            "VernacExtend",
            "c13a97df9a7061bbdcd23d794cdc9b0dd6cd49f2"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "pose proof ghost_fmap_comp as HG.",
            "VernacExtend",
            "7dcb3395c22d66ef06390e99bb732518cf328967"
        ],
        [
            "unfold compose in HG at 1; rewrite <- HG.",
            "VernacExtend",
            "87c50c866ea1cf7fa4a1935fba539fccd5bf7741"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "f_equal; proof_irr; auto.",
            "VernacExtend",
            "bc2d7edd54f4b8b62036f1a5c1a464955af3a66b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rmap'2pre_rmap (f: rmap') : f_pre_rmap (pred rmap) := (fun x : address => resource2res (fst f x), ghost2g (snd f)).",
            "VernacDefinition",
            "39b48043b254701f99992f8853aa8528acb47b45"
        ],
        [
            "Definition pre_rmap2rmap' (f: f_pre_rmap (pred rmap)) : rmap' := (fun l : address => res2resource (fst f l), g2ghost (snd f)).",
            "VernacDefinition",
            "4cd77d30958ab68986a673059128d279ee4af097"
        ],
        [
            "Lemma rmap'2pre_rmap2rmap' : forall x, rmap'2pre_rmap (pre_rmap2rmap' x) = x.",
            "VernacStartTheoremProof",
            "cefbeb3b74041cbb2253f3017a36766f2677eb13"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold rmap'2pre_rmap, pre_rmap2rmap'.",
            "VernacExtend",
            "a0669dbb804a3ed5bfabad94b66992672154078c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct x; simpl; f_equal.",
            "VernacExtend",
            "0d2a15dc0d497770e9b88ab828a083f42fef5591"
        ],
        [
            "extensionality x; rewrite res2resource2res; auto.",
            "VernacExtend",
            "b59446cb0544afbbcc4e56aca6acd59dfad8d876"
        ],
        [
            "rewrite g2ghost2g; auto.",
            "VernacExtend",
            "e40a419e340b5f77128f20ab7f2775827835be09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pre_rmap2rmap'2pre_rmap : forall x, pre_rmap2rmap' (rmap'2pre_rmap x) = x.",
            "VernacStartTheoremProof",
            "87814d2b09149932186b7652181c6e4e4d7fe8be"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold rmap'2pre_rmap, pre_rmap2rmap'.",
            "VernacExtend",
            "a0669dbb804a3ed5bfabad94b66992672154078c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct x; simpl; f_equal.",
            "VernacExtend",
            "0d2a15dc0d497770e9b88ab828a083f42fef5591"
        ],
        [
            "extensionality x; rewrite resource2res2resource; auto.",
            "VernacExtend",
            "51ff223946c626efaeaf4dee3ec1e4d2621010c0"
        ],
        [
            "rewrite ghost2g2ghost; auto.",
            "VernacExtend",
            "8da6feaba90703e44b2d9d84fd7f26f763680e0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition squash (n_rm:nat * rmap') : rmap := match n_rm with (n,rm) => K.squash (n, rmap'2pre_rmap rm) end.",
            "VernacDefinition",
            "a0d2555eb02670bb40557ba5153422cc0afab41b"
        ],
        [
            "Definition unsquash (phi:rmap) : (nat * rmap') := match K.unsquash phi with (n,rm) => (n, pre_rmap2rmap' rm) end.",
            "VernacDefinition",
            "e90b5836d1515019aeaff2176f3d6193fb05c604"
        ],
        [
            "Definition rmap_level (phi:rmap) : nat := fst (unsquash phi).",
            "VernacDefinition",
            "5c37a69f92360bc87577e9e3e04a7dd4a12687f7"
        ],
        [
            "Definition resource_at (phi:rmap) : address -> resource := fst (snd (unsquash phi)).",
            "VernacDefinition",
            "e25a284ae8f7b2116d73d229f06107a08e4d4a9e"
        ],
        [
            "Infix \"@\" := resource_at (at level 50, no associativity).",
            "VernacInfix",
            "6a3f87084440b20b74f36d0cc62cfcc8101128bf"
        ],
        [
            "Definition ghost_of (phi:rmap) : ghost := snd (snd (unsquash phi)).",
            "VernacDefinition",
            "48d203a7cf5196b1a28b8fa4dc6748bdd463fd52"
        ],
        [
            "Lemma pred_ext': forall {A} `{agA: ageable A} P Q, (forall x, app_pred P x <-> app_pred Q x) -> P = Q.",
            "VernacStartTheoremProof",
            "f410c36fe4dcb5aa4c3a043b34ae7c425f2bb03f"
        ],
        [
            "intros; apply pred_ext; intro; apply H; auto.",
            "VernacExtend",
            "a249e45ef2f372f11868aaa3713a706099c88b82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma squash_unsquash : forall phi, squash (unsquash phi) = phi.",
            "VernacStartTheoremProof",
            "b00111e5b217234d5968317b1835b2758ec19f6f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold squash, unsquash; simpl.",
            "VernacExtend",
            "63db03e41a189a125d4738076b79467c805fe550"
        ],
        [
            "destruct (K.unsquash phi) eqn:?H; simpl; intros.",
            "VernacExtend",
            "523c98b674d99bacac609d01926b9ea2c0f0c5a8"
        ],
        [
            "rewrite rmap'2pre_rmap2rmap'.",
            "VernacExtend",
            "6e7d97da66a29a0385f026a778a639b2d30fe9c0"
        ],
        [
            "unfold K.KI.F in *.",
            "VernacExtend",
            "4a4bb0c32ef2efe821e4f635a3e62ab7900ca070"
        ],
        [
            "unfold f_pre_rmap in H.",
            "VernacExtend",
            "8048c251f2227ea64f32597d007a93190768543a"
        ],
        [
            "match goal with | |- K.squash ?A = _ => replace A with (K.unsquash phi) end.",
            "VernacExtend",
            "fdbf4ed8f036aed0a3e709ddd9b375bc87dc0e80"
        ],
        [
            "rewrite K.squash_unsquash; auto.",
            "VernacExtend",
            "c2b57e407b5f9f8578c7820e1d2990f7821b7e8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition approx (n:nat) (p: (pred rmap)) : (pred rmap) := fun w => level w < n /\\ p w.",
            "VernacDefinition",
            "9aebe30b2e1f1e5b145ab32da2c8dee9923f7e22"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply age_level in H.",
            "VernacExtend",
            "cab1ee3d49024d43572fc289b15512cbdff1144d"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply pred_hereditary with a; auto.",
            "VernacExtend",
            "e88f1d2f370031f6b2a4638380db91bdf8cc4305"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma approx_K_approx: approx = K.approx.",
            "VernacStartTheoremProof",
            "189caf7bf0a1599136dd8b642834621118cb3bc0"
        ],
        [
            "extensionality n p.",
            "VernacExtend",
            "0489c2add4961e432c2940227fb81abd85c3c8e0"
        ],
        [
            "apply pred_ext'; intros w.",
            "VernacExtend",
            "907fef221e72ac25cb2e06ab27110838a70441bf"
        ],
        [
            "unfold approx, compose; simpl.",
            "VernacExtend",
            "6c9a0e19bb47f30ec0a16574aee6d93ec09857b0"
        ],
        [
            "rewrite K.approx_spec.",
            "VernacExtend",
            "d4cb9967847855f4cb78b7dd3efae1d2f699581f"
        ],
        [
            "unfold rmap_level, unsquash; simpl; repeat rewrite K.knot_level; repeat rewrite setset, setget; intuition.",
            "VernacExtend",
            "8f0a2ebfc17a7419c78ce86eb26104b51eb6df1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unsquash_squash : forall n rm, (unsquash (squash (n,rm))) = (n,rmap_fmap (approx n) (approx n) rm).",
            "VernacStartTheoremProof",
            "44a159a3e56d0463c13d60b8b1f12d8fb735f5e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold unsquash, squash.",
            "VernacExtend",
            "df6bce749d1bc7d24398b0cedb7cb80913b04803"
        ],
        [
            "rewrite K.unsquash_squash.",
            "VernacExtend",
            "cdee85955f6e9d58fa1d3e1cf0e0a60388488554"
        ],
        [
            "unfold K.KI.F, f_pre_rmap.",
            "VernacExtend",
            "14a9b50453292fe23327103a2d1fc9f0cbf276fd"
        ],
        [
            "match goal with [|- (_,?X) = (_,?Y) ] => replace Y with X; auto end.",
            "VernacExtend",
            "242c76f62a84718ea3f62788f2ea2471a957fa13"
        ],
        [
            "match goal with [|- pre_rmap2rmap' ?X = _ ] => replace X with (fmap f_pre_rmap (K.approx n) (K.approx n) (rmap'2pre_rmap rm)) end.",
            "VernacExtend",
            "8983e2da50ba21c0cc5c59797739128a9acb1326"
        ],
        [
            "2: repeat rewrite <- fmap_comp.",
            "VernacExtend",
            "54707ae653095405f8b5c83089c36d083efdc24c"
        ],
        [
            "2: unfold compose; auto.",
            "VernacExtend",
            "e5c2a972f7c7a253c8efd1ec8a139be1af474979"
        ],
        [
            "destruct rm; simpl.",
            "VernacExtend",
            "a1e23fcd6bc9f868b87178c925eac7c01f67b3f0"
        ],
        [
            "unfold pre_rmap2rmap', rmap_fmap.",
            "VernacExtend",
            "6bb6ebdf7c3fe7d5362a78c608a807be1f01224c"
        ],
        [
            "simpl; f_equal.",
            "VernacExtend",
            "e1a8d9221cffa231af353a6224974ce2a7f11d21"
        ],
        [
            "extensionality l.",
            "VernacExtend",
            "9fc65292979c99219ff785a0ff10282cfe10e770"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "destruct (r l); simpl; auto.",
            "VernacExtend",
            "3ff7dcd347863c8b1b93b4b98ae4e57aa498d917"
        ],
        [
            "destruct p; simpl.",
            "VernacExtend",
            "423201fe23e437fce20ae1af4aa483a4e8c5b636"
        ],
        [
            "rewrite approx_K_approx; auto.",
            "VernacExtend",
            "13348b25da4884f3abd08e80c55c9418f64ae7c7"
        ],
        [
            "destruct p; simpl.",
            "VernacExtend",
            "423201fe23e437fce20ae1af4aa483a4e8c5b636"
        ],
        [
            "rewrite approx_K_approx; auto.",
            "VernacExtend",
            "13348b25da4884f3abd08e80c55c9418f64ae7c7"
        ],
        [
            "induction g; auto; simpl.",
            "VernacExtend",
            "1f98edee5a8828acdc0163c73a96382258fab71d"
        ],
        [
            "setoid_rewrite IHg; destruct a as [[]|]; auto; simpl.",
            "VernacExtend",
            "ab6739c6483096e5603b4e71962c0f98b8698007"
        ],
        [
            "repeat f_equal.",
            "VernacExtend",
            "ef52a498e8dfd0e6e312a5f55aa7a117295c3b16"
        ],
        [
            "rewrite approx_K_approx; destruct p; auto.",
            "VernacExtend",
            "e94b2998abfaae0cd4cf7a26507bd7ba85ed7635"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Join_nat_rmap': Join (nat * rmap') := Join_prod _ (Join_equiv nat) _ _.",
            "VernacInstance",
            "789406b208541ea6bc06d1cbe35b3bd9f56a1f15"
        ],
        [
            "Lemma g2ghost_inv: forall g1 g2, g2ghost g1 = g2ghost g2 -> g1 = g2.",
            "VernacStartTheoremProof",
            "3be516ca8eb8321daf376ff5aaf348d417d75de6"
        ],
        [
            "induction g1; destruct g2; inversion 1; auto.",
            "VernacExtend",
            "ecf54e422f2e42110c916736ff001c89f25e4133"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "destruct a as [[]|], o as [[]|]; inv H1; auto.",
            "VernacExtend",
            "b3360f1718134a0d437e721b680462f45ab61cca"
        ],
        [
            "destruct _f, _f0; inv H4; auto.",
            "VernacExtend",
            "f32bf8dfd73322c51e35302ab7b7f2553ae4011f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_unsquash : forall phi1 phi2 phi3, join phi1 phi2 phi3 <-> join (unsquash phi1) (unsquash phi2) (unsquash phi3).",
            "VernacStartTheoremProof",
            "08a052472e877cd9565912a72d395e5ae40b2360"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold unsquash.",
            "VernacExtend",
            "bd36220d36e9a4ea98f2dad0759842af8689b480"
        ],
        [
            "rewrite KSa.join_unsquash.",
            "VernacExtend",
            "68ba9f1fd90f80ec48c6cbb8c332f0c3bd20a918"
        ],
        [
            "destruct (K.unsquash phi1) as [n f].",
            "VernacExtend",
            "fe6b20f127fb7b52db5d18c8b88cdb1f0e4e21c5"
        ],
        [
            "destruct (K.unsquash phi2) as [n0 f0].",
            "VernacExtend",
            "4ea0e0fa2b4d41abe0bb545a66adef06cc7d002d"
        ],
        [
            "destruct (K.unsquash phi3) as [n1 f1].",
            "VernacExtend",
            "610e75ed5d4b3b7190c0dc7613a8cab00653e233"
        ],
        [
            "simpl; intuition.",
            "VernacExtend",
            "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
        ],
        [
            "destruct H; simpl in *; split; simpl; auto.",
            "VernacExtend",
            "faa03d6c130487f2fa6a06d259fefa8b68f2f70d"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intro l; specialize ( H1 l).",
            "VernacExtend",
            "0f588f5acdb2d0054572a7ada177442f1093da22"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "destruct f, f0, f1; simpl in *.",
            "VernacExtend",
            "5fd83e74b2d20ac9fc82075ff5b8973eadeb9f9f"
        ],
        [
            "inv H1; simpl.",
            "VernacExtend",
            "a37ac62bdffb47084b990fcebaa6ccf2259a5941"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "destruct p; simpl in *.",
            "VernacExtend",
            "21fa2abfdaae8a18ac0ac4debd1bca139800054d"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "destruct p; simpl in *.",
            "VernacExtend",
            "21fa2abfdaae8a18ac0ac4debd1bca139800054d"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "destruct f, f0, f1; simpl in *.",
            "VernacExtend",
            "5fd83e74b2d20ac9fc82075ff5b8973eadeb9f9f"
        ],
        [
            "clear - H2; induction H2; constructor; auto.",
            "VernacExtend",
            "f35087f27349a3e197687043788c14ced45c470f"
        ],
        [
            "inv H; constructor; auto.",
            "VernacExtend",
            "94c2a63227e9a0494888b6417590039e3b09dc19"
        ],
        [
            "destruct a0, a4, a5; inv H0; simpl in *.",
            "VernacExtend",
            "a87e23d7e6698761426714ae4ed27e7a5d3fda56"
        ],
        [
            "inv H; inv H1; constructor; constructor; auto.",
            "VernacExtend",
            "753087116b0f881093bee0b00c5672ded4a352cf"
        ],
        [
            "destruct H; simpl in *; split; simpl; auto.",
            "VernacExtend",
            "faa03d6c130487f2fa6a06d259fefa8b68f2f70d"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "hnf in H1.",
            "VernacExtend",
            "94324ef603315a47e5f4c48a0cd13f6c1b983007"
        ],
        [
            "simpl proj1_sig in H1.",
            "VernacExtend",
            "cd90f7ce5669a9345d92ecf0d410193a8e2fff70"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "intro l; specialize ( H1 l).",
            "VernacExtend",
            "0f588f5acdb2d0054572a7ada177442f1093da22"
        ],
        [
            "simpl proj1_sig.",
            "VernacExtend",
            "5f96d4f17b719de67e5d7478228e33dba85bb4de"
        ],
        [
            "clear - H1.",
            "VernacExtend",
            "a97560cbbe2cd31ef128e29a3cf251870622f56a"
        ],
        [
            "destruct f, f0, f1; simpl in *.",
            "VernacExtend",
            "5fd83e74b2d20ac9fc82075ff5b8973eadeb9f9f"
        ],
        [
            "forget (r l) as a; forget (r0 l) as b; forget (r1 l) as c.",
            "VernacExtend",
            "b024bae44332dd572abc2fa31131a078dbb449d0"
        ],
        [
            "clear - H1.",
            "VernacExtend",
            "a97560cbbe2cd31ef128e29a3cf251870622f56a"
        ],
        [
            "unfold res2resource in *.",
            "VernacExtend",
            "85a6806d3c967b428a59a0bdeb2232a63edf07fa"
        ],
        [
            "unfold res_fmap in *.",
            "VernacExtend",
            "35e1ea8b0e9b69da498970db7ca7f93865e257b9"
        ],
        [
            "destruct a as [ra | ra sha ka pa| ka pa]; try destruct pa as [? ?p]; destruct b as [rb | rb shb kb pb|kb pb]; try destruct pb as [? ?p]; destruct c as [rc | rc shc kc pc|kc pc]; try destruct pc as [? ?p]; inv H1.",
            "VernacExtend",
            "b747af320283797b63dc0165078494b5e3f1e8dc"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply inj_pair2 in H8.",
            "VernacExtend",
            "d3a4a7ffaa66fa0d828516ebbaa1321c89ca00c5"
        ],
        [
            "subst p0.",
            "VernacExtend",
            "4a16d7df818bac42428ea13da5daf5a2e1f24f77"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply inj_pair2 in H8.",
            "VernacExtend",
            "d3a4a7ffaa66fa0d828516ebbaa1321c89ca00c5"
        ],
        [
            "subst p0.",
            "VernacExtend",
            "4a16d7df818bac42428ea13da5daf5a2e1f24f77"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply inj_pair2 in H11.",
            "VernacExtend",
            "ef9d1e30e7134c3fb301e86bbfc9118e9bfb6abf"
        ],
        [
            "subst p1.",
            "VernacExtend",
            "41eb98e4b537de0d7938c2dc5b0a1083af5e7fb3"
        ],
        [
            "apply inj_pair2 in H7; subst p0.",
            "VernacExtend",
            "6f52b1af8e4bf28ad20b5f0f420ab2e07c221ab7"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst ; apply inj_pair2 in H8.",
            "VernacExtend",
            "f72e85a80c54a39185286642c641895ec0334b06"
        ],
        [
            "subst p1.",
            "VernacExtend",
            "41eb98e4b537de0d7938c2dc5b0a1083af5e7fb3"
        ],
        [
            "apply inj_pair2 in H5.",
            "VernacExtend",
            "a36eb059cffb18e9e53694f823ed51d9ed3fb011"
        ],
        [
            "subst p0.",
            "VernacExtend",
            "4a16d7df818bac42428ea13da5daf5a2e1f24f77"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct f, f0, f1; simpl in *.",
            "VernacExtend",
            "5fd83e74b2d20ac9fc82075ff5b8973eadeb9f9f"
        ],
        [
            "clear - H2.",
            "VernacExtend",
            "df3dc56b8cb8ec54f9503844cf7d5b731417589e"
        ],
        [
            "remember (g2ghost g) as a; remember (g2ghost g0) as b; remember (g2ghost g1) as c.",
            "VernacExtend",
            "748b5ace40ddafa5b6a6948e8d0baa4ed98faf9c"
        ],
        [
            "revert dependent g1; revert dependent g0; revert dependent g; induction H2; intros; subst.",
            "VernacExtend",
            "b2ffdec57e3675e532a8d0fad3b1ef322a4a570f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply g2ghost_inv in Heqc; subst; destruct g; [constructor | discriminate].",
            "VernacExtend",
            "52379b69a8c1496ad78bd5de4598b2cacc136a85"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply g2ghost_inv in Heqc; subst; destruct g0; [constructor | discriminate].",
            "VernacExtend",
            "5950ffa7bce8ba2e9bb108591f3519e0cd4e731e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct g, g0, g1; inv Heqa; inv Heqb; inv Heqc.",
            "VernacExtend",
            "a487817e6fdbdcb06e1f4b836d9ed6f7fdc0b91c"
        ],
        [
            "constructor; [|apply IHghost_join; auto].",
            "VernacExtend",
            "cc9fe22c66977b09106adb5806e327de3e76490d"
        ],
        [
            "destruct o as [[]|], o0 as [[]|], o1 as [[]|]; inv H; try constructor.",
            "VernacExtend",
            "bed93483764e63c58c4c9e854f9a9e1504d91844"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "destruct _f, _f0, _f1; inv H4; simpl in *.",
            "VernacExtend",
            "899818f13a6c23f8c49de53f345cf7015bac62a5"
        ],
        [
            "inv H; inv H0.",
            "VernacExtend",
            "a68a921d6be7f316f7f04b942586a57884cf2fe6"
        ],
        [
            "inv H; inv H3.",
            "VernacExtend",
            "465c7e5d4d5fee41239fa7a3614e9720666f1ea6"
        ],
        [
            "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst); constructor; constructor; auto.",
            "VernacExtend",
            "8b15b5e4c05335c67b28b456e24444ff5304e10f"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "destruct _f, _f0; inv H4.",
            "VernacExtend",
            "30632a233e66b2c1c752785ed8368a2fb6d7bae6"
        ],
        [
            "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst); constructor; auto.",
            "VernacExtend",
            "b6c85386dfbe65071bca7888c34b8a5c0422b45a"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "destruct _f, _f0; inv H4.",
            "VernacExtend",
            "30632a233e66b2c1c752785ed8368a2fb6d7bae6"
        ],
        [
            "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst); constructor; auto.",
            "VernacExtend",
            "b6c85386dfbe65071bca7888c34b8a5c0422b45a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ghost_of_core : forall phi, ghost_of (core phi) = core (ghost_of phi).",
            "VernacStartTheoremProof",
            "9fd672205c214a360b4a3288999b049c6638fda1"
        ],
        [
            "intro; rewrite KSa.core_unsquash.",
            "VernacExtend",
            "33da983da07d60453bc6bc4db525b746882aa75c"
        ],
        [
            "unfold ghost_of, KSa.K.unsquash, KSa.K.squash, unsquash, squash.",
            "VernacExtend",
            "f6ca05f285d69ac7ef79003298cb7e6f6e07f223"
        ],
        [
            "destruct (K.unsquash phi); simpl.",
            "VernacExtend",
            "9fa9515e278cfa3ad52bb2c55b4981f9395dd98a"
        ],
        [
            "rewrite K.unsquash_squash; simpl.",
            "VernacExtend",
            "763813124e131da5a556eecdcb0244441e6f55cb"
        ],
        [
            "setoid_rewrite (pre_rmap_core _ _f).",
            "VernacExtend",
            "24da06497b8f144c005fa15d2dbe930d8f6a313b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rmap_age1 (k:rmap) : option rmap := match unsquash k with | (O,_) => None | (S n,x) => Some (squash (n,x)) end.",
            "VernacDefinition",
            "6cb13c848e4d8cfabbdad655d833c145f0b794da"
        ],
        [
            "Definition rmap_unage (k:rmap) : rmap := match unsquash k with | (n,x) => squash (S n, x) end.",
            "VernacDefinition",
            "6d09e4b6101d842a755411b94bcb274e96895ac9"
        ],
        [
            "Lemma rmap_age1_knot_age1 : rmap_age1 = @age1 _ K.ageable_knot.",
            "VernacStartTheoremProof",
            "312321208e03058e609d0fd8a2bfb1f5d59426ad"
        ],
        [
            "extensionality x.",
            "VernacExtend",
            "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
        ],
        [
            "unfold rmap_age1.",
            "VernacExtend",
            "2535065c6f070d7a1dd189f9f60c0169679e5d66"
        ],
        [
            "rewrite K.knot_age1.",
            "VernacExtend",
            "0251e699901146cdf589c07631c74f54689fd39a"
        ],
        [
            "unfold unsquash, squash.",
            "VernacExtend",
            "df6bce749d1bc7d24398b0cedb7cb80913b04803"
        ],
        [
            "case (K.unsquash x); simpl; intros.",
            "VernacExtend",
            "7f35c4ac0fd964258f5640438dd4c497a274052d"
        ],
        [
            "destruct n; auto.",
            "VernacExtend",
            "ac1a46c3d4b557b3710fa36973beb6e353d40fb6"
        ],
        [
            "rewrite rmap'2pre_rmap2rmap'.",
            "VernacExtend",
            "6e7d97da66a29a0385f026a778a639b2d30fe9c0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmap_age1_eq: @age1 _ ag_rmap = rmap_age1.",
            "VernacStartTheoremProof",
            "4662e1f0526ca3ce014d5bcd24df7aef1f66ae86"
        ],
        [
            "unfold age1.",
            "VernacExtend",
            "b5fda3e7114822a69ee877f5a5f492411226d86f"
        ],
        [
            "unfold ag_rmap; simpl; auto.",
            "VernacExtend",
            "d64f4821980df6eb17b209ed6572eaf0adb86ee0"
        ],
        [
            "rewrite rmap_age1_knot_age1; reflexivity.",
            "VernacExtend",
            "4c4fe9f1ebd66cae4fcd2120bc8fa233f96830b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmap_level_eq: @level rmap ag_rmap = fun x => fst (unsquash x).",
            "VernacStartTheoremProof",
            "3f28c3b618eb0c435a7a9a54b74258f1a7250b8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality x.",
            "VernacExtend",
            "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
        ],
        [
            "unfold level.",
            "VernacExtend",
            "ed1f81103d537d3c76a87ea0e8a377f0ee72b0a7"
        ],
        [
            "unfold ag_rmap.",
            "VernacExtend",
            "6adae0c4546179de36c091a399fa285732ae6659"
        ],
        [
            "unfold KSa.K.ageable_knot.",
            "VernacExtend",
            "dee6689a0c78d972687fd67d7f342fc74e875832"
        ],
        [
            "unfold unsquash.",
            "VernacExtend",
            "bd36220d36e9a4ea98f2dad0759842af8689b480"
        ],
        [
            "rewrite K.knot_level.",
            "VernacExtend",
            "1085bc7597b447ab37c84d97771587f010faa6ed"
        ],
        [
            "destruct (K.unsquash x); simpl.",
            "VernacExtend",
            "3f8f98512f2855551254f838a9a980669bd0b58d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Rmaps.",
            "VernacEndSegment",
            "8ef50ec2d5647b93641451c94f40c0d9452959ba"
        ],
        [
            "Local Close Scope nat_scope.",
            "VernacOpenCloseScope",
            "7ecfecaf78c35e99b3bb3b287ce893e5565f5d57"
        ]
    ],
    "proofs": [
        {
            "name": "realize_eq",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros ???? []; subst; exists eq_refl; auto.",
                        "VernacExtend",
                        "43febaebf9113bc969abf85b140877844708cbd5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lower_join_inv",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion 1; subst; auto; destruct c; auto.",
                        "VernacExtend",
                        "45af63762bebe4e5f0bb69f4c7e9770ab4267fd4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct a, b, c; intros; subst; try contradiction; try constructor; auto.",
                        "VernacExtend",
                        "b1479487aae4be9ab2754abb02efa1cfbdad3630"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sa_rj",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply mkSep with (fun x => match x with NO' _ _ => NO' _ Share.bot bot_unreadable | YES' _ _ _ _ => NO' _ Share.bot bot_unreadable | PURE' k pds => PURE' _ k pds end).",
                        "VernacExtend",
                        "f32c71b73ff81c14b0aa0042391c863b9edfc99a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct t; constructor; try apply join_unit1; auto.",
                        "VernacExtend",
                        "627f5aaa13d90ad3025372f342a8350d36ee2908"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H; auto.",
                        "VernacExtend",
                        "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "sa_gj",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros; exists (fun _ => nil); auto; constructor.",
                        "VernacExtend",
                        "0b12e90e31e0d1c8418f220dc65fcacefd9d10c1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "pa_rj",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros x y z z' H1 H2; inv H1; inv H2; repeat match goal with H: join ?A ?B _, H': join ?A ?B ?C |- _ => pose proof (join_eq H H'); subst C end; repeat proof_irr; auto.",
                        "VernacExtend",
                        "8e45247e00e55b95202d0897d89730c2ebebeba7"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros a b c d e H1 H2.",
                        "VernacExtend",
                        "c518a9a80a4ea3d485ca5d839da76ba7065766ef"
                    ]
                },
                {
                    "command": [
                        "destruct d as [rd | rd sd kd pd | kd pd].",
                        "VernacExtend",
                        "e046ea1425ee380d7414438e6eade45f859745a8"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "e0f94aa5f2782b8800402cd11c16021ce3cec0e4"
                    ]
                },
                {
                    "command": [
                        "destruct b as [rb| | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "3dbdb04e0905f1985985d9823a3432cbea44f683"
                    ]
                },
                {
                    "command": [
                        "assert (join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "057c261f589bc97b3dc1945f8e16b3a1fe677f61"
                    ]
                },
                {
                    "command": [
                        "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "6be0dd3a097f0eba9a58be9fdf761762e788f444"
                    ]
                },
                {
                    "command": [
                        "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "5b6c7a92eb7806499695088674e46a183eac3523"
                    ]
                },
                {
                    "command": [
                        "assert (join rd rc re) by (inv H2; auto).",
                        "VernacExtend",
                        "3bb89ca2713fb59338fa825cf31b209651828d06"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (NO' _ rf (join_unreadable_shares H3 n1 n2)); split; constructor; auto.",
                        "VernacExtend",
                        "d7a83570ce2c487a3f842167a322a0bdff3bde2d"
                    ]
                },
                {
                    "command": [
                        "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "5b6c7a92eb7806499695088674e46a183eac3523"
                    ]
                },
                {
                    "command": [
                        "assert (join rd rc re) by (inv H2; auto).",
                        "VernacExtend",
                        "3bb89ca2713fb59338fa825cf31b209651828d06"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ rf (join_readable2 H3 sc) kc pc).",
                        "VernacExtend",
                        "79b9e11c7f07276cfd6a335467020004819f7148"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
                    ]
                },
                {
                    "command": [
                        "split; constructor; auto.",
                        "VernacExtend",
                        "c6608d22455cba65ae2ee26abc26f3257320064f"
                    ]
                },
                {
                    "command": [
                        "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "6be0dd3a097f0eba9a58be9fdf761762e788f444"
                    ]
                },
                {
                    "command": [
                        "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "5b6c7a92eb7806499695088674e46a183eac3523"
                    ]
                },
                {
                    "command": [
                        "assert (H0: join rd rc re) by (inv H2; auto).",
                        "VernacExtend",
                        "91a68676b879ae30be2ea8b4bcec27ab9c728724"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "c06e3505f829ec26eb5618d0751e53490da6235e"
                    ]
                },
                {
                    "command": [
                        "destruct b as [ | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "d2ab6c10d9e4714190afab12d0b45d98c0498b9d"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ rf (join_readable1 H3 sb) kd pd).",
                        "VernacExtend",
                        "3eb968a0de1a6ce135cbfa8102c7cb89d4fb9115"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor; auto.",
                        "VernacExtend",
                        "200dfa0a5d72160575937d960ae478d921d75ea8"
                    ]
                },
                {
                    "command": [
                        "destruct b as [ rb | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "80aaf1bde8f53727fe71015b9fa66fa0923cd751"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (NO' _ rf (join_unreadable_shares H3 n0 n)).",
                        "VernacExtend",
                        "bc7b3c8fb15362fcd1a49c9358ae40ca9c3e74ff"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor; auto.",
                        "VernacExtend",
                        "200dfa0a5d72160575937d960ae478d921d75ea8"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ rf (join_readable1 H3 sb) kb pb).",
                        "VernacExtend",
                        "5a8348fc0855eb73d4f253da2d24cfd9d9b3cb42"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor; auto.",
                        "VernacExtend",
                        "200dfa0a5d72160575937d960ae478d921d75ea8"
                    ]
                },
                {
                    "command": [
                        "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "5b6c7a92eb7806499695088674e46a183eac3523"
                    ]
                },
                {
                    "command": [
                        "assert (H0: join rd rc re) by (inv H2; auto).",
                        "VernacExtend",
                        "91a68676b879ae30be2ea8b4bcec27ab9c728724"
                    ]
                },
                {
                    "command": [
                        "destruct b as [ rb | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "80aaf1bde8f53727fe71015b9fa66fa0923cd751"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "c06e3505f829ec26eb5618d0751e53490da6235e"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ rf (join_readable2 H3 sc) kc pc).",
                        "VernacExtend",
                        "79b9e11c7f07276cfd6a335467020004819f7148"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor; auto.",
                        "VernacExtend",
                        "200dfa0a5d72160575937d960ae478d921d75ea8"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "c06e3505f829ec26eb5618d0751e53490da6235e"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ rf (join_readable1 H3 sb) kb pb).",
                        "VernacExtend",
                        "5a8348fc0855eb73d4f253da2d24cfd9d9b3cb42"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; try constructor; auto.",
                        "VernacExtend",
                        "1eafabaf73fd14b35a53a351ec7f8d593da61680"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ rf (join_readable1 H3 sb) kb pb).",
                        "VernacExtend",
                        "5a8348fc0855eb73d4f253da2d24cfd9d9b3cb42"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; try constructor; auto.",
                        "VernacExtend",
                        "1eafabaf73fd14b35a53a351ec7f8d593da61680"
                    ]
                },
                {
                    "command": [
                        "exists (PURE' _ kd pd).",
                        "VernacExtend",
                        "c66d333b24852c1239d384b8a3d761f1a228672a"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor.",
                        "VernacExtend",
                        "39568c874451b84fa1c803d549e1839b021e370a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros a b c H; inv H; econstructor; apply join_comm; auto.",
                        "VernacExtend",
                        "ee180ca5472b7f5c6edcc15c3d8cbc135db57044"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros; inv H; inv H0; repeat match goal with H: join ?A ?B ?C, H': join ?C ?D ?A |- _ => pose proof (join_positivity H H'); subst C end; repeat proof_irr; auto.",
                        "VernacExtend",
                        "c728dd9fe975820a719d354796a974d8150a6778"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "paf_res",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "constructor; repeat intro.",
                        "VernacExtend",
                        "e53357b67d6471fb9a75c69c70ca9f8996a2cb1d"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl; constructor; trivial.",
                        "VernacExtend",
                        "1824f8ea257938f34979ac469f428c0ad840df34"
                    ]
                },
                {
                    "command": [
                        "destruct z as [ rz | rz sz kz pz | kz pz ].",
                        "VernacExtend",
                        "91a0fe422a813f65100de8ae178e0e72588fb596"
                    ]
                },
                {
                    "command": [
                        "destruct x' as [ rx' | rx' sx' kx' px' | kx' px' ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "2cce3d9a58adc56500308c579440defa0ff1134b"
                    ]
                },
                {
                    "command": [
                        "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "17604931d5ff28e8c1c55f647a33f1f22462599c"
                    ]
                },
                {
                    "command": [
                        "exists (NO' _ rx' n0); exists (NO' _ ry n1); inv H; split; constructor; tauto.",
                        "VernacExtend",
                        "580c787f708c96ed09c808a1b598d83188db7161"
                    ]
                },
                {
                    "command": [
                        "destruct x' as [ rx' | rx' sx' kx' px' | kx' px' ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "2cce3d9a58adc56500308c579440defa0ff1134b"
                    ]
                },
                {
                    "command": [
                        "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "17604931d5ff28e8c1c55f647a33f1f22462599c"
                    ]
                },
                {
                    "command": [
                        "exists (NO' _ rx' n); exists (YES' _ ry sy kz pz); inv H; split; constructor; auto.",
                        "VernacExtend",
                        "3479c025a939fed6395c69a2521b5fe6e8991471"
                    ]
                },
                {
                    "command": [
                        "simpl in *; f_equal; auto.",
                        "VernacExtend",
                        "43e80262ad6dbc97e2661ac560f9a6840d334f46"
                    ]
                },
                {
                    "command": [
                        "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "17604931d5ff28e8c1c55f647a33f1f22462599c"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ rx' sx' kx' pz); exists (NO' _ ry n); inv H; split; constructor; auto.",
                        "VernacExtend",
                        "a9131f35a38fba2dc5d6b7fadb2eae09f0e830ef"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ rx' sx' kx' pz); exists (YES' _ ry sy ky pz); inv H; split; constructor; auto; simpl; f_equal; auto.",
                        "VernacExtend",
                        "7ab58db23691dd6492c7c52af040629f8393889c"
                    ]
                },
                {
                    "command": [
                        "exists (PURE' _ kz pz); exists (PURE' _ kz pz); simpl in *; inv H; split; [constructor | tauto].",
                        "VernacExtend",
                        "d3b7dafbd9e166cba1654fe83772875281428ec4"
                    ]
                },
                {
                    "command": [
                        "destruct x as [ rx | rx sx kx px | kx px ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "40dc55773706c74c3de2ed1f7a2b959b383c6f27"
                    ]
                },
                {
                    "command": [
                        "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "17604931d5ff28e8c1c55f647a33f1f22462599c"
                    ]
                },
                {
                    "command": [
                        "destruct z' as [ rz | rz sz kz pz | kz pz ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "f9298e4823c53446061a4625b75552de05e52fc9"
                    ]
                },
                {
                    "command": [
                        "exists (NO' _ ry n0); exists (NO' _ rz n1); inv H; split; constructor; auto.",
                        "VernacExtend",
                        "90f3c72b98eb71c1049e5e2d9b1486f456cede99"
                    ]
                },
                {
                    "command": [
                        "destruct z' as [ rz | rz sz kz pz | kz pz ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "f9298e4823c53446061a4625b75552de05e52fc9"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ ry sy ky py); exists (YES' _ rz sz ky py); inv H; split; constructor; auto.",
                        "VernacExtend",
                        "2ca0d71c0019608fded1bdcfb12c7ff90651dc32"
                    ]
                },
                {
                    "command": [
                        "destruct y as [ ry | ry sy ky py | ky py ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "17604931d5ff28e8c1c55f647a33f1f22462599c"
                    ]
                },
                {
                    "command": [
                        "destruct z' as [ rz | rz sz kz pz | kz pz ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "f9298e4823c53446061a4625b75552de05e52fc9"
                    ]
                },
                {
                    "command": [
                        "exists (NO' _ ry n); exists (YES' _ rz sz kx px); inv H; split; constructor; auto.",
                        "VernacExtend",
                        "17b1cf69a21c97a36d2b298cdc3ecb1d67e983fa"
                    ]
                },
                {
                    "command": [
                        "destruct z' as [ rz | rz sz kz pz | kz pz ]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "f9298e4823c53446061a4625b75552de05e52fc9"
                    ]
                },
                {
                    "command": [
                        "exists (YES' _ ry sy kx px); exists (YES' _ rz sz kx px); inv H; split; constructor; auto.",
                        "VernacExtend",
                        "46ba48da4616d7da5ffcc5f4890864bed6fb283a"
                    ]
                },
                {
                    "command": [
                        "simpl; f_equal; auto.",
                        "VernacExtend",
                        "649eee8ad709ffbf62b1618162e754841096d2ee"
                    ]
                },
                {
                    "command": [
                        "exists (PURE' _ kx px); exists (PURE' _ kx px); inv H; split; constructor; auto.",
                        "VernacExtend",
                        "ecbe0689e213d81058ca7b37086f8a716b9acb10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ff_ghost",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "constructor; intros; extensionality x; unfold ghost_fmap.",
                        "VernacExtend",
                        "a7005099376c5e2657eb9cf3ab55b7b3db53f860"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_id; auto.",
                        "VernacExtend",
                        "571ee35389dd15522fb0012420f7bf84e8a88b76"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- fmap_comp; auto.",
                        "VernacExtend",
                        "649942f860e15a4eee3d429015acf6da7e0b0114"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elem_join_inv",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "inversion 1; subst.",
                        "VernacExtend",
                        "bc8d5fb79c939337a7050fe493472018372e19e2"
                    ]
                },
                {
                    "command": [
                        "exists eq_refl, eq_refl; auto.",
                        "VernacExtend",
                        "a6ca18869af72d5e3b761ee6b58e4449a52a611f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ghost_join_inv",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl; auto.",
                        "VernacExtend",
                        "c744c0db2f17ed7745b4893bfd3017058a6e4828"
                    ]
                },
                {
                    "command": [
                        "destruct m; simpl; auto.",
                        "VernacExtend",
                        "94781fbacb55d6a7e74b34f87daed7127004ccb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pa_gej",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion 1; inversion 1; subst.",
                        "VernacExtend",
                        "ce6b0fb553b0b5f93ea74b3e4865b85bb61c6b44"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst).",
                        "VernacExtend",
                        "207637b6281a76cfd4ada6eca6b28b2deb557f70"
                    ]
                },
                {
                    "command": [
                        "f_equal; eapply exist_ext, join_eq; eauto.",
                        "VernacExtend",
                        "e0520ec759434dd1b8c3df5ee8977967d8f366a9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros ????? J1%elem_join_inv J2%elem_join_inv.",
                        "VernacExtend",
                        "3c0cc37e922c8c939a15ab89f62aff0c8d404f94"
                    ]
                },
                {
                    "command": [
                        "destruct a as (ga & a & ?), b as (gb & b & ?), c as (gc & c & ?), d as (gd & d & ?), e as (ge & e & ?).",
                        "VernacExtend",
                        "133fd865ca1a99bd1acbac65d59521ea38c0f7fa"
                    ]
                },
                {
                    "command": [
                        "repeat (apply realize_eq in J1; destruct J1 as [? J1]).",
                        "VernacExtend",
                        "450a3ab880a602995ad32ebdab58e70dba5823a0"
                    ]
                },
                {
                    "command": [
                        "repeat (apply realize_eq in J2; destruct J2 as [? J2]); subst.",
                        "VernacExtend",
                        "e376952dd2c5d18121e4a828674b43fefc523ab5"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc J1 J2) as (f & ? & J).",
                        "VernacExtend",
                        "39b5943bfabf8cea2129d9f64cf2a45cf36dafc0"
                    ]
                },
                {
                    "command": [
                        "exists (existT _ ga (exist _ f (join_valid _ _ _ (join_comm J) v3))).",
                        "VernacExtend",
                        "6532b0f70abf6d8e8f2ba41d3598ddec5aa5327f"
                    ]
                },
                {
                    "command": [
                        "split; constructor; auto.",
                        "VernacExtend",
                        "c6608d22455cba65ae2ee26abc26f3257320064f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion 1; constructor; auto.",
                        "VernacExtend",
                        "897a7862094a2c2170efdc5720c1f8197bce64b6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion 1; subst; inversion 1; subst; auto.",
                        "VernacExtend",
                        "c389a43e7db002dc588f7ffb4e6f98f14ecda00d"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst).",
                        "VernacExtend",
                        "207637b6281a76cfd4ada6eca6b28b2deb557f70"
                    ]
                },
                {
                    "command": [
                        "f_equal; eapply exist_ext, join_positivity; eauto.",
                        "VernacExtend",
                        "153928d39c3f70b7490d56c70066e221474ffb92"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pa_gj",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros until 1; revert z'; induction H; inversion 1; subst; auto.",
                        "VernacExtend",
                        "d26839b9f0b27c93c2d46c0427ea2e52f91d5c92"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "eapply join_eq; eauto.",
                        "VernacExtend",
                        "ccf59f1f695e4c180b0ea6a817cf2aad71c65ad6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction a; intros ???? J1 J2; apply ghost_join_inv in J1; subst.",
                        "VernacExtend",
                        "860dc17ac4deee4c87458ef71746eeae03407f9f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists e; split; auto; constructor.",
                        "VernacExtend",
                        "46879c0af8f3ad8d61fbf59090b59e74b60e0886"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct b; subst; [eexists; split; eauto; constructor|].",
                        "VernacExtend",
                        "4aeae7a3fc64282a7cfd9d1d9565e170f68bdc3c"
                    ]
                },
                {
                    "command": [
                        "destruct d; [contradiction|].",
                        "VernacExtend",
                        "83c56892b44297469acd7216ab80567d366a2c91"
                    ]
                },
                {
                    "command": [
                        "destruct J1 as [Jc1 J1].",
                        "VernacExtend",
                        "09498b45d2f0c9c85f69da257828dc87ba2c645a"
                    ]
                },
                {
                    "command": [
                        "apply ghost_join_inv in J2.",
                        "VernacExtend",
                        "c9f5a568af212525b526f3fec476bdd318112ac1"
                    ]
                },
                {
                    "command": [
                        "destruct c; subst; [eexists; split; eauto; constructor; auto|].",
                        "VernacExtend",
                        "a7215ea438caca2ebdca551ba1b44a6c7c2aeb94"
                    ]
                },
                {
                    "command": [
                        "destruct e; [contradiction|].",
                        "VernacExtend",
                        "29bb6899a08667cce45a25660cbb8e80a63a8e07"
                    ]
                },
                {
                    "command": [
                        "destruct J2 as [Jc2 J2].",
                        "VernacExtend",
                        "feec88a5138071371bcbd51c43c9219841408599"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc Jc1 Jc2) as (f & ? & ?).",
                        "VernacExtend",
                        "8890d9cd57388835604ab19d2e21b0cd3eed5624"
                    ]
                },
                {
                    "command": [
                        "destruct (IHa _ _ _ _ J1 J2) as (f' & ? & ?).",
                        "VernacExtend",
                        "1e9982b2dab1a3397bfb5fcd397c56fad99e0c41"
                    ]
                },
                {
                    "command": [
                        "exists (f :: f'); split; constructor; auto.",
                        "VernacExtend",
                        "8b8cb13ce80e24583cdf7fcbedcbc1343b55f587"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction 1; constructor; auto.",
                        "VernacExtend",
                        "ff51879142eef61207638aeecdcf6617e01ec60f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros until 1; revert b'; induction H; inversion 1; subst; auto.",
                        "VernacExtend",
                        "95a0dd93b315ac49ada2e7db9c1acad8d77e7dd3"
                    ]
                },
                {
                    "command": [
                        "f_equal; eauto.",
                        "VernacExtend",
                        "0aaae116840c77af05ab473518cd728dcb792af6"
                    ]
                },
                {
                    "command": [
                        "eapply join_positivity; eauto.",
                        "VernacExtend",
                        "b262d9d0323b0c99e4dff673bcb8aed87da0254b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "paf_ghost",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "constructor; repeat intro.",
                        "VernacExtend",
                        "e53357b67d6471fb9a75c69c70ca9f8996a2cb1d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction H; constructor; auto.",
                        "VernacExtend",
                        "0cdcec2c9e6eec98889a8fd6b00452376de5b2ba"
                    ]
                },
                {
                    "command": [
                        "inv H; constructor; auto.",
                        "VernacExtend",
                        "94c2a63227e9a0494888b6417590039e3b09dc19"
                    ]
                },
                {
                    "command": [
                        "inv H1; constructor; auto.",
                        "VernacExtend",
                        "00c536575aedd4707ca1576a00dfb739992f69d9"
                    ]
                },
                {
                    "command": [
                        "inv H2; constructor; auto; simpl; congruence.",
                        "VernacExtend",
                        "0e3b0ce9b1ae3d1e0f42d525f472fe859d6ae47c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "revert dependent z; revert y; induction x'; intros; apply ghost_join_inv in H.",
                        "VernacExtend",
                        "bf80e172104ebf230e3936b9fc2ec7aa8b79b0a6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists nil, z; split; auto; constructor.",
                        "VernacExtend",
                        "d794cc4a03f39962f574ec3ff59b4ef49fe9f98a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct y; simpl in *.",
                        "VernacExtend",
                        "07e55ddd3381d9ecb9f324c907a9fd9c091330a9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists z, nil; split; auto; constructor.",
                        "VernacExtend",
                        "c414254ba7e0d85a6a611c676d736e068d3f7f37"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct z; [contradiction | simpl in *].",
                        "VernacExtend",
                        "174e3238f6c8404922011eeca576c3db119694d2"
                    ]
                },
                {
                    "command": [
                        "destruct H as [J1 J2].",
                        "VernacExtend",
                        "1ddb803c69086b8cb5f03180775c6869022e81ed"
                    ]
                },
                {
                    "command": [
                        "destruct (IHx' _ _ J2) as (x & y' & ? & ? & ?); subst.",
                        "VernacExtend",
                        "c1dce968d0884931c5b8a346a163ca4f480bcc4c"
                    ]
                },
                {
                    "command": [
                        "apply lower_join_inv in J1.",
                        "VernacExtend",
                        "ca90223d65ba24abdd20da6711aeff546373eb06"
                    ]
                },
                {
                    "command": [
                        "destruct a as [[[? []]]|].",
                        "VernacExtend",
                        "7b895c98dfd3c01f0e845230ee43d756d6d97f49"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct o as [[[? []]]|].",
                        "VernacExtend",
                        "b482b81c17f5d1737326e4b655d489a33f4463c6"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct o0 as [[[? []]]|]; [|contradiction].",
                        "VernacExtend",
                        "234488782aee0440a2ca29508748cd489a7a144f"
                    ]
                },
                {
                    "command": [
                        "destruct J1 as [J1%elem_join_inv J1']; simpl in *.",
                        "VernacExtend",
                        "25f30d7441aa6aae6004b40b02bad4680ecd675e"
                    ]
                },
                {
                    "command": [
                        "repeat (apply realize_eq in J1 as [? J1]); subst; simpl in *.",
                        "VernacExtend",
                        "5497e55908f0c8a054dcef164ae492aa11cebe85"
                    ]
                },
                {
                    "command": [
                        "exists (Some (existT _ x0 (exist _ _ v), _f1) :: x), (Some (existT _ x0 (exist _ _ v0), _f1) :: y').",
                        "VernacExtend",
                        "6ef1cb77fa67f298fd6c28157157382987d46b76"
                    ]
                },
                {
                    "command": [
                        "split; [repeat constructor; auto|].",
                        "VernacExtend",
                        "1530f2b70bde3c9df8355df8201672e1e577e61a"
                    ]
                },
                {
                    "command": [
                        "unfold ghost_fmap in *; simpl in *.",
                        "VernacExtend",
                        "b6757a55a209f8e5dd008f806461d9b519e18dd8"
                    ]
                },
                {
                    "command": [
                        "inv J1'.",
                        "VernacExtend",
                        "7919468d4e80eb693147dd5bc7f96ece4b4949f5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1, <- H2; auto.",
                        "VernacExtend",
                        "8c1128f81681bb41b21815e09f653800ba23566d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct o0 as [[[? []]]|]; [|contradiction].",
                        "VernacExtend",
                        "234488782aee0440a2ca29508748cd489a7a144f"
                    ]
                },
                {
                    "command": [
                        "inv J1.",
                        "VernacExtend",
                        "d81dd68654abd716496fc9cc8cd037487a7c714b"
                    ]
                },
                {
                    "command": [
                        "match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst.",
                        "VernacExtend",
                        "29ce5e03ab3d26f23d3a8e03c5d606080de26d69"
                    ]
                },
                {
                    "command": [
                        "exists (Some (existT _ x2 (exist _ _ v0), _f0) :: x), (None :: y').",
                        "VernacExtend",
                        "e3b060683f5600cad5a8a462db48abb5b2e40183"
                    ]
                },
                {
                    "command": [
                        "split; [repeat constructor; auto|].",
                        "VernacExtend",
                        "1530f2b70bde3c9df8355df8201672e1e577e61a"
                    ]
                },
                {
                    "command": [
                        "unfold ghost_fmap in *; simpl in *.",
                        "VernacExtend",
                        "b6757a55a209f8e5dd008f806461d9b519e18dd8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; split; f_equal; f_equal; f_equal; f_equal.",
                        "VernacExtend",
                        "99dc35564b3dcdf19c21c238c930fb5b4bbd6052"
                    ]
                },
                {
                    "command": [
                        "apply exist_ext; auto.",
                        "VernacExtend",
                        "1838dc4334fa2f223e9f5af0a4dee6936a1b5e3a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists (None :: x), (o0 :: y').",
                        "VernacExtend",
                        "4ac5c682dda6d541485b2c0c3477ce173c9f1dcf"
                    ]
                },
                {
                    "command": [
                        "split; [repeat constructor; auto|].",
                        "VernacExtend",
                        "1530f2b70bde3c9df8355df8201672e1e577e61a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "unfold ghost_fmap in *; simpl in *.",
                        "VernacExtend",
                        "b6757a55a209f8e5dd008f806461d9b519e18dd8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; f_equal.",
                        "VernacExtend",
                        "101d15354648348a628c7b49983620a37f95bf8c"
                    ]
                },
                {
                    "command": [
                        "destruct o, o0; inv J1; auto.",
                        "VernacExtend",
                        "e15034e77b82dd397a708087b42d20277ba2ce55"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "revert dependent z'; revert y; induction x; intros; apply ghost_join_inv in H; simpl in H.",
                        "VernacExtend",
                        "5f961fffdb78c44940382a1af7e9ecf2f7c898e5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists y, y; split; auto; constructor.",
                        "VernacExtend",
                        "9646ec3f3fd14d15049cf0a36b07616a03ff093e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct y; simpl in *.",
                        "VernacExtend",
                        "07e55ddd3381d9ecb9f324c907a9fd9c091330a9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists nil, (a :: x); split; auto; constructor.",
                        "VernacExtend",
                        "25ece4509c76b0e9ffa220e7fea5e190798d55f7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct z'; [contradiction | simpl in *].",
                        "VernacExtend",
                        "fa4eaaee792b26590fd0e90e185f780ed4a2fb7b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [J1 J2].",
                        "VernacExtend",
                        "1ddb803c69086b8cb5f03180775c6869022e81ed"
                    ]
                },
                {
                    "command": [
                        "destruct (IHx _ _ J2) as (y' & z & ? & ? & ?); subst.",
                        "VernacExtend",
                        "698548d2ab0bb4abc9ebf30b3daa42f5172ad69e"
                    ]
                },
                {
                    "command": [
                        "apply lower_join_inv in J1.",
                        "VernacExtend",
                        "ca90223d65ba24abdd20da6711aeff546373eb06"
                    ]
                },
                {
                    "command": [
                        "destruct a as [[[? []]]|].",
                        "VernacExtend",
                        "7b895c98dfd3c01f0e845230ee43d756d6d97f49"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct o as [[[? []]]|].",
                        "VernacExtend",
                        "b482b81c17f5d1737326e4b655d489a33f4463c6"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct o0 as [[[? []]]|]; [|contradiction].",
                        "VernacExtend",
                        "234488782aee0440a2ca29508748cd489a7a144f"
                    ]
                },
                {
                    "command": [
                        "destruct J1 as [J1%elem_join_inv J1']; simpl in *.",
                        "VernacExtend",
                        "25f30d7441aa6aae6004b40b02bad4680ecd675e"
                    ]
                },
                {
                    "command": [
                        "repeat (apply realize_eq in J1 as [? J1]); subst; simpl in *.",
                        "VernacExtend",
                        "5497e55908f0c8a054dcef164ae492aa11cebe85"
                    ]
                },
                {
                    "command": [
                        "exists (Some (existT _ x0 (exist _ _ v0), _f) :: y'), (Some (existT _ x0 (exist _ _ v1), _f) :: z).",
                        "VernacExtend",
                        "67546fd05a63bb0d7514e0c7e5305beebdbaa542"
                    ]
                },
                {
                    "command": [
                        "split; [repeat constructor; auto|].",
                        "VernacExtend",
                        "1530f2b70bde3c9df8355df8201672e1e577e61a"
                    ]
                },
                {
                    "command": [
                        "unfold ghost_fmap in *; simpl in *.",
                        "VernacExtend",
                        "b6757a55a209f8e5dd008f806461d9b519e18dd8"
                    ]
                },
                {
                    "command": [
                        "inv J1'.",
                        "VernacExtend",
                        "7919468d4e80eb693147dd5bc7f96ece4b4949f5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0, <- H1; auto.",
                        "VernacExtend",
                        "e333609fb223d689dfe799dbc4e2bad4f0e467a6"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct o0 as [[[? []]]|]; [|contradiction].",
                        "VernacExtend",
                        "234488782aee0440a2ca29508748cd489a7a144f"
                    ]
                },
                {
                    "command": [
                        "inv J1.",
                        "VernacExtend",
                        "d81dd68654abd716496fc9cc8cd037487a7c714b"
                    ]
                },
                {
                    "command": [
                        "match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst.",
                        "VernacExtend",
                        "29ce5e03ab3d26f23d3a8e03c5d606080de26d69"
                    ]
                },
                {
                    "command": [
                        "exists (None :: y'), (Some (existT _ x2 (exist _ _ v), _f) :: z).",
                        "VernacExtend",
                        "a3dce8feb01000b46fad09890f54dcb009da261c"
                    ]
                },
                {
                    "command": [
                        "split; [repeat constructor; auto|].",
                        "VernacExtend",
                        "1530f2b70bde3c9df8355df8201672e1e577e61a"
                    ]
                },
                {
                    "command": [
                        "unfold ghost_fmap in *; simpl in *.",
                        "VernacExtend",
                        "b6757a55a209f8e5dd008f806461d9b519e18dd8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; split; f_equal; f_equal; f_equal; f_equal.",
                        "VernacExtend",
                        "404c1bfe3210fe9724e28863dc30e81234fe081f"
                    ]
                },
                {
                    "command": [
                        "apply exist_ext; auto.",
                        "VernacExtend",
                        "1838dc4334fa2f223e9f5af0a4dee6936a1b5e3a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists (o :: y'), (o :: z).",
                        "VernacExtend",
                        "3edbbb32b9808f205057c0bb965879c26666951f"
                    ]
                },
                {
                    "command": [
                        "split; [repeat constructor; auto|].",
                        "VernacExtend",
                        "1530f2b70bde3c9df8355df8201672e1e577e61a"
                    ]
                },
                {
                    "command": [
                        "unfold ghost_fmap in *; simpl in *; rewrite <- H0; split; f_equal.",
                        "VernacExtend",
                        "703cbe7beceeed8ec0a8cae767f2cdf4ee796d00"
                    ]
                },
                {
                    "command": [
                        "destruct o, o0; auto; contradiction.",
                        "VernacExtend",
                        "66d89a8433b8617e3c6054679855f25951ad61b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pre_rmap_core",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "approx_obligation_1",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply age_level in H.",
                        "VernacExtend",
                        "cab1ee3d49024d43572fc289b15512cbdff1144d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply pred_hereditary with a; auto.",
                        "VernacExtend",
                        "e88f1d2f370031f6b2a4638380db91bdf8cc4305"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "res2resource2res",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "unfold resource2res, res2resource; destruct x as [? | ? ? ? [? ?] | ? [? ?]]; auto.",
                        "VernacExtend",
                        "c147d27e806b06f0971ce60c6a1f1ed1ff82699f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resource2res2resource",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "unfold resource2res, res2resource; destruct x; try destruct p0; try destruct p; auto.",
                        "VernacExtend",
                        "82748bec133014b5d3f83dfec2211f7f02ad25f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "res_option_rewrite",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "unfold SM.res_option, res_option, compose.",
                        "VernacExtend",
                        "c700019ca99c87d0465452294fbd597687f2f0d6"
                    ]
                },
                {
                    "command": [
                        "extensionality r; destruct r; simpl; auto; destruct p; auto.",
                        "VernacExtend",
                        "6e4f770b55edd99e5c7711d5c7a94e8c018f779e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g2ghost2g",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "induction x; auto; simpl.",
                        "VernacExtend",
                        "d77d5f0155575049623a7959f08b14192d27e649"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx; destruct a as [[]|]; auto; simpl.",
                        "VernacExtend",
                        "d561bb3cfd421719bde7a5f0a0899a8c439f1e7d"
                    ]
                },
                {
                    "command": [
                        "destruct _f; auto.",
                        "VernacExtend",
                        "ba800e73e9e2f7bc7838b295e8239a19bfed4c12"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ghost2g2ghost",
            "line_nb": 486,
            "steps": [
                {
                    "command": [
                        "induction x; auto; simpl.",
                        "VernacExtend",
                        "d77d5f0155575049623a7959f08b14192d27e649"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx; destruct a as [[]|]; auto; simpl.",
                        "VernacExtend",
                        "d561bb3cfd421719bde7a5f0a0899a8c439f1e7d"
                    ]
                },
                {
                    "command": [
                        "destruct p; auto.",
                        "VernacExtend",
                        "94280b3a49c08b76852fac1fca3c7461587f918a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Perm_resource",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros x y z z' H1 H2; inv H1; inv H2; repeat match goal with H: join ?A ?B _, H': join ?A ?B ?C |- _ => pose proof (join_eq H H'); subst C end; repeat proof_irr; auto.",
                        "VernacExtend",
                        "8e45247e00e55b95202d0897d89730c2ebebeba7"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros a b c d e H1 H2.",
                        "VernacExtend",
                        "c518a9a80a4ea3d485ca5d839da76ba7065766ef"
                    ]
                },
                {
                    "command": [
                        "destruct d as [rd | rd sd kd pd | kd pd].",
                        "VernacExtend",
                        "e046ea1425ee380d7414438e6eade45f859745a8"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "e0f94aa5f2782b8800402cd11c16021ce3cec0e4"
                    ]
                },
                {
                    "command": [
                        "destruct b as [rb| | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "3dbdb04e0905f1985985d9823a3432cbea44f683"
                    ]
                },
                {
                    "command": [
                        "assert (join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "057c261f589bc97b3dc1945f8e16b3a1fe677f61"
                    ]
                },
                {
                    "command": [
                        "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "6be0dd3a097f0eba9a58be9fdf761762e788f444"
                    ]
                },
                {
                    "command": [
                        "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "5b6c7a92eb7806499695088674e46a183eac3523"
                    ]
                },
                {
                    "command": [
                        "assert (join rd rc re) by (inv H2; auto).",
                        "VernacExtend",
                        "3bb89ca2713fb59338fa825cf31b209651828d06"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (NO rf (join_unreadable_shares H3 n1 n2)); split; constructor; auto.",
                        "VernacExtend",
                        "c5c3ff72118dd008713b378abaec5b3ea60b3663"
                    ]
                },
                {
                    "command": [
                        "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "5b6c7a92eb7806499695088674e46a183eac3523"
                    ]
                },
                {
                    "command": [
                        "assert (join rd rc re) by (inv H2; auto).",
                        "VernacExtend",
                        "3bb89ca2713fb59338fa825cf31b209651828d06"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES rf (join_readable2 H3 sc) kc pc).",
                        "VernacExtend",
                        "3481812416fedbf0300dcfe75548777fb97448a4"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
                    ]
                },
                {
                    "command": [
                        "split; constructor; auto.",
                        "VernacExtend",
                        "c6608d22455cba65ae2ee26abc26f3257320064f"
                    ]
                },
                {
                    "command": [
                        "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "6be0dd3a097f0eba9a58be9fdf761762e788f444"
                    ]
                },
                {
                    "command": [
                        "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "5b6c7a92eb7806499695088674e46a183eac3523"
                    ]
                },
                {
                    "command": [
                        "assert (H0: join rd rc re) by (inv H2; auto).",
                        "VernacExtend",
                        "91a68676b879ae30be2ea8b4bcec27ab9c728724"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "c06e3505f829ec26eb5618d0751e53490da6235e"
                    ]
                },
                {
                    "command": [
                        "destruct b as [ | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "d2ab6c10d9e4714190afab12d0b45d98c0498b9d"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES rf (join_readable1 H3 sb) kd pd).",
                        "VernacExtend",
                        "5553c567a4ce8f9294cb254f9e9d12c67e1fe0c7"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor; auto.",
                        "VernacExtend",
                        "200dfa0a5d72160575937d960ae478d921d75ea8"
                    ]
                },
                {
                    "command": [
                        "destruct b as [ rb | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "80aaf1bde8f53727fe71015b9fa66fa0923cd751"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (NO rf (join_unreadable_shares H3 n0 n)).",
                        "VernacExtend",
                        "dd0452984e047b78e58fbe5e6b5b6d1a479c49fb"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor; auto.",
                        "VernacExtend",
                        "200dfa0a5d72160575937d960ae478d921d75ea8"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES rf (join_readable1 H3 sb) kb pb).",
                        "VernacExtend",
                        "fb0be2688f3e636b2f66e8f87a0ab3b7606d9390"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor; auto.",
                        "VernacExtend",
                        "200dfa0a5d72160575937d960ae478d921d75ea8"
                    ]
                },
                {
                    "command": [
                        "destruct e as [re | re se ke pe | ke pe]; try solve [elimtype False; inv H2].",
                        "VernacExtend",
                        "5b6c7a92eb7806499695088674e46a183eac3523"
                    ]
                },
                {
                    "command": [
                        "assert (H0: join rd rc re) by (inv H2; auto).",
                        "VernacExtend",
                        "91a68676b879ae30be2ea8b4bcec27ab9c728724"
                    ]
                },
                {
                    "command": [
                        "destruct b as [ rb | rb sb kb pb | ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "80aaf1bde8f53727fe71015b9fa66fa0923cd751"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "c06e3505f829ec26eb5618d0751e53490da6235e"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES rf (join_readable2 H3 sc) kc pc).",
                        "VernacExtend",
                        "3481812416fedbf0300dcfe75548777fb97448a4"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor; auto.",
                        "VernacExtend",
                        "200dfa0a5d72160575937d960ae478d921d75ea8"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | ra sa ka pa | ka pa ]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "c06e3505f829ec26eb5618d0751e53490da6235e"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES rf (join_readable1 H3 sb) kb pb).",
                        "VernacExtend",
                        "fb0be2688f3e636b2f66e8f87a0ab3b7606d9390"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; try constructor; auto.",
                        "VernacExtend",
                        "1eafabaf73fd14b35a53a351ec7f8d593da61680"
                    ]
                },
                {
                    "command": [
                        "assert (H: join ra rb rd) by (inv H1; auto).",
                        "VernacExtend",
                        "4cb52a3f93f3ea47a6f447157e752bc1ba96fa5d"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H H0) as [rf [? ?]].",
                        "VernacExtend",
                        "b683ff381d65e8995378ef0684d55d3a5f6a55e3"
                    ]
                },
                {
                    "command": [
                        "exists (YES rf (join_readable1 H3 sb) kb pb).",
                        "VernacExtend",
                        "fb0be2688f3e636b2f66e8f87a0ab3b7606d9390"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; try constructor; auto.",
                        "VernacExtend",
                        "1eafabaf73fd14b35a53a351ec7f8d593da61680"
                    ]
                },
                {
                    "command": [
                        "exists (PURE kd pd).",
                        "VernacExtend",
                        "1b8fa94a77d0d7e1667787f24f54617f1a0044da"
                    ]
                },
                {
                    "command": [
                        "inv H1; inv H2; split; constructor.",
                        "VernacExtend",
                        "39568c874451b84fa1c803d549e1839b021e370a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros a b c H; inv H; econstructor; apply join_comm; auto.",
                        "VernacExtend",
                        "ee180ca5472b7f5c6edcc15c3d8cbc135db57044"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros; inv H; inv H0; repeat match goal with H: join ?A ?B ?C, H': join ?C ?D ?A |- _ => pose proof (join_positivity H H'); subst C end; repeat proof_irr; auto.",
                        "VernacExtend",
                        "c728dd9fe975820a719d354796a974d8150a6778"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sep_resource",
            "line_nb": 556,
            "steps": [
                {
                    "command": [
                        "apply mkSep with (fun x => match x with NO _ _ => NO Share.bot bot_unreadable | YES _ _ _ _ => NO Share.bot bot_unreadable | PURE k pds => PURE k pds end).",
                        "VernacExtend",
                        "9b369e41c3383f8a3902580ab7eec5e4d6bdf879"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct t; constructor; try apply join_unit1; auto.",
                        "VernacExtend",
                        "627f5aaa13d90ad3025372f342a8350d36ee2908"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H; auto.",
                        "VernacExtend",
                        "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Perm_ghost",
            "line_nb": 599,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros until 1; revert z'; induction H; inversion 1; subst; auto.",
                        "VernacExtend",
                        "d26839b9f0b27c93c2d46c0427ea2e52f91d5c92"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "eapply join_eq; eauto.",
                        "VernacExtend",
                        "ccf59f1f695e4c180b0ea6a817cf2aad71c65ad6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction a; intros ???? J1 J2; apply ghost_join_inv in J1; subst.",
                        "VernacExtend",
                        "860dc17ac4deee4c87458ef71746eeae03407f9f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists e; split; auto; constructor.",
                        "VernacExtend",
                        "46879c0af8f3ad8d61fbf59090b59e74b60e0886"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct b; subst; [eexists; split; eauto; constructor|].",
                        "VernacExtend",
                        "4aeae7a3fc64282a7cfd9d1d9565e170f68bdc3c"
                    ]
                },
                {
                    "command": [
                        "destruct d; [contradiction|].",
                        "VernacExtend",
                        "83c56892b44297469acd7216ab80567d366a2c91"
                    ]
                },
                {
                    "command": [
                        "destruct J1 as [Jc1 J1].",
                        "VernacExtend",
                        "09498b45d2f0c9c85f69da257828dc87ba2c645a"
                    ]
                },
                {
                    "command": [
                        "apply ghost_join_inv in J2.",
                        "VernacExtend",
                        "c9f5a568af212525b526f3fec476bdd318112ac1"
                    ]
                },
                {
                    "command": [
                        "destruct c; subst; [eexists; split; eauto; constructor; auto|].",
                        "VernacExtend",
                        "a7215ea438caca2ebdca551ba1b44a6c7c2aeb94"
                    ]
                },
                {
                    "command": [
                        "destruct e; [contradiction|].",
                        "VernacExtend",
                        "29bb6899a08667cce45a25660cbb8e80a63a8e07"
                    ]
                },
                {
                    "command": [
                        "destruct J2 as [Jc2 J2].",
                        "VernacExtend",
                        "feec88a5138071371bcbd51c43c9219841408599"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc Jc1 Jc2) as (f & ? & ?).",
                        "VernacExtend",
                        "8890d9cd57388835604ab19d2e21b0cd3eed5624"
                    ]
                },
                {
                    "command": [
                        "destruct (IHa _ _ _ _ J1 J2) as (f' & ? & ?).",
                        "VernacExtend",
                        "1e9982b2dab1a3397bfb5fcd397c56fad99e0c41"
                    ]
                },
                {
                    "command": [
                        "exists (f :: f'); split; constructor; auto.",
                        "VernacExtend",
                        "8b8cb13ce80e24583cdf7fcbedcbc1343b55f587"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction 1; constructor; auto.",
                        "VernacExtend",
                        "ff51879142eef61207638aeecdcf6617e01ec60f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros until 1; revert b'; induction H; inversion 1; subst; auto.",
                        "VernacExtend",
                        "95a0dd93b315ac49ada2e7db9c1acad8d77e7dd3"
                    ]
                },
                {
                    "command": [
                        "f_equal; eauto.",
                        "VernacExtend",
                        "0aaae116840c77af05ab473518cd728dcb792af6"
                    ]
                },
                {
                    "command": [
                        "eapply join_positivity; eauto.",
                        "VernacExtend",
                        "b262d9d0323b0c99e4dff673bcb8aed87da0254b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sep_ghost",
            "line_nb": 627,
            "steps": [
                {
                    "command": [
                        "intros; exists (fun _ => nil); auto; constructor.",
                        "VernacExtend",
                        "0b12e90e31e0d1c8418f220dc65fcacefd9d10c1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "ghost_core",
            "line_nb": 630,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "preds_fmap_id",
            "line_nb": 635,
            "steps": [
                {
                    "command": [
                        "intros; apply extensionality; intro x; destruct x; simpl; auto.",
                        "VernacExtend",
                        "9b785288690d79e9bcc2bddae1926d811f76f898"
                    ]
                },
                {
                    "command": [
                        "unfold id at 3.",
                        "VernacExtend",
                        "dec9c924800ab74a810b74e3b669b36643ffc30a"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "extensionality i.",
                        "VernacExtend",
                        "8733cdd792af6107213a34f779c8c3d7eba32943"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_id; auto.",
                        "VernacExtend",
                        "571ee35389dd15522fb0012420f7bf84e8a88b76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "preds_fmap_comp",
            "line_nb": 642,
            "steps": [
                {
                    "command": [
                        "intros; apply extensionality; intro x; destruct x; simpl.",
                        "VernacExtend",
                        "0ada1e1ba2a169fdc88f1beb41669ce6b3cd1f65"
                    ]
                },
                {
                    "command": [
                        "unfold preds_fmap, compose at 1; simpl.",
                        "VernacExtend",
                        "fba396c07a901efc540bbadaa1e21c61813e6014"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "extensionality i.",
                        "VernacExtend",
                        "8733cdd792af6107213a34f779c8c3d7eba32943"
                    ]
                },
                {
                    "command": [
                        "rewrite <- fmap_comp; auto.",
                        "VernacExtend",
                        "649942f860e15a4eee3d429015acf6da7e0b0114"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resource_fmap_id",
            "line_nb": 651,
            "steps": [
                {
                    "command": [
                        "intros; apply extensionality; intro x.",
                        "VernacExtend",
                        "c267747c3156614bb8ad233ba2c8a3182fb848fe"
                    ]
                },
                {
                    "command": [
                        "unfold resource_fmap.",
                        "VernacExtend",
                        "9e3613be03b663ae3677a4b82fcc167d580790d3"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl; auto.",
                        "VernacExtend",
                        "6333e7c7dbfdf0572110d1909ab0948c7e960947"
                    ]
                },
                {
                    "command": [
                        "rewrite preds_fmap_id; auto.",
                        "VernacExtend",
                        "2eb5853afadb07f6200e4b8fd77c2688c07b76e8"
                    ]
                },
                {
                    "command": [
                        "rewrite preds_fmap_id; auto.",
                        "VernacExtend",
                        "2eb5853afadb07f6200e4b8fd77c2688c07b76e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ghost_fmap_id",
            "line_nb": 658,
            "steps": [
                {
                    "command": [
                        "extensionality x; induction x; auto; simpl.",
                        "VernacExtend",
                        "e0f75e6ee4ed63d63d65786e5951d9e6d2125b15"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx; destruct a as [[]|]; auto; simpl.",
                        "VernacExtend",
                        "d561bb3cfd421719bde7a5f0a0899a8c439f1e7d"
                    ]
                },
                {
                    "command": [
                        "rewrite preds_fmap_id; auto.",
                        "VernacExtend",
                        "2eb5853afadb07f6200e4b8fd77c2688c07b76e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resource_fmap_comp",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "intros f1 f2 g1 g2.",
                        "VernacExtend",
                        "247b67901873c6c5c286bdfd5aff57dde2328fcc"
                    ]
                },
                {
                    "command": [
                        "apply extensionality; intro x; destruct x; simpl; auto.",
                        "VernacExtend",
                        "ccc2f959bd68ca2f21a83944856a05a2888ef221"
                    ]
                },
                {
                    "command": [
                        "unfold compose at 1; simpl.",
                        "VernacExtend",
                        "6b389d9ea98590fca158efa5b247a9bb23c82e7a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- preds_fmap_comp; auto.",
                        "VernacExtend",
                        "c340ffb84c3f5d0737b3c428c2cccc8cda723a40"
                    ]
                },
                {
                    "command": [
                        "rewrite <- preds_fmap_comp; auto.",
                        "VernacExtend",
                        "c340ffb84c3f5d0737b3c428c2cccc8cda723a40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ghost_fmap_comp",
            "line_nb": 670,
            "steps": [
                {
                    "command": [
                        "intros; extensionality x; induction x; auto; simpl.",
                        "VernacExtend",
                        "f1c72967f6a9f858a6e54d8e8352340a21abb8ff"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHx; destruct a as [[]|]; auto; simpl.",
                        "VernacExtend",
                        "d328428cce8d071ccc3d17a3e24b6de0eee4843c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- preds_fmap_comp; auto.",
                        "VernacExtend",
                        "c340ffb84c3f5d0737b3c428c2cccc8cda723a40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmap_fmap_id",
            "line_nb": 676,
            "steps": [
                {
                    "command": [
                        "intros; apply extensionality; intro x.",
                        "VernacExtend",
                        "c267747c3156614bb8ad233ba2c8a3182fb848fe"
                    ]
                },
                {
                    "command": [
                        "unfold rmap_fmap; destruct x.",
                        "VernacExtend",
                        "433bd0b030f7706787a9e73dbdce1457bedd4df2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_fmap_id, ghost_fmap_id.",
                        "VernacExtend",
                        "78008a8d494921164a1110932dfdd00983e8bfc9"
                    ]
                },
                {
                    "command": [
                        "rewrite (id_unit2 _ (resource) r).",
                        "VernacExtend",
                        "55a7fe578586b705fd787c973fa347644654520c"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmap_fmap_comp",
            "line_nb": 684,
            "steps": [
                {
                    "command": [
                        "intros f1 f2 g1 g2.",
                        "VernacExtend",
                        "247b67901873c6c5c286bdfd5aff57dde2328fcc"
                    ]
                },
                {
                    "command": [
                        "unfold rmap_fmap.",
                        "VernacExtend",
                        "3062255324d7e3d7cda5101b6c921ccd0cdb352a"
                    ]
                },
                {
                    "command": [
                        "apply extensionality; intro x.",
                        "VernacExtend",
                        "8e3f8bfa399390ef89875eb881f5337b84b71c48"
                    ]
                },
                {
                    "command": [
                        "unfold compose at 1.",
                        "VernacExtend",
                        "e59d2eb696a6b0ea3993069ecb248df53fd22d1c"
                    ]
                },
                {
                    "command": [
                        "destruct x as (r,g).",
                        "VernacExtend",
                        "6a87a9f4be84eef349ce1a998054b1bef38a9c0f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- compose_assoc.",
                        "VernacExtend",
                        "2dfd2e1d67183fff30dd8ccf6e4747766f819dc0"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_fmap_comp; auto.",
                        "VernacExtend",
                        "c13a97df9a7061bbdcd23d794cdc9b0dd6cd49f2"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "pose proof ghost_fmap_comp as HG.",
                        "VernacExtend",
                        "7dcb3395c22d66ef06390e99bb732518cf328967"
                    ]
                },
                {
                    "command": [
                        "unfold compose in HG at 1; rewrite <- HG.",
                        "VernacExtend",
                        "87c50c866ea1cf7fa4a1935fba539fccd5bf7741"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "f_equal; proof_irr; auto.",
                        "VernacExtend",
                        "bc2d7edd54f4b8b62036f1a5c1a464955af3a66b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmap'2pre_rmap2rmap'",
            "line_nb": 701,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold rmap'2pre_rmap, pre_rmap2rmap'.",
                        "VernacExtend",
                        "a0669dbb804a3ed5bfabad94b66992672154078c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl; f_equal.",
                        "VernacExtend",
                        "0d2a15dc0d497770e9b88ab828a083f42fef5591"
                    ]
                },
                {
                    "command": [
                        "extensionality x; rewrite res2resource2res; auto.",
                        "VernacExtend",
                        "b59446cb0544afbbcc4e56aca6acd59dfad8d876"
                    ]
                },
                {
                    "command": [
                        "rewrite g2ghost2g; auto.",
                        "VernacExtend",
                        "e40a419e340b5f77128f20ab7f2775827835be09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pre_rmap2rmap'2pre_rmap",
            "line_nb": 709,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold rmap'2pre_rmap, pre_rmap2rmap'.",
                        "VernacExtend",
                        "a0669dbb804a3ed5bfabad94b66992672154078c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl; f_equal.",
                        "VernacExtend",
                        "0d2a15dc0d497770e9b88ab828a083f42fef5591"
                    ]
                },
                {
                    "command": [
                        "extensionality x; rewrite resource2res2resource; auto.",
                        "VernacExtend",
                        "51ff223946c626efaeaf4dee3ec1e4d2621010c0"
                    ]
                },
                {
                    "command": [
                        "rewrite ghost2g2ghost; auto.",
                        "VernacExtend",
                        "8da6feaba90703e44b2d9d84fd7f26f763680e0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_ext'",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "intros; apply pred_ext; intro; apply H; auto.",
                        "VernacExtend",
                        "a249e45ef2f372f11868aaa3713a706099c88b82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "squash_unsquash",
            "line_nb": 726,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold squash, unsquash; simpl.",
                        "VernacExtend",
                        "63db03e41a189a125d4738076b79467c805fe550"
                    ]
                },
                {
                    "command": [
                        "destruct (K.unsquash phi) eqn:?H; simpl; intros.",
                        "VernacExtend",
                        "523c98b674d99bacac609d01926b9ea2c0f0c5a8"
                    ]
                },
                {
                    "command": [
                        "rewrite rmap'2pre_rmap2rmap'.",
                        "VernacExtend",
                        "6e7d97da66a29a0385f026a778a639b2d30fe9c0"
                    ]
                },
                {
                    "command": [
                        "unfold K.KI.F in *.",
                        "VernacExtend",
                        "4a4bb0c32ef2efe821e4f635a3e62ab7900ca070"
                    ]
                },
                {
                    "command": [
                        "unfold f_pre_rmap in H.",
                        "VernacExtend",
                        "8048c251f2227ea64f32597d007a93190768543a"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- K.squash ?A = _ => replace A with (K.unsquash phi) end.",
                        "VernacExtend",
                        "fdbf4ed8f036aed0a3e709ddd9b375bc87dc0e80"
                    ]
                },
                {
                    "command": [
                        "rewrite K.squash_unsquash; auto.",
                        "VernacExtend",
                        "c2b57e407b5f9f8578c7820e1d2990f7821b7e8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "approx_K_approx",
            "line_nb": 745,
            "steps": [
                {
                    "command": [
                        "extensionality n p.",
                        "VernacExtend",
                        "0489c2add4961e432c2940227fb81abd85c3c8e0"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext'; intros w.",
                        "VernacExtend",
                        "907fef221e72ac25cb2e06ab27110838a70441bf"
                    ]
                },
                {
                    "command": [
                        "unfold approx, compose; simpl.",
                        "VernacExtend",
                        "6c9a0e19bb47f30ec0a16574aee6d93ec09857b0"
                    ]
                },
                {
                    "command": [
                        "rewrite K.approx_spec.",
                        "VernacExtend",
                        "d4cb9967847855f4cb78b7dd3efae1d2f699581f"
                    ]
                },
                {
                    "command": [
                        "unfold rmap_level, unsquash; simpl; repeat rewrite K.knot_level; repeat rewrite setset, setget; intuition.",
                        "VernacExtend",
                        "8f0a2ebfc17a7419c78ce86eb26104b51eb6df1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g2ghost_inv",
            "line_nb": 777,
            "steps": [
                {
                    "command": [
                        "induction g1; destruct g2; inversion 1; auto.",
                        "VernacExtend",
                        "ecf54e422f2e42110c916736ff001c89f25e4133"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "destruct a as [[]|], o as [[]|]; inv H1; auto.",
                        "VernacExtend",
                        "b3360f1718134a0d437e721b680462f45ab61cca"
                    ]
                },
                {
                    "command": [
                        "destruct _f, _f0; inv H4; auto.",
                        "VernacExtend",
                        "f32bf8dfd73322c51e35302ab7b7f2553ae4011f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_unsquash",
            "line_nb": 783,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold unsquash.",
                        "VernacExtend",
                        "bd36220d36e9a4ea98f2dad0759842af8689b480"
                    ]
                },
                {
                    "command": [
                        "rewrite KSa.join_unsquash.",
                        "VernacExtend",
                        "68ba9f1fd90f80ec48c6cbb8c332f0c3bd20a918"
                    ]
                },
                {
                    "command": [
                        "destruct (K.unsquash phi1) as [n f].",
                        "VernacExtend",
                        "fe6b20f127fb7b52db5d18c8b88cdb1f0e4e21c5"
                    ]
                },
                {
                    "command": [
                        "destruct (K.unsquash phi2) as [n0 f0].",
                        "VernacExtend",
                        "4ea0e0fa2b4d41abe0bb545a66adef06cc7d002d"
                    ]
                },
                {
                    "command": [
                        "destruct (K.unsquash phi3) as [n1 f1].",
                        "VernacExtend",
                        "610e75ed5d4b3b7190c0dc7613a8cab00653e233"
                    ]
                },
                {
                    "command": [
                        "simpl; intuition.",
                        "VernacExtend",
                        "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
                    ]
                },
                {
                    "command": [
                        "destruct H; simpl in *; split; simpl; auto.",
                        "VernacExtend",
                        "faa03d6c130487f2fa6a06d259fefa8b68f2f70d"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intro l; specialize ( H1 l).",
                        "VernacExtend",
                        "0f588f5acdb2d0054572a7ada177442f1093da22"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "unfold compose.",
                        "VernacExtend",
                        "d80e23bf133762584228beafbd8610d99d5d02d5"
                    ]
                },
                {
                    "command": [
                        "destruct f, f0, f1; simpl in *.",
                        "VernacExtend",
                        "5fd83e74b2d20ac9fc82075ff5b8973eadeb9f9f"
                    ]
                },
                {
                    "command": [
                        "inv H1; simpl.",
                        "VernacExtend",
                        "a37ac62bdffb47084b990fcebaa6ccf2259a5941"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "destruct p; simpl in *.",
                        "VernacExtend",
                        "21fa2abfdaae8a18ac0ac4debd1bca139800054d"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "destruct p; simpl in *.",
                        "VernacExtend",
                        "21fa2abfdaae8a18ac0ac4debd1bca139800054d"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "destruct f, f0, f1; simpl in *.",
                        "VernacExtend",
                        "5fd83e74b2d20ac9fc82075ff5b8973eadeb9f9f"
                    ]
                },
                {
                    "command": [
                        "clear - H2; induction H2; constructor; auto.",
                        "VernacExtend",
                        "f35087f27349a3e197687043788c14ced45c470f"
                    ]
                },
                {
                    "command": [
                        "inv H; constructor; auto.",
                        "VernacExtend",
                        "94c2a63227e9a0494888b6417590039e3b09dc19"
                    ]
                },
                {
                    "command": [
                        "destruct a0, a4, a5; inv H0; simpl in *.",
                        "VernacExtend",
                        "a87e23d7e6698761426714ae4ed27e7a5d3fda56"
                    ]
                },
                {
                    "command": [
                        "inv H; inv H1; constructor; constructor; auto.",
                        "VernacExtend",
                        "753087116b0f881093bee0b00c5672ded4a352cf"
                    ]
                },
                {
                    "command": [
                        "destruct H; simpl in *; split; simpl; auto.",
                        "VernacExtend",
                        "faa03d6c130487f2fa6a06d259fefa8b68f2f70d"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "hnf in H1.",
                        "VernacExtend",
                        "94324ef603315a47e5f4c48a0cd13f6c1b983007"
                    ]
                },
                {
                    "command": [
                        "simpl proj1_sig in H1.",
                        "VernacExtend",
                        "cd90f7ce5669a9345d92ecf0d410193a8e2fff70"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "intro l; specialize ( H1 l).",
                        "VernacExtend",
                        "0f588f5acdb2d0054572a7ada177442f1093da22"
                    ]
                },
                {
                    "command": [
                        "simpl proj1_sig.",
                        "VernacExtend",
                        "5f96d4f17b719de67e5d7478228e33dba85bb4de"
                    ]
                },
                {
                    "command": [
                        "clear - H1.",
                        "VernacExtend",
                        "a97560cbbe2cd31ef128e29a3cf251870622f56a"
                    ]
                },
                {
                    "command": [
                        "destruct f, f0, f1; simpl in *.",
                        "VernacExtend",
                        "5fd83e74b2d20ac9fc82075ff5b8973eadeb9f9f"
                    ]
                },
                {
                    "command": [
                        "forget (r l) as a; forget (r0 l) as b; forget (r1 l) as c.",
                        "VernacExtend",
                        "b024bae44332dd572abc2fa31131a078dbb449d0"
                    ]
                },
                {
                    "command": [
                        "clear - H1.",
                        "VernacExtend",
                        "a97560cbbe2cd31ef128e29a3cf251870622f56a"
                    ]
                },
                {
                    "command": [
                        "unfold res2resource in *.",
                        "VernacExtend",
                        "85a6806d3c967b428a59a0bdeb2232a63edf07fa"
                    ]
                },
                {
                    "command": [
                        "unfold res_fmap in *.",
                        "VernacExtend",
                        "35e1ea8b0e9b69da498970db7ca7f93865e257b9"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | ra sha ka pa| ka pa]; try destruct pa as [? ?p]; destruct b as [rb | rb shb kb pb|kb pb]; try destruct pb as [? ?p]; destruct c as [rc | rc shc kc pc|kc pc]; try destruct pc as [? ?p]; inv H1.",
                        "VernacExtend",
                        "b747af320283797b63dc0165078494b5e3f1e8dc"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply inj_pair2 in H8.",
                        "VernacExtend",
                        "d3a4a7ffaa66fa0d828516ebbaa1321c89ca00c5"
                    ]
                },
                {
                    "command": [
                        "subst p0.",
                        "VernacExtend",
                        "4a16d7df818bac42428ea13da5daf5a2e1f24f77"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply inj_pair2 in H8.",
                        "VernacExtend",
                        "d3a4a7ffaa66fa0d828516ebbaa1321c89ca00c5"
                    ]
                },
                {
                    "command": [
                        "subst p0.",
                        "VernacExtend",
                        "4a16d7df818bac42428ea13da5daf5a2e1f24f77"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply inj_pair2 in H11.",
                        "VernacExtend",
                        "ef9d1e30e7134c3fb301e86bbfc9118e9bfb6abf"
                    ]
                },
                {
                    "command": [
                        "subst p1.",
                        "VernacExtend",
                        "41eb98e4b537de0d7938c2dc5b0a1083af5e7fb3"
                    ]
                },
                {
                    "command": [
                        "apply inj_pair2 in H7; subst p0.",
                        "VernacExtend",
                        "6f52b1af8e4bf28ad20b5f0f420ab2e07c221ab7"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst ; apply inj_pair2 in H8.",
                        "VernacExtend",
                        "f72e85a80c54a39185286642c641895ec0334b06"
                    ]
                },
                {
                    "command": [
                        "subst p1.",
                        "VernacExtend",
                        "41eb98e4b537de0d7938c2dc5b0a1083af5e7fb3"
                    ]
                },
                {
                    "command": [
                        "apply inj_pair2 in H5.",
                        "VernacExtend",
                        "a36eb059cffb18e9e53694f823ed51d9ed3fb011"
                    ]
                },
                {
                    "command": [
                        "subst p0.",
                        "VernacExtend",
                        "4a16d7df818bac42428ea13da5daf5a2e1f24f77"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct f, f0, f1; simpl in *.",
                        "VernacExtend",
                        "5fd83e74b2d20ac9fc82075ff5b8973eadeb9f9f"
                    ]
                },
                {
                    "command": [
                        "clear - H2.",
                        "VernacExtend",
                        "df3dc56b8cb8ec54f9503844cf7d5b731417589e"
                    ]
                },
                {
                    "command": [
                        "remember (g2ghost g) as a; remember (g2ghost g0) as b; remember (g2ghost g1) as c.",
                        "VernacExtend",
                        "748b5ace40ddafa5b6a6948e8d0baa4ed98faf9c"
                    ]
                },
                {
                    "command": [
                        "revert dependent g1; revert dependent g0; revert dependent g; induction H2; intros; subst.",
                        "VernacExtend",
                        "b2ffdec57e3675e532a8d0fad3b1ef322a4a570f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply g2ghost_inv in Heqc; subst; destruct g; [constructor | discriminate].",
                        "VernacExtend",
                        "52379b69a8c1496ad78bd5de4598b2cacc136a85"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply g2ghost_inv in Heqc; subst; destruct g0; [constructor | discriminate].",
                        "VernacExtend",
                        "5950ffa7bce8ba2e9bb108591f3519e0cd4e731e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct g, g0, g1; inv Heqa; inv Heqb; inv Heqc.",
                        "VernacExtend",
                        "a487817e6fdbdcb06e1f4b836d9ed6f7fdc0b91c"
                    ]
                },
                {
                    "command": [
                        "constructor; [|apply IHghost_join; auto].",
                        "VernacExtend",
                        "cc9fe22c66977b09106adb5806e327de3e76490d"
                    ]
                },
                {
                    "command": [
                        "destruct o as [[]|], o0 as [[]|], o1 as [[]|]; inv H; try constructor.",
                        "VernacExtend",
                        "bed93483764e63c58c4c9e854f9a9e1504d91844"
                    ]
                },
                {
                    "command": [
                        "--",
                        "VernacBullet",
                        "ba168e40f4056f7e624b4823d483fd7320648256"
                    ]
                },
                {
                    "command": [
                        "destruct _f, _f0, _f1; inv H4; simpl in *.",
                        "VernacExtend",
                        "899818f13a6c23f8c49de53f345cf7015bac62a5"
                    ]
                },
                {
                    "command": [
                        "inv H; inv H0.",
                        "VernacExtend",
                        "a68a921d6be7f316f7f04b942586a57884cf2fe6"
                    ]
                },
                {
                    "command": [
                        "inv H; inv H3.",
                        "VernacExtend",
                        "465c7e5d4d5fee41239fa7a3614e9720666f1ea6"
                    ]
                },
                {
                    "command": [
                        "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst); constructor; constructor; auto.",
                        "VernacExtend",
                        "8b15b5e4c05335c67b28b456e24444ff5304e10f"
                    ]
                },
                {
                    "command": [
                        "--",
                        "VernacBullet",
                        "ba168e40f4056f7e624b4823d483fd7320648256"
                    ]
                },
                {
                    "command": [
                        "destruct _f, _f0; inv H4.",
                        "VernacExtend",
                        "30632a233e66b2c1c752785ed8368a2fb6d7bae6"
                    ]
                },
                {
                    "command": [
                        "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst); constructor; auto.",
                        "VernacExtend",
                        "b6c85386dfbe65071bca7888c34b8a5c0422b45a"
                    ]
                },
                {
                    "command": [
                        "--",
                        "VernacBullet",
                        "ba168e40f4056f7e624b4823d483fd7320648256"
                    ]
                },
                {
                    "command": [
                        "destruct _f, _f0; inv H4.",
                        "VernacExtend",
                        "30632a233e66b2c1c752785ed8368a2fb6d7bae6"
                    ]
                },
                {
                    "command": [
                        "repeat (match goal with H : existT _ _ _ = existT _ _ _ |- _ => apply inj_pair2 in H end; subst); constructor; auto.",
                        "VernacExtend",
                        "b6c85386dfbe65071bca7888c34b8a5c0422b45a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ghost_of_core",
            "line_nb": 877,
            "steps": [
                {
                    "command": [
                        "intro; rewrite KSa.core_unsquash.",
                        "VernacExtend",
                        "33da983da07d60453bc6bc4db525b746882aa75c"
                    ]
                },
                {
                    "command": [
                        "unfold ghost_of, KSa.K.unsquash, KSa.K.squash, unsquash, squash.",
                        "VernacExtend",
                        "f6ca05f285d69ac7ef79003298cb7e6f6e07f223"
                    ]
                },
                {
                    "command": [
                        "destruct (K.unsquash phi); simpl.",
                        "VernacExtend",
                        "9fa9515e278cfa3ad52bb2c55b4981f9395dd98a"
                    ]
                },
                {
                    "command": [
                        "rewrite K.unsquash_squash; simpl.",
                        "VernacExtend",
                        "763813124e131da5a556eecdcb0244441e6f55cb"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite (pre_rmap_core _ _f).",
                        "VernacExtend",
                        "24da06497b8f144c005fa15d2dbe930d8f6a313b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmap_age1_knot_age1",
            "line_nb": 887,
            "steps": [
                {
                    "command": [
                        "extensionality x.",
                        "VernacExtend",
                        "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
                    ]
                },
                {
                    "command": [
                        "unfold rmap_age1.",
                        "VernacExtend",
                        "2535065c6f070d7a1dd189f9f60c0169679e5d66"
                    ]
                },
                {
                    "command": [
                        "rewrite K.knot_age1.",
                        "VernacExtend",
                        "0251e699901146cdf589c07631c74f54689fd39a"
                    ]
                },
                {
                    "command": [
                        "unfold unsquash, squash.",
                        "VernacExtend",
                        "df6bce749d1bc7d24398b0cedb7cb80913b04803"
                    ]
                },
                {
                    "command": [
                        "case (K.unsquash x); simpl; intros.",
                        "VernacExtend",
                        "7f35c4ac0fd964258f5640438dd4c497a274052d"
                    ]
                },
                {
                    "command": [
                        "destruct n; auto.",
                        "VernacExtend",
                        "ac1a46c3d4b557b3710fa36973beb6e353d40fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite rmap'2pre_rmap2rmap'.",
                        "VernacExtend",
                        "6e7d97da66a29a0385f026a778a639b2d30fe9c0"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmap_age1_eq",
            "line_nb": 897,
            "steps": [
                {
                    "command": [
                        "unfold age1.",
                        "VernacExtend",
                        "b5fda3e7114822a69ee877f5a5f492411226d86f"
                    ]
                },
                {
                    "command": [
                        "unfold ag_rmap; simpl; auto.",
                        "VernacExtend",
                        "d64f4821980df6eb17b209ed6572eaf0adb86ee0"
                    ]
                },
                {
                    "command": [
                        "rewrite rmap_age1_knot_age1; reflexivity.",
                        "VernacExtend",
                        "4c4fe9f1ebd66cae4fcd2120bc8fa233f96830b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmap_level_eq",
            "line_nb": 902,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality x.",
                        "VernacExtend",
                        "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
                    ]
                },
                {
                    "command": [
                        "unfold level.",
                        "VernacExtend",
                        "ed1f81103d537d3c76a87ea0e8a377f0ee72b0a7"
                    ]
                },
                {
                    "command": [
                        "unfold ag_rmap.",
                        "VernacExtend",
                        "6adae0c4546179de36c091a399fa285732ae6659"
                    ]
                },
                {
                    "command": [
                        "unfold KSa.K.ageable_knot.",
                        "VernacExtend",
                        "dee6689a0c78d972687fd67d7f342fc74e875832"
                    ]
                },
                {
                    "command": [
                        "unfold unsquash.",
                        "VernacExtend",
                        "bd36220d36e9a4ea98f2dad0759842af8689b480"
                    ]
                },
                {
                    "command": [
                        "rewrite K.knot_level.",
                        "VernacExtend",
                        "1085bc7597b447ab37c84d97771587f010faa6ed"
                    ]
                },
                {
                    "command": [
                        "destruct (K.unsquash x); simpl.",
                        "VernacExtend",
                        "3f8f98512f2855551254f838a9a980669bd0b58d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}