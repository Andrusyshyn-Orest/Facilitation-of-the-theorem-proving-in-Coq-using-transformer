{
    "filename": "concurrency/semax_conc.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.msl_standard.",
            "VernacRequire",
            "bbb3b33b9509ab47eb7418bd6127eafa914382b1"
        ],
        [
            "Require Import VST.msl.seplog.",
            "VernacRequire",
            "5f33e89d89b1bb43b458a44d93ed8ebfa4dbe320"
        ],
        [
            "Require Import VST.veric.Clight_base.",
            "VernacRequire",
            "03391ebcbe352738cbe4d19626ab439bfac7c2e7"
        ],
        [
            "Require Import VST.veric.compcert_rmaps.",
            "VernacRequire",
            "c684a380737921a2e41654d70bb2fe8e448426cf"
        ],
        [
            "Require Import VST.veric.juicy_mem.",
            "VernacRequire",
            "f1eecf3ecf80d465588513629a8e6b5706759bd8"
        ],
        [
            "Require Import VST.veric.juicy_mem_lemmas.",
            "VernacRequire",
            "c432441f3fd84d350a81bbf00da1689db02063ce"
        ],
        [
            "Require Import VST.veric.juicy_mem_ops.",
            "VernacRequire",
            "ea0aa87abe2cdf70fca07aee44276c9f8795eb8e"
        ],
        [
            "Require Import VST.veric.juicy_extspec.",
            "VernacRequire",
            "aa1a3d20d1c24cf96c29cb4ebe5c176da44989a3"
        ],
        [
            "Require Import VST.veric.tycontext.",
            "VernacRequire",
            "f8951535af03e9380f7d0a99afae06d1059d4422"
        ],
        [
            "Require Import VST.veric.expr2.",
            "VernacRequire",
            "bf07dfc9a4517a977ef232bb1ba25ac9aaf5c2d9"
        ],
        [
            "Require Import VST.veric.semax.",
            "VernacRequire",
            "245fa1c61f6a18836ca30db7617401fbff9c2a37"
        ],
        [
            "Require Import VST.veric.semax_call.",
            "VernacRequire",
            "9d650865d9419ff89f4b8d7fce69eb6fa6428557"
        ],
        [
            "Require Import VST.veric.semax_ext.",
            "VernacRequire",
            "f3d68c51317fcc74f7729b64ba14fad15d3ae265"
        ],
        [
            "Require Import VST.veric.juicy_safety.",
            "VernacRequire",
            "0cc657ca5e84e3a20e4e408ba92c2b105e94e9ba"
        ],
        [
            "Require Import VST.veric.Clight_new.",
            "VernacRequire",
            "2ae3f5ae880c1748dab70e2b63c40995b60bc670"
        ],
        [
            "Require Import VST.veric.res_predicates.",
            "VernacRequire",
            "768b4200cf583d1957d2bf97075bbe3044eb3f8d"
        ],
        [
            "Require Import VST.veric.SeparationLogic.",
            "VernacRequire",
            "b9f4108caaa3f1d0a48cb9109355c3244b7115b6"
        ],
        [
            "Require Import VST.sepcomp.semantics.",
            "VernacRequire",
            "a2be15457f8bb984f06f0e1c749919cf8e319def"
        ],
        [
            "Require Import VST.sepcomp.extspec.",
            "VernacRequire",
            "24d2770c0d56f347a534d202b9e8a12e01b32823"
        ],
        [
            "Require Import VST.floyd.reptype_lemmas.",
            "VernacRequire",
            "67895477ec539ad1bf901b33e9b181c1c2cf58be"
        ],
        [
            "Require Import VST.floyd.field_at.",
            "VernacRequire",
            "c7cf6c35d27d83ac7be63633e374fa639476b7cc"
        ],
        [
            "Require Import VST.floyd.nested_field_lemmas.",
            "VernacRequire",
            "2ae988fac26931aaa409a9389758d750e8ca6601"
        ],
        [
            "Require Import VST.floyd.client_lemmas.",
            "VernacRequire",
            "449c8140a2f7afa12f07d13833b2a4f672db98f1"
        ],
        [
            "Require Import VST.floyd.jmeq_lemmas.",
            "VernacRequire",
            "a6fb0c3a29692102d721ac4dd667babf679323f6"
        ],
        [
            "Require Import VST.concurrency.lksize.",
            "VernacRequire",
            "6af54eb7cacf9f2dacacfb48a1ed56258143bffd"
        ],
        [
            "Require Import VST.concurrency.semax_conc_pred.",
            "VernacRequire",
            "3df305dd2cd57f3274963aa0200cf9380434f6ad"
        ],
        [
            "Import String.",
            "VernacImport",
            "ab06a84ba92a619ceea6d71b5e5638414d80c1ee"
        ],
        [
            "Set Bullet Behavior \"Strict Subproofs\".",
            "VernacSetOption",
            "2f48a6a957bc407939a01b772051438c4013f99b"
        ],
        [
            "Definition _f := 1%positive.",
            "VernacDefinition",
            "a2ade4b5c4ea92777f53a523fe12dfbc8ad0874a"
        ],
        [
            "Definition _args := 2%positive.",
            "VernacDefinition",
            "3c131ea542ff7269f5a6ff351c87931c6a68e2e2"
        ],
        [
            "Definition _lock := 1%positive.",
            "VernacDefinition",
            "ccb23061d4f2631ccd307bfea93cd9b323f46c04"
        ],
        [
            "Definition _cond := 2%positive.",
            "VernacDefinition",
            "cc05c1a03a915f5736114a2e554b6dda835ff300"
        ],
        [
            "Definition voidstar_funtype := Tfunction (Tcons (tptr tvoid) Tnil) (tptr tvoid) cc_default.",
            "VernacDefinition",
            "511fee27a8c9f72286a792db3c3c884ec617687d"
        ],
        [
            "Definition tlock := (Tarray (Tpointer Tvoid noattr) 2 noattr).",
            "VernacDefinition",
            "b330c5228bc1ae8eac71da26345a5c14c165c925"
        ],
        [
            "Goal forall (cenv: composite_env), @sizeof cenv tlock = LKSIZE.",
            "VernacDefinition",
            "3505dc37b9b063ef27fd078ab2dbac11cca5974a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition selflock_fun Q sh p : (unit -> mpred) -> (unit -> mpred) := fun R _ => (Q * |>lock_inv sh p (R tt))%logic.",
            "VernacDefinition",
            "0f80267f16416637b6ce5e3146e5f3009e2d2ff6"
        ],
        [
            "Definition selflock' Q sh p : unit -> mpred := HORec (selflock_fun Q sh p).",
            "VernacDefinition",
            "d4bd958533082d21458257bc0bbbb7d75b0595cb"
        ],
        [
            "Definition selflock Q sh p : mpred := selflock' Q sh p tt.",
            "VernacDefinition",
            "f93b2901b0d83d92fa4a89b078c7149ae38f3133"
        ],
        [
            "Lemma nonexpansive_entail (F: pred rmap -> pred rmap) : nonexpansive F -> forall P Q, (P <=> Q |-- F P <=> F Q)%logic.",
            "VernacStartTheoremProof",
            "ec27b225f22d24f3367a378a0d0989cb8b9b5edc"
        ],
        [
            "intros N P Q.",
            "VernacExtend",
            "a11b0e7488bce5c9d170fb6a93ae109396ed34a8"
        ],
        [
            "specialize (N P Q).",
            "VernacExtend",
            "5dd7a45aecd16421370a57cdbffae17a1e2c6019"
        ],
        [
            "eapply derives_trans; [ eapply derives_trans | ]; [ | apply N | ]; apply derives_refl.",
            "VernacExtend",
            "0443f5cb02252a96828332ab7d8b5b576eb8c452"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma HOnonexpansive_nonexpansive: forall F: mpred -> mpred, nonexpansive F <-> HOnonexpansive (fun P (_ : unit) => F (P tt)).",
            "VernacStartTheoremProof",
            "d09ffc30eda1afc42b754caf772cbb5fac289e95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros; hnf in H |- *.",
            "VernacExtend",
            "bb5dabfded6dc83ae28bed01eeb035a124f80a16"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros P Q.",
            "VernacExtend",
            "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
        ],
        [
            "specialize (H (P tt) (Q tt)).",
            "VernacExtend",
            "0b24f269120b542f9a2a685d6fd3ea4e3867e521"
        ],
        [
            "rewrite !allp_unit.",
            "VernacExtend",
            "3253aefc067c7032bc1240d4d9126caebc279d2d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros P Q.",
            "VernacExtend",
            "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
        ],
        [
            "specialize (H (fun x => P) (fun x => Q)).",
            "VernacExtend",
            "84a4119ead6141b55e4b7ddbafbf954a27dab0ba"
        ],
        [
            "rewrite !allp_unit in H.",
            "VernacExtend",
            "86b61f323a8762da9d5909b4a360da20ff496955"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma selflock'_eq Q sh p : selflock' Q sh p = selflock_fun Q sh p (selflock' Q sh p).",
            "VernacStartTheoremProof",
            "d13458a6478cc807141049a615c045bb93bf1c30"
        ],
        [
            "apply HORec_fold_unfold, prove_HOcontractive.",
            "VernacExtend",
            "21b29bad9669c782c4436bb36c667ac35fa760d0"
        ],
        [
            "intros P1 P2 u.",
            "VernacExtend",
            "5df30a872deaca100b97753245a24d9e08b2aff8"
        ],
        [
            "apply subp_sepcon; [ apply subp_refl | ].",
            "VernacExtend",
            "e41144463b3ef14f888abc5a49145ca26a62425d"
        ],
        [
            "rewrite <- subp_later.",
            "VernacExtend",
            "0c36962fce0bb2b2826bfce8c6656dc01bcdbd10"
        ],
        [
            "repeat intro.",
            "VernacExtend",
            "b1b5d9b3004bf4634299c208df98406e88278608"
        ],
        [
            "match goal with |- app_pred (?P >=> ?Q)%logic ?a => change (subtypes.fash (P --> Q) a) end.",
            "VernacExtend",
            "8bf6754382cd42a5bc96bc0b4b1a1c60d6a8cece"
        ],
        [
            "unfold lock_inv; repeat intro.",
            "VernacExtend",
            "97e0b7da4f32a6933c4992f5b0916f3d73512d26"
        ],
        [
            "destruct H3 as (b & ofs & ? & Hl & ?); exists b, ofs; split; auto; split; auto.",
            "VernacExtend",
            "b8934bb94354aeacf93190baa0d06c9f50e3bc48"
        ],
        [
            "intro l; specialize (Hl l); simpl in *.",
            "VernacExtend",
            "a66e2bdcda34280e95473a691539c2882db6aa53"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "destruct Hl as [rsh Hl]; exists rsh; rewrite Hl; repeat f_equal.",
            "VernacExtend",
            "c82da6a23980b3416ba421e870f9df5a5492d889"
        ],
        [
            "extensionality.",
            "VernacExtend",
            "5f659a610dbf05b4e2ac5dec31944a29d867effa"
        ],
        [
            "specialize (H tt); rewrite <- eqp_later in H.",
            "VernacExtend",
            "ca6778e7d92af3d7a9f50e9287246e8e2674ea25"
        ],
        [
            "specialize (H _ H0).",
            "VernacExtend",
            "58d9b9a73505872ca70c4d928bcfa1d1cc75c69b"
        ],
        [
            "apply necR_level in H2.",
            "VernacExtend",
            "4e3b316ccb137eceb21e63bf4085bc5b261dddd3"
        ],
        [
            "apply predicates_hered.pred_ext; intros ? []; split; auto.",
            "VernacExtend",
            "c1e50d91ff0459acdb4af87fcc1065178677e8e1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (H a0) as [X _]; [omega|].",
            "VernacExtend",
            "df51d6e6d1ea669089a9fbd253734b6c291a57b4"
        ],
        [
            "specialize (X _ (necR_refl _)); auto.",
            "VernacExtend",
            "d671442fd0e4591038f5f1a97d7df567b7edd2af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (H a0) as [_ X]; [omega|].",
            "VernacExtend",
            "3fc469fcfbfb3a475e173dbc51e854d832c6d1c1"
        ],
        [
            "specialize (X _ (necR_refl _)); auto.",
            "VernacExtend",
            "d671442fd0e4591038f5f1a97d7df567b7edd2af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma selflock_eq Q sh p : selflock Q sh p = (Q * |>lock_inv sh p (selflock Q sh p))%logic.",
            "VernacStartTheoremProof",
            "aeca2423fb15ec1d28ea5c7fd78658341a702fdc"
        ],
        [
            "unfold selflock at 1.",
            "VernacExtend",
            "9196aef7a1a1b1d20a4e86fef87736b586d67e14"
        ],
        [
            "rewrite selflock'_eq.",
            "VernacExtend",
            "e7348b998c00d69107e0b5c3c4d15f72ac1513ce"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition res_invariants_fun Q sh1 p1 sh2 p2 : (bool -> mpred) -> (bool -> mpred) := fun R b => if b then (Q * lock_inv sh2 p2 (|> R false))%logic else (Q * lock_inv sh1 p1 (|> R true) * lock_inv sh2 p2 (|> R false))%logic.",
            "VernacDefinition",
            "98f9b635920577139662e0fe0d24068d0eab2b72"
        ],
        [
            "Definition res_invariants Q sh1 p1 sh2 p2 : bool -> mpred := HORec (res_invariants_fun Q sh1 p1 sh2 p2).",
            "VernacDefinition",
            "b527362f90c1f0dffb85c62b242f633de4fc36a2"
        ],
        [
            "Definition res_invariant Q sh1 p1 sh2 p2 : mpred := res_invariants Q sh1 p1 sh2 p2 true.",
            "VernacDefinition",
            "548550cfc0c18a6cc1937df583ad8cd826fe54d2"
        ],
        [
            "Definition join_res_invariant Q sh1 p1 sh2 p2 : mpred := res_invariants Q sh1 p1 sh2 p2 false.",
            "VernacDefinition",
            "d6dfeec619d1f58c16998ca552e5a44866f02598"
        ],
        [
            "Lemma res_invariants_eq Q sh1 p1 sh2 p2 : res_invariants Q sh1 p1 sh2 p2 = res_invariants_fun Q sh1 p1 sh2 p2 (res_invariants Q sh1 p1 sh2 p2).",
            "VernacStartTheoremProof",
            "a3245cbd8a69f05268157cb7f8b9cf89265b1750"
        ],
        [
            "apply HORec_fold_unfold, prove_HOcontractive.",
            "VernacExtend",
            "21b29bad9669c782c4436bb36c667ac35fa760d0"
        ],
        [
            "intros P1 P2 b.",
            "VernacExtend",
            "edb86cdacdd495a07bc0a69bb97e613c6414b403"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "apply subp_sepcon; try apply subp_refl.",
            "VernacExtend",
            "523a1653a60c31544bd595501176bd392f10528d"
        ],
        [
            "apply allp_left with false.",
            "VernacExtend",
            "145a6474b51ac5abae4e500cd47f81c6f3650d0a"
        ],
        [
            "eapply derives_trans.",
            "VernacExtend",
            "74bf196b92978065d64297654462f01dbd4ed9a4"
        ],
        [
            "apply nonexpansive_entail, nonexpansive_lock_inv.",
            "VernacExtend",
            "dafc2d8c470ad6ddb9b9ce4a60cb442398b33f48"
        ],
        [
            "apply fash_derives, andp_left1, derives_refl.",
            "VernacExtend",
            "6354c00a9149ea594291d05c96458ab9dcd30398"
        ],
        [
            "repeat apply subp_sepcon; try apply subp_refl.",
            "VernacExtend",
            "351734e6a27973d9782cfb308ab91ab9ec452250"
        ],
        [
            "apply allp_left with true.",
            "VernacExtend",
            "a6ecf6213083f208d2b985ce1f4a01714f82ac19"
        ],
        [
            "eapply derives_trans.",
            "VernacExtend",
            "74bf196b92978065d64297654462f01dbd4ed9a4"
        ],
        [
            "apply nonexpansive_entail, nonexpansive_lock_inv.",
            "VernacExtend",
            "dafc2d8c470ad6ddb9b9ce4a60cb442398b33f48"
        ],
        [
            "apply fash_derives, andp_left1, derives_refl.",
            "VernacExtend",
            "6354c00a9149ea594291d05c96458ab9dcd30398"
        ],
        [
            "apply allp_left with false.",
            "VernacExtend",
            "145a6474b51ac5abae4e500cd47f81c6f3650d0a"
        ],
        [
            "eapply derives_trans.",
            "VernacExtend",
            "74bf196b92978065d64297654462f01dbd4ed9a4"
        ],
        [
            "apply nonexpansive_entail, nonexpansive_lock_inv.",
            "VernacExtend",
            "dafc2d8c470ad6ddb9b9ce4a60cb442398b33f48"
        ],
        [
            "apply fash_derives, andp_left1, derives_refl.",
            "VernacExtend",
            "6354c00a9149ea594291d05c96458ab9dcd30398"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma res_invariant_eq Q sh1 p1 sh2 p2 : res_invariant Q sh1 p1 sh2 p2 = (Q * lock_inv sh2 p2 (|> join_res_invariant Q sh1 p1 sh2 p2))%logic.",
            "VernacStartTheoremProof",
            "81d7136daf879c70b3f6f8b66f12d5be12f1d265"
        ],
        [
            "unfold res_invariant at 1.",
            "VernacExtend",
            "5f44ef581c1037d62536f2af050b309084d6b6a6"
        ],
        [
            "rewrite res_invariants_eq.",
            "VernacExtend",
            "e394f917e72a6ed6c1e39418b63c6686bae5d398"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_res_invariant_eq Q sh1 p1 sh2 p2 : join_res_invariant Q sh1 p1 sh2 p2 = (Q * lock_inv sh1 p1 (|> res_invariant Q sh1 p1 sh2 p2) * lock_inv sh2 p2 (|> join_res_invariant Q sh1 p1 sh2 p2))%logic.",
            "VernacStartTheoremProof",
            "fe369a374282c080e1af57821dd47be84005229d"
        ],
        [
            "unfold join_res_invariant at 1.",
            "VernacExtend",
            "a926f6466ef23407e36d3b9b78a892241dc6ef6e"
        ],
        [
            "rewrite res_invariants_eq.",
            "VernacExtend",
            "e394f917e72a6ed6c1e39418b63c6686bae5d398"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition tcond := tint.",
            "VernacDefinition",
            "fe5d1f1857e5c3a881c3364cc497be974a4baea7"
        ],
        [
            "Definition cond_var {cs} sh v := @data_at_ cs sh tcond v.",
            "VernacDefinition",
            "22c8d1e30ec4ec25bc5711327bf301824f6dec04"
        ],
        [
            "Lemma approx_eq_i': forall (P Q : pred rmap) n, (|> (P <=> Q))%pred n -> approx n P = approx n Q.",
            "VernacStartTheoremProof",
            "b3adb5d3342fb7d98079541a8122f7d197861de3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext'; extensionality m'.",
            "VernacExtend",
            "a227c6e030afed9c48be926e8d20409c8761e045"
        ],
        [
            "unfold approx.",
            "VernacExtend",
            "c4f424a5cdb2071597e76c464ce089e6edc0e904"
        ],
        [
            "apply and_ext'; auto; intros.",
            "VernacExtend",
            "9681a2dd0688963ac3adf335cc555b7b0a73fc37"
        ],
        [
            "specialize (H (level m')); spec H; [simpl; apply later_nat; auto |].",
            "VernacExtend",
            "ad815dd7a8186bdcd9f1725b63ad267c525fb42a"
        ],
        [
            "specialize (H m').",
            "VernacExtend",
            "f0594ae55bce886e5c8c350b55763ab2aed8c245"
        ],
        [
            "spec H; [omega |].",
            "VernacExtend",
            "3b6530c84a66e5ef96b1a7c49acc4f5300648d9e"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "specialize (H m').",
            "VernacExtend",
            "f0594ae55bce886e5c8c350b55763ab2aed8c245"
        ],
        [
            "specialize (H1 m').",
            "VernacExtend",
            "1bba542f58f422c5314945cbaa0760916eca66ab"
        ],
        [
            "apply prop_ext; split; auto.",
            "VernacExtend",
            "d189794591747137884a583f0ab35e2867119868"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fash_equiv_approx: forall n (R: pred rmap), (|> (R <=> approx n R))%pred n.",
            "VernacStartTheoremProof",
            "2921cc2ee36a13e640bf78e05d865053c2c4acf5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intros m ? x ?; split; intros y ? ?.",
            "VernacExtend",
            "73d4ee49a6ddf74aaca417fd137c38b349880bc9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply approx_lt; auto.",
            "VernacExtend",
            "c9f9f36ed94c5c02e2f944b8612f9ea3aea955fa"
        ],
        [
            "apply necR_level in H1.",
            "VernacExtend",
            "50b20c78f2dced8c177bc4662f898872a4698c97"
        ],
        [
            "apply later_nat in H; omega.",
            "VernacExtend",
            "3e7ca42ae69c35840a326355720dd9d543613233"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply approx_p; eauto.",
            "VernacExtend",
            "e3d16bc3241b92f8102110fd9eae59b4068d066e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonexpansive_super_non_expansive: forall (F: mpred -> mpred), nonexpansive F -> forall R n, approx n (F R) = approx n (F (approx n R)).",
            "VernacStartTheoremProof",
            "f3c8edfb30c76d51713eda4d61b3dc6b5d98eaa5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply approx_eq_i'.",
            "VernacExtend",
            "9e70d849614945f113da241f01df3d3737386f10"
        ],
        [
            "intros m ?.",
            "VernacExtend",
            "85b221177f21991743fbf77c6d3c83a38cf3fe96"
        ],
        [
            "pose proof nonexpansive_entail _ H R (approx n R) m.",
            "VernacExtend",
            "f8076b693f7d45e0d7d40f01f3519f4d782c5e24"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "clear - H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "apply (fash_equiv_approx n R m); auto.",
            "VernacExtend",
            "1e1be597de584558918b7a3d7796439526ade963"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonexpansive2_super_non_expansive: forall (F: mpred -> mpred -> mpred), (forall P, nonexpansive (fun Q => F P Q)) -> (forall Q, nonexpansive (fun P => F P Q)) -> forall P Q n, approx n (F P Q) = approx n (F (approx n P) (approx n Q)).",
            "VernacStartTheoremProof",
            "614287cc5868c312f1463adfaac0931638c62b41"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply approx_eq_i'.",
            "VernacExtend",
            "9e70d849614945f113da241f01df3d3737386f10"
        ],
        [
            "intros m ?.",
            "VernacExtend",
            "85b221177f21991743fbf77c6d3c83a38cf3fe96"
        ],
        [
            "pose proof nonexpansive_entail _ (H P) Q (approx n Q) m; cbv beta in H2.",
            "VernacExtend",
            "62afc8b0240f5a8845a4bae9a34ab2eda64ab75a"
        ],
        [
            "spec H2; [apply (fash_equiv_approx n Q m); auto |].",
            "VernacExtend",
            "c1fd3be466ac49c003843170ad8a9fea44acc06e"
        ],
        [
            "pose proof nonexpansive_entail _ (H0 (approx n Q)) P (approx n P) m; cbv beta in H3.",
            "VernacExtend",
            "08a8cee3ddd6ba9fc5d5348eda5d4f368de3c447"
        ],
        [
            "spec H3; [apply (fash_equiv_approx n P m); auto |].",
            "VernacExtend",
            "8728f12fe9c8ac5ef7d6400f6b26e2c56ac7d112"
        ],
        [
            "remember (F P Q) as X1.",
            "VernacExtend",
            "27a0eb5df4befc16341e0524a276b0148e4be2d1"
        ],
        [
            "remember (F P (approx n Q)) as X2.",
            "VernacExtend",
            "8853034b1021105170e49a813e1e3748d76fa110"
        ],
        [
            "remember (F (approx n P) (approx n Q)) as X3.",
            "VernacExtend",
            "e2124b6dc8ccbe68613efd38e3ee10088ee23813"
        ],
        [
            "clear - H2 H3.",
            "VernacExtend",
            "4e8f4ded31fadc8965664652d1eb78a93c7ac505"
        ],
        [
            "change ((X1 <=> X2)%pred m) in H2.",
            "VernacExtend",
            "f41b6aee681f85169f2577d726d01ac4b613aedd"
        ],
        [
            "change ((X2 <=> X3)%pred m) in H3.",
            "VernacExtend",
            "4fda0239d3bab45345e0557a3133ca18ada8637e"
        ],
        [
            "intros y H; specialize (H2 y H); specialize (H3 y H).",
            "VernacExtend",
            "3c0de7ffe1bea3c6e437f002b769645874881452"
        ],
        [
            "destruct H2 as [H2A H2B], H3 as [H3A H3B].",
            "VernacExtend",
            "d874dd87613d4e67e8f70a862d9fa1b4bbb37e48"
        ],
        [
            "split; intros z H0.",
            "VernacExtend",
            "9c428823b78c9549f0a5c0c6a8840a8f3d1a7187"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "specialize (H2A z H0); specialize (H3A z H0); auto.",
            "VernacExtend",
            "b8ae256c83502adb5228a9abd2ffe63fe21fb28a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "specialize (H2B z H0); specialize (H3B z H0); auto.",
            "VernacExtend",
            "75e3cac790edeaccf4c44f4e0319c31bab9c0589"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition acquire_arg_type: rmaps.TypeTree := rmaps.ProdType (rmaps.ConstType (val * share)) rmaps.Mpred.",
            "VernacDefinition",
            "83261eb14b8b2cff4cc1528f4caca0b478a96bcf"
        ],
        [
            "Definition acquire_pre: val * share * mpred -> environ -> mpred := fun args => match args with | (v, sh, R) => PROP (readable_share sh) LOCAL (temp _lock v) SEP (lock_inv sh v R) end.",
            "VernacDefinition",
            "4da716f89fa92a10d243ee2fe290a6f1da8c6012"
        ],
        [
            "Notation acquire_post := (fun args => match args with | (v, sh, R) => PROP () LOCAL () SEP (lock_inv sh v R; R) end).",
            "VernacSyntacticDefinition",
            "3143a9988a062fdc651bb379719fda2d8438e1f5"
        ],
        [
            "Lemma NP_acquire_pre: @super_non_expansive acquire_arg_type (fun _ => acquire_pre).",
            "VernacStartTheoremProof",
            "7f962301a3e741793a60dc0621a34885ba3e1651"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[v sh] R]; simpl in *.",
            "VernacExtend",
            "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP (readable_share sh) LOCAL (temp _lock v) SEP (lock_inv sh v R)) rho)).",
            "VernacExtend",
            "8aa0fecd6e6502fed22674e0445a64edb606720a"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share sh) :: nil) ((temp _lock v) :: nil) ((fun R => lock_inv sh v R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "81df1e5c988d61d79480a77b84dac4946302eeb5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NP_acquire_post: @super_non_expansive acquire_arg_type (fun _ => acquire_post).",
            "VernacStartTheoremProof",
            "284140f93f9e3b99895eb141532324399e612f34"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[v sh] R]; simpl in *.",
            "VernacExtend",
            "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (lock_inv sh v R; R)) rho)).",
            "VernacExtend",
            "48b4799f055aa400a3b2af6132ce967f0b787f90"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => lock_inv sh v R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "6470b16596154f708fbd6bf3b1943627b4e0d801"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply identity_nonexpansive.",
            "VernacExtend",
            "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition acquire_spec: funspec := mk_funspec ((_lock OF tptr Tvoid)%formals :: nil, tvoid) cc_default acquire_arg_type (fun _ => acquire_pre) (fun _ => acquire_post) NP_acquire_pre NP_acquire_post .",
            "VernacDefinition",
            "dcc3fcfcd2f7e7cf107c3c76711e37ed35c0c6a8"
        ],
        [
            "Definition release_arg_type: rmaps.TypeTree := rmaps.ProdType (rmaps.ConstType (val * share)) rmaps.Mpred.",
            "VernacDefinition",
            "b7650214bf60f8fe66902b9a9b62dbb5fcc76faf"
        ],
        [
            "Definition release_pre: val * share * mpred -> environ -> mpred := fun args => match args with | (v, sh, R) => PROP (readable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && emp; lock_inv sh v R; R) end.",
            "VernacDefinition",
            "46b606733bb196b99c9a8fb1cd90916c97526c8a"
        ],
        [
            "Notation release_post := (fun args => match args with | (v, sh, R) => PROP () LOCAL () SEP (lock_inv sh v R) end).",
            "VernacSyntacticDefinition",
            "4b760805c2430b6ca96ac706deebba31c94a5a1c"
        ],
        [
            "Lemma NP_release_pre: @super_non_expansive release_arg_type (fun _ => release_pre).",
            "VernacStartTheoremProof",
            "f13204e1c18d4046d2fec33139cdf76297c379ca"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[v sh] R]; simpl in *.",
            "VernacExtend",
            "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP (readable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && emp; lock_inv sh v R; R)) rho)).",
            "VernacExtend",
            "de741cb62d94c502ce66e920c0dcb2e9865cad87"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share sh) :: nil) ((temp _lock v) :: nil) ((fun R => weak_exclusive_mpred R && emp)%logic :: (fun R => lock_inv sh v R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "54a5c352cda134374c5a1be272c719cf3b96a357"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (conj_nonexpansive (fun R => weak_exclusive_mpred R)%logic).",
            "VernacExtend",
            "e3bc223f576e5646e77e885707268f6e451be561"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply exclusive_mpred_nonexpansive.",
            "VernacExtend",
            "1a011f85e6eaef0ccf3513157a298645423b8089"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply identity_nonexpansive.",
            "VernacExtend",
            "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NP_release_post: @super_non_expansive release_arg_type (fun _ => release_post).",
            "VernacStartTheoremProof",
            "33ddf8b1a90713ee608e2717def4b051369661fc"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[v sh] R]; simpl in *.",
            "VernacExtend",
            "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (lock_inv sh v R)) rho)).",
            "VernacExtend",
            "78c747a15b4531244a7ed4c35597528f1598b232"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => lock_inv sh v R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "b0c4579bec61103cb12baf1c27ea12c8b92e6651"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition release_spec: funspec := mk_funspec ((_lock OF tptr Tvoid)%formals :: nil, tvoid) cc_default release_arg_type (fun _ => release_pre) (fun _ => release_post) NP_release_pre NP_release_post .",
            "VernacDefinition",
            "a568e6688ed00c8ee7dcdb3a17614a4757a29521"
        ],
        [
            "Program Definition makelock_spec cs: funspec := mk_funspec ((_lock OF tptr Tvoid)%formals :: nil, tvoid) cc_default (rmaps.ProdType (rmaps.ConstType (val * share)) rmaps.Mpred) (fun _ x => match x with | (v, sh, R) => PROP (writable_share sh) LOCAL (temp _lock v) SEP (@data_at_ cs sh tlock v) end) (fun _ x => match x with | (v, sh, R) => PROP () LOCAL () SEP (lock_inv sh v R) end) _ _ .",
            "VernacDefinition",
            "1cc6535c46db962d4fc3f52a5a4e5e1496c2f510"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros cs; hnf.",
            "VernacExtend",
            "032ebfb1d5d5dd8d99722d36460e660c23090d49"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[v sh] R]; simpl in *.",
            "VernacExtend",
            "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro cs; hnf.",
            "VernacExtend",
            "834fab325f5fb0da3918f4203904201d99929d44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[v sh] R]; simpl in *.",
            "VernacExtend",
            "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (lock_inv sh v R)) rho)).",
            "VernacExtend",
            "78c747a15b4531244a7ed4c35597528f1598b232"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => lock_inv sh v R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "b0c4579bec61103cb12baf1c27ea12c8b92e6651"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition freelock_spec cs: funspec := mk_funspec ((_lock OF tptr Tvoid)%formals :: nil, tvoid) cc_default (rmaps.ProdType (rmaps.ConstType (val * share)) rmaps.Mpred) (fun _ x => match x with | (v, sh, R) => PROP (writable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && emp; lock_inv sh v R; R) end) (fun _ x => match x with | (v, sh, R) => PROP () LOCAL () SEP (@data_at_ cs sh tlock v; R) end) _ _ .",
            "VernacDefinition",
            "2e9f905655396280fd809d67ee4f1a2675858279"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro cs; hnf.",
            "VernacExtend",
            "834fab325f5fb0da3918f4203904201d99929d44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[v sh] R]; simpl in *.",
            "VernacExtend",
            "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
        ],
        [
            "Admitted.",
            "VernacEndProof",
            "b273df2a612833d7cae3ad881c7303cec72f8651"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro cs; hnf.",
            "VernacExtend",
            "834fab325f5fb0da3918f4203904201d99929d44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[v sh] R]; simpl in *.",
            "VernacExtend",
            "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (data_at_ sh tlock v; R)) rho)).",
            "VernacExtend",
            "ac17e479cb526ab4bd18d56366c73c82de66545c"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun _ => data_at_ sh tlock v) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "b92be5b3c0b0b9185186126ef7de39ace73f177c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply identity_nonexpansive.",
            "VernacExtend",
            "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma selflock_rec : forall sh v R, rec_inv sh v R (selflock R sh v).",
            "VernacStartTheoremProof",
            "575a842b65ea92028802d6d48a9329b21448645b"
        ],
        [
            "intros; unfold rec_inv.",
            "VernacExtend",
            "69cacdfad76a9e83930a6d2a049230327719b8d9"
        ],
        [
            "apply selflock_eq.",
            "VernacExtend",
            "c1546a2ddcfe66f115c1943dd88aefb2c21da75c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition freelock2_spec cs: funspec := mk_funspec ((_lock OF tptr Tvoid)%formals :: nil, tvoid) cc_default (rmaps.ProdType (rmaps.ProdType (rmaps.ConstType (val * share * share)) rmaps.Mpred) rmaps.Mpred) (fun _ x => match x with | (v, sh, sh', Q, R) => PROP (writable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && weak_rec_inv sh' v Q R && emp; lock_inv sh v R) end) (fun _ x => match x with | (v, sh, sh', Q, R) => PROP () LOCAL () SEP (@data_at_ cs sh tlock v) end) _ _ .",
            "VernacDefinition",
            "e4b590febee1915719afe59a7a30998a8d3ecf80"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro cs; hnf.",
            "VernacExtend",
            "834fab325f5fb0da3918f4203904201d99929d44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[[[v sh] sh'] Q] R]; simpl in *.",
            "VernacExtend",
            "963fdc3bd6747c28d4fca20a4793cc970e826fac"
        ],
        [
            "apply (nonexpansive2_super_non_expansive (fun Q R => (PROP (writable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && weak_rec_inv sh' v Q R && emp; lock_inv sh v R)) rho)); [ clear Q R; intros Q; apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => writable_share sh) :: nil) (temp _lock v :: nil) ((fun R => weak_exclusive_mpred R && weak_rec_inv sh' v Q R && emp)%logic :: (fun R => lock_inv sh v R) :: nil)) | clear Q R; intros R; apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => writable_share sh) :: nil) (temp _lock v :: nil) ((fun Q => weak_exclusive_mpred R && weak_rec_inv sh' v Q R && emp)%logic :: (fun _ => lock_inv sh v R) :: nil))]; repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "d92947d4893e72e7980f7f076fbf7318d1b442e6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (conj_nonexpansive (fun R => weak_exclusive_mpred R && weak_rec_inv sh' v Q R)%logic); [apply (conj_nonexpansive weak_exclusive_mpred) |].",
            "VernacExtend",
            "c974d6dc371938c535231d884b9f6bf26ff14734"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply exclusive_mpred_nonexpansive.",
            "VernacExtend",
            "1a011f85e6eaef0ccf3513157a298645423b8089"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply rec_inv1_nonexpansive.",
            "VernacExtend",
            "fc6d1d82bb54225f93392f4ec4108aa1b8af047a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (conj_nonexpansive (fun Q => weak_exclusive_mpred R && weak_rec_inv sh' v Q R)%logic); [apply (conj_nonexpansive (fun _ => weak_exclusive_mpred R)) |].",
            "VernacExtend",
            "b98ec0e5e461a10e4d578ef2f8dbec83987f1242"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply rec_inv2_nonexpansive.",
            "VernacExtend",
            "5734393a0c4be9e07bc28f49451b7b8e7257d60c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro cs; hnf.",
            "VernacExtend",
            "834fab325f5fb0da3918f4203904201d99929d44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[[[v sh] sh'] Q] R]; simpl in *.",
            "VernacExtend",
            "963fdc3bd6747c28d4fca20a4793cc970e826fac"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition release2_spec: funspec := mk_funspec ((_lock OF tptr Tvoid)%formals :: nil, tvoid) cc_default (rmaps.ProdType (rmaps.ProdType (rmaps.ConstType (val * share)) rmaps.Mpred) rmaps.Mpred) (fun _ x => match x with | (v, sh, Q, R) => PROP (readable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && weak_rec_inv sh v Q R && emp; R) end) (fun _ x => match x with | (v, sh, Q, R) => PROP () LOCAL () SEP (emp) end) _ _ .",
            "VernacDefinition",
            "2f1a4f78f8ed9467c0a8abfd148ce927f4efa8fe"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro cs; hnf.",
            "VernacExtend",
            "834fab325f5fb0da3918f4203904201d99929d44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[[v sh] Q] R]; simpl in *.",
            "VernacExtend",
            "2271f3fd9bbad63c6f098a10be3a8d06e5634ed8"
        ],
        [
            "apply (nonexpansive2_super_non_expansive (fun Q R => (PROP (readable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && weak_rec_inv sh v Q R && emp; R)) rho)); [ clear Q R; intros Q; apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share sh) :: nil) (temp _lock v :: nil) ((fun R => weak_exclusive_mpred R && weak_rec_inv sh v Q R && emp)%logic :: (fun R => R) :: nil)) | clear Q R; intros R; apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share sh) :: nil) (temp _lock v :: nil) ((fun Q => weak_exclusive_mpred R && weak_rec_inv sh v Q R && emp)%logic :: (fun _ => R) :: nil))]; repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "740a3ac5efab236f54534aff4705570c8240d333"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (conj_nonexpansive (fun R => weak_exclusive_mpred R && weak_rec_inv sh v Q R)%logic); [apply (conj_nonexpansive (fun R => weak_exclusive_mpred R)%logic) |].",
            "VernacExtend",
            "0b21c0ef23d12e58c8e8e2a2d9f67abd42cc219a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply exclusive_mpred_nonexpansive.",
            "VernacExtend",
            "1a011f85e6eaef0ccf3513157a298645423b8089"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply rec_inv1_nonexpansive.",
            "VernacExtend",
            "fc6d1d82bb54225f93392f4ec4108aa1b8af047a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply identity_nonexpansive.",
            "VernacExtend",
            "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (conj_nonexpansive (fun Q => weak_exclusive_mpred R && weak_rec_inv sh v Q R)%logic); [apply (conj_nonexpansive (fun Q => weak_exclusive_mpred R)%logic) |].",
            "VernacExtend",
            "f7d9cb3ca52f6ede0d842f783da4166f0ff03964"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply rec_inv2_nonexpansive.",
            "VernacExtend",
            "5734393a0c4be9e07bc28f49451b7b8e7257d60c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro cs; hnf.",
            "VernacExtend",
            "834fab325f5fb0da3918f4203904201d99929d44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[[v sh] Q] R]; simpl in *.",
            "VernacExtend",
            "2271f3fd9bbad63c6f098a10be3a8d06e5634ed8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition makecond_spec cs := WITH v : val, sh : share PRE [ _cond OF tptr tcond ] PROP (writable_share sh) LOCAL (temp _cond v) SEP (@data_at_ cs sh tcond v) POST [ tvoid ] PROP () LOCAL () SEP (cond_var sh v).",
            "VernacDefinition",
            "de68e56ccaee0107fb462fa1baa626fb64614649"
        ],
        [
            "Definition freecond_spec cs := WITH v : val, sh : share PRE [ _cond OF tptr tcond ] PROP (writable_share sh) LOCAL (temp _cond v) SEP (@cond_var cs sh v) POST [ tvoid ] PROP () LOCAL () SEP (@data_at_ cs sh tcond v).",
            "VernacDefinition",
            "7fea16b0a65c710a37a7364d58abbe4c38b5a67d"
        ],
        [
            "Program Definition wait_spec cs: funspec := mk_funspec ((_cond OF tptr tcond)%formals :: (_lock OF tptr Tvoid)%formals :: nil, tvoid) cc_default (rmaps.ProdType (rmaps.ConstType (val * val * share * share)) rmaps.Mpred) (fun _ x => match x with | (c, l, shc, shl, R) => PROP (readable_share shc) LOCAL (temp _cond c; temp _lock l) SEP (@cond_var cs shc c; lock_inv shl l R; R) end) (fun _ x => match x with | (c, l, shc, shl, R) => PROP () LOCAL () SEP (cond_var shc c; lock_inv shl l R; R) end) _ _ .",
            "VernacDefinition",
            "529974e8bb517e2154a9e236e8a73a9286d32797"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros cs; hnf.",
            "VernacExtend",
            "032ebfb1d5d5dd8d99722d36460e660c23090d49"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[[[c l] shc] shl] R]; simpl in *.",
            "VernacExtend",
            "cd45d9bdea762f96788213e3ed844547a07ec691"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP (readable_share shc) LOCAL (temp _cond c; temp _lock l) SEP (cond_var shc c; lock_inv shl l R; R)) rho)).",
            "VernacExtend",
            "58e6b1bef94cf6620f9e083cc733e05e8205d1f4"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share shc) :: nil) (temp _cond c :: temp _lock l :: nil) ((fun R => cond_var shc c) :: (fun R => lock_inv shl l R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "aa53d9d230c5005d525853b944b0dfe7e8ff7e3d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply identity_nonexpansive.",
            "VernacExtend",
            "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros cs; hnf.",
            "VernacExtend",
            "032ebfb1d5d5dd8d99722d36460e660c23090d49"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[[[c l] shc] shl] R]; simpl in *.",
            "VernacExtend",
            "cd45d9bdea762f96788213e3ed844547a07ec691"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (cond_var shc c; lock_inv shl l R; R)) rho)).",
            "VernacExtend",
            "ad8e4fdcab349bdaa054d66bee43d6e02cf0983c"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => cond_var shc c) :: (fun R => lock_inv shl l R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "757eb9f111dcd5a7deba3f70afc2bbfa48ff9b20"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply identity_nonexpansive.",
            "VernacExtend",
            "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition wait2_spec cs: funspec := mk_funspec ((_cond OF tptr tcond)%formals :: (_lock OF tptr Tvoid)%formals :: nil, tvoid) cc_default (rmaps.ProdType (rmaps.ConstType (val * val * share * share)) rmaps.Mpred) (fun _ x => match x with | (c, l, shc, shl, R) => PROP (readable_share shc) LOCAL (temp _cond c; temp _lock l) SEP (lock_inv shl l R; R && (@cond_var cs shc c * TT)) end) (fun _ x => match x with | (c, l, shc, shl, R) => PROP () LOCAL () SEP (lock_inv shl l R; R) end) _ _ .",
            "VernacDefinition",
            "b6ddba5d3a3a8d2c7c5e8f962e58b3858e1fa31f"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros cs; hnf.",
            "VernacExtend",
            "032ebfb1d5d5dd8d99722d36460e660c23090d49"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[[[c l] shc] shl] R]; simpl in *.",
            "VernacExtend",
            "cd45d9bdea762f96788213e3ed844547a07ec691"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP (readable_share shc) LOCAL (temp _cond c; temp _lock l) SEP (lock_inv shl l R; R && (@cond_var cs shc c * TT))) rho)).",
            "VernacExtend",
            "d806dca365e5e9126c8bd8fec91545afebb75b5e"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share shc) :: nil) (temp _cond c :: temp _lock l :: nil) ((fun R => lock_inv shl l R) :: (fun R => R && (@cond_var cs shc c * TT))%logic :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "e662c2f4d18ca343e57b99810e9be046c821110e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (conj_nonexpansive (fun R => R) (fun _ => (cond_var shc c * TT)%logic)).",
            "VernacExtend",
            "75189615333a63216f5245799a12615761fc4029"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply identity_nonexpansive.",
            "VernacExtend",
            "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply const_nonexpansive.",
            "VernacExtend",
            "fcec831e69c921abf9163ae985ee3ff70000a685"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros cs; hnf.",
            "VernacExtend",
            "032ebfb1d5d5dd8d99722d36460e660c23090d49"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[[[c l] shc] shl] R]; simpl in *.",
            "VernacExtend",
            "cd45d9bdea762f96788213e3ed844547a07ec691"
        ],
        [
            "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (lock_inv shl l R; R)) rho)).",
            "VernacExtend",
            "3fa45e21f46964998ec52cbb57e9000c48aca215"
        ],
        [
            "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => lock_inv shl l R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
            "VernacExtend",
            "2783d158aef44018681f17bdd86fda8f3ec7e6b6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply nonexpansive_lock_inv.",
            "VernacExtend",
            "461cda34fad43af035be31a10e0423fdb82bbf04"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply identity_nonexpansive.",
            "VernacExtend",
            "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition signal_spec cs := WITH c : val, shc : share PRE [ _cond OF tptr tcond ] PROP (readable_share shc) LOCAL (temp _cond c) SEP (@cond_var cs shc c) POST [ tvoid ] PROP () LOCAL () SEP (@cond_var cs shc c).",
            "VernacDefinition",
            "1eb182e9194d956a07353c1840b6ce36d85a9b2d"
        ],
        [
            "Local Open Scope logic.",
            "VernacOpenCloseScope",
            "5937723d189e5aa98ad78e1018bed51ea2c1b0cd"
        ],
        [
            "Definition spawn_arg_type := rmaps.ProdType (rmaps.ProdType (rmaps.ProdType (rmaps.ConstType (val * val)) (rmaps.ArrowType (rmaps.DependentType 0) (rmaps.ConstType globals))) (rmaps.DependentType 0)) (rmaps.ArrowType (rmaps.DependentType 0) (rmaps.ArrowType (rmaps.ConstType val) rmaps.Mpred)).",
            "VernacDefinition",
            "3021a7c8d23525801fa0102a548c7be61f6a7b16"
        ],
        [
            "Definition spawn_pre := (fun (ts: list Type) (x: val * val * (nth 0 ts unit -> globals) * nth 0 ts unit * (nth 0 ts unit -> val -> mpred)) => match x with | (f, b, gv, w, pre) => PROP (tc_val (tptr Tvoid) b) (LOCALx (temp _f f :: temp _args b :: gvars (gv w) :: nil) (SEP ( EX _y : ident, (func_ptr' (WITH y : val, x : nth 0 ts unit PRE [ _y OF tptr tvoid ] PROP () (LOCALx (temp _y y :: gvars (gv x) :: nil) (SEP (pre x y))) POST [tptr tvoid] PROP () LOCAL () SEP ()) f); pre w b))) end).",
            "VernacDefinition",
            "e08b9724f632c28f5de68c21cd29d6bae601a23c"
        ],
        [
            "Definition spawn_post := (fun (ts: list Type) (x: val * val * (nth 0 ts unit -> globals) * nth 0 ts unit * (nth 0 ts unit -> val -> mpred)) => match x with | (f, b, w, pre) => PROP () LOCAL () SEP () end).",
            "VernacDefinition",
            "676ccd2df18c56df178a5de1798d0141952a9fb0"
        ],
        [
            "Lemma approx_idem : forall n P, compcert_rmaps.R.approx n (compcert_rmaps.R.approx n P) = compcert_rmaps.R.approx n P.",
            "VernacStartTheoremProof",
            "405d6f40757099f716371599579a3634e1de967a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (base.compose (compcert_rmaps.R.approx n) (compcert_rmaps.R.approx n) P); auto.",
            "VernacExtend",
            "5fd89a38a63d0fcbe8e3f862e5157f25f284753c"
        ],
        [
            "rewrite compcert_rmaps.RML.approx_oo_approx; auto.",
            "VernacExtend",
            "3ac89b82ca4887b8cb7c12143955a83702447f08"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma spawn_pre_nonexpansive: @super_non_expansive spawn_arg_type spawn_pre.",
            "VernacStartTheoremProof",
            "fbbbf90af98e42e348dedfb857d6a063a4e5e0ca"
        ],
        [
            "repeat intro.",
            "VernacExtend",
            "b1b5d9b3004bf4634299c208df98406e88278608"
        ],
        [
            "destruct x as ((((?, ?), ?), ?), ?); simpl.",
            "VernacExtend",
            "31c8fae278507edc300bf6fb27a8899c7951ed0d"
        ],
        [
            "unfold PROPx; simpl; rewrite !approx_andp; f_equal.",
            "VernacExtend",
            "3ad69d4524367fbff321d0a4963c3e05e9328d83"
        ],
        [
            "unfold LOCALx; simpl; rewrite !approx_andp; f_equal.",
            "VernacExtend",
            "1cbc6e47cc40c61e8aea09213199cde552780073"
        ],
        [
            "unfold SEPx; simpl; rewrite !sepcon_emp, !approx_sepcon, ?approx_idem; f_equal.",
            "VernacExtend",
            "aa5da00ef9c2085d1b3cb84b1de5d99201058218"
        ],
        [
            "rewrite !approx_exp; apply f_equal; extensionality y.",
            "VernacExtend",
            "3482ef384bae607e16d8b366366c70d7e567d271"
        ],
        [
            "rewrite approx_func_ptr'.",
            "VernacExtend",
            "6f4a365ef5e802a1817cd2a82dc26b2891719192"
        ],
        [
            "setoid_rewrite approx_func_ptr' at 2.",
            "VernacExtend",
            "090d02616e8df9751e36e5826892e6f3373cdc4d"
        ],
        [
            "do 3 f_equal.",
            "VernacExtend",
            "c21e62c3422d6abf491307169ebac9e492ad6aba"
        ],
        [
            "extensionality a rho'; destruct a.",
            "VernacExtend",
            "781d2eb896c4961fcf48bd29b70acce5823c5923"
        ],
        [
            "rewrite !approx_andp, !approx_sepcon, approx_idem; auto.",
            "VernacExtend",
            "f68516cb51b3631c4fc709ea842290a9f86fba11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma spawn_post_nonexpansive: @super_non_expansive spawn_arg_type spawn_post.",
            "VernacStartTheoremProof",
            "60c13812a4bb5aea3a9f2a0324ee925c92a98765"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "destruct x as [[[]] pre]; auto.",
            "VernacExtend",
            "5bee3513eaeee9836836207d2e680070130d7657"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition spawn_spec := mk_funspec ((_f OF tptr voidstar_funtype)%formals :: (_args OF tptr tvoid)%formals :: nil, tvoid) cc_default spawn_arg_type spawn_pre spawn_post spawn_pre_nonexpansive spawn_post_nonexpansive.",
            "VernacDefinition",
            "a2cc0c79f11b31224e1018f82da211850ef8752c"
        ],
        [
            "Definition concurrent_simple_specs (cs : compspecs) (ext_link : string -> ident) := (ext_link \"acquire\"%string, acquire_spec) :: (ext_link \"release\"%string, release_spec) :: nil.",
            "VernacDefinition",
            "da87be5026458907160514d933f046df20a7494e"
        ],
        [
            "Definition concurrent_simple_ext_spec Z (cs : compspecs) (ext_link : string -> ident) := add_funspecs_rec ext_link (ok_void_spec Z).(@OK_ty) (ok_void_spec Z).(@OK_spec) (concurrent_simple_specs cs ext_link).",
            "VernacDefinition",
            "61ee53b067e67bbc7bec34b8d81a6f0ca4dbfd1c"
        ],
        [
            "Definition Concurrent_Simple_Espec Z cs ext_link := Build_OracleKind Z (concurrent_simple_ext_spec Z cs ext_link).",
            "VernacDefinition",
            "5b9ec6c870baeaa67596a4d31287ac2bd4f4837b"
        ],
        [
            "Lemma strong_nat_ind (P : nat -> Prop) (IH : forall n, (forall i, lt i n -> P i) -> P n) n : P n.",
            "VernacStartTheoremProof",
            "8d582e1b0bdd18713f380531d8cace44f458c13d"
        ],
        [
            "apply IH; induction n; intros i li; inversion li; eauto.",
            "VernacExtend",
            "b3f01cb0af6a20b1c7072ed6c46b60e072090feb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Set Printing Implicit.",
            "VernacSetOption",
            "0b3a78850e564e8af30f9f97fdeb60ece75c74f2"
        ],
        [
            "Definition concurrent_specs (cs : compspecs) (ext_link : string -> ident) := (ext_link \"acquire\"%string, acquire_spec) :: (ext_link \"release\"%string, release_spec) :: (ext_link \"makelock\"%string, makelock_spec cs) :: (ext_link \"freelock\"%string, freelock_spec cs) :: (ext_link \"spawn\"%string, spawn_spec) :: nil.",
            "VernacDefinition",
            "539bd6660d2a95907fc8ad8539ea9250a06fd1a6"
        ],
        [
            "Definition concurrent_ext_spec Z (cs : compspecs) (ext_link : string -> ident) := add_funspecs_rec ext_link (ok_void_spec Z).(@OK_ty) (ok_void_spec Z).(@OK_spec) (concurrent_specs cs ext_link).",
            "VernacDefinition",
            "3293ae61d74a147a6865a866ee4bf0df9b78a241"
        ],
        [
            "Definition Concurrent_Espec Z cs ext_link := Build_OracleKind Z (concurrent_ext_spec Z cs ext_link).",
            "VernacDefinition",
            "111989276b674f776bf831b52a3556843f300772"
        ]
    ],
    "proofs": [
        {
            "name": "Unnamed_thm",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonexpansive_entail",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros N P Q.",
                        "VernacExtend",
                        "a11b0e7488bce5c9d170fb6a93ae109396ed34a8"
                    ]
                },
                {
                    "command": [
                        "specialize (N P Q).",
                        "VernacExtend",
                        "5dd7a45aecd16421370a57cdbffae17a1e2c6019"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [ eapply derives_trans | ]; [ | apply N | ]; apply derives_refl.",
                        "VernacExtend",
                        "0443f5cb02252a96828332ab7d8b5b576eb8c452"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "HOnonexpansive_nonexpansive",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros; hnf in H |- *.",
                        "VernacExtend",
                        "bb5dabfded6dc83ae28bed01eeb035a124f80a16"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros P Q.",
                        "VernacExtend",
                        "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
                    ]
                },
                {
                    "command": [
                        "specialize (H (P tt) (Q tt)).",
                        "VernacExtend",
                        "0b24f269120b542f9a2a685d6fd3ea4e3867e521"
                    ]
                },
                {
                    "command": [
                        "rewrite !allp_unit.",
                        "VernacExtend",
                        "3253aefc067c7032bc1240d4d9126caebc279d2d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros P Q.",
                        "VernacExtend",
                        "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
                    ]
                },
                {
                    "command": [
                        "specialize (H (fun x => P) (fun x => Q)).",
                        "VernacExtend",
                        "84a4119ead6141b55e4b7ddbafbf954a27dab0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite !allp_unit in H.",
                        "VernacExtend",
                        "86b61f323a8762da9d5909b4a360da20ff496955"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "selflock'_eq",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "apply HORec_fold_unfold, prove_HOcontractive.",
                        "VernacExtend",
                        "21b29bad9669c782c4436bb36c667ac35fa760d0"
                    ]
                },
                {
                    "command": [
                        "intros P1 P2 u.",
                        "VernacExtend",
                        "5df30a872deaca100b97753245a24d9e08b2aff8"
                    ]
                },
                {
                    "command": [
                        "apply subp_sepcon; [ apply subp_refl | ].",
                        "VernacExtend",
                        "e41144463b3ef14f888abc5a49145ca26a62425d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- subp_later.",
                        "VernacExtend",
                        "0c36962fce0bb2b2826bfce8c6656dc01bcdbd10"
                    ]
                },
                {
                    "command": [
                        "repeat intro.",
                        "VernacExtend",
                        "b1b5d9b3004bf4634299c208df98406e88278608"
                    ]
                },
                {
                    "command": [
                        "match goal with |- app_pred (?P >=> ?Q)%logic ?a => change (subtypes.fash (P --> Q) a) end.",
                        "VernacExtend",
                        "8bf6754382cd42a5bc96bc0b4b1a1c60d6a8cece"
                    ]
                },
                {
                    "command": [
                        "unfold lock_inv; repeat intro.",
                        "VernacExtend",
                        "97e0b7da4f32a6933c4992f5b0916f3d73512d26"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as (b & ofs & ? & Hl & ?); exists b, ofs; split; auto; split; auto.",
                        "VernacExtend",
                        "b8934bb94354aeacf93190baa0d06c9f50e3bc48"
                    ]
                },
                {
                    "command": [
                        "intro l; specialize (Hl l); simpl in *.",
                        "VernacExtend",
                        "a66e2bdcda34280e95473a691539c2882db6aa53"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto.",
                        "VernacExtend",
                        "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
                    ]
                },
                {
                    "command": [
                        "destruct Hl as [rsh Hl]; exists rsh; rewrite Hl; repeat f_equal.",
                        "VernacExtend",
                        "c82da6a23980b3416ba421e870f9df5a5492d889"
                    ]
                },
                {
                    "command": [
                        "extensionality.",
                        "VernacExtend",
                        "5f659a610dbf05b4e2ac5dec31944a29d867effa"
                    ]
                },
                {
                    "command": [
                        "specialize (H tt); rewrite <- eqp_later in H.",
                        "VernacExtend",
                        "ca6778e7d92af3d7a9f50e9287246e8e2674ea25"
                    ]
                },
                {
                    "command": [
                        "specialize (H _ H0).",
                        "VernacExtend",
                        "58d9b9a73505872ca70c4d928bcfa1d1cc75c69b"
                    ]
                },
                {
                    "command": [
                        "apply necR_level in H2.",
                        "VernacExtend",
                        "4e3b316ccb137eceb21e63bf4085bc5b261dddd3"
                    ]
                },
                {
                    "command": [
                        "apply predicates_hered.pred_ext; intros ? []; split; auto.",
                        "VernacExtend",
                        "c1e50d91ff0459acdb4af87fcc1065178677e8e1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (H a0) as [X _]; [omega|].",
                        "VernacExtend",
                        "df51d6e6d1ea669089a9fbd253734b6c291a57b4"
                    ]
                },
                {
                    "command": [
                        "specialize (X _ (necR_refl _)); auto.",
                        "VernacExtend",
                        "d671442fd0e4591038f5f1a97d7df567b7edd2af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (H a0) as [_ X]; [omega|].",
                        "VernacExtend",
                        "3fc469fcfbfb3a475e173dbc51e854d832c6d1c1"
                    ]
                },
                {
                    "command": [
                        "specialize (X _ (necR_refl _)); auto.",
                        "VernacExtend",
                        "d671442fd0e4591038f5f1a97d7df567b7edd2af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "selflock_eq",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "unfold selflock at 1.",
                        "VernacExtend",
                        "9196aef7a1a1b1d20a4e86fef87736b586d67e14"
                    ]
                },
                {
                    "command": [
                        "rewrite selflock'_eq.",
                        "VernacExtend",
                        "e7348b998c00d69107e0b5c3c4d15f72ac1513ce"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "res_invariant_eq",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "unfold res_invariant at 1.",
                        "VernacExtend",
                        "5f44ef581c1037d62536f2af050b309084d6b6a6"
                    ]
                },
                {
                    "command": [
                        "rewrite res_invariants_eq.",
                        "VernacExtend",
                        "e394f917e72a6ed6c1e39418b63c6686bae5d398"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_res_invariant_eq",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "unfold join_res_invariant at 1.",
                        "VernacExtend",
                        "a926f6466ef23407e36d3b9b78a892241dc6ef6e"
                    ]
                },
                {
                    "command": [
                        "rewrite res_invariants_eq.",
                        "VernacExtend",
                        "e394f917e72a6ed6c1e39418b63c6686bae5d398"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "approx_eq_i'",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext'; extensionality m'.",
                        "VernacExtend",
                        "a227c6e030afed9c48be926e8d20409c8761e045"
                    ]
                },
                {
                    "command": [
                        "unfold approx.",
                        "VernacExtend",
                        "c4f424a5cdb2071597e76c464ce089e6edc0e904"
                    ]
                },
                {
                    "command": [
                        "apply and_ext'; auto; intros.",
                        "VernacExtend",
                        "9681a2dd0688963ac3adf335cc555b7b0a73fc37"
                    ]
                },
                {
                    "command": [
                        "specialize (H (level m')); spec H; [simpl; apply later_nat; auto |].",
                        "VernacExtend",
                        "ad815dd7a8186bdcd9f1725b63ad267c525fb42a"
                    ]
                },
                {
                    "command": [
                        "specialize (H m').",
                        "VernacExtend",
                        "f0594ae55bce886e5c8c350b55763ab2aed8c245"
                    ]
                },
                {
                    "command": [
                        "spec H; [omega |].",
                        "VernacExtend",
                        "3b6530c84a66e5ef96b1a7c49acc4f5300648d9e"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "specialize (H m').",
                        "VernacExtend",
                        "f0594ae55bce886e5c8c350b55763ab2aed8c245"
                    ]
                },
                {
                    "command": [
                        "specialize (H1 m').",
                        "VernacExtend",
                        "1bba542f58f422c5314945cbaa0760916eca66ab"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; split; auto.",
                        "VernacExtend",
                        "d189794591747137884a583f0ab35e2867119868"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fash_equiv_approx",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intros m ? x ?; split; intros y ? ?.",
                        "VernacExtend",
                        "73d4ee49a6ddf74aaca417fd137c38b349880bc9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply approx_lt; auto.",
                        "VernacExtend",
                        "c9f9f36ed94c5c02e2f944b8612f9ea3aea955fa"
                    ]
                },
                {
                    "command": [
                        "apply necR_level in H1.",
                        "VernacExtend",
                        "50b20c78f2dced8c177bc4662f898872a4698c97"
                    ]
                },
                {
                    "command": [
                        "apply later_nat in H; omega.",
                        "VernacExtend",
                        "3e7ca42ae69c35840a326355720dd9d543613233"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply approx_p; eauto.",
                        "VernacExtend",
                        "e3d16bc3241b92f8102110fd9eae59b4068d066e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonexpansive_super_non_expansive",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply approx_eq_i'.",
                        "VernacExtend",
                        "9e70d849614945f113da241f01df3d3737386f10"
                    ]
                },
                {
                    "command": [
                        "intros m ?.",
                        "VernacExtend",
                        "85b221177f21991743fbf77c6d3c83a38cf3fe96"
                    ]
                },
                {
                    "command": [
                        "pose proof nonexpansive_entail _ H R (approx n R) m.",
                        "VernacExtend",
                        "f8076b693f7d45e0d7d40f01f3519f4d782c5e24"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "clear - H0.",
                        "VernacExtend",
                        "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
                    ]
                },
                {
                    "command": [
                        "apply (fash_equiv_approx n R m); auto.",
                        "VernacExtend",
                        "1e1be597de584558918b7a3d7796439526ade963"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonexpansive2_super_non_expansive",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply approx_eq_i'.",
                        "VernacExtend",
                        "9e70d849614945f113da241f01df3d3737386f10"
                    ]
                },
                {
                    "command": [
                        "intros m ?.",
                        "VernacExtend",
                        "85b221177f21991743fbf77c6d3c83a38cf3fe96"
                    ]
                },
                {
                    "command": [
                        "pose proof nonexpansive_entail _ (H P) Q (approx n Q) m; cbv beta in H2.",
                        "VernacExtend",
                        "62afc8b0240f5a8845a4bae9a34ab2eda64ab75a"
                    ]
                },
                {
                    "command": [
                        "spec H2; [apply (fash_equiv_approx n Q m); auto |].",
                        "VernacExtend",
                        "c1fd3be466ac49c003843170ad8a9fea44acc06e"
                    ]
                },
                {
                    "command": [
                        "pose proof nonexpansive_entail _ (H0 (approx n Q)) P (approx n P) m; cbv beta in H3.",
                        "VernacExtend",
                        "08a8cee3ddd6ba9fc5d5348eda5d4f368de3c447"
                    ]
                },
                {
                    "command": [
                        "spec H3; [apply (fash_equiv_approx n P m); auto |].",
                        "VernacExtend",
                        "8728f12fe9c8ac5ef7d6400f6b26e2c56ac7d112"
                    ]
                },
                {
                    "command": [
                        "remember (F P Q) as X1.",
                        "VernacExtend",
                        "27a0eb5df4befc16341e0524a276b0148e4be2d1"
                    ]
                },
                {
                    "command": [
                        "remember (F P (approx n Q)) as X2.",
                        "VernacExtend",
                        "8853034b1021105170e49a813e1e3748d76fa110"
                    ]
                },
                {
                    "command": [
                        "remember (F (approx n P) (approx n Q)) as X3.",
                        "VernacExtend",
                        "e2124b6dc8ccbe68613efd38e3ee10088ee23813"
                    ]
                },
                {
                    "command": [
                        "clear - H2 H3.",
                        "VernacExtend",
                        "4e8f4ded31fadc8965664652d1eb78a93c7ac505"
                    ]
                },
                {
                    "command": [
                        "change ((X1 <=> X2)%pred m) in H2.",
                        "VernacExtend",
                        "f41b6aee681f85169f2577d726d01ac4b613aedd"
                    ]
                },
                {
                    "command": [
                        "change ((X2 <=> X3)%pred m) in H3.",
                        "VernacExtend",
                        "4fda0239d3bab45345e0557a3133ca18ada8637e"
                    ]
                },
                {
                    "command": [
                        "intros y H; specialize (H2 y H); specialize (H3 y H).",
                        "VernacExtend",
                        "3c0de7ffe1bea3c6e437f002b769645874881452"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [H2A H2B], H3 as [H3A H3B].",
                        "VernacExtend",
                        "d874dd87613d4e67e8f70a862d9fa1b4bbb37e48"
                    ]
                },
                {
                    "command": [
                        "split; intros z H0.",
                        "VernacExtend",
                        "9c428823b78c9549f0a5c0c6a8840a8f3d1a7187"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "specialize (H2A z H0); specialize (H3A z H0); auto.",
                        "VernacExtend",
                        "b8ae256c83502adb5228a9abd2ffe63fe21fb28a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "specialize (H2B z H0); specialize (H3B z H0); auto.",
                        "VernacExtend",
                        "75e3cac790edeaccf4c44f4e0319c31bab9c0589"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NP_acquire_post",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[v sh] R]; simpl in *.",
                        "VernacExtend",
                        "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (lock_inv sh v R; R)) rho)).",
                        "VernacExtend",
                        "48b4799f055aa400a3b2af6132ce967f0b787f90"
                    ]
                },
                {
                    "command": [
                        "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => lock_inv sh v R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "6470b16596154f708fbd6bf3b1943627b4e0d801"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply nonexpansive_lock_inv.",
                        "VernacExtend",
                        "461cda34fad43af035be31a10e0423fdb82bbf04"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply identity_nonexpansive.",
                        "VernacExtend",
                        "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NP_release_pre",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[v sh] R]; simpl in *.",
                        "VernacExtend",
                        "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive_super_non_expansive (fun R => (PROP (readable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && emp; lock_inv sh v R; R)) rho)).",
                        "VernacExtend",
                        "de741cb62d94c502ce66e920c0dcb2e9865cad87"
                    ]
                },
                {
                    "command": [
                        "apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share sh) :: nil) ((temp _lock v) :: nil) ((fun R => weak_exclusive_mpred R && emp)%logic :: (fun R => lock_inv sh v R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "54a5c352cda134374c5a1be272c719cf3b96a357"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (conj_nonexpansive (fun R => weak_exclusive_mpred R)%logic).",
                        "VernacExtend",
                        "e3bc223f576e5646e77e885707268f6e451be561"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply exclusive_mpred_nonexpansive.",
                        "VernacExtend",
                        "1a011f85e6eaef0ccf3513157a298645423b8089"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply nonexpansive_lock_inv.",
                        "VernacExtend",
                        "461cda34fad43af035be31a10e0423fdb82bbf04"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply identity_nonexpansive.",
                        "VernacExtend",
                        "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NP_release_post",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[v sh] R]; simpl in *.",
                        "VernacExtend",
                        "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (lock_inv sh v R)) rho)).",
                        "VernacExtend",
                        "78c747a15b4531244a7ed4c35597528f1598b232"
                    ]
                },
                {
                    "command": [
                        "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => lock_inv sh v R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "b0c4579bec61103cb12baf1c27ea12c8b92e6651"
                    ]
                },
                {
                    "command": [
                        "apply nonexpansive_lock_inv.",
                        "VernacExtend",
                        "461cda34fad43af035be31a10e0423fdb82bbf04"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "makelock_spec_obligation_1",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intros cs; hnf.",
                        "VernacExtend",
                        "032ebfb1d5d5dd8d99722d36460e660c23090d49"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[v sh] R]; simpl in *.",
                        "VernacExtend",
                        "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "makelock_spec_obligation_2",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intro cs; hnf.",
                        "VernacExtend",
                        "834fab325f5fb0da3918f4203904201d99929d44"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[v sh] R]; simpl in *.",
                        "VernacExtend",
                        "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (lock_inv sh v R)) rho)).",
                        "VernacExtend",
                        "78c747a15b4531244a7ed4c35597528f1598b232"
                    ]
                },
                {
                    "command": [
                        "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => lock_inv sh v R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "b0c4579bec61103cb12baf1c27ea12c8b92e6651"
                    ]
                },
                {
                    "command": [
                        "apply nonexpansive_lock_inv.",
                        "VernacExtend",
                        "461cda34fad43af035be31a10e0423fdb82bbf04"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freelock_spec_obligation_2",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intro cs; hnf.",
                        "VernacExtend",
                        "834fab325f5fb0da3918f4203904201d99929d44"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[v sh] R]; simpl in *.",
                        "VernacExtend",
                        "bad8bcf8e25f029560fb0297264d69ea7fc8b5f0"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (data_at_ sh tlock v; R)) rho)).",
                        "VernacExtend",
                        "ac17e479cb526ab4bd18d56366c73c82de66545c"
                    ]
                },
                {
                    "command": [
                        "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun _ => data_at_ sh tlock v) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "b92be5b3c0b0b9185186126ef7de39ace73f177c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply identity_nonexpansive.",
                        "VernacExtend",
                        "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "selflock_rec",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intros; unfold rec_inv.",
                        "VernacExtend",
                        "69cacdfad76a9e83930a6d2a049230327719b8d9"
                    ]
                },
                {
                    "command": [
                        "apply selflock_eq.",
                        "VernacExtend",
                        "c1546a2ddcfe66f115c1943dd88aefb2c21da75c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freelock2_spec_obligation_1",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "intro cs; hnf.",
                        "VernacExtend",
                        "834fab325f5fb0da3918f4203904201d99929d44"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[[[v sh] sh'] Q] R]; simpl in *.",
                        "VernacExtend",
                        "963fdc3bd6747c28d4fca20a4793cc970e826fac"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive2_super_non_expansive (fun Q R => (PROP (writable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && weak_rec_inv sh' v Q R && emp; lock_inv sh v R)) rho)); [ clear Q R; intros Q; apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => writable_share sh) :: nil) (temp _lock v :: nil) ((fun R => weak_exclusive_mpred R && weak_rec_inv sh' v Q R && emp)%logic :: (fun R => lock_inv sh v R) :: nil)) | clear Q R; intros R; apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => writable_share sh) :: nil) (temp _lock v :: nil) ((fun Q => weak_exclusive_mpred R && weak_rec_inv sh' v Q R && emp)%logic :: (fun _ => lock_inv sh v R) :: nil))]; repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "d92947d4893e72e7980f7f076fbf7318d1b442e6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (conj_nonexpansive (fun R => weak_exclusive_mpred R && weak_rec_inv sh' v Q R)%logic); [apply (conj_nonexpansive weak_exclusive_mpred) |].",
                        "VernacExtend",
                        "c974d6dc371938c535231d884b9f6bf26ff14734"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply exclusive_mpred_nonexpansive.",
                        "VernacExtend",
                        "1a011f85e6eaef0ccf3513157a298645423b8089"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply rec_inv1_nonexpansive.",
                        "VernacExtend",
                        "fc6d1d82bb54225f93392f4ec4108aa1b8af047a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply nonexpansive_lock_inv.",
                        "VernacExtend",
                        "461cda34fad43af035be31a10e0423fdb82bbf04"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (conj_nonexpansive (fun Q => weak_exclusive_mpred R && weak_rec_inv sh' v Q R)%logic); [apply (conj_nonexpansive (fun _ => weak_exclusive_mpred R)) |].",
                        "VernacExtend",
                        "b98ec0e5e461a10e4d578ef2f8dbec83987f1242"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply rec_inv2_nonexpansive.",
                        "VernacExtend",
                        "5734393a0c4be9e07bc28f49451b7b8e7257d60c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freelock2_spec_obligation_2",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "intro cs; hnf.",
                        "VernacExtend",
                        "834fab325f5fb0da3918f4203904201d99929d44"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[[[v sh] sh'] Q] R]; simpl in *.",
                        "VernacExtend",
                        "963fdc3bd6747c28d4fca20a4793cc970e826fac"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "release2_spec_obligation_1",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "intro cs; hnf.",
                        "VernacExtend",
                        "834fab325f5fb0da3918f4203904201d99929d44"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[[v sh] Q] R]; simpl in *.",
                        "VernacExtend",
                        "2271f3fd9bbad63c6f098a10be3a8d06e5634ed8"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive2_super_non_expansive (fun Q R => (PROP (readable_share sh) LOCAL (temp _lock v) SEP (weak_exclusive_mpred R && weak_rec_inv sh v Q R && emp; R)) rho)); [ clear Q R; intros Q; apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share sh) :: nil) (temp _lock v :: nil) ((fun R => weak_exclusive_mpred R && weak_rec_inv sh v Q R && emp)%logic :: (fun R => R) :: nil)) | clear Q R; intros R; apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share sh) :: nil) (temp _lock v :: nil) ((fun Q => weak_exclusive_mpred R && weak_rec_inv sh v Q R && emp)%logic :: (fun _ => R) :: nil))]; repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "740a3ac5efab236f54534aff4705570c8240d333"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (conj_nonexpansive (fun R => weak_exclusive_mpred R && weak_rec_inv sh v Q R)%logic); [apply (conj_nonexpansive (fun R => weak_exclusive_mpred R)%logic) |].",
                        "VernacExtend",
                        "0b21c0ef23d12e58c8e8e2a2d9f67abd42cc219a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply exclusive_mpred_nonexpansive.",
                        "VernacExtend",
                        "1a011f85e6eaef0ccf3513157a298645423b8089"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply rec_inv1_nonexpansive.",
                        "VernacExtend",
                        "fc6d1d82bb54225f93392f4ec4108aa1b8af047a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply identity_nonexpansive.",
                        "VernacExtend",
                        "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (conj_nonexpansive (fun Q => weak_exclusive_mpred R && weak_rec_inv sh v Q R)%logic); [apply (conj_nonexpansive (fun Q => weak_exclusive_mpred R)%logic) |].",
                        "VernacExtend",
                        "f7d9cb3ca52f6ede0d842f783da4166f0ff03964"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply rec_inv2_nonexpansive.",
                        "VernacExtend",
                        "5734393a0c4be9e07bc28f49451b7b8e7257d60c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "release2_spec_obligation_2",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "intro cs; hnf.",
                        "VernacExtend",
                        "834fab325f5fb0da3918f4203904201d99929d44"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[[v sh] Q] R]; simpl in *.",
                        "VernacExtend",
                        "2271f3fd9bbad63c6f098a10be3a8d06e5634ed8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wait_spec_obligation_1",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "intros cs; hnf.",
                        "VernacExtend",
                        "032ebfb1d5d5dd8d99722d36460e660c23090d49"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[[[c l] shc] shl] R]; simpl in *.",
                        "VernacExtend",
                        "cd45d9bdea762f96788213e3ed844547a07ec691"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive_super_non_expansive (fun R => (PROP (readable_share shc) LOCAL (temp _cond c; temp _lock l) SEP (cond_var shc c; lock_inv shl l R; R)) rho)).",
                        "VernacExtend",
                        "58e6b1bef94cf6620f9e083cc733e05e8205d1f4"
                    ]
                },
                {
                    "command": [
                        "apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share shc) :: nil) (temp _cond c :: temp _lock l :: nil) ((fun R => cond_var shc c) :: (fun R => lock_inv shl l R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "aa53d9d230c5005d525853b944b0dfe7e8ff7e3d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply nonexpansive_lock_inv.",
                        "VernacExtend",
                        "461cda34fad43af035be31a10e0423fdb82bbf04"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply identity_nonexpansive.",
                        "VernacExtend",
                        "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wait_spec_obligation_2",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "intros cs; hnf.",
                        "VernacExtend",
                        "032ebfb1d5d5dd8d99722d36460e660c23090d49"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[[[c l] shc] shl] R]; simpl in *.",
                        "VernacExtend",
                        "cd45d9bdea762f96788213e3ed844547a07ec691"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (cond_var shc c; lock_inv shl l R; R)) rho)).",
                        "VernacExtend",
                        "ad8e4fdcab349bdaa054d66bee43d6e02cf0983c"
                    ]
                },
                {
                    "command": [
                        "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => cond_var shc c) :: (fun R => lock_inv shl l R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "757eb9f111dcd5a7deba3f70afc2bbfa48ff9b20"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply nonexpansive_lock_inv.",
                        "VernacExtend",
                        "461cda34fad43af035be31a10e0423fdb82bbf04"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply identity_nonexpansive.",
                        "VernacExtend",
                        "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wait2_spec_obligation_1",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "intros cs; hnf.",
                        "VernacExtend",
                        "032ebfb1d5d5dd8d99722d36460e660c23090d49"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[[[c l] shc] shl] R]; simpl in *.",
                        "VernacExtend",
                        "cd45d9bdea762f96788213e3ed844547a07ec691"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive_super_non_expansive (fun R => (PROP (readable_share shc) LOCAL (temp _cond c; temp _lock l) SEP (lock_inv shl l R; R && (@cond_var cs shc c * TT))) rho)).",
                        "VernacExtend",
                        "d806dca365e5e9126c8bd8fec91545afebb75b5e"
                    ]
                },
                {
                    "command": [
                        "apply (PROP_LOCAL_SEP_nonexpansive ((fun _ => readable_share shc) :: nil) (temp _cond c :: temp _lock l :: nil) ((fun R => lock_inv shl l R) :: (fun R => R && (@cond_var cs shc c * TT))%logic :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "e662c2f4d18ca343e57b99810e9be046c821110e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply nonexpansive_lock_inv.",
                        "VernacExtend",
                        "461cda34fad43af035be31a10e0423fdb82bbf04"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (conj_nonexpansive (fun R => R) (fun _ => (cond_var shc c * TT)%logic)).",
                        "VernacExtend",
                        "75189615333a63216f5245799a12615761fc4029"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply identity_nonexpansive.",
                        "VernacExtend",
                        "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply const_nonexpansive.",
                        "VernacExtend",
                        "fcec831e69c921abf9163ae985ee3ff70000a685"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wait2_spec_obligation_2",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "intros cs; hnf.",
                        "VernacExtend",
                        "032ebfb1d5d5dd8d99722d36460e660c23090d49"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[[[c l] shc] shl] R]; simpl in *.",
                        "VernacExtend",
                        "cd45d9bdea762f96788213e3ed844547a07ec691"
                    ]
                },
                {
                    "command": [
                        "apply (nonexpansive_super_non_expansive (fun R => (PROP () LOCAL () SEP (lock_inv shl l R; R)) rho)).",
                        "VernacExtend",
                        "3fa45e21f46964998ec52cbb57e9000c48aca215"
                    ]
                },
                {
                    "command": [
                        "apply (PROP_LOCAL_SEP_nonexpansive nil nil ((fun R => lock_inv shl l R) :: (fun R => R) :: nil)); repeat apply Forall_cons; try apply Forall_nil.",
                        "VernacExtend",
                        "2783d158aef44018681f17bdd86fda8f3ec7e6b6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply nonexpansive_lock_inv.",
                        "VernacExtend",
                        "461cda34fad43af035be31a10e0423fdb82bbf04"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply identity_nonexpansive.",
                        "VernacExtend",
                        "29c25b3c69d32f0f7a344cbd1b4d6a907a7d4428"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "approx_idem",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (base.compose (compcert_rmaps.R.approx n) (compcert_rmaps.R.approx n) P); auto.",
                        "VernacExtend",
                        "5fd89a38a63d0fcbe8e3f862e5157f25f284753c"
                    ]
                },
                {
                    "command": [
                        "rewrite compcert_rmaps.RML.approx_oo_approx; auto.",
                        "VernacExtend",
                        "3ac89b82ca4887b8cb7c12143955a83702447f08"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "spawn_pre_nonexpansive",
            "line_nb": 415,
            "steps": [
                {
                    "command": [
                        "repeat intro.",
                        "VernacExtend",
                        "b1b5d9b3004bf4634299c208df98406e88278608"
                    ]
                },
                {
                    "command": [
                        "destruct x as ((((?, ?), ?), ?), ?); simpl.",
                        "VernacExtend",
                        "31c8fae278507edc300bf6fb27a8899c7951ed0d"
                    ]
                },
                {
                    "command": [
                        "unfold PROPx; simpl; rewrite !approx_andp; f_equal.",
                        "VernacExtend",
                        "3ad69d4524367fbff321d0a4963c3e05e9328d83"
                    ]
                },
                {
                    "command": [
                        "unfold LOCALx; simpl; rewrite !approx_andp; f_equal.",
                        "VernacExtend",
                        "1cbc6e47cc40c61e8aea09213199cde552780073"
                    ]
                },
                {
                    "command": [
                        "unfold SEPx; simpl; rewrite !sepcon_emp, !approx_sepcon, ?approx_idem; f_equal.",
                        "VernacExtend",
                        "aa5da00ef9c2085d1b3cb84b1de5d99201058218"
                    ]
                },
                {
                    "command": [
                        "rewrite !approx_exp; apply f_equal; extensionality y.",
                        "VernacExtend",
                        "3482ef384bae607e16d8b366366c70d7e567d271"
                    ]
                },
                {
                    "command": [
                        "rewrite approx_func_ptr'.",
                        "VernacExtend",
                        "6f4a365ef5e802a1817cd2a82dc26b2891719192"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite approx_func_ptr' at 2.",
                        "VernacExtend",
                        "090d02616e8df9751e36e5826892e6f3373cdc4d"
                    ]
                },
                {
                    "command": [
                        "do 3 f_equal.",
                        "VernacExtend",
                        "c21e62c3422d6abf491307169ebac9e492ad6aba"
                    ]
                },
                {
                    "command": [
                        "extensionality a rho'; destruct a.",
                        "VernacExtend",
                        "781d2eb896c4961fcf48bd29b70acce5823c5923"
                    ]
                },
                {
                    "command": [
                        "rewrite !approx_andp, !approx_sepcon, approx_idem; auto.",
                        "VernacExtend",
                        "f68516cb51b3631c4fc709ea842290a9f86fba11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "spawn_post_nonexpansive",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[[]] pre]; auto.",
                        "VernacExtend",
                        "5bee3513eaeee9836836207d2e680070130d7657"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "strong_nat_ind",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "apply IH; induction n; intros i li; inversion li; eauto.",
                        "VernacExtend",
                        "b3f01cb0af6a20b1c7072ed6c46b60e072090feb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}