{
    "filename": "floyd/typecheck_lemmas.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.base.",
            "VernacRequire",
            "71eaece31f1eafc55d4fb2e652963b16885d7953"
        ],
        [
            "Local Open Scope logic.",
            "VernacOpenCloseScope",
            "5937723d189e5aa98ad78e1018bed51ea2c1b0cd"
        ],
        [
            "Lemma denote_tc_assert_andp: forall {CS: compspecs} (a b : tc_assert), denote_tc_assert (tc_andp a b) = andp (denote_tc_assert a) (denote_tc_assert b).",
            "VernacStartTheoremProof",
            "04e8eaa5d5f90045726ca6d1b35721078bdab5f5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply expr2.denote_tc_assert_andp.",
            "VernacExtend",
            "fd32f701ce74be426a6a7509ff8a769c81c0c80e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_orp: forall {CS: compspecs} (a b : tc_assert), denote_tc_assert (tc_orp a b) = orp (denote_tc_assert a) (denote_tc_assert b).",
            "VernacStartTheoremProof",
            "284c470c119a1b35a50735e097155a6366a9ea8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply binop_lemmas2.denote_tc_assert_orp.",
            "VernacExtend",
            "7eb093485bb0ce401cf9425d1ccfce8164d3d891"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_bool: forall {CS: compspecs} b c, denote_tc_assert (tc_bool b c) = prop (b=true).",
            "VernacStartTheoremProof",
            "90cfeb53105ffda79fbca1673e92da64fe5b53b2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho; simpl.",
            "VernacExtend",
            "a92dd453bedc3c86c5541e77caa56c83f8f813e5"
        ],
        [
            "unfold tc_bool.",
            "VernacExtend",
            "8ef993ce48407a60559c34a8714517b0fcfe6fa6"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "apply pred_ext; normalize; apply derives_refl.",
            "VernacExtend",
            "9ab4a2d00ad7bd18d3a662c67d908ac33420eeaf"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "apply @FF_left.",
            "VernacExtend",
            "b2e53f183ffa1fdc1590959dc5a3831192d7f4a5"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neutral_isCastResultType_64: Archi.ptr64 = true -> forall {cs: compspecs} P t t' v rho, is_neutral_cast t' t = true -> P |-- denote_tc_assert (isCastResultType t' t v) rho.",
            "VernacStartTheoremProof",
            "aeacf8afd66660b30ea961ccd0174cb11ba459bc"
        ],
        [
            "intro Hp.",
            "VernacExtend",
            "e6104ec39392f7b12895bf3ebd8b9ec39d682938"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold isCastResultType, classify_cast; rewrite Hp.",
            "VernacExtend",
            "2ce6d34e81676e99513752286bf3ec50dd968b27"
        ],
        [
            "destruct t' as [ | [ | | | ] [ | ] | | [ | ] | | | | |], t as [ | [ | | | ] [ | ] | | [ | ] | | | | |]; try solve [ inv H; simpl; try apply @TT_right; simpl; (destruct (eqb_tac _ _)); apply @TT_right].",
            "VernacExtend",
            "cdf55e2ef40258bad2c6af8fc41ea1a7faf31a30"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "try destruct (eqb_type _ _); apply @TT_right.",
            "VernacExtend",
            "7416ced7bddcbf5b03539e98f1884816897fff41"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold is_neutral_cast in H.",
            "VernacExtend",
            "a61b79f012a4790171d64be32660c7e20e564d70"
        ],
        [
            "destruct (eqb_type (Tpointer t a0) int_or_ptr_type) eqn:H0.",
            "VernacExtend",
            "e601cf24182500f335d7533ef8f35e09a6c4c3d7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite (eqb_type_true _ _ H0).",
            "VernacExtend",
            "32c70cc6e1e0f04390e89fe775336f5488dba029"
        ],
        [
            "destruct (eqb_type (Tpointer t' a) int_or_ptr_type) eqn:H1.",
            "VernacExtend",
            "7b5ad1ff9655063899aa874035c8ae47ce61fe82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply @TT_right.",
            "VernacExtend",
            "31fab69a0b04378f7b3b5a8cd39585934ad34d45"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite (eqb_type_true _ _ H0) in H.",
            "VernacExtend",
            "ca3fc8fa8238fa200dd4f0d2b06f713e9330cc61"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (eqb_type (Tpointer t' a) int_or_ptr_type) eqn:H1.",
            "VernacExtend",
            "7b5ad1ff9655063899aa874035c8ae47ce61fe82"
        ],
        [
            "rewrite (eqb_type_true _ _ H1) in H.",
            "VernacExtend",
            "e850a97ac1d206b51deb83e2e3c85ecc3d88d4a7"
        ],
        [
            "rewrite expr_lemmas4.eqb_type_sym in H.",
            "VernacExtend",
            "d2a0ff746d56957327708b31e50b07b8dd02e553"
        ],
        [
            "rewrite H0 in H.",
            "VernacExtend",
            "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "rewrite orb_true_iff in H.",
            "VernacExtend",
            "b7b31b88f24285e1c7e10bf1681f22fc61ab3f96"
        ],
        [
            "unfold is_pointer_type.",
            "VernacExtend",
            "1ee662d3f652f37fbcdf2b4bfa3a1d0360730b9e"
        ],
        [
            "rewrite H0,H1.",
            "VernacExtend",
            "9b9dcdf1e4ddc69a8207e12d5be14eb0c18c4f05"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simple_if_tac; apply @TT_right.",
            "VernacExtend",
            "813d7e1e35339bcc0d54502ccec3ecb4129ea123"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neutral_isCastResultType_32: Archi.ptr64 = false -> forall {cs: compspecs} P t t' v rho, is_neutral_cast t' t = true -> P |-- denote_tc_assert (isCastResultType t' t v) rho.",
            "VernacStartTheoremProof",
            "4438b86ed138b3e9f85646303540e605eda8ec79"
        ],
        [
            "intro Hp.",
            "VernacExtend",
            "e6104ec39392f7b12895bf3ebd8b9ec39d682938"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold isCastResultType, classify_cast; rewrite Hp.",
            "VernacExtend",
            "2ce6d34e81676e99513752286bf3ec50dd968b27"
        ],
        [
            "unfold isCastResultType; destruct t' as [ | [ | | | ] [ | ] | | [ | ] | | | | |], t as [ | [ | | | ] [ | ] | | [ | ] | | | | |]; try solve [ inv H; simpl; try apply @TT_right; simpl; (destruct (eqb_tac _ _)); apply @TT_right].",
            "VernacExtend",
            "08349fe1e381ade779ad941522005aa8996f45e1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl; simple_if_tac; apply @TT_right.",
            "VernacExtend",
            "b1baeddeb1ef27e22d849cc518db30fc6496d07f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl; simple_if_tac; apply @TT_right.",
            "VernacExtend",
            "b1baeddeb1ef27e22d849cc518db30fc6496d07f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold is_neutral_cast in H.",
            "VernacExtend",
            "a61b79f012a4790171d64be32660c7e20e564d70"
        ],
        [
            "rewrite orb_true_iff in H.",
            "VernacExtend",
            "b7b31b88f24285e1c7e10bf1681f22fc61ab3f96"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite (eqb_type_true _ _ H).",
            "VernacExtend",
            "03cb5d109b0cdc678c1c5e4cfe4c900d30e3770f"
        ],
        [
            "rewrite eqb_type_refl.",
            "VernacExtend",
            "ccdab3d98ef556debd0df1191e8f1dfbe3b6f6b0"
        ],
        [
            "apply @TT_right.",
            "VernacExtend",
            "31fab69a0b04378f7b3b5a8cd39585934ad34d45"
        ],
        [
            "rewrite andb_true_iff in H.",
            "VernacExtend",
            "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite negb_true_iff in H, H0.",
            "VernacExtend",
            "bdefda05c2f2147174bad80faa14491193b8a9f9"
        ],
        [
            "rewrite H,H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "destruct (eqb_type (Tpointer t' a) (Tpointer t a0)); try apply @TT_right.",
            "VernacExtend",
            "ef35ad6de82a0dee2f7cae0a6b9d6ee3e6e5a5dc"
        ],
        [
            "unfold is_pointer_type.",
            "VernacExtend",
            "1ee662d3f652f37fbcdf2b4bfa3a1d0360730b9e"
        ],
        [
            "rewrite H,H0.",
            "VernacExtend",
            "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
        ],
        [
            "apply @TT_right.",
            "VernacExtend",
            "31fab69a0b04378f7b3b5a8cd39585934ad34d45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neutral_isCastResultType: forall {cs: compspecs} P t t' v rho, is_neutral_cast t' t = true -> P |-- denote_tc_assert (isCastResultType t' t v) rho.",
            "VernacStartTheoremProof",
            "fe3305aaa2a4081fd7d81111d475fa96478c715b"
        ],
        [
            "destruct Archi.ptr64 eqn:Hp.",
            "VernacExtend",
            "ddbeb08cfda8118e447ce468b630e255ec886676"
        ],
        [
            "exact (@neutral_isCastResultType_64 Hp).",
            "VernacExtend",
            "e789c8dd33df13fa063ed646c6a4a1fb31a22163"
        ],
        [
            "exact (@neutral_isCastResultType_32 Hp).",
            "VernacExtend",
            "dc0d580f17d90824a07cec92a6264c3b8843ec31"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_andp_TT2: forall e, tc_andp e tc_TT = e.",
            "VernacStartTheoremProof",
            "092c0a94bacbbc73db3201a3ea4c2736899d7c32"
        ],
        [
            "intros; unfold tc_andp.",
            "VernacExtend",
            "d82e7214442df2584da6a832f12c1e5b49394cb4"
        ],
        [
            "destruct e; reflexivity.",
            "VernacExtend",
            "b936eee5257e73f9a5a0f8feb1ce207f600658d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_andp_TT1: forall e, tc_andp tc_TT e = e.",
            "VernacStartTheoremProof",
            "3ea1977902af91f6607013d16d61ba1ddb1e211a"
        ],
        [
            "intros; unfold tc_andp; reflexivity.",
            "VernacExtend",
            "64ca008e9858be3338bb25ee8f03c1507d53237c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite tc_andp_TT1 tc_andp_TT2 : norm.",
            "VernacExtend",
            "0e4415953c58aa1fb24767ad5aa817bbd45bbcd6"
        ],
        [
            "Definition typecheck_LR_strong {cs: compspecs} Delta e lr := match lr with | LLLL => typecheck_lvalue Delta e | RRRR => typecheck_expr Delta e end.",
            "VernacDefinition",
            "8a5b8c2d5f2690c19c36c3d1a9d09de6de0ce2ac"
        ],
        [
            "Definition typecheck_LR {cs: compspecs} Delta e lr := match e with | Ederef e0 t => match lr with | LLLL => tc_andp (typecheck_expr Delta e0) (tc_bool (is_pointer_type (typeof e0))(op_result_type e)) | RRRR => match access_mode t with | By_reference => tc_andp (typecheck_expr Delta e0) (tc_bool (is_pointer_type (typeof e0))(op_result_type e)) | _ => tc_FF (deref_byvalue t) end end | _ => typecheck_LR_strong Delta e lr end.",
            "VernacDefinition",
            "9d8eeea887123b5c596c80658d821791604e712d"
        ],
        [
            "Definition tc_LR_strong {cs: compspecs} Delta e lr := denote_tc_assert (typecheck_LR_strong Delta e lr).",
            "VernacDefinition",
            "7e39074cd3dfec8671cb844b496375238da7a7d3"
        ],
        [
            "Definition tc_LR {cs: compspecs} Delta e lr := denote_tc_assert (typecheck_LR Delta e lr).",
            "VernacDefinition",
            "f9a74a259ce862711782486cdeaca745b48faf87"
        ],
        [
            "Definition eval_LR {cs: compspecs} e lr := match lr with | LLLL => eval_lvalue e | RRRR => eval_expr e end.",
            "VernacDefinition",
            "cbaf538b9200f8817d0a47c9a9c6672a20748891"
        ],
        [
            "Lemma tc_LR_tc_LR_strong: forall {cs: compspecs} Delta e lr rho, tc_LR Delta e lr rho && !! isptr (eval_LR e lr rho) |-- tc_LR_strong Delta e lr rho.",
            "VernacStartTheoremProof",
            "980907f4cdf01e80dd4dd4262267f12739433cc4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold tc_LR, tc_LR_strong, typecheck_LR, typecheck_LR_strong.",
            "VernacExtend",
            "4215f8534d9f6223d1c962975393b98a5ffa66a5"
        ],
        [
            "destruct e; try solve [apply andp_left1; auto].",
            "VernacExtend",
            "0bdfb1d42354ef9823ff887d29e9fbfbc99bd31a"
        ],
        [
            "unfold tc_lvalue, tc_expr.",
            "VernacExtend",
            "5d77b9bf1c0f5e868f5ad8826875b02ef2951f94"
        ],
        [
            "destruct lr; simpl.",
            "VernacExtend",
            "6de213739a6399301c1eeb9add7e54a749944463"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite !denote_tc_assert_andp.",
            "VernacExtend",
            "7c4bae0ae75a4ba8a88d589c6a89d7191b19268e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold denote_tc_isptr.",
            "VernacExtend",
            "198f83f29e5613f199b1c154ed6e53d0f6cd6748"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (access_mode t); try solve [apply andp_left1; auto].",
            "VernacExtend",
            "ac7d72acd61f90d6b9346f30ae1184626abc8711"
        ],
        [
            "rewrite !denote_tc_assert_andp.",
            "VernacExtend",
            "7c4bae0ae75a4ba8a88d589c6a89d7191b19268e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold denote_tc_isptr.",
            "VernacExtend",
            "198f83f29e5613f199b1c154ed6e53d0f6cd6748"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "denote_tc_assert_andp",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply expr2.denote_tc_assert_andp.",
                        "VernacExtend",
                        "fd32f701ce74be426a6a7509ff8a769c81c0c80e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_orp",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply binop_lemmas2.denote_tc_assert_orp.",
                        "VernacExtend",
                        "7eb093485bb0ce401cf9425d1ccfce8164d3d891"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_bool",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho; simpl.",
                        "VernacExtend",
                        "a92dd453bedc3c86c5541e77caa56c83f8f813e5"
                    ]
                },
                {
                    "command": [
                        "unfold tc_bool.",
                        "VernacExtend",
                        "8ef993ce48407a60559c34a8714517b0fcfe6fa6"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; normalize; apply derives_refl.",
                        "VernacExtend",
                        "9ab4a2d00ad7bd18d3a662c67d908ac33420eeaf"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "apply @FF_left.",
                        "VernacExtend",
                        "b2e53f183ffa1fdc1590959dc5a3831192d7f4a5"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neutral_isCastResultType_64",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intro Hp.",
                        "VernacExtend",
                        "e6104ec39392f7b12895bf3ebd8b9ec39d682938"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold isCastResultType, classify_cast; rewrite Hp.",
                        "VernacExtend",
                        "2ce6d34e81676e99513752286bf3ec50dd968b27"
                    ]
                },
                {
                    "command": [
                        "destruct t' as [ | [ | | | ] [ | ] | | [ | ] | | | | |], t as [ | [ | | | ] [ | ] | | [ | ] | | | | |]; try solve [ inv H; simpl; try apply @TT_right; simpl; (destruct (eqb_tac _ _)); apply @TT_right].",
                        "VernacExtend",
                        "cdf55e2ef40258bad2c6af8fc41ea1a7faf31a30"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "try destruct (eqb_type _ _); apply @TT_right.",
                        "VernacExtend",
                        "7416ced7bddcbf5b03539e98f1884816897fff41"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold is_neutral_cast in H.",
                        "VernacExtend",
                        "a61b79f012a4790171d64be32660c7e20e564d70"
                    ]
                },
                {
                    "command": [
                        "destruct (eqb_type (Tpointer t a0) int_or_ptr_type) eqn:H0.",
                        "VernacExtend",
                        "e601cf24182500f335d7533ef8f35e09a6c4c3d7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqb_type_true _ _ H0).",
                        "VernacExtend",
                        "32c70cc6e1e0f04390e89fe775336f5488dba029"
                    ]
                },
                {
                    "command": [
                        "destruct (eqb_type (Tpointer t' a) int_or_ptr_type) eqn:H1.",
                        "VernacExtend",
                        "7b5ad1ff9655063899aa874035c8ae47ce61fe82"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply @TT_right.",
                        "VernacExtend",
                        "31fab69a0b04378f7b3b5a8cd39585934ad34d45"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqb_type_true _ _ H0) in H.",
                        "VernacExtend",
                        "ca3fc8fa8238fa200dd4f0d2b06f713e9330cc61"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H.",
                        "VernacExtend",
                        "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (eqb_type (Tpointer t' a) int_or_ptr_type) eqn:H1.",
                        "VernacExtend",
                        "7b5ad1ff9655063899aa874035c8ae47ce61fe82"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqb_type_true _ _ H1) in H.",
                        "VernacExtend",
                        "e850a97ac1d206b51deb83e2e3c85ecc3d88d4a7"
                    ]
                },
                {
                    "command": [
                        "rewrite expr_lemmas4.eqb_type_sym in H.",
                        "VernacExtend",
                        "d2a0ff746d56957327708b31e50b07b8dd02e553"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H.",
                        "VernacExtend",
                        "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_true_iff in H.",
                        "VernacExtend",
                        "b7b31b88f24285e1c7e10bf1681f22fc61ab3f96"
                    ]
                },
                {
                    "command": [
                        "unfold is_pointer_type.",
                        "VernacExtend",
                        "1ee662d3f652f37fbcdf2b4bfa3a1d0360730b9e"
                    ]
                },
                {
                    "command": [
                        "rewrite H0,H1.",
                        "VernacExtend",
                        "9b9dcdf1e4ddc69a8207e12d5be14eb0c18c4f05"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simple_if_tac; apply @TT_right.",
                        "VernacExtend",
                        "813d7e1e35339bcc0d54502ccec3ecb4129ea123"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neutral_isCastResultType_32",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intro Hp.",
                        "VernacExtend",
                        "e6104ec39392f7b12895bf3ebd8b9ec39d682938"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold isCastResultType, classify_cast; rewrite Hp.",
                        "VernacExtend",
                        "2ce6d34e81676e99513752286bf3ec50dd968b27"
                    ]
                },
                {
                    "command": [
                        "unfold isCastResultType; destruct t' as [ | [ | | | ] [ | ] | | [ | ] | | | | |], t as [ | [ | | | ] [ | ] | | [ | ] | | | | |]; try solve [ inv H; simpl; try apply @TT_right; simpl; (destruct (eqb_tac _ _)); apply @TT_right].",
                        "VernacExtend",
                        "08349fe1e381ade779ad941522005aa8996f45e1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl; simple_if_tac; apply @TT_right.",
                        "VernacExtend",
                        "b1baeddeb1ef27e22d849cc518db30fc6496d07f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl; simple_if_tac; apply @TT_right.",
                        "VernacExtend",
                        "b1baeddeb1ef27e22d849cc518db30fc6496d07f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold is_neutral_cast in H.",
                        "VernacExtend",
                        "a61b79f012a4790171d64be32660c7e20e564d70"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_true_iff in H.",
                        "VernacExtend",
                        "b7b31b88f24285e1c7e10bf1681f22fc61ab3f96"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqb_type_true _ _ H).",
                        "VernacExtend",
                        "03cb5d109b0cdc678c1c5e4cfe4c900d30e3770f"
                    ]
                },
                {
                    "command": [
                        "rewrite eqb_type_refl.",
                        "VernacExtend",
                        "ccdab3d98ef556debd0df1191e8f1dfbe3b6f6b0"
                    ]
                },
                {
                    "command": [
                        "apply @TT_right.",
                        "VernacExtend",
                        "31fab69a0b04378f7b3b5a8cd39585934ad34d45"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H.",
                        "VernacExtend",
                        "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff in H, H0.",
                        "VernacExtend",
                        "bdefda05c2f2147174bad80faa14491193b8a9f9"
                    ]
                },
                {
                    "command": [
                        "rewrite H,H0.",
                        "VernacExtend",
                        "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
                    ]
                },
                {
                    "command": [
                        "destruct (eqb_type (Tpointer t' a) (Tpointer t a0)); try apply @TT_right.",
                        "VernacExtend",
                        "ef35ad6de82a0dee2f7cae0a6b9d6ee3e6e5a5dc"
                    ]
                },
                {
                    "command": [
                        "unfold is_pointer_type.",
                        "VernacExtend",
                        "1ee662d3f652f37fbcdf2b4bfa3a1d0360730b9e"
                    ]
                },
                {
                    "command": [
                        "rewrite H,H0.",
                        "VernacExtend",
                        "6a2c6e8b471f6fb686cf1a7e2e3992d01a326476"
                    ]
                },
                {
                    "command": [
                        "apply @TT_right.",
                        "VernacExtend",
                        "31fab69a0b04378f7b3b5a8cd39585934ad34d45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neutral_isCastResultType",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "destruct Archi.ptr64 eqn:Hp.",
                        "VernacExtend",
                        "ddbeb08cfda8118e447ce468b630e255ec886676"
                    ]
                },
                {
                    "command": [
                        "exact (@neutral_isCastResultType_64 Hp).",
                        "VernacExtend",
                        "e789c8dd33df13fa063ed646c6a4a1fb31a22163"
                    ]
                },
                {
                    "command": [
                        "exact (@neutral_isCastResultType_32 Hp).",
                        "VernacExtend",
                        "dc0d580f17d90824a07cec92a6264c3b8843ec31"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_andp_TT2",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros; unfold tc_andp.",
                        "VernacExtend",
                        "d82e7214442df2584da6a832f12c1e5b49394cb4"
                    ]
                },
                {
                    "command": [
                        "destruct e; reflexivity.",
                        "VernacExtend",
                        "b936eee5257e73f9a5a0f8feb1ce207f600658d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_andp_TT1",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "intros; unfold tc_andp; reflexivity.",
                        "VernacExtend",
                        "64ca008e9858be3338bb25ee8f03c1507d53237c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_LR_tc_LR_strong",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold tc_LR, tc_LR_strong, typecheck_LR, typecheck_LR_strong.",
                        "VernacExtend",
                        "4215f8534d9f6223d1c962975393b98a5ffa66a5"
                    ]
                },
                {
                    "command": [
                        "destruct e; try solve [apply andp_left1; auto].",
                        "VernacExtend",
                        "0bdfb1d42354ef9823ff887d29e9fbfbc99bd31a"
                    ]
                },
                {
                    "command": [
                        "unfold tc_lvalue, tc_expr.",
                        "VernacExtend",
                        "5d77b9bf1c0f5e868f5ad8826875b02ef2951f94"
                    ]
                },
                {
                    "command": [
                        "destruct lr; simpl.",
                        "VernacExtend",
                        "6de213739a6399301c1eeb9add7e54a749944463"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite !denote_tc_assert_andp.",
                        "VernacExtend",
                        "7c4bae0ae75a4ba8a88d589c6a89d7191b19268e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_isptr.",
                        "VernacExtend",
                        "198f83f29e5613f199b1c154ed6e53d0f6cd6748"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (access_mode t); try solve [apply andp_left1; auto].",
                        "VernacExtend",
                        "ac7d72acd61f90d6b9346f30ae1184626abc8711"
                    ]
                },
                {
                    "command": [
                        "rewrite !denote_tc_assert_andp.",
                        "VernacExtend",
                        "7c4bae0ae75a4ba8a88d589c6a89d7191b19268e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_isptr.",
                        "VernacExtend",
                        "198f83f29e5613f199b1c154ed6e53d0f6cd6748"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}