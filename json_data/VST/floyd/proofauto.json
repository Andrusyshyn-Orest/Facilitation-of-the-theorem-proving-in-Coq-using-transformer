{
    "filename": "floyd/proofauto.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "From compcert Require Export common.AST cfrontend.Ctypes cfrontend.Clight.",
            "VernacRequire",
            "bf252460a26bd6df627683290b69b98c32b7b6e6"
        ],
        [
            "Export Cop.",
            "VernacImport",
            "4bde4af507cbc75a616f29f4cae1643b55d3b996"
        ],
        [
            "Require Export VST.floyd.base2.",
            "VernacRequire",
            "95ed0c5e8aef48bd1f3be5512435292df2527f0d"
        ],
        [
            "Require Export VST.floyd.functional_base.",
            "VernacRequire",
            "0af3f75d4fc0f8b62f87304fdc737a4359f28459"
        ],
        [
            "Require Export VST.floyd.client_lemmas.",
            "VernacRequire",
            "0cf6fffd3c4cca9de007359ceff80cd549a40de9"
        ],
        [
            "Require Export VST.floyd.go_lower.",
            "VernacRequire",
            "935b9207cab67bf8cef122f1559605314232f46c"
        ],
        [
            "Require Export VST.floyd.closed_lemmas.",
            "VernacRequire",
            "2d6a7f43b286f888a3355f416c851439ba1b9812"
        ],
        [
            "Require Export VST.floyd.compare_lemmas.",
            "VernacRequire",
            "11c2f254c9e40344d0ee1204722ad3c3297bc5be"
        ],
        [
            "Require Export VST.floyd.semax_tactics.",
            "VernacRequire",
            "23a6648a9fabec24d4d4c7a7fdada1b436c543bc"
        ],
        [
            "Require Export VST.floyd.forward.",
            "VernacRequire",
            "c6d45b8f49a4da135b2c4dab972e863a0f2e2785"
        ],
        [
            "Require Export VST.floyd.subsume_funspec.",
            "VernacRequire",
            "cb8f9724bf2cf66a5b18e779a975b166b2406f67"
        ],
        [
            "Require Export VST.floyd.call_lemmas.",
            "VernacRequire",
            "77b9bf252d28dd9d87930aa20dacc390e0ccd49b"
        ],
        [
            "Require Export VST.floyd.forward_lemmas.",
            "VernacRequire",
            "4a229709d1602a3d5655bb0b9ba18f290d48c14e"
        ],
        [
            "Require Export VST.floyd.for_lemmas.",
            "VernacRequire",
            "e6ae22a6e963bc19b103aab92e99f23ac79921be"
        ],
        [
            "Require Export VST.floyd.nested_pred_lemmas.",
            "VernacRequire",
            "790c059c4eda4921adf6bfd661ffbde2437f0589"
        ],
        [
            "Require Export VST.floyd.nested_field_lemmas.",
            "VernacRequire",
            "f2fd295a421860b93e77e55f3ca55dd7e20557ca"
        ],
        [
            "Require Export VST.floyd.efield_lemmas.",
            "VernacRequire",
            "b8be3ad82bc6eb7607ffa0dc92e9be13f6724999"
        ],
        [
            "Require Export VST.floyd.mapsto_memory_block.",
            "VernacRequire",
            "ded4457e24805b2216068bbdb3a9c9f1b657c267"
        ],
        [
            "Require Export VST.floyd.aggregate_type.",
            "VernacRequire",
            "6706058edfa33793f018e82e2c3c75dbb31047e5"
        ],
        [
            "Require VST.floyd.aggregate_pred.",
            "VernacRequire",
            "f2dab6f34797b0b1a7c996880bedc9c42a72b087"
        ],
        [
            "Export floyd.aggregate_pred.aggregate_pred.",
            "VernacImport",
            "681e2ae3668ffc70e1b949974bb4ecc60d05868a"
        ],
        [
            "Require Export VST.floyd.reptype_lemmas.",
            "VernacRequire",
            "e9c8aa0bf0e8a7835bfadaa1fd22f0b88c29edbc"
        ],
        [
            "Require Export VST.floyd.simpl_reptype.",
            "VernacRequire",
            "b7fbb36145ac25763b777783f494fc4ecaef80a9"
        ],
        [
            "Require Export VST.floyd.data_at_rec_lemmas.",
            "VernacRequire",
            "3cf04523a2d4f7f24976e14be0a9096d68ad8a12"
        ],
        [
            "Require Export VST.floyd.field_at.",
            "VernacRequire",
            "3e5a79c1638b445f323c7ca0990788779c84631a"
        ],
        [
            "Require Export VST.floyd.field_at_wand.",
            "VernacRequire",
            "cae3a914441e0f80cc11e1127227eb3eb4d58e14"
        ],
        [
            "Require Export VST.floyd.field_compat.",
            "VernacRequire",
            "8b2a125c54b48cb39c65962a7886e1827aeb637e"
        ],
        [
            "Require Export VST.floyd.stronger.",
            "VernacRequire",
            "91adf15b7e2451bc2d5a3cede6b8b6f384b729e7"
        ],
        [
            "Require Export VST.floyd.loadstore_mapsto.",
            "VernacRequire",
            "c5730a012c6459c89f4d6b8aeb970d112b1444cd"
        ],
        [
            "Require Export VST.floyd.loadstore_field_at.",
            "VernacRequire",
            "5e3081cc00723ecb6195df0aa54836f213a542de"
        ],
        [
            "Require Export VST.floyd.nested_loadstore.",
            "VernacRequire",
            "ea1706ebf1bbef27011729bd4477eb29b17e437d"
        ],
        [
            "Require Export VST.floyd.local2ptree_denote.",
            "VernacRequire",
            "e19737c007e7478c157ad546dce74318da68670d"
        ],
        [
            "Require Export VST.floyd.local2ptree_eval.",
            "VernacRequire",
            "64c65d460dd01297cee024ad5a087cac96878582"
        ],
        [
            "Require Export VST.floyd.local2ptree_typecheck.",
            "VernacRequire",
            "6e673485191d67544b1dd03979d08076159fc8aa"
        ],
        [
            "Require Export VST.floyd.proj_reptype_lemmas.",
            "VernacRequire",
            "52823ea5076df1f6033c2c349961d40ad5edf80a"
        ],
        [
            "Require Export VST.floyd.replace_refill_reptype_lemmas.",
            "VernacRequire",
            "d123dd7cef2ee614057fee1617afa84b4cb8c84c"
        ],
        [
            "Require Export VST.floyd.sc_set_load_store.",
            "VernacRequire",
            "77442ec96f46c63327c3474a35c28c3e86003b07"
        ],
        [
            "Require Export VST.floyd.unfold_data_at.",
            "VernacRequire",
            "d394e8621a340baeda5a481e56d3fa9737bbbfcf"
        ],
        [
            "Require Export VST.floyd.entailer.",
            "VernacRequire",
            "79eac5dcfaca55dd2902957230bde4f5948f698f"
        ],
        [
            "Require Export VST.floyd.globals_lemmas.",
            "VernacRequire",
            "a14ab72fbcf9be1f28f77a3d30aabeac78cbad6d"
        ],
        [
            "Require Export VST.floyd.diagnosis.",
            "VernacRequire",
            "3ebd79b3a84c00762494ff6f2e667ce03685b551"
        ],
        [
            "Require Export VST.floyd.freezer.",
            "VernacRequire",
            "3181d3da990c77130db250eac9bf62c598343331"
        ],
        [
            "Require Export VST.floyd.deadvars.",
            "VernacRequire",
            "df83c091a53ac11a7274459949371888e5a942d3"
        ],
        [
            "Require Export VST.floyd.hints.",
            "VernacRequire",
            "edc4496c228e8bd2d2697822c7dacb83b65656fe"
        ],
        [
            "Require Export VST.floyd.Clightnotations.",
            "VernacRequire",
            "c7f7f91a0b001348fac5a197a61ad6df91f0b56a"
        ],
        [
            "Require VST.msl.iter_sepcon.",
            "VernacRequire",
            "92985521574416bbed628b955931ff78d9c4d5a6"
        ],
        [
            "Require VST.msl.wand_frame.",
            "VernacRequire",
            "a5c1e7c4bcccb8aeaa5b703b978b5339eba5bb6b"
        ],
        [
            "Require VST.msl.wandQ_frame.",
            "VernacRequire",
            "a5e426278f98b46a6b4c4e94064006528f91f0ec"
        ],
        [
            "Arguments semax {CS} {Espec} Delta Pre%assert cmd%C Post%assert.",
            "VernacArguments",
            "5a59eed01e2c9260f3f5ac74e20a0ca2113cd57e"
        ],
        [
            "Export ListNotations.",
            "VernacImport",
            "00c95fe57e7ccc1d2086257523eea6835ba57682"
        ],
        [
            "Export Clight_Cop2.",
            "VernacImport",
            "74c2e1dcac86e239ba88164e5e5793debf6d82de"
        ],
        [
            "Hint Rewrite add_repr mul_repr sub_repr : entailer_rewrite.",
            "VernacExtend",
            "e89d66a2b8f57d2635b4bdd9b64a944fc3cf8af1"
        ],
        [
            "Hint Rewrite ptrofs_add_repr ptrofs_mul_repr ptrofs_sub_repr : entailer_rewrite.",
            "VernacExtend",
            "89e6468df40856a31b043372c0177da886a35cd9"
        ],
        [
            "Hint Rewrite mul64_repr add64_repr sub64_repr or64_repr and64_repr : entailer_rewrite.",
            "VernacExtend",
            "dcbf6f999d0fe5c4ad43254ca681b5262836b7d3"
        ],
        [
            "Hint Rewrite neg_repr neg64_repr : entailer_rewrite.",
            "VernacExtend",
            "407f32312ae2c16742259367a8b299d6a506fb04"
        ],
        [
            "Hint Rewrite ptrofs_to_int_repr: entailer_rewrite norm.",
            "VernacExtend",
            "8b704aaad4297cef549bbcd402ccb4b529491112"
        ],
        [
            "Lemma Vptrofs_unfold_false: Archi.ptr64 = false -> Vptrofs = fun x => Vint (Ptrofs.to_int x).",
            "VernacStartTheoremProof",
            "f0cf06f3e341e315352f00fcb1d86f1d6f95a696"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Vptrofs.",
            "VernacExtend",
            "056c978d377c295969711a6836029342e12bc535"
        ],
        [
            "extensionality x.",
            "VernacExtend",
            "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Vptrofs_unfold_true: Archi.ptr64 = true -> Vptrofs = fun x => Vlong (Ptrofs.to_int64 x).",
            "VernacStartTheoremProof",
            "61acc5025181922c67b448b1d414b708dfe9fc70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Vptrofs.",
            "VernacExtend",
            "056c978d377c295969711a6836029342e12bc535"
        ],
        [
            "extensionality x.",
            "VernacExtend",
            "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modu_repr: forall x y, 0 <= x <= Int.max_unsigned -> 0 <= y <= Int.max_unsigned -> Int.modu (Int.repr x) (Int.repr y) = Int.repr (x mod y).",
            "VernacStartTheoremProof",
            "25511f3e800c221f10332380a8df6dd272bce10c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Int.modu.",
            "VernacExtend",
            "9b2e081f39bebc74161a74f4f279acba12894baf"
        ],
        [
            "rewrite !Int.unsigned_repr by auto.",
            "VernacExtend",
            "1eae19c1096681356628271f43b2840831c426ef"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite modu_repr using rep_omega : entailer_rewrite norm.",
            "VernacExtend",
            "142dab38cc3c93feabf39fb78ee16fe64d47585d"
        ],
        [
            "Hint Rewrite Vptrofs_unfold_false using reflexivity: entailer_rewrite norm.",
            "VernacExtend",
            "9cd5d93448a546392feb8c0bde2ea85df336a7b0"
        ],
        [
            "Hint Rewrite Vptrofs_unfold_true using reflexivity: entailer_rewrite norm.",
            "VernacExtend",
            "52ff89070ecca6e32aeb49a284a0a10380c203b1"
        ],
        [
            "Hint Extern 1 (Vundef = default_val _) => reflexivity : cancel.",
            "VernacHints",
            "821d950c7064bf42814de574b550fb840a79cc46"
        ],
        [
            "Hint Extern 1 (default_val _ = Vundef) => reflexivity : cancel.",
            "VernacHints",
            "224ed46dd2a32d60a3612ae0a94455bedf0e97b7"
        ],
        [
            "Hint Extern 1 (list_repeat _ Vundef = default_val _) => reflexivity : cancel.",
            "VernacHints",
            "9d064dc676ec98efd370cd66e555897e2d9dae9a"
        ],
        [
            "Hint Extern 1 (default_val _ = list_repeat _ Vundef) => reflexivity : cancel.",
            "VernacHints",
            "9bdf95c700c10cf58f49476efc0ba69e166bd05e"
        ],
        [
            "Hint Extern 1 (Vundef :: _ = default_val _) => reflexivity : cancel.",
            "VernacHints",
            "1db320e0cbbab055eb14e44bed4d6ba42c5198a9"
        ],
        [
            "Hint Extern 1 (default_val _ = Vundef :: _) => reflexivity : cancel.",
            "VernacHints",
            "fb3f44030ac198cfe496ef22f577f64d579a0f05"
        ],
        [
            "Hint Extern 1 (@nil _ = default_val _) => reflexivity : cancel.",
            "VernacHints",
            "a724ed3246d0e262c365a0888092241dc3e5e5fe"
        ],
        [
            "Hint Extern 1 (default_val _ = @nil _) => reflexivity : cancel.",
            "VernacHints",
            "c62656c41fdeb15b077c382b6cef1b9de81486ce"
        ],
        [
            "Instance Inhabitant_mpred : Inhabitant mpred := @FF mpred Nveric.",
            "VernacInstance",
            "e19d6551e1115e0efbdceb706767c3dff50476e4"
        ],
        [
            "Instance Inhabitant_share : Inhabitant share := Share.bot.",
            "VernacInstance",
            "b2fdb63c51e656e3412d325d079830eb1c2512a5"
        ],
        [
            "Arguments deref_noload ty v / .",
            "VernacArguments",
            "9eb11edc39e084dbc43b08f62995c5f51e6f2e9b"
        ],
        [
            "Arguments nested_field_array_type {cs} t gfs lo hi / .",
            "VernacArguments",
            "b1e83c7094f1e1154528bf26da7f5868b553595a"
        ],
        [
            "Arguments nested_field_type {cs} t gfs / .",
            "VernacArguments",
            "dc45ec3885dedf33e7bde0325bd67fd8c67e3216"
        ],
        [
            "Arguments nested_field_offset {cs} t gfs / .",
            "VernacArguments",
            "829e81f8569857e573ded45bd8ec85b201a2c702"
        ],
        [
            "Arguments Z.mul !x !y.",
            "VernacArguments",
            "9e6a16500c3f1a3237a0bd81bab2c9d7c6f72017"
        ],
        [
            "Arguments Z.sub !m !n.",
            "VernacArguments",
            "b8245185b33e6c829836aabb400320d4c491f041"
        ],
        [
            "Arguments Z.add !x !y.",
            "VernacArguments",
            "cdb8554986a2bf43421886c1ccda04a197836e64"
        ],
        [
            "Global Transparent peq.",
            "VernacSetOpacity",
            "49eab70e34ed89514492f16737b8e419552ae2e5"
        ],
        [
            "Global Transparent Archi.ptr64.",
            "VernacSetOpacity",
            "79f719cd12e8992f28cf7ad83d849575398ed6ac"
        ],
        [
            "Ltac step := first [ progress Intros | let x := fresh \"x\" in Intros x | forward | forward_if | forward_call | rep_omega | cstring' | list_solve | EExists | progress (autorewrite with sublist in *|-) | progress (autorewrite with sublist) | progress (autorewrite with norm) | cstring1 | deadvars! | progress_entailer ].",
            "VernacExtend",
            "7de8a539982d280302eb9b3653325f3c4dd54784"
        ]
    ],
    "proofs": [
        {
            "name": "Vptrofs_unfold_false",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs.",
                        "VernacExtend",
                        "056c978d377c295969711a6836029342e12bc535"
                    ]
                },
                {
                    "command": [
                        "extensionality x.",
                        "VernacExtend",
                        "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Vptrofs_unfold_true",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs.",
                        "VernacExtend",
                        "056c978d377c295969711a6836029342e12bc535"
                    ]
                },
                {
                    "command": [
                        "extensionality x.",
                        "VernacExtend",
                        "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modu_repr",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Int.modu.",
                        "VernacExtend",
                        "9b2e081f39bebc74161a74f4f279acba12894baf"
                    ]
                },
                {
                    "command": [
                        "rewrite !Int.unsigned_repr by auto.",
                        "VernacExtend",
                        "1eae19c1096681356628271f43b2840831c426ef"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}