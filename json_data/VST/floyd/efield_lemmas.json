{
    "filename": "floyd/efield_lemmas.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.base2.",
            "VernacRequire",
            "c9732b06b9c2316526989f551596fbf382fa6641"
        ],
        [
            "Require Import VST.floyd.client_lemmas.",
            "VernacRequire",
            "449c8140a2f7afa12f07d13833b2a4f672db98f1"
        ],
        [
            "Require Import VST.floyd.nested_pred_lemmas.",
            "VernacRequire",
            "cf7d8ad82c9b94bc89a30d812bf2c228710d32ea"
        ],
        [
            "Require Import VST.floyd.nested_field_lemmas.",
            "VernacRequire",
            "2ae988fac26931aaa409a9389758d750e8ca6601"
        ],
        [
            "Require Import VST.floyd.fieldlist.",
            "VernacRequire",
            "6ce6e53e006bbd76e20cd3d311dcc8686a22c502"
        ],
        [
            "Local Open Scope logic.",
            "VernacOpenCloseScope",
            "5937723d189e5aa98ad78e1018bed51ea2c1b0cd"
        ],
        [
            "Inductive efield : Type := | eArraySubsc: forall i: expr, efield | eStructField: forall i: ident, efield | eUnionField: forall i: ident, efield.",
            "VernacInductive",
            "9a8835ba91abc7abd6238713da65f686a127cca1"
        ],
        [
            "Section CENV.",
            "VernacBeginSection",
            "7644d97935410cd1c048a15866d6e75d943dd433"
        ],
        [
            "Context {cs: compspecs}.",
            "VernacContext",
            "54247ea3591f081b4582667d94ae6f9e673bf9e3"
        ],
        [
            "Fixpoint nested_efield (e: expr) (efs: list efield) (tts: list type) : expr := match efs, tts with | nil, _ => e | _, nil => e | cons ef efs', cons t0 tts' => match ef with | eArraySubsc ei => Ederef (Ebinop Cop.Oadd (nested_efield e efs' tts') ei (tptr t0)) t0 | eStructField i => Efield (nested_efield e efs' tts') i t0 | eUnionField i => Efield (nested_efield e efs' tts') i t0 end end.",
            "VernacFixpoint",
            "da39b9b47cd01a0f5e1035f55b12fb512eaca638"
        ],
        [
            "Inductive array_subsc_denote {cs: compspecs}: expr -> Z -> environ -> Prop := | array_subsc_denote_intro_int: forall e i rho, Vint (Int.repr i) = eval_expr e rho -> array_subsc_denote e i rho | array_subsc_denote_intro_long: forall e i rho, Vlong (Int64.repr i) = eval_expr e rho -> array_subsc_denote e i rho.",
            "VernacInductive",
            "9a12bc6573d5398a129e0ecfd7f915063e044dc5"
        ],
        [
            "Inductive efield_denote {cs: compspecs}: list efield -> list gfield -> environ -> Prop := | efield_denote_nil: forall rho, efield_denote nil nil rho | efield_denote_ArraySubsc_int: forall ei efs i gfs rho, match typeconv (typeof ei) with | Tint _ Signed _ => Int.min_signed <= i <= Int.max_signed | Tint _ Unsigned _ => 0 <= i <= Int.max_unsigned | _ => False end -> array_subsc_denote ei i rho -> efield_denote efs gfs rho -> efield_denote (eArraySubsc ei :: efs) (ArraySubsc i :: gfs) rho | efield_denote_ArraySubsc: forall ei efs i gfs rho, is_ptrofs_type (typeof ei) = true -> array_subsc_denote ei i rho -> efield_denote efs gfs rho -> efield_denote (eArraySubsc ei :: efs) (ArraySubsc i :: gfs) rho | efield_denote_StructField: forall i efs gfs rho, efield_denote efs gfs rho -> efield_denote (eStructField i :: efs) (StructField i :: gfs) rho | efield_denote_UnionField: forall i efs gfs rho, efield_denote efs gfs rho -> efield_denote (eUnionField i :: efs) (UnionField i :: gfs) rho.",
            "VernacInductive",
            "8eb98abe17fe5b69cb0f605aca6300c27c81a9bf"
        ],
        [
            "Fixpoint typecheck_efield {cs: compspecs} (Delta: tycontext) (efs: list efield) : tc_assert := match efs with | nil => tc_TT | eArraySubsc ei :: efs' => tc_andp (typecheck_expr Delta ei) (typecheck_efield Delta efs') | eStructField i :: efs' => typecheck_efield Delta efs' | eUnionField i :: efs' => typecheck_efield Delta efs' end.",
            "VernacFixpoint",
            "6ca599608e037751db0afd3c723b30e16cbc176e"
        ],
        [
            "Definition tc_efield {cs: compspecs} (Delta: tycontext) (efs: list efield) : environ -> mpred := denote_tc_assert (typecheck_efield Delta efs).",
            "VernacDefinition",
            "f0307034e7b75938424170591ea57ccc42df2275"
        ],
        [
            "Definition typeconv' (ty: type): type := match ty with | Tvoid => remove_attributes ty | Tint I8 _ _ => Tint I32 Signed noattr | Tint I16 _ _ => Tint I32 Signed noattr | Tint I32 _ _ => remove_attributes ty | Tint IBool _ _ => Tint I32 Signed noattr | Tlong _ _ => remove_attributes ty | Tfloat _ _ => remove_attributes ty | Tpointer _ _ => if eqb_type ty int_or_ptr_type then ty else remove_attributes ty | Tarray t _ _ => Tpointer t noattr | Tfunction _ _ _ => Tpointer ty noattr | Tstruct _ _ => remove_attributes ty | Tunion _ _ => remove_attributes ty end.",
            "VernacDefinition",
            "c2585439605369bb68041fed6ab8fd7560a363e3"
        ],
        [
            "Definition type_almost_match e t lr:= match typeof e, t, lr with | _, Tarray t1 _ a1, RRRR => eqb_type (typeconv' (typeof e)) (Tpointer t1 noattr) | _, _, LLLL => eqb_type (typeof e) t | _, _, _ => false end.",
            "VernacDefinition",
            "78aeab330f4a598edf5c3b572331c881afbd8e0e"
        ],
        [
            "Definition type_almost_match' e t lr:= match typeof e, t, lr with | _, _, LLLL => eqb_type (typeof e) t | _, _, _ => false end.",
            "VernacDefinition",
            "39e6369a4a9e82a1831e726932eb841ac5fea341"
        ],
        [
            "Fixpoint legal_nested_efield_rec t_root (gfs: list gfield) (tts: list type): bool := match gfs, tts with | nil, nil => true | nil, _ => false | _ , nil => false | gf :: gfs0, t0 :: tts0 => (legal_nested_efield_rec t_root gfs0 tts0 && eqb_type (nested_field_type t_root gfs) t0)%bool end.",
            "VernacFixpoint",
            "ea1998006f5de3a38963432c78bb0f87f9156c5e"
        ],
        [
            "Definition legal_nested_efield t_root e gfs tts lr := (match gfs with | nil => type_almost_match' e t_root lr | _ => type_almost_match e t_root lr end && legal_nested_efield_rec t_root gfs tts)%bool.",
            "VernacDefinition",
            "f357d72c10ad53866203300bb93ebefe4744d983"
        ],
        [
            "Lemma legal_nested_efield_rec_cons: forall t_root gf gfs t tts, legal_nested_efield_rec t_root (gf :: gfs) (t :: tts) = true -> legal_nested_efield_rec t_root gfs tts = true.",
            "VernacStartTheoremProof",
            "4c8b70205a9abd4a244a3adba749276c06e4f155"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite andb_true_iff in H.",
            "VernacExtend",
            "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typeconv_typeconv'_eq: forall t1 t2, typeconv' t1 = typeconv' t2 -> typeconv t1 = typeconv t2.",
            "VernacStartTheoremProof",
            "a43bb6f9b55e949cde791bd98f29cc4eb6406f0e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct t1 as [| [| | |] | [|] | [|] | | | | |], t2 as [| [| | |] | [|] | [|] | | | | |]; simpl in *; do 2 try match type of H with context [if ?A then _ else _] => destruct A end; congruence.",
            "VernacExtend",
            "46ab0309b667683a357c905f93963fc9cdd42f84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_efield_ind: forall {cs: compspecs} (Delta: tycontext) (efs: list efield), tc_efield Delta efs = match efs with | nil => TT | eArraySubsc ei :: efs' => tc_expr Delta ei && tc_efield Delta efs' | eStructField i :: efs' => tc_efield Delta efs' | eUnionField i :: efs' => tc_efield Delta efs' end.",
            "VernacStartTheoremProof",
            "c282f09a92e961b139babd4d60c66a2aad480999"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct efs; auto.",
            "VernacExtend",
            "e74c6d6b90fe570f678514d5d92ef0644840142c"
        ],
        [
            "destruct e; auto.",
            "VernacExtend",
            "76856f1067b59edd0f1dbf7e9f5967373fe4afa5"
        ],
        [
            "unfold tc_efield.",
            "VernacExtend",
            "6e614439353e8ec34c3858e450d49ba2aace4bf3"
        ],
        [
            "simpl typecheck_efield.",
            "VernacExtend",
            "49a37815532d166dcdffe00b974acd563f7655ae"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "rewrite denote_tc_assert_andp.",
            "VernacExtend",
            "691fd8a4c0b5ae56aebbf46da7865699ac3983c3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typeof_nested_efield': forall rho t_root e ef efs gf gfs t tts, legal_nested_efield_rec t_root (gf :: gfs) (t :: tts) = true -> efield_denote (ef :: efs) (gf :: gfs) rho -> nested_field_type t_root (gf :: gfs) = typeof (nested_efield e (ef :: efs) (t :: tts)).",
            "VernacStartTheoremProof",
            "3bf30e7c512ecf445c91d1e745b9de7cc970367a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite andb_true_iff in H; destruct H.",
            "VernacExtend",
            "2de36c90c92e9594f50583ae673daf9f42b00ab4"
        ],
        [
            "apply eqb_type_true in H1; subst.",
            "VernacExtend",
            "e9d71853689e915202e512ba1a99a608a47bb43c"
        ],
        [
            "destruct ef; reflexivity.",
            "VernacExtend",
            "604c13cf225a7576c963636b654c4390e64d2bb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typeof_nested_efield: forall rho t_root e efs gfs tts lr, legal_nested_efield t_root e gfs tts lr = true -> efield_denote efs gfs rho -> nested_field_type t_root gfs = typeof (nested_efield e efs tts).",
            "VernacStartTheoremProof",
            "138e6ba5b81b1d1773a3b821321c7dd9783b8e8e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold legal_nested_efield in H.",
            "VernacExtend",
            "b39e2f7a39f09c49aef6c5dfd43f1d3dd8af0dd0"
        ],
        [
            "rewrite andb_true_iff in H.",
            "VernacExtend",
            "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "inversion H0; subst; destruct tts; try solve [inversion H1 | simpl; auto | destruct e0; simpl; auto].",
            "VernacExtend",
            "4e0867baaa6909fc51297617f2ce258b90b08b3a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct lr; try discriminate.",
            "VernacExtend",
            "45e12b0c3d375f7e47a8b442aa7cdec140371d9e"
        ],
        [
            "apply eqb_type_true in H; subst.",
            "VernacExtend",
            "433adbc77fe0ee148528bc4fa373f0245a8f480f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply typeof_nested_efield'; eauto.",
            "VernacExtend",
            "c7a67bf689befedd578db5e39d4f356b857510e3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply typeof_nested_efield'; eauto.",
            "VernacExtend",
            "c7a67bf689befedd578db5e39d4f356b857510e3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply typeof_nested_efield'; eauto.",
            "VernacExtend",
            "c7a67bf689befedd578db5e39d4f356b857510e3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply typeof_nested_efield'; eauto.",
            "VernacExtend",
            "c7a67bf689befedd578db5e39d4f356b857510e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma offset_val_sem_add_pi: forall ofs t0 si e rho i, match si with | Signed => Int.min_signed <= i <= Int.max_signed | Unsigned => 0 <= i <= Int.max_unsigned end -> offset_val ofs (force_val (Cop.sem_add_ptr_int _ t0 si (eval_expr e rho) (Vint (Int.repr i)))) = offset_val ofs (offset_val (sizeof t0 * i) (eval_expr e rho)).",
            "VernacStartTheoremProof",
            "3f9517b1e3eeeb379a021bca259db87fed791c89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eval_expr e rho); try reflexivity.",
            "VernacExtend",
            "78d71a9783fd444bc11b0ace7baeb82e3e043a54"
        ],
        [
            "rewrite sem_add_pi_ptr; auto.",
            "VernacExtend",
            "8196ce825446a23c11d1f545bb68de9f28c3f94b"
        ],
        [
            "apply I.",
            "VernacExtend",
            "d00bb56d6588fc5d3ac997e6baa643f8db1aa956"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma By_reference_eval_expr: forall Delta e rho, access_mode (typeof e) = By_reference -> tc_environ Delta rho -> tc_lvalue Delta e rho |-- !! (eval_expr e rho = eval_lvalue e rho).",
            "VernacStartTheoremProof",
            "bdeeb41b10bbf2cb0c9c209d8b2c2d2f9fa38cc9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply derives_trans.",
            "VernacExtend",
            "74bf196b92978065d64297654462f01dbd4ed9a4"
        ],
        [
            "apply typecheck_lvalue_sound; auto.",
            "VernacExtend",
            "9c61d6995afb75fc1dc7dbd8145d8d27dcea1f28"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "destruct e; try contradiction; simpl in *; reflexivity.",
            "VernacExtend",
            "a344a3bed0529c5035724988e60127d5af0fa457"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma By_reference_tc_expr: forall Delta e rho, access_mode (typeof e) = By_reference -> tc_environ Delta rho -> tc_lvalue Delta e rho |-- tc_expr Delta e rho.",
            "VernacStartTheoremProof",
            "e96da5344e3a10487a357a60a7d3dfabe4bf6137"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold tc_lvalue, tc_expr.",
            "VernacExtend",
            "5d77b9bf1c0f5e868f5ad8826875b02ef2951f94"
        ],
        [
            "destruct e; simpl in *; try apply @FF_left; rewrite H; auto.",
            "VernacExtend",
            "dc4bbab27a0d44ce12567658327d231da1aa1671"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition LR_of_type (t: type) := match t with | Tarray _ _ _ => RRRR | _ => LLLL end.",
            "VernacDefinition",
            "1eee35f2d7d6d134baeb8ce9f57358d69c78e473"
        ],
        [
            "Lemma legal_nested_efield_weaken: forall t_root e gfs tts, legal_nested_efield t_root e gfs tts (LR_of_type t_root) = true -> legal_nested_efield_rec t_root gfs tts = true /\\ type_almost_match e t_root (LR_of_type t_root) = true.",
            "VernacStartTheoremProof",
            "d75f16634029a4fd47669ac3acfee352b032f540"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold legal_nested_efield in H.",
            "VernacExtend",
            "b39e2f7a39f09c49aef6c5dfd43f1d3dd8af0dd0"
        ],
        [
            "rewrite andb_true_iff in H.",
            "VernacExtend",
            "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
        ],
        [
            "split; [tauto |].",
            "VernacExtend",
            "eeb813fb82348c980411a834a36457ed83056acd"
        ],
        [
            "destruct gfs; [| tauto].",
            "VernacExtend",
            "2583106ccf79153a5f1e4eff2b890bf7961c9ab5"
        ],
        [
            "destruct H as [? _].",
            "VernacExtend",
            "8866aea99b3fa2b02b2674afa91c0a8f539221fc"
        ],
        [
            "unfold type_almost_match' in H.",
            "VernacExtend",
            "d5787ca8ea42e7dc97664a91d059a9276707cc52"
        ],
        [
            "unfold type_almost_match.",
            "VernacExtend",
            "38f9b7fb80814ddb38c47c38648b3e3de29dccaa"
        ],
        [
            "destruct (LR_of_type t_root), t_root, (typeof e); simpl in H |- *; try inv H; auto.",
            "VernacExtend",
            "1e18834899f5eba87faa774b72dc5ed10bcd96a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weakened_legal_nested_efield_spec: forall t_root e gfs efs tts rho, legal_nested_efield_rec t_root gfs tts = true -> type_almost_match e t_root (LR_of_type t_root) = true -> efield_denote efs gfs rho -> typeconv' (nested_field_type t_root gfs) = typeconv' (typeof (nested_efield e efs tts)).",
            "VernacStartTheoremProof",
            "ded594fb46a0266ccb7b5247330007554eb7c71e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H1; subst; destruct tts; try solve [inv H].",
            "VernacExtend",
            "1a24d59b695b442afebdb140f4c72e3d0b96b954"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite nested_field_type_ind.",
            "VernacExtend",
            "be338b58c655cea37c684ce09d961b06f45f76ea"
        ],
        [
            "simpl typeof.",
            "VernacExtend",
            "dddffccfe33ffd1e1020766b7926f821686dbe50"
        ],
        [
            "unfold type_almost_match in H0.",
            "VernacExtend",
            "b1b01f4f2e89d944f9723540ff241910c10ea6c8"
        ],
        [
            "destruct (LR_of_type t_root), t_root, (typeof e); try solve [inv H0]; auto; try (apply eqb_type_spec in H0; rewrite H0; auto).",
            "VernacExtend",
            "06649f5b68e57d933527f7f87053e6e6cb8a96e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eapply typeof_nested_efield'; eauto.",
            "VernacExtend",
            "c7a67bf689befedd578db5e39d4f356b857510e3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eapply typeof_nested_efield'; eauto.",
            "VernacExtend",
            "c7a67bf689befedd578db5e39d4f356b857510e3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eapply typeof_nested_efield'; eauto.",
            "VernacExtend",
            "c7a67bf689befedd578db5e39d4f356b857510e3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eapply typeof_nested_efield'; eauto.",
            "VernacExtend",
            "c7a67bf689befedd578db5e39d4f356b857510e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma classify_add_typeconv: forall t n a ty, typeconv (Tarray t n a) = typeconv ty -> Cop.classify_add ty = Cop.classify_add (Tpointer t a).",
            "VernacStartTheoremProof",
            "928001dd4742c1561ed94f41f4c4a5452e562a0a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "extensionality t2.",
            "VernacExtend",
            "7d293d8e48190aba52edd36b1326622407f5647b"
        ],
        [
            "destruct ty; inv H.",
            "VernacExtend",
            "520635309f46e1bca97da89d40d1c932ab36bfc4"
        ],
        [
            "destruct i; inv H1.",
            "VernacExtend",
            "fd0f5e4805018d56c851069afabdd9b3f230cab8"
        ],
        [
            "all: simpl; destruct (typeconv t2); auto.",
            "VernacExtend",
            "172323bcc66f1183ef9d46fe1edada0c36b5e665"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isBinOpResultType_add_ptr_ptrofs: forall e t n a t0 ei, is_ptrofs_type (typeof ei) = true -> typeconv (Tarray t0 n a) = typeconv (typeof e) -> complete_legal_cosu_type t0 = true -> eqb_type (typeof e) int_or_ptr_type = false -> isBinOpResultType Cop.Oadd e ei (tptr t) = tc_isptr e.",
            "VernacStartTheoremProof",
            "c85d760d73a68c50699426ca6030978d6738e6b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold isBinOpResultType.",
            "VernacExtend",
            "ff9fe0b2173e11a06274be6d484e03c41cff229c"
        ],
        [
            "rewrite (classify_add_typeconv _ _ _ _ H0).",
            "VernacExtend",
            "188e279f293cff6523732bd18086b340e465a81a"
        ],
        [
            "destruct (typeof ei); inv H.",
            "VernacExtend",
            "d4138abd0dae877ee5e572303c64f2d6a3ec1e83"
        ],
        [
            "apply complete_legal_cosu_type_complete_type in H1.",
            "VernacExtend",
            "28d789e3d5977081dc1d5c9cf5526ffc19d52124"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "try destruct i; rewrite H1; simpl tc_bool; cbv iota; rewrite andb_false_r; simpl; rewrite tc_andp_TT2; unfold tc_int_or_ptr_type; rewrite H2; simpl; auto.",
            "VernacExtend",
            "3f7d9f5daaf85648801cb59043a734eddfbb1907"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isBinOpResultType_add_ptr: forall e t n a t0 ei, is_int_type (typeof ei) = true -> typeconv (Tarray t0 n a) = typeconv (typeof e) -> complete_legal_cosu_type t0 = true -> eqb_type (typeof e) int_or_ptr_type = false -> isBinOpResultType Cop.Oadd e ei (tptr t) = tc_isptr e.",
            "VernacStartTheoremProof",
            "ccc9cd262e1216c056468d77f4534cdbf539eab3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold isBinOpResultType.",
            "VernacExtend",
            "ff9fe0b2173e11a06274be6d484e03c41cff229c"
        ],
        [
            "rewrite (classify_add_typeconv _ _ _ _ H0).",
            "VernacExtend",
            "188e279f293cff6523732bd18086b340e465a81a"
        ],
        [
            "destruct (typeof ei); inv H.",
            "VernacExtend",
            "d4138abd0dae877ee5e572303c64f2d6a3ec1e83"
        ],
        [
            "apply complete_legal_cosu_type_complete_type in H1.",
            "VernacExtend",
            "28d789e3d5977081dc1d5c9cf5526ffc19d52124"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct i; rewrite H1; simpl tc_bool; cbv iota; rewrite andb_false_r; simpl; rewrite tc_andp_TT2; unfold tc_int_or_ptr_type; rewrite H2; simpl; auto.",
            "VernacExtend",
            "827c6719fc22b9fc27eba5b6876c7541b4efd830"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition add_case_pptrofs t si := if Archi.ptr64 then Cop.add_case_pl t else Cop.add_case_pi t si.",
            "VernacDefinition",
            "a16a534fef74a7f6e7bfb1da6db05a2f401400a0"
        ],
        [
            "Lemma array_op_facts_ptrofs: forall ei rho t_root e efs gfs tts t n a t0 p, legal_nested_efield_rec t_root gfs tts = true -> type_almost_match e t_root (LR_of_type t_root) = true -> is_ptrofs_type (typeof ei) = true -> nested_field_type t_root gfs = Tarray t n a -> field_compatible t_root gfs p -> efield_denote efs gfs rho -> (exists si, Cop.classify_add (typeof (nested_efield e efs tts)) (typeof ei) = add_case_pptrofs t si) /\\ isBinOpResultType Cop.Oadd (nested_efield e efs tts) ei (tptr t0) = tc_isptr (nested_efield e efs tts).",
            "VernacStartTheoremProof",
            "dde34821c65d855a40352fde24717d523aab0c94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (weakened_legal_nested_efield_spec _ _ _ _ _ _ H H0 H4).",
            "VernacExtend",
            "130c72c1c762d576bbc2a37d669b65bc7c3c92ac"
        ],
        [
            "rewrite H2 in H5.",
            "VernacExtend",
            "62bf9fbd634770cf7f52af2924d8f61336c6b57a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "erewrite classify_add_typeconv by (apply typeconv_typeconv'_eq; eassumption).",
            "VernacExtend",
            "06b0cef08fb2348bf6c17c98dd275397619c07e8"
        ],
        [
            "destruct (typeof ei); inv H1.",
            "VernacExtend",
            "d85f8a76ac108de4244783c9e3d46f2ab2366fd9"
        ],
        [
            "try (exists Unsigned; reflexivity); destruct i; simpl; eexists; reflexivity.",
            "VernacExtend",
            "9ad30fe13d1041a9f4fc1258ccbb960ad7a25caa"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply isBinOpResultType_add_ptr_ptrofs; [auto | apply typeconv_typeconv'_eq; eassumption | |].",
            "VernacExtend",
            "e39f7e3ce191064714971ee41a4e257750f3f8a0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H3 as [_ [? [_ [_ ?]]]].",
            "VernacExtend",
            "f6cf2787619a0f1cd33a7cc41d9415d55cf06bae"
        ],
        [
            "eapply nested_field_type_complete_legal_cosu_type with (gfs0 := gfs) in H3; auto.",
            "VernacExtend",
            "702b70c75752a9d2bcf5cfe0dd63a5660559a167"
        ],
        [
            "rewrite H2 in H3.",
            "VernacExtend",
            "009aed681b5bf7878390422291392aff7e71e42a"
        ],
        [
            "exact H3.",
            "VernacExtend",
            "8a748b9864755088f1affa06f3aea57ca19b1ab0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (typeof (nested_efield e efs tts)); try solve [inv H5]; apply eqb_type_false; try (unfold int_or_ptr_type; congruence).",
            "VernacExtend",
            "48aae800a3c1dd3c4a4e8a00280b854cb51d1d96"
        ],
        [
            "Opaque eqb_type.",
            "VernacSetOpacity",
            "d1896344b8adb4b46b5a8c48c2d0950fd7f9612e"
        ],
        [
            "simpl in H5.",
            "VernacExtend",
            "03fbfc7bb6b248b41f6241227db3e5c410547157"
        ],
        [
            "Transparent eqb_type.",
            "VernacSetOpacity",
            "d423301956e6c2f5f6dc1a02e9bcfabcc89867c2"
        ],
        [
            "destruct (eqb_type (Tpointer t1 a0) int_or_ptr_type) eqn:?H.",
            "VernacExtend",
            "04576736ff3822ecab1a903f0513763318daebc4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply eqb_type_true in H6.",
            "VernacExtend",
            "731729deb3d18ae89e758b899eb142dea1049f72"
        ],
        [
            "unfold int_or_ptr_type in *; inv H5; inv H6.",
            "VernacExtend",
            "068fac069f817ec331b2d05e3f79ef3ca6d4e0e3"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply eqb_type_false in H6; auto.",
            "VernacExtend",
            "2a3bbb52dd96d93e38406b0f9a33c9fa3cf492d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma array_op_facts: forall ei rho t_root e efs gfs tts t n a t0 p, legal_nested_efield_rec t_root gfs tts = true -> type_almost_match e t_root (LR_of_type t_root) = true -> is_int_type (typeof ei) = true -> nested_field_type t_root gfs = Tarray t n a -> field_compatible t_root gfs p -> efield_denote efs gfs rho -> (exists si, Cop.classify_add (typeof (nested_efield e efs tts)) (typeof ei) = Cop.add_case_pi t si) /\\ isBinOpResultType Cop.Oadd (nested_efield e efs tts) ei (tptr t0) = tc_isptr (nested_efield e efs tts).",
            "VernacStartTheoremProof",
            "82d7ff4d09dea3495104477e960eeca120fbdf43"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (weakened_legal_nested_efield_spec _ _ _ _ _ _ H H0 H4).",
            "VernacExtend",
            "130c72c1c762d576bbc2a37d669b65bc7c3c92ac"
        ],
        [
            "rewrite H2 in H5.",
            "VernacExtend",
            "62bf9fbd634770cf7f52af2924d8f61336c6b57a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "erewrite classify_add_typeconv by (apply typeconv_typeconv'_eq; eassumption).",
            "VernacExtend",
            "06b0cef08fb2348bf6c17c98dd275397619c07e8"
        ],
        [
            "destruct (typeof ei); inv H1.",
            "VernacExtend",
            "d85f8a76ac108de4244783c9e3d46f2ab2366fd9"
        ],
        [
            "destruct i; simpl; eexists; reflexivity.",
            "VernacExtend",
            "a216dbd96ea806f3b0bda3b51a6968fc44c63ba0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply isBinOpResultType_add_ptr; [auto | apply typeconv_typeconv'_eq; eassumption | |].",
            "VernacExtend",
            "9625f85d7d2287746f5ff0e6437893eace5ae08a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H3 as [_ [? [_ [_ ?]]]].",
            "VernacExtend",
            "f6cf2787619a0f1cd33a7cc41d9415d55cf06bae"
        ],
        [
            "eapply nested_field_type_complete_legal_cosu_type with (gfs0 := gfs) in H3; auto.",
            "VernacExtend",
            "702b70c75752a9d2bcf5cfe0dd63a5660559a167"
        ],
        [
            "rewrite H2 in H3.",
            "VernacExtend",
            "009aed681b5bf7878390422291392aff7e71e42a"
        ],
        [
            "exact H3.",
            "VernacExtend",
            "8a748b9864755088f1affa06f3aea57ca19b1ab0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (typeof (nested_efield e efs tts)); try solve [inv H5]; apply eqb_type_false; try (unfold int_or_ptr_type; congruence).",
            "VernacExtend",
            "48aae800a3c1dd3c4a4e8a00280b854cb51d1d96"
        ],
        [
            "Opaque eqb_type.",
            "VernacSetOpacity",
            "d1896344b8adb4b46b5a8c48c2d0950fd7f9612e"
        ],
        [
            "simpl in H5.",
            "VernacExtend",
            "03fbfc7bb6b248b41f6241227db3e5c410547157"
        ],
        [
            "Transparent eqb_type.",
            "VernacSetOpacity",
            "d423301956e6c2f5f6dc1a02e9bcfabcc89867c2"
        ],
        [
            "destruct (eqb_type (Tpointer t1 a0) int_or_ptr_type) eqn:?H.",
            "VernacExtend",
            "04576736ff3822ecab1a903f0513763318daebc4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply eqb_type_true in H6.",
            "VernacExtend",
            "731729deb3d18ae89e758b899eb142dea1049f72"
        ],
        [
            "unfold int_or_ptr_type in *; inv H5; inv H6.",
            "VernacExtend",
            "068fac069f817ec331b2d05e3f79ef3ca6d4e0e3"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply eqb_type_false in H6; auto.",
            "VernacExtend",
            "2a3bbb52dd96d93e38406b0f9a33c9fa3cf492d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ptrofs_repr_Int_signed_special: Archi.ptr64=false -> forall i, Ptrofs.repr (Int.signed (Int.repr i)) = Ptrofs.repr i.",
            "VernacStartTheoremProof",
            "085b98d872f496b4303a8bbacbff01180fdb9934"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Ptrofs.eqm_samerepr.",
            "VernacExtend",
            "75df36cec18a82f0bdf8bb098ef3485b74f85685"
        ],
        [
            "unfold Ptrofs.eqm.",
            "VernacExtend",
            "ac2c4598f60a1e3c8ebaea1431ce30082e758e16"
        ],
        [
            "rewrite (Ptrofs.modulus_eq32 H).",
            "VernacExtend",
            "c0335372e0cab9ec5de760cfef25f1ab6f32393e"
        ],
        [
            "change (Int.eqmod Int.modulus (Int.signed (Int.repr i)) i).",
            "VernacExtend",
            "7bd6f57ca86f13da566b786b4491eb1399a449a5"
        ],
        [
            "rewrite Int.signed_repr_eq.",
            "VernacExtend",
            "5f5c9cdc71db4396169abc474ae01863ed8c658b"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "apply Int.eqmod_sym.",
            "VernacExtend",
            "aa246d34b26317d2915dc3c75f7566bf1908385d"
        ],
        [
            "apply Int.eqmod_mod.",
            "VernacExtend",
            "2efe33eb5d858b67e683131836e19369ac82adfd"
        ],
        [
            "computable.",
            "VernacExtend",
            "0ec9007776f5ee4cc0bb3f3af5e413aab823693c"
        ],
        [
            "apply Int.eqmod_sym.",
            "VernacExtend",
            "aa246d34b26317d2915dc3c75f7566bf1908385d"
        ],
        [
            "eapply Int.eqmod_trans.",
            "VernacExtend",
            "74038901c9d767d77877950addbf815da805b262"
        ],
        [
            "apply Int.eqmod_mod.",
            "VernacExtend",
            "2efe33eb5d858b67e683131836e19369ac82adfd"
        ],
        [
            "computable.",
            "VernacExtend",
            "0ec9007776f5ee4cc0bb3f3af5e413aab823693c"
        ],
        [
            "rewrite <- (Z.sub_0_r (i mod Int.modulus)) at 1.",
            "VernacExtend",
            "ea94ed976830914a92bca05af26c81ba53c331e1"
        ],
        [
            "apply Int.eqmod_sub.",
            "VernacExtend",
            "aad95b04775aaae68d5695dd3a06f06f20430501"
        ],
        [
            "apply Int.eqmod_refl.",
            "VernacExtend",
            "dd65aa62a99dd7c8cdd1376374766b4f778c7b54"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "exists (-1).",
            "VernacExtend",
            "10cfb9c5f69f349790dc8e74c7e676b4b9d8ae27"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ptrofs_repr_Int_unsigned_special: Archi.ptr64=false -> forall i, Ptrofs.repr (Int.unsigned (Int.repr i)) = Ptrofs.repr i.",
            "VernacStartTheoremProof",
            "c4967833721786ad73b6f0f5edbe7e2b227bcaee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Ptrofs.agree32_repr H i).",
            "VernacExtend",
            "995ec30c656636cf7c91ca368c53475ccfe1534c"
        ],
        [
            "hnf in H0.",
            "VernacExtend",
            "ef2ef5338fe3c3f98be9c585e08b6598bfd5a754"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply Ptrofs.repr_unsigned.",
            "VernacExtend",
            "7a19e804f24963fcaff1c881440937407bd22cb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ptrofs_repr_Int64_unsigned_special: Archi.ptr64=true -> forall i, Ptrofs.repr (Int64.unsigned (Int64.repr i)) = Ptrofs.repr i.",
            "VernacStartTheoremProof",
            "3f1aff66bb00adfae614b930f449425d954b0b5a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Ptrofs.agree64_repr H i).",
            "VernacExtend",
            "539c113e59f124694d93bd7d2bd6307a66652a5b"
        ],
        [
            "hnf in H0.",
            "VernacExtend",
            "ef2ef5338fe3c3f98be9c585e08b6598bfd5a754"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply Ptrofs.repr_unsigned.",
            "VernacExtend",
            "7a19e804f24963fcaff1c881440937407bd22cb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sem_add_ptr_ptrofs t si := if Archi.ptr64 then sem_add_ptr_long t else sem_add_ptr_int t si.",
            "VernacDefinition",
            "f97b2e758fc739047012e7a332e66c99a38fe687"
        ],
        [
            "Lemma sem_add_pptrofs_ptr_special: forall t si p i, isptr p -> sem_add_ptr_ptrofs t si p (Vptrofs (Ptrofs.repr i)) = Some (offset_val (sizeof t * i) p).",
            "VernacStartTheoremProof",
            "8e9110528d17f83a6c8ca40857bf94b2df509065"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sem_add_ptr_ptrofs, sem_add_ptr_int, sem_add_ptr_long.",
            "VernacExtend",
            "2fca0bc5126ed3f750386f1b595a6b39e08c3a3e"
        ],
        [
            "destruct p; try contradiction.",
            "VernacExtend",
            "37341727d80c03a0b4c7e5d341aa44c21eb8d9ff"
        ],
        [
            "unfold offset_val, Cop.sem_add_ptr_long, Cop.sem_add_ptr_int.",
            "VernacExtend",
            "c3b320d35b3d3287773bbccb2084498a90ad0e70"
        ],
        [
            "unfold Vptrofs, Cop.ptrofs_of_int, Ptrofs.of_ints, Ptrofs.of_intu, Ptrofs.of_int.",
            "VernacExtend",
            "b674483a2b2fb06eee0a2dc844d37ae9cf0fa762"
        ],
        [
            "destruct Archi.ptr64 eqn:Hp.",
            "VernacExtend",
            "ddbeb08cfda8118e447ce468b630e255ec886676"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Ptrofs.of_int64_to_int64 by auto.",
            "VernacExtend",
            "7392daf54558252f15687ac7052f8eecad8601ec"
        ],
        [
            "rewrite <- ptrofs_mul_repr; f_equal.",
            "VernacExtend",
            "3d3aef250ae3acef742595af3929b77140ff1d05"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct si.",
            "VernacExtend",
            "a2e235746346cb3563c9b3600b233afe0dbd5998"
        ],
        [
            "rewrite <- ptrofs_mul_repr; f_equal.",
            "VernacExtend",
            "3d3aef250ae3acef742595af3929b77140ff1d05"
        ],
        [
            "rewrite ptrofs_to_int_repr.",
            "VernacExtend",
            "21c0e5205e83241535f07ae84372dece7fe0b757"
        ],
        [
            "rewrite Ptrofs_repr_Int_signed_special by auto.",
            "VernacExtend",
            "174474a5414651f03b5e0c41a23b0b7b5f2e2902"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- ptrofs_mul_repr; f_equal.",
            "VernacExtend",
            "3d3aef250ae3acef742595af3929b77140ff1d05"
        ],
        [
            "rewrite ptrofs_to_int_repr.",
            "VernacExtend",
            "21c0e5205e83241535f07ae84372dece7fe0b757"
        ],
        [
            "rewrite Ptrofs_repr_Int_unsigned_special by auto.",
            "VernacExtend",
            "a8bd2ca46fb00d6884b4e9de8affdc150a936895"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_add_pi_ptr_special: forall t p i si, isptr p -> match si with | Signed => Int.min_signed <= i <= Int.max_signed | Unsigned => 0 <= i <= Int.max_unsigned end -> sem_add_ptr_int t si p (Vint (Int.repr i)) = Some (offset_val (sizeof t * i) p).",
            "VernacStartTheoremProof",
            "af9e281130e2e031a9f76f673e52e31d28673756"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sem_add_ptr_int.",
            "VernacExtend",
            "ecbc1625750484a91b893c2669371df010701836"
        ],
        [
            "destruct p; try contradiction.",
            "VernacExtend",
            "37341727d80c03a0b4c7e5d341aa44c21eb8d9ff"
        ],
        [
            "unfold offset_val, Cop.sem_add_ptr_int.",
            "VernacExtend",
            "06904b2b36ac8f4e02e2e922462be289048bd1f0"
        ],
        [
            "unfold Cop.ptrofs_of_int, Ptrofs.of_ints, Ptrofs.of_intu, Ptrofs.of_int.",
            "VernacExtend",
            "5e3c147407edfa3abfdeb1933d718e3dcd6cd4c6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct si; rewrite <- ptrofs_mul_repr; f_equal.",
            "VernacExtend",
            "299779f22405f0e1414852abdd9ceb64d0ac8b0a"
        ],
        [
            "rewrite Int.signed_repr; auto.",
            "VernacExtend",
            "d2a3627d99a158baec9a5dfb0e0dbe190f5a271f"
        ],
        [
            "rewrite Int.unsigned_repr; auto.",
            "VernacExtend",
            "536e4f297b7a8fbe3aae6f72cb2f7619e7f2c464"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_add_pi_ptr_special': Archi.ptr64 = false -> forall t p i si, isptr p -> sem_add_ptr_int t si p (Vint (Int.repr i)) = Some (offset_val (sizeof t * i) p).",
            "VernacStartTheoremProof",
            "32e0fb053433f687c17997279b7b748dcd4ae4eb"
        ],
        [
            "intros Hp.",
            "VernacExtend",
            "0d182bb40b8031c4600e3269c2ebd963ee67d06b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sem_add_ptr_int.",
            "VernacExtend",
            "ecbc1625750484a91b893c2669371df010701836"
        ],
        [
            "destruct p; try contradiction.",
            "VernacExtend",
            "37341727d80c03a0b4c7e5d341aa44c21eb8d9ff"
        ],
        [
            "unfold offset_val, Cop.sem_add_ptr_int.",
            "VernacExtend",
            "06904b2b36ac8f4e02e2e922462be289048bd1f0"
        ],
        [
            "unfold Cop.ptrofs_of_int, Ptrofs.of_ints, Ptrofs.of_intu, Ptrofs.of_int.",
            "VernacExtend",
            "5e3c147407edfa3abfdeb1933d718e3dcd6cd4c6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct si; rewrite <- ptrofs_mul_repr; f_equal.",
            "VernacExtend",
            "299779f22405f0e1414852abdd9ceb64d0ac8b0a"
        ],
        [
            "apply (Ptrofs_repr_Int_signed_special Hp).",
            "VernacExtend",
            "ffd4ba52722c97e6ea6beba52f686fcf932275ff"
        ],
        [
            "apply (Ptrofs_repr_Int_unsigned_special Hp).",
            "VernacExtend",
            "46b614cccd474fd0f2874da22667cc73af50fc27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_add_pl_ptr_special': Archi.ptr64 = true -> forall t p i, isptr p -> sem_add_ptr_long t p (Vlong (Int64.repr i)) = Some (offset_val (sizeof t * i) p).",
            "VernacStartTheoremProof",
            "347bf0cd8aa224035d453a7495a2b8fb26c2e3ab"
        ],
        [
            "intros Hp.",
            "VernacExtend",
            "0d182bb40b8031c4600e3269c2ebd963ee67d06b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sem_add_ptr_long.",
            "VernacExtend",
            "c9f6a480aa925686783f1bb72a71422f7cb44719"
        ],
        [
            "destruct p; try contradiction.",
            "VernacExtend",
            "37341727d80c03a0b4c7e5d341aa44c21eb8d9ff"
        ],
        [
            "unfold offset_val, Cop.sem_add_ptr_long.",
            "VernacExtend",
            "f147f4155cd100019fe89af580acf40637af5e2d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite (Ptrofs.agree64_of_int_eq (Ptrofs.repr i)) by (apply Ptrofs.agree64_repr; auto).",
            "VernacExtend",
            "e3170588aae15c2ca89eda669577debb3aa0494e"
        ],
        [
            "rewrite ptrofs_mul_repr.",
            "VernacExtend",
            "1c12a1045c66834f33da45ffa1a562b73a81131b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma array_ind_step_ptrofs: forall Delta ei i rho t_root e efs gfs tts t n a t0 p, legal_nested_efield_rec t_root gfs tts = true -> type_almost_match e t_root (LR_of_type t_root) = true -> is_ptrofs_type (typeof ei) = true -> array_subsc_denote ei i rho -> nested_field_type t_root gfs = Tarray t0 n a -> tc_environ Delta rho -> efield_denote efs gfs rho -> field_compatible t_root gfs p -> tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta efs rho |-- !! (field_address t_root gfs p = eval_LR (nested_efield e efs tts) (LR_of_type (Tarray t0 n a)) rho) && tc_LR_strong Delta (nested_efield e efs tts) (LR_of_type (Tarray t0 n a)) rho -> tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta (eArraySubsc ei :: efs) rho |-- !! (offset_val (gfield_offset (nested_field_type t_root gfs) (ArraySubsc i)) (field_address t_root gfs p) = eval_lvalue (nested_efield e (eArraySubsc ei :: efs) (t :: tts)) rho) && tc_lvalue Delta (nested_efield e (eArraySubsc ei :: efs) (t :: tts)) rho.",
            "VernacStartTheoremProof",
            "1ad4a21be97cec5c2d07f37372808a183d402aa4"
        ],
        [
            "intros ? ? ? ? ? ? ? ? ? ? ? ? ? ? LEGAL_NESTED_EFIELD_REC TYPE_MATCH ? ? NESTED_FIELD_TYPE TC_ENVIRON EFIELD_DENOTE FIELD_COMPATIBLE IH.",
            "VernacExtend",
            "07ae342410b982d241c72d4dfd1ef6158e05ba58"
        ],
        [
            "destruct (array_op_facts_ptrofs _ _ _ _ _ _ _ _ _ _ t _ LEGAL_NESTED_EFIELD_REC TYPE_MATCH H NESTED_FIELD_TYPE FIELD_COMPATIBLE EFIELD_DENOTE) as [CLASSIFY_ADD ISBINOP].",
            "VernacExtend",
            "a4188528c48a73e8ddebfae961587ae9f1e1ecb4"
        ],
        [
            "pose proof field_address_isptr _ _ _ FIELD_COMPATIBLE as ISPTR.",
            "VernacExtend",
            "801abae9c11ade9308a9d1ec6fb9c7f6ccb551da"
        ],
        [
            "rewrite tc_efield_ind; simpl.",
            "VernacExtend",
            "d7251e74ab5ffc99372da33f1184323857bc835e"
        ],
        [
            "rewrite andp_comm, andp_assoc.",
            "VernacExtend",
            "3f52db5747e5163740726db6e078405d5b6e964f"
        ],
        [
            "eapply derives_trans; [apply andp_derives; [apply derives_refl | rewrite andp_comm; exact IH] | ].",
            "VernacExtend",
            "a47a3e2f118299b2fa8a0cf93f0c2a23f05b76b6"
        ],
        [
            "rewrite (add_andp _ _ (typecheck_expr_sound _ _ _ TC_ENVIRON)).",
            "VernacExtend",
            "d6413410d22eb4969a2f5b4e11b3837e21856ec3"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply andp_right1; [apply prop_right | normalize].",
            "VernacExtend",
            "e015cf8d1acbbfc24856e81fe41051b941ca6b9d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (H3: Vptrofs (Ptrofs.repr i) = eval_expr ei rho).",
            "VernacExtend",
            "4bfb88ff4011929fd83abefd9c7a2d6f59f126c2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear - H1 H0 H.",
            "VernacExtend",
            "80459035245811b256daccea67d71c7334940f5d"
        ],
        [
            "unfold is_ptrofs_type, Vptrofs in *.",
            "VernacExtend",
            "dba887e5fc7c14bf83802e63270fc1220d8b348b"
        ],
        [
            "destruct Archi.ptr64 eqn:Hp.",
            "VernacExtend",
            "ddbeb08cfda8118e447ce468b630e255ec886676"
        ],
        [
            "destruct (typeof ei); inv H.",
            "VernacExtend",
            "d4138abd0dae877ee5e572303c64f2d6a3ec1e83"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite <- H in H1; inv H1.",
            "VernacExtend",
            "3233644a003113e8a8a55c5f70581215a397e67c"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply Ptrofs.agree64_to_int_eq.",
            "VernacExtend",
            "22a335f668d8ab446cc073941c4d4404d0e1d080"
        ],
        [
            "apply Ptrofs.agree64_repr; auto.",
            "VernacExtend",
            "db59350bf25acf2ea145345581eb88cbbb383255"
        ],
        [
            "destruct (typeof ei); inv H.",
            "VernacExtend",
            "d4138abd0dae877ee5e572303c64f2d6a3ec1e83"
        ],
        [
            "destruct i0; inv H3.",
            "VernacExtend",
            "60ea733b0eb68b8c043d661f6b472b12985335d8"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "2: rewrite <- H in H1; inv H1.",
            "VernacExtend",
            "16fafcc79081d06e36e0a13c5b170a7467f62c6d"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply ptrofs_to_int_repr.",
            "VernacExtend",
            "f84308329d3e150deaaf32fe11b55d8dc5c17807"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "unfold force_val2, force_val.",
            "VernacExtend",
            "4d6f754d6c345a1ad6c32b108eec3ca5bfd303a2"
        ],
        [
            "unfold sem_add.",
            "VernacExtend",
            "939c11905f80a2c5c6244c19063887798e5ab129"
        ],
        [
            "destruct CLASSIFY_ADD as [si CLASSIFY_ADD].",
            "VernacExtend",
            "3a75ac87397aa688e0fa55b0255802c90bf4ef26"
        ],
        [
            "rewrite CLASSIFY_ADD.",
            "VernacExtend",
            "4891585ea9123de82260db59605fb871a612af19"
        ],
        [
            "match goal with |- _ = match ?A _ _ with Some _ => _ | None => _ end => change A with (sem_add_ptr_ptrofs t0 si) end.",
            "VernacExtend",
            "84373627862e22cd3906b0c4daeaad23290fe0f9"
        ],
        [
            "rewrite sem_add_pptrofs_ptr_special.",
            "VernacExtend",
            "941f69e39124e18da7431b1726afdcbcbe5cf6af"
        ],
        [
            "2: simpl in H2; rewrite <- H2; auto.",
            "VernacExtend",
            "bb81fd4e85370985727f7718c035dcfad094ce0e"
        ],
        [
            "unfold gfield_offset; rewrite NESTED_FIELD_TYPE, H2.",
            "VernacExtend",
            "a77f297152443ecf8f159ecb3d1dc532fbe1c57a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold tc_lvalue.",
            "VernacExtend",
            "753160dddfb65ef65b4403b6c9cb8de63bc2bafb"
        ],
        [
            "Opaque isBinOpResultType.",
            "VernacSetOpacity",
            "b0e64954d2d31c249af76d8c124b30d06b6aef7f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Transparent isBinOpResultType.",
            "VernacSetOpacity",
            "3afe27713fa5eb98acad9d8673d15296e2271ebb"
        ],
        [
            "rewrite ISBINOP.",
            "VernacExtend",
            "432fcb8b03435540762f2c3bcb17d1cc78cd293e"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite !denote_tc_assert_andp; simpl.",
            "VernacExtend",
            "135f5a3fcf60f4ec7b43d0b91b5d96f4b2da098f"
        ],
        [
            "repeat apply andp_right.",
            "VernacExtend",
            "43ad25ee6641f88bd2c9c012734f21d1763826a1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "simpl in H2; rewrite <- H2; auto.",
            "VernacExtend",
            "65a228356704fd56516bf179c708728f7d51b8fb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite andb_false_r.",
            "VernacExtend",
            "e8dfa19869bd43e29d5896355e5f1bf34bb7a9a4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply prop_right; auto.",
            "VernacExtend",
            "95e18efadb5767545f0255f518eaa92b08876b58"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "simpl; unfold_lift.",
            "VernacExtend",
            "84ab29f1704e0178c8b85be2b471b7ee560e8b01"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma array_ind_step: forall Delta ei i rho t_root e efs gfs tts t n a t0 p, legal_nested_efield_rec t_root gfs tts = true -> type_almost_match e t_root (LR_of_type t_root) = true -> match typeconv (typeof ei) with | Tint _ Signed _ => Int.min_signed <= i <= Int.max_signed | Tint _ Unsigned _ => 0 <= i <= Int.max_unsigned | _ => False end -> array_subsc_denote ei i rho -> nested_field_type t_root gfs = Tarray t0 n a -> tc_environ Delta rho -> efield_denote efs gfs rho -> field_compatible t_root gfs p -> tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta efs rho |-- !! (field_address t_root gfs p = eval_LR (nested_efield e efs tts) (LR_of_type (Tarray t0 n a)) rho) && tc_LR_strong Delta (nested_efield e efs tts) (LR_of_type (Tarray t0 n a)) rho -> tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta (eArraySubsc ei :: efs) rho |-- !! (offset_val (gfield_offset (nested_field_type t_root gfs) (ArraySubsc i)) (field_address t_root gfs p) = eval_lvalue (nested_efield e (eArraySubsc ei :: efs) (t :: tts)) rho) && tc_lvalue Delta (nested_efield e (eArraySubsc ei :: efs) (t :: tts)) rho.",
            "VernacStartTheoremProof",
            "6823d70e239108833d3da3130d4c88ccc34d3e1c"
        ],
        [
            "intros ? ? ? ? ? ? ? ? ? ? ? ? ? ? LEGAL_NESTED_EFIELD_REC TYPE_MATCH H ? NESTED_FIELD_TYPE TC_ENVIRON EFIELD_DENOTE FIELD_COMPATIBLE IH.",
            "VernacExtend",
            "31afa0093a9da5ddd79ba56fa2272ba6f5783531"
        ],
        [
            "rename H into H'.",
            "VernacExtend",
            "94fa31233d40bec52521d4a664a4b7241fb5c76e"
        ],
        [
            "assert (H: is_int_type (typeof ei) = true) by (clear - H'; destruct (typeof ei) as [| | | [|] | | | | |]; try contradiction; auto).",
            "VernacExtend",
            "f325c2216aa6d40b661d33d4744dc4c8e9ff63c4"
        ],
        [
            "destruct (array_op_facts _ _ _ _ _ _ _ _ _ _ t _ LEGAL_NESTED_EFIELD_REC TYPE_MATCH H NESTED_FIELD_TYPE FIELD_COMPATIBLE EFIELD_DENOTE) as [CLASSIFY_ADD ISBINOP].",
            "VernacExtend",
            "9b908a0afa89f18fcc7e56b41c30ccf626ad1ccd"
        ],
        [
            "pose proof field_address_isptr _ _ _ FIELD_COMPATIBLE as ISPTR.",
            "VernacExtend",
            "801abae9c11ade9308a9d1ec6fb9c7f6ccb551da"
        ],
        [
            "rewrite tc_efield_ind; simpl.",
            "VernacExtend",
            "d7251e74ab5ffc99372da33f1184323857bc835e"
        ],
        [
            "rewrite andp_comm, andp_assoc.",
            "VernacExtend",
            "3f52db5747e5163740726db6e078405d5b6e964f"
        ],
        [
            "eapply derives_trans; [apply andp_derives; [apply derives_refl | rewrite andp_comm; exact IH] | ].",
            "VernacExtend",
            "a47a3e2f118299b2fa8a0cf93f0c2a23f05b76b6"
        ],
        [
            "rewrite (add_andp _ _ (typecheck_expr_sound _ _ _ TC_ENVIRON)).",
            "VernacExtend",
            "d6413410d22eb4969a2f5b4e11b3837e21856ec3"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply andp_right1; [apply prop_right | normalize].",
            "VernacExtend",
            "e015cf8d1acbbfc24856e81fe41051b941ca6b9d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (H3: Vint (Int.repr i) = eval_expr ei rho).",
            "VernacExtend",
            "55805b5c57265993e03661510246f69bcaffdc5d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear - H1 H0 H.",
            "VernacExtend",
            "80459035245811b256daccea67d71c7334940f5d"
        ],
        [
            "inv H0; auto.",
            "VernacExtend",
            "a747752c9ff1861588c8959f4ce90cf59f358ae3"
        ],
        [
            "destruct (typeof ei); inv H.",
            "VernacExtend",
            "d4138abd0dae877ee5e572303c64f2d6a3ec1e83"
        ],
        [
            "rewrite <- H2 in H1.",
            "VernacExtend",
            "8866c762e9c242679de3395f9ee2e4d71a759815"
        ],
        [
            "destruct i0,s; contradiction.",
            "VernacExtend",
            "d277f5479c2c92d3bffe6f8297db247a08954bd5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "unfold force_val2, force_val.",
            "VernacExtend",
            "4d6f754d6c345a1ad6c32b108eec3ca5bfd303a2"
        ],
        [
            "unfold sem_add.",
            "VernacExtend",
            "939c11905f80a2c5c6244c19063887798e5ab129"
        ],
        [
            "destruct CLASSIFY_ADD as [si CLASSIFY_ADD].",
            "VernacExtend",
            "3a75ac87397aa688e0fa55b0255802c90bf4ef26"
        ],
        [
            "rewrite CLASSIFY_ADD.",
            "VernacExtend",
            "4891585ea9123de82260db59605fb871a612af19"
        ],
        [
            "rewrite sem_add_pi_ptr_special.",
            "VernacExtend",
            "9a47bc3618bc08a37db1deea5ac14770220862ce"
        ],
        [
            "2: simpl in H2; rewrite <- H2; auto.",
            "VernacExtend",
            "bb81fd4e85370985727f7718c035dcfad094ce0e"
        ],
        [
            "unfold gfield_offset; rewrite NESTED_FIELD_TYPE, H2.",
            "VernacExtend",
            "a77f297152443ecf8f159ecb3d1dc532fbe1c57a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "clear - H' CLASSIFY_ADD.",
            "VernacExtend",
            "0a8ae6ec9899cd3036517a427bb15d5e1ef9cd10"
        ],
        [
            "destruct (typeof (nested_efield e efs tts)) as [ | [ | | | ] [ | ]| [ | ] | [ | ] | | | | | ], (typeof ei) as [ | [ | | | ] [ | ]| [ | ] | [ | ] | | | | | ]; inv CLASSIFY_ADD; try contradiction; auto.",
            "VernacExtend",
            "e4e47536aa73e5517d1e692afc5ee0f07db7ff93"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold tc_lvalue.",
            "VernacExtend",
            "753160dddfb65ef65b4403b6c9cb8de63bc2bafb"
        ],
        [
            "Opaque isBinOpResultType.",
            "VernacSetOpacity",
            "b0e64954d2d31c249af76d8c124b30d06b6aef7f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Transparent isBinOpResultType.",
            "VernacSetOpacity",
            "3afe27713fa5eb98acad9d8673d15296e2271ebb"
        ],
        [
            "rewrite ISBINOP.",
            "VernacExtend",
            "432fcb8b03435540762f2c3bcb17d1cc78cd293e"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite !denote_tc_assert_andp; simpl.",
            "VernacExtend",
            "135f5a3fcf60f4ec7b43d0b91b5d96f4b2da098f"
        ],
        [
            "repeat apply andp_right.",
            "VernacExtend",
            "43ad25ee6641f88bd2c9c012734f21d1763826a1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "simpl in H2; rewrite <- H2; auto.",
            "VernacExtend",
            "65a228356704fd56516bf179c708728f7d51b8fb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite andb_false_r.",
            "VernacExtend",
            "e8dfa19869bd43e29d5896355e5f1bf34bb7a9a4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply prop_right; auto.",
            "VernacExtend",
            "95e18efadb5767545f0255f518eaa92b08876b58"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "simpl; unfold_lift.",
            "VernacExtend",
            "84ab29f1704e0178c8b85be2b471b7ee560e8b01"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_members_Ctypes_offset: forall i m e, in_members i m -> Ctypes.field_offset cenv_cs i m = Errors.Error e -> False.",
            "VernacStartTheoremProof",
            "0126649df02238a2ed09214db428c9034fe2706e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Ctypes.field_offset in H0.",
            "VernacExtend",
            "613dcb9dfe32ae0e8e929c90d182f3ba7815f8ab"
        ],
        [
            "revert H0; generalize 0; induction m as [| [? ?] ?]; intros.",
            "VernacExtend",
            "fbd8b349aa10f82348cd9392065e861ab8a09aad"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "if_tac in H0; inv H0.",
            "VernacExtend",
            "c5bcc301fb1382c2c02c5a96a2390492e88afe16"
        ],
        [
            "spec IHm.",
            "VernacExtend",
            "ce27ef0abf9acd298bd4e26e872479b92c16ba73"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H; [simpl in H; congruence | auto].",
            "VernacExtend",
            "5d9006bd511560cf1c460df0b2a2a309694e1e5d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHm in H3; auto.",
            "VernacExtend",
            "2be9ee0cdb3dbc261f1cab841e0b47aa772dbdf0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma struct_op_facts: forall Delta t_root e gfs efs tts i a i0 t rho, legal_nested_efield_rec t_root gfs tts = true -> type_almost_match e t_root (LR_of_type t_root) = true -> in_members i0 (co_members (get_co i)) -> nested_field_type t_root gfs = Tstruct i a -> efield_denote efs gfs rho -> tc_lvalue Delta (nested_efield e efs tts) rho = tc_lvalue Delta (nested_efield e (eStructField i0 :: efs) (t :: tts)) rho /\\ eval_field (typeof (nested_efield e efs tts)) i0 = offset_val (field_offset cenv_cs i0 (co_members (get_co i))).",
            "VernacStartTheoremProof",
            "999f57a5e25d07d7b3000110535ce9b6b97f5fe3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (weakened_legal_nested_efield_spec _ _ _ _ _ _ H H0 H3).",
            "VernacExtend",
            "40c5eb4dea98df4d541a7be5705e15444d8e9bd2"
        ],
        [
            "rewrite H2 in H4; simpl in H4.",
            "VernacExtend",
            "c221f2ded3fa80ebcb76eef82cac60b3d692483d"
        ],
        [
            "destruct (typeof (nested_efield e efs tts)) eqn:?H; inv H4.",
            "VernacExtend",
            "1576e3874e78d9a51afef65cf23a1b19d202122b"
        ],
        [
            "1: destruct i1; inv H7.",
            "VernacExtend",
            "70304222295d23a34f2e8546bc621331c44005d4"
        ],
        [
            "1: match type of H7 with context [if ?A then _ else _] => destruct A end; inv H7.",
            "VernacExtend",
            "edc5e6f08a9e4b717c99f2ee613338e13fab1330"
        ],
        [
            "unfold tc_lvalue, eval_field.",
            "VernacExtend",
            "241ab5f7537efcec2f5cd937628f74e19f57c451"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "unfold field_offset, fieldlist.field_offset.",
            "VernacExtend",
            "aade225b169e9a4b5d93836abdae839755064632"
        ],
        [
            "unfold get_co in *.",
            "VernacExtend",
            "f95859bbb729d80e4d617de7e9a21a61a3db56d6"
        ],
        [
            "destruct (cenv_cs ! i1); [| inv H1].",
            "VernacExtend",
            "979d17a5788d7673e6ea0fad7df1c5a0422f6e58"
        ],
        [
            "destruct (Ctypes.field_offset cenv_cs i0 (co_members c)) eqn:?H.",
            "VernacExtend",
            "88e405e152f0632b0b3ef04ab6191873ee698ed0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite denote_tc_assert_andp; simpl.",
            "VernacExtend",
            "ef1cae8a5bd1a5ece56c968035c90b83f5bddb24"
        ],
        [
            "apply add_andp, prop_right; auto.",
            "VernacExtend",
            "07a3e4c387ae10467f6520467ed27bbe7a715b8c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "pose proof in_members_Ctypes_offset i0 (co_members c) e0; auto.",
            "VernacExtend",
            "9c33919ab81a00338353d00b246fd654aeea9e4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma struct_ind_step: forall Delta t_root e gfs efs tts i a i0 t rho p, legal_nested_efield_rec t_root gfs tts = true -> type_almost_match e t_root (LR_of_type t_root) = true -> in_members i (co_members (get_co i0)) -> nested_field_type t_root gfs = Tstruct i0 a -> tc_environ Delta rho -> efield_denote efs gfs rho -> field_compatible t_root gfs p -> tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta efs rho |-- !! (field_address t_root gfs (eval_LR e (LR_of_type t_root) rho) = eval_LR (nested_efield e efs tts) (LR_of_type (Tstruct i0 a)) rho) && tc_LR_strong Delta (nested_efield e efs tts) (LR_of_type (Tstruct i0 a)) rho -> tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta (eStructField i :: efs) rho |-- !! (offset_val (gfield_offset (nested_field_type t_root gfs) (StructField i)) (field_address t_root gfs (eval_LR e (LR_of_type t_root) rho)) = eval_lvalue (nested_efield e (eStructField i :: efs) (t :: tts)) rho) && tc_lvalue Delta (nested_efield e (eStructField i :: efs) (t :: tts)) rho.",
            "VernacStartTheoremProof",
            "c607fa0e2a71b5d56df134b6ba9f8c011c90a985"
        ],
        [
            "intros ? ? ? ? ? ? ? ? ? ? ? ? LEGAL_NESTED_EFIELD_REC TYPE_MATCH ? NESTED_FIELD_TYPE TC_ENVIRON EFIELD_DENOTE FIELD_COMPATIBLE IH.",
            "VernacExtend",
            "4fff76c70396d73acefb40d3e5e544b8084602b5"
        ],
        [
            "destruct (struct_op_facts Delta _ _ _ _ _ _ _ _ t _ LEGAL_NESTED_EFIELD_REC TYPE_MATCH H NESTED_FIELD_TYPE EFIELD_DENOTE) as [TC EVAL].",
            "VernacExtend",
            "c21edffef0eb2fff5019bfa36f4760459cc9c567"
        ],
        [
            "rewrite tc_efield_ind; simpl.",
            "VernacExtend",
            "d7251e74ab5ffc99372da33f1184323857bc835e"
        ],
        [
            "eapply derives_trans; [exact IH | ].",
            "VernacExtend",
            "d57a4408e1d5236fd23671e5adbf74ece0b65306"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply andp_right1; [apply prop_right | normalize].",
            "VernacExtend",
            "e015cf8d1acbbfc24856e81fe41051b941ca6b9d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite EVAL, H0, NESTED_FIELD_TYPE.",
            "VernacExtend",
            "69dd1be89cf21e9abd9366e2eb1edba3fabcbd2c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in TC; rewrite <- TC.",
            "VernacExtend",
            "73cf536140f66dc6a02dbafbd03dbdf7f706bffe"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_op_facts: forall Delta t_root e gfs efs tts i a i0 t rho, legal_nested_efield_rec t_root gfs tts = true -> type_almost_match e t_root (LR_of_type t_root) = true -> in_members i0 (co_members (get_co i)) -> nested_field_type t_root gfs = Tunion i a -> efield_denote efs gfs rho -> tc_lvalue Delta (nested_efield e efs tts) rho = tc_lvalue Delta (nested_efield e (eUnionField i0 :: efs) (t :: tts)) rho /\\ eval_field (typeof (nested_efield e efs tts)) i0 = offset_val 0.",
            "VernacStartTheoremProof",
            "b7a6b66ccbf0bec482fd2600d5710758041ff97a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (weakened_legal_nested_efield_spec _ _ _ _ _ _ H H0 H3).",
            "VernacExtend",
            "40c5eb4dea98df4d541a7be5705e15444d8e9bd2"
        ],
        [
            "rewrite H2 in H4; simpl in H4.",
            "VernacExtend",
            "c221f2ded3fa80ebcb76eef82cac60b3d692483d"
        ],
        [
            "destruct (typeof (nested_efield e efs tts)) eqn:?H; inv H4.",
            "VernacExtend",
            "1576e3874e78d9a51afef65cf23a1b19d202122b"
        ],
        [
            "1: destruct i1; inv H7.",
            "VernacExtend",
            "70304222295d23a34f2e8546bc621331c44005d4"
        ],
        [
            "1: match type of H7 with context [if ?A then _ else _] => destruct A end; inv H7.",
            "VernacExtend",
            "edc5e6f08a9e4b717c99f2ee613338e13fab1330"
        ],
        [
            "unfold tc_lvalue, eval_field.",
            "VernacExtend",
            "241ab5f7537efcec2f5cd937628f74e19f57c451"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "unfold get_co in *.",
            "VernacExtend",
            "f95859bbb729d80e4d617de7e9a21a61a3db56d6"
        ],
        [
            "destruct (cenv_cs ! i1); [| inv H1].",
            "VernacExtend",
            "979d17a5788d7673e6ea0fad7df1c5a0422f6e58"
        ],
        [
            "split; [| normalize; auto].",
            "VernacExtend",
            "5151317a33365be1543cced8f22c24919ef47076"
        ],
        [
            "rewrite denote_tc_assert_andp; simpl.",
            "VernacExtend",
            "ef1cae8a5bd1a5ece56c968035c90b83f5bddb24"
        ],
        [
            "apply add_andp, prop_right; auto.",
            "VernacExtend",
            "07a3e4c387ae10467f6520467ed27bbe7a715b8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_ind_step: forall Delta t_root e gfs efs tts i a i0 t rho p, legal_nested_efield_rec t_root gfs tts = true -> type_almost_match e t_root (LR_of_type t_root) = true -> in_members i (co_members (get_co i0)) -> nested_field_type t_root gfs = Tunion i0 a -> tc_environ Delta rho -> efield_denote efs gfs rho -> field_compatible t_root gfs p -> tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta efs rho |-- !! (field_address t_root gfs (eval_LR e (LR_of_type t_root) rho) = eval_LR (nested_efield e efs tts) (LR_of_type (Tstruct i0 a)) rho) && tc_LR_strong Delta (nested_efield e efs tts) (LR_of_type (Tstruct i0 a)) rho -> tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta (eUnionField i :: efs) rho |-- !! (offset_val (gfield_offset (nested_field_type t_root gfs) (UnionField i)) (field_address t_root gfs (eval_LR e (LR_of_type t_root) rho)) = eval_lvalue (nested_efield e (eUnionField i :: efs) (t :: tts)) rho) && tc_lvalue Delta (nested_efield e (eUnionField i :: efs) (t :: tts)) rho.",
            "VernacStartTheoremProof",
            "8c8eb85f73b10096a516001f2950b5b1fddf244a"
        ],
        [
            "intros ? ? ? ? ? ? ? ? ? ? ? ? LEGAL_NESTED_EFIELD_REC TYPE_MATCH ? NESTED_FIELD_TYPE TC_ENVIRON EFIELD_DENOTE FIELD_COMPATIBLE IH.",
            "VernacExtend",
            "4fff76c70396d73acefb40d3e5e544b8084602b5"
        ],
        [
            "destruct (union_op_facts Delta _ _ _ _ _ _ _ _ t _ LEGAL_NESTED_EFIELD_REC TYPE_MATCH H NESTED_FIELD_TYPE EFIELD_DENOTE) as [TC EVAL].",
            "VernacExtend",
            "681650f1dbf483c2b8e2bc878a4e55b1f4cdbf46"
        ],
        [
            "rewrite tc_efield_ind; simpl.",
            "VernacExtend",
            "d7251e74ab5ffc99372da33f1184323857bc835e"
        ],
        [
            "eapply derives_trans; [exact IH | ].",
            "VernacExtend",
            "d57a4408e1d5236fd23671e5adbf74ece0b65306"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply andp_right1; [apply prop_right | normalize].",
            "VernacExtend",
            "e015cf8d1acbbfc24856e81fe41051b941ca6b9d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite EVAL, H0, NESTED_FIELD_TYPE.",
            "VernacExtend",
            "69dd1be89cf21e9abd9366e2eb1edba3fabcbd2c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in TC; rewrite <- TC.",
            "VernacExtend",
            "73cf536140f66dc6a02dbafbd03dbdf7f706bffe"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lvalue_LR_of_type: forall Delta rho P p t e, t = typeof e -> tc_environ Delta rho -> P |-- !! (p = eval_lvalue e rho) && tc_lvalue Delta e rho -> P |-- !! (p = eval_LR e (LR_of_type t) rho) && tc_LR_strong Delta e (LR_of_type t) rho.",
            "VernacDefinition",
            "188ddc99df9cbac1070dc063c91798b3e7877c2b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (LR_of_type t) eqn:?H.",
            "VernacExtend",
            "21d8bc11895bd1b99d2a1b9ed181ddf46b31cce6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (add_andp _ _ H1); clear H1.",
            "VernacExtend",
            "0af326a5f404fbe66f53c78e8b517551f00565cc"
        ],
        [
            "simpl; normalize.",
            "VernacExtend",
            "531b9a72e9b5137d7c2764fce8d019d8c80d3273"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "unfold LR_of_type in H2.",
            "VernacExtend",
            "083dbf0924ce5ec7a23919033d0ecd85320200c6"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct (typeof e) eqn:?H; inv H2.",
            "VernacExtend",
            "82d8b9d603d9a4897d4303013d53ac11574c59ac"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply derives_trans; [apply By_reference_eval_expr |]; auto.",
            "VernacExtend",
            "46b191ca012fc7e2796d9f47e2ff872750986d44"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply By_reference_tc_expr; auto.",
            "VernacExtend",
            "4145c26c8729735a76c26a8daa80716bce94040d"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_lvalue_nested_efield_aux: forall Delta t_root e efs gfs tts p, field_compatible t_root gfs p -> legal_nested_efield t_root e gfs tts (LR_of_type t_root) = true -> local (`(eq p) (eval_LR e (LR_of_type t_root))) && tc_LR Delta e (LR_of_type t_root) && local (tc_environ Delta) && tc_efield Delta efs && local (efield_denote efs gfs) |-- local (`(eq (field_address t_root gfs p)) (eval_LR (nested_efield e efs tts) (LR_of_type (nested_field_type t_root gfs)))) && tc_LR_strong Delta (nested_efield e efs tts) (LR_of_type (nested_field_type t_root gfs)).",
            "VernacStartTheoremProof",
            "c651c5de2190da5b36f314190563ffb3f72a4ee0"
        ],
        [
            "intros Delta t_root e efs gfs tts p FIELD_COMPATIBLE LEGAL_NESTED_EFIELD.",
            "VernacExtend",
            "5c628e9eb33b0f6f73dc04f7cd1a1873152beda1"
        ],
        [
            "unfold local, lift1; simpl; intro rho.",
            "VernacExtend",
            "0aab7fe63fe14e52c8b8f4769c9e0479be53ba51"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rename H into EFIELD_DENOTE, H0 into TC_ENVIRON.",
            "VernacExtend",
            "55b82eb03a1ed29ff06e76bc3347d0633da9bef8"
        ],
        [
            "apply derives_trans with (tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta efs rho).",
            "VernacExtend",
            "5c94f48038654a2c0fc449b6f150fd7a474f99a7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat (apply andp_derives; auto).",
            "VernacExtend",
            "4af69181294715c35221d2150b56e92037070348"
        ],
        [
            "eapply derives_trans; [| apply tc_LR_tc_LR_strong].",
            "VernacExtend",
            "f689cffcc68b5156783b3650bb0e07b4b3354b7d"
        ],
        [
            "rewrite andp_comm, prop_true_andp by auto.",
            "VernacExtend",
            "30358dea4895a09b5901d6edb566066cb48f4f81"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "pose proof legal_nested_efield_weaken _ _ _ _ LEGAL_NESTED_EFIELD as [LEGAL_NESTED_EFIELD_REC TYPE_ALMOST_MATCH].",
            "VernacExtend",
            "afa24ce955945eded6aa767cc4af0aaa43ec11cc"
        ],
        [
            "rewrite field_compatible_field_address by auto.",
            "VernacExtend",
            "828c5822e030831db5ecfbdf7448212c54c45095"
        ],
        [
            "clear LEGAL_NESTED_EFIELD.",
            "VernacExtend",
            "7edb6d12a3009eb676489457ce0d5bfeeb6af176"
        ],
        [
            "revert tts LEGAL_NESTED_EFIELD_REC; induction EFIELD_DENOTE; intros; destruct tts; try solve [inversion LEGAL_NESTED_EFIELD_REC]; [normalize; apply derives_refl | ..]; pose proof FIELD_COMPATIBLE as FIELD_COMPATIBLE_CONS; apply field_compatible_cons in FIELD_COMPATIBLE; destruct (nested_field_type t_root gfs) eqn:NESTED_FIELD_TYPE; try solve [inv FIELD_COMPATIBLE]; rename LEGAL_NESTED_EFIELD_REC into LEGAL_NESTED_EFIELD_REC_CONS; pose proof (proj1 (proj1 (andb_true_iff _ _) LEGAL_NESTED_EFIELD_REC_CONS) : legal_nested_efield_rec t_root gfs tts = true) as LEGAL_NESTED_EFIELD_REC; (spec IHEFIELD_DENOTE; [tauto |]); (spec IHEFIELD_DENOTE; [auto |]); specialize (IHEFIELD_DENOTE tts LEGAL_NESTED_EFIELD_REC); (apply lvalue_LR_of_type; [eapply typeof_nested_efield'; eauto; econstructor; eauto | eassumption |]); destruct FIELD_COMPATIBLE as [? FIELD_COMPATIBLE]; rewrite offset_val_nested_field_offset_ind by auto; rewrite <- field_compatible_field_address in IHEFIELD_DENOTE |- * by auto.",
            "VernacExtend",
            "4496f9905d1ee7f6bf1fb8d75b5fd2539bb7d92a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply array_ind_step; eauto.",
            "VernacExtend",
            "b266b3d5c44b84c294333ff0203031e2309fc806"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply array_ind_step_ptrofs; eauto.",
            "VernacExtend",
            "e54e1eee7255e932f3cbc8ab116ec691f8ed1e95"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply struct_ind_step; eauto.",
            "VernacExtend",
            "2aee07f8242d137b29188dc0393806baaa96f3c2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply union_ind_step; eauto.",
            "VernacExtend",
            "7f7547df471b10fd95d6be40d5701eb858f092c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nested_efield_facts: forall Delta t_root e efs gfs tts lr p, field_compatible t_root gfs p -> LR_of_type t_root = lr -> legal_nested_efield t_root e gfs tts lr = true -> type_is_by_value (nested_field_type t_root gfs) = true -> local (`(eq p) (eval_LR e (LR_of_type t_root))) && tc_LR Delta e (LR_of_type t_root) && local (tc_environ Delta) && tc_efield Delta efs && local (efield_denote efs gfs) |-- local (`(eq (field_address t_root gfs p)) (eval_lvalue (nested_efield e efs tts))) && tc_lvalue Delta (nested_efield e efs tts).",
            "VernacStartTheoremProof",
            "a482585d8286d601d5f006c7f3853e295c02d366"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst lr.",
            "VernacExtend",
            "f6a986be0ffbc06b69ffbc6ca797c09908864fe6"
        ],
        [
            "eapply derives_trans; [apply eval_lvalue_nested_efield_aux; eauto |].",
            "VernacExtend",
            "9d81b0f5423ba742c0375d9d309a2409a0e312d5"
        ],
        [
            "destruct (LR_of_type (nested_field_type t_root gfs)) eqn:?H; auto; try apply derives_refl.",
            "VernacExtend",
            "1e0c3bb8f66742ccb731398ec2952f25acae9b09"
        ],
        [
            "unfold LR_of_type in H0.",
            "VernacExtend",
            "ccae606f89ed7bab07de10b89c4a8a95beb588fa"
        ],
        [
            "destruct (nested_field_type t_root gfs) as [| [| | |] [|] | | [|] | | | | |]; inv H2; inv H0.",
            "VernacExtend",
            "de825c1566fed0eecaca56ab7c784e5dce7f3469"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_lvalue_nested_efield: forall Delta t_root e efs gfs tts lr p, field_compatible t_root gfs p -> LR_of_type t_root = lr -> legal_nested_efield t_root e gfs tts lr = true -> type_is_by_value (nested_field_type t_root gfs) = true -> local (`(eq p) (eval_LR e lr)) && tc_LR Delta e lr && local (tc_environ Delta) && tc_efield Delta efs && local (efield_denote efs gfs) |-- local (`(eq (field_address t_root gfs p)) (eval_lvalue (nested_efield e efs tts))).",
            "VernacStartTheoremProof",
            "9e324535dd0ea4256ee62fffbc292ad43191c7f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst lr.",
            "VernacExtend",
            "f6a986be0ffbc06b69ffbc6ca797c09908864fe6"
        ],
        [
            "eapply derives_trans; [apply eval_lvalue_nested_efield_aux; eauto |].",
            "VernacExtend",
            "9d81b0f5423ba742c0375d9d309a2409a0e312d5"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "destruct (LR_of_type (nested_field_type t_root gfs)) eqn:?H; auto; try apply derives_refl.",
            "VernacExtend",
            "1e0c3bb8f66742ccb731398ec2952f25acae9b09"
        ],
        [
            "unfold LR_of_type in H0.",
            "VernacExtend",
            "ccae606f89ed7bab07de10b89c4a8a95beb588fa"
        ],
        [
            "destruct (nested_field_type t_root gfs) as [| [| | |] [|] | | [|] | | | | |]; inv H2; inv H0.",
            "VernacExtend",
            "de825c1566fed0eecaca56ab7c784e5dce7f3469"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_lvalue_nested_efield: forall Delta t_root e efs gfs tts lr p, field_compatible t_root gfs p -> LR_of_type t_root = lr -> legal_nested_efield t_root e gfs tts lr = true -> type_is_by_value (nested_field_type t_root gfs) = true -> local (`(eq p) (eval_LR e lr)) && tc_LR Delta e lr && local (tc_environ Delta) && tc_efield Delta efs && local (efield_denote efs gfs) |-- tc_lvalue Delta (nested_efield e efs tts).",
            "VernacStartTheoremProof",
            "cbea70584800867500da23050d8f47f5edcb2ba4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst lr.",
            "VernacExtend",
            "f6a986be0ffbc06b69ffbc6ca797c09908864fe6"
        ],
        [
            "eapply derives_trans; [apply eval_lvalue_nested_efield_aux; eauto |].",
            "VernacExtend",
            "9d81b0f5423ba742c0375d9d309a2409a0e312d5"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "destruct (LR_of_type (nested_field_type t_root gfs)) eqn:?H; auto; try apply derives_refl.",
            "VernacExtend",
            "1e0c3bb8f66742ccb731398ec2952f25acae9b09"
        ],
        [
            "unfold LR_of_type in H0.",
            "VernacExtend",
            "ccae606f89ed7bab07de10b89c4a8a95beb588fa"
        ],
        [
            "destruct (nested_field_type t_root gfs) as [| [| | |] [|] | | [|] | | | | |]; inv H2; inv H0.",
            "VernacExtend",
            "de825c1566fed0eecaca56ab7c784e5dce7f3469"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint compute_nested_efield_rec {cs:compspecs} e lr_default := match e with | Efield e' id t => match typeof e' with | Tstruct id_str _ => if eqb_type (field_type id (co_members (get_co id_str))) t then match compute_nested_efield_rec e' LLLL with | (e'', efs, lr) => (e'', eStructField id :: efs, lr) end else (e, nil, lr_default) | Tunion id_uni _ => if eqb_type (field_type id (co_members (get_co id_uni))) t then match compute_nested_efield_rec e' LLLL with | (e'', efs, lr) => (e'', eUnionField id :: efs, lr) end else (e, nil, lr_default) | _ => (e, nil, lr_default) end | Ederef (Ebinop Cop.Oadd e' ei (Tpointer t a)) t' => match typeof e' with | Tarray t'' _ _ => match eqb_type t t'', eqb_type t t', eqb_attr a noattr with | true, true, true => match compute_nested_efield_rec e' RRRR with | (e'', efs, lr) => (e'', eArraySubsc ei :: efs, lr) end | _, _, _ => (e, nil, lr_default) end | Tpointer t'' _ => match eqb_type t t'', eqb_type t t', eqb_attr a noattr, eqb_type (typeof e') int_or_ptr_type with | true, true, true, false => (e', eArraySubsc ei :: nil, RRRR) | _, _, _, _ => (e, nil, lr_default) end | _ => (e, nil, lr_default) end | _ => (e, nil, lr_default) end.",
            "VernacFixpoint",
            "ab48c2ca1016da30f5fcca3117b87dc428b22f81"
        ],
        [
            "Definition compute_nested_efield {cs: compspecs} (e: expr): expr * list efield * LLRR := compute_nested_efield_rec e LLLL.",
            "VernacDefinition",
            "d2622908ee263da3bbc42c4c0eb7846520071d6a"
        ],
        [
            "Inductive compute_root_type: forall (t_from_e: type) (lr: LLRR) (t_root: type), Prop := | compute_root_type_lvalue: forall t, compute_root_type t LLLL t | compute_root_type_Tpointer_expr: forall t a1 n a2, compute_root_type (Tpointer t a1) RRRR (Tarray t n a2) | compute_root_type_Tarray_expr: forall t n1 a1 n2 a2, compute_root_type (Tarray t n1 a1) RRRR (Tarray t n2 a2).",
            "VernacInductive",
            "1f2283f0472ffa34d7ed83bf8cdbe8915a5aaa2b"
        ],
        [
            "Definition LR_possible (e: expr) (lr: LLRR) : bool := match lr with | LLLL => match (typeof e) with | Tarray _ _ _ => false | _ => true end | RRRR => match (typeof e) with | Tarray _ _ _ => true | _ => false end end.",
            "VernacDefinition",
            "88813fdd1b036e9c869552f80d2e2fbaa934304b"
        ],
        [
            "Definition array_relexed_type_eq (t1 t2: type): Prop := match t1, t2 with | Tarray t1' _ _, Tarray t2' _ _ => t1' = t2' | _, _ => t1 = t2 end.",
            "VernacDefinition",
            "4a4a2b80dfc48b337a3e998e68b4b1f18fb8c5fe"
        ],
        [
            "Lemma compute_nested_efield_trivial: forall e rho lr_default, forall e_root efs lr, e_root = e -> efs = nil -> lr = lr_default -> LR_possible e lr_default = true -> forall t_root gfs, exists tts, compute_root_type (typeof e_root) lr t_root -> efield_denote efs gfs rho -> nested_efield e_root efs tts = e /\\ LR_of_type t_root = lr /\\ type_almost_match e_root t_root lr = true /\\ legal_nested_efield_rec t_root gfs tts = true /\\ match gfs with | nil => array_relexed_type_eq t_root (typeof e) | _ => nested_field_type t_root gfs = typeof e end.",
            "VernacStartTheoremProof",
            "c630af509f4c8402bcd220412fb6c773080bff92"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists nil.",
            "VernacExtend",
            "847d8d4ad29a6619a1a271a81b4b6128a169751f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold LR_possible in H2.",
            "VernacExtend",
            "3c19e687d23ee12a58fd9594a305aaa93f456e39"
        ],
        [
            "unfold type_almost_match.",
            "VernacExtend",
            "38f9b7fb80814ddb38c47c38648b3e3de29dccaa"
        ],
        [
            "Opaque eqb_type.",
            "VernacSetOpacity",
            "d1896344b8adb4b46b5a8c48c2d0950fd7f9612e"
        ],
        [
            "destruct (typeof e); inv H2; inv H3; inv H4; simpl; try rewrite eqb_type_spec; auto.",
            "VernacExtend",
            "54c64fbf0af96de94a2128cbb7c6aab7feb24439"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compute_nested_efield_aux: forall e rho lr_default, (LR_possible e lr_default = true -> match compute_nested_efield_rec e lr_default with | (e_root, efs, lr) => forall t_root gfs, exists tts, compute_root_type (typeof e_root) lr t_root -> efield_denote efs gfs rho -> nested_efield e_root efs tts = e /\\ LR_of_type t_root = lr /\\ type_almost_match e_root t_root lr = true /\\ legal_nested_efield_rec t_root gfs tts = true /\\ match gfs with | nil => array_relexed_type_eq t_root (typeof e) | _ => nested_field_type t_root gfs = typeof e end end) /\\ forall t, (LR_possible (Ederef e t) lr_default = true -> match compute_nested_efield_rec (Ederef e t) lr_default with | (e_root, efs, lr) => forall t_root gfs, exists tts, compute_root_type (typeof e_root) lr t_root -> efield_denote efs gfs rho -> nested_efield e_root efs tts = Ederef e t /\\ LR_of_type t_root = lr /\\ type_almost_match e_root t_root lr = true /\\ legal_nested_efield_rec t_root gfs tts = true /\\ match gfs with | nil => array_relexed_type_eq t_root (typeof (Ederef e t)) | _ => nested_field_type t_root gfs = typeof (Ederef e t) end end).",
            "VernacStartTheoremProof",
            "189bcb124f6082fc8e6eb6bd7edc8e34d2de4299"
        ],
        [
            "intros ? ?.",
            "VernacExtend",
            "546ddfdd2482db9e439533251e7f222ee06f71aa"
        ],
        [
            "induction e; intros ?; (split; [ | intros ?]); try exact (compute_nested_efield_trivial _ _ _ _ _ _ eq_refl eq_refl eq_refl).",
            "VernacExtend",
            "d037bdcab1083c6c3e735458f58ab1e72d632bd4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (IHe lr_default).",
            "VernacExtend",
            "3f3cbd2e78dab9423f057f3c46818b11b6585348"
        ],
        [
            "apply (H0 t).",
            "VernacExtend",
            "8532a73cf761b415f21a4bb3f3704d362a29e5b0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct b, t; try exact (compute_nested_efield_trivial _ _ _ _ _ _ eq_refl eq_refl eq_refl).",
            "VernacExtend",
            "60007f69975cadc20b95ffe672a9f20ebbbbf771"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (typeof e1) eqn:?H; try exact (compute_nested_efield_trivial _ _ _ _ _ _ eq_refl eq_refl eq_refl); destruct (eqb_type t t1) eqn:?H; try exact (compute_nested_efield_trivial _ _ _ _ _ _ eq_refl eq_refl eq_refl); apply eqb_type_spec in H0; destruct (eqb_type t t0) eqn:?H; try exact (compute_nested_efield_trivial _ _ _ _ _ _ eq_refl eq_refl eq_refl); apply eqb_type_spec in H1; destruct (eqb_attr a noattr) eqn:?H; try exact (compute_nested_efield_trivial _ _ _ _ _ _ eq_refl eq_refl eq_refl); apply eqb_attr_spec in H2; [destruct (eqb_type ((Tpointer t1 a0)) int_or_ptr_type) eqn:HH; try exact (compute_nested_efield_trivial _ _ _ _ _ _ eq_refl eq_refl eq_refl); apply eqb_type_false in HH |].",
            "VernacExtend",
            "4dbd9e2be0416c2cc083ae92c48a4a7680967c6d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (t0 :: nil).",
            "VernacExtend",
            "944ec6498e0d179d531c75af8dcfad73dfa466e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H1; inv H2.",
            "VernacExtend",
            "723c45c22a121374078ecc37e6f79a0b9c7a9ef8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inv H9.",
            "VernacExtend",
            "95f92f756ca62d80d4d41ad2f3de0dc7c49f5f39"
        ],
        [
            "unfold type_almost_match.",
            "VernacExtend",
            "38f9b7fb80814ddb38c47c38648b3e3de29dccaa"
        ],
        [
            "rewrite H in H4 |- *; inv H4.",
            "VernacExtend",
            "fe36cd654e10ff3e885b94fb6ab1bae92fd7ed3b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "change (nested_field_type (Tarray t0 n a2) (SUB i)) with t0.",
            "VernacExtend",
            "5485f296ecfef5506f392e5c1a785bdd91ff62c7"
        ],
        [
            "apply eqb_type_false in HH.",
            "VernacExtend",
            "79aaa9b7d6f001cd6d23c2b25e247176a1eeb700"
        ],
        [
            "rewrite HH.",
            "VernacExtend",
            "da2353338a3557b6b8cb2bfb56a56528ae55710e"
        ],
        [
            "rewrite !eqb_type_spec.",
            "VernacExtend",
            "17537786214d171ae5bfefbc75253e2d9e36ee00"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inv H9.",
            "VernacExtend",
            "95f92f756ca62d80d4d41ad2f3de0dc7c49f5f39"
        ],
        [
            "unfold type_almost_match.",
            "VernacExtend",
            "38f9b7fb80814ddb38c47c38648b3e3de29dccaa"
        ],
        [
            "rewrite H in H4 |- *; inv H4.",
            "VernacExtend",
            "fe36cd654e10ff3e885b94fb6ab1bae92fd7ed3b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "change (nested_field_type (Tarray t0 n a2) (SUB i)) with t0.",
            "VernacExtend",
            "5485f296ecfef5506f392e5c1a785bdd91ff62c7"
        ],
        [
            "apply eqb_type_false in HH.",
            "VernacExtend",
            "79aaa9b7d6f001cd6d23c2b25e247176a1eeb700"
        ],
        [
            "rewrite HH.",
            "VernacExtend",
            "da2353338a3557b6b8cb2bfb56a56528ae55710e"
        ],
        [
            "rewrite !eqb_type_spec.",
            "VernacExtend",
            "17537786214d171ae5bfefbc75253e2d9e36ee00"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inv H9.",
            "VernacExtend",
            "95f92f756ca62d80d4d41ad2f3de0dc7c49f5f39"
        ],
        [
            "unfold type_almost_match.",
            "VernacExtend",
            "38f9b7fb80814ddb38c47c38648b3e3de29dccaa"
        ],
        [
            "rewrite H in H4 |- *; inv H4.",
            "VernacExtend",
            "fe36cd654e10ff3e885b94fb6ab1bae92fd7ed3b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inv H9.",
            "VernacExtend",
            "95f92f756ca62d80d4d41ad2f3de0dc7c49f5f39"
        ],
        [
            "unfold type_almost_match.",
            "VernacExtend",
            "38f9b7fb80814ddb38c47c38648b3e3de29dccaa"
        ],
        [
            "rewrite H in H4 |- *; inv H4.",
            "VernacExtend",
            "fe36cd654e10ff3e885b94fb6ab1bae92fd7ed3b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct (IHe1 RRRR) as [IH _]; spec IH; [unfold LR_possible; rewrite H; auto |].",
            "VernacExtend",
            "28b09bd0796b3bb8bf2b94688091def8554d189f"
        ],
        [
            "clear IHe1 IHe2.",
            "VernacExtend",
            "82e1cc082a6aad13a703b1697223d927bfc01fa3"
        ],
        [
            "destruct (compute_nested_efield_rec e1 RRRR) as ((?, ?), ?).",
            "VernacExtend",
            "a833ea5d67d56186883cd2ab98e2e8af1a81464e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct gfs; [exists nil; intros _ HHH; inv HHH |].",
            "VernacExtend",
            "1048361a6bccd4d86e938cca07358ff7346b85b2"
        ],
        [
            "specialize (IH t_root gfs).",
            "VernacExtend",
            "2e84be351a9972bcf10fe4b2fb0ecd985a8e2fe0"
        ],
        [
            "destruct IH as [tts IH].",
            "VernacExtend",
            "42504a49fcca6df380f566516a6d47d2fbd5eaf6"
        ],
        [
            "exists (t0 :: tts).",
            "VernacExtend",
            "e396c9e3c6bc9a1473786605037ae72fc8500974"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "6144021562e950304ba8e947fdc2423691182458"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "specialize (IH H1 H10).",
            "VernacExtend",
            "e8ca268977ccf5ac38a9f05c871251a9e638b865"
        ],
        [
            "destruct IH as [IH1 [IH2 [IH3 [IH4 IH5]]]].",
            "VernacExtend",
            "5ac7acc4ed6f9c76c6cfc88c79bb5dcfe698b262"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IH1, IH4.",
            "VernacExtend",
            "1302d30c836725c5408bfc5b83187caa72a78d7c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite eqb_type_spec.",
            "VernacExtend",
            "27a7663e879b23f51513512ef57bbe3b9a33ab67"
        ],
        [
            "assert (nested_field_type t_root (gfs SUB i) = t0); auto.",
            "VernacExtend",
            "b2dd08965eabc8905725fbc8839852f603737eff"
        ],
        [
            "rewrite nested_field_type_ind; destruct gfs.",
            "VernacExtend",
            "a348cfaeede8e885fc33626b19cf206f56130c61"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct t_root; inv IH5; auto.",
            "VernacExtend",
            "fa0b950ce4ca118822a928af85132c96e11578b8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IH5.",
            "VernacExtend",
            "6347f0a6af64fe468110c81750d91de00cd11509"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "specialize (IH H1 H10).",
            "VernacExtend",
            "e8ca268977ccf5ac38a9f05c871251a9e638b865"
        ],
        [
            "destruct IH as [IH1 [IH2 [IH3 [IH4 IH5]]]].",
            "VernacExtend",
            "5ac7acc4ed6f9c76c6cfc88c79bb5dcfe698b262"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IH1, IH4.",
            "VernacExtend",
            "1302d30c836725c5408bfc5b83187caa72a78d7c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite eqb_type_spec.",
            "VernacExtend",
            "27a7663e879b23f51513512ef57bbe3b9a33ab67"
        ],
        [
            "assert (nested_field_type t_root (gfs SUB i) = t0); auto.",
            "VernacExtend",
            "b2dd08965eabc8905725fbc8839852f603737eff"
        ],
        [
            "rewrite nested_field_type_ind; destruct gfs.",
            "VernacExtend",
            "a348cfaeede8e885fc33626b19cf206f56130c61"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct t_root; inv IH5; auto.",
            "VernacExtend",
            "fa0b950ce4ca118822a928af85132c96e11578b8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IH5.",
            "VernacExtend",
            "6347f0a6af64fe468110c81750d91de00cd11509"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "Opaque field_type.",
            "VernacSetOpacity",
            "395d93172a4ea4015fa7505d46c9a7e1d27ac583"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Transparent field_type.",
            "VernacSetOpacity",
            "db8ae7a2a5d156581bcd3fd8f56d18181ac30ac8"
        ],
        [
            "destruct (typeof e) eqn:?H; try exact (compute_nested_efield_trivial _ _ _ _ _ _ eq_refl eq_refl eq_refl); destruct (eqb_type (field_type i (co_members (get_co i0))) t) eqn:?H; try exact (compute_nested_efield_trivial _ _ _ _ _ _ eq_refl eq_refl eq_refl); apply eqb_type_spec in H0.",
            "VernacExtend",
            "2584f985176667cf6c73cc8e321b1de92332ac5e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (IHe LLLL) as [IH _]; clear IHe.",
            "VernacExtend",
            "4469e2a4824cd609068976647aedd2e81b91e5d3"
        ],
        [
            "spec IH; [unfold LR_possible; rewrite H; auto |].",
            "VernacExtend",
            "b8a1f57555385b22ba7d5a52d9bb8b53b1c8f707"
        ],
        [
            "destruct (compute_nested_efield_rec e LLLL) as ((?, ?), ?).",
            "VernacExtend",
            "99c5e4ea08faf662a9ca222c678d5a684adb41e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct gfs; [exists nil; intros _ HHH; inv HHH |].",
            "VernacExtend",
            "1048361a6bccd4d86e938cca07358ff7346b85b2"
        ],
        [
            "specialize (IH t_root gfs).",
            "VernacExtend",
            "2e84be351a9972bcf10fe4b2fb0ecd985a8e2fe0"
        ],
        [
            "destruct IH as [tts IH].",
            "VernacExtend",
            "42504a49fcca6df380f566516a6d47d2fbd5eaf6"
        ],
        [
            "exists (t :: tts); intros.",
            "VernacExtend",
            "65a5d8c83b682760f810d5e7b2e3f4ada50bdb54"
        ],
        [
            "revert H0; inv H3; intros.",
            "VernacExtend",
            "cdac5d1b2c0516547715ab868ed8cb61b8d86e47"
        ],
        [
            "specialize (IH H2 H8).",
            "VernacExtend",
            "938f26a0720eb5ea3e9588030def7a9ebaff668a"
        ],
        [
            "destruct IH as [IH1 [IH2 [IH3 [IH4 IH5]]]].",
            "VernacExtend",
            "5ac7acc4ed6f9c76c6cfc88c79bb5dcfe698b262"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IH1, IH4.",
            "VernacExtend",
            "1302d30c836725c5408bfc5b83187caa72a78d7c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite eqb_type_spec.",
            "VernacExtend",
            "27a7663e879b23f51513512ef57bbe3b9a33ab67"
        ],
        [
            "assert (nested_field_type t_root (gfs DOT i) = t); auto.",
            "VernacExtend",
            "a899f79000773ad02b0586c5a48efa43201fcc89"
        ],
        [
            "rewrite nested_field_type_ind; destruct gfs.",
            "VernacExtend",
            "a348cfaeede8e885fc33626b19cf206f56130c61"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct t_root; inv IH5; auto.",
            "VernacExtend",
            "fa0b950ce4ca118822a928af85132c96e11578b8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IH5.",
            "VernacExtend",
            "6347f0a6af64fe468110c81750d91de00cd11509"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (IHe LLLL) as [IH _]; clear IHe.",
            "VernacExtend",
            "4469e2a4824cd609068976647aedd2e81b91e5d3"
        ],
        [
            "spec IH; [unfold LR_possible; rewrite H; auto |].",
            "VernacExtend",
            "b8a1f57555385b22ba7d5a52d9bb8b53b1c8f707"
        ],
        [
            "destruct (compute_nested_efield_rec e LLLL) as ((?, ?), ?).",
            "VernacExtend",
            "99c5e4ea08faf662a9ca222c678d5a684adb41e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct gfs; [exists nil; intros _ HHH; inv HHH |].",
            "VernacExtend",
            "1048361a6bccd4d86e938cca07358ff7346b85b2"
        ],
        [
            "specialize (IH t_root gfs).",
            "VernacExtend",
            "2e84be351a9972bcf10fe4b2fb0ecd985a8e2fe0"
        ],
        [
            "destruct IH as [tts IH].",
            "VernacExtend",
            "42504a49fcca6df380f566516a6d47d2fbd5eaf6"
        ],
        [
            "exists (t :: tts); intros.",
            "VernacExtend",
            "65a5d8c83b682760f810d5e7b2e3f4ada50bdb54"
        ],
        [
            "revert H0; inv H3; intros.",
            "VernacExtend",
            "cdac5d1b2c0516547715ab868ed8cb61b8d86e47"
        ],
        [
            "specialize (IH H2 H8).",
            "VernacExtend",
            "938f26a0720eb5ea3e9588030def7a9ebaff668a"
        ],
        [
            "destruct IH as [IH1 [IH2 [IH3 [IH4 IH5]]]].",
            "VernacExtend",
            "5ac7acc4ed6f9c76c6cfc88c79bb5dcfe698b262"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IH1, IH4.",
            "VernacExtend",
            "1302d30c836725c5408bfc5b83187caa72a78d7c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite eqb_type_spec.",
            "VernacExtend",
            "27a7663e879b23f51513512ef57bbe3b9a33ab67"
        ],
        [
            "assert (nested_field_type t_root (gfs UDOT i) = t); auto.",
            "VernacExtend",
            "13a660ef9ec3635bedea1f08667913590236a7d6"
        ],
        [
            "rewrite nested_field_type_ind; destruct gfs.",
            "VernacExtend",
            "a348cfaeede8e885fc33626b19cf206f56130c61"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct t_root; inv IH5; auto.",
            "VernacExtend",
            "fa0b950ce4ca118822a928af85132c96e11578b8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IH5.",
            "VernacExtend",
            "6347f0a6af64fe468110c81750d91de00cd11509"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compute_nested_efield_lemma: forall e rho, type_is_by_value (typeof e) = true -> match compute_nested_efield e with | (e_root, efs, lr) => forall t_root gfs, exists tts, compute_root_type (typeof e_root) lr t_root -> efield_denote efs gfs rho -> nested_efield e_root efs tts = e /\\ LR_of_type t_root = lr /\\ legal_nested_efield t_root e_root gfs tts lr = true /\\ nested_field_type t_root gfs = typeof e end.",
            "VernacStartTheoremProof",
            "b58b746f75f4d37539a575cc5ed951f31fdf6323"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (compute_nested_efield_aux e rho LLLL) as [? _].",
            "VernacExtend",
            "4a362e247241c4161005b67ceda051151140cd12"
        ],
        [
            "unfold compute_nested_efield.",
            "VernacExtend",
            "9cabe8069687f21fa39458e9b71eeda02b1d7274"
        ],
        [
            "destruct (compute_nested_efield_rec e LLLL) as ((?, ?), ?).",
            "VernacExtend",
            "99c5e4ea08faf662a9ca222c678d5a684adb41e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spec H0; [unfold LR_possible; destruct (typeof e); inv H; auto |].",
            "VernacExtend",
            "4cc5b3392cd2c65fe82facd2751137dbb3b6ea18"
        ],
        [
            "specialize (H0 t_root gfs).",
            "VernacExtend",
            "d16df46f7941d6dc7b57ba7592ce534a6d1b7f09"
        ],
        [
            "destruct H0 as [tts ?].",
            "VernacExtend",
            "50b5e1fe60b56062370d94e7dd991ef39278457d"
        ],
        [
            "exists tts.",
            "VernacExtend",
            "1957a7b7eab2f19ed9cae1a42962c2bdc27b802a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (H0 H1 H2).",
            "VernacExtend",
            "e9cf8eead031b620b3579959633ceb032232ffc0"
        ],
        [
            "destruct H0 as [? [? [? [? ?]]]].",
            "VernacExtend",
            "7bc2429107ba9e2ec925bd0c6a0af8101daed9a3"
        ],
        [
            "assert (nested_field_type t_root gfs = typeof e); [| split; [| split; [| split]]; auto].",
            "VernacExtend",
            "938618390551e75eef0327dccd003ab0285bf6c2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct gfs; auto.",
            "VernacExtend",
            "971d51b9ef89b8b3f1a58f5990646e24662021e7"
        ],
        [
            "destruct t_root, (typeof e); inv H6; auto; inv H.",
            "VernacExtend",
            "f184f25350fe615418a09d5771293eb9dc99ef49"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold legal_nested_efield.",
            "VernacExtend",
            "232342c5f3f024b6bc5b068cf2aaa36b676ad343"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "destruct gfs; auto.",
            "VernacExtend",
            "971d51b9ef89b8b3f1a58f5990646e24662021e7"
        ],
        [
            "unfold type_almost_match', type_almost_match in *.",
            "VernacExtend",
            "6b15bb28b7ef60cb12acd00d367af7e3bfc74101"
        ],
        [
            "destruct l0, t_root; try rewrite H4; auto.",
            "VernacExtend",
            "e76ca363df127fd2d47c8c64a0cca07abdf84360"
        ],
        [
            "destruct tts; [| inv H5].",
            "VernacExtend",
            "82105822aedd22c5b60b1fc306e3d6feb865cf5c"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "6144021562e950304ba8e947fdc2423691182458"
        ],
        [
            "rewrite <- H7 in H.",
            "VernacExtend",
            "f66aa0d23325df03c22a9878c2ea5d11db3e3116"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CENV.",
            "VernacEndSegment",
            "7830f2173e9d4455d8e9007644a70416b59d31ad"
        ]
    ],
    "proofs": [
        {
            "name": "legal_nested_efield_rec_cons",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H.",
                        "VernacExtend",
                        "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "typeconv_typeconv'_eq",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct t1 as [| [| | |] | [|] | [|] | | | | |], t2 as [| [| | |] | [|] | [|] | | | | |]; simpl in *; do 2 try match type of H with context [if ?A then _ else _] => destruct A end; congruence.",
                        "VernacExtend",
                        "46ab0309b667683a357c905f93963fc9cdd42f84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_efield_ind",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct efs; auto.",
                        "VernacExtend",
                        "e74c6d6b90fe570f678514d5d92ef0644840142c"
                    ]
                },
                {
                    "command": [
                        "destruct e; auto.",
                        "VernacExtend",
                        "76856f1067b59edd0f1dbf7e9f5967373fe4afa5"
                    ]
                },
                {
                    "command": [
                        "unfold tc_efield.",
                        "VernacExtend",
                        "6e614439353e8ec34c3858e450d49ba2aace4bf3"
                    ]
                },
                {
                    "command": [
                        "simpl typecheck_efield.",
                        "VernacExtend",
                        "49a37815532d166dcdffe00b974acd563f7655ae"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_andp.",
                        "VernacExtend",
                        "691fd8a4c0b5ae56aebbf46da7865699ac3983c3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "typeof_nested_efield'",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H; destruct H.",
                        "VernacExtend",
                        "2de36c90c92e9594f50583ae673daf9f42b00ab4"
                    ]
                },
                {
                    "command": [
                        "apply eqb_type_true in H1; subst.",
                        "VernacExtend",
                        "e9d71853689e915202e512ba1a99a608a47bb43c"
                    ]
                },
                {
                    "command": [
                        "destruct ef; reflexivity.",
                        "VernacExtend",
                        "604c13cf225a7576c963636b654c4390e64d2bb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "typeof_nested_efield",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold legal_nested_efield in H.",
                        "VernacExtend",
                        "b39e2f7a39f09c49aef6c5dfd43f1d3dd8af0dd0"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H.",
                        "VernacExtend",
                        "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst; destruct tts; try solve [inversion H1 | simpl; auto | destruct e0; simpl; auto].",
                        "VernacExtend",
                        "4e0867baaa6909fc51297617f2ce258b90b08b3a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct lr; try discriminate.",
                        "VernacExtend",
                        "45e12b0c3d375f7e47a8b442aa7cdec140371d9e"
                    ]
                },
                {
                    "command": [
                        "apply eqb_type_true in H; subst.",
                        "VernacExtend",
                        "433adbc77fe0ee148528bc4fa373f0245a8f480f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply typeof_nested_efield'; eauto.",
                        "VernacExtend",
                        "c7a67bf689befedd578db5e39d4f356b857510e3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply typeof_nested_efield'; eauto.",
                        "VernacExtend",
                        "c7a67bf689befedd578db5e39d4f356b857510e3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply typeof_nested_efield'; eauto.",
                        "VernacExtend",
                        "c7a67bf689befedd578db5e39d4f356b857510e3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply typeof_nested_efield'; eauto.",
                        "VernacExtend",
                        "c7a67bf689befedd578db5e39d4f356b857510e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "offset_val_sem_add_pi",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e rho); try reflexivity.",
                        "VernacExtend",
                        "78d71a9783fd444bc11b0ace7baeb82e3e043a54"
                    ]
                },
                {
                    "command": [
                        "rewrite sem_add_pi_ptr; auto.",
                        "VernacExtend",
                        "8196ce825446a23c11d1f545bb68de9f28c3f94b"
                    ]
                },
                {
                    "command": [
                        "apply I.",
                        "VernacExtend",
                        "d00bb56d6588fc5d3ac997e6baa643f8db1aa956"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "By_reference_tc_expr",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold tc_lvalue, tc_expr.",
                        "VernacExtend",
                        "5d77b9bf1c0f5e868f5ad8826875b02ef2951f94"
                    ]
                },
                {
                    "command": [
                        "destruct e; simpl in *; try apply @FF_left; rewrite H; auto.",
                        "VernacExtend",
                        "dc4bbab27a0d44ce12567658327d231da1aa1671"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "legal_nested_efield_weaken",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold legal_nested_efield in H.",
                        "VernacExtend",
                        "b39e2f7a39f09c49aef6c5dfd43f1d3dd8af0dd0"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H.",
                        "VernacExtend",
                        "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
                    ]
                },
                {
                    "command": [
                        "split; [tauto |].",
                        "VernacExtend",
                        "eeb813fb82348c980411a834a36457ed83056acd"
                    ]
                },
                {
                    "command": [
                        "destruct gfs; [| tauto].",
                        "VernacExtend",
                        "2583106ccf79153a5f1e4eff2b890bf7961c9ab5"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? _].",
                        "VernacExtend",
                        "8866aea99b3fa2b02b2674afa91c0a8f539221fc"
                    ]
                },
                {
                    "command": [
                        "unfold type_almost_match' in H.",
                        "VernacExtend",
                        "d5787ca8ea42e7dc97664a91d059a9276707cc52"
                    ]
                },
                {
                    "command": [
                        "unfold type_almost_match.",
                        "VernacExtend",
                        "38f9b7fb80814ddb38c47c38648b3e3de29dccaa"
                    ]
                },
                {
                    "command": [
                        "destruct (LR_of_type t_root), t_root, (typeof e); simpl in H |- *; try inv H; auto.",
                        "VernacExtend",
                        "1e18834899f5eba87faa774b72dc5ed10bcd96a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weakened_legal_nested_efield_spec",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H1; subst; destruct tts; try solve [inv H].",
                        "VernacExtend",
                        "1a24d59b695b442afebdb140f4c72e3d0b96b954"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite nested_field_type_ind.",
                        "VernacExtend",
                        "be338b58c655cea37c684ce09d961b06f45f76ea"
                    ]
                },
                {
                    "command": [
                        "simpl typeof.",
                        "VernacExtend",
                        "dddffccfe33ffd1e1020766b7926f821686dbe50"
                    ]
                },
                {
                    "command": [
                        "unfold type_almost_match in H0.",
                        "VernacExtend",
                        "b1b01f4f2e89d944f9723540ff241910c10ea6c8"
                    ]
                },
                {
                    "command": [
                        "destruct (LR_of_type t_root), t_root, (typeof e); try solve [inv H0]; auto; try (apply eqb_type_spec in H0; rewrite H0; auto).",
                        "VernacExtend",
                        "06649f5b68e57d933527f7f87053e6e6cb8a96e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eapply typeof_nested_efield'; eauto.",
                        "VernacExtend",
                        "c7a67bf689befedd578db5e39d4f356b857510e3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eapply typeof_nested_efield'; eauto.",
                        "VernacExtend",
                        "c7a67bf689befedd578db5e39d4f356b857510e3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eapply typeof_nested_efield'; eauto.",
                        "VernacExtend",
                        "c7a67bf689befedd578db5e39d4f356b857510e3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eapply typeof_nested_efield'; eauto.",
                        "VernacExtend",
                        "c7a67bf689befedd578db5e39d4f356b857510e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isBinOpResultType_add_ptr_ptrofs",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold isBinOpResultType.",
                        "VernacExtend",
                        "ff9fe0b2173e11a06274be6d484e03c41cff229c"
                    ]
                },
                {
                    "command": [
                        "rewrite (classify_add_typeconv _ _ _ _ H0).",
                        "VernacExtend",
                        "188e279f293cff6523732bd18086b340e465a81a"
                    ]
                },
                {
                    "command": [
                        "destruct (typeof ei); inv H.",
                        "VernacExtend",
                        "d4138abd0dae877ee5e572303c64f2d6a3ec1e83"
                    ]
                },
                {
                    "command": [
                        "apply complete_legal_cosu_type_complete_type in H1.",
                        "VernacExtend",
                        "28d789e3d5977081dc1d5c9cf5526ffc19d52124"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "try destruct i; rewrite H1; simpl tc_bool; cbv iota; rewrite andb_false_r; simpl; rewrite tc_andp_TT2; unfold tc_int_or_ptr_type; rewrite H2; simpl; auto.",
                        "VernacExtend",
                        "3f7d9f5daaf85648801cb59043a734eddfbb1907"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isBinOpResultType_add_ptr",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold isBinOpResultType.",
                        "VernacExtend",
                        "ff9fe0b2173e11a06274be6d484e03c41cff229c"
                    ]
                },
                {
                    "command": [
                        "rewrite (classify_add_typeconv _ _ _ _ H0).",
                        "VernacExtend",
                        "188e279f293cff6523732bd18086b340e465a81a"
                    ]
                },
                {
                    "command": [
                        "destruct (typeof ei); inv H.",
                        "VernacExtend",
                        "d4138abd0dae877ee5e572303c64f2d6a3ec1e83"
                    ]
                },
                {
                    "command": [
                        "apply complete_legal_cosu_type_complete_type in H1.",
                        "VernacExtend",
                        "28d789e3d5977081dc1d5c9cf5526ffc19d52124"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct i; rewrite H1; simpl tc_bool; cbv iota; rewrite andb_false_r; simpl; rewrite tc_andp_TT2; unfold tc_int_or_ptr_type; rewrite H2; simpl; auto.",
                        "VernacExtend",
                        "827c6719fc22b9fc27eba5b6876c7541b4efd830"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ptrofs_repr_Int_unsigned_special",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Ptrofs.agree32_repr H i).",
                        "VernacExtend",
                        "995ec30c656636cf7c91ca368c53475ccfe1534c"
                    ]
                },
                {
                    "command": [
                        "hnf in H0.",
                        "VernacExtend",
                        "ef2ef5338fe3c3f98be9c585e08b6598bfd5a754"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "apply Ptrofs.repr_unsigned.",
                        "VernacExtend",
                        "7a19e804f24963fcaff1c881440937407bd22cb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ptrofs_repr_Int64_unsigned_special",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Ptrofs.agree64_repr H i).",
                        "VernacExtend",
                        "539c113e59f124694d93bd7d2bd6307a66652a5b"
                    ]
                },
                {
                    "command": [
                        "hnf in H0.",
                        "VernacExtend",
                        "ef2ef5338fe3c3f98be9c585e08b6598bfd5a754"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "apply Ptrofs.repr_unsigned.",
                        "VernacExtend",
                        "7a19e804f24963fcaff1c881440937407bd22cb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_add_pptrofs_ptr_special",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sem_add_ptr_ptrofs, sem_add_ptr_int, sem_add_ptr_long.",
                        "VernacExtend",
                        "2fca0bc5126ed3f750386f1b595a6b39e08c3a3e"
                    ]
                },
                {
                    "command": [
                        "destruct p; try contradiction.",
                        "VernacExtend",
                        "37341727d80c03a0b4c7e5d341aa44c21eb8d9ff"
                    ]
                },
                {
                    "command": [
                        "unfold offset_val, Cop.sem_add_ptr_long, Cop.sem_add_ptr_int.",
                        "VernacExtend",
                        "c3b320d35b3d3287773bbccb2084498a90ad0e70"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs, Cop.ptrofs_of_int, Ptrofs.of_ints, Ptrofs.of_intu, Ptrofs.of_int.",
                        "VernacExtend",
                        "b674483a2b2fb06eee0a2dc844d37ae9cf0fa762"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64 eqn:Hp.",
                        "VernacExtend",
                        "ddbeb08cfda8118e447ce468b630e255ec886676"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs.of_int64_to_int64 by auto.",
                        "VernacExtend",
                        "7392daf54558252f15687ac7052f8eecad8601ec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ptrofs_mul_repr; f_equal.",
                        "VernacExtend",
                        "3d3aef250ae3acef742595af3929b77140ff1d05"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct si.",
                        "VernacExtend",
                        "a2e235746346cb3563c9b3600b233afe0dbd5998"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ptrofs_mul_repr; f_equal.",
                        "VernacExtend",
                        "3d3aef250ae3acef742595af3929b77140ff1d05"
                    ]
                },
                {
                    "command": [
                        "rewrite ptrofs_to_int_repr.",
                        "VernacExtend",
                        "21c0e5205e83241535f07ae84372dece7fe0b757"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs_repr_Int_signed_special by auto.",
                        "VernacExtend",
                        "174474a5414651f03b5e0c41a23b0b7b5f2e2902"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ptrofs_mul_repr; f_equal.",
                        "VernacExtend",
                        "3d3aef250ae3acef742595af3929b77140ff1d05"
                    ]
                },
                {
                    "command": [
                        "rewrite ptrofs_to_int_repr.",
                        "VernacExtend",
                        "21c0e5205e83241535f07ae84372dece7fe0b757"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs_repr_Int_unsigned_special by auto.",
                        "VernacExtend",
                        "a8bd2ca46fb00d6884b4e9de8affdc150a936895"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_add_pi_ptr_special",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sem_add_ptr_int.",
                        "VernacExtend",
                        "ecbc1625750484a91b893c2669371df010701836"
                    ]
                },
                {
                    "command": [
                        "destruct p; try contradiction.",
                        "VernacExtend",
                        "37341727d80c03a0b4c7e5d341aa44c21eb8d9ff"
                    ]
                },
                {
                    "command": [
                        "unfold offset_val, Cop.sem_add_ptr_int.",
                        "VernacExtend",
                        "06904b2b36ac8f4e02e2e922462be289048bd1f0"
                    ]
                },
                {
                    "command": [
                        "unfold Cop.ptrofs_of_int, Ptrofs.of_ints, Ptrofs.of_intu, Ptrofs.of_int.",
                        "VernacExtend",
                        "5e3c147407edfa3abfdeb1933d718e3dcd6cd4c6"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct si; rewrite <- ptrofs_mul_repr; f_equal.",
                        "VernacExtend",
                        "299779f22405f0e1414852abdd9ceb64d0ac8b0a"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.signed_repr; auto.",
                        "VernacExtend",
                        "d2a3627d99a158baec9a5dfb0e0dbe190f5a271f"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr; auto.",
                        "VernacExtend",
                        "536e4f297b7a8fbe3aae6f72cb2f7619e7f2c464"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_add_pi_ptr_special'",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "intros Hp.",
                        "VernacExtend",
                        "0d182bb40b8031c4600e3269c2ebd963ee67d06b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sem_add_ptr_int.",
                        "VernacExtend",
                        "ecbc1625750484a91b893c2669371df010701836"
                    ]
                },
                {
                    "command": [
                        "destruct p; try contradiction.",
                        "VernacExtend",
                        "37341727d80c03a0b4c7e5d341aa44c21eb8d9ff"
                    ]
                },
                {
                    "command": [
                        "unfold offset_val, Cop.sem_add_ptr_int.",
                        "VernacExtend",
                        "06904b2b36ac8f4e02e2e922462be289048bd1f0"
                    ]
                },
                {
                    "command": [
                        "unfold Cop.ptrofs_of_int, Ptrofs.of_ints, Ptrofs.of_intu, Ptrofs.of_int.",
                        "VernacExtend",
                        "5e3c147407edfa3abfdeb1933d718e3dcd6cd4c6"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct si; rewrite <- ptrofs_mul_repr; f_equal.",
                        "VernacExtend",
                        "299779f22405f0e1414852abdd9ceb64d0ac8b0a"
                    ]
                },
                {
                    "command": [
                        "apply (Ptrofs_repr_Int_signed_special Hp).",
                        "VernacExtend",
                        "ffd4ba52722c97e6ea6beba52f686fcf932275ff"
                    ]
                },
                {
                    "command": [
                        "apply (Ptrofs_repr_Int_unsigned_special Hp).",
                        "VernacExtend",
                        "46b614cccd474fd0f2874da22667cc73af50fc27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_add_pl_ptr_special'",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "intros Hp.",
                        "VernacExtend",
                        "0d182bb40b8031c4600e3269c2ebd963ee67d06b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sem_add_ptr_long.",
                        "VernacExtend",
                        "c9f6a480aa925686783f1bb72a71422f7cb44719"
                    ]
                },
                {
                    "command": [
                        "destruct p; try contradiction.",
                        "VernacExtend",
                        "37341727d80c03a0b4c7e5d341aa44c21eb8d9ff"
                    ]
                },
                {
                    "command": [
                        "unfold offset_val, Cop.sem_add_ptr_long.",
                        "VernacExtend",
                        "f147f4155cd100019fe89af580acf40637af5e2d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ptrofs.agree64_of_int_eq (Ptrofs.repr i)) by (apply Ptrofs.agree64_repr; auto).",
                        "VernacExtend",
                        "e3170588aae15c2ca89eda669577debb3aa0494e"
                    ]
                },
                {
                    "command": [
                        "rewrite ptrofs_mul_repr.",
                        "VernacExtend",
                        "1c12a1045c66834f33da45ffa1a562b73a81131b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_members_Ctypes_offset",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Ctypes.field_offset in H0.",
                        "VernacExtend",
                        "613dcb9dfe32ae0e8e929c90d182f3ba7815f8ab"
                    ]
                },
                {
                    "command": [
                        "revert H0; generalize 0; induction m as [| [? ?] ?]; intros.",
                        "VernacExtend",
                        "fbd8b349aa10f82348cd9392065e861ab8a09aad"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "if_tac in H0; inv H0.",
                        "VernacExtend",
                        "c5bcc301fb1382c2c02c5a96a2390492e88afe16"
                    ]
                },
                {
                    "command": [
                        "spec IHm.",
                        "VernacExtend",
                        "ce27ef0abf9acd298bd4e26e872479b92c16ba73"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H; [simpl in H; congruence | auto].",
                        "VernacExtend",
                        "5d9006bd511560cf1c460df0b2a2a309694e1e5d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHm in H3; auto.",
                        "VernacExtend",
                        "2be9ee0cdb3dbc261f1cab841e0b47aa772dbdf0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "struct_op_facts",
            "line_nb": 443,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (weakened_legal_nested_efield_spec _ _ _ _ _ _ H H0 H3).",
                        "VernacExtend",
                        "40c5eb4dea98df4d541a7be5705e15444d8e9bd2"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H4; simpl in H4.",
                        "VernacExtend",
                        "c221f2ded3fa80ebcb76eef82cac60b3d692483d"
                    ]
                },
                {
                    "command": [
                        "destruct (typeof (nested_efield e efs tts)) eqn:?H; inv H4.",
                        "VernacExtend",
                        "1576e3874e78d9a51afef65cf23a1b19d202122b"
                    ]
                },
                {
                    "command": [
                        "1: destruct i1; inv H7.",
                        "VernacExtend",
                        "70304222295d23a34f2e8546bc621331c44005d4"
                    ]
                },
                {
                    "command": [
                        "1: match type of H7 with context [if ?A then _ else _] => destruct A end; inv H7.",
                        "VernacExtend",
                        "edc5e6f08a9e4b717c99f2ee613338e13fab1330"
                    ]
                },
                {
                    "command": [
                        "unfold tc_lvalue, eval_field.",
                        "VernacExtend",
                        "241ab5f7537efcec2f5cd937628f74e19f57c451"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "unfold field_offset, fieldlist.field_offset.",
                        "VernacExtend",
                        "aade225b169e9a4b5d93836abdae839755064632"
                    ]
                },
                {
                    "command": [
                        "unfold get_co in *.",
                        "VernacExtend",
                        "f95859bbb729d80e4d617de7e9a21a61a3db56d6"
                    ]
                },
                {
                    "command": [
                        "destruct (cenv_cs ! i1); [| inv H1].",
                        "VernacExtend",
                        "979d17a5788d7673e6ea0fad7df1c5a0422f6e58"
                    ]
                },
                {
                    "command": [
                        "destruct (Ctypes.field_offset cenv_cs i0 (co_members c)) eqn:?H.",
                        "VernacExtend",
                        "88e405e152f0632b0b3ef04ab6191873ee698ed0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_andp; simpl.",
                        "VernacExtend",
                        "ef1cae8a5bd1a5ece56c968035c90b83f5bddb24"
                    ]
                },
                {
                    "command": [
                        "apply add_andp, prop_right; auto.",
                        "VernacExtend",
                        "07a3e4c387ae10467f6520467ed27bbe7a715b8c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "pose proof in_members_Ctypes_offset i0 (co_members c) e0; auto.",
                        "VernacExtend",
                        "9c33919ab81a00338353d00b246fd654aeea9e4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "struct_ind_step",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? ? ? ? ? ? ? ? ? ? LEGAL_NESTED_EFIELD_REC TYPE_MATCH ? NESTED_FIELD_TYPE TC_ENVIRON EFIELD_DENOTE FIELD_COMPATIBLE IH.",
                        "VernacExtend",
                        "4fff76c70396d73acefb40d3e5e544b8084602b5"
                    ]
                },
                {
                    "command": [
                        "destruct (struct_op_facts Delta _ _ _ _ _ _ _ _ t _ LEGAL_NESTED_EFIELD_REC TYPE_MATCH H NESTED_FIELD_TYPE EFIELD_DENOTE) as [TC EVAL].",
                        "VernacExtend",
                        "c21edffef0eb2fff5019bfa36f4760459cc9c567"
                    ]
                },
                {
                    "command": [
                        "rewrite tc_efield_ind; simpl.",
                        "VernacExtend",
                        "d7251e74ab5ffc99372da33f1184323857bc835e"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [exact IH | ].",
                        "VernacExtend",
                        "d57a4408e1d5236fd23671e5adbf74ece0b65306"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "apply andp_right1; [apply prop_right | normalize].",
                        "VernacExtend",
                        "e015cf8d1acbbfc24856e81fe41051b941ca6b9d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite EVAL, H0, NESTED_FIELD_TYPE.",
                        "VernacExtend",
                        "69dd1be89cf21e9abd9366e2eb1edba3fabcbd2c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in TC; rewrite <- TC.",
                        "VernacExtend",
                        "73cf536140f66dc6a02dbafbd03dbdf7f706bffe"
                    ]
                },
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_op_facts",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (weakened_legal_nested_efield_spec _ _ _ _ _ _ H H0 H3).",
                        "VernacExtend",
                        "40c5eb4dea98df4d541a7be5705e15444d8e9bd2"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H4; simpl in H4.",
                        "VernacExtend",
                        "c221f2ded3fa80ebcb76eef82cac60b3d692483d"
                    ]
                },
                {
                    "command": [
                        "destruct (typeof (nested_efield e efs tts)) eqn:?H; inv H4.",
                        "VernacExtend",
                        "1576e3874e78d9a51afef65cf23a1b19d202122b"
                    ]
                },
                {
                    "command": [
                        "1: destruct i1; inv H7.",
                        "VernacExtend",
                        "70304222295d23a34f2e8546bc621331c44005d4"
                    ]
                },
                {
                    "command": [
                        "1: match type of H7 with context [if ?A then _ else _] => destruct A end; inv H7.",
                        "VernacExtend",
                        "edc5e6f08a9e4b717c99f2ee613338e13fab1330"
                    ]
                },
                {
                    "command": [
                        "unfold tc_lvalue, eval_field.",
                        "VernacExtend",
                        "241ab5f7537efcec2f5cd937628f74e19f57c451"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "unfold get_co in *.",
                        "VernacExtend",
                        "f95859bbb729d80e4d617de7e9a21a61a3db56d6"
                    ]
                },
                {
                    "command": [
                        "destruct (cenv_cs ! i1); [| inv H1].",
                        "VernacExtend",
                        "979d17a5788d7673e6ea0fad7df1c5a0422f6e58"
                    ]
                },
                {
                    "command": [
                        "split; [| normalize; auto].",
                        "VernacExtend",
                        "5151317a33365be1543cced8f22c24919ef47076"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_andp; simpl.",
                        "VernacExtend",
                        "ef1cae8a5bd1a5ece56c968035c90b83f5bddb24"
                    ]
                },
                {
                    "command": [
                        "apply add_andp, prop_right; auto.",
                        "VernacExtend",
                        "07a3e4c387ae10467f6520467ed27bbe7a715b8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_ind_step",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? ? ? ? ? ? ? ? ? ? LEGAL_NESTED_EFIELD_REC TYPE_MATCH ? NESTED_FIELD_TYPE TC_ENVIRON EFIELD_DENOTE FIELD_COMPATIBLE IH.",
                        "VernacExtend",
                        "4fff76c70396d73acefb40d3e5e544b8084602b5"
                    ]
                },
                {
                    "command": [
                        "destruct (union_op_facts Delta _ _ _ _ _ _ _ _ t _ LEGAL_NESTED_EFIELD_REC TYPE_MATCH H NESTED_FIELD_TYPE EFIELD_DENOTE) as [TC EVAL].",
                        "VernacExtend",
                        "681650f1dbf483c2b8e2bc878a4e55b1f4cdbf46"
                    ]
                },
                {
                    "command": [
                        "rewrite tc_efield_ind; simpl.",
                        "VernacExtend",
                        "d7251e74ab5ffc99372da33f1184323857bc835e"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [exact IH | ].",
                        "VernacExtend",
                        "d57a4408e1d5236fd23671e5adbf74ece0b65306"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "apply andp_right1; [apply prop_right | normalize].",
                        "VernacExtend",
                        "e015cf8d1acbbfc24856e81fe41051b941ca6b9d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite EVAL, H0, NESTED_FIELD_TYPE.",
                        "VernacExtend",
                        "69dd1be89cf21e9abd9366e2eb1edba3fabcbd2c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in TC; rewrite <- TC.",
                        "VernacExtend",
                        "73cf536140f66dc6a02dbafbd03dbdf7f706bffe"
                    ]
                },
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lvalue_LR_of_type",
            "line_nb": 511,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (LR_of_type t) eqn:?H.",
                        "VernacExtend",
                        "21d8bc11895bd1b99d2a1b9ed181ddf46b31cce6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact H1.",
                        "VernacExtend",
                        "c03ab82d1e411e1dcd211c59917a4946e039be00"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_andp _ _ H1); clear H1.",
                        "VernacExtend",
                        "0af326a5f404fbe66f53c78e8b517551f00565cc"
                    ]
                },
                {
                    "command": [
                        "simpl; normalize.",
                        "VernacExtend",
                        "531b9a72e9b5137d7c2764fce8d019d8c80d3273"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "unfold LR_of_type in H2.",
                        "VernacExtend",
                        "083dbf0924ce5ec7a23919033d0ecd85320200c6"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "destruct (typeof e) eqn:?H; inv H2.",
                        "VernacExtend",
                        "82d8b9d603d9a4897d4303013d53ac11574c59ac"
                    ]
                },
                {
                    "command": [
                        "apply andp_right.",
                        "VernacExtend",
                        "614688b80ee6a44f752e79383d4234d6d5dfcee8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply By_reference_eval_expr |]; auto.",
                        "VernacExtend",
                        "46b191ca012fc7e2796d9f47e2ff872750986d44"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply By_reference_tc_expr; auto.",
                        "VernacExtend",
                        "4145c26c8729735a76c26a8daa80716bce94040d"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_lvalue_nested_efield_aux",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "intros Delta t_root e efs gfs tts p FIELD_COMPATIBLE LEGAL_NESTED_EFIELD.",
                        "VernacExtend",
                        "5c628e9eb33b0f6f73dc04f7cd1a1873152beda1"
                    ]
                },
                {
                    "command": [
                        "unfold local, lift1; simpl; intro rho.",
                        "VernacExtend",
                        "0aab7fe63fe14e52c8b8f4769c9e0479be53ba51"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "rename H into EFIELD_DENOTE, H0 into TC_ENVIRON.",
                        "VernacExtend",
                        "55b82eb03a1ed29ff06e76bc3347d0633da9bef8"
                    ]
                },
                {
                    "command": [
                        "apply derives_trans with (tc_LR_strong Delta e (LR_of_type t_root) rho && tc_efield Delta efs rho).",
                        "VernacExtend",
                        "5c94f48038654a2c0fc449b6f150fd7a474f99a7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "repeat (apply andp_derives; auto).",
                        "VernacExtend",
                        "4af69181294715c35221d2150b56e92037070348"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [| apply tc_LR_tc_LR_strong].",
                        "VernacExtend",
                        "f689cffcc68b5156783b3650bb0e07b4b3354b7d"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm, prop_true_andp by auto.",
                        "VernacExtend",
                        "30358dea4895a09b5901d6edb566066cb48f4f81"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "pose proof legal_nested_efield_weaken _ _ _ _ LEGAL_NESTED_EFIELD as [LEGAL_NESTED_EFIELD_REC TYPE_ALMOST_MATCH].",
                        "VernacExtend",
                        "afa24ce955945eded6aa767cc4af0aaa43ec11cc"
                    ]
                },
                {
                    "command": [
                        "rewrite field_compatible_field_address by auto.",
                        "VernacExtend",
                        "828c5822e030831db5ecfbdf7448212c54c45095"
                    ]
                },
                {
                    "command": [
                        "clear LEGAL_NESTED_EFIELD.",
                        "VernacExtend",
                        "7edb6d12a3009eb676489457ce0d5bfeeb6af176"
                    ]
                },
                {
                    "command": [
                        "revert tts LEGAL_NESTED_EFIELD_REC; induction EFIELD_DENOTE; intros; destruct tts; try solve [inversion LEGAL_NESTED_EFIELD_REC]; [normalize; apply derives_refl | ..]; pose proof FIELD_COMPATIBLE as FIELD_COMPATIBLE_CONS; apply field_compatible_cons in FIELD_COMPATIBLE; destruct (nested_field_type t_root gfs) eqn:NESTED_FIELD_TYPE; try solve [inv FIELD_COMPATIBLE]; rename LEGAL_NESTED_EFIELD_REC into LEGAL_NESTED_EFIELD_REC_CONS; pose proof (proj1 (proj1 (andb_true_iff _ _) LEGAL_NESTED_EFIELD_REC_CONS) : legal_nested_efield_rec t_root gfs tts = true) as LEGAL_NESTED_EFIELD_REC; (spec IHEFIELD_DENOTE; [tauto |]); (spec IHEFIELD_DENOTE; [auto |]); specialize (IHEFIELD_DENOTE tts LEGAL_NESTED_EFIELD_REC); (apply lvalue_LR_of_type; [eapply typeof_nested_efield'; eauto; econstructor; eauto | eassumption |]); destruct FIELD_COMPATIBLE as [? FIELD_COMPATIBLE]; rewrite offset_val_nested_field_offset_ind by auto; rewrite <- field_compatible_field_address in IHEFIELD_DENOTE |- * by auto.",
                        "VernacExtend",
                        "4496f9905d1ee7f6bf1fb8d75b5fd2539bb7d92a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply array_ind_step; eauto.",
                        "VernacExtend",
                        "b266b3d5c44b84c294333ff0203031e2309fc806"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply array_ind_step_ptrofs; eauto.",
                        "VernacExtend",
                        "e54e1eee7255e932f3cbc8ab116ec691f8ed1e95"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply struct_ind_step; eauto.",
                        "VernacExtend",
                        "2aee07f8242d137b29188dc0393806baaa96f3c2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply union_ind_step; eauto.",
                        "VernacExtend",
                        "7f7547df471b10fd95d6be40d5701eb858f092c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nested_efield_facts",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst lr.",
                        "VernacExtend",
                        "f6a986be0ffbc06b69ffbc6ca797c09908864fe6"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply eval_lvalue_nested_efield_aux; eauto |].",
                        "VernacExtend",
                        "9d81b0f5423ba742c0375d9d309a2409a0e312d5"
                    ]
                },
                {
                    "command": [
                        "destruct (LR_of_type (nested_field_type t_root gfs)) eqn:?H; auto; try apply derives_refl.",
                        "VernacExtend",
                        "1e0c3bb8f66742ccb731398ec2952f25acae9b09"
                    ]
                },
                {
                    "command": [
                        "unfold LR_of_type in H0.",
                        "VernacExtend",
                        "ccae606f89ed7bab07de10b89c4a8a95beb588fa"
                    ]
                },
                {
                    "command": [
                        "destruct (nested_field_type t_root gfs) as [| [| | |] [|] | | [|] | | | | |]; inv H2; inv H0.",
                        "VernacExtend",
                        "de825c1566fed0eecaca56ab7c784e5dce7f3469"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_lvalue_nested_efield",
            "line_nb": 566,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst lr.",
                        "VernacExtend",
                        "f6a986be0ffbc06b69ffbc6ca797c09908864fe6"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply eval_lvalue_nested_efield_aux; eauto |].",
                        "VernacExtend",
                        "9d81b0f5423ba742c0375d9d309a2409a0e312d5"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1.",
                        "VernacExtend",
                        "527caf3623c2439da127093a10760d6fffcc2032"
                    ]
                },
                {
                    "command": [
                        "destruct (LR_of_type (nested_field_type t_root gfs)) eqn:?H; auto; try apply derives_refl.",
                        "VernacExtend",
                        "1e0c3bb8f66742ccb731398ec2952f25acae9b09"
                    ]
                },
                {
                    "command": [
                        "unfold LR_of_type in H0.",
                        "VernacExtend",
                        "ccae606f89ed7bab07de10b89c4a8a95beb588fa"
                    ]
                },
                {
                    "command": [
                        "destruct (nested_field_type t_root gfs) as [| [| | |] [|] | | [|] | | | | |]; inv H2; inv H0.",
                        "VernacExtend",
                        "de825c1566fed0eecaca56ab7c784e5dce7f3469"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_lvalue_nested_efield",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst lr.",
                        "VernacExtend",
                        "f6a986be0ffbc06b69ffbc6ca797c09908864fe6"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply eval_lvalue_nested_efield_aux; eauto |].",
                        "VernacExtend",
                        "9d81b0f5423ba742c0375d9d309a2409a0e312d5"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "destruct (LR_of_type (nested_field_type t_root gfs)) eqn:?H; auto; try apply derives_refl.",
                        "VernacExtend",
                        "1e0c3bb8f66742ccb731398ec2952f25acae9b09"
                    ]
                },
                {
                    "command": [
                        "unfold LR_of_type in H0.",
                        "VernacExtend",
                        "ccae606f89ed7bab07de10b89c4a8a95beb588fa"
                    ]
                },
                {
                    "command": [
                        "destruct (nested_field_type t_root gfs) as [| [| | |] [|] | | [|] | | | | |]; inv H2; inv H0.",
                        "VernacExtend",
                        "de825c1566fed0eecaca56ab7c784e5dce7f3469"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compute_nested_efield_lemma",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (compute_nested_efield_aux e rho LLLL) as [? _].",
                        "VernacExtend",
                        "4a362e247241c4161005b67ceda051151140cd12"
                    ]
                },
                {
                    "command": [
                        "unfold compute_nested_efield.",
                        "VernacExtend",
                        "9cabe8069687f21fa39458e9b71eeda02b1d7274"
                    ]
                },
                {
                    "command": [
                        "destruct (compute_nested_efield_rec e LLLL) as ((?, ?), ?).",
                        "VernacExtend",
                        "99c5e4ea08faf662a9ca222c678d5a684adb41e5"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spec H0; [unfold LR_possible; destruct (typeof e); inv H; auto |].",
                        "VernacExtend",
                        "4cc5b3392cd2c65fe82facd2751137dbb3b6ea18"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 t_root gfs).",
                        "VernacExtend",
                        "d16df46f7941d6dc7b57ba7592ce534a6d1b7f09"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [tts ?].",
                        "VernacExtend",
                        "50b5e1fe60b56062370d94e7dd991ef39278457d"
                    ]
                },
                {
                    "command": [
                        "exists tts.",
                        "VernacExtend",
                        "1957a7b7eab2f19ed9cae1a42962c2bdc27b802a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 H1 H2).",
                        "VernacExtend",
                        "e9cf8eead031b620b3579959633ceb032232ffc0"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [? [? [? [? ?]]]].",
                        "VernacExtend",
                        "7bc2429107ba9e2ec925bd0c6a0af8101daed9a3"
                    ]
                },
                {
                    "command": [
                        "assert (nested_field_type t_root gfs = typeof e); [| split; [| split; [| split]]; auto].",
                        "VernacExtend",
                        "938618390551e75eef0327dccd003ab0285bf6c2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct gfs; auto.",
                        "VernacExtend",
                        "971d51b9ef89b8b3f1a58f5990646e24662021e7"
                    ]
                },
                {
                    "command": [
                        "destruct t_root, (typeof e); inv H6; auto; inv H.",
                        "VernacExtend",
                        "f184f25350fe615418a09d5771293eb9dc99ef49"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold legal_nested_efield.",
                        "VernacExtend",
                        "232342c5f3f024b6bc5b068cf2aaa36b676ad343"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "destruct gfs; auto.",
                        "VernacExtend",
                        "971d51b9ef89b8b3f1a58f5990646e24662021e7"
                    ]
                },
                {
                    "command": [
                        "unfold type_almost_match', type_almost_match in *.",
                        "VernacExtend",
                        "6b15bb28b7ef60cb12acd00d367af7e3bfc74101"
                    ]
                },
                {
                    "command": [
                        "destruct l0, t_root; try rewrite H4; auto.",
                        "VernacExtend",
                        "e76ca363df127fd2d47c8c64a0cca07abdf84360"
                    ]
                },
                {
                    "command": [
                        "destruct tts; [| inv H5].",
                        "VernacExtend",
                        "82105822aedd22c5b60b1fc306e3d6feb865cf5c"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "6144021562e950304ba8e947fdc2423691182458"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H7 in H.",
                        "VernacExtend",
                        "f66aa0d23325df03c22a9878c2ea5d11db3e3116"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}