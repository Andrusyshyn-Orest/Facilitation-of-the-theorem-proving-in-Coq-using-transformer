{
    "filename": "floyd/loadstore_field_at.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.base2.",
            "VernacRequire",
            "c9732b06b9c2316526989f551596fbf382fa6641"
        ],
        [
            "Require Import VST.floyd.client_lemmas.",
            "VernacRequire",
            "449c8140a2f7afa12f07d13833b2a4f672db98f1"
        ],
        [
            "Require Import VST.floyd.nested_field_lemmas.",
            "VernacRequire",
            "2ae988fac26931aaa409a9389758d750e8ca6601"
        ],
        [
            "Require Import VST.floyd.efield_lemmas.",
            "VernacRequire",
            "0c47229b01bda83c0fb8dfc4c7351bb1c3ce9b48"
        ],
        [
            "Require Import VST.floyd.mapsto_memory_block.",
            "VernacRequire",
            "1eb48c3b1d3226b38616009522812b5e36900b31"
        ],
        [
            "Require Import VST.floyd.reptype_lemmas.",
            "VernacRequire",
            "67895477ec539ad1bf901b33e9b181c1c2cf58be"
        ],
        [
            "Require Import VST.floyd.data_at_rec_lemmas.",
            "VernacRequire",
            "782eebd63d8680a4569a04c81542bd75cc6f79bd"
        ],
        [
            "Require Import VST.floyd.field_at.",
            "VernacRequire",
            "c7cf6c35d27d83ac7be63633e374fa639476b7cc"
        ],
        [
            "Require Import VST.floyd.loadstore_mapsto.",
            "VernacRequire",
            "86a37b050ded6be68f67e4b01aa7679dd4aba732"
        ],
        [
            "Local Open Scope logic.",
            "VernacOpenCloseScope",
            "5937723d189e5aa98ad78e1018bed51ea2c1b0cd"
        ],
        [
            "Lemma is_neutral_cast_by_value: forall t t', is_neutral_cast t t' = true -> type_is_by_value t = true.",
            "VernacStartTheoremProof",
            "980a7a042ff69e9230f5e4511b60442f105ae98e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct t, t'; try inversion H; simpl; auto.",
            "VernacExtend",
            "d2e58c2aa787fc1a9565ad7bcc5af019960a16d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section LOADSTORE_FIELD_AT.",
            "VernacBeginSection",
            "75349d46297761c79b65cd1eee99ab4eff897a0f"
        ],
        [
            "Context {cs: compspecs}.",
            "VernacContext",
            "54247ea3591f081b4582667d94ae6f9e673bf9e3"
        ],
        [
            "Lemma self_ramify_trans: forall {A} `{SepLog A} (g m l: A), g |-- m * TT -> m |-- l * TT -> g |-- l * TT.",
            "VernacStartTheoremProof",
            "e7c940131626132ea8cec806ec2af5edc7169579"
        ],
        [
            "intros A ND SL ? ? ? ? ?.",
            "VernacExtend",
            "d51e62dc258c80ed4954b46612920ddfead1776c"
        ],
        [
            "eapply derives_trans; [exact H |].",
            "VernacExtend",
            "d21d6405bee344c91db85ac467fbe4bb5450f214"
        ],
        [
            "eapply derives_trans; [apply sepcon_derives; [exact H0 | apply derives_refl] |].",
            "VernacExtend",
            "a0c6a103e31f07c0d1153ac958de3c43d2be3530"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_load_nth_ram_field_at : forall {Espec: OracleKind}{cs: compspecs} n (Delta: tycontext) sh id P Q R e1 Pre t_id t_root gfs (p v_val: val) (v_reptype: reptype (nested_field_type t_root gfs)), typeof e1 = nested_field_type t_root gfs -> typeof_temp Delta id = Some t_id -> is_neutral_cast (nested_field_type t_root gfs) t_id = true -> type_is_volatile (nested_field_type t_root gfs) = false -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq (field_address t_root gfs p)) (eval_lvalue e1)) -> nth_error R n = Some Pre -> readable_share sh -> Pre |-- field_at sh t_root gfs v_reptype p * TT -> JMeq v_reptype v_val -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_lvalue Delta e1) && local (`(tc_val (nested_field_type t_root gfs) v_val)) -> @semax cs Espec Delta (|> PROPx P (LOCALx Q (SEPx R))) (Sset id e1) (normal_ret_assert (PROPx P (LOCALx (temp id v_val :: remove_localdef_temp id Q) (SEPx R)))).",
            "VernacStartTheoremProof",
            "6a93a3621b94848b8989b62f108b0e3234d8a027"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof is_neutral_cast_by_value _ _ H1.",
            "VernacExtend",
            "150b9f9bff366392c25b79ac051acdd157aba640"
        ],
        [
            "eapply semax_load_nth_ram.",
            "VernacExtend",
            "4ce49b610a4a371243821b59f062a51226d9187e"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: rewrite H; assumption.",
            "VernacExtend",
            "0ce1ba43f9d394d8c2d50de3834a144a2fa297c0"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "2: eassumption.",
            "VernacExtend",
            "0ff50f8d3d17a5bf261a0547553b55ca426f43c9"
        ],
        [
            "eapply self_ramify_trans; [exact H6 |].",
            "VernacExtend",
            "2e4d5b706b745ef6554a3f1d05bd66b9be7e28c6"
        ],
        [
            "eapply RAMIF_PLAIN.weak_ramif_spec.",
            "VernacExtend",
            "85baf42d8fec28aa35862a7c56946763973fed74"
        ],
        [
            "apply mapsto_field_at_ramify; auto.",
            "VernacExtend",
            "217f46be56b3b80db40ec8dba58fcc7a71c37d25"
        ],
        [
            "eapply JMeq_sym; exact H7.",
            "VernacExtend",
            "643aa2453c28d6f19100c532d716e8f94f8adbd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_max_path_field_load_nth_ram: forall {Espec: OracleKind}, forall n Delta sh id P Q R (e1: expr) Pre (t t_root: type) (efs: list efield) (gfs: list gfield) (tts: list type) (p v : val) (v' : reptype (nested_field_type t_root gfs)) lr, typeof_temp Delta id = Some t -> is_neutral_cast (typeof (nested_efield e1 efs tts)) t = true -> readable_share sh -> LR_of_type t_root = lr -> type_is_volatile (typeof (nested_efield e1 efs tts)) = false -> legal_nested_efield t_root e1 gfs tts lr = true -> JMeq v' v -> nth_error R n = Some Pre -> Pre |-- field_at sh t_root gfs v' p * TT -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq p) (eval_LR e1 lr)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_LR Delta e1 lr) && (tc_efield Delta efs) && local (efield_denote efs gfs) && local `(tc_val (typeof (nested_efield e1 efs tts)) v) -> semax Delta (|>PROPx P (LOCALx Q (SEPx R))) (Sset id (nested_efield e1 efs tts)) (normal_ret_assert (PROPx P (LOCALx (temp id v :: remove_localdef_temp id Q) (SEPx R)))).",
            "VernacStartTheoremProof",
            "34f9a7a1710cb35690b75bd5bfbaeb45b8b622df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof is_neutral_cast_by_value _ _ H0.",
            "VernacExtend",
            "88e3c01835b378f4b13fe65f721197fb83f17dea"
        ],
        [
            "assert_PROP (typeof (nested_efield e1 efs tts) = nested_field_type t_root gfs).",
            "VernacExtend",
            "3190d3b5aa684850bd7f45f0b40929709e642815"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply derives_trans; [exact H9 |].",
            "VernacExtend",
            "97912cb61dacb2ce118fbd9a4feaaacc31a57843"
        ],
        [
            "intros rho; simpl; unfold local, lift1; unfold_lift; normalize.",
            "VernacExtend",
            "9652017b9da774c0fc8d6dc87235aa223347b5d8"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "symmetry; eapply typeof_nested_efield; eauto.",
            "VernacExtend",
            "a90944c0a733e9fd3030e394886fbeb3b6ee18d1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H11 in H10.",
            "VernacExtend",
            "c425589942141208d827b17015efe56d9cb45200"
        ],
        [
            "assert_PROP (field_compatible t_root gfs p).",
            "VernacExtend",
            "b481f6a18d11097c785fef12cf9b163e33415b69"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "erewrite SEP_nth_isolate, <- insert_SEP by eauto.",
            "VernacExtend",
            "a9b0e93716d719d5cccd32182ad476cac5f9d8fd"
        ],
        [
            "apply andp_left2; apply derives_left_sepcon_right_corable; auto.",
            "VernacExtend",
            "8123d3141db7264dc8f0e509e03665132d926725"
        ],
        [
            "intro rho; unfold_lift; simpl.",
            "VernacExtend",
            "07da4873869f78cd2ac551bfcd5e5a8874ca682b"
        ],
        [
            "eapply derives_trans; [apply H7 |].",
            "VernacExtend",
            "7187ca5f3e7e0af853921b90f96887f06547a6e5"
        ],
        [
            "rewrite field_at_compatible'.",
            "VernacExtend",
            "f5e2e83c81cf02214237ad1deed85022a5bc98b1"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "eapply semax_load_nth_ram; try eassumption; [ idtac | idtac | apply andp_right].",
            "VernacExtend",
            "a0786ed01c5dc6091eb1150414fb1e94ec3b7628"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (add_andp _ _ H8), (add_andp _ _ H9).",
            "VernacExtend",
            "b81a7224e7f61d86048931fd61fe663af57780fc"
        ],
        [
            "eapply derives_trans; [| apply eval_lvalue_nested_efield; eassumption].",
            "VernacExtend",
            "8789a18004be9b3c9827f24a4260aee0e39a9180"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply self_ramify_trans; [exact H7 |].",
            "VernacExtend",
            "54053cc5745eecf62daca4a779cad0d6f5b12b1e"
        ],
        [
            "eapply RAMIF_PLAIN.weak_ramif_spec.",
            "VernacExtend",
            "85baf42d8fec28aa35862a7c56946763973fed74"
        ],
        [
            "apply mapsto_field_at_ramify; [auto | rewrite <- H11; auto | auto | eauto].",
            "VernacExtend",
            "44e23558b1e86973140c7603bea4a5561ddf1f64"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (add_andp _ _ H8), (add_andp _ _ H9).",
            "VernacExtend",
            "b81a7224e7f61d86048931fd61fe663af57780fc"
        ],
        [
            "eapply derives_trans; [| eapply tc_lvalue_nested_efield; eassumption].",
            "VernacExtend",
            "99f16f1d4289c6a9feb5b3b14d0bf845d92fb067"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply derives_trans; [exact H9 |].",
            "VernacExtend",
            "97912cb61dacb2ce118fbd9a4feaaacc31a57843"
        ],
        [
            "rewrite H11; solve_andp.",
            "VernacExtend",
            "ca00f48a82ab9c671f13d5091478e0a2d17f6a7b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_max_path_field_load_nth_ram': forall {Espec: OracleKind}, forall n Delta sh id P Q R (e: expr) Pre (t t_root: type) (gfs: list gfield) (p v : val) (v' : reptype (nested_field_type t_root gfs)), typeof_temp Delta id = Some t -> is_neutral_cast (typeof e) t = true -> typeof e = nested_field_type t_root gfs -> readable_share sh -> type_is_volatile (typeof e) = false -> JMeq v' v -> nth_error R n = Some Pre -> Pre |-- field_at sh t_root gfs v' p * TT -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq (field_address t_root gfs p)) (eval_lvalue e)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_lvalue Delta e) && local `(tc_val (typeof e) v) -> semax Delta (|>PROPx P (LOCALx Q (SEPx R))) (Sset id e) (normal_ret_assert (PROPx P (LOCALx (temp id v :: remove_localdef_temp id Q) (SEPx R)))).",
            "VernacStartTheoremProof",
            "6c9dd4300cacf985716592bf98c52c7febf3be3d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof is_neutral_cast_by_value _ _ H0.",
            "VernacExtend",
            "88e3c01835b378f4b13fe65f721197fb83f17dea"
        ],
        [
            "rewrite H1 in H8.",
            "VernacExtend",
            "48eb04a6b218f573ae8295f24bf602c628abf645"
        ],
        [
            "assert_PROP (field_compatible t_root gfs p).",
            "VernacExtend",
            "b481f6a18d11097c785fef12cf9b163e33415b69"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "erewrite SEP_nth_isolate, <- insert_SEP by eauto.",
            "VernacExtend",
            "a9b0e93716d719d5cccd32182ad476cac5f9d8fd"
        ],
        [
            "apply andp_left2; apply derives_left_sepcon_right_corable; auto.",
            "VernacExtend",
            "8123d3141db7264dc8f0e509e03665132d926725"
        ],
        [
            "intro rho; unfold_lift; simpl.",
            "VernacExtend",
            "07da4873869f78cd2ac551bfcd5e5a8874ca682b"
        ],
        [
            "eapply derives_trans; [apply H6 |].",
            "VernacExtend",
            "1d9e931a1cb7fa11f335f5daed701eae8fe98fb6"
        ],
        [
            "rewrite field_at_compatible'.",
            "VernacExtend",
            "f5e2e83c81cf02214237ad1deed85022a5bc98b1"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "eapply semax_load_nth_ram; try eassumption.",
            "VernacExtend",
            "e2a249c2ab662f27048c66ac335258ceb701f4f8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply self_ramify_trans; [exact H6 |].",
            "VernacExtend",
            "2e4d5b706b745ef6554a3f1d05bd66b9be7e28c6"
        ],
        [
            "eapply RAMIF_PLAIN.weak_ramif_spec.",
            "VernacExtend",
            "85baf42d8fec28aa35862a7c56946763973fed74"
        ],
        [
            "apply mapsto_field_at_ramify; try rewrite <- H1; eauto.",
            "VernacExtend",
            "25ebb5b23b297090e8fb475382795f34cea89c3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_max_path_field_load_nth_ram'': forall {Espec: OracleKind}, forall n Delta sh id P Q R (e1: expr) Pre (t t_root: type) (efs: list efield) (gfsA gfsB: list gfield) (tts: list type) (a v : val) (v' : reptype (nested_field_type t_root (gfsB ++ gfsA))) lr, typeof_temp Delta id = Some t -> is_neutral_cast (typeof (nested_efield e1 efs tts)) t = true -> readable_share sh -> LR_of_type (nested_field_type t_root gfsA) = lr -> type_is_volatile (typeof (nested_efield e1 efs tts)) = false -> legal_nested_efield (nested_field_type t_root gfsA) e1 gfsB tts lr = true -> JMeq v' v -> nth_error R n = Some Pre -> Pre |-- field_at sh t_root (gfsB ++ gfsA) v' a * TT -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq (field_address t_root gfsA a)) (eval_LR e1 lr)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_LR Delta e1 lr) && (tc_efield Delta efs) && local (efield_denote efs gfsB) && local `(tc_val (typeof (nested_efield e1 efs tts)) v) -> semax Delta (|>PROPx P (LOCALx Q (SEPx R))) (Sset id (nested_efield e1 efs tts)) (normal_ret_assert (PROPx P (LOCALx (temp id v :: remove_localdef_temp id Q) (SEPx R)))).",
            "VernacStartTheoremProof",
            "ae3e3a07628cbed7ba48418773a247f202935a52"
        ],
        [
            "intros until 0.",
            "VernacExtend",
            "b949c83e6ce697f8b79a85bd6065627383c6f7de"
        ],
        [
            "intros TId Cast Rsh EqLr Volatile Lnf JM GetR F Evale1 Tc.",
            "VernacExtend",
            "3237307e06ce1376de562782de0488a8d499cad0"
        ],
        [
            "pose proof is_neutral_cast_by_value _ _ Cast as ByVal.",
            "VernacExtend",
            "1e29e77cae64871c5ef200089fcec331af317a8d"
        ],
        [
            "assert_PROP (typeof (nested_efield e1 efs tts) = nested_field_type t_root (gfsB ++ gfsA)) as EqT.",
            "VernacExtend",
            "49a35be449ebda5e7bc897857655f4c2774b1445"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- nested_field_type_nested_field_type.",
            "VernacExtend",
            "681fa281f5ff039f3e1b59a9f4b1be2e6d63a472"
        ],
        [
            "eapply derives_trans; [exact Tc |].",
            "VernacExtend",
            "22bde17e4b028be105c33828bc133a2906c0a3b3"
        ],
        [
            "intros rho; simpl; unfold local, lift1; unfold_lift; normalize.",
            "VernacExtend",
            "9652017b9da774c0fc8d6dc87235aa223347b5d8"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "symmetry; eapply typeof_nested_efield; eauto.",
            "VernacExtend",
            "a90944c0a733e9fd3030e394886fbeb3b6ee18d1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite EqT in ByVal.",
            "VernacExtend",
            "00b873c1055e9deb070a94e9a8ca70506c6a7be8"
        ],
        [
            "assert_PROP (field_compatible t_root (gfsB ++ gfsA) a) as Fc.",
            "VernacExtend",
            "8b4993e0b9bc98403a076a279158281cf1f9db0d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "erewrite SEP_nth_isolate, <- insert_SEP by eauto.",
            "VernacExtend",
            "a9b0e93716d719d5cccd32182ad476cac5f9d8fd"
        ],
        [
            "apply andp_left2; apply derives_left_sepcon_right_corable; auto.",
            "VernacExtend",
            "8123d3141db7264dc8f0e509e03665132d926725"
        ],
        [
            "intro rho; unfold_lift; simpl.",
            "VernacExtend",
            "07da4873869f78cd2ac551bfcd5e5a8874ca682b"
        ],
        [
            "eapply derives_trans; [apply F |].",
            "VernacExtend",
            "d12eefb9bd59b5f8825e14f60371030b054c7290"
        ],
        [
            "rewrite field_at_compatible'.",
            "VernacExtend",
            "f5e2e83c81cf02214237ad1deed85022a5bc98b1"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "eapply semax_load_nth_ram with (p := (field_address t_root (gfsB ++ gfsA) a)).",
            "VernacExtend",
            "139c984cfeed8bfccebf44e78313f5668e2f02fa"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact EqT.",
            "VernacExtend",
            "dffeec815a6a5d2dfd40aba913ad60e852e6c350"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact TId.",
            "VernacExtend",
            "8d855b74c926a5f6a50a33a657d3b41882471199"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact Cast.",
            "VernacExtend",
            "22fb40807b38b4cb3bddc771b33cf43a3ca470d8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite field_address_app.",
            "VernacExtend",
            "8341c375dcb61f6d1e9f6fc5a4ccda01d18551b7"
        ],
        [
            "rewrite (add_andp _ _ Evale1), (add_andp _ _ Tc).",
            "VernacExtend",
            "e352dc1d37909f01fd201764ef84bd24f2fbd3f7"
        ],
        [
            "eapply derives_trans; [| apply eval_lvalue_nested_efield; try eassumption].",
            "VernacExtend",
            "0c19140cf9e7d9d7b30aba8444f4aa0ab03543a1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply field_compatible_app.",
            "VernacExtend",
            "0b6de67a1c851ec748f11d7b1cc884f285c81dc8"
        ],
        [
            "exact Fc.",
            "VernacExtend",
            "214e88ac6bed948373019a2bd76d37d8d0f28235"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite nested_field_type_nested_field_type.",
            "VernacExtend",
            "a28e356bbc52abb775ab574add737072f1c5d4b9"
        ],
        [
            "exact ByVal.",
            "VernacExtend",
            "8733eceaa40deb780df093f835aae7feacb09aea"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply self_ramify_trans; [exact F |].",
            "VernacExtend",
            "f54f9a05d3b9c02851bdf3b560ceb0efa8cfffda"
        ],
        [
            "eapply RAMIF_PLAIN.weak_ramif_spec.",
            "VernacExtend",
            "85baf42d8fec28aa35862a7c56946763973fed74"
        ],
        [
            "apply mapsto_field_at_ramify; [auto | rewrite <- EqT; auto | auto | eauto].",
            "VernacExtend",
            "94a96c0b679d94ef496bf23196758560518517c0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (add_andp _ _ Evale1), (add_andp _ _ Tc).",
            "VernacExtend",
            "e352dc1d37909f01fd201764ef84bd24f2fbd3f7"
        ],
        [
            "eapply derives_trans; [| eapply tc_lvalue_nested_efield].",
            "VernacExtend",
            "0918a41cf7d88870b53b93dae179f67065b26ea8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply field_compatible_app.",
            "VernacExtend",
            "d118722de5f9863394c7c577009d626358a798f6"
        ],
        [
            "exact Fc.",
            "VernacExtend",
            "214e88ac6bed948373019a2bd76d37d8d0f28235"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite nested_field_type_nested_field_type.",
            "VernacExtend",
            "a28e356bbc52abb775ab574add737072f1c5d4b9"
        ],
        [
            "exact ByVal.",
            "VernacExtend",
            "8733eceaa40deb780df093f835aae7feacb09aea"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply derives_trans; [exact Tc |].",
            "VernacExtend",
            "22bde17e4b028be105c33828bc133a2906c0a3b3"
        ],
        [
            "rewrite EqT.",
            "VernacExtend",
            "69da95fb23478697dbbb1c97661c4119a80e313f"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_cast_load_nth_ram_field_at : forall {Espec: OracleKind}{cs: compspecs} n (Delta: tycontext) sh id P Q R e1 Pre t_to t_root gfs (p v_val: val) (v_reptype: reptype (nested_field_type t_root gfs)), typeof e1 = nested_field_type t_root gfs -> type_is_by_value (nested_field_type t_root gfs) = true -> type_is_volatile (nested_field_type t_root gfs) = false -> typeof_temp Delta id = Some t_to -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq (field_address t_root gfs p)) (eval_lvalue e1)) -> nth_error R n = Some Pre -> cast_pointer_to_bool (nested_field_type t_root gfs) t_to = false -> readable_share sh -> Pre |-- field_at sh t_root gfs v_reptype p * TT -> JMeq v_reptype v_val -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_lvalue Delta e1) && local (`(tc_val t_to (eval_cast (nested_field_type t_root gfs) t_to v_val))) -> @semax cs Espec Delta (|> PROPx P (LOCALx Q (SEPx R))) (Sset id (Ecast e1 t_to)) (normal_ret_assert (PROPx P (LOCALx (temp id (eval_cast (nested_field_type t_root gfs) t_to v_val) :: remove_localdef_temp id Q) (SEPx R)))).",
            "VernacStartTheoremProof",
            "235a6ad6e793d3bac0df15d405da5cbec4e394f5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_cast_load_nth_ram.",
            "VernacExtend",
            "3b09dbbe31e3506e2c200f9426e1875285ac0224"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "2: eassumption.",
            "VernacExtend",
            "0ff50f8d3d17a5bf261a0547553b55ca426f43c9"
        ],
        [
            "eapply self_ramify_trans; [exact H7 |].",
            "VernacExtend",
            "54053cc5745eecf62daca4a779cad0d6f5b12b1e"
        ],
        [
            "eapply RAMIF_PLAIN.weak_ramif_spec.",
            "VernacExtend",
            "85baf42d8fec28aa35862a7c56946763973fed74"
        ],
        [
            "apply mapsto_field_at_ramify; auto.",
            "VernacExtend",
            "217f46be56b3b80db40ec8dba58fcc7a71c37d25"
        ],
        [
            "eapply JMeq_sym; exact H8.",
            "VernacExtend",
            "637f73cf11a06bb091272194b8a14ccdb24591df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_max_path_field_cast_load_nth_ram: forall {Espec: OracleKind}, forall n Delta sh id P Q R (e1: expr) Pre (t t_root: type) (efs: list efield) (gfs: list gfield) (tts: list type) (p v: val) (v' : reptype (nested_field_type t_root gfs)) lr, typeof_temp Delta id = Some t -> type_is_by_value (typeof (nested_efield e1 efs tts)) = true -> cast_pointer_to_bool (typeof (nested_efield e1 efs tts)) t = false -> readable_share sh -> LR_of_type t_root = lr -> type_is_volatile (typeof (nested_efield e1 efs tts)) = false -> legal_nested_efield t_root e1 gfs tts lr = true -> JMeq v' v -> nth_error R n = Some Pre -> Pre |-- field_at sh t_root gfs v' p * TT -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq p) (eval_LR e1 lr)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_LR Delta e1 lr) && (tc_efield Delta efs) && local (efield_denote efs gfs) && local `(tc_val t (eval_cast (typeof (nested_efield e1 efs tts)) t v)) -> semax Delta (|> PROPx P (LOCALx Q (SEPx R))) (Sset id (Ecast (nested_efield e1 efs tts) t)) (normal_ret_assert (PROPx P (LOCALx (temp id (eval_cast (typeof (nested_efield e1 efs tts)) t v) :: remove_localdef_temp id Q) (SEPx R)))).",
            "VernacStartTheoremProof",
            "d88d2378c99715b21cb1b396b398a6be8b78e3c1"
        ],
        [
            "intros until 2.",
            "VernacExtend",
            "25d53df52aa689fd0ef563f083611f46b09e6366"
        ],
        [
            "intro HCAST; intros.",
            "VernacExtend",
            "679261dd0ffe5d96be40d54caa68c8c267825efc"
        ],
        [
            "assert_PROP (typeof (nested_efield e1 efs tts) = nested_field_type t_root gfs).",
            "VernacExtend",
            "3190d3b5aa684850bd7f45f0b40929709e642815"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply derives_trans; [exact H9 |].",
            "VernacExtend",
            "97912cb61dacb2ce118fbd9a4feaaacc31a57843"
        ],
        [
            "intros rho; simpl; unfold local, lift1; unfold_lift; normalize.",
            "VernacExtend",
            "9652017b9da774c0fc8d6dc87235aa223347b5d8"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "symmetry; eapply typeof_nested_efield; eauto.",
            "VernacExtend",
            "a90944c0a733e9fd3030e394886fbeb3b6ee18d1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H10 in H0.",
            "VernacExtend",
            "87412b9f3b4392d0e58405031f4bc18cebc3079b"
        ],
        [
            "assert_PROP (field_compatible t_root gfs p).",
            "VernacExtend",
            "b481f6a18d11097c785fef12cf9b163e33415b69"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "erewrite SEP_nth_isolate, <- insert_SEP by eauto.",
            "VernacExtend",
            "a9b0e93716d719d5cccd32182ad476cac5f9d8fd"
        ],
        [
            "apply andp_left2; apply derives_left_sepcon_right_corable; auto.",
            "VernacExtend",
            "8123d3141db7264dc8f0e509e03665132d926725"
        ],
        [
            "intro rho; unfold_lift; simpl.",
            "VernacExtend",
            "07da4873869f78cd2ac551bfcd5e5a8874ca682b"
        ],
        [
            "eapply derives_trans; [apply H7 |].",
            "VernacExtend",
            "7187ca5f3e7e0af853921b90f96887f06547a6e5"
        ],
        [
            "rewrite field_at_compatible'.",
            "VernacExtend",
            "f5e2e83c81cf02214237ad1deed85022a5bc98b1"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H10.",
            "VernacExtend",
            "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
        ],
        [
            "eapply semax_cast_load_nth_ram; try eassumption; [ idtac | rewrite <- H10; eassumption | idtac | apply andp_right].",
            "VernacExtend",
            "075f5fd607e577628f164063a5ab20a204a73730"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (add_andp _ _ H8), (add_andp _ _ H9).",
            "VernacExtend",
            "b81a7224e7f61d86048931fd61fe663af57780fc"
        ],
        [
            "eapply derives_trans; [| apply eval_lvalue_nested_efield; eassumption].",
            "VernacExtend",
            "8789a18004be9b3c9827f24a4260aee0e39a9180"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply self_ramify_trans; [exact H7 |].",
            "VernacExtend",
            "54053cc5745eecf62daca4a779cad0d6f5b12b1e"
        ],
        [
            "eapply RAMIF_PLAIN.weak_ramif_spec.",
            "VernacExtend",
            "85baf42d8fec28aa35862a7c56946763973fed74"
        ],
        [
            "apply mapsto_field_at_ramify; [auto | rewrite <- H10; auto | auto | eauto].",
            "VernacExtend",
            "94b95d710fd57ef81aad29a17ea0cae0279cde8a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (add_andp _ _ H8), (add_andp _ _ H9).",
            "VernacExtend",
            "b81a7224e7f61d86048931fd61fe663af57780fc"
        ],
        [
            "eapply derives_trans; [| eapply tc_lvalue_nested_efield; eassumption].",
            "VernacExtend",
            "99f16f1d4289c6a9feb5b3b14d0bf845d92fb067"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply derives_trans; [exact H9 |].",
            "VernacExtend",
            "97912cb61dacb2ce118fbd9a4feaaacc31a57843"
        ],
        [
            "rewrite H10; solve_andp.",
            "VernacExtend",
            "099e98f720ad31c71fe78e28408b950cb47fba3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lower_andp_lifted_val: forall (P Q: val->mpred) v, (`(P && Q) v) = (`P v && `Q v).",
            "VernacStartTheoremProof",
            "08be8522e727fbb443e5f335695d9be3965e0de5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_one_LOCAL_left: forall P Q0 Q R S, PROPx P (LOCALx Q R) |-- S -> PROPx P (LOCALx (Q0 :: Q) R) |-- S.",
            "VernacStartTheoremProof",
            "c4940cbd78013d74d57417f72aaf26fc950f6cee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H |- *.",
            "VernacExtend",
            "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
        ],
        [
            "intro rho; specialize (H rho).",
            "VernacExtend",
            "1b983fea3e989b87bc144bd12f3bcdceb5fc8413"
        ],
        [
            "unfold PROPx, LOCALx, SEPx in *.",
            "VernacExtend",
            "1e0c24c75051bd828b6b408706b58277b182f42a"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "autorewrite with subst norm1 norm2; normalize.",
            "VernacExtend",
            "48cb35be8e33440ab4cb3a63ac4669687e892c68"
        ],
        [
            "normalize in H.",
            "VernacExtend",
            "8aa6fdd94551e5f31ff2ed7f8f8909b11f3172a2"
        ],
        [
            "autorewrite with subst norm1 norm2 in H; normalize in H; normalize.",
            "VernacExtend",
            "1060816e24d9cc1768c46afe64b3abba404cd23e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_store_nth_ram_field_at: forall {Espec: OracleKind} {cs: compspecs} n Delta sh P Q R e1 e2 Pre Post t_root gfs (p v_val: val) (v_reptype: reptype (nested_field_type t_root gfs)), typeof e1 = nested_field_type t_root gfs -> type_is_by_value (nested_field_type t_root gfs) = true -> type_is_volatile (nested_field_type t_root gfs) = false -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq (field_address t_root gfs p)) (eval_lvalue e1)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq v_val) (eval_expr (Ecast e2 (nested_field_type t_root gfs)))) -> JMeq v_val v_reptype -> nth_error R n = Some Pre -> writable_share sh -> Pre |-- field_at_ sh t_root gfs p * (field_at sh t_root gfs v_reptype p -* Post) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_lvalue Delta e1) && (tc_expr Delta (Ecast e2 (nested_field_type t_root gfs))) -> semax Delta (|> PROPx P (LOCALx Q (SEPx R))) (Sassign e1 e2) (normal_ret_assert (PROPx P (LOCALx Q (SEPx (replace_nth n R Post))))).",
            "VernacStartTheoremProof",
            "b0183b600005c1a34fc131c43302f828ada858db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_store_nth_ram.",
            "VernacExtend",
            "89011232365157972073f8bd1bbd11b7ca8623e6"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "1: eassumption.",
            "VernacExtend",
            "ec8e512409caf9e7c59ec9afa2738b7242487518"
        ],
        [
            "2: eassumption.",
            "VernacExtend",
            "0ff50f8d3d17a5bf261a0547553b55ca426f43c9"
        ],
        [
            "eapply RAMIF_PLAIN.trans; [exact H7 |].",
            "VernacExtend",
            "a5131cb11d10ebf9d61f4d2ca6bc81f0359044b1"
        ],
        [
            "apply mapsto_field_at_ramify; auto.",
            "VernacExtend",
            "217f46be56b3b80db40ec8dba58fcc7a71c37d25"
        ],
        [
            "apply JMeq_sym; apply by_value_default_val; auto.",
            "VernacExtend",
            "7962557f6f7fa6655c4507895960dc5482b8b6c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_max_path_field_store_nth_ram: forall {Espec: OracleKind}, forall n Delta sh P Q R (e1 e2 : expr) Pre Post (t_root: type) (efs: list efield) (gfs: list gfield) (tts: list type) (p v : val) (v' : reptype (nested_field_type t_root gfs)) lr, type_is_by_value (typeof (nested_efield e1 efs tts)) = true -> writable_share sh -> LR_of_type t_root = lr -> type_is_volatile (typeof (nested_efield e1 efs tts)) = false -> legal_nested_efield t_root e1 gfs tts lr = true -> JMeq v v' -> nth_error R n = Some Pre -> Pre |-- field_at_ sh t_root gfs p * (field_at sh t_root gfs v' p -* Post) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq p) (eval_LR e1 lr)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq v) (eval_expr (Ecast e2 (typeof (nested_efield e1 efs tts))))) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_LR Delta e1 lr) && (tc_efield Delta efs) && local (efield_denote efs gfs) && (tc_expr Delta (Ecast e2 (typeof (nested_efield e1 efs tts)))) -> semax Delta (|>PROPx P (LOCALx Q (SEPx R))) (Sassign (nested_efield e1 efs tts) e2) (normal_ret_assert (PROPx P (LOCALx Q (SEPx (replace_nth n R Post))))).",
            "VernacStartTheoremProof",
            "e5a62031faf287bb122f22686b1f605749c122e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_PROP (typeof (nested_efield e1 efs tts) = nested_field_type t_root gfs).",
            "VernacExtend",
            "3190d3b5aa684850bd7f45f0b40929709e642815"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply derives_trans; [exact H9 |].",
            "VernacExtend",
            "97912cb61dacb2ce118fbd9a4feaaacc31a57843"
        ],
        [
            "intros rho; simpl; unfold local, lift1; unfold_lift; normalize.",
            "VernacExtend",
            "9652017b9da774c0fc8d6dc87235aa223347b5d8"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "symmetry; eapply typeof_nested_efield; eauto.",
            "VernacExtend",
            "a90944c0a733e9fd3030e394886fbeb3b6ee18d1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert_PROP (field_compatible t_root gfs p).",
            "VernacExtend",
            "b481f6a18d11097c785fef12cf9b163e33415b69"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "erewrite SEP_nth_isolate, <- insert_SEP by eauto.",
            "VernacExtend",
            "a9b0e93716d719d5cccd32182ad476cac5f9d8fd"
        ],
        [
            "apply andp_left2; apply derives_left_sepcon_right_corable; auto.",
            "VernacExtend",
            "8123d3141db7264dc8f0e509e03665132d926725"
        ],
        [
            "intro rho; unfold_lift; simpl.",
            "VernacExtend",
            "07da4873869f78cd2ac551bfcd5e5a8874ca682b"
        ],
        [
            "eapply derives_trans; [apply H6 |].",
            "VernacExtend",
            "1d9e931a1cb7fa11f335f5daed701eae8fe98fb6"
        ],
        [
            "unfold field_at_; rewrite (field_at_compatible' _ _ _ (default_val _)).",
            "VernacExtend",
            "c37cdf4b2d20b54df460dcce3f94e09b5c119352"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite H10 in H.",
            "VernacExtend",
            "33a327d8dff89d8e7c9ab2aca9d53db43dafafa5"
        ],
        [
            "eapply semax_store_nth_ram; eauto.",
            "VernacExtend",
            "10fb726cbfa3986f0c4a92245ccb10f4d43087ee"
        ],
        [
            "4: apply andp_right.",
            "VernacExtend",
            "7555e67083e3a4c4497f31580a9529d4bd14903f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (add_andp _ _ H7), (add_andp _ _ H9).",
            "VernacExtend",
            "b0b9492c44e7d77ee0e833ac8b6bc4fc152f2531"
        ],
        [
            "eapply derives_trans; [| apply eval_lvalue_nested_efield; eassumption].",
            "VernacExtend",
            "8789a18004be9b3c9827f24a4260aee0e39a9180"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- H10; exact H8.",
            "VernacExtend",
            "205b42d634e1015bb01b2ddf27760be6114b361a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply RAMIF_PLAIN.trans; [exact H6 |].",
            "VernacExtend",
            "9acca50d9ded5ec28fe4207e1d1e5bced505e6a8"
        ],
        [
            "apply mapsto_field_at_ramify; [auto | rewrite <- H10; auto | | auto].",
            "VernacExtend",
            "6b9c5fdea70530af5c35e00f791d90b406dccdbd"
        ],
        [
            "apply JMeq_sym; apply by_value_default_val; auto.",
            "VernacExtend",
            "7962557f6f7fa6655c4507895960dc5482b8b6c6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (add_andp _ _ H7), (add_andp _ _ H9).",
            "VernacExtend",
            "b0b9492c44e7d77ee0e833ac8b6bc4fc152f2531"
        ],
        [
            "eapply derives_trans; [| eapply tc_lvalue_nested_efield; eassumption].",
            "VernacExtend",
            "99f16f1d4289c6a9feb5b3b14d0bf845d92fb067"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply derives_trans; [exact H9 |].",
            "VernacExtend",
            "97912cb61dacb2ce118fbd9a4feaaacc31a57843"
        ],
        [
            "rewrite H10; solve_andp.",
            "VernacExtend",
            "099e98f720ad31c71fe78e28408b950cb47fba3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_partial_path_field_store_nth_ram: forall {Espec: OracleKind}, forall n Delta sh P Q R (e1 e2 : expr) Pre Post (t_root: type) (efs: list efield) (gfsA gfsB: list gfield) (tts: list type) (a v : val) (v' : reptype (nested_field_type t_root (gfsB ++ gfsA))) lr, type_is_by_value (typeof (nested_efield e1 efs tts)) = true -> writable_share sh -> LR_of_type (nested_field_type t_root gfsA) = lr -> type_is_volatile (typeof (nested_efield e1 efs tts)) = false -> JMeq v v' -> nth_error R n = Some Pre -> Pre |-- field_at_ sh t_root (gfsB ++ gfsA) a * (field_at sh t_root (gfsB ++ gfsA) v' a -* Post) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq (field_address t_root gfsA a)) (eval_LR e1 lr)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq v) (eval_expr (Ecast e2 (typeof (nested_efield e1 efs tts))))) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_LR Delta e1 lr) && (tc_efield Delta efs) && local (efield_denote efs gfsB) && (tc_expr Delta (Ecast e2 (typeof (nested_efield e1 efs tts)))) -> legal_nested_efield (nested_field_type t_root gfsA) e1 gfsB tts lr = true -> semax Delta (|>PROPx P (LOCALx Q (SEPx R))) (Sassign (nested_efield e1 efs tts) e2) (normal_ret_assert (PROPx P (LOCALx Q (SEPx (replace_nth n R Post))))).",
            "VernacStartTheoremProof",
            "3110c9fcb92c5e1f9cd9e9e07e7e616457074a84"
        ],
        [
            "intros until 0.",
            "VernacExtend",
            "b949c83e6ce697f8b79a85bd6065627383c6f7de"
        ],
        [
            "intros ByVal Wsh LRo Volatile JM GetR F Evale1 Evale2 Tc Lnef.",
            "VernacExtend",
            "1993a06bb2e4355df5d1424b4d92f5b794f88775"
        ],
        [
            "assert_PROP (typeof (nested_efield e1 efs tts) = nested_field_type t_root (gfsB ++ gfsA)) as EqT.",
            "VernacExtend",
            "49a35be449ebda5e7bc897857655f4c2774b1445"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- nested_field_type_nested_field_type.",
            "VernacExtend",
            "681fa281f5ff039f3e1b59a9f4b1be2e6d63a472"
        ],
        [
            "eapply derives_trans; [exact Tc |].",
            "VernacExtend",
            "22bde17e4b028be105c33828bc133a2906c0a3b3"
        ],
        [
            "intros rho; simpl; unfold local, lift1; unfold_lift; normalize.",
            "VernacExtend",
            "9652017b9da774c0fc8d6dc87235aa223347b5d8"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "symmetry; eapply typeof_nested_efield; eauto.",
            "VernacExtend",
            "a90944c0a733e9fd3030e394886fbeb3b6ee18d1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite EqT in ByVal.",
            "VernacExtend",
            "00b873c1055e9deb070a94e9a8ca70506c6a7be8"
        ],
        [
            "assert_PROP (field_compatible t_root (gfsB ++ gfsA) a) as Fc.",
            "VernacExtend",
            "8b4993e0b9bc98403a076a279158281cf1f9db0d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "erewrite SEP_nth_isolate, <- insert_SEP by eauto.",
            "VernacExtend",
            "a9b0e93716d719d5cccd32182ad476cac5f9d8fd"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply derives_left_sepcon_right_corable; auto.",
            "VernacExtend",
            "4e31997407b957135e965f932b6f368a4369ce35"
        ],
        [
            "intro rho; unfold_lift; simpl.",
            "VernacExtend",
            "07da4873869f78cd2ac551bfcd5e5a8874ca682b"
        ],
        [
            "eapply derives_trans; [apply F |].",
            "VernacExtend",
            "d12eefb9bd59b5f8825e14f60371030b054c7290"
        ],
        [
            "apply derives_left_sepcon_right_corable; auto.",
            "VernacExtend",
            "4e31997407b957135e965f932b6f368a4369ce35"
        ],
        [
            "unfold field_at_.",
            "VernacExtend",
            "e7f08d89e46f82203ab7fbfe44e8d40880188c63"
        ],
        [
            "rewrite field_at_compatible'.",
            "VernacExtend",
            "f5e2e83c81cf02214237ad1deed85022a5bc98b1"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "eapply semax_store_nth_ram with (p := (field_address t_root (gfsB ++ gfsA) a)).",
            "VernacExtend",
            "5019e9aeffdb49eb42f323cea5517b90cd0c3e64"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact EqT.",
            "VernacExtend",
            "dffeec815a6a5d2dfd40aba913ad60e852e6c350"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite field_address_app.",
            "VernacExtend",
            "8341c375dcb61f6d1e9f6fc5a4ccda01d18551b7"
        ],
        [
            "rewrite (add_andp _ _ Evale1), (add_andp _ _ Tc).",
            "VernacExtend",
            "e352dc1d37909f01fd201764ef84bd24f2fbd3f7"
        ],
        [
            "eapply derives_trans; [| apply eval_lvalue_nested_efield; try eassumption].",
            "VernacExtend",
            "0c19140cf9e7d9d7b30aba8444f4aa0ab03543a1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply field_compatible_app.",
            "VernacExtend",
            "0b6de67a1c851ec748f11d7b1cc884f285c81dc8"
        ],
        [
            "exact Fc.",
            "VernacExtend",
            "214e88ac6bed948373019a2bd76d37d8d0f28235"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite nested_field_type_nested_field_type.",
            "VernacExtend",
            "a28e356bbc52abb775ab574add737072f1c5d4b9"
        ],
        [
            "exact ByVal.",
            "VernacExtend",
            "8733eceaa40deb780df093f835aae7feacb09aea"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- EqT.",
            "VernacExtend",
            "a3990007921b8ddd65644208449271cbd3db8aab"
        ],
        [
            "exact Evale2.",
            "VernacExtend",
            "f7c2aed20e37117783487e60576c5d361dc0b619"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact GetR.",
            "VernacExtend",
            "ec6d38c563f22e5048aa2fecbd49553f21936eca"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact Wsh.",
            "VernacExtend",
            "d12f7e75fa8be6efaea1371f02a342bf065fc06d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply RAMIF_PLAIN.trans; [exact F |].",
            "VernacExtend",
            "074cca4683eae05d3be28cfc0ebd41284aaec9f6"
        ],
        [
            "apply mapsto_field_at_ramify; [auto | rewrite <- EqT; auto | | auto].",
            "VernacExtend",
            "21fbd067a1f559f97aa904f5f673212913ad05fd"
        ],
        [
            "apply JMeq_sym; apply by_value_default_val; auto.",
            "VernacExtend",
            "7962557f6f7fa6655c4507895960dc5482b8b6c6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (add_andp _ _ Evale1), (add_andp _ _ Tc).",
            "VernacExtend",
            "e352dc1d37909f01fd201764ef84bd24f2fbd3f7"
        ],
        [
            "eapply derives_trans; [| eapply tc_lvalue_nested_efield].",
            "VernacExtend",
            "0918a41cf7d88870b53b93dae179f67065b26ea8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "solve_andp.",
            "VernacExtend",
            "bccf1b813da042eca96caab31f2668d6a0d95e19"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply field_compatible_app.",
            "VernacExtend",
            "0b6de67a1c851ec748f11d7b1cc884f285c81dc8"
        ],
        [
            "exact Fc.",
            "VernacExtend",
            "214e88ac6bed948373019a2bd76d37d8d0f28235"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exact LRo.",
            "VernacExtend",
            "67f86cb5f24416d5d3f1135ad2ed01f05ab301fe"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exact Lnef.",
            "VernacExtend",
            "1b45369b631f731952cb0facecb5b90615dca8af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite nested_field_type_nested_field_type.",
            "VernacExtend",
            "a28e356bbc52abb775ab574add737072f1c5d4b9"
        ],
        [
            "exact ByVal.",
            "VernacExtend",
            "8733eceaa40deb780df093f835aae7feacb09aea"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply derives_trans; [exact Tc |].",
            "VernacExtend",
            "22bde17e4b028be105c33828bc133a2906c0a3b3"
        ],
        [
            "rewrite EqT; solve_andp.",
            "VernacExtend",
            "5fddbbba58899fdc1950f196c24bf2558344ec25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_no_path_field_store_nth_ram: forall {Espec: OracleKind}, forall n Delta sh P Q R (e1 e2 : expr) Pre Post (t_root: type) (gfs: list gfield) (a v : val) (v' : reptype (nested_field_type t_root gfs)), type_is_by_value (typeof e1) = true -> writable_share sh -> type_is_volatile (typeof e1) = false -> typeof e1 = nested_field_type t_root gfs -> JMeq v v' -> nth_error R n = Some Pre -> Pre |-- field_at_ sh t_root gfs a * (field_at sh t_root gfs v' a -* Post) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq (field_address t_root gfs a)) (eval_lvalue e1)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq v) (eval_expr (Ecast e2 (typeof e1)))) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_lvalue Delta e1) && (tc_expr Delta (Ecast e2 (typeof e1))) -> semax Delta (|>PROPx P (LOCALx Q (SEPx R))) (Sassign e1 e2) (normal_ret_assert (PROPx P (LOCALx Q (SEPx (replace_nth n R Post))))).",
            "VernacStartTheoremProof",
            "53541a971367c45381f505aa2233778b36787229"
        ],
        [
            "intros until 0.",
            "VernacExtend",
            "b949c83e6ce697f8b79a85bd6065627383c6f7de"
        ],
        [
            "intros ByVal Wsh Volatile EqT JM GetR F Evale1 Evale2 Tc.",
            "VernacExtend",
            "46afb3712c5601f100acaf1b4c916ea1850a67d1"
        ],
        [
            "rewrite EqT in ByVal.",
            "VernacExtend",
            "00b873c1055e9deb070a94e9a8ca70506c6a7be8"
        ],
        [
            "eapply semax_store_nth_ram with (p := (field_address t_root gfs a)).",
            "VernacExtend",
            "c62e042c72b6dc06f34dba06d210ae854784c1fe"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact EqT.",
            "VernacExtend",
            "dffeec815a6a5d2dfd40aba913ad60e852e6c350"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact Evale1.",
            "VernacExtend",
            "8f63a70ab3636d6f7d0aaf5b53c8713b15478ebb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- EqT.",
            "VernacExtend",
            "a3990007921b8ddd65644208449271cbd3db8aab"
        ],
        [
            "exact Evale2.",
            "VernacExtend",
            "f7c2aed20e37117783487e60576c5d361dc0b619"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact GetR.",
            "VernacExtend",
            "ec6d38c563f22e5048aa2fecbd49553f21936eca"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact Wsh.",
            "VernacExtend",
            "d12f7e75fa8be6efaea1371f02a342bf065fc06d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply RAMIF_PLAIN.trans; [exact F |].",
            "VernacExtend",
            "074cca4683eae05d3be28cfc0ebd41284aaec9f6"
        ],
        [
            "apply mapsto_field_at_ramify; [auto | rewrite <- EqT; auto | | auto].",
            "VernacExtend",
            "21fbd067a1f559f97aa904f5f673212913ad05fd"
        ],
        [
            "apply JMeq_sym; apply by_value_default_val; auto.",
            "VernacExtend",
            "7962557f6f7fa6655c4507895960dc5482b8b6c6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- EqT.",
            "VernacExtend",
            "a3990007921b8ddd65644208449271cbd3db8aab"
        ],
        [
            "exact Tc.",
            "VernacExtend",
            "110a705f4e0f54fa3686ddc79a2a92b331dad5c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LOADSTORE_FIELD_AT.",
            "VernacEndSegment",
            "766e801af775ad28137f86ee8b82c4aba3452053"
        ]
    ],
    "proofs": [
        {
            "name": "is_neutral_cast_by_value",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct t, t'; try inversion H; simpl; auto.",
                        "VernacExtend",
                        "d2e58c2aa787fc1a9565ad7bcc5af019960a16d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "self_ramify_trans",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros A ND SL ? ? ? ? ?.",
                        "VernacExtend",
                        "d51e62dc258c80ed4954b46612920ddfead1776c"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [exact H |].",
                        "VernacExtend",
                        "d21d6405bee344c91db85ac467fbe4bb5450f214"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply sepcon_derives; [exact H0 | apply derives_refl] |].",
                        "VernacExtend",
                        "a0c6a103e31f07c0d1153ac958de3c43d2be3530"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lower_andp_lifted_val",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_one_LOCAL_left",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H |- *.",
                        "VernacExtend",
                        "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
                    ]
                },
                {
                    "command": [
                        "intro rho; specialize (H rho).",
                        "VernacExtend",
                        "1b983fea3e989b87bc144bd12f3bcdceb5fc8413"
                    ]
                },
                {
                    "command": [
                        "unfold PROPx, LOCALx, SEPx in *.",
                        "VernacExtend",
                        "1e0c24c75051bd828b6b408706b58277b182f42a"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "autorewrite with subst norm1 norm2; normalize.",
                        "VernacExtend",
                        "48cb35be8e33440ab4cb3a63ac4669687e892c68"
                    ]
                },
                {
                    "command": [
                        "normalize in H.",
                        "VernacExtend",
                        "8aa6fdd94551e5f31ff2ed7f8f8909b11f3172a2"
                    ]
                },
                {
                    "command": [
                        "autorewrite with subst norm1 norm2 in H; normalize in H; normalize.",
                        "VernacExtend",
                        "1060816e24d9cc1768c46afe64b3abba404cd23e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}