{
    "filename": "floyd/computable_theorems.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Coq.ZArith.ZArith.",
            "VernacRequire",
            "75233d7b9135f982328c9c060998d6513587b48b"
        ],
        [
            "Require Import Coq.ZArith.Znumtheory.",
            "VernacRequire",
            "7b82cfae5a8682219084566e4cfa94389c48d7f0"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import Coq.Bool.Bool.",
            "VernacRequire",
            "38f52b48f6f716417469716568252bf78819181b"
        ],
        [
            "Require Import compcert.cfrontend.Ctypes.",
            "VernacRequire",
            "7112843117c4021682751b14f43439fd963104b6"
        ],
        [
            "Definition in_eq: forall {A: Type} (a:A) l, In a (a::l) := fun A a l => or_introl eq_refl.",
            "VernacDefinition",
            "1a2e57a1bda71be962a9aa6f276f134fae0ffa36"
        ],
        [
            "Definition Forall_forall: forall {A : Type} (P : A -> Prop) (l : list A), Forall P l <-> (forall x : A, In x l -> P x) := fun (A : Type) (P : A -> Prop) (l : list A) => conj (fun H : Forall P l => Forall_ind (fun l0 : list A => forall x : A, In x l0 -> P x) (fun (x : A) (H0 : In x nil) => False_ind (P x) H0) (fun (x : A) (l0 : list A) (H0 : P x) (_ : Forall P l0) (IHForall : forall x0 : A, In x0 l0 -> P x0) (x0 : A) (H2 : In x0 (x :: l0)) => or_ind (fun H3 : x = x0 => eq_ind_r (fun x1 : A => P x1 -> P x0) (fun H4 : P x0 => H4) H3 H0) (fun H3 : In x0 l0 => (fun H4 : In x0 l0 -> P x0 => (fun H5 : P x0 => H5) (H4 H3)) (IHForall x0)) H2) H) (list_ind (fun l0 : list A => (forall x : A, In x l0 -> P x) -> Forall P l0) (fun _ : forall x : A, In x nil -> P x => Forall_nil P) (fun (a : A) (l0 : list A) (IHl : (forall x : A, In x l0 -> P x) -> Forall P l0) (H : forall x : A, In x (a :: l0) -> P x) => (fun H0 : forall x : A, In x l0 -> P x => (fun H1 : forall x : A, In x l0 -> P x => (fun H2 : Forall P l0 => (fun H3 : A => (fun X : A => (fun H4 : In X (a :: l0) -> P X => (fun (_ : a = X -> P X) (_ : (fix In (a0 : A) (l1 : list A) {struct l1} : Prop := match l1 with | nil => False | b :: m => b = a0 \\/ In a0 m end) X l0 -> P X) => Forall_cons a (H a (in_eq a l0)) H2) (fun H5 : a = X => H4 (or_introl H5)) (fun H5 : (fix In (a0 : A) (l1 : list A) {struct l1} : Prop := match l1 with | nil => False | b :: m => b = a0 \\/ In a0 m end) X l0 => H4 (or_intror H5))) (H X)) H3) a) (IHl H1)) H0) (fun (x : A) (H0 : In x l0) => (fun H1 : In x (a :: l0) -> P x => (fun (_ : a = x -> P x) (H3 : (fix In (a0 : A) (l1 : list A) {struct l1} : Prop := match l1 with | nil => False | b :: m => b = a0 \\/ In a0 m end) x l0 -> P x) => (fun H4 : P x => H4) (H3 H0)) (fun H2 : a = x => H1 (or_introl H2)) (fun H2 : (fix In (a0 : A) (l1 : list A) {struct l1} : Prop := match l1 with | nil => False | b :: m => b = a0 \\/ In a0 m end) x l0 => H1 (or_intror H2))) (H x))) l).",
            "VernacDefinition",
            "6e7d4f9bf77dd087334dd2e7713f7bb359461197"
        ],
        [
            "Lemma Forall_forall1: forall {A : Type} (P : A -> Prop) (l : list A), Forall P l -> (forall x : A, In x l -> P x).",
            "VernacStartTheoremProof",
            "0905c0f74e7632e258a3354d7799348f053e1aef"
        ],
        [
            "intros until 1.",
            "VernacExtend",
            "02a88d708d00fec9315af96f54c66efbe80acead"
        ],
        [
            "destruct (@Forall_forall A P l).",
            "VernacExtend",
            "ddc90c6eea36da82930b632089587b47646406fe"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Zcompare_refl: forall n, Z.compare n n = Eq.",
            "VernacStartTheoremProof",
            "4665bab7d7befcb0ab952951a15f455cb4fa5a47"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n; simpl.",
            "VernacExtend",
            "6554f156164019d92e1907ce49ab9159d733a0bb"
        ],
        [
            "apply eq_refl.",
            "VernacExtend",
            "7c24386880b38fe6934d624f41ac1fd4ba47d797"
        ],
        [
            "unfold Pos.compare.",
            "VernacExtend",
            "8368b4e5c98391622d4b1507f2910e985b6b5ef6"
        ],
        [
            "induction p; simpl; auto.",
            "VernacExtend",
            "88325bdd8545333293e9ffca328a83c63085683a"
        ],
        [
            "unfold Pos.compare.",
            "VernacExtend",
            "8368b4e5c98391622d4b1507f2910e985b6b5ef6"
        ],
        [
            "induction p; simpl; auto.",
            "VernacExtend",
            "88325bdd8545333293e9ffca328a83c63085683a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Zle_refl: forall n, Z.le n n.",
            "VernacStartTheoremProof",
            "e23de86f11e8dee0ab413adb73f223d0cf8e4166"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Z.le.",
            "VernacExtend",
            "7fbfca7b8c0c3a2e874409c0360b07334595e062"
        ],
        [
            "rewrite Zcompare_refl.",
            "VernacExtend",
            "e6df00582123cf70582ee3a8b5db6fc1da834559"
        ],
        [
            "intro; discriminate.",
            "VernacExtend",
            "d63764752b13c9777fe3ccb54c65ae24ab510154"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Zle_max_l: forall n m : Z, n <= Z.max n m.",
            "VernacStartTheoremProof",
            "2f5c89643f3f38ce970cf86d2901622bc1ae505b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Z.max.",
            "VernacExtend",
            "dbe9d9def4535823478fdce7e1398cc0d33f9525"
        ],
        [
            "unfold Z.le.",
            "VernacExtend",
            "7fbfca7b8c0c3a2e874409c0360b07334595e062"
        ],
        [
            "destruct (n?=m) eqn:H.",
            "VernacExtend",
            "f675a5dafc0cbbdac8f6e088aa7a5ed43e913bfd"
        ],
        [
            "rewrite Zcompare_refl; intro; discriminate.",
            "VernacExtend",
            "b97dc2d56b2a05e3c3875ffc61d43d31edadec25"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "intro; discriminate.",
            "VernacExtend",
            "d63764752b13c9777fe3ccb54c65ae24ab510154"
        ],
        [
            "rewrite Zcompare_refl; intro; discriminate.",
            "VernacExtend",
            "b97dc2d56b2a05e3c3875ffc61d43d31edadec25"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Pos_compare_cont_antisym : forall (p q : positive) (c : comparison), eq (CompOpp (Pos.compare_cont c p q)) (Pos.compare_cont (CompOpp c) q p ) := fun (p q : positive) (c : comparison) => positive_ind (fun p0 : positive => forall (q0 : positive) (c0 : comparison), CompOpp (Pos.compare_cont c0 p0 q0) = Pos.compare_cont (CompOpp c0) q0 p0) (fun (p0 : positive) (IHp : forall (q0 : positive) (c0 : comparison), CompOpp (Pos.compare_cont c0 p0 q0) = Pos.compare_cont (CompOpp c0) q0 p0) (q0 : positive) => match q0 as p1 return (forall c0 : comparison, CompOpp (Pos.compare_cont c0 p0~1 p1) = Pos.compare_cont (CompOpp c0) p1 p0~1) with | (q1~1)%positive => fun c0 : comparison => IHp q1 c0 | (q1~0)%positive => fun c0 : comparison => IHp q1 Gt | 1%positive => fun c0 : comparison => eq_refl end) (fun (p0 : positive) (IHp : forall (q0 : positive) (c0 : comparison), CompOpp (Pos.compare_cont c0 p0 q0) = Pos.compare_cont (CompOpp c0) q0 p0) (q0 : positive) => match q0 as p1 return (forall c0 : comparison, CompOpp (Pos.compare_cont c0 p0~0 p1) = Pos.compare_cont (CompOpp c0) p1 p0~0) with | (q1~1)%positive => fun c0 : comparison => IHp q1 Lt | (q1~0)%positive => fun c0 : comparison => IHp q1 c0 | 1%positive => fun c0 : comparison => eq_refl end) (fun q0 : positive => match q0 as p0 return (forall c0 : comparison, CompOpp (Pos.compare_cont c0 1 p0) = Pos.compare_cont (CompOpp c0) p0 1) with | (q1~1)%positive => fun c0 : comparison => eq_refl | (q1~0)%positive => fun c0 : comparison => eq_refl | 1%positive => fun c0 : comparison => eq_refl end) p q c.",
            "VernacDefinition",
            "b395731b306f25afd272fd1215c4c77fe212f0a8"
        ],
        [
            "Definition Pos_compare_antisym: forall p q : positive, eq (Pos.compare q p) (CompOpp (Pos.compare p q)) := fun p q : positive => eq_ind_r (fun c : comparison => eq (Pos.compare_cont Eq q p) c) eq_refl (Pos_compare_cont_antisym p q Eq).",
            "VernacDefinition",
            "ce95b41bc18d3d257bbfdd3c292b3803cd8d2bae"
        ],
        [
            "Lemma Pos_compare_absurd: forall x y c, (eq (Pos.compare_cont c x y) Eq) -> c=Eq.",
            "VernacStartTheoremProof",
            "054e95afd555fe3e79e861375253345dc17a842a"
        ],
        [
            "induction x; destruct y; simpl; intros; eauto; try discriminate.",
            "VernacExtend",
            "b91efbffd6a6a9f6c318b78b71c0fa0c010c4b42"
        ],
        [
            "apply IHx in H; discriminate.",
            "VernacExtend",
            "0d1ea842626c94c2037e428115eb5a2fe6826eea"
        ],
        [
            "apply IHx in H; discriminate.",
            "VernacExtend",
            "0d1ea842626c94c2037e428115eb5a2fe6826eea"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Pos_compare_cont_eq: forall x y c, eq (Pos.compare_cont c x y) Eq -> eq x y.",
            "VernacStartTheoremProof",
            "b33bf8dff9da5d3cb48e242c508741220d61debd"
        ],
        [
            "induction x; destruct y; simpl; intros; auto; try discriminate.",
            "VernacExtend",
            "dba981a187ba838c955caefb20facd924f91e2b0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "apply Pos_compare_absurd in H; inversion H.",
            "VernacExtend",
            "a45433a9c946654908171fbbe5813e02956fc982"
        ],
        [
            "apply Pos_compare_absurd in H; inversion H.",
            "VernacExtend",
            "a45433a9c946654908171fbbe5813e02956fc982"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Pos_compare_eq: forall x y, eq (Pos.compare x y) Eq -> eq x y.",
            "VernacStartTheoremProof",
            "e73ed51393c923e1d0facdbc20e24c091259b3f8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Pos_compare_cont_eq in H; auto.",
            "VernacExtend",
            "5378ff2941b191cb5b8f5b5acb97284613f3f8d3"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Zmax_comm: forall n m, Z.max n m = Z.max m n.",
            "VernacStartTheoremProof",
            "7dfaca0edad0a20bd1ba0574e33f00c21b1daeb9"
        ],
        [
            "destruct n, m; simpl; try apply eq_refl.",
            "VernacExtend",
            "99d4f5ad6d4aefd3335f7fe94923b5c5fe7b2d57"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Z.max; simpl.",
            "VernacExtend",
            "8f8b9a35f79f7f6727274d16fc401c4c50b67446"
        ],
        [
            "rename p0 into q.",
            "VernacExtend",
            "972f1243924dd3a6cfad1f022f945d6c873786fb"
        ],
        [
            "rewrite Pos_compare_antisym.",
            "VernacExtend",
            "b62baf7e8feb6d1a2993ae4fe19e6305be2ff715"
        ],
        [
            "destruct (Pos.compare q p) eqn:?; simpl; try reflexivity.",
            "VernacExtend",
            "e2529c73e5144aaf056e26bba3ad32e3baf33c91"
        ],
        [
            "apply Pos_compare_eq in Heqc.",
            "VernacExtend",
            "0160265b9c0baf2b5f5770774bdc5b6adcb787d6"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Z.max; simpl.",
            "VernacExtend",
            "8f8b9a35f79f7f6727274d16fc401c4c50b67446"
        ],
        [
            "rename p0 into q.",
            "VernacExtend",
            "972f1243924dd3a6cfad1f022f945d6c873786fb"
        ],
        [
            "rewrite Pos_compare_antisym.",
            "VernacExtend",
            "b62baf7e8feb6d1a2993ae4fe19e6305be2ff715"
        ],
        [
            "destruct (Pos.compare q p) eqn:?; simpl; try reflexivity.",
            "VernacExtend",
            "e2529c73e5144aaf056e26bba3ad32e3baf33c91"
        ],
        [
            "apply Pos_compare_eq in Heqc.",
            "VernacExtend",
            "0160265b9c0baf2b5f5770774bdc5b6adcb787d6"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Zle_max_r: forall n m : Z, m <= Z.max n m.",
            "VernacStartTheoremProof",
            "d77390bfa35117d9c1a829829728eb5131c11924"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Z.max_comm.",
            "VernacExtend",
            "ab8c28040c7f750b21a4489b9ecd2c088caeb250"
        ],
        [
            "apply Zle_max_l.",
            "VernacExtend",
            "6915d7f86eef8e3b4797486745a8a40aeb4c990b"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Local Open Scope nat.",
            "VernacOpenCloseScope",
            "ca28b73035994bc8f27e96d91e3a49ff01514eda"
        ],
        [
            "Definition le_pred: forall n m : nat, n <= m -> pred n <= pred m := fun (n m : nat) (H : n <= m) => le_ind n (fun m0 : nat => pred n <= pred m0) (le_n (pred n)) (fun (m0 : nat) (H0 : n <= m0) (IHle : pred n <= pred m0) => match m0 as n0 return (n <= n0 -> pred n <= pred n0 -> pred n <= pred (S n0)) with | 0 => fun (_ : n <= 0) (IHle0 : pred n <= pred 0) => IHle0 | S m1 => fun (_ : n <= S m1) (IHle0 : pred n <= pred (S m1)) => le_S (pred n) m1 IHle0 end H0 IHle) m H.",
            "VernacDefinition",
            "6f4d44245ea4820f15bedc4cbc990a93b7bbc340"
        ],
        [
            "Definition le_S_n : forall n m : nat, S n <= S m -> n <= m := fun n m => le_pred (S n) (S m).",
            "VernacDefinition",
            "a6a0974b49c9639e277303694e022dc4998a4c26"
        ],
        [
            "Definition max_l: forall n m : nat, m <= n -> max n m = n := fun n : nat => nat_ind (fun n0 : nat => forall m : nat, m <= n0 -> max n0 m = n0) (fun m : nat => match m as n0 return (n0 <= 0 -> max 0 n0 = 0) with | 0 => fun _ : 0 <= 0 => eq_refl | S m0 => fun H : S m0 <= 0 => (fun H0 : 0 = 0 -> S m0 = 0 => H0 eq_refl) match H in (_ <= n0) return (n0 = 0 -> S m0 = 0) with | le_n => fun H0 : S m0 = 0 => (fun H1 : S m0 = 0 => (fun H2 : False => (fun H3 : False => False_ind (S m0 = 0) H3) H2) (eq_ind (S m0) (fun e : nat => match e with | 0 => False | S _ => True end) I 0 H1)) H0 | le_S m1 H0 => fun H1 : S m1 = 0 => (fun H2 : S m1 = 0 => (fun H3 : False => (fun H4 : False => False_ind (S m0 <= m1 -> S m0 = 0) H4) H3) (eq_ind (S m1) (fun e : nat => match e with | 0 => False | S _ => True end) I 0 H2)) H1 H0 end end) (fun (n0 : nat) (IHn : forall m : nat, m <= n0 -> max n0 m = n0) (m : nat) => match m as n1 return (n1 <= S n0 -> max (S n0) n1 = S n0) with | 0 => fun _ : 0 <= S n0 => eq_refl | S m0 => fun H : S m0 <= S n0 => f_equal S (IHn m0 (le_S_n m0 n0 H)) end) n.",
            "VernacDefinition",
            "0546041154f1b2cf07d29d960e7c135b4f935849"
        ],
        [
            "Definition max_r : forall n m : nat, n <= m -> max n m = m := fun n : nat => nat_ind (fun n0 : nat => forall m : nat, n0 <= m -> max n0 m = m) (fun m : nat => match m as n0 return (0 <= n0 -> max 0 n0 = n0) with | 0 => fun _ : 0 <= 0 => eq_refl | S m0 => fun _ : 0 <= S m0 => eq_refl end) (fun (n0 : nat) (IHn : forall m : nat, n0 <= m -> max n0 m = m) (m : nat) => match m as n1 return (S n0 <= n1 -> max (S n0) n1 = n1) with | 0 => fun H : S n0 <= 0 => (fun H0 : 0 = 0 -> S n0 = 0 => H0 eq_refl) match H in (_ <= n1) return (n1 = 0 -> S n0 = 0) with | le_n => fun H0 : S n0 = 0 => (fun H1 : S n0 = 0 => (fun H2 : False => (fun H3 : False => False_ind (S n0 = 0) H3) H2) (eq_ind (S n0) (fun e : nat => match e with | 0 => False | S _ => True end) I 0 H1)) H0 | le_S m0 H0 => fun H1 : S m0 = 0 => (fun H2 : S m0 = 0 => (fun H3 : False => (fun H4 : False => False_ind (S n0 <= m0 -> S n0 = 0) H4) H3) (eq_ind (S m0) (fun e : nat => match e with | 0 => False | S _ => True end) I 0 H2)) H1 H0 end | S m0 => fun H : S n0 <= S m0 => f_equal S (IHn m0 (le_S_n n0 m0 H)) end) n.",
            "VernacDefinition",
            "6241ec09f623fcb245b1a17824a45a1b18da6275"
        ],
        [
            "Definition le_n_S : forall n m : nat, n <= m -> S n <= S m := fun (n m : nat) (H : n <= m) => le_ind n (fun m0 : nat => S n <= S m0) (le_n (S n)) (fun (m0 : nat) (_ : n <= m0) (IHle : S n <= S m0) => le_S (S n) (S m0) IHle) m H.",
            "VernacDefinition",
            "a7038c09644188d4bf669b7ebe49a605988da35b"
        ],
        [
            "Definition lt_n_S: forall n m : nat, n < m -> S n < S m := fun (n m : nat) (H : n < m) => le_n_S (S n) m H.",
            "VernacDefinition",
            "f5ce86ecf6b088b5e952f8cba40710294dc9eab4"
        ],
        [
            "Definition le_trans: forall n m p : nat, n <= m -> m <= p -> n <= p := fun (n m p : nat) (H : n <= m) (H0 : m <= p) => le_ind m (fun p0 : nat => n <= p0) H (fun (m0 : nat) (_ : m <= m0) (IHle : n <= m0) => le_S n m0 IHle) p H0.",
            "VernacDefinition",
            "8a819cbed98890c61faa1168b44522a6b3f0080c"
        ],
        [
            "Definition le_Sn_le: forall n m : nat, S n <= m -> n <= m := fun (n m : nat) (H : S n <= m) => le_trans n (S n) m (le_S n n (le_n n)) H.",
            "VernacDefinition",
            "59ab91446e8ee2605e4b56f4a54a1f1e3b17ba9b"
        ],
        [
            "Definition lt_le_weak: forall n m : nat, n < m -> n <= m := fun (n m : nat) (H : n < m) => le_Sn_le n m H.",
            "VernacDefinition",
            "bcb21c7b076b58ee1915604e0d4d3e7dfd05d96f"
        ],
        [
            "Lemma le_or_lt: forall n m : nat, n <= m \\/ m < n.",
            "VernacStartTheoremProof",
            "b35b5bd72fb7f2d3fdf6c93a50ac69e00a66ffb4"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "induction m; simpl; auto.",
            "VernacExtend",
            "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
        ],
        [
            "destruct m.",
            "VernacExtend",
            "8d29a39ed817a734f6646f7b42c80e41363356d4"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction n; simpl; auto.",
            "VernacExtend",
            "e97dceb16245749e91243b27d3fd5ddc89e99bdd"
        ],
        [
            "destruct (IHn m); [left | right].",
            "VernacExtend",
            "06c533a741d31df80433af0085af6cded3485ba0"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply lt_n_S.",
            "VernacExtend",
            "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma le_max_l: forall n m : nat, n <= max n m.",
            "VernacStartTheoremProof",
            "66bd337cdbc606544e4a2cb3ae3e07333ed2783f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_or_lt n m).",
            "VernacExtend",
            "85efee6cb307490f75107be45f7c367735f437be"
        ],
        [
            "rewrite max_r; auto.",
            "VernacExtend",
            "199a3eb5c0076cf9fd0f2464f745b4ca4990b90a"
        ],
        [
            "rewrite max_l; auto.",
            "VernacExtend",
            "2dc7e448695e33359d3591c3676d1620d1995040"
        ],
        [
            "apply lt_le_weak; auto.",
            "VernacExtend",
            "8ceda1915937002cfad73199d97036567b8326a1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma le_max_r: forall n m : nat, m <= max n m.",
            "VernacStartTheoremProof",
            "3c0bf0c7855d8fb595c4f0b17183f54871d4414d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_or_lt n m).",
            "VernacExtend",
            "85efee6cb307490f75107be45f7c367735f437be"
        ],
        [
            "rewrite max_r; auto.",
            "VernacExtend",
            "199a3eb5c0076cf9fd0f2464f745b4ca4990b90a"
        ],
        [
            "rewrite max_l; auto.",
            "VernacExtend",
            "2dc7e448695e33359d3591c3676d1620d1995040"
        ],
        [
            "apply lt_le_weak; auto.",
            "VernacExtend",
            "8ceda1915937002cfad73199d97036567b8326a1"
        ],
        [
            "apply lt_le_weak; auto.",
            "VernacExtend",
            "8ceda1915937002cfad73199d97036567b8326a1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma rank_type_members: forall ce id t m, In (id, t) m -> (rank_type ce t <= rank_members ce m)%nat.",
            "VernacStartTheoremProof",
            "cb172b021f9e139ad202b1bd31f70157fcad5ed5"
        ],
        [
            "induction m; simpl; intros; intuition auto.",
            "VernacExtend",
            "f78f1c2d104c505d0bb77ebd413844d964ccfd16"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "apply le_max_l.",
            "VernacExtend",
            "084aa2ad97fe4ccf3d3b3737d309d8a3650322e6"
        ],
        [
            "eapply le_trans; [eassumption | ].",
            "VernacExtend",
            "f0ea81042205cb6555ea070850f9a5c27772f998"
        ],
        [
            "apply le_max_r.",
            "VernacExtend",
            "2770eee6606c65af90cd62218f564fa7b6592164"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ]
    ],
    "proofs": [
        {
            "name": "Forall_forall1",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros until 1.",
                        "VernacExtend",
                        "02a88d708d00fec9315af96f54c66efbe80acead"
                    ]
                },
                {
                    "command": [
                        "destruct (@Forall_forall A P l).",
                        "VernacExtend",
                        "ddc90c6eea36da82930b632089587b47646406fe"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Zcompare_refl",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl.",
                        "VernacExtend",
                        "6554f156164019d92e1907ce49ab9159d733a0bb"
                    ]
                },
                {
                    "command": [
                        "apply eq_refl.",
                        "VernacExtend",
                        "7c24386880b38fe6934d624f41ac1fd4ba47d797"
                    ]
                },
                {
                    "command": [
                        "unfold Pos.compare.",
                        "VernacExtend",
                        "8368b4e5c98391622d4b1507f2910e985b6b5ef6"
                    ]
                },
                {
                    "command": [
                        "induction p; simpl; auto.",
                        "VernacExtend",
                        "88325bdd8545333293e9ffca328a83c63085683a"
                    ]
                },
                {
                    "command": [
                        "unfold Pos.compare.",
                        "VernacExtend",
                        "8368b4e5c98391622d4b1507f2910e985b6b5ef6"
                    ]
                },
                {
                    "command": [
                        "induction p; simpl; auto.",
                        "VernacExtend",
                        "88325bdd8545333293e9ffca328a83c63085683a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Zle_refl",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Z.le.",
                        "VernacExtend",
                        "7fbfca7b8c0c3a2e874409c0360b07334595e062"
                    ]
                },
                {
                    "command": [
                        "rewrite Zcompare_refl.",
                        "VernacExtend",
                        "e6df00582123cf70582ee3a8b5db6fc1da834559"
                    ]
                },
                {
                    "command": [
                        "intro; discriminate.",
                        "VernacExtend",
                        "d63764752b13c9777fe3ccb54c65ae24ab510154"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Zle_max_l",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Z.max.",
                        "VernacExtend",
                        "dbe9d9def4535823478fdce7e1398cc0d33f9525"
                    ]
                },
                {
                    "command": [
                        "unfold Z.le.",
                        "VernacExtend",
                        "7fbfca7b8c0c3a2e874409c0360b07334595e062"
                    ]
                },
                {
                    "command": [
                        "destruct (n?=m) eqn:H.",
                        "VernacExtend",
                        "f675a5dafc0cbbdac8f6e088aa7a5ed43e913bfd"
                    ]
                },
                {
                    "command": [
                        "rewrite Zcompare_refl; intro; discriminate.",
                        "VernacExtend",
                        "b97dc2d56b2a05e3c3875ffc61d43d31edadec25"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "intro; discriminate.",
                        "VernacExtend",
                        "d63764752b13c9777fe3ccb54c65ae24ab510154"
                    ]
                },
                {
                    "command": [
                        "rewrite Zcompare_refl; intro; discriminate.",
                        "VernacExtend",
                        "b97dc2d56b2a05e3c3875ffc61d43d31edadec25"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Pos_compare_absurd",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "induction x; destruct y; simpl; intros; eauto; try discriminate.",
                        "VernacExtend",
                        "b91efbffd6a6a9f6c318b78b71c0fa0c010c4b42"
                    ]
                },
                {
                    "command": [
                        "apply IHx in H; discriminate.",
                        "VernacExtend",
                        "0d1ea842626c94c2037e428115eb5a2fe6826eea"
                    ]
                },
                {
                    "command": [
                        "apply IHx in H; discriminate.",
                        "VernacExtend",
                        "0d1ea842626c94c2037e428115eb5a2fe6826eea"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Pos_compare_cont_eq",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "induction x; destruct y; simpl; intros; auto; try discriminate.",
                        "VernacExtend",
                        "dba981a187ba838c955caefb20facd924f91e2b0"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "apply Pos_compare_absurd in H; inversion H.",
                        "VernacExtend",
                        "a45433a9c946654908171fbbe5813e02956fc982"
                    ]
                },
                {
                    "command": [
                        "apply Pos_compare_absurd in H; inversion H.",
                        "VernacExtend",
                        "a45433a9c946654908171fbbe5813e02956fc982"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Pos_compare_eq",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Pos_compare_cont_eq in H; auto.",
                        "VernacExtend",
                        "5378ff2941b191cb5b8f5b5acb97284613f3f8d3"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Zmax_comm",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "destruct n, m; simpl; try apply eq_refl.",
                        "VernacExtend",
                        "99d4f5ad6d4aefd3335f7fe94923b5c5fe7b2d57"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Z.max; simpl.",
                        "VernacExtend",
                        "8f8b9a35f79f7f6727274d16fc401c4c50b67446"
                    ]
                },
                {
                    "command": [
                        "rename p0 into q.",
                        "VernacExtend",
                        "972f1243924dd3a6cfad1f022f945d6c873786fb"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos_compare_antisym.",
                        "VernacExtend",
                        "b62baf7e8feb6d1a2993ae4fe19e6305be2ff715"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.compare q p) eqn:?; simpl; try reflexivity.",
                        "VernacExtend",
                        "e2529c73e5144aaf056e26bba3ad32e3baf33c91"
                    ]
                },
                {
                    "command": [
                        "apply Pos_compare_eq in Heqc.",
                        "VernacExtend",
                        "0160265b9c0baf2b5f5770774bdc5b6adcb787d6"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Z.max; simpl.",
                        "VernacExtend",
                        "8f8b9a35f79f7f6727274d16fc401c4c50b67446"
                    ]
                },
                {
                    "command": [
                        "rename p0 into q.",
                        "VernacExtend",
                        "972f1243924dd3a6cfad1f022f945d6c873786fb"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos_compare_antisym.",
                        "VernacExtend",
                        "b62baf7e8feb6d1a2993ae4fe19e6305be2ff715"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.compare q p) eqn:?; simpl; try reflexivity.",
                        "VernacExtend",
                        "e2529c73e5144aaf056e26bba3ad32e3baf33c91"
                    ]
                },
                {
                    "command": [
                        "apply Pos_compare_eq in Heqc.",
                        "VernacExtend",
                        "0160265b9c0baf2b5f5770774bdc5b6adcb787d6"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Zle_max_r",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.max_comm.",
                        "VernacExtend",
                        "ab8c28040c7f750b21a4489b9ecd2c088caeb250"
                    ]
                },
                {
                    "command": [
                        "apply Zle_max_l.",
                        "VernacExtend",
                        "6915d7f86eef8e3b4797486745a8a40aeb4c990b"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "le_or_lt",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "induction m; simpl; auto.",
                        "VernacExtend",
                        "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
                    ]
                },
                {
                    "command": [
                        "destruct m.",
                        "VernacExtend",
                        "8d29a39ed817a734f6646f7b42c80e41363356d4"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "induction n; simpl; auto.",
                        "VernacExtend",
                        "e97dceb16245749e91243b27d3fd5ddc89e99bdd"
                    ]
                },
                {
                    "command": [
                        "destruct (IHn m); [left | right].",
                        "VernacExtend",
                        "06c533a741d31df80433af0085af6cded3485ba0"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_S.",
                        "VernacExtend",
                        "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "le_max_l",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_or_lt n m).",
                        "VernacExtend",
                        "85efee6cb307490f75107be45f7c367735f437be"
                    ]
                },
                {
                    "command": [
                        "rewrite max_r; auto.",
                        "VernacExtend",
                        "199a3eb5c0076cf9fd0f2464f745b4ca4990b90a"
                    ]
                },
                {
                    "command": [
                        "rewrite max_l; auto.",
                        "VernacExtend",
                        "2dc7e448695e33359d3591c3676d1620d1995040"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; auto.",
                        "VernacExtend",
                        "8ceda1915937002cfad73199d97036567b8326a1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "le_max_r",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_or_lt n m).",
                        "VernacExtend",
                        "85efee6cb307490f75107be45f7c367735f437be"
                    ]
                },
                {
                    "command": [
                        "rewrite max_r; auto.",
                        "VernacExtend",
                        "199a3eb5c0076cf9fd0f2464f745b4ca4990b90a"
                    ]
                },
                {
                    "command": [
                        "rewrite max_l; auto.",
                        "VernacExtend",
                        "2dc7e448695e33359d3591c3676d1620d1995040"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; auto.",
                        "VernacExtend",
                        "8ceda1915937002cfad73199d97036567b8326a1"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; auto.",
                        "VernacExtend",
                        "8ceda1915937002cfad73199d97036567b8326a1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "rank_type_members",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "induction m; simpl; intros; intuition auto.",
                        "VernacExtend",
                        "f78f1c2d104c505d0bb77ebd413844d964ccfd16"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "apply le_max_l.",
                        "VernacExtend",
                        "084aa2ad97fe4ccf3d3b3737d309d8a3650322e6"
                    ]
                },
                {
                    "command": [
                        "eapply le_trans; [eassumption | ].",
                        "VernacExtend",
                        "f0ea81042205cb6555ea070850f9a5c27772f998"
                    ]
                },
                {
                    "command": [
                        "apply le_max_r.",
                        "VernacExtend",
                        "2770eee6606c65af90cd62218f564fa7b6592164"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}