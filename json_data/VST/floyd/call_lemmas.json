{
    "filename": "floyd/call_lemmas.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.base2.",
            "VernacRequire",
            "c9732b06b9c2316526989f551596fbf382fa6641"
        ],
        [
            "Require Import VST.floyd.client_lemmas.",
            "VernacRequire",
            "449c8140a2f7afa12f07d13833b2a4f672db98f1"
        ],
        [
            "Require Import VST.floyd.closed_lemmas.",
            "VernacRequire",
            "bdf37b0c22e35685c35e40eead36bd536eafda98"
        ],
        [
            "Require Import VST.floyd.mapsto_memory_block.",
            "VernacRequire",
            "1eb48c3b1d3226b38616009522812b5e36900b31"
        ],
        [
            "Require Import VST.floyd.local2ptree_denote.",
            "VernacRequire",
            "7b2a6fd2646a0af15a2f968f47cdf7e71d5416cd"
        ],
        [
            "Require Import VST.floyd.local2ptree_eval.",
            "VernacRequire",
            "63565982e2b485f6be616dc3d84a7e5844536459"
        ],
        [
            "Require Import VST.floyd.subsume_funspec.",
            "VernacRequire",
            "26fd6f6054b5569ef2cefc266f85c5c3f7b895cf"
        ],
        [
            "Local Open Scope logic.",
            "VernacOpenCloseScope",
            "5937723d189e5aa98ad78e1018bed51ea2c1b0cd"
        ],
        [
            "Fixpoint argtypes (al: list (ident * type)) : list type := match al with (_,t)::al' => t :: argtypes al' | nil => nil end.",
            "VernacFixpoint",
            "595c85d51fef71d9115eb3cfc845fd7220b5a78d"
        ],
        [
            "Lemma argtypes_eq: forall al, argtypes al = snd (split al).",
            "VernacStartTheoremProof",
            "20ee3344ecdaebcf466d6056ac9a5a570ecfa0cb"
        ],
        [
            "induction al; try destruct a; simpl; auto.",
            "VernacExtend",
            "342ab323d2e7e208d0ee20fd37a426a30217011b"
        ],
        [
            "destruct (split al).",
            "VernacExtend",
            "ee66435c0fc3851cbc23da9bf6c16af838d7c5f8"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition maybe_retval (Q: environ -> mpred) retty ret := match ret with | Some id => fun rho => Q (get_result1 id rho) | None => match retty with | Tvoid => (fun rho => Q (globals_only rho)) | _ => fun rho => EX v: val, Q (make_args (ret_temp::nil) (v::nil) rho) end end.",
            "VernacDefinition",
            "8241f9add304e261398d027c2a5175812a4aa9c0"
        ],
        [
            "Definition removeopt_localdef (ret: option ident) (l: list localdef) : list localdef := match ret with | Some id => remove_localdef_temp id l | None => l end.",
            "VernacDefinition",
            "a0d6acba5266793ca554d0f42bd68cbca9871279"
        ],
        [
            "Lemma semax_call': forall Espec {cs: compspecs} Delta fs A Pre Post NEPre NEPost ts x ret argsig retsig cc a bl P Q R, Cop.classify_fun (typeof a) = Cop.fun_case_f (type_of_params argsig) retsig cc -> match retsig, ret with | Tvoid, None => True | Tvoid, Some _ => False | _, _ => True end -> forall (Hret: tc_fn_return Delta ret retsig) (Hsub: subsume_funspec fs (mk_funspec (argsig,retsig) cc A Pre Post NEPre NEPost)) , @semax cs Espec Delta (|>(tc_expr Delta a && tc_exprlist Delta (argtypes argsig) bl) && (|>`(Pre ts x: environ -> mpred) ( (make_args' (argsig,retsig) (eval_exprlist (argtypes argsig) bl))) * `(func_ptr' fs) (eval_expr a) * |>PROPx P (LOCALx Q (SEPx R)))) (Scall ret a bl) (normal_ret_assert (maybe_retval (Post ts x) retsig ret * PROPx P (LOCALx (removeopt_localdef ret Q) (SEPx R)))).",
            "VernacStartTheoremProof",
            "202a8128511f1688e5d3895ab57580ac07ea586f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite argtypes_eq.",
            "VernacExtend",
            "70462af02b4457442e9cf87cebdc2a16f9dbf17c"
        ],
        [
            "eapply semax_pre_post'; [ | | apply (semax_call_subsume fs A Pre Post NEPre NEPost argsig retsig cc Hsub Delta ts x (PROPx P (LOCALx Q (SEPx R))) ret a bl H); auto].",
            "VernacExtend",
            "2728cbf7f12cec4c76c031d4d716887b7eaa483f"
        ],
        [
            "3:{",
            "VernacSubproof",
            "2472dae969aab1a5dcd426636e9ecb0bcfa8a644"
        ],
        [
            "clear - H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "destruct retsig; destruct ret; simpl in *; try contradiction; intros; congruence.",
            "VernacExtend",
            "990ee27a92cc3e8886ab65827d2db9e0f744190a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clear Hret.",
            "VernacExtend",
            "f2bd25206b65dbe6a4bb27565e7d417699edda73"
        ],
        [
            "unfold_lift; unfold local, lift1.",
            "VernacExtend",
            "7351d8cf53f691b654d944ab7bb66b2b0f23f08b"
        ],
        [
            "unfold func_ptr'.",
            "VernacExtend",
            "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
        ],
        [
            "intro rho; simpl.",
            "VernacExtend",
            "cf3769e840606a35db0143e100fbfe31eb01459b"
        ],
        [
            "normalize; progress (autorewrite with subst norm1 norm2; normalize).",
            "VernacExtend",
            "be8c40ccb5588e3925b7657bb83ee233c783d401"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "rewrite sepcon_assoc, sepcon_comm.",
            "VernacExtend",
            "b40c61f641487eaade324f9438b68c167b5aec91"
        ],
        [
            "rewrite !corable_andp_sepcon1 by apply corable_func_ptr.",
            "VernacExtend",
            "795ae51876eae98af9c962dc65ad04c9e66b9acb"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "rewrite emp_sepcon.",
            "VernacExtend",
            "df65e2010e4babcc45591f5b17e65df5cd76a9f9"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "rewrite sepcon_comm, <- later_sepcon.",
            "VernacExtend",
            "0518c6ee384d1960dd29c0782c54891d410b32c5"
        ],
        [
            "progress (autorewrite with subst norm1 norm2; normalize).",
            "VernacExtend",
            "cd9fcede188cdcfd58291510e958f2786acd3ae4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "autorewrite with ret_assert.",
            "VernacExtend",
            "f9dc5f29355a0f2c8d8c61c9cb9e1ed6f9f5f9a6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "destruct ret.",
            "VernacExtend",
            "f5365ee02c841e846733956bc5d6a8a4ab35fe04"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply derives_trans; [| apply sepcon_derives; [apply derives_refl | apply remove_localdef_temp_PROP]].",
            "VernacExtend",
            "f343d7b6657eb4fe3e8112d9623f02886efec091"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with old.",
            "VernacExtend",
            "9df6e21ec4e9906935e4eb82a55534017cb16700"
        ],
        [
            "autorewrite with subst.",
            "VernacExtend",
            "a0a7cc51d36fa0a311954515c238f15599d651bc"
        ],
        [
            "intro rho; simpl; normalize.",
            "VernacExtend",
            "5a320129d23e95a8b3f2ca8d04d18673220f3893"
        ],
        [
            "autorewrite with norm1 norm2; normalize.",
            "VernacExtend",
            "b95b77b585f0083e9db11ef34c89dc635260a1e1"
        ],
        [
            "rewrite sepcon_comm; auto.",
            "VernacExtend",
            "d2c29cb76cae8b6b80971554ec9314b6f193e751"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro rho; simpl; normalize.",
            "VernacExtend",
            "5a320129d23e95a8b3f2ca8d04d18673220f3893"
        ],
        [
            "rewrite sepcon_comm; auto.",
            "VernacExtend",
            "d2c29cb76cae8b6b80971554ec9314b6f193e751"
        ],
        [
            "unfold substopt.",
            "VernacExtend",
            "2dc5f89a7539fef5600c95fce181857de220faf0"
        ],
        [
            "repeat rewrite list_map_identity.",
            "VernacExtend",
            "899ea475b2524cbae31882c481185341c7b20c58"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "autorewrite with norm1 norm2; normalize.",
            "VernacExtend",
            "b95b77b585f0083e9db11ef34c89dc635260a1e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call1: forall Espec {cs: compspecs} Delta fs A Pre Post NEPre NEPost ts x id argsig retsig cc a bl P Q R (Hsub: subsume_funspec fs (mk_funspec (argsig,retsig) cc A Pre Post NEPre NEPost)), Cop.classify_fun (typeof a) = Cop.fun_case_f (type_of_params argsig) retsig cc -> match retsig with | Tvoid => False | _ => True end -> tc_fn_return Delta (Some id) retsig -> @semax cs Espec Delta (|>(tc_expr Delta a && tc_exprlist Delta (argtypes argsig) bl) && (|>`(Pre ts x: environ -> mpred) ( (make_args' (argsig,retsig) (eval_exprlist (argtypes argsig) bl))) * `(func_ptr' fs) (eval_expr a) * |>PROPx P (LOCALx Q (SEPx R)))) (Scall (Some id) a bl) (normal_ret_assert (`(Post ts x: environ -> mpred) (get_result1 id) * PROPx P (LOCALx (remove_localdef_temp id Q) (SEPx R)))).",
            "VernacStartTheoremProof",
            "ee7dba9d6e613303b8f0c2333e23a671bc911a24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@semax_call' Espec cs Delta fs A Pre Post NEPre NEPost ts x (Some id) argsig retsig cc a bl P Q R); auto.",
            "VernacExtend",
            "81239d531872d19366f268612e3fd53139f98375"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ifvoid {T} t (A B: T) := match t with Tvoid => A | _ => B end.",
            "VernacDefinition",
            "09f48a7319d4cba9a808c400883a9d2ea3085f6d"
        ],
        [
            "Lemma semax_call0: forall Espec {cs: compspecs} Delta fs A Pre Post NEPre NEPost ts x argsig retty cc a bl P Q R (Hsub: subsume_funspec fs (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost)), Cop.classify_fun (typeof a) = Cop.fun_case_f (type_of_params argsig) retty cc -> @semax cs Espec Delta (|>(tc_expr Delta a && tc_exprlist Delta (argtypes argsig) bl) && (|>`(Pre ts x: environ -> mpred) ( (make_args' (argsig,retty) (eval_exprlist (argtypes argsig) bl))) * `(func_ptr' fs) (eval_expr a) * |>PROPx P (LOCALx Q (SEPx R)))) (Scall None a bl) (normal_ret_assert (ifvoid retty (`(Post ts x: environ -> mpred) (make_args nil nil)) (EX v:val, `(Post ts x: environ -> mpred) (make_args (ret_temp::nil) (v::nil))) * PROPx P (LOCALx Q (SEPx R)))).",
            "VernacStartTheoremProof",
            "e653f10d535e4cadc8f40b703b297d571b0ae505"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite argtypes_eq.",
            "VernacExtend",
            "70462af02b4457442e9cf87cebdc2a16f9dbf17c"
        ],
        [
            "eapply semax_pre_post'; [ | | apply (semax_call_subsume fs A Pre Post NEPre NEPost argsig retty cc Hsub Delta ts x (PROPx P (LOCALx Q (SEPx R))) None a bl H)].",
            "VernacExtend",
            "f0db918a823d8cf37afca6c3e78232eeab832066"
        ],
        [
            "3:{",
            "VernacSubproof",
            "2472dae969aab1a5dcd426636e9ecb0bcfa8a644"
        ],
        [
            "split; intros; congruence.",
            "VernacExtend",
            "e6e7134eeb6213890fdce2a7ed77f1313465a8a9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro rho; normalize.",
            "VernacExtend",
            "3d80b67e78e2aecbce242e9cd620ed28ce2460e7"
        ],
        [
            "autorewrite with norm1 norm2; normalize.",
            "VernacExtend",
            "b95b77b585f0083e9db11ef34c89dc635260a1e1"
        ],
        [
            "unfold func_ptr'.",
            "VernacExtend",
            "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
        ],
        [
            "rewrite !sepcon_assoc.",
            "VernacExtend",
            "a2cd33e6a97402451d64204ff65867ec18fd7a92"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "rewrite !corable_andp_sepcon1 by apply corable_func_ptr.",
            "VernacExtend",
            "795ae51876eae98af9c962dc65ad04c9e66b9acb"
        ],
        [
            "rewrite emp_sepcon, sepcon_comm.",
            "VernacExtend",
            "f994572dbfc2532ed825a06422a4d904c9085be6"
        ],
        [
            "rewrite !corable_andp_sepcon1 by apply corable_func_ptr.",
            "VernacExtend",
            "795ae51876eae98af9c962dc65ad04c9e66b9acb"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "rewrite later_sepcon; apply derives_refl.",
            "VernacExtend",
            "b9f67fe4d50ca936914e3adbdb2315632cc56a05"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "unfold SeparationLogic.maybe_retval.",
            "VernacExtend",
            "fec21b76d9ad35ad5708a99eeb3d2691ddebe66c"
        ],
        [
            "autorewrite with subst norm ret_assert.",
            "VernacExtend",
            "9105832cba49e7b9d9de192dd4b06f2427db44a5"
        ],
        [
            "destruct retty; auto; rewrite sepcon_comm; apply derives_refl.",
            "VernacExtend",
            "c295d21cf145c1d16e36e90ae24ebe541c80a30a"
        ],
        [
            "apply Coq.Init.Logic.I.",
            "VernacExtend",
            "65ba9154dc0f9fc042d4c0a2ade8938f5435c03d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_fun_id': forall id f TC Espec {cs: compspecs} Delta (PQR: environ->mpred) PostCond c (GLBL: (var_types Delta) ! id = None), (glob_specs Delta) ! id = Some f -> (glob_types Delta) ! id = Some (type_of_funspec f) -> @semax cs Espec Delta (|>TC && (local (tc_environ Delta) && (`(func_ptr' f) (eval_var id (type_of_funspec f)) * |>PQR))) c PostCond -> @semax cs Espec Delta (|>(TC && PQR)) c PostCond.",
            "VernacStartTheoremProof",
            "9d53b0256e05eb3c83da9d670041b772fb532e1a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (semax_fun_id id f Delta); auto.",
            "VernacExtend",
            "3d33a8cc07bf9c4834d2e02429d9caa154caf344"
        ],
        [
            "eapply semax_pre_post; try apply H1; try (apply andp_left2; apply derives_refl).",
            "VernacExtend",
            "3541c4121ee44f6fb84b46045b071fe582df5220"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "rewrite later_andp.",
            "VernacExtend",
            "4f91f5654d2f8262e470e7fc21baefb6cfe9b423"
        ],
        [
            "rewrite <- !andp_assoc.",
            "VernacExtend",
            "c5054dc7db48721dcca908810895940ad495a85d"
        ],
        [
            "rewrite !andp_assoc; apply andp_left2, andp_left1; auto.",
            "VernacExtend",
            "533208d4ef121b5af576c5b5ccf96ec0a88b163f"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "rewrite later_andp.",
            "VernacExtend",
            "4f91f5654d2f8262e470e7fc21baefb6cfe9b423"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "unfold func_ptr'.",
            "VernacExtend",
            "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
        ],
        [
            "intro rho; simpl; normalize.",
            "VernacExtend",
            "5a320129d23e95a8b3f2ca8d04d18673220f3893"
        ],
        [
            "rewrite corable_andp_sepcon1 by apply corable_func_ptr.",
            "VernacExtend",
            "296fe768802c35bc819a7123e22ce45957b985e9"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "rewrite emp_sepcon; auto.",
            "VernacExtend",
            "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqb_typelist_refl: forall tl, eqb_typelist tl tl = true.",
            "VernacStartTheoremProof",
            "8ece083ccf629a1e713ab3cf655be64b1556602e"
        ],
        [
            "induction tl; simpl; auto.",
            "VernacExtend",
            "e904643b1a1ca2cacc68894176858dd71c88e3a2"
        ],
        [
            "apply andb_true_iff.",
            "VernacExtend",
            "583d40e493f314492aad482eb70e9a25a38aae78"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply eqb_type_refl.",
            "VernacExtend",
            "11359825efcf7fd0d31246b3c0c974cade355bd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqb_calling_convention_refl: forall cc, eqb_calling_convention cc cc = true.",
            "VernacStartTheoremProof",
            "760d48d676277a83edcdf358f954e9676fd43f7f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold eqb_calling_convention.",
            "VernacExtend",
            "7a75778fefe17fbc0a968c9b3d22565713716374"
        ],
        [
            "destruct cc; simpl.",
            "VernacExtend",
            "b6c73221742de9247b859bc51cb679fb7e23f366"
        ],
        [
            "destruct cc_vararg, cc_unproto, cc_structret; reflexivity.",
            "VernacExtend",
            "397473c6fac9395fa432eea5c1581602a9c84de8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma type_of_subsume_funspec: forall fs1 fs2, subsume_funspec fs1 fs2 -> type_of_funspec fs1 = type_of_funspec fs2.",
            "VernacStartTheoremProof",
            "35afb723905d7858709562944ed0e7845982b624"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct fs1, fs2; destruct H as [? [? _]].",
            "VernacExtend",
            "1fae276f272de7534320f88111880daa439cd684"
        ],
        [
            "subst; simpl; auto.",
            "VernacExtend",
            "4c332d568d45adb0cafebb5e0d56ad2383772bec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id0: forall Espec {cs: compspecs} Delta P Q R id bl fs argsig retty cc A ts x Pre Post NEPre NEPost (Hsub: subsume_funspec fs (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost)) (GLBL: (var_types Delta) ! id = None), (glob_specs Delta) ! id = Some fs -> (glob_types Delta) ! id = Some (type_of_funspec fs) -> @semax cs Espec Delta (|> (tc_exprlist Delta (argtypes argsig) bl && (`(Pre ts x: environ -> mpred) (make_args' (argsig,retty) (eval_exprlist (argtypes argsig) bl)) * PROPx P (LOCALx Q (SEPx R))))) (Scall None (Evar id (Tfunction (type_of_params argsig) retty cc)) bl) (normal_ret_assert ((ifvoid retty (`(Post ts x: environ -> mpred) (make_args nil nil)) (EX v:val, `(Post ts x: environ -> mpred) (make_args (ret_temp::nil) (v::nil)))) * PROPx P (LOCALx Q (SEPx R)))).",
            "VernacStartTheoremProof",
            "fe95ba392d6c7b2d48ef61ee78625b0d70d3d1cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Cop.classify_fun (typeof (Evar id (Tfunction (type_of_params argsig) retty cc)))= Cop.fun_case_f (type_of_params argsig) retty cc).",
            "VernacExtend",
            "06a19ca9c8b5d89ac95becbd6a2b90d82754bca2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply (semax_fun_id' id fs (tc_exprlist Delta (argtypes argsig) bl)); auto.",
            "VernacExtend",
            "57fbe0b4b0362ff2210549b7bc421c8f6c0d023f"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply semax_pre_simple; [ | apply (@semax_call0 Espec cs Delta fs A Pre Post NEPre NEPost ts x argsig _ cc _ bl P Q R Hsub); auto].",
            "VernacExtend",
            "6ea63483e63b0067774da5df93abab9ced3e997f"
        ],
        [
            "rewrite later_andp.",
            "VernacExtend",
            "4f91f5654d2f8262e470e7fc21baefb6cfe9b423"
        ],
        [
            "apply andp_right; [apply andp_right | ].",
            "VernacExtend",
            "050c204782076224de217d7cc77f390addb9b2b3"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply derives_trans, now_later.",
            "VernacExtend",
            "3f4214303532b590365af8948bc6af28dc00ac7c"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "intro rho; unfold tc_expr; simpl.",
            "VernacExtend",
            "6d92349a01770a97fa3b4d175c56021fb7821b4a"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "norm_rewrite.",
            "VernacExtend",
            "2c6f99c04220c8d48b3da7fae8f9d4492570bae1"
        ],
        [
            "apply prop_left; intro.",
            "VernacExtend",
            "f04a4fb9e26402827e65bc506ec9cd8978e96d58"
        ],
        [
            "unfold get_var_type.",
            "VernacExtend",
            "c117ce7131d7796a8dc6b41a89066ce852b981a3"
        ],
        [
            "rewrite GLBL.",
            "VernacExtend",
            "a11e4ce396eef6715a7dbee8386587b80773db3a"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite denote_tc_assert_bool; simpl.",
            "VernacExtend",
            "f14bb397c528baea7351381c312d814a6a6a14e6"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (type_of_subsume_funspec _ _ Hsub).",
            "VernacExtend",
            "44763c81809d0b20d765f157c2693f9c328c676a"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "rewrite eqb_typelist_refl.",
            "VernacExtend",
            "53a288b2fea15ed8de99f1c6c48a756e1b42a920"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold_lift; auto.",
            "VernacExtend",
            "4a0cd82c51bcc138190a0c85bb746cdb64773c6a"
        ],
        [
            "rewrite eqb_type_refl.",
            "VernacExtend",
            "ccdab3d98ef556debd0df1191e8f1dfbe3b6f6b0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply eqb_calling_convention_refl.",
            "VernacExtend",
            "61bfc4d348e7218a151a48c5138c26f74212f22f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply andp_left2, andp_left1; auto.",
            "VernacExtend",
            "e85aaa1f3c6d4c11c9bc36427dff0c499bd271af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply andp_left2, andp_left2, andp_left2.",
            "VernacExtend",
            "2180ac2e5b6d272a0b9e901ab9bc7143ad766445"
        ],
        [
            "intro; simpl.",
            "VernacExtend",
            "6b02318154ba1426764dbd23d934520cd3e7ae9f"
        ],
        [
            "rewrite later_sepcon, <- sepcon_assoc.",
            "VernacExtend",
            "84f8155a6eca5dc57b7667a60f952de51f79dba6"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "rewrite (type_of_subsume_funspec _ _ Hsub).",
            "VernacExtend",
            "44763c81809d0b20d765f157c2693f9c328c676a"
        ],
        [
            "rewrite sepcon_comm; apply derives_refl.",
            "VernacExtend",
            "0d20e01b55fb8bc319b014f446e6b312392042dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id1: forall Espec {cs: compspecs} Delta P Q R ret id fs retty cc bl argsig A ts x Pre Post NEPre NEPost (Hsub: subsume_funspec fs (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost)) (GLBL: (var_types Delta) ! id = None), (glob_specs Delta) ! id = Some fs -> (glob_types Delta) ! id = Some (type_of_funspec fs) -> match retty with | Tvoid => False | _ => True end -> tc_fn_return Delta (Some ret) retty -> @semax cs Espec Delta (|>(tc_exprlist Delta (argtypes argsig) bl && (`(Pre ts x: environ -> mpred) (make_args' (argsig,Tvoid) (eval_exprlist (argtypes argsig) bl)) * PROPx P (LOCALx Q (SEPx R))))) (Scall (Some ret) (Evar id (Tfunction (type_of_params argsig) retty cc)) bl) (normal_ret_assert ((`(Post ts x: environ -> mpred) (get_result1 ret) * PROPx P (LOCALx (remove_localdef_temp ret Q) (SEPx R))))).",
            "VernacStartTheoremProof",
            "7c02696ac3c7f423b6870bd0335f8c5bb472c389"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rename H0 into Ht.",
            "VernacExtend",
            "198e2937a9ec63528c85e2408ee0d039cbf19e67"
        ],
        [
            "rename H1 into H0.",
            "VernacExtend",
            "2363c12c50e22bd3dbce4e18e679c14c31fc424f"
        ],
        [
            "rename H2 into Hret.",
            "VernacExtend",
            "2e5f249d9526606d74098a3b3c5dd81b8f34898d"
        ],
        [
            "assert (Cop.classify_fun (typeof (Evar id (Tfunction (type_of_params argsig) retty cc)))= Cop.fun_case_f (type_of_params argsig) retty cc).",
            "VernacExtend",
            "06a19ca9c8b5d89ac95becbd6a2b90d82754bca2"
        ],
        [
            "subst; reflexivity.",
            "VernacExtend",
            "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
        ],
        [
            "apply (semax_fun_id' id fs); auto.",
            "VernacExtend",
            "13e2966d5848bad34e7b99a31cd5980bcbab09dc"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply semax_pre_simple; [ | apply (semax_call1 Espec Delta fs A Pre Post NEPre NEPost ts x ret argsig retty cc _ bl P Q R Hsub H1 H0); auto].",
            "VernacExtend",
            "4a58f0f459c7efdaf5b40ed59a6dccc39dd20a9a"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "rewrite later_andp; apply andp_right.",
            "VernacExtend",
            "328d44d805b6907ac9e4f18e3773c67f6d4b8aad"
        ],
        [
            "eapply derives_trans, now_later.",
            "VernacExtend",
            "3f4214303532b590365af8948bc6af28dc00ac7c"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "intro rho; unfold tc_expr, local,lift1; simpl.",
            "VernacExtend",
            "6c3bc084aca51c03c2d7d0effc4c8b3d4ad6695c"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "norm_rewrite.",
            "VernacExtend",
            "2c6f99c04220c8d48b3da7fae8f9d4492570bae1"
        ],
        [
            "unfold get_var_type.",
            "VernacExtend",
            "c117ce7131d7796a8dc6b41a89066ce852b981a3"
        ],
        [
            "rewrite GLBL.",
            "VernacExtend",
            "a11e4ce396eef6715a7dbee8386587b80773db3a"
        ],
        [
            "rewrite Ht.",
            "VernacExtend",
            "e6fe20971722eecae65d56a1c23872eb23f5aa6f"
        ],
        [
            "rewrite (type_of_subsume_funspec _ _ Hsub).",
            "VernacExtend",
            "44763c81809d0b20d765f157c2693f9c328c676a"
        ],
        [
            "rewrite denote_tc_assert_bool.",
            "VernacExtend",
            "6be39b0ac0c853286729729b2f982511bc46e369"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite eqb_typelist_refl.",
            "VernacExtend",
            "53a288b2fea15ed8de99f1c6c48a756e1b42a920"
        ],
        [
            "rewrite eqb_type_refl.",
            "VernacExtend",
            "ccdab3d98ef556debd0df1191e8f1dfbe3b6f6b0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply prop_right; apply eqb_calling_convention_refl.",
            "VernacExtend",
            "65cbad6febbb710d8e69866e52af2da0698ad0de"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "rewrite later_sepcon, <- sepcon_assoc.",
            "VernacExtend",
            "84f8155a6eca5dc57b7667a60f952de51f79dba6"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "rewrite (type_of_subsume_funspec _ _ Hsub).",
            "VernacExtend",
            "44763c81809d0b20d765f157c2693f9c328c676a"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive extract_trivial_liftx {A}: list (environ->A) -> list A -> Prop := | ETL_nil: extract_trivial_liftx nil nil | ETL_cons: forall a al bl, extract_trivial_liftx al bl -> extract_trivial_liftx (`a :: al) (a::bl).",
            "VernacInductive",
            "3d7615627cb70ef795fcd3a9743934839002c199"
        ],
        [
            "Lemma fold_right_and_app_low: forall (Q1 Q2 : list Prop), fold_right and True (Q1 ++ Q2) = (fold_right and True Q1 /\\ fold_right and True Q2).",
            "VernacStartTheoremProof",
            "c3588f5617874424b37aac0dfce6b5b425bd8c79"
        ],
        [
            "induction Q1; intros; simpl; auto.",
            "VernacExtend",
            "ffbf4d7865fc0058860453b58543eb6246ca3689"
        ],
        [
            "apply prop_ext; intuition.",
            "VernacExtend",
            "8a4224a6b11df295ba822165ed660bf644fc5d44"
        ],
        [
            "rewrite IHQ1.",
            "VernacExtend",
            "fd0e39911f0d5e0deb7acfc0950ea4be6c8bcafa"
        ],
        [
            "apply prop_ext; intuition.",
            "VernacExtend",
            "8a4224a6b11df295ba822165ed660bf644fc5d44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_right_and_app_lifted: forall (Q1 Q2: list (environ -> Prop)), fold_right `(and) `(True) (Q1 ++ Q2) = `(and) (fold_right `(and) `(True) Q1) (fold_right `(and) `(True) Q2).",
            "VernacStartTheoremProof",
            "bee1a4633abc4a98fa063f3e55e52e33463eb98a"
        ],
        [
            "induction Q1; intros; simpl; auto.",
            "VernacExtend",
            "ffbf4d7865fc0058860453b58543eb6246ca3689"
        ],
        [
            "extensionality rho; apply prop_ext; intuition.",
            "VernacExtend",
            "42b9a43e6333bc5920e19ded8a4a0d78b3063c3a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "rewrite IHQ1.",
            "VernacExtend",
            "fd0e39911f0d5e0deb7acfc0950ea4be6c8bcafa"
        ],
        [
            "extensionality rho; apply prop_ext; intuition.",
            "VernacExtend",
            "42b9a43e6333bc5920e19ded8a4a0d78b3063c3a"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition check_one_temp_spec (Q: PTree.t val) (idv: ident * val) : Prop := (Q ! (fst idv)) = Some (snd idv).",
            "VernacDefinition",
            "1ede8d30c3261871e01a27ffbbc080bcb5227930"
        ],
        [
            "Definition check_gvars_spec (GV: option globals) (GV': option globals) : Prop := match GV' with Some _ => GV = GV' | _ => True end.",
            "VernacDefinition",
            "7ca8a2e58ba3885f8157d883cf8840a82802b323"
        ],
        [
            "Definition strong_cast (t1 t2: type) (v: val) : val := force_val (sem_cast t1 t2 v).",
            "VernacDefinition",
            "464a811575f3fbb113522c8396ff891380249588"
        ],
        [
            "Lemma extract_trivial_liftx_e: forall (R: list (environ->mpred)) (R': list mpred), extract_trivial_liftx R R' -> R = map liftx R'.",
            "VernacStartTheoremProof",
            "219be60c07c96a062abe5f1b7fb8f5d4d8c7df55"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H; simpl.",
            "VernacExtend",
            "9726f146667ea4ca85eccbf11148dbb538898a23"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isolate_LOCAL_lem1: forall Q, PROPx nil (LOCALx Q (SEPx (TT::nil))) = local (fold_right `(and) `(True) (map locald_denote Q)).",
            "VernacStartTheoremProof",
            "6b3f263960c164c9536674eca2df326b76e82e98"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "unfold PROPx, LOCALx, SEPx.",
            "VernacExtend",
            "1b5fb887355377e7dc0a92cc79eab1326b53b147"
        ],
        [
            "simpl fold_right_sepcon.",
            "VernacExtend",
            "24da839234a927e19e8ada094d635513355e536d"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_ptree_elements_e: forall A (F: ident * A -> Prop) m i v, Forall F (PTree.elements m) -> m ! i = Some v -> F (i,v).",
            "VernacStartTheoremProof",
            "0928f8f79d3652abfeec3f3163cf4e439c37e222"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply PTree.elements_correct in H0.",
            "VernacExtend",
            "3584315385737cbdb781cfbf1a987c66d4c5275e"
        ],
        [
            "induction (PTree.elements m).",
            "VernacExtend",
            "ee701e62f0ee1f0a8516c70d1f78deb3705b813d"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inv H0; auto.",
            "VernacExtend",
            "a747752c9ff1861588c8959f4ce90cf59f358ae3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pTree_from_elements_e1: forall rho fl vl i v, Forall (fun v => v <> Vundef) vl -> (pTree_from_elements (combine fl vl)) ! i = Some v -> v = eval_id i (make_args fl vl rho) /\\ v <> Vundef.",
            "VernacStartTheoremProof",
            "72a438bded1965407e05167e71dbb405aab306d5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert vl H H0; induction fl; intros.",
            "VernacExtend",
            "1beaac34ae8f6640773d8b16f2bd95d46ea83c78"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "unfold pTree_from_elements in H0.",
            "VernacExtend",
            "a1862b2a0d4eea05cbe7179bd1d2581549aaf695"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite PTree.gempty in H0; inv H0.",
            "VernacExtend",
            "028c93c56154b0f5f22a1a25e06edd7fa8818634"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct vl.",
            "VernacExtend",
            "4960e0c881663ef3ca1c004c0b52fc200dff7e94"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "unfold pTree_from_elements in H0.",
            "VernacExtend",
            "a1862b2a0d4eea05cbe7179bd1d2581549aaf695"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite PTree.gempty in H0; inv H0.",
            "VernacExtend",
            "028c93c56154b0f5f22a1a25e06edd7fa8818634"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "unfold pTree_from_elements in H0.",
            "VernacExtend",
            "a1862b2a0d4eea05cbe7179bd1d2581549aaf695"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "destruct (ident_eq i a).",
            "VernacExtend",
            "4abaa16f06ae00220f902162c581933d7b931706"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "rewrite PTree.gss in H0.",
            "VernacExtend",
            "43b68e566f3980be0778d5b06a08a79b8cfefe76"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite unfold_make_args_cons.",
            "VernacExtend",
            "b6928440d31779fd03106fb07ebec3457301512e"
        ],
        [
            "unfold eval_id.",
            "VernacExtend",
            "ea2fa7a188f5192bb4f11fe06fd53e4576051073"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Map.gss.",
            "VernacExtend",
            "5cffa4b9a854ae416cd4d33ea0eae84716bdfb38"
        ],
        [
            "split; [reflexivity | inv H; auto].",
            "VernacExtend",
            "78f4741beee7192fb0e82cc9dbcbc064c93b3f48"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite PTree.gso in H0 by auto.",
            "VernacExtend",
            "1eedb55cb2f0868636905cdad91b662b04a3e26c"
        ],
        [
            "apply IHfl in H0.",
            "VernacExtend",
            "03917236629d316dab92f69fe7e4f445cc94af8d"
        ],
        [
            "rewrite unfold_make_args_cons.",
            "VernacExtend",
            "b6928440d31779fd03106fb07ebec3457301512e"
        ],
        [
            "unfold eval_id.",
            "VernacExtend",
            "ea2fa7a188f5192bb4f11fe06fd53e4576051073"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Map.gso by auto.",
            "VernacExtend",
            "5a1a598e0234eeea1db666cad09a08bf75f563f5"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ve_of_make_args: forall i fl vl rho , length fl = length vl -> Map.get (ve_of (make_args fl vl rho)) i = None.",
            "VernacStartTheoremProof",
            "1cdc415c9cfd9cc66ec81c6327beba2e42ede4c3"
        ],
        [
            "unfold Map.get, ve_of.",
            "VernacExtend",
            "3a409e73c11a006729d74692b98f3b936c072c32"
        ],
        [
            "induction fl; destruct vl; simpl; intros; try reflexivity.",
            "VernacExtend",
            "e07731988c0c1702a082b06d3ac5d0a431ba3c86"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "apply (IHfl _ _ H1).",
            "VernacExtend",
            "722078d374775131973c1e2059fa6a4cfaecadd6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_of_make_args: forall i fl vl rho, Map.get (ge_of (make_args fl vl rho)) i = Map.get (ge_of rho) i.",
            "VernacStartTheoremProof",
            "fa623e44500527973a94f06629c4dfa60e1c41c5"
        ],
        [
            "induction fl; destruct vl; simpl; auto.",
            "VernacExtend",
            "11bc3a7fcc626abd1a63a6c248cab80630f5dfc2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma check_specs_lemma: forall Qtemp Qpre_temp Qvar GV GV' rho fl vl (LEN: length fl = length vl) (UNDEF: Forall (fun v => v <> Vundef) vl), check_gvars_spec GV GV' -> Forall (check_one_temp_spec (pTree_from_elements (combine fl vl))) (PTree.elements Qpre_temp) -> fold_right `(and) `(True) (map locald_denote (LocalD Qtemp Qvar GV)) rho -> fold_right `(and) `(True) (map locald_denote (LocalD Qpre_temp (PTree.empty _) GV')) (make_args fl vl rho).",
            "VernacStartTheoremProof",
            "02170182f629dd018942338cb117992b49bfc07e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply local_ext_rev.",
            "VernacExtend",
            "d32deb42db62074ea7b23f3b7e5f20844913305d"
        ],
        [
            "specialize (fun (Q0: environ -> Prop) H => local_ext Q0 _ _ H H1).",
            "VernacExtend",
            "19340c837dae99e3f4ae57f2b36c8cf938ec0787"
        ],
        [
            "clear H1; intros.",
            "VernacExtend",
            "c602c98de5ada98a8739912fe2721cdbf6a30df6"
        ],
        [
            "specialize (fun (Q0: localdef) H => H1 (locald_denote Q0) (in_map _ _ _ H)).",
            "VernacExtend",
            "433ae2a390e24fff48d5b8f872c20750f2bce908"
        ],
        [
            "specialize (fun (Q0: localdef) H => H1 Q0 (LocalD_sound _ _ _ _ H)).",
            "VernacExtend",
            "566a98814f820550dd36e84a7f92b758e362f9b3"
        ],
        [
            "assert (ASSU1: forall i v, Qtemp ! i = Some v -> locald_denote (temp i v) rho) by (intros; apply H1; firstorder).",
            "VernacExtend",
            "68e3fdaf60c2c12d158841c60c62a75b4ce3117f"
        ],
        [
            "assert (ASSU2: forall i t v, Qvar ! i = Some (t, v) -> locald_denote (lvar i t v) rho) by (intros; apply H1; eauto 50).",
            "VernacExtend",
            "d9b017d12084f3b0e1a7a67febc671a811edba7e"
        ],
        [
            "assert (ASSU3: forall gv, GV = Some gv -> locald_denote (gvars gv) rho) by (intros; apply H1; eauto 50).",
            "VernacExtend",
            "a8db2361125d7d0b3c8a7e019321ac049e8c0ea7"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "apply list_in_map_inv in H2.",
            "VernacExtend",
            "7c4e7009e3bf083d564dc2c7901e0c25b088d9a2"
        ],
        [
            "destruct H2 as [Q0' [? ?]]; subst; rename Q0' into Q0.",
            "VernacExtend",
            "76d242f92131800d42d8bc00ac106d7f6a078a7b"
        ],
        [
            "apply LocalD_complete in H2.",
            "VernacExtend",
            "9ba43d0de935659d1bf8c5fa22016cf29602e973"
        ],
        [
            "destruct H2 as [ [i [v [?H ?H]]] |[ [i [t [v [?H ?H]]]] | [gv [?H ?H]]]]; subst; unfold locald_denote; unfold_lift.",
            "VernacExtend",
            "7fbda4bd0d7667871bfc60cac85b54d0fdef1164"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "clear - H0 H1 UNDEF.",
            "VernacExtend",
            "5682a0bc88b28f1e4fa18845cc1178d5b9c219d0"
        ],
        [
            "pose proof (Forall_ptree_elements_e _ _ _ _ _ H0 H1).",
            "VernacExtend",
            "749b0a760da2b831520576efb9519ee56dfeb258"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "clear - H UNDEF.",
            "VernacExtend",
            "4f538977b119ff2cbed6bc6f15bcd1afe3912299"
        ],
        [
            "eapply pTree_from_elements_e1; auto.",
            "VernacExtend",
            "b4ed004393e9aa26265a0a3567f951f0010b4dd3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gempty in H1; inv H1.",
            "VernacExtend",
            "4b9ce7cf2641673e2eb32a039504270da7202a7f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct GV; [| inv H].",
            "VernacExtend",
            "bcd8b0e69bf7721b5c7ed4f4418911f98f40b89e"
        ],
        [
            "simpl in H; inv H.",
            "VernacExtend",
            "a7b98c51e9f898b881b59c18b1bc811901bf5875"
        ],
        [
            "specialize (ASSU3 _ eq_refl).",
            "VernacExtend",
            "c1bf8f8b5dc50f1320bcb3c6640f8a5829957603"
        ],
        [
            "hnf in ASSU3 |- *.",
            "VernacExtend",
            "ce9862ea95bbd3ef07abb5ac5664b86055683238"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "extensionality i.",
            "VernacExtend",
            "8733cdd792af6107213a34f779c8c3d7eba32943"
        ],
        [
            "rewrite ge_of_make_args.",
            "VernacExtend",
            "fa35271125fd78d47f6c0158f14e6b13420c364e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PROP_combine: forall P P' Q Q' R R', PROPx P (LOCALx Q (SEPx R)) * PROPx P' (LOCALx Q' (SEPx R')) = PROPx (P++P') (LOCALx (Q++Q') (SEPx (R++R'))).",
            "VernacStartTheoremProof",
            "c8a9e68cb0e7b092ba799761283f747fb40fdbef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold PROPx, LOCALx, SEPx, local, lift1.",
            "VernacExtend",
            "3a1a7725e6ca8833061485c5eba54393bc23f847"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "rewrite fold_right_and_app.",
            "VernacExtend",
            "4643e21ee69221083334c932168d04266db423d0"
        ],
        [
            "rewrite fold_right_and_app_low.",
            "VernacExtend",
            "a0e88f97aba8590a1334a63dbd0f983c7c8b86f2"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply prop_ext; intuition.",
            "VernacExtend",
            "8a4224a6b11df295ba822165ed660bf644fc5d44"
        ],
        [
            "rewrite fold_right_sepcon_app.",
            "VernacExtend",
            "ccdab8789b72da2f2964f4902618bed2be7467f8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive Parameter_types_in_funspec_different_from_call_statement : Prop := .",
            "VernacInductive",
            "767918bdd3815579b041a897ff0529a1f97eb209"
        ],
        [
            "Inductive Result_type_in_funspec_different_from_call_statement : Prop := .",
            "VernacInductive",
            "b7c6485afa9dd9abbb1cff357fa59f5fafa5eec3"
        ],
        [
            "Definition check_retty t := match t with Tvoid => Result_type_in_funspec_different_from_call_statement | Tarray _ _ _ => Result_type_in_funspec_different_from_call_statement | _ => True end.",
            "VernacDefinition",
            "e49bb768e36a294b072c849959b97821ae12ae7a"
        ],
        [
            "Lemma PROP_LOCAL_SEP_f: forall P Q R f, `(PROPx P (LOCALx Q (SEPx R))) f = local (fold_right `(and) `(True) (map (fun q : environ -> Prop => `q f) (map locald_denote Q))) && PROPx P (LOCALx nil (SEPx R)).",
            "VernacStartTheoremProof",
            "b7baadadbd5543050880250e94c7e882143a50e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "cbv delta [PROPx LOCALx SEPx local lift lift1 liftx]; simpl.",
            "VernacExtend",
            "8d3d43711bbb44558c1c2ed03c5a56ce4664e2ec"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "replace (fold_right (fun (x x0 : environ -> Prop) (x1 : environ) => x x1 /\\ x0 x1) (fun _ : environ => True) (map locald_denote Q) (f rho)) with (fold_right (fun (x x0 : environ -> Prop) (x1 : environ) => x x1 /\\ x0 x1) (fun _ : environ => True) (map (fun (q : environ -> Prop) (x : environ) => q (f x)) (map locald_denote Q)) rho); [apply prop_ext; intuition | ].",
            "VernacExtend",
            "4463afe333f1085d5e9cbd55f1313205e237e9bc"
        ],
        [
            "induction Q; simpl; auto.",
            "VernacExtend",
            "f8c736b22c2984865836180b5d25fa927efb65c0"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite PROP_LOCAL_SEP_f: norm2.",
            "VernacExtend",
            "3e3239d3a9a59a5317bc9acf9e18f14f5404b838"
        ],
        [
            "Definition global_funspec Delta id argsig retty cc A Pre Post NEPre NEPost := (var_types Delta) ! id = None /\\ (glob_specs Delta) ! id = Some (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost) /\\ (glob_types Delta) ! id = Some (type_of_funspec (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost)).",
            "VernacDefinition",
            "2c273ba33bca4d060391872e4d66ce4f48211d06"
        ],
        [
            "Lemma lookup_funspec: forall Delta id argsig retty cc A Pre Post NEPre NEPost, (var_types Delta) ! id = None -> (glob_specs Delta) ! id = Some (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost) -> (glob_types Delta) ! id = Some (type_of_funspec (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost)) -> global_funspec Delta id argsig retty cc A Pre Post NEPre NEPost.",
            "VernacStartTheoremProof",
            "b0c51f7298bbcc39317e5c9b36dee7ddab8ad022"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split3; auto.",
            "VernacExtend",
            "5198a06904f9188b673c83129393f27ab50f92b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma func_ptr'_func_ptr_lifted: forall (fs: funspec) (e: environ->val) (B: environ->mpred), `(func_ptr' fs) e * B = `(func_ptr fs) e && B.",
            "VernacStartTheoremProof",
            "8a4d264ce264c1b89e84a46d111a6a73aab66443"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "unfold func_ptr'.",
            "VernacExtend",
            "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite corable_andp_sepcon1 by apply corable_func_ptr.",
            "VernacExtend",
            "296fe768802c35bc819a7123e22ce45957b985e9"
        ],
        [
            "rewrite emp_sepcon; auto.",
            "VernacExtend",
            "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition can_assume_funcptr cs Delta P Q R a fs := forall Espec c Post, @semax cs Espec Delta ((EX v: val, (lift0 (func_ptr fs v) && local (`(eq v) (eval_expr a)))) && PROPx P (LOCALx Q (SEPx R))) c Post -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R))) c Post.",
            "VernacDefinition",
            "efec14f9dea30946ae4813ae2d302dbb88b4d6d0"
        ],
        [
            "Definition call_setup1 (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (bl: list expr) (vl : list val) (Qactuals : PTree.t _) := local2ptree Q = (Qtemp, Qvar, nil, GV) /\\ subsume_funspec fs (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost) /\\ can_assume_funcptr cs Delta P Q R' a fs /\\ PROPx P (LOCALx Q (SEPx R')) |-- |> PROPx P (LOCALx Q (SEPx R)) /\\ Cop.classify_fun (typeof a) = Cop.fun_case_f (type_of_params argsig) retty cc /\\ ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_expr Delta a) /\\ ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_exprlist Delta (argtypes argsig) bl) /\\ force_list (map (msubst_eval_expr Delta Qtemp Qvar GV) (explicit_cast_exprlist (argtypes argsig) bl)) = Some vl /\\ pTree_from_elements (List.combine (var_names argsig) vl) = Qactuals.",
            "VernacDefinition",
            "2c95f0f657f4938be17cbdee5df07547df2a8489"
        ],
        [
            "Lemma call_setup1_i: forall (cs: compspecs) Delta P Q R R' (a: expr) (bl: list expr) Qtemp Qvar GV (v: val) fs argsig retty cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (vl : list val) (Qactuals : PTree.t _), local2ptree Q = (Qtemp, Qvar, nil, GV) -> msubst_eval_expr Delta Qtemp Qvar GV a = Some v -> fold_right_sepcon R' |-- func_ptr fs v -> subsume_funspec fs (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost) -> fold_right_sepcon R' |-- |> fold_right_sepcon R -> Cop.classify_fun (typeof a) = Cop.fun_case_f (type_of_params argsig) retty cc -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_expr Delta a) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_exprlist Delta (argtypes argsig) bl) -> force_list (map (msubst_eval_expr Delta Qtemp Qvar GV) (explicit_cast_exprlist (argtypes argsig) bl)) = Some vl -> pTree_from_elements (List.combine (var_names argsig) vl) = Qactuals -> call_setup1 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals.",
            "VernacStartTheoremProof",
            "7308aebcc1d38f939beef31d4d5f76bd852ae7a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H18 := @msubst_eval_expr_eq cs Delta P Qtemp Qvar GV R' a v H0).",
            "VernacExtend",
            "02bd23de847d91aa02cf6ae314e4604879a95272"
        ],
        [
            "assert (H19 := local2ptree_soundness P Q R' Qtemp Qvar nil GV H).",
            "VernacExtend",
            "94a0d2acca366ddb95ef1292d609c723be89e641"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "eapply semax_pre; [ | eassumption].",
            "VernacExtend",
            "6afe842c066a35eae4bdde2587415ee7b77408f2"
        ],
        [
            "clear c Post0 H9.",
            "VernacExtend",
            "4e7bccd6fd70619d9584066d30128be5b9a60e96"
        ],
        [
            "Exists v.",
            "VernacExtend",
            "b7098c5096162831ebc8755f53fc23b138b11c8c"
        ],
        [
            "apply andp_right; [ | apply andp_left2; auto].",
            "VernacExtend",
            "e154794edee5d249def0ac1f7a38fe82486acef4"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "repeat apply andp_left2.",
            "VernacExtend",
            "dc915a937eeed744318e782f64f62dc23d256ba0"
        ],
        [
            "intro rho; unfold SEPx, lift0.",
            "VernacExtend",
            "0c16508532965fb6580f2a5247519324623a7f3f"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "rewrite H19.",
            "VernacExtend",
            "1680cdbaca48312bd8c17a9f25a2847458523bd0"
        ],
        [
            "simpl app.",
            "VernacExtend",
            "5a39ba3195c1bcf4acdefe189883db7ad912f680"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "unfold PROPx, LOCALx.",
            "VernacExtend",
            "11d29d6bd68c7a87d70cf0942bbb9bbf72f5ce23"
        ],
        [
            "rewrite <- !andp_assoc, later_andp; apply andp_derives; [apply now_later|].",
            "VernacExtend",
            "3c694c179376b715ccc1c9cdda1a04f8372eecd5"
        ],
        [
            "unfold SEPx; simpl; auto.",
            "VernacExtend",
            "b764618924f4ed1e85fd3b33863a21fd5fb838bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma call_setup1_i2: forall (cs: compspecs) Delta P Q R R' (id: ident) (ty: type) (bl: list expr) Qtemp Qvar GV fs argsig retty cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (vl : list val) (Qactuals : PTree.t _), local2ptree Q = (Qtemp, Qvar, nil, GV) -> can_assume_funcptr cs Delta P Q R' (Evar id ty) fs -> subsume_funspec fs (mk_funspec (argsig,retty) cc A Pre Post NEPre NEPost) -> PROPx P (LOCALx Q (SEPx R')) |-- |> PROPx P (LOCALx Q (SEPx R)) -> Cop.classify_fun ty = Cop.fun_case_f (type_of_params argsig) retty cc -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_expr Delta (Evar id ty)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_exprlist Delta (argtypes argsig) bl) -> force_list (map (msubst_eval_expr Delta Qtemp Qvar GV) (explicit_cast_exprlist (argtypes argsig) bl)) = Some vl -> pTree_from_elements (List.combine (var_names argsig) vl) = Qactuals -> call_setup1 cs Qtemp Qvar GV (Evar id ty) Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals.",
            "VernacStartTheoremProof",
            "f7caa20fbe4cbd61b0c5ac70a334493676c9deae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma can_assume_funcptr1: forall cs Delta P Q R a fs v Qtemp Qvar GV, local2ptree Q = (Qtemp, Qvar, nil, GV) -> msubst_eval_expr Delta Qtemp Qvar GV a = Some v -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- lift0(func_ptr fs v) -> can_assume_funcptr cs Delta P Q R a fs.",
            "VernacStartTheoremProof",
            "d4c19eae2be6ce27675c5af605af01283f353130"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold can_assume_funcptr; intros.",
            "VernacExtend",
            "319b1cf7a9a3f998f12deaddd21cf08d12cff0be"
        ],
        [
            "eapply semax_pre; [ | eassumption].",
            "VernacExtend",
            "6afe842c066a35eae4bdde2587415ee7b77408f2"
        ],
        [
            "apply andp_right; [ | apply andp_left2; auto].",
            "VernacExtend",
            "e154794edee5d249def0ac1f7a38fe82486acef4"
        ],
        [
            "Exists v.",
            "VernacExtend",
            "b7098c5096162831ebc8755f53fc23b138b11c8c"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "assert (H8 := @msubst_eval_expr_eq cs Delta P Qtemp Qvar GV R a v H0).",
            "VernacExtend",
            "3cd61e2aaa8e2402d8eb9010ca1c3251971696df"
        ],
        [
            "eapply local2ptree_soundness' in H.",
            "VernacExtend",
            "6dbf59f50bec3da1105ed9b582ce2e5ab3e37cd5"
        ],
        [
            "simpl in H; rewrite <- H in H8.",
            "VernacExtend",
            "4c12427ef88411112b3c07ecb7bb3526fdb93f5b"
        ],
        [
            "eapply derives_trans, H8.",
            "VernacExtend",
            "9722ce4f6d5a1afc861b0d836f4e0c073ed8d933"
        ],
        [
            "unfold LocalD.",
            "VernacExtend",
            "4c4a95f65b43325d4ad380093bd098c25354c23b"
        ],
        [
            "rewrite !PTree.fold_spec.",
            "VernacExtend",
            "c85aebd8ce2bec0602d7ec876bf39aa79c8b319a"
        ],
        [
            "simpl fold_left.",
            "VernacExtend",
            "64226c337ec60316cafd63bfd1aae292295629fd"
        ],
        [
            "rewrite app_nil_r; auto.",
            "VernacExtend",
            "1d1177ca5089e90b0ad0d23abdc633163bacb58e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma can_assume_funcptr2: forall id ty cs Delta P Q R fs , (var_types Delta) ! id = None -> (glob_specs Delta) ! id = Some fs -> (glob_types Delta) ! id = Some (type_of_funspec fs) -> ty = (type_of_funspec fs) -> can_assume_funcptr cs Delta P Q R (Evar id ty) fs.",
            "VernacStartTheoremProof",
            "b6b338d9356bb2abd88b218bca631acf7d696d2f"
        ],
        [
            "unfold can_assume_funcptr; intros.",
            "VernacExtend",
            "319b1cf7a9a3f998f12deaddd21cf08d12cff0be"
        ],
        [
            "eapply (semax_fun_id id); try eassumption.",
            "VernacExtend",
            "e028c6ef0b145dc572e336e2701eb8c510cc3ce3"
        ],
        [
            "eapply semax_pre; try apply H3.",
            "VernacExtend",
            "df09ffeef9bb4cc9e2fa392da86f6d9cedc42fca"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "apply andp_right; [ | apply andp_left2; apply andp_left1; auto].",
            "VernacExtend",
            "c78535298f1def81e9eaf1f307ba572dde3d78d9"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "intro rho.",
            "VernacExtend",
            "340a6646b01296f706bfd718a4f2fa78cb01cc3b"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "unfold local, lift0, lift1.",
            "VernacExtend",
            "bf0d339a9e3ba543e83ca048a8918c996ed05956"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Exists (eval_var id (type_of_funspec fs) rho).",
            "VernacExtend",
            "aa28a59e335eefd9dcd667662d6562c1f3f1c17c"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "subst ty.",
            "VernacExtend",
            "e208fabe5f185c48b1af2afc361f1ceb3a2eba51"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition call_setup2 (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (bl: list expr) (vl : list val) (Qactuals : PTree.t _) (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec nil A) mpred) (Frame: list mpred) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qpre_temp : PTree.t _) GV':= call_setup1 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals /\\ Pre nil witness = PROPx Ppre (LOCALx Qpre (SEPx Rpre)) /\\ local2ptree Qpre = (Qpre_temp, PTree.empty _, nil, GV') /\\ ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- !! Forall (check_one_temp_spec Qactuals) (PTree.elements Qpre_temp) /\\ check_gvars_spec GV GV' /\\ fold_right_sepcon R |-- fold_right_sepcon Rpre * fold_right_sepcon Frame.",
            "VernacDefinition",
            "21a831dd2e871ccf098e6702ceb66f1880d88709"
        ],
        [
            "Lemma call_setup2_i: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (bl: list expr) (vl : list val) (Qactuals : PTree.t _) (SETUP1: call_setup1 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals) (witness': functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec nil A) mpred) (Frame: list mpred) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qpre_temp : PTree.t _) GV', Pre nil witness' = PROPx Ppre (LOCALx Qpre (SEPx Rpre)) -> local2ptree Qpre = (Qpre_temp, PTree.empty _, nil, GV') -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- !! Forall (check_one_temp_spec Qactuals) (PTree.elements Qpre_temp) -> check_gvars_spec GV GV' -> fold_right_sepcon R |-- fold_right_sepcon Rpre * fold_right_sepcon Frame -> call_setup2 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals witness' Frame Ppre Qpre Rpre Qpre_temp GV'.",
            "VernacStartTheoremProof",
            "26d55fe19d026d0ce14570b5bb76f23a91b0fd82"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actual_value_not_Vundef: forall (cs: compspecs) (Qtemp: PTree.t val) (Qvar: PTree.t (type * val)) Delta P Q R tl bl vl GV (PTREE : local2ptree Q = (Qtemp, Qvar, nil, GV)) (TC : ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- tc_exprlist Delta tl bl) (MSUBST : force_list (map (msubst_eval_expr Delta Qtemp Qvar GV) (explicit_cast_exprlist tl bl)) = Some vl), local (tc_environ Delta) && |> PROPx P (LOCALx Q (SEPx R)) = local (tc_environ Delta) && |> (PROPx P (LOCALx Q (SEPx R)) && !! Forall (fun v : val => v <> Vundef) vl).",
            "VernacStartTheoremProof",
            "16627385644adbf81d29c45525bcb2b43e600dfa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply (msubst_eval_exprlist_eq Delta P Qtemp Qvar GV R) in MSUBST.",
            "VernacExtend",
            "32ad15721a778a53a4c7366cab2f2e4ff84416e9"
        ],
        [
            "apply (local2ptree_soundness P Q R) in PTREE; simpl app in PTREE.",
            "VernacExtend",
            "7c5cae5fc75956690e093e5f41646aee8930ddb6"
        ],
        [
            "rewrite <- PTREE in MSUBST; clear PTREE; rename MSUBST into EVAL.",
            "VernacExtend",
            "cb3c1cbb0bdb72d6a2ea6ac161724d8b910f0333"
        ],
        [
            "apply pred_ext; [| apply andp_derives; auto; apply later_derives; normalize].",
            "VernacExtend",
            "e43a2692450a3b1df8b9e5b015080fc4e0a1e99c"
        ],
        [
            "rewrite later_andp, <- andp_assoc.",
            "VernacExtend",
            "88ea80614aab557f1f4e2d329fa04a5b6f57eff4"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply later_left2.",
            "VernacExtend",
            "3f79fb8fbd966599fa5429b21f60bcd06fb14386"
        ],
        [
            "unfold tc_exprlist in TC.",
            "VernacExtend",
            "b4d016d8f4d84dc8f15971e22d3e611a63a05b34"
        ],
        [
            "rewrite (add_andp _ _ TC), (add_andp _ _ EVAL); clear TC EVAL.",
            "VernacExtend",
            "7834aa4885e5c6af428d7d6c6744cee42600f495"
        ],
        [
            "rewrite (andp_comm _ (PROPx _ _)), !andp_assoc.",
            "VernacExtend",
            "d67b0fe4be4f9f7eef93ded9dd1c91c0ad473575"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "revert bl vl H0; induction tl; intros.",
            "VernacExtend",
            "b623bca42acdafeb7b4dbfa40a173135778968eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct bl; simpl; [| apply FF_left].",
            "VernacExtend",
            "f35c00870479f8036d88ee75247544ef397b49e6"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "subst; simpl; constructor.",
            "VernacExtend",
            "7c971c00eb0c7a55b5f705d3408e83fa1e15dbb0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "Opaque typecheck_expr.",
            "VernacSetOpacity",
            "7d3b57d97d20f0de58a9b7a4b9c6fa94a2d6503f"
        ],
        [
            "destruct bl; simpl; [apply FF_left |].",
            "VernacExtend",
            "c7e52fbab0a73a26132acf68ce2b143379290442"
        ],
        [
            "rewrite denote_tc_assert_andp.",
            "VernacExtend",
            "691fd8a4c0b5ae56aebbf46da7865699ac3983c3"
        ],
        [
            "subst vl.",
            "VernacExtend",
            "0cd9eeba032a30b2a2f8bb7ba7e3093696818aae"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Transparent typecheck_expr.",
            "VernacSetOpacity",
            "92d25e454fd69582730d3d8afd674f052388c17e"
        ],
        [
            "eapply derives_trans; [apply andp_derives; [apply typecheck_expr_sound; auto | apply IHtl; reflexivity] |].",
            "VernacExtend",
            "b3be1e195018671cd50f9d378b61088b94e8a2a2"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "unfold_lift in H0; unfold_lift.",
            "VernacExtend",
            "97d68e4e16cde8d2e58f8d6e1869b9952f2b97f9"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold force_val1 in H0; unfold Basics.compose in H2.",
            "VernacExtend",
            "1e98e25dd9fc0ae6a6be2de9735065d033fe9aa5"
        ],
        [
            "rewrite H2 in H0; clear H2.",
            "VernacExtend",
            "5bcb4a53fb1ffa638b4e1254813ca94d0b82c46e"
        ],
        [
            "apply tc_val_Vundef in H0; auto.",
            "VernacExtend",
            "86594d6340489baf55cea9c89dd3257af3f43586"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_gvars_sub: forall rho G G', Forall (fun x : globals => In x G) G' -> fold_right `(and) `(True) (map locald_denote (map gvars G)) rho -> fold_right `(and) `(True) (map locald_denote (map gvars G')) rho.",
            "VernacStartTheoremProof",
            "b07435412cf3f79a283db3810cc4153b19795e96"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (proj1 (Forall_forall _ G') H).",
            "VernacExtend",
            "0d75185251c1a344081b2a49a252698405e933d8"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "revert H1; induction G'; simpl; intros; constructor.",
            "VernacExtend",
            "ad9263c98951d2ca6e283418a2077e6472f92b6c"
        ],
        [
            "assert (In a G).",
            "VernacExtend",
            "9169a04bf8211432aa0385fb3762f4bc2ff6f28b"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "clear - H0 H.",
            "VernacExtend",
            "4f9ffbeb6c312a6dbb8f1e9b57b1c786238f3368"
        ],
        [
            "induction G; destruct H.",
            "VernacExtend",
            "3a1b9e11625d0e307aa235d1da0d1a5e4fa4bb4a"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply IHG'.",
            "VernacExtend",
            "c2fd69dde6dc007de1bacbe92149d1702b5f87fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_aux55: forall (cs: compspecs) (Qtemp: PTree.t val) (Qvar: PTree.t (type * val)) GV (a: expr) Delta P Q R fs argsig retty (A : rmaps.TypeTree) (Pre Post : forall ts : list Type, functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts (AssertTT A)) mpred) witness Frame bl Ppre Qpre Rpre Qactuals Qpre_temp GV' vl (PTREE : local2ptree Q = (Qtemp, Qvar, nil, GV)) (TC0 : ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- tc_expr Delta a) (TC1 : ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- tc_exprlist Delta (argtypes argsig) bl) (MSUBST : force_list (map (msubst_eval_expr Delta Qtemp Qvar GV) (explicit_cast_exprlist (argtypes argsig) bl)) = Some vl) (PTREE'' : pTree_from_elements (combine (var_names argsig) vl) = Qactuals) (PRE1 : Pre nil witness = PROPx Ppre (LOCALx Qpre (SEPx Rpre))) (PTREE' : local2ptree Qpre = (Qpre_temp, PTree.empty _, nil, GV')) (CHECKTEMP : Forall (check_one_temp_spec Qactuals) (PTree.elements Qpre_temp)) (CHECKG: check_gvars_spec GV GV') (FRAME : fold_right_sepcon R |-- fold_right_sepcon Rpre * fold_right_sepcon Frame) (PPRE : fold_right_and True Ppre) (LEN : length (argtypes argsig) = length bl), ENTAIL Delta, (EX v : val, lift0 (func_ptr fs v) && local (` (eq v) (eval_expr a))) && |>PROPx P (LOCALx Q (SEPx R)) |-- |> (tc_expr Delta a && tc_exprlist Delta (argtypes argsig) bl) && (|> @liftx (Tarrow environ (LiftEnviron mpred)) (Pre nil witness) (make_args' (argsig, retty) (eval_exprlist (argtypes argsig) bl)) * ` (func_ptr' fs ) (eval_expr a) * |>PROPx P (LOCALx Q (SEPx Frame))).",
            "VernacStartTheoremProof",
            "e5e08eaec1a427d40ed174c407599bc7bc2a9c89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof actual_value_not_Vundef _ _ _ _ _ _ _ _ _ _ _ PTREE TC1 MSUBST as VUNDEF.",
            "VernacExtend",
            "0553f39013ff8de3366b3d6b6a0abe5cf115af9d"
        ],
        [
            "rewrite !exp_andp1.",
            "VernacExtend",
            "d03e3df9c95acbd42f9b87e292865dc6e7e40981"
        ],
        [
            "Intros v.",
            "VernacExtend",
            "0d254d7f816fb16dbeb49b3b581219516c5596e2"
        ],
        [
            "rewrite later_andp; repeat apply andp_right; auto.",
            "VernacExtend",
            "1eb2d52581f76d7e5f6555a901138401e089b378"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply derives_trans, later_derives, TC0.",
            "VernacExtend",
            "9e2171535438cec4b158a5aba193779f5b72364c"
        ],
        [
            "rewrite later_andp; apply andp_derives; [apply now_later|].",
            "VernacExtend",
            "b50b98feb84cb02850c29d972c12a66c23f02364"
        ],
        [
            "apply andp_left2, derives_refl.",
            "VernacExtend",
            "2349ae062255efd10f8e8db812463cc72bf617c1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply derives_trans, later_derives, TC1.",
            "VernacExtend",
            "97f4f74939cc14bad2b32d1c51577ef2128f253f"
        ],
        [
            "rewrite later_andp; apply andp_derives; [apply now_later|].",
            "VernacExtend",
            "b50b98feb84cb02850c29d972c12a66c23f02364"
        ],
        [
            "apply andp_left2, derives_refl.",
            "VernacExtend",
            "2349ae062255efd10f8e8db812463cc72bf617c1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite PRE1.",
            "VernacExtend",
            "a14acbf024f5e3e2cfe30b54ed312d2c53fcc668"
        ],
        [
            "match goal with |- _ |-- ?A * ?B * ?C => pull_right B end.",
            "VernacExtend",
            "eec76ad2712c16239345ab064084d228b49930f5"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "rewrite func_ptr'_func_ptr_lifted.",
            "VernacExtend",
            "7ff3fe46b46929bf1d3a1ed6631d91f9fdfe7368"
        ],
        [
            "apply ENTAIL_trans with (`(func_ptr fs) (eval_expr a) && |>PROPx P (LOCALx Q (SEPx R))).",
            "VernacExtend",
            "ffc109456ba7abcc554c95db6aeac93ccce0d74b"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_right; [ | apply andp_left2; auto].",
            "VernacExtend",
            "e154794edee5d249def0ac1f7a38fe82486acef4"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "intro rho; unfold_lift; unfold local, lift0, lift1; simpl.",
            "VernacExtend",
            "72f2f69d431369d49a19088de64e17e5f7013fcd"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "apply andp_left2; apply andp_left1; auto.",
            "VernacExtend",
            "72350d488d3ae4acb1e691fc4dfad896db03ed15"
        ],
        [
            "eapply derives_trans;[ apply andp_derives; [apply derives_refl | apply andp_left2; apply derives_refl] |].",
            "VernacExtend",
            "abfa1a3bee3216b826b87399ecbdc9d894c5e04a"
        ],
        [
            "subst Qactuals.",
            "VernacExtend",
            "95521ed49432263514cec18b6f3bbec9dee2e6be"
        ],
        [
            "clear - PTREE LEN PTREE' MSUBST FRAME PPRE CHECKTEMP CHECKG VUNDEF.",
            "VernacExtend",
            "0484c49526d975d09245d822e5c9b3604cf5b042"
        ],
        [
            "rewrite <- later_sepcon.",
            "VernacExtend",
            "112652d645af63cfb37aa1d85099e4aae8b26b99"
        ],
        [
            "progress (autorewrite with norm1 norm2).",
            "VernacExtend",
            "9dbd92b59bea4bafdccb70003e283769cf490a58"
        ],
        [
            "rewrite PROP_combine.",
            "VernacExtend",
            "aa0f3ed0dee61aca77173aa90f507435cecef784"
        ],
        [
            "rewrite (andp_comm (local (fold_right _ _ _))).",
            "VernacExtend",
            "5ce03f04ad1ad8af7749feab19b69bb5ffafc431"
        ],
        [
            "rewrite later_andp; apply andp_right.",
            "VernacExtend",
            "328d44d805b6907ac9e4f18e3773c67f6d4b8aad"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply later_derives.",
            "VernacExtend",
            "6d853a38a245ffdce956dbff7c40cd6f927fd9f9"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "rewrite fold_right_and_app_low.",
            "VernacExtend",
            "a0e88f97aba8590a1334a63dbd0f983c7c8b86f2"
        ],
        [
            "apply prop_derives; intros; split; auto.",
            "VernacExtend",
            "57b03267f959a73502717abdc1339f5247fa533c"
        ],
        [
            "clear - PPRE.",
            "VernacExtend",
            "823a4a8d38ca7ebf98129996078c3166c3315db6"
        ],
        [
            "revert PPRE; induction Ppre; simpl; intuition.",
            "VernacExtend",
            "58d814ac60d2fd7db3dcffbd29c0799663b71faf"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_derives.",
            "VernacExtend",
            "f55d870b9ebb41eed6ed89dee16b7250b7cf8e31"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "intro rho; unfold SEPx.",
            "VernacExtend",
            "89c63c25ad70505b23fb9b8cf87de6f8a8116102"
        ],
        [
            "rewrite fold_right_sepcon_app.",
            "VernacExtend",
            "ccdab8789b72da2f2964f4902618bed2be7467f8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite VUNDEF.",
            "VernacExtend",
            "89be286d2d2ef0771459b032c71b1901478d5437"
        ],
        [
            "apply (local2ptree_soundness P _ R) in PTREE.",
            "VernacExtend",
            "09f69fe9095e1612d75c7ef6bb10552f487d2e79"
        ],
        [
            "simpl app in PTREE.",
            "VernacExtend",
            "4eaaa743b8b92899733fe10313dada058bc5df02"
        ],
        [
            "apply msubst_eval_exprlist_eq with (P0:=P)(R0:=R)(GV0:=GV) in MSUBST.",
            "VernacExtend",
            "a9d24ee4d65b56808cf7e22ebd6e14438a5dd169"
        ],
        [
            "rewrite PTREE.",
            "VernacExtend",
            "c140137d3aaa0723a596ea912d41ccb4fb90e95d"
        ],
        [
            "apply later_left2.",
            "VernacExtend",
            "3f79fb8fbd966599fa5429b21f60bcd06fb14386"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "clear VUNDEF; rename H into VUNDEF.",
            "VernacExtend",
            "4ce2c54906d9487191128b9a3c59b1721a3c2995"
        ],
        [
            "apply derives_trans with (local ((` (eq vl)) (eval_exprlist (argtypes argsig) bl)) && PROPx P (LOCALx (LocalD Qtemp Qvar GV) (SEPx R))); [rewrite (add_andp _ _ MSUBST); solve_andp |].",
            "VernacExtend",
            "280c915989c200f322e7930e1c24f2cba20ac7e2"
        ],
        [
            "clear MSUBST.",
            "VernacExtend",
            "c98f53ba045a2d0d51f7f008de4c21c0574614e3"
        ],
        [
            "intro rho.",
            "VernacExtend",
            "340a6646b01296f706bfd718a4f2fa78cb01cc3b"
        ],
        [
            "apply (local2ptree_soundness nil _ (TT::nil)) in PTREE'.",
            "VernacExtend",
            "06241341847c4d19f34022ad195a2a791339908f"
        ],
        [
            "simpl app in PTREE'.",
            "VernacExtend",
            "d2c05e6d61e5e3821488afda9853384cfa38f354"
        ],
        [
            "rewrite !isolate_LOCAL_lem1 in PTREE'.",
            "VernacExtend",
            "53354df3cb5d063f68c67e936b8d65d010b80623"
        ],
        [
            "unfold local at 1, lift1.",
            "VernacExtend",
            "03e91c11912be2983feab843937473931863fbf7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply derives_extract_prop; intro.",
            "VernacExtend",
            "0148500cd04ca858045dfd7add74b2ac11ee7e67"
        ],
        [
            "unfold_lift in H.",
            "VernacExtend",
            "0a1066f59459f9c869906996c139bea7b2fb2401"
        ],
        [
            "subst vl.",
            "VernacExtend",
            "0cd9eeba032a30b2a2f8bb7ba7e3093696818aae"
        ],
        [
            "unfold PROPx, LOCALx, SEPx.",
            "VernacExtend",
            "1b5fb887355377e7dc0a92cc79eab1326b53b147"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "assert (LEN': length (var_names argsig) = length (eval_exprlist (argtypes argsig) bl rho)).",
            "VernacExtend",
            "f6cc832dced1f0cd79debca20ce824a37cb347ea"
        ],
        [
            "clear - LEN.",
            "VernacExtend",
            "59d81ec2f4d44153b3661e79da360d8437a1f6ac"
        ],
        [
            "revert bl LEN; induction argsig as [ | [? ?]]; destruct bl; simpl; intros; auto.",
            "VernacExtend",
            "da76c8f93f2aed87680efe38a40406f4c9f51af6"
        ],
        [
            "inv LEN.",
            "VernacExtend",
            "8f56db1a365cefa0fd540e2c2502c5a26693431d"
        ],
        [
            "forget (argtypes argsig) as tys.",
            "VernacExtend",
            "d002558c4b8f46a5a92ceed53cff8b298140b95f"
        ],
        [
            "cut (local (fold_right `(and) `(True) (map locald_denote (LocalD Qtemp Qvar GV))) rho |-- `(local (fold_right `(and) `(True) (map locald_denote Qpre))) (fun rho => (make_args (var_names argsig) (eval_exprlist tys bl rho) rho)) rho).",
            "VernacExtend",
            "9b19281f9035e14dc7c94745ab4a385f4381dc59"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "eapply derives_trans; [apply H |].",
            "VernacExtend",
            "3347c43ca1169b3753f425fe9168d7ada84b8462"
        ],
        [
            "unfold make_args'.",
            "VernacExtend",
            "671fc5b2fbcecc49267953eda683854f8e57ffe8"
        ],
        [
            "simpl @fst.",
            "VernacExtend",
            "78ac36cecc4798cc1bec15bd5d4b5623d1e3c6da"
        ],
        [
            "change (map fst argsig) with (var_names argsig).",
            "VernacExtend",
            "8b58fe6bd6ef4d5fd1c33e13474eda0362ec329f"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "unfold local, lift1.",
            "VernacExtend",
            "9293e8229d66da65c139a7c415e04062e8f4c83d"
        ],
        [
            "apply prop_derives.",
            "VernacExtend",
            "3ff0669364275651d7ffd02bff091ff41292645e"
        ],
        [
            "induction Qpre; simpl; auto.",
            "VernacExtend",
            "3ee0a86344d7e82da9fa2e4fac6589c3951e1be9"
        ],
        [
            "intros [? ?].",
            "VernacExtend",
            "103d05a036b9ac75a805207998e1c61f7a0137bb"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite PTREE'.",
            "VernacExtend",
            "e7e583a636054985a72579ffda5a4bebce6e66e1"
        ],
        [
            "clear PTREE' Qpre.",
            "VernacExtend",
            "c25b0fd2ec2f0a0f8ce6dc973925d60c11f909af"
        ],
        [
            "apply prop_derives; intro.",
            "VernacExtend",
            "a99602a91578e54a6d4421cc45f724c701b37eec"
        ],
        [
            "forget (var_names argsig) as fl.",
            "VernacExtend",
            "25caa19a7ef63f616bed786551066411321cba26"
        ],
        [
            "forget (eval_exprlist tys bl rho) as vl.",
            "VernacExtend",
            "7f69de30fbd433d39deb51f7cf6640e7e270a90e"
        ],
        [
            "eapply check_specs_lemma; try eassumption.",
            "VernacExtend",
            "01434df3811e08d0734af0950e4d4fa5c004cef3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_exprlist_len : forall {cs : compspecs} Delta argsig bl, tc_exprlist Delta (argtypes argsig) bl |-- !!(length (argtypes argsig) = length bl).",
            "VernacStartTheoremProof",
            "d744a744422cdba9c1dc3ae83c51594d62225427"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "unfold tc_exprlist.",
            "VernacExtend",
            "eab8820ce1cbeae58e5526e73cd2179ca48452bb"
        ],
        [
            "revert bl; induction (argtypes argsig); destruct bl; simpl; try apply @FF_left.",
            "VernacExtend",
            "7486a0697c6de9c388b7903c391629ec3a32560d"
        ],
        [
            "apply prop_right; auto.",
            "VernacExtend",
            "95e18efadb5767545f0255f518eaa92b08876b58"
        ],
        [
            "repeat rewrite denote_tc_assert_andp.",
            "VernacExtend",
            "23fba381d1e17235ac434d11bfff793e70e0fcfe"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "eapply derives_trans; [ apply IHl | ].",
            "VernacExtend",
            "a87c660633296dff19165ef80342edc0ee5a800a"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id00_wow: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec nil A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') Espec (Post2: environ -> mpred) (B: Type) (Ppost: B -> list Prop) (Rpost: B -> list mpred) (RETTY: retty = Tvoid) (POST1: Post nil witness = (EX vret:B, PROPx (Ppost vret) (LOCALx nil (SEPx (Rpost vret))))) (POST2: Post2 = EX vret:B, PROPx (P++ Ppost vret ) (LOCALx Q (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Scall None a bl) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "c234cf39163e3852e378ec67f64761b47b56437c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct SETUP as [[PTREE [Hsub [SPEC [HR' [ATY [TC0 [TC1 [MSUBST PTREE'']]]]]]]] [PRE1 [PTREE' [CHECKTEMP [CHECKG FRAME]]]]].",
            "VernacExtend",
            "5752ed7c6bfb0257ed80c33f83f025496376c9de"
        ],
        [
            "apply SPEC.",
            "VernacExtend",
            "b1cf91919c67ef6efb51c215e230bb5f955d2dfe"
        ],
        [
            "clear SPEC.",
            "VernacExtend",
            "2ec2c5864a0a5c68ce44d75bff7001971e17e04a"
        ],
        [
            "eapply semax_pre; [apply andp_right; [apply andp_left2, andp_left1, derives_refl|]|].",
            "VernacExtend",
            "51d920b53d3fb8c8c8a86e686861b13f3b22b19c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- andp_assoc, andp_comm.",
            "VernacExtend",
            "9263610a933a683f718818c1fe62794c635252bd"
        ],
        [
            "rewrite <- andp_assoc; apply andp_left1.",
            "VernacExtend",
            "7faa6f707be80867354643930fe6e3e4328d495f"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply derives_trans; [apply andp_derives, HR'; apply derives_refl|].",
            "VernacExtend",
            "91ec0e1723199a4bf7c085db5ed8c4a172aa45ab"
        ],
        [
            "apply later_left2.",
            "VernacExtend",
            "3f79fb8fbd966599fa5429b21f60bcd06fb14386"
        ],
        [
            "apply andp_right, andp_left2, derives_refl.",
            "VernacExtend",
            "2af217862abedb5829a83d437e40de609926a2eb"
        ],
        [
            "apply andp_right, CHECKTEMP.",
            "VernacExtend",
            "741174c017efd0885513f5ad61f7aae88fa8975e"
        ],
        [
            "eapply derives_trans, tc_exprlist_len; apply TC1.",
            "VernacExtend",
            "6bc7c81580e14f4ccf160b29305aeafb35f3334c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite later_andp, andp_comm, andp_assoc.",
            "VernacExtend",
            "a5f970ec32c2422ae7407158387968a2f6e63677"
        ],
        [
            "rewrite <- !prop_and.",
            "VernacExtend",
            "feb9bd4db9ee0d2520b40366558461b9ebfc903d"
        ],
        [
            "apply semax_extract_later_prop; intros [].",
            "VernacExtend",
            "cb2d5893c463edeed7b0aa175d2c6b9de2fa43e5"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply semax_pre_post' ; [ | | apply (@semax_call0 Espec cs Delta fs A Pre Post NEPre NEPost nil witness argsig retty cc a bl P Q Frame Hsub)].",
            "VernacExtend",
            "4aec96e7144d2d5d932e5dc5ae72d05ad36e2861"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_call_aux55; eauto.",
            "VernacExtend",
            "1f31f8c514dc776fc8ef3be06c9c4cab628f7d4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "clear CHECKTEMP TC1 PRE1 PPRE.",
            "VernacExtend",
            "fe77b4a26de2072ce1464e7ac84fb34c50571c7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite POST1; clear POST1.",
            "VernacExtend",
            "c873e32800bb97ee49bf0feaf18b27646016bbd4"
        ],
        [
            "unfold ifvoid.",
            "VernacExtend",
            "e04e60b223cef5675b5ce8707253d6d25eff356d"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with x.",
            "VernacExtend",
            "4cdb0700a335441429b2901b4a236f41d452acab"
        ],
        [
            "rewrite fold_right_and_app_low.",
            "VernacExtend",
            "a0e88f97aba8590a1334a63dbd0f983c7c8b86f2"
        ],
        [
            "rewrite fold_right_sepcon_app.",
            "VernacExtend",
            "ccdab8789b72da2f2964f4902618bed2be7467f8"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id1_wow: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec nil A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') ret (Post2: environ -> mpred) (Qnew: list localdef) (B: Type) (Ppost: B -> list Prop) (F: B -> val) (Rpost: B -> list mpred) Espec (TYret: typeof_temp Delta ret = Some retty) (OKretty: check_retty retty) (POST1: Post nil witness = EX vret:B, PROPx (Ppost vret) (LOCALx (temp ret_temp (F vret) :: nil) (SEPx (Rpost vret)))) (DELETE: remove_localdef_temp ret Q = Qnew) (H0: Post2 = EX vret:B, PROPx (P++ Ppost vret) (LOCALx (temp ret (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Scall (Some ret) a bl) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "99b4d39b623005aa6ebcd21cf5f54a56b682e8ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct SETUP as [[PTREE [Hsub [SPEC [HR' [ATY [TC0 [TC1 [MSUBST PTREE'']]]]]]]] [PRE1 [PTREE' [CHECKTEMP [CHECKG FRAME]]]]].",
            "VernacExtend",
            "5752ed7c6bfb0257ed80c33f83f025496376c9de"
        ],
        [
            "apply SPEC.",
            "VernacExtend",
            "b1cf91919c67ef6efb51c215e230bb5f955d2dfe"
        ],
        [
            "clear SPEC.",
            "VernacExtend",
            "2ec2c5864a0a5c68ce44d75bff7001971e17e04a"
        ],
        [
            "eapply semax_pre; [apply andp_right; [apply andp_left2, andp_left1, derives_refl|]|].",
            "VernacExtend",
            "51d920b53d3fb8c8c8a86e686861b13f3b22b19c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- andp_assoc, andp_comm.",
            "VernacExtend",
            "9263610a933a683f718818c1fe62794c635252bd"
        ],
        [
            "rewrite <- andp_assoc; apply andp_left1.",
            "VernacExtend",
            "7faa6f707be80867354643930fe6e3e4328d495f"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply derives_trans; [apply andp_derives, HR'; apply derives_refl|].",
            "VernacExtend",
            "91ec0e1723199a4bf7c085db5ed8c4a172aa45ab"
        ],
        [
            "apply later_left2.",
            "VernacExtend",
            "3f79fb8fbd966599fa5429b21f60bcd06fb14386"
        ],
        [
            "apply andp_right, andp_left2, derives_refl.",
            "VernacExtend",
            "2af217862abedb5829a83d437e40de609926a2eb"
        ],
        [
            "apply andp_right, CHECKTEMP.",
            "VernacExtend",
            "741174c017efd0885513f5ad61f7aae88fa8975e"
        ],
        [
            "eapply derives_trans, tc_exprlist_len; apply TC1.",
            "VernacExtend",
            "6bc7c81580e14f4ccf160b29305aeafb35f3334c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite later_andp, andp_comm, andp_assoc.",
            "VernacExtend",
            "a5f970ec32c2422ae7407158387968a2f6e63677"
        ],
        [
            "rewrite <- !prop_and.",
            "VernacExtend",
            "feb9bd4db9ee0d2520b40366558461b9ebfc903d"
        ],
        [
            "apply semax_extract_later_prop; intros [].",
            "VernacExtend",
            "cb2d5893c463edeed7b0aa175d2c6b9de2fa43e5"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply semax_pre_post'; [ | | apply (@semax_call1 Espec cs Delta fs A Pre Post NEPre NEPost nil witness ret argsig retty cc a bl P Q Frame Hsub)]; [ | | assumption | clear - OKretty; destruct retty; inv OKretty; apply I | hnf; clear - TYret; unfold typeof_temp in TYret; destruct ((temp_types Delta) ! ret); inv TYret; auto ].",
            "VernacExtend",
            "8bcf2df628b16444c78a26a3d588f71500b2cab7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_call_aux55; eauto.",
            "VernacExtend",
            "1f31f8c514dc776fc8ef3be06c9c4cab628f7d4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "clear CHECKTEMP TC1 PRE1 PPRE.",
            "VernacExtend",
            "fe77b4a26de2072ce1464e7ac84fb34c50571c7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite POST1; clear POST1.",
            "VernacExtend",
            "c873e32800bb97ee49bf0feaf18b27646016bbd4"
        ],
        [
            "apply derives_trans with (EX vret : B, `(PROPx (Ppost vret) (LOCAL (temp ret_temp (F vret)) (SEPx (Rpost vret))))%assert (get_result1 ret) * (local (tc_environ Delta) && PROPx P (LOCALx (remove_localdef_temp ret Q) (SEPx Frame)))).",
            "VernacExtend",
            "5e1ca5d6bfdc33a776132cdc07e8a0a02329c4c1"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with x; normalize.",
            "VernacExtend",
            "68c7f075a25c0037bd56f4bd1b633b68ff47204b"
        ],
        [
            "apply exp_left; intro vret.",
            "VernacExtend",
            "004e2582f179c1406cdb8011122ebd70f5daacff"
        ],
        [
            "apply exp_right with vret.",
            "VernacExtend",
            "89ed0a6fd33b57c3b158be84317a86454a991650"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "progress (autorewrite with norm1 norm2); normalize.",
            "VernacExtend",
            "dbcb729f7a8a98e3a403282bb09a94f0acc25898"
        ],
        [
            "rewrite PROP_combine.",
            "VernacExtend",
            "aa0f3ed0dee61aca77173aa90f507435cecef784"
        ],
        [
            "unfold fold_right.",
            "VernacExtend",
            "ab40f2cde00ad2f478c43d09492235dd57337224"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "repeat apply andp_right; try apply prop_right; auto.",
            "VernacExtend",
            "11c38b7b31f629cf63627d5040459243367675b7"
        ],
        [
            "rewrite !fold_right_and_app_low.",
            "VernacExtend",
            "5bc8332078cba85c65bb3093fb4a60e014558177"
        ],
        [
            "rewrite !fold_right_and_app_low in H4.",
            "VernacExtend",
            "666f8fd97fc0e7e734e09c764073d2ac40e7ab06"
        ],
        [
            "destruct H4; split; auto.",
            "VernacExtend",
            "a0a01892cba558914f21ac4adffcc11ce29d0338"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id1_x_wow: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty' cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec nil A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty' cc A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') retty Espec ret ret' (Post2: environ -> mpred) (Qnew: list localdef) (B: Type) (Ppost: B -> list Prop) (F: B -> val) (Rpost: B -> list mpred) (TYret: typeof_temp Delta ret = Some retty) (RETinit: (temp_types Delta) ! ret' = Some retty') (OKretty: check_retty retty) (OKretty': check_retty retty') (NEUTRAL: is_neutral_cast retty' retty = true) (NEret: ret <> ret') (POST1: Post nil witness = EX vret:B, PROPx (Ppost vret) (LOCALx (temp ret_temp (F vret) :: nil) (SEPx (Rpost vret)))) (DELETE: remove_localdef_temp ret Q = Qnew) (DELETE' : remove_localdef_temp ret' Q = Q) (H0: Post2 = EX vret:B, PROPx (P++ Ppost vret) (LOCALx (temp ret (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Ssequence (Scall (Some ret') a bl) (Sset ret (Ecast (Etempvar ret' retty') retty))) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "1989cd5eb0e1df5742265eda3f3e565e55199570"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_seq'.",
            "VernacExtend",
            "52d1505f64ada039b29687938bff954565c3eb15"
        ],
        [
            "eapply semax_call_id1_wow; try eassumption; auto.",
            "VernacExtend",
            "b1b3796d145bfe928b0e65033776034dd9e36854"
        ],
        [
            "unfold typeof_temp; rewrite RETinit; reflexivity.",
            "VernacExtend",
            "fd8dca89b9e8a2892244f9e3b549b42e2e364716"
        ],
        [
            "apply extract_exists_pre; intro vret.",
            "VernacExtend",
            "b3f3f38ea0beb5597e853b793fa0c903fc4fdf6b"
        ],
        [
            "eapply semax_pre_post'; [ | | apply semax_set_forward].",
            "VernacExtend",
            "b709f0b7b7307b5564f4508a5539d00d54b5048c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply derives_trans; [ | apply now_later ].",
            "VernacExtend",
            "9a71d4b56ef0714bd682ee6d36e7f41baba3bd6c"
        ],
        [
            "instantiate (1:= (PROPx (P ++ Ppost vret) (LOCALx (temp ret' (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame))))).",
            "VernacExtend",
            "dbc991d2994598699e53e810131e85a4cebefccd"
        ],
        [
            "apply andp_right; [apply andp_right |].",
            "VernacExtend",
            "050c204782076224de217d7cc77f390addb9b2b3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold tc_expr.",
            "VernacExtend",
            "12dc66c97196b373cb3844e16b07a3663bdc69a9"
        ],
        [
            "simpl typecheck_expr.",
            "VernacExtend",
            "bf3111365b3bfb5d46d055333ecd013a2357132a"
        ],
        [
            "rewrite RETinit.",
            "VernacExtend",
            "4494d1a8fb97a643bf42f5656bf48f91b3f4e46b"
        ],
        [
            "simpl @fst.",
            "VernacExtend",
            "78ac36cecc4798cc1bec15bd5d4b5623d1e3c6da"
        ],
        [
            "replace ((is_neutral_cast retty' retty' || same_base_type retty' retty')%bool) with true by (clear- OKretty'; destruct retty' as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; unfold is_neutral_cast; rewrite ?eqb_type_refl; reflexivity).",
            "VernacExtend",
            "85fdf6f87ef3e9fbeedc769a4d69bf32c1f5b3b5"
        ],
        [
            "rewrite denote_tc_assert_andp.",
            "VernacExtend",
            "691fd8a4c0b5ae56aebbf46da7865699ac3983c3"
        ],
        [
            "apply andp_right; [| intros rho; apply neutral_isCastResultType; auto].",
            "VernacExtend",
            "3dd1fb06ef5de3cb4df4bf6e7decb629e572ee61"
        ],
        [
            "apply PQR_denote_tc_initialized; auto.",
            "VernacExtend",
            "8764fb634bf3266a2389030bd3ad2d2e0864e4d3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold tc_temp_id, typecheck_temp_id.",
            "VernacExtend",
            "9a1c9b4aeb189870f8d31090621220c4c8048304"
        ],
        [
            "unfold typeof_temp in TYret.",
            "VernacExtend",
            "7ba4ad41d8d1bce9443d1b24ae9eb84962f62414"
        ],
        [
            "destruct ((temp_types Delta) ! ret); inversion TYret; clear TYret; try subst t.",
            "VernacExtend",
            "d1e5c75fd3b6cfce04ccb01ac38cf8a5256eada5"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "repeat rewrite denote_tc_assert_andp; simpl.",
            "VernacExtend",
            "0e5a0a44fdd2d6382ff3eefe80b537f0c91b6597"
        ],
        [
            "rewrite denote_tc_assert_bool.",
            "VernacExtend",
            "6be39b0ac0c853286729729b2f982511bc46e369"
        ],
        [
            "assert (is_neutral_cast (implicit_deref retty) retty = true).",
            "VernacExtend",
            "db67c75bf9d78d77c23f3c3fedc8b2c6f01c0ecb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct retty as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; try reflexivity; destruct retty' as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; try solve [inv NEUTRAL].",
            "VernacExtend",
            "2d72083f1905608a21cfe97f44269dd261ee11c0"
        ],
        [
            "unfold implicit_deref, is_neutral_cast.",
            "VernacExtend",
            "458703a5dbc3f91ed093b9f843519c78d9dc9408"
        ],
        [
            "rewrite eqb_type_refl; reflexivity.",
            "VernacExtend",
            "2dde83d8fbf671b78e7dcf2e9438cc843597fe6a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "simpl; apply andp_right.",
            "VernacExtend",
            "e388254c440fab1e950a2add4e5665476b884c89"
        ],
        [
            "apply prop_right; auto.",
            "VernacExtend",
            "95e18efadb5767545f0255f518eaa92b08876b58"
        ],
        [
            "apply neutral_isCastResultType; auto.",
            "VernacExtend",
            "c8ff5767aa4e6d5ceaa3f42a7ce4a6db335134ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- !insert_local.",
            "VernacExtend",
            "33e6c00aa000bf0144e5b0b89f5ab2cc9e39ccd0"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "subst Qnew; apply derives_remove_localdef_PQR.",
            "VernacExtend",
            "dfc29c19f7b31f29ddea10953a5ba7f1c548dac0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst Post2.",
            "VernacExtend",
            "15eee87dbe464e1a34c903005e80ce470786a3af"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with vret; normalize.",
            "VernacExtend",
            "759ade066020457dd8e1951af4c3148313d86fc0"
        ],
        [
            "rewrite <- !insert_local.",
            "VernacExtend",
            "33e6c00aa000bf0144e5b0b89f5ab2cc9e39ccd0"
        ],
        [
            "autorewrite with subst.",
            "VernacExtend",
            "a0a7cc51d36fa0a311954515c238f15599d651bc"
        ],
        [
            "rewrite <- !andp_assoc.",
            "VernacExtend",
            "c5054dc7db48721dcca908810895940ad495a85d"
        ],
        [
            "apply andp_derives; [| subst Qnew; apply subst_remove_localdef_PQR].",
            "VernacExtend",
            "47c0b7142eb85dadf33c1aa2bd49682b3c92e532"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "assert (eqb_ident ret ret' = false) by (clear - NEret; pose proof (eqb_ident_spec ret ret'); destruct (eqb_ident ret ret'); auto; contradiction NEret; intuition).",
            "VernacExtend",
            "faee5d35ae37ce7ed114b629b1409224ec69d333"
        ],
        [
            "rewrite H3 in *.",
            "VernacExtend",
            "05c6ecd2c6487293634aa6b851ba93e6eebc5724"
        ],
        [
            "apply Pos.eqb_neq in H3.",
            "VernacExtend",
            "fd63dc03f903d643c7b4d917f067345e96807024"
        ],
        [
            "unfold_lift in H0.",
            "VernacExtend",
            "abcdd845830d2228c19fdd81165fc3be5217cf0a"
        ],
        [
            "assert (tc_val retty' (eval_id ret' rho)) by (eapply tc_eval'_id_i; try eassumption; congruence).",
            "VernacExtend",
            "c67fd5a8c7bab7337beba27a130e1cd206cacbfc"
        ],
        [
            "assert (H7 := expr2.neutral_cast_lemma); unfold eval_cast in H7.",
            "VernacExtend",
            "06704313fbbbd1e07bce412e29309d08f0c92c22"
        ],
        [
            "rewrite H7 in H0 by auto; clear H7.",
            "VernacExtend",
            "aa7fe454677732eeab5e4a8ed5552954763292d7"
        ],
        [
            "split; congruence.",
            "VernacExtend",
            "7f007b5ce3732856c1deed66b0edcc61cdb7f2d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id1_y_wow: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty' cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec nil A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty' cc A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') Espec ret ret' (retty: type) (Post2: environ -> mpred) (Qnew: list localdef) (B: Type) (Ppost: B -> list Prop) (F: B -> val) (Rpost: B -> list mpred) (TYret: typeof_temp Delta ret = Some retty) (RETinit: (temp_types Delta) ! ret' = Some retty') (OKretty: check_retty retty) (OKretty': check_retty retty') (NEUTRAL: is_neutral_cast retty' retty = true) (NEret: ret <> ret') (POST1: Post nil witness = EX vret:B, PROPx (Ppost vret) (LOCALx (temp ret_temp (F vret) :: nil) (SEPx (Rpost vret)))) (DELETE: remove_localdef_temp ret Q = Qnew) (DELETE' : remove_localdef_temp ret' Q = Q) (H0: Post2 = EX vret:B, PROPx (P++ Ppost vret) (LOCALx (temp ret (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Ssequence (Scall (Some ret') a bl) (Sset ret (Etempvar ret' retty'))) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "dc2b3193d637ad5c641e932a4a1e0f04a44a9327"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_seq'.",
            "VernacExtend",
            "52d1505f64ada039b29687938bff954565c3eb15"
        ],
        [
            "eapply semax_call_id1_wow; try eassumption; auto; unfold typeof_temp; rewrite RETinit; reflexivity.",
            "VernacExtend",
            "d1b1d58c653a4944d968bba6f6ac397aed4ac6fc"
        ],
        [
            "apply extract_exists_pre; intro vret.",
            "VernacExtend",
            "b3f3f38ea0beb5597e853b793fa0c903fc4fdf6b"
        ],
        [
            "eapply semax_pre_post'; [ | | apply semax_set_forward].",
            "VernacExtend",
            "b709f0b7b7307b5564f4508a5539d00d54b5048c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply derives_trans; [ | apply now_later ].",
            "VernacExtend",
            "9a71d4b56ef0714bd682ee6d36e7f41baba3bd6c"
        ],
        [
            "instantiate (1:= (PROPx (P ++ Ppost vret) (LOCALx (temp ret' (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame))))).",
            "VernacExtend",
            "dbc991d2994598699e53e810131e85a4cebefccd"
        ],
        [
            "apply andp_right; [apply andp_right |].",
            "VernacExtend",
            "050c204782076224de217d7cc77f390addb9b2b3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold tc_expr.",
            "VernacExtend",
            "12dc66c97196b373cb3844e16b07a3663bdc69a9"
        ],
        [
            "match goal with |- _ |-- ?A => set (aa:=A); unfold denote_tc_assert in aa; simpl in aa; subst aa end.",
            "VernacExtend",
            "9a85407dcfcd6b64844b90087f77f8dc22c135b4"
        ],
        [
            "rewrite RETinit.",
            "VernacExtend",
            "4494d1a8fb97a643bf42f5656bf48f91b3f4e46b"
        ],
        [
            "simpl @fst.",
            "VernacExtend",
            "78ac36cecc4798cc1bec15bd5d4b5623d1e3c6da"
        ],
        [
            "replace ((is_neutral_cast retty' retty' || same_base_type retty' retty')%bool) with true by (clear- OKretty'; destruct retty' as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; unfold is_neutral_cast; rewrite ?eqb_type_refl; reflexivity).",
            "VernacExtend",
            "85fdf6f87ef3e9fbeedc769a4d69bf32c1f5b3b5"
        ],
        [
            "simpl @snd.",
            "VernacExtend",
            "d887e1ab056d16793c772721e2bfe3c034fb79f2"
        ],
        [
            "cbv iota.",
            "VernacExtend",
            "0b4f348f85826bd21feb3586a4bec6babf00a5cd"
        ],
        [
            "apply PQR_denote_tc_initialized; auto.",
            "VernacExtend",
            "8764fb634bf3266a2389030bd3ad2d2e0864e4d3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold tc_temp_id, typecheck_temp_id.",
            "VernacExtend",
            "9a1c9b4aeb189870f8d31090621220c4c8048304"
        ],
        [
            "unfold typeof_temp in TYret.",
            "VernacExtend",
            "7ba4ad41d8d1bce9443d1b24ae9eb84962f62414"
        ],
        [
            "destruct ((temp_types Delta) ! ret); inversion TYret; clear TYret; try subst t.",
            "VernacExtend",
            "d1e5c75fd3b6cfce04ccb01ac38cf8a5256eada5"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "repeat rewrite denote_tc_assert_andp; simpl.",
            "VernacExtend",
            "0e5a0a44fdd2d6382ff3eefe80b537f0c91b6597"
        ],
        [
            "rewrite denote_tc_assert_bool.",
            "VernacExtend",
            "6be39b0ac0c853286729729b2f982511bc46e369"
        ],
        [
            "assert (is_neutral_cast (implicit_deref retty') retty = true).",
            "VernacExtend",
            "1a3227548b2ea38099b501315feda81dc1aa3310"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "replace (implicit_deref retty') with retty' by (destruct retty' as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; reflexivity).",
            "VernacExtend",
            "9701e81f76fae61f2ae253cc47297e7143b4f535"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl; apply andp_right.",
            "VernacExtend",
            "e388254c440fab1e950a2add4e5665476b884c89"
        ],
        [
            "apply prop_right; auto.",
            "VernacExtend",
            "95e18efadb5767545f0255f518eaa92b08876b58"
        ],
        [
            "apply neutral_isCastResultType; auto.",
            "VernacExtend",
            "c8ff5767aa4e6d5ceaa3f42a7ce4a6db335134ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- !insert_local.",
            "VernacExtend",
            "33e6c00aa000bf0144e5b0b89f5ab2cc9e39ccd0"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "subst Qnew; apply derives_remove_localdef_PQR.",
            "VernacExtend",
            "dfc29c19f7b31f29ddea10953a5ba7f1c548dac0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst Post2.",
            "VernacExtend",
            "15eee87dbe464e1a34c903005e80ce470786a3af"
        ],
        [
            "unfold normal_ret_assert.",
            "VernacExtend",
            "5872edfef289d88c4df30366a6ecbc814d29d068"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with vret; normalize.",
            "VernacExtend",
            "759ade066020457dd8e1951af4c3148313d86fc0"
        ],
        [
            "rewrite <- !insert_local.",
            "VernacExtend",
            "33e6c00aa000bf0144e5b0b89f5ab2cc9e39ccd0"
        ],
        [
            "autorewrite with subst.",
            "VernacExtend",
            "a0a7cc51d36fa0a311954515c238f15599d651bc"
        ],
        [
            "rewrite <- !andp_assoc.",
            "VernacExtend",
            "c5054dc7db48721dcca908810895940ad495a85d"
        ],
        [
            "apply andp_derives; [| subst Qnew; apply subst_remove_localdef_PQR].",
            "VernacExtend",
            "47c0b7142eb85dadf33c1aa2bd49682b3c92e532"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "assert (eqb_ident ret ret' = false) by (clear - NEret; pose proof (eqb_ident_spec ret ret'); destruct (eqb_ident ret ret'); auto; contradiction NEret; intuition).",
            "VernacExtend",
            "faee5d35ae37ce7ed114b629b1409224ec69d333"
        ],
        [
            "rewrite H3 in *.",
            "VernacExtend",
            "05c6ecd2c6487293634aa6b851ba93e6eebc5724"
        ],
        [
            "apply Pos.eqb_neq in H3.",
            "VernacExtend",
            "fd63dc03f903d643c7b4d917f067345e96807024"
        ],
        [
            "split; congruence.",
            "VernacExtend",
            "7f007b5ce3732856c1deed66b0edcc61cdb7f2d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id01_wow: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec nil A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') Espec (Post2: environ -> mpred) (B: Type) (Ppost: B -> list Prop) (F: B -> val) (Rpost: B -> list mpred) (_: check_retty retty) (POST1: Post nil witness = EX vret:B, PROPx (Ppost vret) (LOCALx (temp ret_temp (F vret) :: nil) (SEPx (Rpost vret)))) (POST2: Post2 = EX vret:B, PROPx (P++ Ppost vret) (LOCALx Q (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Scall None a bl) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "5b7d03d349b9878bf5fca37517d794e21ab92870"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct SETUP as [[PTREE [Hsub [SPEC [HR' [ATY [TC0 [TC1 [MSUBST PTREE'']]]]]]]] [PRE1 [PTREE' [CHECKTEMP [CHECKG FRAME]]]]].",
            "VernacExtend",
            "5752ed7c6bfb0257ed80c33f83f025496376c9de"
        ],
        [
            "apply SPEC.",
            "VernacExtend",
            "b1cf91919c67ef6efb51c215e230bb5f955d2dfe"
        ],
        [
            "clear SPEC.",
            "VernacExtend",
            "2ec2c5864a0a5c68ce44d75bff7001971e17e04a"
        ],
        [
            "eapply semax_pre; [apply andp_right; [apply andp_left2, andp_left1, derives_refl|]|].",
            "VernacExtend",
            "51d920b53d3fb8c8c8a86e686861b13f3b22b19c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- andp_assoc, andp_comm.",
            "VernacExtend",
            "9263610a933a683f718818c1fe62794c635252bd"
        ],
        [
            "rewrite <- andp_assoc; apply andp_left1.",
            "VernacExtend",
            "7faa6f707be80867354643930fe6e3e4328d495f"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply derives_trans; [apply andp_derives, HR'; apply derives_refl|].",
            "VernacExtend",
            "91ec0e1723199a4bf7c085db5ed8c4a172aa45ab"
        ],
        [
            "apply later_left2.",
            "VernacExtend",
            "3f79fb8fbd966599fa5429b21f60bcd06fb14386"
        ],
        [
            "apply andp_right, andp_left2, derives_refl.",
            "VernacExtend",
            "2af217862abedb5829a83d437e40de609926a2eb"
        ],
        [
            "apply andp_right, CHECKTEMP.",
            "VernacExtend",
            "741174c017efd0885513f5ad61f7aae88fa8975e"
        ],
        [
            "eapply derives_trans, tc_exprlist_len; apply TC1.",
            "VernacExtend",
            "6bc7c81580e14f4ccf160b29305aeafb35f3334c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite later_andp, andp_comm, andp_assoc.",
            "VernacExtend",
            "a5f970ec32c2422ae7407158387968a2f6e63677"
        ],
        [
            "rewrite <- !prop_and.",
            "VernacExtend",
            "feb9bd4db9ee0d2520b40366558461b9ebfc903d"
        ],
        [
            "apply semax_extract_later_prop; intros [].",
            "VernacExtend",
            "cb2d5893c463edeed7b0aa175d2c6b9de2fa43e5"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply semax_pre_post'; [ | | apply semax_call0 with (fs:=fs)(cc:=cc)(A:= A) (ts := nil)(x:=witness) (P:=P)(Q:=Q)(NEPre :=NEPre) (NEPost := NEPost)(R := Frame) ]; try eassumption.",
            "VernacExtend",
            "f6c452c36a11969fa2f78529f2ee8ce09517e446"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_call_aux55; eauto.",
            "VernacExtend",
            "1f31f8c514dc776fc8ef3be06c9c4cab628f7d4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "clear CHECKTEMP TC1 PRE1 PPRE.",
            "VernacExtend",
            "fe77b4a26de2072ce1464e7ac84fb34c50571c7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite POST1; clear POST1.",
            "VernacExtend",
            "c873e32800bb97ee49bf0feaf18b27646016bbd4"
        ],
        [
            "match goal with |- context [ifvoid retty ?A ?B] => replace (ifvoid retty A B) with B by (destruct retty; try contradiction; auto) end.",
            "VernacExtend",
            "216e584b2d749e1273c261029d716ff813bece7d"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with x0; normalize.",
            "VernacExtend",
            "7b22c47d32f596900a9453796941afc270f5b788"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "rewrite fold_right_and_app_low.",
            "VernacExtend",
            "a0e88f97aba8590a1334a63dbd0f983c7c8b86f2"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rename x0 into vret.",
            "VernacExtend",
            "9c698aaae4f6599b3ff251c2215d6e6d4ca6b050"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "rewrite fold_right_sepcon_app.",
            "VernacExtend",
            "ccdab8789b72da2f2964f4902618bed2be7467f8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma match_funcptr'_funcptr: forall fs v B, func_ptr' fs v * B |-- func_ptr fs v.",
            "VernacStartTheoremProof",
            "66e516dbb61567c855363d27fa14719410b12656"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold func_ptr'.",
            "VernacExtend",
            "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
        ],
        [
            "rewrite corable_andp_sepcon1 by apply corable_func_ptr.",
            "VernacExtend",
            "296fe768802c35bc819a7123e22ce45957b985e9"
        ],
        [
            "apply andp_left1; auto.",
            "VernacExtend",
            "fbc9186131c9851d08ff7aadf76f5fc5ca898763"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nomatch_funcptr'_funcptr: forall fs v A B, B |-- func_ptr fs v -> A * B |-- func_ptr fs v.",
            "VernacStartTheoremProof",
            "fc13db9f8f1980594cf54b8048802e4b863385d7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (corable_sepcon_TT _ (corable_func_ptr fs v)).",
            "VernacExtend",
            "ccb223be706f80f08d97a536728a436d11f9fc38"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac match_funcptr'_funcptr := first [apply match_funcptr'_funcptr | apply nomatch_funcptr'_funcptr; match_funcptr'_funcptr].",
            "VernacExtend",
            "d7bda1440eb9009ef829569cf07f76605f16e96b"
        ],
        [
            "Ltac prove_func_ptr := match goal with |- fold_right_sepcon ?A |-- func_ptr ?F ?V => match A with context [func_ptr' ?G V] => unify F G end end; unfold fold_right_sepcon; match_funcptr'_funcptr.",
            "VernacExtend",
            "c22f99ff3683710bcb7567f769de975e6e24f4f9"
        ],
        [
            "Definition eq_no_post (x v: val) : Prop := x=v.",
            "VernacDefinition",
            "48b74e9e72c0aab35f55e7400fa1860664c20f1a"
        ],
        [
            "Lemma no_post_exists: forall v P Q R, PROPx P (LOCALx (temp ret_temp v :: Q) (SEPx R)) = EX x:val, PROPx (eq_no_post x v :: P) (LOCALx (temp ret_temp x :: Q) (SEPx R)).",
            "VernacStartTheoremProof",
            "e34c8ae5b3b53043cf98b60cb1824bd1501d28d0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold eq_no_post.",
            "VernacExtend",
            "589d4e759ed7cd1a650c6c39ff2c00f88b356b71"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "apply exp_right with v.",
            "VernacExtend",
            "e741d582d9c706f07ee63012fffe0de5463c576a"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply prop_derives.",
            "VernacExtend",
            "3ff0669364275651d7ffd02bff091ff41292645e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply exp_left; intro.",
            "VernacExtend",
            "5fab958453fd51f6d35801cee45d6839e0f97460"
        ],
        [
            "unfold PROPx.",
            "VernacExtend",
            "593deff54c68c9f1e69c515e783782e0f285a65f"
        ],
        [
            "simpl fold_right.",
            "VernacExtend",
            "65548c8477adba0f9965885c81b5fa89677f589f"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma no_post_exists0: forall P Q R, PROPx P (LOCALx Q (SEPx R)) = EX x:unit, PROPx ((fun _ => P) x) (LOCALx Q (SEPx ((fun _ => R) x))).",
            "VernacStartTheoremProof",
            "ed7b7ab9876fc34e37071a6e2e1110c8fe04870d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "apply exp_right with tt.",
            "VernacExtend",
            "4bd49c581a1c0a518b0bbccff6ab342d2ec37568"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply exp_left; auto.",
            "VernacExtend",
            "051006a84529610a35e0fdfe7e6313330b46ba4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "argtypes_eq",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "induction al; try destruct a; simpl; auto.",
                        "VernacExtend",
                        "342ab323d2e7e208d0ee20fd37a426a30217011b"
                    ]
                },
                {
                    "command": [
                        "destruct (split al).",
                        "VernacExtend",
                        "ee66435c0fc3851cbc23da9bf6c16af838d7c5f8"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_call1",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@semax_call' Espec cs Delta fs A Pre Post NEPre NEPost ts x (Some id) argsig retsig cc a bl P Q R); auto.",
                        "VernacExtend",
                        "81239d531872d19366f268612e3fd53139f98375"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_fun_id'",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (semax_fun_id id f Delta); auto.",
                        "VernacExtend",
                        "3d33a8cc07bf9c4834d2e02429d9caa154caf344"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre_post; try apply H1; try (apply andp_left2; apply derives_refl).",
                        "VernacExtend",
                        "3541c4121ee44f6fb84b46045b071fe582df5220"
                    ]
                },
                {
                    "command": [
                        "apply andp_right.",
                        "VernacExtend",
                        "614688b80ee6a44f752e79383d4234d6d5dfcee8"
                    ]
                },
                {
                    "command": [
                        "rewrite later_andp.",
                        "VernacExtend",
                        "4f91f5654d2f8262e470e7fc21baefb6cfe9b423"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !andp_assoc.",
                        "VernacExtend",
                        "c5054dc7db48721dcca908810895940ad495a85d"
                    ]
                },
                {
                    "command": [
                        "rewrite !andp_assoc; apply andp_left2, andp_left1; auto.",
                        "VernacExtend",
                        "533208d4ef121b5af576c5b5ccf96ec0a88b163f"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "clear H1.",
                        "VernacExtend",
                        "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
                    ]
                },
                {
                    "command": [
                        "rewrite later_andp.",
                        "VernacExtend",
                        "4f91f5654d2f8262e470e7fc21baefb6cfe9b423"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "unfold func_ptr'.",
                        "VernacExtend",
                        "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
                    ]
                },
                {
                    "command": [
                        "intro rho; simpl; normalize.",
                        "VernacExtend",
                        "5a320129d23e95a8b3f2ca8d04d18673220f3893"
                    ]
                },
                {
                    "command": [
                        "rewrite corable_andp_sepcon1 by apply corable_func_ptr.",
                        "VernacExtend",
                        "296fe768802c35bc819a7123e22ce45957b985e9"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm.",
                        "VernacExtend",
                        "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "rewrite emp_sepcon; auto.",
                        "VernacExtend",
                        "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2; auto.",
                        "VernacExtend",
                        "624d28bb04e617622cc0cb522526420dfef62500"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2; auto.",
                        "VernacExtend",
                        "624d28bb04e617622cc0cb522526420dfef62500"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_typelist_refl",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "induction tl; simpl; auto.",
                        "VernacExtend",
                        "e904643b1a1ca2cacc68894176858dd71c88e3a2"
                    ]
                },
                {
                    "command": [
                        "apply andb_true_iff.",
                        "VernacExtend",
                        "583d40e493f314492aad482eb70e9a25a38aae78"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply eqb_type_refl.",
                        "VernacExtend",
                        "11359825efcf7fd0d31246b3c0c974cade355bd2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_calling_convention_refl",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold eqb_calling_convention.",
                        "VernacExtend",
                        "7a75778fefe17fbc0a968c9b3d22565713716374"
                    ]
                },
                {
                    "command": [
                        "destruct cc; simpl.",
                        "VernacExtend",
                        "b6c73221742de9247b859bc51cb679fb7e23f366"
                    ]
                },
                {
                    "command": [
                        "destruct cc_vararg, cc_unproto, cc_structret; reflexivity.",
                        "VernacExtend",
                        "397473c6fac9395fa432eea5c1581602a9c84de8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "type_of_subsume_funspec",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct fs1, fs2; destruct H as [? [? _]].",
                        "VernacExtend",
                        "1fae276f272de7534320f88111880daa439cd684"
                    ]
                },
                {
                    "command": [
                        "subst; simpl; auto.",
                        "VernacExtend",
                        "4c332d568d45adb0cafebb5e0d56ad2383772bec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_call_id0",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Cop.classify_fun (typeof (Evar id (Tfunction (type_of_params argsig) retty cc)))= Cop.fun_case_f (type_of_params argsig) retty cc).",
                        "VernacExtend",
                        "06a19ca9c8b5d89ac95becbd6a2b90d82754bca2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply (semax_fun_id' id fs (tc_exprlist Delta (argtypes argsig) bl)); auto.",
                        "VernacExtend",
                        "57fbe0b4b0362ff2210549b7bc421c8f6c0d023f"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre_simple; [ | apply (@semax_call0 Espec cs Delta fs A Pre Post NEPre NEPost ts x argsig _ cc _ bl P Q R Hsub); auto].",
                        "VernacExtend",
                        "6ea63483e63b0067774da5df93abab9ced3e997f"
                    ]
                },
                {
                    "command": [
                        "rewrite later_andp.",
                        "VernacExtend",
                        "4f91f5654d2f8262e470e7fc21baefb6cfe9b423"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; [apply andp_right | ].",
                        "VernacExtend",
                        "050c204782076224de217d7cc77f390addb9b2b3"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans, now_later.",
                        "VernacExtend",
                        "3f4214303532b590365af8948bc6af28dc00ac7c"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1.",
                        "VernacExtend",
                        "527caf3623c2439da127093a10760d6fffcc2032"
                    ]
                },
                {
                    "command": [
                        "intro rho; unfold tc_expr; simpl.",
                        "VernacExtend",
                        "6d92349a01770a97fa3b4d175c56021fb7821b4a"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "norm_rewrite.",
                        "VernacExtend",
                        "2c6f99c04220c8d48b3da7fae8f9d4492570bae1"
                    ]
                },
                {
                    "command": [
                        "apply prop_left; intro.",
                        "VernacExtend",
                        "f04a4fb9e26402827e65bc506ec9cd8978e96d58"
                    ]
                },
                {
                    "command": [
                        "unfold get_var_type.",
                        "VernacExtend",
                        "c117ce7131d7796a8dc6b41a89066ce852b981a3"
                    ]
                },
                {
                    "command": [
                        "rewrite GLBL.",
                        "VernacExtend",
                        "a11e4ce396eef6715a7dbee8386587b80773db3a"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_bool; simpl.",
                        "VernacExtend",
                        "f14bb397c528baea7351381c312d814a6a6a14e6"
                    ]
                },
                {
                    "command": [
                        "apply prop_right.",
                        "VernacExtend",
                        "951daa52f148695942d4aefc563d5e92d8ec02ff"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (type_of_subsume_funspec _ _ Hsub).",
                        "VernacExtend",
                        "44763c81809d0b20d765f157c2693f9c328c676a"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "rewrite eqb_typelist_refl.",
                        "VernacExtend",
                        "53a288b2fea15ed8de99f1c6c48a756e1b42a920"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold_lift; auto.",
                        "VernacExtend",
                        "4a0cd82c51bcc138190a0c85bb746cdb64773c6a"
                    ]
                },
                {
                    "command": [
                        "rewrite eqb_type_refl.",
                        "VernacExtend",
                        "ccdab3d98ef556debd0df1191e8f1dfbe3b6f6b0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply eqb_calling_convention_refl.",
                        "VernacExtend",
                        "61bfc4d348e7218a151a48c5138c26f74212f22f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2, andp_left1; auto.",
                        "VernacExtend",
                        "e85aaa1f3c6d4c11c9bc36427dff0c499bd271af"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2, andp_left2, andp_left2.",
                        "VernacExtend",
                        "2180ac2e5b6d272a0b9e901ab9bc7143ad766445"
                    ]
                },
                {
                    "command": [
                        "intro; simpl.",
                        "VernacExtend",
                        "6b02318154ba1426764dbd23d934520cd3e7ae9f"
                    ]
                },
                {
                    "command": [
                        "rewrite later_sepcon, <- sepcon_assoc.",
                        "VernacExtend",
                        "84f8155a6eca5dc57b7667a60f952de51f79dba6"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "rewrite (type_of_subsume_funspec _ _ Hsub).",
                        "VernacExtend",
                        "44763c81809d0b20d765f157c2693f9c328c676a"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm; apply derives_refl.",
                        "VernacExtend",
                        "0d20e01b55fb8bc319b014f446e6b312392042dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_call_id1",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rename H0 into Ht.",
                        "VernacExtend",
                        "198e2937a9ec63528c85e2408ee0d039cbf19e67"
                    ]
                },
                {
                    "command": [
                        "rename H1 into H0.",
                        "VernacExtend",
                        "2363c12c50e22bd3dbce4e18e679c14c31fc424f"
                    ]
                },
                {
                    "command": [
                        "rename H2 into Hret.",
                        "VernacExtend",
                        "2e5f249d9526606d74098a3b3c5dd81b8f34898d"
                    ]
                },
                {
                    "command": [
                        "assert (Cop.classify_fun (typeof (Evar id (Tfunction (type_of_params argsig) retty cc)))= Cop.fun_case_f (type_of_params argsig) retty cc).",
                        "VernacExtend",
                        "06a19ca9c8b5d89ac95becbd6a2b90d82754bca2"
                    ]
                },
                {
                    "command": [
                        "subst; reflexivity.",
                        "VernacExtend",
                        "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
                    ]
                },
                {
                    "command": [
                        "apply (semax_fun_id' id fs); auto.",
                        "VernacExtend",
                        "13e2966d5848bad34e7b99a31cd5980bcbab09dc"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre_simple; [ | apply (semax_call1 Espec Delta fs A Pre Post NEPre NEPost ts x ret argsig retty cc _ bl P Q R Hsub H1 H0); auto].",
                        "VernacExtend",
                        "4a58f0f459c7efdaf5b40ed59a6dccc39dd20a9a"
                    ]
                },
                {
                    "command": [
                        "apply andp_right.",
                        "VernacExtend",
                        "614688b80ee6a44f752e79383d4234d6d5dfcee8"
                    ]
                },
                {
                    "command": [
                        "rewrite later_andp; apply andp_right.",
                        "VernacExtend",
                        "328d44d805b6907ac9e4f18e3773c67f6d4b8aad"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans, now_later.",
                        "VernacExtend",
                        "3f4214303532b590365af8948bc6af28dc00ac7c"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1.",
                        "VernacExtend",
                        "527caf3623c2439da127093a10760d6fffcc2032"
                    ]
                },
                {
                    "command": [
                        "intro rho; unfold tc_expr, local,lift1; simpl.",
                        "VernacExtend",
                        "6c3bc084aca51c03c2d7d0effc4c8b3d4ad6695c"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "norm_rewrite.",
                        "VernacExtend",
                        "2c6f99c04220c8d48b3da7fae8f9d4492570bae1"
                    ]
                },
                {
                    "command": [
                        "unfold get_var_type.",
                        "VernacExtend",
                        "c117ce7131d7796a8dc6b41a89066ce852b981a3"
                    ]
                },
                {
                    "command": [
                        "rewrite GLBL.",
                        "VernacExtend",
                        "a11e4ce396eef6715a7dbee8386587b80773db3a"
                    ]
                },
                {
                    "command": [
                        "rewrite Ht.",
                        "VernacExtend",
                        "e6fe20971722eecae65d56a1c23872eb23f5aa6f"
                    ]
                },
                {
                    "command": [
                        "rewrite (type_of_subsume_funspec _ _ Hsub).",
                        "VernacExtend",
                        "44763c81809d0b20d765f157c2693f9c328c676a"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_bool.",
                        "VernacExtend",
                        "6be39b0ac0c853286729729b2f982511bc46e369"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite eqb_typelist_refl.",
                        "VernacExtend",
                        "53a288b2fea15ed8de99f1c6c48a756e1b42a920"
                    ]
                },
                {
                    "command": [
                        "rewrite eqb_type_refl.",
                        "VernacExtend",
                        "ccdab3d98ef556debd0df1191e8f1dfbe3b6f6b0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply prop_right; apply eqb_calling_convention_refl.",
                        "VernacExtend",
                        "65cbad6febbb710d8e69866e52af2da0698ad0de"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1.",
                        "VernacExtend",
                        "527caf3623c2439da127093a10760d6fffcc2032"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "rewrite later_sepcon, <- sepcon_assoc.",
                        "VernacExtend",
                        "84f8155a6eca5dc57b7667a60f952de51f79dba6"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "rewrite (type_of_subsume_funspec _ _ Hsub).",
                        "VernacExtend",
                        "44763c81809d0b20d765f157c2693f9c328c676a"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_and_app_low",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "induction Q1; intros; simpl; auto.",
                        "VernacExtend",
                        "ffbf4d7865fc0058860453b58543eb6246ca3689"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; intuition.",
                        "VernacExtend",
                        "8a4224a6b11df295ba822165ed660bf644fc5d44"
                    ]
                },
                {
                    "command": [
                        "rewrite IHQ1.",
                        "VernacExtend",
                        "fd0e39911f0d5e0deb7acfc0950ea4be6c8bcafa"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; intuition.",
                        "VernacExtend",
                        "8a4224a6b11df295ba822165ed660bf644fc5d44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_and_app_lifted",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "induction Q1; intros; simpl; auto.",
                        "VernacExtend",
                        "ffbf4d7865fc0058860453b58543eb6246ca3689"
                    ]
                },
                {
                    "command": [
                        "extensionality rho; apply prop_ext; intuition.",
                        "VernacExtend",
                        "42b9a43e6333bc5920e19ded8a4a0d78b3063c3a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto.",
                        "VernacExtend",
                        "95ae427bd4e09a5f31c59184b718811a23ecb36f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHQ1.",
                        "VernacExtend",
                        "fd0e39911f0d5e0deb7acfc0950ea4be6c8bcafa"
                    ]
                },
                {
                    "command": [
                        "extensionality rho; apply prop_ext; intuition.",
                        "VernacExtend",
                        "42b9a43e6333bc5920e19ded8a4a0d78b3063c3a"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extract_trivial_liftx_e",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H; simpl.",
                        "VernacExtend",
                        "9726f146667ea4ca85eccbf11148dbb538898a23"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isolate_LOCAL_lem1",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "unfold PROPx, LOCALx, SEPx.",
                        "VernacExtend",
                        "1b5fb887355377e7dc0a92cc79eab1326b53b147"
                    ]
                },
                {
                    "command": [
                        "simpl fold_right_sepcon.",
                        "VernacExtend",
                        "24da839234a927e19e8ada094d635513355e536d"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_ptree_elements_e",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply PTree.elements_correct in H0.",
                        "VernacExtend",
                        "3584315385737cbdb781cfbf1a987c66d4c5275e"
                    ]
                },
                {
                    "command": [
                        "induction (PTree.elements m).",
                        "VernacExtend",
                        "ee701e62f0ee1f0a8516c70d1f78deb3705b813d"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inv H0; auto.",
                        "VernacExtend",
                        "a747752c9ff1861588c8959f4ce90cf59f358ae3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pTree_from_elements_e1",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert vl H H0; induction fl; intros.",
                        "VernacExtend",
                        "1beaac34ae8f6640773d8b16f2bd95d46ea83c78"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "unfold pTree_from_elements in H0.",
                        "VernacExtend",
                        "a1862b2a0d4eea05cbe7179bd1d2581549aaf695"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in H0; inv H0.",
                        "VernacExtend",
                        "028c93c56154b0f5f22a1a25e06edd7fa8818634"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct vl.",
                        "VernacExtend",
                        "4960e0c881663ef3ca1c004c0b52fc200dff7e94"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "unfold pTree_from_elements in H0.",
                        "VernacExtend",
                        "a1862b2a0d4eea05cbe7179bd1d2581549aaf695"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in H0; inv H0.",
                        "VernacExtend",
                        "028c93c56154b0f5f22a1a25e06edd7fa8818634"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "unfold pTree_from_elements in H0.",
                        "VernacExtend",
                        "a1862b2a0d4eea05cbe7179bd1d2581549aaf695"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "destruct (ident_eq i a).",
                        "VernacExtend",
                        "4abaa16f06ae00220f902162c581933d7b931706"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gss in H0.",
                        "VernacExtend",
                        "43b68e566f3980be0778d5b06a08a79b8cfefe76"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite unfold_make_args_cons.",
                        "VernacExtend",
                        "b6928440d31779fd03106fb07ebec3457301512e"
                    ]
                },
                {
                    "command": [
                        "unfold eval_id.",
                        "VernacExtend",
                        "ea2fa7a188f5192bb4f11fe06fd53e4576051073"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Map.gss.",
                        "VernacExtend",
                        "5cffa4b9a854ae416cd4d33ea0eae84716bdfb38"
                    ]
                },
                {
                    "command": [
                        "split; [reflexivity | inv H; auto].",
                        "VernacExtend",
                        "78f4741beee7192fb0e82cc9dbcbc064c93b3f48"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gso in H0 by auto.",
                        "VernacExtend",
                        "1eedb55cb2f0868636905cdad91b662b04a3e26c"
                    ]
                },
                {
                    "command": [
                        "apply IHfl in H0.",
                        "VernacExtend",
                        "03917236629d316dab92f69fe7e4f445cc94af8d"
                    ]
                },
                {
                    "command": [
                        "rewrite unfold_make_args_cons.",
                        "VernacExtend",
                        "b6928440d31779fd03106fb07ebec3457301512e"
                    ]
                },
                {
                    "command": [
                        "unfold eval_id.",
                        "VernacExtend",
                        "ea2fa7a188f5192bb4f11fe06fd53e4576051073"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Map.gso by auto.",
                        "VernacExtend",
                        "5a1a598e0234eeea1db666cad09a08bf75f563f5"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ve_of_make_args",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "unfold Map.get, ve_of.",
                        "VernacExtend",
                        "3a409e73c11a006729d74692b98f3b936c072c32"
                    ]
                },
                {
                    "command": [
                        "induction fl; destruct vl; simpl; intros; try reflexivity.",
                        "VernacExtend",
                        "e07731988c0c1702a082b06d3ac5d0a431ba3c86"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "apply (IHfl _ _ H1).",
                        "VernacExtend",
                        "722078d374775131973c1e2059fa6a4cfaecadd6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_of_make_args",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "induction fl; destruct vl; simpl; auto.",
                        "VernacExtend",
                        "11bc3a7fcc626abd1a63a6c248cab80630f5dfc2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "check_specs_lemma",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply local_ext_rev.",
                        "VernacExtend",
                        "d32deb42db62074ea7b23f3b7e5f20844913305d"
                    ]
                },
                {
                    "command": [
                        "specialize (fun (Q0: environ -> Prop) H => local_ext Q0 _ _ H H1).",
                        "VernacExtend",
                        "19340c837dae99e3f4ae57f2b36c8cf938ec0787"
                    ]
                },
                {
                    "command": [
                        "clear H1; intros.",
                        "VernacExtend",
                        "c602c98de5ada98a8739912fe2721cdbf6a30df6"
                    ]
                },
                {
                    "command": [
                        "specialize (fun (Q0: localdef) H => H1 (locald_denote Q0) (in_map _ _ _ H)).",
                        "VernacExtend",
                        "433ae2a390e24fff48d5b8f872c20750f2bce908"
                    ]
                },
                {
                    "command": [
                        "specialize (fun (Q0: localdef) H => H1 Q0 (LocalD_sound _ _ _ _ H)).",
                        "VernacExtend",
                        "566a98814f820550dd36e84a7f92b758e362f9b3"
                    ]
                },
                {
                    "command": [
                        "assert (ASSU1: forall i v, Qtemp ! i = Some v -> locald_denote (temp i v) rho) by (intros; apply H1; firstorder).",
                        "VernacExtend",
                        "68e3fdaf60c2c12d158841c60c62a75b4ce3117f"
                    ]
                },
                {
                    "command": [
                        "assert (ASSU2: forall i t v, Qvar ! i = Some (t, v) -> locald_denote (lvar i t v) rho) by (intros; apply H1; eauto 50).",
                        "VernacExtend",
                        "d9b017d12084f3b0e1a7a67febc671a811edba7e"
                    ]
                },
                {
                    "command": [
                        "assert (ASSU3: forall gv, GV = Some gv -> locald_denote (gvars gv) rho) by (intros; apply H1; eauto 50).",
                        "VernacExtend",
                        "a8db2361125d7d0b3c8a7e019321ac049e8c0ea7"
                    ]
                },
                {
                    "command": [
                        "clear H1.",
                        "VernacExtend",
                        "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
                    ]
                },
                {
                    "command": [
                        "apply list_in_map_inv in H2.",
                        "VernacExtend",
                        "7c4e7009e3bf083d564dc2c7901e0c25b088d9a2"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [Q0' [? ?]]; subst; rename Q0' into Q0.",
                        "VernacExtend",
                        "76d242f92131800d42d8bc00ac106d7f6a078a7b"
                    ]
                },
                {
                    "command": [
                        "apply LocalD_complete in H2.",
                        "VernacExtend",
                        "9ba43d0de935659d1bf8c5fa22016cf29602e973"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [ [i [v [?H ?H]]] |[ [i [t [v [?H ?H]]]] | [gv [?H ?H]]]]; subst; unfold locald_denote; unfold_lift.",
                        "VernacExtend",
                        "7fbda4bd0d7667871bfc60cac85b54d0fdef1164"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "clear - H0 H1 UNDEF.",
                        "VernacExtend",
                        "5682a0bc88b28f1e4fa18845cc1178d5b9c219d0"
                    ]
                },
                {
                    "command": [
                        "pose proof (Forall_ptree_elements_e _ _ _ _ _ H0 H1).",
                        "VernacExtend",
                        "749b0a760da2b831520576efb9519ee56dfeb258"
                    ]
                },
                {
                    "command": [
                        "hnf in H.",
                        "VernacExtend",
                        "b998e5ae98dd847416f4f194f30407c3597ea052"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "clear - H UNDEF.",
                        "VernacExtend",
                        "4f538977b119ff2cbed6bc6f15bcd1afe3912299"
                    ]
                },
                {
                    "command": [
                        "eapply pTree_from_elements_e1; auto.",
                        "VernacExtend",
                        "b4ed004393e9aa26265a0a3567f951f0010b4dd3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in H1; inv H1.",
                        "VernacExtend",
                        "4b9ce7cf2641673e2eb32a039504270da7202a7f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct GV; [| inv H].",
                        "VernacExtend",
                        "bcd8b0e69bf7721b5c7ed4f4418911f98f40b89e"
                    ]
                },
                {
                    "command": [
                        "simpl in H; inv H.",
                        "VernacExtend",
                        "a7b98c51e9f898b881b59c18b1bc811901bf5875"
                    ]
                },
                {
                    "command": [
                        "specialize (ASSU3 _ eq_refl).",
                        "VernacExtend",
                        "c1bf8f8b5dc50f1320bcb3c6640f8a5829957603"
                    ]
                },
                {
                    "command": [
                        "hnf in ASSU3 |- *.",
                        "VernacExtend",
                        "ce9862ea95bbd3ef07abb5ac5664b86055683238"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "extensionality i.",
                        "VernacExtend",
                        "8733cdd792af6107213a34f779c8c3d7eba32943"
                    ]
                },
                {
                    "command": [
                        "rewrite ge_of_make_args.",
                        "VernacExtend",
                        "fa35271125fd78d47f6c0158f14e6b13420c364e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PROP_combine",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold PROPx, LOCALx, SEPx, local, lift1.",
                        "VernacExtend",
                        "3a1a7725e6ca8833061485c5eba54393bc23f847"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite map_app.",
                        "VernacExtend",
                        "89eca143edf6436bb079a40b9fedf852073d1711"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_right_and_app.",
                        "VernacExtend",
                        "4643e21ee69221083334c932168d04266db423d0"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_right_and_app_low.",
                        "VernacExtend",
                        "a0e88f97aba8590a1334a63dbd0f983c7c8b86f2"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; intuition.",
                        "VernacExtend",
                        "8a4224a6b11df295ba822165ed660bf644fc5d44"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_right_sepcon_app.",
                        "VernacExtend",
                        "ccdab8789b72da2f2964f4902618bed2be7467f8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PROP_LOCAL_SEP_f",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "cbv delta [PROPx LOCALx SEPx local lift lift1 liftx]; simpl.",
                        "VernacExtend",
                        "8d3d43711bbb44558c1c2ed03c5a56ce4664e2ec"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "replace (fold_right (fun (x x0 : environ -> Prop) (x1 : environ) => x x1 /\\ x0 x1) (fun _ : environ => True) (map locald_denote Q) (f rho)) with (fold_right (fun (x x0 : environ -> Prop) (x1 : environ) => x x1 /\\ x0 x1) (fun _ : environ => True) (map (fun (q : environ -> Prop) (x : environ) => q (f x)) (map locald_denote Q)) rho); [apply prop_ext; intuition | ].",
                        "VernacExtend",
                        "4463afe333f1085d5e9cbd55f1313205e237e9bc"
                    ]
                },
                {
                    "command": [
                        "induction Q; simpl; auto.",
                        "VernacExtend",
                        "f8c736b22c2984865836180b5d25fa927efb65c0"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_funspec",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split3; auto.",
                        "VernacExtend",
                        "5198a06904f9188b673c83129393f27ab50f92b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "func_ptr'_func_ptr_lifted",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "unfold func_ptr'.",
                        "VernacExtend",
                        "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite corable_andp_sepcon1 by apply corable_func_ptr.",
                        "VernacExtend",
                        "296fe768802c35bc819a7123e22ce45957b985e9"
                    ]
                },
                {
                    "command": [
                        "rewrite emp_sepcon; auto.",
                        "VernacExtend",
                        "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "call_setup1_i",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H18 := @msubst_eval_expr_eq cs Delta P Qtemp Qvar GV R' a v H0).",
                        "VernacExtend",
                        "02bd23de847d91aa02cf6ae314e4604879a95272"
                    ]
                },
                {
                    "command": [
                        "assert (H19 := local2ptree_soundness P Q R' Qtemp Qvar nil GV H).",
                        "VernacExtend",
                        "94a0d2acca366ddb95ef1292d609c723be89e641"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre; [ | eassumption].",
                        "VernacExtend",
                        "6afe842c066a35eae4bdde2587415ee7b77408f2"
                    ]
                },
                {
                    "command": [
                        "clear c Post0 H9.",
                        "VernacExtend",
                        "4e7bccd6fd70619d9584066d30128be5b9a60e96"
                    ]
                },
                {
                    "command": [
                        "Exists v.",
                        "VernacExtend",
                        "b7098c5096162831ebc8755f53fc23b138b11c8c"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; [ | apply andp_left2; auto].",
                        "VernacExtend",
                        "e154794edee5d249def0ac1f7a38fe82486acef4"
                    ]
                },
                {
                    "command": [
                        "apply andp_right.",
                        "VernacExtend",
                        "614688b80ee6a44f752e79383d4234d6d5dfcee8"
                    ]
                },
                {
                    "command": [
                        "repeat apply andp_left2.",
                        "VernacExtend",
                        "dc915a937eeed744318e782f64f62dc23d256ba0"
                    ]
                },
                {
                    "command": [
                        "intro rho; unfold SEPx, lift0.",
                        "VernacExtend",
                        "0c16508532965fb6580f2a5247519324623a7f3f"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "rewrite H19.",
                        "VernacExtend",
                        "1680cdbaca48312bd8c17a9f25a2847458523bd0"
                    ]
                },
                {
                    "command": [
                        "simpl app.",
                        "VernacExtend",
                        "5a39ba3195c1bcf4acdefe189883db7ad912f680"
                    ]
                },
                {
                    "command": [
                        "apply H18.",
                        "VernacExtend",
                        "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
                    ]
                },
                {
                    "command": [
                        "unfold PROPx, LOCALx.",
                        "VernacExtend",
                        "11d29d6bd68c7a87d70cf0942bbb9bbf72f5ce23"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !andp_assoc, later_andp; apply andp_derives; [apply now_later|].",
                        "VernacExtend",
                        "3c694c179376b715ccc1c9cdda1a04f8372eecd5"
                    ]
                },
                {
                    "command": [
                        "unfold SEPx; simpl; auto.",
                        "VernacExtend",
                        "b764618924f4ed1e85fd3b33863a21fd5fb838bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "call_setup1_i2",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "can_assume_funcptr2",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "unfold can_assume_funcptr; intros.",
                        "VernacExtend",
                        "319b1cf7a9a3f998f12deaddd21cf08d12cff0be"
                    ]
                },
                {
                    "command": [
                        "eapply (semax_fun_id id); try eassumption.",
                        "VernacExtend",
                        "e028c6ef0b145dc572e336e2701eb8c510cc3ce3"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre; try apply H3.",
                        "VernacExtend",
                        "df09ffeef9bb4cc9e2fa392da86f6d9cedc42fca"
                    ]
                },
                {
                    "command": [
                        "clear H3.",
                        "VernacExtend",
                        "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; [ | apply andp_left2; apply andp_left1; auto].",
                        "VernacExtend",
                        "c78535298f1def81e9eaf1f307ba572dde3d78d9"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "intro rho.",
                        "VernacExtend",
                        "340a6646b01296f706bfd718a4f2fa78cb01cc3b"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "unfold local, lift0, lift1.",
                        "VernacExtend",
                        "bf0d339a9e3ba543e83ca048a8918c996ed05956"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "Exists (eval_var id (type_of_funspec fs) rho).",
                        "VernacExtend",
                        "aa28a59e335eefd9dcd667662d6562c1f3f1c17c"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; auto.",
                        "VernacExtend",
                        "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
                    ]
                },
                {
                    "command": [
                        "apply prop_right.",
                        "VernacExtend",
                        "951daa52f148695942d4aefc563d5e92d8ec02ff"
                    ]
                },
                {
                    "command": [
                        "subst ty.",
                        "VernacExtend",
                        "e208fabe5f185c48b1af2afc361f1ceb3a2eba51"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "call_setup2_i",
            "line_nb": 447,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_gvars_sub",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (proj1 (Forall_forall _ G') H).",
                        "VernacExtend",
                        "0d75185251c1a344081b2a49a252698405e933d8"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "revert H1; induction G'; simpl; intros; constructor.",
                        "VernacExtend",
                        "ad9263c98951d2ca6e283418a2077e6472f92b6c"
                    ]
                },
                {
                    "command": [
                        "assert (In a G).",
                        "VernacExtend",
                        "9169a04bf8211432aa0385fb3762f4bc2ff6f28b"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "clear - H0 H.",
                        "VernacExtend",
                        "4f9ffbeb6c312a6dbb8f1e9b57b1c786238f3368"
                    ]
                },
                {
                    "command": [
                        "induction G; destruct H.",
                        "VernacExtend",
                        "3a1b9e11625d0e307aa235d1da0d1a5e4fa4bb4a"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply IHG'.",
                        "VernacExtend",
                        "c2fd69dde6dc007de1bacbe92149d1702b5f87fd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "right; auto.",
                        "VernacExtend",
                        "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_exprlist_len",
            "line_nb": 608,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "go_lowerx.",
                        "VernacExtend",
                        "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
                    ]
                },
                {
                    "command": [
                        "unfold tc_exprlist.",
                        "VernacExtend",
                        "eab8820ce1cbeae58e5526e73cd2179ca48452bb"
                    ]
                },
                {
                    "command": [
                        "revert bl; induction (argtypes argsig); destruct bl; simpl; try apply @FF_left.",
                        "VernacExtend",
                        "7486a0697c6de9c388b7903c391629ec3a32560d"
                    ]
                },
                {
                    "command": [
                        "apply prop_right; auto.",
                        "VernacExtend",
                        "95e18efadb5767545f0255f518eaa92b08876b58"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite denote_tc_assert_andp.",
                        "VernacExtend",
                        "23fba381d1e17235ac434d11bfff793e70e0fcfe"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [ apply IHl | ].",
                        "VernacExtend",
                        "a87c660633296dff19165ef80342edc0ee5a800a"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "match_funcptr'_funcptr",
            "line_nb": 869,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold func_ptr'.",
                        "VernacExtend",
                        "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
                    ]
                },
                {
                    "command": [
                        "rewrite corable_andp_sepcon1 by apply corable_func_ptr.",
                        "VernacExtend",
                        "296fe768802c35bc819a7123e22ce45957b985e9"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1; auto.",
                        "VernacExtend",
                        "fbc9186131c9851d08ff7aadf76f5fc5ca898763"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nomatch_funcptr'_funcptr",
            "line_nb": 875,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (corable_sepcon_TT _ (corable_func_ptr fs v)).",
                        "VernacExtend",
                        "ccb223be706f80f08d97a536728a436d11f9fc38"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_post_exists",
            "line_nb": 884,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold eq_no_post.",
                        "VernacExtend",
                        "589d4e759ed7cd1a650c6c39ff2c00f88b356b71"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "apply exp_right with v.",
                        "VernacExtend",
                        "e741d582d9c706f07ee63012fffe0de5463c576a"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply prop_derives.",
                        "VernacExtend",
                        "3ff0669364275651d7ffd02bff091ff41292645e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply exp_left; intro.",
                        "VernacExtend",
                        "5fab958453fd51f6d35801cee45d6839e0f97460"
                    ]
                },
                {
                    "command": [
                        "unfold PROPx.",
                        "VernacExtend",
                        "593deff54c68c9f1e69c515e783782e0f285a65f"
                    ]
                },
                {
                    "command": [
                        "simpl fold_right.",
                        "VernacExtend",
                        "65548c8477adba0f9965885c81b5fa89677f589f"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_post_exists0",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "apply exp_right with tt.",
                        "VernacExtend",
                        "4bd49c581a1c0a518b0bbccff6ab342d2ec37568"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply exp_left; auto.",
                        "VernacExtend",
                        "051006a84529610a35e0fdfe7e6313330b46ba4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}