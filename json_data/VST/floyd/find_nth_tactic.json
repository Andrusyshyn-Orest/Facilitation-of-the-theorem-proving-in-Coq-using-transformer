{
    "filename": "floyd/find_nth_tactic.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import Coq.omega.Omega.",
            "VernacRequire",
            "c22118512de22ca1f471830b29716d6337180b58"
        ],
        [
            "Fixpoint delete_nth {A} (n: nat) (xs: list A) {struct n} : list A := match n, xs with | O, y::ys => ys | S n', y::ys =>y :: delete_nth n' ys | _ , _ => nil end.",
            "VernacFixpoint",
            "7730febf3045425c5df02072a151f0291a6e45b2"
        ],
        [
            "Inductive find_nth_preds_rec {A: Type} (pred: A -> Prop): nat -> list A -> option (nat * A) -> Prop := | find_nth_preds_rec_cons_head: forall n R0 R, pred R0 -> find_nth_preds_rec pred n (R0 :: R) (Some (n, R0)) | find_nth_preds_rec_cons_tail: forall n R0 R R_res, find_nth_preds_rec pred (S n) R R_res -> find_nth_preds_rec pred n (R0 :: R) R_res | find_nth_preds_rec_nil: forall n, find_nth_preds_rec pred n nil None.",
            "VernacInductive",
            "b528510b493158d6437db0cdde5cdea3c58443ef"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Inductive find_nth_preds {A: Type} (pred: A -> Prop): list A -> option (nat * A) -> Prop := | find_nth_preds_constr: forall R R_res, find_nth_preds_rec pred 0 R R_res -> find_nth_preds pred R R_res.",
            "VernacInductive",
            "428bbb715b41cbd4cfbf06f38b9f8e6422474749"
        ],
        [
            "Scheme Minimality for find_nth_preds Sort Prop.",
            "VernacScheme",
            "fc11856bd26e0a1f1ab5e785b2f0a9e5ac279e8c"
        ],
        [
            "Local Set Elimination Schemes.",
            "VernacSetOption",
            "a6f81d57166133786f903f938950a2a5b598a282"
        ],
        [
            "Lemma find_nth_preds_Some: forall {A: Type} (pred: A -> Prop) R n R0, find_nth_preds pred R (Some (n, R0)) -> nth_error R n = Some R0 /\\ pred R0.",
            "VernacStartTheoremProof",
            "b784ea5c23a77f24b1a84f18c20309704e85c273"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "replace n with (n - 0)%nat by omega.",
            "VernacExtend",
            "a3af7dda9cdfcce850a63dfde3f37a856887b0c4"
        ],
        [
            "assert ((n >= 0)%nat /\\ nth_error R (n - 0) = Some R0 /\\ pred R0); [| tauto].",
            "VernacExtend",
            "28fd6d325dc75d4da9a5bfaf41705cee56f38284"
        ],
        [
            "revert H0; generalize 0%nat as m; intros.",
            "VernacExtend",
            "6f12911637681240e40ad91e55d1232e40164b5c"
        ],
        [
            "remember (Some (n, R0)) as R_res eqn:?H in H0.",
            "VernacExtend",
            "a1a3f0332cd65439c21cc513c26bda9384408535"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "replace (n - n)%nat with 0%nat by omega.",
            "VernacExtend",
            "2e3cfc9ecea55295264abeb5e4a0170a1adc02d2"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply IHfind_nth_preds_rec in H.",
            "VernacExtend",
            "ee747bd865ab7f220dc2904e0fd2d6857fe205b8"
        ],
        [
            "destruct H as [? [? ?]].",
            "VernacExtend",
            "7b80d34d0c991fb27b92313d17ea8675f1173807"
        ],
        [
            "replace (n - n0)%nat with (S (n - S n0)) by omega.",
            "VernacExtend",
            "7a5d14c96ddf4b24e46d33ac80d260a3aaca1ad9"
        ],
        [
            "split; [omega |].",
            "VernacExtend",
            "2c84913a3ba9cd7f044dc01c555be5c3c2d9150e"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_nth_preds_rec_S: forall {A: Type} (pred: A -> Prop) z R n Rn, find_nth_preds_rec pred z R (Some (n, Rn)) -> find_nth_preds_rec pred (S z) R (Some (S n, Rn)).",
            "VernacStartTheoremProof",
            "16b6fc245390217a4e4fd95f93cbff1238539840"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "remember (Some (n, Rn)) as Res eqn:?H.",
            "VernacExtend",
            "ef314a52579b92696e55c1e0fce1a3c37372fd85"
        ],
        [
            "revert n Rn H0; induction H; intros.",
            "VernacExtend",
            "bf8b9aa0296d391ccb96424617342f95bd280549"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H0; subst; clear H0.",
            "VernacExtend",
            "67633bcad1f08913253223fb1d000a0f96a47e48"
        ],
        [
            "eapply find_nth_preds_rec_cons_head; eauto.",
            "VernacExtend",
            "eaf1d20576c384c7430987a3c7edfb9207aa8fcd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst R_res.",
            "VernacExtend",
            "a27692510418165a5f4831b500cadb928eba4e52"
        ],
        [
            "apply find_nth_preds_rec_cons_tail; auto.",
            "VernacExtend",
            "df2e0b5c496100f3caeb3c401f8dbcd5cee3e3d8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_nth_preds_rec_delete_nth: forall {A: Type} (pred: A -> Prop) z m R Rn, (exists n, find_nth_preds_rec pred z (delete_nth m R) (Some (n, Rn))) -> (exists n, find_nth_preds_rec pred z R (Some (n, Rn))).",
            "VernacStartTheoremProof",
            "7dc4698fc5e22a045cc8efa37b85a99090d8edf5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert z R H; induction m; intros; destruct R; auto.",
            "VernacExtend",
            "d7c70480a4b3ae03efa050db0a6f6f19912b200e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct H as [n ?].",
            "VernacExtend",
            "5d725d843cd736117c49fd6647a367a0aadfc6d0"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "eapply find_nth_preds_rec_cons_tail.",
            "VernacExtend",
            "43a840780139bb103a87c2fe39ea45d528755d19"
        ],
        [
            "apply find_nth_preds_rec_S.",
            "VernacExtend",
            "0b436ccc3fec4f7593efc1cdcd9e2596d3c5ccbe"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct H as [n ?].",
            "VernacExtend",
            "5d725d843cd736117c49fd6647a367a0aadfc6d0"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eexists; apply find_nth_preds_rec_cons_head; auto.",
            "VernacExtend",
            "6e8887b8ec0af15a394da6fa28b86a343031a7fa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (IHm (S z) _ (ex_intro _ _ H4)).",
            "VernacExtend",
            "85689add7816e20829bb9b1592ac7b08a223ef67"
        ],
        [
            "clear n H4; destruct IHm as [n ?].",
            "VernacExtend",
            "c2c932a7b0ded9a6ebd645ff3b54ffdf87a7017c"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "apply find_nth_preds_rec_cons_tail; auto.",
            "VernacExtend",
            "df2e0b5c496100f3caeb3c401f8dbcd5cee3e3d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_nth_preds_delete_nth: forall {A: Type} (pred: A -> Prop) m R Rn, (exists n, find_nth_preds pred (delete_nth m R) (Some (n, Rn))) -> (exists n, find_nth_preds pred R (Some (n, Rn))).",
            "VernacStartTheoremProof",
            "d8b4b41f5b456b37c544ec58dc62195cd387e741"
        ],
        [
            "intros ? ? ? ? ? [n ?].",
            "VernacExtend",
            "f88df496d728588077acfeeabadf7606738131be"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "pose proof (ex_intro _ n H0): exists n, find_nth_preds_rec pred 0 (delete_nth m R) (Some (n, Rn)).",
            "VernacExtend",
            "f8b756e39f173d71ce2450a640065e1a72e9ad42"
        ],
        [
            "apply find_nth_preds_rec_delete_nth in H.",
            "VernacExtend",
            "cf10fcf414295e9a966315db3681c59842f72457"
        ],
        [
            "clear n H0.",
            "VernacExtend",
            "7ac81d23df8b70bf3f087e218d9b0f2f50a6cdce"
        ],
        [
            "destruct H as [n ?].",
            "VernacExtend",
            "5d725d843cd736117c49fd6647a367a0aadfc6d0"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "apply find_nth_preds_constr; auto.",
            "VernacExtend",
            "0c6fdf2e82b58ffbea6d6c002da1592423a388e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac find_nth_rec tac := first [ simple eapply find_nth_preds_rec_cons_head; tac | simple eapply find_nth_preds_rec_cons_tail; find_nth_rec tac | simple eapply find_nth_preds_rec_nil].",
            "VernacExtend",
            "7a0d91c8d195d7c7646efbe507db35c2f055e2dc"
        ],
        [
            "Ltac find_nth tac := eapply find_nth_preds_constr; find_nth_rec tac.",
            "VernacExtend",
            "3646d3b48eca4217ba5fe1310d039f193fd2a366"
        ]
    ],
    "proofs": [
        {
            "name": "find_nth_preds_Some",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; clear H.",
                        "VernacExtend",
                        "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
                    ]
                },
                {
                    "command": [
                        "replace n with (n - 0)%nat by omega.",
                        "VernacExtend",
                        "a3af7dda9cdfcce850a63dfde3f37a856887b0c4"
                    ]
                },
                {
                    "command": [
                        "assert ((n >= 0)%nat /\\ nth_error R (n - 0) = Some R0 /\\ pred R0); [| tauto].",
                        "VernacExtend",
                        "28fd6d325dc75d4da9a5bfaf41705cee56f38284"
                    ]
                },
                {
                    "command": [
                        "revert H0; generalize 0%nat as m; intros.",
                        "VernacExtend",
                        "6f12911637681240e40ad91e55d1232e40164b5c"
                    ]
                },
                {
                    "command": [
                        "remember (Some (n, R0)) as R_res eqn:?H in H0.",
                        "VernacExtend",
                        "a1a3f0332cd65439c21cc513c26bda9384408535"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; clear H.",
                        "VernacExtend",
                        "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
                    ]
                },
                {
                    "command": [
                        "replace (n - n)%nat with 0%nat by omega.",
                        "VernacExtend",
                        "2e3cfc9ecea55295264abeb5e4a0170a1adc02d2"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply IHfind_nth_preds_rec in H.",
                        "VernacExtend",
                        "ee747bd865ab7f220dc2904e0fd2d6857fe205b8"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? [? ?]].",
                        "VernacExtend",
                        "7b80d34d0c991fb27b92313d17ea8675f1173807"
                    ]
                },
                {
                    "command": [
                        "replace (n - n0)%nat with (S (n - S n0)) by omega.",
                        "VernacExtend",
                        "7a5d14c96ddf4b24e46d33ac80d260a3aaca1ad9"
                    ]
                },
                {
                    "command": [
                        "split; [omega |].",
                        "VernacExtend",
                        "2c84913a3ba9cd7f044dc01c555be5c3c2d9150e"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_nth_preds_rec_S",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "remember (Some (n, Rn)) as Res eqn:?H.",
                        "VernacExtend",
                        "ef314a52579b92696e55c1e0fce1a3c37372fd85"
                    ]
                },
                {
                    "command": [
                        "revert n Rn H0; induction H; intros.",
                        "VernacExtend",
                        "bf8b9aa0296d391ccb96424617342f95bd280549"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst; clear H0.",
                        "VernacExtend",
                        "67633bcad1f08913253223fb1d000a0f96a47e48"
                    ]
                },
                {
                    "command": [
                        "eapply find_nth_preds_rec_cons_head; eauto.",
                        "VernacExtend",
                        "eaf1d20576c384c7430987a3c7edfb9207aa8fcd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst R_res.",
                        "VernacExtend",
                        "a27692510418165a5f4831b500cadb928eba4e52"
                    ]
                },
                {
                    "command": [
                        "apply find_nth_preds_rec_cons_tail; auto.",
                        "VernacExtend",
                        "df2e0b5c496100f3caeb3c401f8dbcd5cee3e3d8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_nth_preds_delete_nth",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? ? ? [n ?].",
                        "VernacExtend",
                        "f88df496d728588077acfeeabadf7606738131be"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; clear H.",
                        "VernacExtend",
                        "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
                    ]
                },
                {
                    "command": [
                        "pose proof (ex_intro _ n H0): exists n, find_nth_preds_rec pred 0 (delete_nth m R) (Some (n, Rn)).",
                        "VernacExtend",
                        "f8b756e39f173d71ce2450a640065e1a72e9ad42"
                    ]
                },
                {
                    "command": [
                        "apply find_nth_preds_rec_delete_nth in H.",
                        "VernacExtend",
                        "cf10fcf414295e9a966315db3681c59842f72457"
                    ]
                },
                {
                    "command": [
                        "clear n H0.",
                        "VernacExtend",
                        "7ac81d23df8b70bf3f087e218d9b0f2f50a6cdce"
                    ]
                },
                {
                    "command": [
                        "destruct H as [n ?].",
                        "VernacExtend",
                        "5d725d843cd736117c49fd6647a367a0aadfc6d0"
                    ]
                },
                {
                    "command": [
                        "exists n.",
                        "VernacExtend",
                        "a97204a252e0d9b7444ffed9b38570a756391511"
                    ]
                },
                {
                    "command": [
                        "apply find_nth_preds_constr; auto.",
                        "VernacExtend",
                        "0c6fdf2e82b58ffbea6d6c002da1592423a388e2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}