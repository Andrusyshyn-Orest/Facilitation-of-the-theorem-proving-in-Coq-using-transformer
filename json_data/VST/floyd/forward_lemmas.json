{
    "filename": "floyd/forward_lemmas.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.base2.",
            "VernacRequire",
            "c9732b06b9c2316526989f551596fbf382fa6641"
        ],
        [
            "Require Import VST.floyd.client_lemmas.",
            "VernacRequire",
            "449c8140a2f7afa12f07d13833b2a4f672db98f1"
        ],
        [
            "Require Import VST.floyd.closed_lemmas.",
            "VernacRequire",
            "bdf37b0c22e35685c35e40eead36bd536eafda98"
        ],
        [
            "Import Cop.",
            "VernacImport",
            "866b3177cf263601a61546355b941920e6b447ef"
        ],
        [
            "Local Open Scope logic.",
            "VernacOpenCloseScope",
            "5937723d189e5aa98ad78e1018bed51ea2c1b0cd"
        ],
        [
            "Lemma semax_while_peel: forall {CS: compspecs} {Espec: OracleKind} Inv Delta P expr body R, @semax CS Espec Delta P (Ssequence (Sifthenelse expr Sskip Sbreak) body) (loop1_ret_assert Inv R) -> @semax CS Espec Delta Inv (Swhile expr body) R -> @semax CS Espec Delta P (Swhile expr body) R.",
            "VernacStartTheoremProof",
            "5884cd967885baa1d76405812b316d49084e8c85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply semax_loop_unroll1 with (P' := Inv) (Q := Inv); auto.",
            "VernacExtend",
            "fa24b770d29f66128508f11f313da382e81279d2"
        ],
        [
            "eapply semax_pre; [ | apply sequential; apply semax_skip].",
            "VernacExtend",
            "9afdf234c535ca4ac8b42306e562dbd2f7e29564"
        ],
        [
            "destruct R; apply ENTAIL_refl.",
            "VernacExtend",
            "a5ee990e5cb9089d4c9b6de9c5b74aec1f466368"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_func_cons_ext_vacuous: forall {Espec: OracleKind} (V : varspecs) (G : funspecs) (C : compspecs) (fs : list (ident * Clight.fundef)) (id : ident) (ef : external_function) (argsig : typelist) (retsig : type) (G' : funspecs) cc, (id_in_list id (map fst fs)) = false -> ef_sig ef = {| sig_args := typlist_of_typelist (type_of_params (arglist 1 argsig)); sig_res := opttyp_of_type retsig; sig_cc := cc_of_fundef (External ef argsig retsig cc) |} -> semax_func V G fs G' -> semax_func V G ((id, External ef argsig retsig cc) :: fs) ((id, vacuous_funspec (External ef argsig retsig cc)) :: G').",
            "VernacStartTheoremProof",
            "be57228b82f78c11910db19fce45aed918a113e1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_func_cons_ext; try reflexivity; auto.",
            "VernacExtend",
            "9210529fa0e5256592ff78f6980b130e434b1d29"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "forget 1%positive as i.",
            "VernacExtend",
            "1e4f545a2d4a107f224fc4857be8a904792a5e0c"
        ],
        [
            "revert i; induction argsig; simpl; intros; auto.",
            "VernacExtend",
            "26f84504e3dd4b9a002b9d4854319412f4329269"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "forget 1%positive as i.",
            "VernacExtend",
            "1e4f545a2d4a107f224fc4857be8a904792a5e0c"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "revert i; induction argsig; simpl; intros; auto.",
            "VernacExtend",
            "26f84504e3dd4b9a002b9d4854319412f4329269"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply andp_left1, FF_left.",
            "VernacExtend",
            "e7eb0eaa1d595e0d01574bbfe56b2874fdc87573"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply semax_external_FF.",
            "VernacExtend",
            "4befc722e129b211d4a3c8aa535080716e07983c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_eq_false_e: forall i j, Int.eq i j = false -> i <> j.",
            "VernacStartTheoremProof",
            "5d0289098f15f42f189844870c578ef56def8bd3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "rewrite Int.eq_true in H; inv H.",
            "VernacExtend",
            "d7dd74cf7b7d42d24a3f6ff01cd59edabf8f7ec7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_inj_signed: forall i j, repable_signed i -> repable_signed j -> Int.repr i = Int.repr j -> i=j.",
            "VernacStartTheoremProof",
            "f3406b3b945f0c33cf4b3e4f2993e390dd698318"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (Int.signed_repr i) by rep_omega.",
            "VernacExtend",
            "fa5c541cffa3b8ec0ffbc2c5e192be21ccd415d3"
        ],
        [
            "rewrite <- (Int.signed_repr j) by rep_omega.",
            "VernacExtend",
            "b22e5d4f8184790075d0035506f15f53539c2caa"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_inj_unsigned: forall i j, 0 <= i <= Int.max_unsigned -> 0 <= j <= Int.max_unsigned -> Int.repr i = Int.repr j -> i=j.",
            "VernacStartTheoremProof",
            "3b609e0145b5ac3cd9de19fdc93e69c4405e3d1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (Int.unsigned_repr i) by rep_omega.",
            "VernacExtend",
            "3053b946b2110dbc0d22a2d8b824329e7837192c"
        ],
        [
            "rewrite <- (Int.unsigned_repr j) by rep_omega.",
            "VernacExtend",
            "1d30be82b88b85adb3ba42906be74b30e603588b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_inj_signed': forall i j, repable_signed i -> repable_signed j -> Int.repr i <> Int.repr j -> i<>j.",
            "VernacStartTheoremProof",
            "d9de13007673b5ef35be746eb0854c8315810dba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_inj_unsigned': forall i j, 0 <= i <= Int.max_unsigned -> 0 <= j <= Int.max_unsigned -> Int.repr i <> Int.repr j -> i<>j.",
            "VernacStartTheoremProof",
            "3ee6bab5ecb866bc2a48962cdbe3cf5a3841f78f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_ifthenelse_PQR' : forall Espec {cs: compspecs} (v: val) Delta P Q R (b: expr) c d Post, bool_type (typeof b) = true -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- (tc_expr Delta (Eunop Cop.Onotbool b tint)) -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- local (`(eq v) (eval_expr b)) -> @semax cs Espec Delta (PROPx (typed_true (typeof b) v :: P) (LOCALx Q (SEPx R))) c Post -> @semax cs Espec Delta (PROPx (typed_false (typeof b) v :: P) (LOCALx Q (SEPx R))) d Post -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R))) (Sifthenelse b c d) Post.",
            "VernacStartTheoremProof",
            "8d67980efbb8768d91fea9cb9829ee28ca53e319"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_pre; [ | apply semax_ifthenelse]; auto.",
            "VernacExtend",
            "f549dc78b7dd963113c6fdc6f7d664c965c63843"
        ],
        [
            "instantiate (1:=(local (`(eq v) (eval_expr b)) && PROPx P (LOCALx Q (SEPx R)))).",
            "VernacExtend",
            "1c073f3fb61a9cfa3d317afb72a188b290739e13"
        ],
        [
            "apply andp_right; try assumption.",
            "VernacExtend",
            "ff4a39fb70b73203833085c01231d6fe62469571"
        ],
        [
            "apply andp_right; try assumption.",
            "VernacExtend",
            "ff4a39fb70b73203833085c01231d6fe62469571"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "eapply semax_pre; [ | eassumption].",
            "VernacExtend",
            "6afe842c066a35eae4bdde2587415ee7b77408f2"
        ],
        [
            "rewrite <- insert_prop.",
            "VernacExtend",
            "a5e3bd3035e08db302132008fcbecae7056b1e27"
        ],
        [
            "forget ( PROPx P (LOCALx Q (SEPx R))) as PQR.",
            "VernacExtend",
            "942720fdb4c7c6f7368202ab019f34628c2312a4"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "subst; apply prop_right; repeat split; auto.",
            "VernacExtend",
            "c0ad863312486c45c852cfb34dc6da1ead1302c4"
        ],
        [
            "eapply semax_pre; [ | eassumption].",
            "VernacExtend",
            "6afe842c066a35eae4bdde2587415ee7b77408f2"
        ],
        [
            "rewrite <- insert_prop.",
            "VernacExtend",
            "a5e3bd3035e08db302132008fcbecae7056b1e27"
        ],
        [
            "forget ( PROPx P (LOCALx Q (SEPx R))) as PQR.",
            "VernacExtend",
            "942720fdb4c7c6f7368202ab019f34628c2312a4"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "subst; apply prop_right; repeat split; auto.",
            "VernacExtend",
            "c0ad863312486c45c852cfb34dc6da1ead1302c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition logical_and_result v1 t1 v2 t2 := match (strict_bool_val t1 v1) with | Some b1 => if b1 then match (strict_bool_val t2 v2) with | Some b2 => if b2 then Vint Int.one else Vint Int.zero | None => Vundef end else Vint Int.zero | None => Vundef end.",
            "VernacDefinition",
            "c714bda1c63895e1b31ca6470097b8f5f07994e8"
        ],
        [
            "Definition logical_or_result v1 t1 v2 t2 := match (strict_bool_val t1 v1) with | Some b1 => if b1 then Vint Int.one else match (strict_bool_val t2 v2) with | Some b2 => if b2 then Vint Int.one else Vint Int.zero | None => Vundef end | None => Vundef end.",
            "VernacDefinition",
            "57acf2e55cca496cb14b6a235f4dfd216c8b98d7"
        ],
        [
            "Definition logical_or tid e1 e2 := (Sifthenelse e1 (Sset tid (Econst_int (Int.repr 1) tint)) (Ssequence (Sset tid (Ecast e2 tbool)) (Sset tid (Ecast (Etempvar tid tint ) tint)))).",
            "VernacDefinition",
            "731d98f1e2bfc3e56af85b879475c014ba0763db"
        ],
        [
            "Definition logical_and tid e1 e2 := (Sifthenelse e1 (Ssequence (Sset tid (Ecast e2 tbool)) (Sset tid (Ecast (Etempvar tid tint ) tint))) (Sset tid (Econst_int (Int.repr 0) tint))).",
            "VernacDefinition",
            "f50ffb8e8f9484991f4115d81a4d5d18dad90727"
        ],
        [
            "Lemma semax_pre_flipped : forall (P' : environ -> mpred) (Espec : OracleKind) {cs: compspecs} (Delta : tycontext) (P1 : list Prop) (P2 : list localdef) (P3 : list mpred) (c : statement) (R : ret_assert), semax Delta P' c R -> ENTAIL Delta, PROPx P1 (LOCALx P2 (SEPx P3)) |-- P' -> semax Delta (PROPx P1 (LOCALx P2 (SEPx P3))) c R.",
            "VernacStartTheoremProof",
            "49e9094152a9ff45c2f98999660250ad8939136b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_pre.",
            "VernacExtend",
            "9363f9e9939113ca23d79fd509fce1f1a57c9852"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_while : forall Espec {cs: compspecs} Delta Q test body (R: ret_assert), bool_type (typeof test) = true -> (local (tc_environ Delta) && Q |-- (tc_expr Delta (Eunop Cop.Onotbool test tint))) -> (local (tc_environ Delta) && local (lift1 (typed_false (typeof test)) (eval_expr test)) && Q |-- RA_normal R) -> @semax cs Espec Delta (local (`(typed_true (typeof test)) (eval_expr test)) && Q) body (loop1_ret_assert Q R) -> @semax cs Espec Delta Q (Swhile test body) R.",
            "VernacStartTheoremProof",
            "1eff3670ae35f86cdfb5dff544ef4715e1bd26f9"
        ],
        [
            "intros ? ? ? ? ? ? ? BT TC Post H.",
            "VernacExtend",
            "ed2345500d2d2b522e0f2b644f6f8421006bb9e3"
        ],
        [
            "unfold Swhile.",
            "VernacExtend",
            "9d9125cb8505420bb572cf5255d7ec411a7ee9dc"
        ],
        [
            "apply (@semax_loop cs Espec Delta Q Q).",
            "VernacExtend",
            "eee07f24cd4fda7171ff95484209b8f76aaa3256"
        ],
        [
            "2:{",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "eapply semax_post_flipped.",
            "VernacExtend",
            "ac9c9abbd32853aa5e0977aeb2f3a973b425de9c"
        ],
        [
            "apply semax_skip.",
            "VernacExtend",
            "ac9eaa31c93d47d18aa24dfb2e420bab778316a1"
        ],
        [
            "all: try (intros; apply andp_left2; destruct R; apply derives_refl).",
            "VernacExtend",
            "0d36bc3824b03ea1775cc5852bea3d8ec0e9df35"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "destruct R; simpl.",
            "VernacExtend",
            "0112b2efe22684ad2e8217458bb12c3deec6fdbe"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "destruct R; simpl.",
            "VernacExtend",
            "0112b2efe22684ad2e8217458bb12c3deec6fdbe"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply semax_seq with (local (`(typed_true (typeof test)) (eval_expr test)) && Q).",
            "VernacExtend",
            "4bad0875fd6cd74f3e0651fc15a5ba4976188729"
        ],
        [
            "apply semax_pre_simple with ( (tc_expr Delta (Eunop Cop.Onotbool test tint)) && Q).",
            "VernacExtend",
            "59bcfa78eed20f1d1e46e1b8d02dd052bf672924"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "apply TC.",
            "VernacExtend",
            "e9cbc58d00c42bda3c336cd40ff9d01146fa37d2"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "intro; auto.",
            "VernacExtend",
            "c01170981862e9d8608d651ab75e833f7953118c"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "apply semax_ifthenelse; auto.",
            "VernacExtend",
            "38afdf73fbe9650a242e47879c1b65fe3e615c21"
        ],
        [
            "eapply semax_post_flipped.",
            "VernacExtend",
            "ac9c9abbd32853aa5e0977aeb2f3a973b425de9c"
        ],
        [
            "apply semax_skip.",
            "VernacExtend",
            "ac9eaa31c93d47d18aa24dfb2e420bab778316a1"
        ],
        [
            "destruct R as [?R ?R ?R ?R].",
            "VernacExtend",
            "59e0b7b58c221dd38a058a646d423ac612f3045b"
        ],
        [
            "simpl RA_normal in *.",
            "VernacExtend",
            "abdb4dfbb5062a228298fa2a16cf4388a53b47cb"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "intro rho; simpl.",
            "VernacExtend",
            "cf3769e840606a35db0143e100fbfe31eb01459b"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "all: try (intro rho; simpl; normalize).",
            "VernacExtend",
            "c337f7870bda081e6cee593a52f909ded0c8ec6e"
        ],
        [
            "eapply semax_pre_simple; [ | apply semax_break].",
            "VernacExtend",
            "5753d2972f2bf55bc426a7282ccf07551a155510"
        ],
        [
            "rewrite (andp_comm Q).",
            "VernacExtend",
            "502491fd5405f8bbf70ef8029306f83ce5fc108f"
        ],
        [
            "rewrite <- andp_assoc.",
            "VernacExtend",
            "af620aa2f90527d6460b0d98a5bf2930b4fc0390"
        ],
        [
            "eapply derives_trans; try apply Post.",
            "VernacExtend",
            "e8378878664f2f630849c3de30e6e32f73cc4fd5"
        ],
        [
            "destruct R; simpl; auto.",
            "VernacExtend",
            "028f93a98cf8b18f8535efa98f89cc97004d5837"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_while_3g1 : forall Espec {cs: compspecs} {A} (v: A -> val) Delta P Q R test body Post, bool_type (typeof test) = true -> (forall a, ENTAIL Delta, PROPx (P a) (LOCALx (Q a) (SEPx (R a))) |-- (tc_expr Delta (Eunop Cop.Onotbool test tint))) -> (forall a, ENTAIL Delta, PROPx (P a) (LOCALx (Q a) (SEPx (R a))) |-- local (`(eq (v a)) (eval_expr test))) -> (forall a, @semax cs Espec Delta (PROPx (typed_true (typeof test) (v a) :: (P a)) (LOCALx (Q a) (SEPx (R a)))) body (loop1_ret_assert (EX a:A, PROPx (P a) (LOCALx (Q a) (SEPx (R a)))) (overridePost (EX a:A, PROPx (typed_false (typeof test) (v a) :: P a) (LOCALx (Q a) (SEPx (R a)))) Post))) -> @semax cs Espec Delta (EX a:A, PROPx (P a) (LOCALx (Q a) (SEPx (R a)))) (Swhile test body) (overridePost (EX a:A, PROPx (typed_false (typeof test) (v a) :: P a) (LOCALx (Q a) (SEPx (R a)))) Post).",
            "VernacStartTheoremProof",
            "394eda5860373feff0c8279b5f46c481cabf427a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply semax_while; auto.",
            "VernacExtend",
            "a8642103f401260832b70a93ddccc8f6d1f5ba7c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite exp_andp2.",
            "VernacExtend",
            "dac66bf2703286bf41a6720dfb493c1f2c96d772"
        ],
        [
            "apply exp_left; intro a.",
            "VernacExtend",
            "6a8e9da0f1c2486653cd834a8d5ac7be3672aa3c"
        ],
        [
            "eapply derives_trans; [ | apply H0].",
            "VernacExtend",
            "95b2ae50d2da4f3a212719120151fd743e601dab"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "repeat rewrite exp_andp2.",
            "VernacExtend",
            "906f4df5ab0adb9d8a1a1c4a7cd95c79da55812b"
        ],
        [
            "apply exp_left; intro a.",
            "VernacExtend",
            "6a8e9da0f1c2486653cd834a8d5ac7be3672aa3c"
        ],
        [
            "rewrite overridePost_normal'.",
            "VernacExtend",
            "9cbccf5e6c9609f2042c3c50d7e63d5a5f827570"
        ],
        [
            "apply exp_right with a.",
            "VernacExtend",
            "7581b14b7525d6a808884d954f224f290fe85295"
        ],
        [
            "eapply derives_trans.",
            "VernacExtend",
            "74bf196b92978065d64297654462f01dbd4ed9a4"
        ],
        [
            "apply andp_right; [ | apply derives_refl].",
            "VernacExtend",
            "ed45463b3b6594f6bb33a9a3408cc2729b106434"
        ],
        [
            "eapply derives_trans; [ | apply (H1 a)].",
            "VernacExtend",
            "52e9f15e1554a9a259a5c4aa6eb892b407038abe"
        ],
        [
            "rewrite (andp_comm (local _)).",
            "VernacExtend",
            "c4e312d358601838474c6744495f5721ddf3543d"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "go_lowerx; normalize.",
            "VernacExtend",
            "c340a16180a842ffe354c7b6843b8a2507eb7be7"
        ],
        [
            "repeat apply andp_right; auto.",
            "VernacExtend",
            "2b28c00b665e974aabbf05a259991bbe0a735d0b"
        ],
        [
            "apply prop_right; split; auto.",
            "VernacExtend",
            "ad61b7b2df9881bcf9cf1329bc5ac52096ddb3c0"
        ],
        [
            "rewrite H3; auto.",
            "VernacExtend",
            "81f0b52fdaf5f5da8eefafd4263db88cb26c67d0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "repeat rewrite exp_andp2.",
            "VernacExtend",
            "906f4df5ab0adb9d8a1a1c4a7cd95c79da55812b"
        ],
        [
            "apply extract_exists_pre; intro a.",
            "VernacExtend",
            "e2bc8e59278e92f7d13a3a5b43f2dad3f48dc72c"
        ],
        [
            "eapply semax_pre_post; try apply (H2 a).",
            "VernacExtend",
            "c3d67569e061c733ea244ec8bded4a7d5dc1d5cb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- andp_assoc.",
            "VernacExtend",
            "af620aa2f90527d6460b0d98a5bf2930b4fc0390"
        ],
        [
            "rewrite <- insert_prop.",
            "VernacExtend",
            "a5e3bd3035e08db302132008fcbecae7056b1e27"
        ],
        [
            "apply andp_right; [ | apply andp_left2; auto].",
            "VernacExtend",
            "e154794edee5d249def0ac1f7a38fe82486acef4"
        ],
        [
            "rewrite (andp_comm (local _)).",
            "VernacExtend",
            "c4e312d358601838474c6744495f5721ddf3543d"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "eapply derives_trans.",
            "VernacExtend",
            "74bf196b92978065d64297654462f01dbd4ed9a4"
        ],
        [
            "apply andp_right; [ | apply derives_refl].",
            "VernacExtend",
            "ed45463b3b6594f6bb33a9a3408cc2729b106434"
        ],
        [
            "apply andp_left2; apply (H1 a).",
            "VernacExtend",
            "3b3a0e3aadf91e75d6aa49ac2c4cedc69af4da49"
        ],
        [
            "rewrite <- andp_assoc.",
            "VernacExtend",
            "af620aa2f90527d6460b0d98a5bf2930b4fc0390"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "intro; apply prop_right.",
            "VernacExtend",
            "fec8a44b97931cd0704cf4512958bd8874b52ff1"
        ],
        [
            "rewrite H3; auto.",
            "VernacExtend",
            "81f0b52fdaf5f5da8eefafd4263db88cb26c67d0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "destruct Post; simpl; auto.",
            "VernacExtend",
            "591c03f963bc237d14441ffa4706c9b1542fd803"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "destruct Post; simpl; auto.",
            "VernacExtend",
            "591c03f963bc237d14441ffa4706c9b1542fd803"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "destruct Post; simpl; auto.",
            "VernacExtend",
            "591c03f963bc237d14441ffa4706c9b1542fd803"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros; apply andp_left2.",
            "VernacExtend",
            "47ca35ab71e1992e002c93eabf82e5adc00ca86c"
        ],
        [
            "destruct Post; simpl; auto.",
            "VernacExtend",
            "591c03f963bc237d14441ffa4706c9b1542fd803"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_for_x : forall Espec {cs: compspecs} Delta Q test body incr PreIncr Post, bool_type (typeof test) = true -> local (tc_environ Delta) && Q |-- (tc_expr Delta (Eunop Cop.Onotbool test tint)) -> local (tc_environ Delta) && local (`(typed_false (typeof test)) (eval_expr test)) && Q |-- RA_normal Post -> @semax cs Espec Delta (local (`(typed_true (typeof test)) (eval_expr test)) && Q) body (loop1_ret_assert PreIncr Post) -> @semax cs Espec Delta PreIncr incr (normal_ret_assert Q) -> @semax cs Espec Delta Q (Sloop (Ssequence (Sifthenelse test Sskip Sbreak) body) incr) Post.",
            "VernacStartTheoremProof",
            "da95cc2c151055b00adc47da22d4a57fcba1dc9e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply semax_loop with PreIncr.",
            "VernacExtend",
            "dbbd91c73cb2dead18aba261853a638a517b1a13"
        ],
        [
            "apply semax_seq with (local (tc_environ Delta) && (Q && local (` (typed_true (typeof test)) (eval_expr test)))) .",
            "VernacExtend",
            "d3bf8271256fc5ea0ee03c5b4bfb726a9736e066"
        ],
        [
            "apply semax_pre_simple with ( (tc_expr Delta (Eunop Cop.Onotbool test tint)) && Q).",
            "VernacExtend",
            "59bcfa78eed20f1d1e46e1b8d02dd052bf672924"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "apply semax_ifthenelse; auto.",
            "VernacExtend",
            "38afdf73fbe9650a242e47879c1b65fe3e615c21"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_post_flipped; [ apply semax_skip | .. ].",
            "VernacExtend",
            "614bd6eedc759151d11c531ddae5dc2ada09be96"
        ],
        [
            "intro rho; destruct Post as [?P ?P ?P ?P]; simpl; normalize.",
            "VernacExtend",
            "560507b5e26ab7025ec164af02d6d2e171a6ee56"
        ],
        [
            "intro rho; destruct Post as [?P ?P ?P ?P]; simpl; normalize.",
            "VernacExtend",
            "560507b5e26ab7025ec164af02d6d2e171a6ee56"
        ],
        [
            "intro rho; destruct Post as [?P ?P ?P ?P]; simpl; normalize.",
            "VernacExtend",
            "560507b5e26ab7025ec164af02d6d2e171a6ee56"
        ],
        [
            "intros vl rho; destruct Post as [?P ?P ?P ?P]; simpl; normalize.",
            "VernacExtend",
            "b19291364de8f289c17a51a7fd29c4bdbeb1a090"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_pre_simple; [ | apply semax_break].",
            "VernacExtend",
            "5753d2972f2bf55bc426a7282ccf07551a155510"
        ],
        [
            "intro rho; destruct Post as [?P ?P ?P ?P]; simpl; normalize.",
            "VernacExtend",
            "560507b5e26ab7025ec164af02d6d2e171a6ee56"
        ],
        [
            "eapply derives_trans; [ | apply (H1 rho)].",
            "VernacExtend",
            "553491d8aa075703eea0e9aaeb822accd47e40af"
        ],
        [
            "rewrite (andp_comm (Q rho)).",
            "VernacExtend",
            "d14466d55cc85135c9c9ec38e7cc7ae16292f1f9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_pre_simple; [ | apply H2].",
            "VernacExtend",
            "3d98c7c3b8c445cc6e82ebc659ee4594e72485a8"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_post_flipped.",
            "VernacExtend",
            "ac9c9abbd32853aa5e0977aeb2f3a973b425de9c"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply andp_left2; intro rho; destruct Post as [?P ?P ?P ?P]; simpl; auto.",
            "VernacExtend",
            "78421c41a9806c5685a10b239b528c5716915f47"
        ],
        [
            "apply andp_left2; intro rho; destruct Post as [?P ?P ?P ?P]; simpl; auto.",
            "VernacExtend",
            "78421c41a9806c5685a10b239b528c5716915f47"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply andp_left2; intro rho; destruct Post as [?P ?P ?P ?P]; simpl; auto.",
            "VernacExtend",
            "78421c41a9806c5685a10b239b528c5716915f47"
        ],
        [
            "intro; apply andp_left2; intro rho; destruct Post as [?P ?P ?P ?P]; simpl; auto.",
            "VernacExtend",
            "b462f362f7b3615db38c222762ae6a519b9a1235"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_for : forall Espec {cs: compspecs} {A:Type} (v: A -> val) Delta P Q R test body incr PreIncr Post, bool_type (typeof test) = true -> (forall a:A, ENTAIL Delta, PROPx (P a) (LOCALx (Q a) (SEPx (R a))) |-- tc_expr Delta (Eunop Cop.Onotbool test tint)) -> (forall a:A, ENTAIL Delta, PROPx (P a) (LOCALx (Q a) (SEPx (R a))) |-- local (`(eq (v a)) (eval_expr test))) -> (forall a:A, @semax cs Espec Delta (PROPx (typed_true (typeof test) (v a) :: P a) (LOCALx (Q a) (SEPx (R a)))) body (loop1_ret_assert (PreIncr a) Post)) -> (forall a, @semax cs Espec Delta (PreIncr a) incr (normal_ret_assert (PROPx (P a) (LOCALx (Q a) (SEPx (R a)))))) -> (forall a:A, ENTAIL Delta, PROPx (typed_false (typeof test) (v a) :: P a) (LOCALx (Q a) (SEPx (R a))) |-- RA_normal Post) -> @semax cs Espec Delta (EX a:A, PROPx (P a) (LOCALx (Q a) (SEPx (R a)))) (Sloop (Ssequence (Sifthenelse test Sskip Sbreak) body) incr) Post.",
            "VernacStartTheoremProof",
            "af356caccf416ab9fef2fbe99eeed540c0427c52"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply semax_for_x with (EX a:A, PreIncr a); auto.",
            "VernacExtend",
            "66d527944f77d2c7954507e835f5b6ac7c5bffcb"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "eapply derives_trans; [ | apply (H4 a)].",
            "VernacExtend",
            "def6fc53a0e3bd46e78bbce1da64561f41fbd9d3"
        ],
        [
            "clear - H4 H1.",
            "VernacExtend",
            "70241fc1432a14464a3c5ac82032e8231e1e5c22"
        ],
        [
            "eapply derives_trans; [ | eapply derives_trans; [ eapply andp_derives | ]].",
            "VernacExtend",
            "5bf439b2b8746aa30a285ff7d45235bcf577c827"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "rewrite (andp_comm (local (tc_environ _))).",
            "VernacExtend",
            "5d95e21ac5a79b6f48d7c4cce7f7423db6b9f2f5"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "rewrite <- insert_prop.",
            "VernacExtend",
            "a5e3bd3035e08db302132008fcbecae7056b1e27"
        ],
        [
            "rewrite <- !andp_assoc.",
            "VernacExtend",
            "c5054dc7db48721dcca908810895940ad495a85d"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "intro rho; unfold local, lift1; unfold_lift.",
            "VernacExtend",
            "e28e9d5c49ba116cda6204cc2bf06a224613b46e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply extract_exists_pre; intro a.",
            "VernacExtend",
            "e2bc8e59278e92f7d13a3a5b43f2dad3f48dc72c"
        ],
        [
            "eapply semax_pre_post; try apply (H2 a).",
            "VernacExtend",
            "c3d67569e061c733ea244ec8bded4a7d5dc1d5cb"
        ],
        [
            "rewrite <- insert_prop.",
            "VernacExtend",
            "a5e3bd3035e08db302132008fcbecae7056b1e27"
        ],
        [
            "eapply derives_trans; [ | eapply derives_trans].",
            "VernacExtend",
            "ae798bb79bf004baade37a8789b1adc9b8631c38"
        ],
        [
            "eapply andp_right; [ | apply derives_refl].",
            "VernacExtend",
            "e1348d8b0d3bc1fcf7e0267233d97ae7125a1abe"
        ],
        [
            "eapply derives_trans; [ | apply (H1 a)].",
            "VernacExtend",
            "52e9f15e1554a9a259a5c4aa6eb892b407038abe"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "rewrite <- !andp_assoc.",
            "VernacExtend",
            "c5054dc7db48721dcca908810895940ad495a85d"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "intro rho; unfold local, lift1; unfold_lift.",
            "VernacExtend",
            "e28e9d5c49ba116cda6204cc2bf06a224613b46e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite H6; auto.",
            "VernacExtend",
            "8a9201f1f7ddc014f6bc14c277b2cae49a314db3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "unfold loop1_ret_assert.",
            "VernacExtend",
            "727bfef441cc200372c51d79a1557200889dbd63"
        ],
        [
            "destruct Post as [?P ?P ?P ?P]; apply exp_right with a; apply derives_refl.",
            "VernacExtend",
            "dbe7bafa5a9400ff4d013d1d9560a1f95b1fe369"
        ],
        [
            "destruct Post as [?P ?P ?P ?P]; apply andp_left2; apply derives_refl.",
            "VernacExtend",
            "a1056f2dbcec7bfb9f824fe8347df0fbc2e3241e"
        ],
        [
            "destruct Post as [?P ?P ?P ?P]; apply exp_right with a; apply andp_left2; simpl; auto.",
            "VernacExtend",
            "cfa60bd000aaf857404d9794113349263d525f54"
        ],
        [
            "intros vl; destruct Post as [?P ?P ?P ?P]; apply andp_left2; apply derives_refl.",
            "VernacExtend",
            "7137c0051d782f064eca9dfc0f3f84c945a986a6"
        ],
        [
            "apply extract_exists_pre; intro a.",
            "VernacExtend",
            "e2bc8e59278e92f7d13a3a5b43f2dad3f48dc72c"
        ],
        [
            "eapply semax_post'; try apply (H3 a).",
            "VernacExtend",
            "ae501ed3d5311a812a79e791f6016076d39fca1f"
        ],
        [
            "apply exp_right with a; auto.",
            "VernacExtend",
            "7a21f9fea52a8d59fd46da59758685686bdd7b3c"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma forward_setx': forall Espec {cs: compspecs} Delta P id e, (P |-- (tc_expr Delta e) && (tc_temp_id id (typeof e) Delta e) ) -> @semax cs Espec Delta P (Sset id e) (normal_ret_assert (EX old:val, local (`eq (eval_id id) (subst id (`old) (eval_expr e))) && subst id (`old) P)).",
            "VernacStartTheoremProof",
            "115a12be602e67bd3f263597f5427caa31687014"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_pre; try apply (semax_set_forward Delta P id e).",
            "VernacExtend",
            "28904f08928f88373a29baf5e15ad32e8e4047cf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply derives_trans ; [ | apply now_later].",
            "VernacExtend",
            "9a71d4b56ef0714bd682ee6d36e7f41baba3bd6c"
        ],
        [
            "apply andp_left2; apply andp_right; auto.",
            "VernacExtend",
            "0094944f10f6d6f741b866e5b86bfd03d193fd15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_switch_PQR: forall {Espec: OracleKind}{CS: compspecs} , forall n Delta (Pre: environ->mpred) a sl (Post: ret_assert), is_int_type (typeof a) = true -> ENTAIL Delta, Pre |-- tc_expr Delta a -> ENTAIL Delta, Pre |-- local (`(eq (Vint (Int.repr n))) (eval_expr a)) -> @semax CS Espec Delta Pre (seq_of_labeled_statement (select_switch (Int.unsigned (Int.repr n)) sl)) (switch_ret_assert Post) -> @semax CS Espec Delta Pre (Sswitch a sl) Post.",
            "VernacStartTheoremProof",
            "14449ea4280443bdbfa73753e0b2417d5e91f5ec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_pre.",
            "VernacExtend",
            "9363f9e9939113ca23d79fd509fce1f1a57c9852"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "apply (semax_switch); auto.",
            "VernacExtend",
            "7c360a3888f22b3c8c9d2022d2bf4593e635713e"
        ],
        [
            "intro n'.",
            "VernacExtend",
            "da4c07ef3078b0a44eb64c44004ba6f71b69a2a9"
        ],
        [
            "assert_PROP (n' = Int.repr n).",
            "VernacExtend",
            "f26f959e364d0b2d900a3e11d17a3b70f4192ce9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply derives_trans with (local (`( eq (Vint (Int.repr n))) (eval_expr a)) && local (` eq (eval_expr a) `(Vint n'))).",
            "VernacExtend",
            "45b17b1fc12c0a86655843a53d2e9e112bccfdda"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "eapply derives_trans; [ | eassumption].",
            "VernacExtend",
            "6b926dfcfa6ddb879f1ba2b6b09f8cfaaad047c0"
        ],
        [
            "intro rho.",
            "VernacExtend",
            "340a6646b01296f706bfd718a4f2fa78cb01cc3b"
        ],
        [
            "unfold local, lift1, liftx, lift; simpl.",
            "VernacExtend",
            "ecfc0451ea0b2364571ee695948724c734b38b3d"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "intro rho.",
            "VernacExtend",
            "340a6646b01296f706bfd718a4f2fa78cb01cc3b"
        ],
        [
            "unfold local, lift1, liftx, lift; simpl.",
            "VernacExtend",
            "ecfc0451ea0b2364571ee695948724c734b38b3d"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "intro rho.",
            "VernacExtend",
            "340a6646b01296f706bfd718a4f2fa78cb01cc3b"
        ],
        [
            "unfold local, lift1, liftx, lift; simpl.",
            "VernacExtend",
            "ecfc0451ea0b2364571ee695948724c734b38b3d"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite <- H3 in H4.",
            "VernacExtend",
            "e5ae47c2fb7ccc3bdab183c9c05b27aee16a0630"
        ],
        [
            "apply Vint_inj in H4.",
            "VernacExtend",
            "b749e3920034d51e87c50462be82c629f5c27001"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "subst n'.",
            "VernacExtend",
            "c6091d97cf8dbc71af500743869c9dea7d99a086"
        ],
        [
            "eapply semax_pre; [ | eassumption].",
            "VernacExtend",
            "6afe842c066a35eae4bdde2587415ee7b77408f2"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modulo_samerepr: forall x y, Z.modulo x Int.modulus = Z.modulo y Int.modulus -> Int.repr x = Int.repr y.",
            "VernacStartTheoremProof",
            "0a25fccd5c5a2da194320d70bdf4243eaa30c259"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int.eqm_samerepr.",
            "VernacExtend",
            "df0ef4498756a122fadded0dd9adbc82943b3a3c"
        ],
        [
            "apply Zmod_divide_minus in H; [ | reflexivity].",
            "VernacExtend",
            "7f6ed8b0c0af0b60c0744315fd3cc78e34b6286d"
        ],
        [
            "unfold Int.eqm.",
            "VernacExtend",
            "a80835e552cb827f9b5178eed941bdca3092f01e"
        ],
        [
            "unfold Int.eqmod.",
            "VernacExtend",
            "e7e5b7d82d0b2b1cc47da18a3b132010146a4e40"
        ],
        [
            "set (m := Int.modulus) in *.",
            "VernacExtend",
            "ae77402240ac811d67d927b88078778236507656"
        ],
        [
            "destruct H as [z ?].",
            "VernacExtend",
            "f61042a5606e082fd6fedddf79209c2d5cc1541e"
        ],
        [
            "assert (x = y mod m + z * m) by omega.",
            "VernacExtend",
            "35087aca58b487292a80d0b37dfe6dd73d85aa29"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "pose proof (Z.div_mod y m).",
            "VernacExtend",
            "189bb9b9410db416e5147396810092aedafeab20"
        ],
        [
            "spec H.",
            "VernacExtend",
            "c7a045c1cfd9908cdf3626bbe876cad8b9f0c976"
        ],
        [
            "intro Hx; inv Hx.",
            "VernacExtend",
            "c73af1d4771f80216b53fe809ff20dbcf9070037"
        ],
        [
            "evar (k: Z).",
            "VernacExtend",
            "8bb27b70d02527e00ce976470bc55cdfcd303403"
        ],
        [
            "exists k.",
            "VernacExtend",
            "5bd085ef2f3e8bbd4bde88ae4ddb2fb4c72df1a9"
        ],
        [
            "rewrite H at 2; clear H.",
            "VernacExtend",
            "08a97b45dab86d810702bb513711849bd550a67f"
        ],
        [
            "rewrite (Z.mul_comm m).",
            "VernacExtend",
            "7c73acd16967c3120ae2df54c4fdd04f911d6e55"
        ],
        [
            "assert (z * m = k*m + (y/m*m))%Z; [ | omega].",
            "VernacExtend",
            "5efd158a76c6574886a1dc71d0277eaccecd4346"
        ],
        [
            "rewrite <- Z.mul_add_distr_r.",
            "VernacExtend",
            "a8ef345498dca6d511cbbbc80f3df515d3060fc7"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "assert (k = z - y/m); [ | omega].",
            "VernacExtend",
            "486bff4df5ee18691263a8995ea1be282e3687b9"
        ],
        [
            "subst k.",
            "VernacExtend",
            "1b57ef870be21b34849e5c815396643cf7b2e820"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma select_switch_case_signed: forall y n x c sl, Z.modulo x Int.modulus = Z.modulo y Int.modulus -> 0 <= x < Int.modulus -> select_switch_case n (LScons (Some x) c sl) = if zeq (Int.unsigned (Int.repr y)) n then Some (LScons (Some x) c sl) else select_switch_case n sl.",
            "VernacStartTheoremProof",
            "0b2490b7f56c4421e7f99466edda6e3fd27516c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply modulo_samerepr in H.",
            "VernacExtend",
            "1dcd83caaf168776b59e61f700b02d9b2f132064"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite Int.unsigned_repr by rep_omega.",
            "VernacExtend",
            "26c3c9e601e62eb43dc9221ac136a0870b49e198"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition signof (e: expr) := match typeof e with | Tint _ s _ => s | Tlong s _ => s | _ => Unsigned end.",
            "VernacDefinition",
            "b729c8fde8607e571b80e25915c69e1d23ceee4b"
        ],
        [
            "Definition adjust_for_sign (s: signedness) (x: Z) := match s with | Unsigned => x | Signed => if (zlt x Int.half_modulus) then x else x - Int.modulus end.",
            "VernacDefinition",
            "f45ea5d4e602192e3a4f8e35a904f6f6f41bd8fc"
        ],
        [
            "Lemma semax_for_3g1 : forall Espec {cs: compspecs} {A} (PQR: A -> environ -> mpred) (v: A -> val) Delta P Q R test body incr Post, bool_type (typeof test) = true -> (forall a, ENTAIL Delta, PROPx (P a) (LOCALx (Q a) (SEPx (R a))) |-- (tc_expr Delta (Eunop Cop.Onotbool test tint))) -> (forall a, ENTAIL Delta, PROPx (P a) (LOCALx (Q a) (SEPx (R a))) |-- local (`(eq (v a)) (eval_expr test))) -> (forall a, @semax cs Espec Delta (PROPx (typed_true (typeof test) (v a) :: (P a)) (LOCALx (Q a) (SEPx (R a)))) body (loop1_ret_assert (EX a:A, PQR a) Post)) -> (forall a, @semax cs Espec Delta (PQR a) incr (normal_ret_assert (EX a:A, PROPx (P a) (LOCALx (Q a) (SEPx (R a)))))) -> (forall a, ENTAIL Delta, PROPx (typed_false (typeof test) (v a) :: (P a)) (LOCALx (Q a) (SEPx (R a))) |-- RA_normal Post) -> @semax cs Espec Delta (EX a:A, PROPx (P a) (LOCALx (Q a) (SEPx (R a)))) (Sloop (Ssequence (Sifthenelse test Sskip Sbreak) body) incr) Post.",
            "VernacStartTheoremProof",
            "a4629b07af162706a49452d8615c2aa17923bf7e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply semax_loop with (Q':= (EX a:A, PQR a)).",
            "VernacExtend",
            "9434e50d745c822dfd880ef97fb2ff5783533d5f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply extract_exists_pre; intro a.",
            "VernacExtend",
            "e2bc8e59278e92f7d13a3a5b43f2dad3f48dc72c"
        ],
        [
            "apply semax_seq with (Q0 := PROPx (typed_true (typeof test) (v a) :: P a) (LOCALx (Q a) (SEPx (R a)))).",
            "VernacExtend",
            "cb404b78c16fbe529e58ea42a42de69ad347f890"
        ],
        [
            "apply semax_pre with (tc_expr Delta (Eunop Onotbool test (Tint I32 Signed noattr)) && (local (`(eq (v a)) (eval_expr test)) && (PROPx (P a) (LOCALx (Q a) (SEPx (R a)))))); [ | apply semax_ifthenelse; auto].",
            "VernacExtend",
            "56c6002f666ace165c74a237770cef6348766a36"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "apply sequential.",
            "VernacExtend",
            "98a827c0343569c599dbc7c64b278cc6cb105970"
        ],
        [
            "eapply semax_post_flipped; [apply semax_skip | | | | ].",
            "VernacExtend",
            "50d1670e6e7d7892d105298f49165713ac80567f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "destruct Post; simpl_ret_assert.",
            "VernacExtend",
            "2a5588eff5f2ab101e07af320ad13e7b5dc12d2f"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "rewrite <- insert_prop.",
            "VernacExtend",
            "a5e3bd3035e08db302132008fcbecae7056b1e27"
        ],
        [
            "forget (PROPx (P a) (LOCALx (Q a) (SEPx (R a)))) as PQR.",
            "VernacExtend",
            "f7b3104caee37523c7a11b8c296dddbca141a2d4"
        ],
        [
            "intro rho.",
            "VernacExtend",
            "340a6646b01296f706bfd718a4f2fa78cb01cc3b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "unfold local, lift1.",
            "VernacExtend",
            "9293e8229d66da65c139a7c415e04062e8f4c83d"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct Post; simpl_ret_assert.",
            "VernacExtend",
            "2a5588eff5f2ab101e07af320ad13e7b5dc12d2f"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct Post; simpl_ret_assert.",
            "VernacExtend",
            "2a5588eff5f2ab101e07af320ad13e7b5dc12d2f"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros; destruct Post; simpl_ret_assert.",
            "VernacExtend",
            "a80476627b67a4f376f6c3fc3f3997452efeda50"
        ],
        [
            "apply andp_left2; auto.",
            "VernacExtend",
            "624d28bb04e617622cc0cb522526420dfef62500"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply semax_pre; [ | apply semax_break].",
            "VernacExtend",
            "f58df3c4cad342d015fc181cc53b287d43a08432"
        ],
        [
            "autorewrite with ret_assert.",
            "VernacExtend",
            "f9dc5f29355a0f2c8d8c61c9cb9e1ed6f9f5f9a6"
        ],
        [
            "eapply derives_trans; [ | apply (H4 a)].",
            "VernacExtend",
            "def6fc53a0e3bd46e78bbce1da64561f41fbd9d3"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "rewrite <- insert_prop.",
            "VernacExtend",
            "a5e3bd3035e08db302132008fcbecae7056b1e27"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "forget (PROPx (P a) (LOCALx (Q a) (SEPx (R a)))) as PQR.",
            "VernacExtend",
            "f7b3104caee37523c7a11b8c296dddbca141a2d4"
        ],
        [
            "intro rho.",
            "VernacExtend",
            "340a6646b01296f706bfd718a4f2fa78cb01cc3b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "unfold local, lift1.",
            "VernacExtend",
            "9293e8229d66da65c139a7c415e04062e8f4c83d"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply semax_post_flipped.",
            "VernacExtend",
            "ac9c9abbd32853aa5e0977aeb2f3a973b425de9c"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "all: intros; apply andp_left2; auto.",
            "VernacExtend",
            "99744d7dc88bc2cb74770e13c1c23b411725c9b5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "make_sequential.",
            "VernacExtend",
            "479923e48c96f50add09e444d987c75f5d1aa94c"
        ],
        [
            "Intros a.",
            "VernacExtend",
            "dbd1ae61f47d1799aef39a963b54828570a828a0"
        ],
        [
            "eapply semax_post_flipped.",
            "VernacExtend",
            "ac9c9abbd32853aa5e0977aeb2f3a973b425de9c"
        ],
        [
            "apply (H3 a).",
            "VernacExtend",
            "3639fa22e1149e76913af650a7a1a625eaf1f4e8"
        ],
        [
            "all: intros; destruct Post; simpl_ret_assert; apply andp_left2; auto.",
            "VernacExtend",
            "05e15b0bd1693e644c78d5b3f467aed907a15dd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_for_3g2: forall Espec {cs: compspecs} {A} (PQR: A -> environ -> mpred) (v: A -> val) Delta P Q R test body incr Post, bool_type (typeof test) = true -> (forall a, ENTAIL Delta, PROPx (P a) (LOCALx (Q a) (SEPx (R a))) |-- (tc_expr Delta (Eunop Cop.Onotbool test tint))) -> (forall a, ENTAIL Delta, PROPx (P a) (LOCALx (Q a) (SEPx (R a))) |-- local (`(eq (v a)) (eval_expr test))) -> (forall a, @semax cs Espec Delta (PROPx (typed_true (typeof test) (v a) :: (P a)) (LOCALx (Q a) (SEPx (R a)))) body (loop1x_ret_assert (EX a:A, PQR a) Post)) -> (forall a, @semax cs Espec Delta (PQR a) incr (normal_ret_assert (EX a:A, PROPx (P a) (LOCALx (Q a) (SEPx (R a)))))) -> @semax cs Espec Delta (EX a:A, PROPx (P a) (LOCALx (Q a) (SEPx (R a)))) (Sloop (Ssequence (Sifthenelse test Sskip Sbreak) body) incr) (overridePost (EX a:A, PROPx (typed_false (typeof test) (v a) :: (P a)) (LOCALx (Q a) (SEPx (R a)))) Post).",
            "VernacStartTheoremProof",
            "6e96a9db68fe875e9ae58e0bb3fa8c8dd2d264e7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_for_3g1; try eassumption.",
            "VernacExtend",
            "140f5b15252462eede6c9eb0bd01be791469e3aa"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intro a.",
            "VernacExtend",
            "14896994838b4c124c1f1123678e1f3468f5e2ea"
        ],
        [
            "eapply semax_post_flipped.",
            "VernacExtend",
            "ac9c9abbd32853aa5e0977aeb2f3a973b425de9c"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "all: intros; destruct Post; simpl_ret_assert; apply andp_left2; auto.",
            "VernacExtend",
            "05e15b0bd1693e644c78d5b3f467aed907a15dd4"
        ],
        [
            "apply FF_left.",
            "VernacExtend",
            "5e2b816586ba7150957d4a3cc0517225443a64c1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intro a.",
            "VernacExtend",
            "14896994838b4c124c1f1123678e1f3468f5e2ea"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "destruct Post; simpl_ret_assert.",
            "VernacExtend",
            "2a5588eff5f2ab101e07af320ad13e7b5dc12d2f"
        ],
        [
            "Exists a.",
            "VernacExtend",
            "44f7d491e0fc5e8ee2906ea105403f6b351c89a9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Transparent tc_andp.",
            "VernacSetOpacity",
            "0f85d0c6ba6c20bd3719963aaef13cb520348bbf"
        ]
    ],
    "proofs": [
        {
            "name": "semax_while_peel",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply semax_loop_unroll1 with (P' := Inv) (Q := Inv); auto.",
                        "VernacExtend",
                        "fa24b770d29f66128508f11f313da382e81279d2"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre; [ | apply sequential; apply semax_skip].",
                        "VernacExtend",
                        "9afdf234c535ca4ac8b42306e562dbd2f7e29564"
                    ]
                },
                {
                    "command": [
                        "destruct R; apply ENTAIL_refl.",
                        "VernacExtend",
                        "a5ee990e5cb9089d4c9b6de9c5b74aec1f466368"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_func_cons_ext_vacuous",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply semax_func_cons_ext; try reflexivity; auto.",
                        "VernacExtend",
                        "9210529fa0e5256592ff78f6980b130e434b1d29"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "forget 1%positive as i.",
                        "VernacExtend",
                        "1e4f545a2d4a107f224fc4857be8a904792a5e0c"
                    ]
                },
                {
                    "command": [
                        "revert i; induction argsig; simpl; intros; auto.",
                        "VernacExtend",
                        "26f84504e3dd4b9a002b9d4854319412f4329269"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "forget 1%positive as i.",
                        "VernacExtend",
                        "1e4f545a2d4a107f224fc4857be8a904792a5e0c"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "revert i; induction argsig; simpl; intros; auto.",
                        "VernacExtend",
                        "26f84504e3dd4b9a002b9d4854319412f4329269"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1, FF_left.",
                        "VernacExtend",
                        "e7eb0eaa1d595e0d01574bbfe56b2874fdc87573"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply semax_external_FF.",
                        "VernacExtend",
                        "4befc722e129b211d4a3c8aa535080716e07983c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_eq_false_e",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_true in H; inv H.",
                        "VernacExtend",
                        "d7dd74cf7b7d42d24a3f6ff01cd59edabf8f7ec7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_inj_signed",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.signed_repr i) by rep_omega.",
                        "VernacExtend",
                        "fa5c541cffa3b8ec0ffbc2c5e192be21ccd415d3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.signed_repr j) by rep_omega.",
                        "VernacExtend",
                        "b22e5d4f8184790075d0035506f15f53539c2caa"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_inj_unsigned",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.unsigned_repr i) by rep_omega.",
                        "VernacExtend",
                        "3053b946b2110dbc0d22a2d8b824329e7837192c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.unsigned_repr j) by rep_omega.",
                        "VernacExtend",
                        "1d30be82b88b85adb3ba42906be74b30e603588b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_inj_signed'",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_inj_unsigned'",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "forward_setx'",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre; try apply (semax_set_forward Delta P id e).",
                        "VernacExtend",
                        "28904f08928f88373a29baf5e15ad32e8e4047cf"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans ; [ | apply now_later].",
                        "VernacExtend",
                        "9a71d4b56ef0714bd682ee6d36e7f41baba3bd6c"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2; apply andp_right; auto.",
                        "VernacExtend",
                        "0094944f10f6d6f741b866e5b86bfd03d193fd15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "select_switch_case_signed",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply modulo_samerepr in H.",
                        "VernacExtend",
                        "1dcd83caaf168776b59e61f700b02d9b2f132064"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.unsigned_repr by rep_omega.",
                        "VernacExtend",
                        "26c3c9e601e62eb43dc9221ac136a0870b49e198"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}