{
    "filename": "floyd/freezer.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.base2.",
            "VernacRequire",
            "c9732b06b9c2316526989f551596fbf382fa6641"
        ],
        [
            "Require Import VST.floyd.canon.",
            "VernacRequire",
            "988a1ad872e5562185c8be992c766ff2b7e6653a"
        ],
        [
            "Require Import VST.floyd.entailer.",
            "VernacRequire",
            "af3575d05e2d8569d7bfb3e1f5690267a491e5e9"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Export ListNotations.",
            "VernacImport",
            "00c95fe57e7ccc1d2086257523eea6835ba57682"
        ],
        [
            "Require Import VST.floyd.client_lemmas.",
            "VernacRequire",
            "449c8140a2f7afa12f07d13833b2a4f672db98f1"
        ],
        [
            "Local Open Scope logic.",
            "VernacOpenCloseScope",
            "5937723d189e5aa98ad78e1018bed51ea2c1b0cd"
        ],
        [
            "Module Type FREEZER.",
            "VernacDeclareModuleType",
            "5ce81cae4b6748f821772da5a36bb0a07ed20f54"
        ],
        [
            "Parameter FRZ : mpred -> mpred.",
            "VernacAssumption",
            "5532a88bc84a6e11e24ec26c662b5cd226b81817"
        ],
        [
            "Parameter FRZ1: forall p, p |-- FRZ p.",
            "VernacAssumption",
            "cb184c75d64231852d1734b6ba0e5b867726b860"
        ],
        [
            "Parameter FRZ2: forall p, FRZ p |-- p.",
            "VernacAssumption",
            "8d01c8c47ac7db8125616966c0e030d198966ad7"
        ],
        [
            "Parameter FRZL : list mpred -> mpred.",
            "VernacAssumption",
            "e435b1ce43e486c9de24dd7fd72e2aed8dfc2e08"
        ],
        [
            "Parameter FRZL1: forall ps, fold_right sepcon emp ps |-- FRZL ps.",
            "VernacAssumption",
            "860121497750c6726b7501dd83e611496dd4fad4"
        ],
        [
            "Parameter FRZL2: forall ps, FRZL ps |-- fold_right sepcon emp ps.",
            "VernacAssumption",
            "a9e25d6eaab7f08a3e02d205eebea5b4bc9eb9af"
        ],
        [
            "Parameter FRZRw : list mpred -> list mpred -> Type.",
            "VernacAssumption",
            "e373ae0bd6318d1d210f812a4c1b261b3c698068"
        ],
        [
            "Parameter FRZRw_constr : forall {L1 G1: list mpred} {F: mpred}, (fold_right sepcon emp G1) |-- fold_right sepcon emp L1 * F -> FRZRw L1 G1.",
            "VernacAssumption",
            "f6296612a01a7fa3fb4fc2578e776d05a03252bf"
        ],
        [
            "Parameter FRZR : forall L1 G1 {w: FRZRw L1 G1}, mpred.",
            "VernacAssumption",
            "a594856ca438b1f19c1ca120779a71183fb63b49"
        ],
        [
            "Parameter FRZR1: forall L1 G1 (w: FRZRw L1 G1), fold_right sepcon emp G1 |-- fold_right sepcon emp L1 * @FRZR L1 G1 w.",
            "VernacAssumption",
            "be4c778a28e81f7dfd80f264dfd869037241b92a"
        ],
        [
            "Parameter FRZR2: forall L1 G1 L2 G2 F H, F |-- fold_right sepcon emp L2 -* fold_right sepcon emp G2 -> fold_right sepcon emp L2 * @FRZR L1 G1 (@FRZRw_constr L1 G1 F H) |-- fold_right sepcon emp G2.",
            "VernacAssumption",
            "2b0ead0fd152d2c6616e8bc6cbd2c5cc51b790ba"
        ],
        [
            "End FREEZER.",
            "VernacEndSegment",
            "9acaa505723b50116b6176dd1ec28be2584de7ff"
        ],
        [
            "Module Freezer : FREEZER.",
            "VernacDefineModule",
            "fe78286250b95a653429044ce7e663461d6f0811"
        ],
        [
            "Definition FRZ (p: mpred) := p.",
            "VernacDefinition",
            "0a63a22cb1a839ff5b491e84f5bb44478db5165f"
        ],
        [
            "Lemma FRZ1 p: p |-- FRZ p.",
            "VernacStartTheoremProof",
            "9460520658788741ab0a9406edbf9b2f3823aa6e"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FRZ2 p: FRZ p |-- p.",
            "VernacStartTheoremProof",
            "0d6aea17348e88c63d450a1fcd47ab44e7b8327e"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition FRZL (ps:list mpred): mpred := fold_right sepcon emp ps.",
            "VernacDefinition",
            "0cbd71cd8db76e72df28cebfa79975e3982c8859"
        ],
        [
            "Lemma FRZL1 ps: (fold_right_sepcon ps) |-- FRZL ps.",
            "VernacStartTheoremProof",
            "212ab097b2519ae833fd20cd94e1e9b3be7f6c64"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FRZL2 ps: FRZL ps |-- fold_right_sepcon ps.",
            "VernacStartTheoremProof",
            "96b7aaa74c3fedcd582a3d583b390b4f8e7e1426"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive FRZRw' (L1 G1: list mpred): Type := | FRZRw'_constr: forall F: mpred, (fold_right sepcon emp G1) |-- fold_right sepcon emp L1 * F -> FRZRw' L1 G1.",
            "VernacInductive",
            "630f7a4eeed1879a98f5adbd924088b70543fbd6"
        ],
        [
            "Definition FRZRw := FRZRw'.",
            "VernacDefinition",
            "57a17b2447e5b09e1fd457f18f08ce4e380b6b59"
        ],
        [
            "Definition FRZRw_constr:= FRZRw'_constr.",
            "VernacDefinition",
            "829f538fe104daa19c30dbe65e2941262c882c62"
        ],
        [
            "Definition FRZR (L1 G1: list mpred) {w: FRZRw L1 G1}: mpred := match w with | FRZRw'_constr F _ => F end.",
            "VernacDefinition",
            "95746c705cb649feb3fb7c71316c508a90c908dd"
        ],
        [
            "Lemma FRZR1: forall L1 G1 (w: FRZRw L1 G1), fold_right sepcon emp G1 |-- fold_right sepcon emp L1 * @FRZR L1 G1 w.",
            "VernacStartTheoremProof",
            "2cf7cc7a2f10ca4d15563397ea787017f1c9b6b9"
        ],
        [
            "intros ? ? [? ?].",
            "VernacExtend",
            "fee3529222b3721309ae430f2c9fbfe701ba194e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FRZR2: forall L1 G1 L2 G2 F H, F |-- fold_right sepcon emp L2 -* fold_right sepcon emp G2 -> fold_right sepcon emp L2 * @FRZR L1 G1 (@FRZRw_constr L1 G1 F H) |-- fold_right sepcon emp G2.",
            "VernacStartTheoremProof",
            "faab32cb5ed03c16a2c5d165eef3d273d292021d"
        ],
        [
            "intros ? ? ? ? ? ? ?.",
            "VernacExtend",
            "0fd25fe13d0de8b2d4622718a0b14257db949623"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "apply wand_sepcon_adjoint; auto.",
            "VernacExtend",
            "59c5e8860b61b1cd7d8c32d247624064df083580"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Freezer.",
            "VernacEndSegment",
            "0581b95b4574843fad1acdc663185f0a6ad53fee"
        ],
        [
            "Notation FRZ := Freezer.FRZ.",
            "VernacSyntacticDefinition",
            "061b633ab16dfb8c80a6343a43c65988e1496356"
        ],
        [
            "Notation FRZL := Freezer.FRZL.",
            "VernacSyntacticDefinition",
            "91febe5d74069b787154ecbf1170701115181a3e"
        ],
        [
            "Notation FRZR := Freezer.FRZR.",
            "VernacSyntacticDefinition",
            "c23939765abe1cce53e88bd014ce842e151dc1ae"
        ],
        [
            "Notation FRZRw := Freezer.FRZRw.",
            "VernacSyntacticDefinition",
            "7c16ad2f99235d8eb3d0e040a2cad24f38f7f207"
        ],
        [
            "Lemma FRZ_ax:forall p, FRZ p = p.",
            "VernacStartTheoremProof",
            "b84c20abc73c600adaba814defcf966e3c9d1fd7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "apply Freezer.FRZ2.",
            "VernacExtend",
            "7962cbd7c9301f2a5937c5df8b0e37c86b2bf663"
        ],
        [
            "apply Freezer.FRZ1.",
            "VernacExtend",
            "74e4a788d564597ef719c20ee5a1a4d342bec0e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint freeze_nth (n: nat) (al: list mpred) {struct n}: list mpred := match n, al with | O , a::al => (FRZ a) ::al | S n', a::al' => a :: freeze_nth n' al' | _, nil => nil end.",
            "VernacFixpoint",
            "d394f639ad458aee2a3457f66b1e6e7b4ed733c4"
        ],
        [
            "Lemma freeze1_SEP': forall n Espec {cs: compspecs} Delta P Q R c Post, @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx (freeze_nth n R)))) c Post -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R))) c Post.",
            "VernacStartTheoremProof",
            "a9ec113399745d1e0c990181f2cce0084e8e20d2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply semax_pre; try apply H.",
            "VernacExtend",
            "cd071498b31c7aa1dac7ec71792716a70589ed9c"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "go_lowerx; entailer!.",
            "VernacExtend",
            "167df59d69a16e3b26875ed1895f9aa1391e89d6"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "generalize dependent R.",
            "VernacExtend",
            "0f8a1cd3948b6d9bedda69101791bdd7d4f028ff"
        ],
        [
            "induction n; destruct R; simpl; cancel.",
            "VernacExtend",
            "c57d431f4f9a5936385a106b9dcdf57a5de93b42"
        ],
        [
            "apply Freezer.FRZ1.",
            "VernacExtend",
            "74e4a788d564597ef719c20ee5a1a4d342bec0e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Tactic Notation \"freeze1_SEP\" constr(n) := eapply (freeze1_SEP' (nat_of_Z n)); simpl.",
            "VernacExtend",
            "88721a8150d27a9c172ccee79141a3031ce86005"
        ],
        [
            "Tactic Notation \"freeze1_SEP\" constr(n) constr(m) := (gather_SEP n m); eapply (freeze1_SEP' (nat_of_Z 0)); simpl.",
            "VernacExtend",
            "cd877dd0b94a72dd28e088bb32441ac5e3c068e7"
        ],
        [
            "Tactic Notation \"freeze1_SEP\" constr(n) constr(m) constr(k) := (gather_SEP n m k); eapply (freeze1_SEP' (nat_of_Z 0)); simpl.",
            "VernacExtend",
            "e24dd1070697689458c2be51aea2ab06aa6f58cd"
        ],
        [
            "Tactic Notation \"freeze1_SEP\" constr(n) constr(m) constr(k) constr(p) := (gather_SEP n m k p); eapply (freeze1_SEP' (nat_of_Z 0)); simpl.",
            "VernacExtend",
            "ddfc029640d0a949f940ea8c35d39626e8662360"
        ],
        [
            "Tactic Notation \"freeze1_SEP\" constr(n) constr(m) constr(k) constr(p) constr(q) := (gather_SEP n m k p q); eapply (freeze1_SEP' (nat_of_Z 0)); simpl.",
            "VernacExtend",
            "57b4724dc24a1d8da0a3b13d2d15002175924b6f"
        ],
        [
            "Fixpoint freezelist_nth (l: list nat) (al: list mpred): (list mpred) * (list mpred) := match l with | nil => (nil,al) | (n::l') => let (xs, ys) := freezelist_nth l' al in (nth n ys emp::xs, delete_nth n ys) end.",
            "VernacFixpoint",
            "4b9233731e8a79f47daf10d699b22df417089cbf"
        ],
        [
            "Lemma FRZL_ax ps: FRZL ps = fold_right_sepcon ps.",
            "VernacStartTheoremProof",
            "2bb089daec1e0768d71a99cd4a871334858c63a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "apply Freezer.FRZL2.",
            "VernacExtend",
            "28de39a0c12fba7646336f7072f7f1f5166f5a70"
        ],
        [
            "apply Freezer.FRZL1.",
            "VernacExtend",
            "5f070850b9edfcec8332d8d3cf007bab8736de91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_right_sepcon_deletenth: forall n (l: list mpred), fold_right_sepcon l = nth n l emp * fold_right_sepcon (delete_nth n l).",
            "VernacStartTheoremProof",
            "96b67765393ca010d3eef12ff10f8d60a53f4ae1"
        ],
        [
            "induction n; destruct l; simpl.",
            "VernacExtend",
            "33e5f9f08ab267b3897ba578b1ee7dc03818ea89"
        ],
        [
            "rewrite sepcon_emp; trivial.",
            "VernacExtend",
            "556b94902ef2e4165bbadaf41b88f2f2e7e40bc2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite sepcon_emp; trivial.",
            "VernacExtend",
            "556b94902ef2e4165bbadaf41b88f2f2e7e40bc2"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "do 2 rewrite <- sepcon_assoc.",
            "VernacExtend",
            "18a75b77459f2f20ed92b66900bb7760f2b32df9"
        ],
        [
            "rewrite (sepcon_comm m).",
            "VernacExtend",
            "727663bdf255d6b4c01f1783107d19b077f8d20e"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_right_sepcon_deletenth': forall n (l:list (LiftEnviron mpred)), @fold_right (environ -> mpred) (environ -> mpred) sepcon emp l = nth n l emp * fold_right sepcon emp (delete_nth n l).",
            "VernacStartTheoremProof",
            "7fe5f2492299615d7a0deada17eaa83fb0447b94"
        ],
        [
            "induction n; destruct l; simpl.",
            "VernacExtend",
            "33e5f9f08ab267b3897ba578b1ee7dc03818ea89"
        ],
        [
            "rewrite sepcon_emp; trivial.",
            "VernacExtend",
            "556b94902ef2e4165bbadaf41b88f2f2e7e40bc2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite sepcon_emp; trivial.",
            "VernacExtend",
            "556b94902ef2e4165bbadaf41b88f2f2e7e40bc2"
        ],
        [
            "rewrite IHn; clear IHn.",
            "VernacExtend",
            "4aa256348cf16f1955e2da1ab9a20d96d478a5cc"
        ],
        [
            "extensionality.",
            "VernacExtend",
            "5f659a610dbf05b4e2ac5dec31944a29d867effa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "do 2 rewrite <- sepcon_assoc.",
            "VernacExtend",
            "18a75b77459f2f20ed92b66900bb7760f2b32df9"
        ],
        [
            "rewrite (sepcon_comm (l x)).",
            "VernacExtend",
            "0173f22c3dd3b7172be73cbd31f9eae166e65007"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeze_SEP': forall l Espec {cs: compspecs} Delta P Q R c Post xs ys, (xs, ys) = freezelist_nth l R -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx (FRZL xs:: ys)))) c Post -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R))) c Post.",
            "VernacStartTheoremProof",
            "c7640b4b1156d4f0b736aaf84eea162ac3503b9b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply semax_pre; try eassumption.",
            "VernacExtend",
            "355ffaca5454745a0f95c77c3654f684bd6d602b"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "unfold PROPx.",
            "VernacExtend",
            "593deff54c68c9f1e69c515e783782e0f285a65f"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "unfold LOCALx.",
            "VernacExtend",
            "ea2b6e61532874513c5a254a27d6c9d225642880"
        ],
        [
            "apply derives_refl'.",
            "VernacExtend",
            "c778e5f165b217e12e92c88c8e5f68e18a05e94d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold SEPx.",
            "VernacExtend",
            "f854f9cf3a2437909acdcb52d99742a8cbb4fa69"
        ],
        [
            "rewrite FRZL_ax.",
            "VernacExtend",
            "808a9521ae977d4623cb935dd9317e7441011d1c"
        ],
        [
            "clear - H.",
            "VernacExtend",
            "0feb8621f12176e9894f4f3ff86ecf0003739aed"
        ],
        [
            "generalize dependent xs.",
            "VernacExtend",
            "f9ee514f9e2970475b230e56b17f7959870572a3"
        ],
        [
            "generalize dependent ys.",
            "VernacExtend",
            "63d69c61d52cf05a953e247ff8343f43ea2abfbf"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction l; intros.",
            "VernacExtend",
            "f3f6b28c6822ad560a06f008ea0a5aa487d0e8e3"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "extensionality x.",
            "VernacExtend",
            "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite emp_sepcon; trivial.",
            "VernacExtend",
            "ab01347df05ea6ca3f84d1019aa1dab6e19dcbee"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "remember (freezelist_nth l R).",
            "VernacExtend",
            "badd2549171a4aae9fab79a2bca845e459572007"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "specialize (IHl _ _ (eq_refl _)).",
            "VernacExtend",
            "5588775a3a4528c20b79115937e54810e1f4919b"
        ],
        [
            "rewrite IHl.",
            "VernacExtend",
            "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
        ],
        [
            "clear IHl.",
            "VernacExtend",
            "8bbd9602dc9b79bb59ead5a20fa2e5495ddfe01a"
        ],
        [
            "extensionality.",
            "VernacExtend",
            "5f659a610dbf05b4e2ac5dec31944a29d867effa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (sepcon_comm (nth a l1 emp)).",
            "VernacExtend",
            "06601309f245365954e5c7d08a00cec3816a90ad"
        ],
        [
            "repeat rewrite sepcon_assoc.",
            "VernacExtend",
            "9c08e0b8d2115b9a99f9d5cb3548a9da2273df02"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply fold_right_sepcon_deletenth.",
            "VernacExtend",
            "f238701b75c8f81612af61308463f16bd472b84f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_delete_nth {A B} (f:A->B): forall n l, delete_nth n (map f l) = map f (delete_nth n l).",
            "VernacStartTheoremProof",
            "ba17a5bfa12ccef9b8d9ed12905c65776a4b41f1"
        ],
        [
            "induction n; intros; destruct l; simpl; trivial.",
            "VernacExtend",
            "6536d2b670039df67fbf70613cd70b3cd1b5db2a"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint my_nth {A} (n : nat) (l : list A) (default : A) {struct l} : A := match n with | 0%nat => match l with | [] => default | x :: _ => x end | S m => match l with | [] => default | _ :: t => my_nth m t default end end.",
            "VernacFixpoint",
            "e54bce011f381739d024286f46e11fe1331e3014"
        ],
        [
            "Lemma my_nth_nth {A}: forall n l (d:A), my_nth n l d = nth n l d.",
            "VernacStartTheoremProof",
            "cc7627035a9575cc2335897a351fb98851d94b20"
        ],
        [
            "induction n; destruct l; intros; simpl; trivial.",
            "VernacExtend",
            "0b54270f12c0c233c46bcd825f5e53fca72bc507"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint my_delete_nth {A} (n:nat) (xs:list A) : list A := match n with | 0%nat => match xs with | [] => [] | _ :: ys => ys end | S n' => match xs with | [] => [] | y :: ys => y :: my_delete_nth n' ys end end.",
            "VernacFixpoint",
            "222e1789358fa0be8a900725de3c1e242984fa89"
        ],
        [
            "Lemma my_delete_nth_delete_nth {A}: forall n (l:list A), my_delete_nth n l = delete_nth n l.",
            "VernacStartTheoremProof",
            "75b579ee133f5a6ded2e7ffbab4d051206643928"
        ],
        [
            "induction n; destruct l; intros; simpl; trivial.",
            "VernacExtend",
            "0b54270f12c0c233c46bcd825f5e53fca72bc507"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint my_freezelist_nth (l: list nat) (al: list mpred): (list mpred) * (list mpred) := match l with | nil => (nil,al) | (n::l') => let (xs, ys) := my_freezelist_nth l' al in (my_nth n ys emp::xs, my_delete_nth n ys) end.",
            "VernacFixpoint",
            "c1df43912fc1c743f4a662ae0750d5bebad14a96"
        ],
        [
            "Lemma my_freezelist_nth_freezelist_nth: forall l al, my_freezelist_nth l al = freezelist_nth l al.",
            "VernacStartTheoremProof",
            "4dc27700173ec660d30ae6faff43f170f9cade27"
        ],
        [
            "induction l; simpl; intros; trivial.",
            "VernacExtend",
            "7a2dd68219ca943570f5c99cdf42c4e1d65513bb"
        ],
        [
            "rewrite IHl; clear IHl.",
            "VernacExtend",
            "9909f22e124a5fa020d054ae5164f34c974320b9"
        ],
        [
            "remember (freezelist_nth l al) as F.",
            "VernacExtend",
            "f966a277307a2a182ff04dbbfa8ff759362d3018"
        ],
        [
            "destruct F.",
            "VernacExtend",
            "e1303f88777128c097feaccddeb2cd8942e777dc"
        ],
        [
            "rewrite my_nth_nth, my_delete_nth_delete_nth; trivial.",
            "VernacExtend",
            "3c63f19513dafbf768fc8ee4660b3e242efa7eb4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeze_SEP'': forall l Espec {cs: compspecs} Delta P Q R c Post xs ys, (xs, ys) = my_freezelist_nth l R -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx (FRZL xs:: ys)))) c Post -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R))) c Post.",
            "VernacStartTheoremProof",
            "c1003cfe79f5ab6a2efc310b193e7f6659c87045"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite my_freezelist_nth_freezelist_nth in H.",
            "VernacExtend",
            "f3623385da6bf321571a72c69d09bd4e21cf0597"
        ],
        [
            "eapply freeze_SEP'; eassumption.",
            "VernacExtend",
            "d22d3f0026d3ad43ccfa8d15d8be1771dc940f58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac freeze_tac L name := eapply (freeze_SEP'' (map nat_of_Z L)); first [solve [reflexivity] | match goal with | |- semax _ (PROPx _ (LOCALx _ (SEPx ((FRZL ?xs) :: _)))) _ _ => let D := fresh name in set (D:=xs); change xs with (@abbreviate (list mpred) xs) in D; simpl nat_of_Z; unfold my_delete_nth end].",
            "VernacExtend",
            "cc451c5ef7e67b1be41407432f34cf7cadbf52ff"
        ],
        [
            "Module ZOrder <: Orders.TotalLeBool.",
            "VernacDefineModule",
            "4be1fe69e10a04e0f6f647437eb38500f43977c9"
        ],
        [
            "Definition t := Z.",
            "VernacDefinition",
            "5dfdc482bb70d7c3bc7339c3ad45a8a268cb7633"
        ],
        [
            "Definition leb := Z.leb.",
            "VernacDefinition",
            "033f7ba21db84dc6d1037bd610d2c6c36167f5a6"
        ],
        [
            "Theorem leb_total : forall a1 a2, Z.leb a1 a2 = true \\/ Z.leb a2 a1 = true.",
            "VernacStartTheoremProof",
            "40a4e07edeaa4caf05216590607d9adf7375af1c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Zle_bool_total a1 a2); auto.",
            "VernacExtend",
            "fb29fc5b0c5f60d70c8aedc7f18fb56b0d3b33ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ZOrder.",
            "VernacEndSegment",
            "96b87a98c2b843476433d994f64c82c8e0948684"
        ],
        [
            "Module SortZ := Mergesort.Sort(ZOrder).",
            "VernacDefineModule",
            "c13e1b3be238ffb6461d01de4e47632e6391efd3"
        ],
        [
            "Function Zlist_complement' (i: Z) (n: nat) (bl: list Z) : list Z := match n with O => nil | S n' => match bl with | nil => i :: Zlist_complement' (Z.succ i) n' bl | b::bl' => if Z.ltb i b then i :: Zlist_complement' (Z.succ i) n' bl else Zlist_complement' (Z.succ i) n' bl' end end.",
            "VernacExtend",
            "71ba75c43ab0a1eac8ed456821a5b13e0981f5cc"
        ],
        [
            "Definition Zlist_complement (n: nat) (al: list Z) : list Z := let bl := SortZ.sort al in Zlist_complement' 0 n bl.",
            "VernacDefinition",
            "bc9e817711a2dd0896a7a1df4f58c30771e1a5a7"
        ],
        [
            "Ltac find_freeze1 comp id A := lazymatch goal with | fr := @abbreviate mpred _ |- semax _ (PROPx _ (LOCALx _ (SEPx ?R))) _ _ => match R with context [fr :: ?R'] => let L := constr:(Zlength R - (Z.succ (Zlength R'))) in let L := eval cbn in L in let A' := constr:(L::A) in unfold abbreviate in fr; subst fr; find_freeze1 comp id A' end | |- semax _ (PROPx _ (LOCALx _ (SEPx ?R))) _ _ => let A' := constr:(if comp then Zlist_complement (length R) A else A) in let A' := eval compute in A' in freeze_tac A' id end.",
            "VernacExtend",
            "7f19a38754f04c691a090454277bee8327ba220f"
        ],
        [
            "Ltac freezer i := find_freeze1 false i (@nil Z).",
            "VernacExtend",
            "c9ebab5f8261fed834964c9b34c0de7e8e503a83"
        ],
        [
            "Ltac complement_freezer i := find_freeze1 true i (@nil Z).",
            "VernacExtend",
            "8da9329694bebe26746082798472b2e77bd14328"
        ],
        [
            "Tactic Notation \"freeze\" constr(L) ident(i) := freeze_tac L i.",
            "VernacExtend",
            "8c830aba0c21c8f79974f618e29755e3aeef9697"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) := freeze1 a1; freezer i.",
            "VernacExtend",
            "1203ac6749d9f585ab6e30c027dba2e9a007cef3"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) uconstr(a2) := freeze1 a1; freeze1 a2; freezer i.",
            "VernacExtend",
            "b0a0317a399cda4aa71ddbcc809de1d9f7d98a86"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) uconstr(a2) uconstr(a3) := freeze1 a1; freeze1 a2; freeze1 a3; freezer i.",
            "VernacExtend",
            "e832b0c95fd7aaf64aafaff909bf0a19ae2f1a63"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) := freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freezer i.",
            "VernacExtend",
            "df5605d804f7271ad3fa906625e7312e7a9c763c"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freezer i.",
            "VernacExtend",
            "b81d505c73a8f4e6cccef6c1da7a5c81505f3b19"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) := freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; freezer i.",
            "VernacExtend",
            "8e8c7666027d6e814ec5a8de98ad2b2b106b4fcd"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) uconstr(a7):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; freeze1 a7; freezer i.",
            "VernacExtend",
            "767acf9239e48174892f3976641b769ea6ffc36e"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) uconstr(a7) uconstr(a8):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; freeze1 a7; freeze1 a8; freezer i.",
            "VernacExtend",
            "d6179b9f4eb1ec28bf7081daec81882294b47bcc"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) uconstr(a7) uconstr(a8) uconstr(a9):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; freeze1 a7; freeze1 a8; freeze1 a9; freezer i.",
            "VernacExtend",
            "db37a7fce4062d9c2b436e37c38e6facbbee7f8c"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) uconstr(a7) uconstr(a8) uconstr(a9) uconstr(a10):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; freeze1 a7; freeze1 a8; freeze1 a9; freeze1 a10; freezer i.",
            "VernacExtend",
            "39817c4f298ac19cb198ff3b050ae2600d85cb8f"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" := complement_freezer i.",
            "VernacExtend",
            "53df14efdb3bc1741c9ad692a0d21ccfbabb96b9"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) := freeze1 a1; complement_freezer i.",
            "VernacExtend",
            "b1ecbc20114c6ea9e0e8ec4a42011319b802e7ff"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) uconstr(a2) := freeze1 a1; freeze1 a2; complement_freezer i.",
            "VernacExtend",
            "c0d4ade566bb323c9f254e1e28c97798ee5cffca"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) uconstr(a2) uconstr(a3) := freeze1 a1; freeze1 a2; freeze1 a3; complement_freezer i.",
            "VernacExtend",
            "9a8febc708bcef230ef2493bfdfc674e006bbd9e"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) := freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; complement_freezer i.",
            "VernacExtend",
            "dec30a2492d81fbac1092b1b7d811c4fa98d8082"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; complement_freezer i.",
            "VernacExtend",
            "80be8e11bd304af0a6d01a3a4c69d96e32683f77"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) := freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; complement_freezer i.",
            "VernacExtend",
            "b79d759c2a0de34c3dfeec9b89aaefd14a9be186"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) uconstr(a7):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; freeze1 a7; complement_freezer i.",
            "VernacExtend",
            "15b57c37a9657762a4c0bf518d125eedde060194"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) uconstr(a7) uconstr(a8):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; freeze1 a7; freeze1 a8; complement_freezer i.",
            "VernacExtend",
            "6cc5000bb36f4ebd510fb1bef47bff8e18ccd2f2"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) uconstr(a7) uconstr(a8) uconstr(a9):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; freeze1 a7; freeze1 a8; freeze1 a9; complement_freezer i.",
            "VernacExtend",
            "44e96910209b51291e7f30ae9a04a82ed85331bb"
        ],
        [
            "Tactic Notation \"freeze\" ident(i) \":=\" \"-\" uconstr(a1) uconstr(a2) uconstr(a3) uconstr(a4) uconstr(a5) uconstr(a6) uconstr(a7) uconstr(a8) uconstr(a9) uconstr(a10):= freeze1 a1; freeze1 a2; freeze1 a3; freeze1 a4; freeze1 a5; freeze1 a6; freeze1 a7; freeze1 a8; freeze1 a9; freeze1 a10; complement_freezer i.",
            "VernacExtend",
            "22aff749ad8f5a0cb3d729da99f1a228a518484d"
        ],
        [
            "Lemma flatten_emp_in_mpreds': forall n (R: list mpred), nth_error R n = Some emp -> SEPx R = SEPx (firstn n R ++ skipn (S n) R).",
            "VernacStartTheoremProof",
            "5c1df9026c49ee907abf9d33cd579a314b592df3"
        ],
        [
            "unfold SEPx.",
            "VernacExtend",
            "f854f9cf3a2437909acdcb52d99742a8cbb4fa69"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "revert R H.",
            "VernacExtend",
            "4c728fd69935173ef01e0442a68c354cff1df21e"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction n; destruct R; intros.",
            "VernacExtend",
            "b3f6aaa2242ef502f3b5411954d089a59c1a2476"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl nth_error in H.",
            "VernacExtend",
            "cd4d961526874cf682ee232446b96ef32d4320f2"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply emp_sepcon.",
            "VernacExtend",
            "9dd300795f2527b9b4d9d9a3a7a4b7f6488a12a7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "specialize (IHn _ H1).",
            "VernacExtend",
            "aac65447c2a76abf3d44b9369e96754cc73c656b"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "simpl firstn.",
            "VernacExtend",
            "c07ce675a2f9e689ebfbeff357033f653bc28406"
        ],
        [
            "change (m :: firstn n R) with (app (m::nil) (firstn n R)).",
            "VernacExtend",
            "4d57812d6a2f546ed824420121edd13827001a25"
        ],
        [
            "rewrite app_ass.",
            "VernacExtend",
            "1e8737a155ba47802e4df29a56a47a094af2082d"
        ],
        [
            "unfold app at 1.",
            "VernacExtend",
            "194f3b633ca210ad576c2a376ed8972fbe1f342d"
        ],
        [
            "simpl; f_equal; auto.",
            "VernacExtend",
            "649eee8ad709ffbf62b1618162e754841096d2ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma flatten_emp_in_SEP': forall n P Q (R: list mpred) R', nth_error R n = Some emp -> R' = firstn n R ++ skipn (S n) R -> PROPx P (LOCALx Q (SEPx R)) = PROPx P (LOCALx Q (SEPx R')).",
            "VernacStartTheoremProof",
            "2ba6fd251c98c258ed90b390621775fdee9f7d03"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "apply flatten_emp_in_mpreds'.",
            "VernacExtend",
            "46415f63197b1b2983f6763663cbca349c15bc21"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac flatten_emp_in_SEP PQR := match PQR with | PROPx ?P (LOCALx ?Q (SEPx (?R))) => match R with context [emp :: ?R'] => let n := constr:((length R - Datatypes.S (length R'))%nat) in let n' := eval lazy beta zeta iota delta in n in erewrite(@flatten_emp_in_SEP' n' P Q R _ (eq_refl _)); [ | let RR := fresh \"RR\" in set (RR := R); unfold firstn, app, skipn; subst RR; cbv beta iota; apply eq_refl ] end end.",
            "VernacExtend",
            "54acff376173bf52aa722d83f35f550c27643e30"
        ],
        [
            "Ltac flatten_emp := match goal with | |- semax _ ?PQR _ _ => flatten_emp_in_SEP PQR | |- ?PQR |-- _ => flatten_emp_in_SEP PQR end.",
            "VernacExtend",
            "3528290affabfafcd7a4cd63b97864f55d21d173"
        ],
        [
            "Ltac thaw' name := rewrite (FRZL_ax name); unfold name, abbreviate; clear name.",
            "VernacExtend",
            "d10f244966104bfb5e2e368e0d1a8ae0ce0561f9"
        ],
        [
            "Ltac thaw name := thaw' name; simpl nat_of_Z; unfold my_delete_nth, my_nth, fold_right_sepcon; repeat flatten_sepcon_in_SEP; repeat flatten_emp.",
            "VernacExtend",
            "5cd444bcc16c71dbda70ba36d7b1685ea0f9b614"
        ],
        [
            "Inductive split_FRZ_in_SEP: list mpred -> list mpred -> list mpred -> Prop := | split_FRZ_in_SEP_nil: split_FRZ_in_SEP nil nil nil | split_FRZ_in_SEP_FRZ: forall R R' RF F, split_FRZ_in_SEP R R' RF -> split_FRZ_in_SEP (FRZ F :: R) R' (FRZ F :: RF) | split_FRZ_in_SEP_FRZL: forall R R' RF F, split_FRZ_in_SEP R R' RF -> split_FRZ_in_SEP (FRZL F :: R) R' (FRZL F :: RF) | split_FRZ_in_SEP_FRZR: forall R R' RF L G w, split_FRZ_in_SEP R R' RF -> split_FRZ_in_SEP (@FRZR L G w :: R) R' (@FRZR L G w :: RF) | split_FRZ_in_SEP_other: forall R R' RF R0, split_FRZ_in_SEP R R' RF -> split_FRZ_in_SEP (R0 :: R) (R0 :: R') RF.",
            "VernacInductive",
            "761b80eec5af65d10b8df5f74bbc61e6f505caf8"
        ],
        [
            "Ltac prove_split_FRZ_in_SEP := solve [ repeat first [ simple apply split_FRZ_in_SEP_nil | simple apply split_FRZ_in_SEP_FRZ | simple apply split_FRZ_in_SEP_FRZL | simple apply split_FRZ_in_SEP_FRZR | simple apply split_FRZ_in_SEP_other]].",
            "VernacExtend",
            "616cfe304cd7a783a079957f49b5fef8c18cb00b"
        ],
        [
            "Lemma split_FRZ_in_SEP_spec: forall R R' RF, split_FRZ_in_SEP R R' RF -> fold_right_sepcon R = fold_right_sepcon R' * fold_right_sepcon RF.",
            "VernacStartTheoremProof",
            "03153a272bde2e976e817057a2e1388a6011412d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite sepcon_emp; auto.",
            "VernacExtend",
            "547f574af52ed1ecf6eeb00679f096581655b054"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHsplit_FRZ_in_SEP.",
            "VernacExtend",
            "765ff58ec92b357de4aee5528096e9d25f7549cd"
        ],
        [
            "apply pred_ext; cancel.",
            "VernacExtend",
            "e594d23f2d5e5624933c2bb92a01553d57ec08f3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHsplit_FRZ_in_SEP.",
            "VernacExtend",
            "765ff58ec92b357de4aee5528096e9d25f7549cd"
        ],
        [
            "apply pred_ext; cancel.",
            "VernacExtend",
            "e594d23f2d5e5624933c2bb92a01553d57ec08f3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHsplit_FRZ_in_SEP.",
            "VernacExtend",
            "765ff58ec92b357de4aee5528096e9d25f7549cd"
        ],
        [
            "apply pred_ext; cancel.",
            "VernacExtend",
            "e594d23f2d5e5624933c2bb92a01553d57ec08f3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHsplit_FRZ_in_SEP.",
            "VernacExtend",
            "765ff58ec92b357de4aee5528096e9d25f7549cd"
        ],
        [
            "apply pred_ext; cancel.",
            "VernacExtend",
            "e594d23f2d5e5624933c2bb92a01553d57ec08f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma localize: forall R_L Espec {cs: compspecs} Delta P Q R R_FR R_G c Post, split_FRZ_in_SEP R R_G R_FR -> (let FR_L := @abbreviate _ R_L in let FR_G := @abbreviate _ R_G in exists (w: FRZRw FR_L FR_G), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx (R_L ++ @FRZR FR_L FR_G w :: R_FR)))) c Post) -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R))) c Post.",
            "VernacStartTheoremProof",
            "1a45170e4de92125dfff531249e833dddf872fd6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0 as [? ?].",
            "VernacExtend",
            "0f697508c155a692f324e9ae2fc37c0385689df4"
        ],
        [
            "eapply semax_pre; [clear H0 | exact H0].",
            "VernacExtend",
            "dba5064ea620dc7abac316984c9e705c00176958"
        ],
        [
            "apply split_FRZ_in_SEP_spec in H.",
            "VernacExtend",
            "39ebe0677cf3bf0ca82cc51f0097bbfa6460e3cf"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "unfold SEPx; intro.",
            "VernacExtend",
            "4ba2ea4133f12bf588b10b79822f8871db245553"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite fold_right_sepcon_app.",
            "VernacExtend",
            "ccdab8789b72da2f2964f4902618bed2be7467f8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cancel.",
            "VernacExtend",
            "24ea99f626ec31ff5120f99494a934737348354b"
        ],
        [
            "apply Freezer.FRZR1.",
            "VernacExtend",
            "f5bc2d6db3beca6976e814428a906b21de96524e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac unfold_app := change (@app mpred) with (fix app (l m : list mpred) {struct l} : list mpred := match l with | nil => m | cons a l1 => cons a (app l1 m) end); change (@app Prop) with (fix app (l m : list Prop) {struct l} : list Prop := match l with | nil => m | cons a l1 => cons a (app l1 m) end); cbv beta iota.",
            "VernacExtend",
            "2f4a526e50fb4b93d545b26314b471172c3dd077"
        ],
        [
            "Ltac localize R_L := eapply (localize R_L); [prove_split_FRZ_in_SEP |]; let FR_L := fresh \"RamL\" in let FR_G := fresh \"RamG\" in intros FR_L FR_G; eexists; unfold_app.",
            "VernacExtend",
            "5d7944237e14aca7301539de3d4c6179a326e9c8"
        ],
        [
            "Lemma unlocalize_aux: forall R_G2 R R_FR R_L1 R_G1 R_L2 F w, split_FRZ_in_SEP R R_L2 (@FRZR R_L1 R_G1 w :: R_FR) -> (exists (H: (fold_right_sepcon R_G1) |-- fold_right_sepcon R_L1 * F), w = @Freezer.FRZRw_constr _ _ _ H) -> F |-- fold_right_sepcon R_L2 -* fold_right_sepcon R_G2 -> fold_right_sepcon R |-- fold_right_sepcon (R_G2 ++ R_FR).",
            "VernacStartTheoremProof",
            "635365a422993c7f53d340180c343921b9801b3f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply split_FRZ_in_SEP_spec in H.",
            "VernacExtend",
            "39ebe0677cf3bf0ca82cc51f0097bbfa6460e3cf"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite fold_right_sepcon_app.",
            "VernacExtend",
            "ccdab8789b72da2f2964f4902618bed2be7467f8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cancel.",
            "VernacExtend",
            "24ea99f626ec31ff5120f99494a934737348354b"
        ],
        [
            "destruct H0 as [? ?]; subst.",
            "VernacExtend",
            "27f0ddbee24ddab1a1a1ead23fa01e423d5cc449"
        ],
        [
            "apply Freezer.FRZR2.",
            "VernacExtend",
            "27e1f2c4007059d127fef4190a03f2880e79cef9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unlocalize_triple: forall R_G2 Espec {cs: compspecs} Delta P Q R R_FR R_L1 R_G1 R_L2 c Post w, split_FRZ_in_SEP R R_L2 (@FRZR R_L1 R_G1 w :: R_FR) -> (exists (H: fold_right_sepcon R_G1 |-- fold_right_sepcon R_L1 * (fold_right_sepcon R_L2 -* fold_right_sepcon R_G2)), w = @Freezer.FRZRw_constr _ _ _ H) -> (@abbreviate _ (fun _ _ => True) R_L1 R_G1 -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx (R_G2 ++ R_FR)))) c Post) -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R))) c Post.",
            "VernacStartTheoremProof",
            "3980789a5bdf10af3f555cc27151866876ba61a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_pre; [clear H1 | exact (H1 I)].",
            "VernacExtend",
            "50709c87b9416b6aa79c37d8747acbf93e2d4bea"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "unfold SEPx; intro.",
            "VernacExtend",
            "4ba2ea4133f12bf588b10b79822f8871db245553"
        ],
        [
            "eapply unlocalize_aux; eauto.",
            "VernacExtend",
            "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unlocalize_derives_canon: forall R_G2 Delta P Q R R_FR R_L1 R_G1 R_L2 Post w, split_FRZ_in_SEP R R_L2 (@FRZR R_L1 R_G1 w :: R_FR) -> (exists (H: (fold_right_sepcon R_G1) |-- fold_right_sepcon R_L1 * (fold_right_sepcon R_L2 -* fold_right_sepcon R_G2)), w = @Freezer.FRZRw_constr _ _ _ H) -> (@abbreviate _ (fun _ _ => True) R_L1 R_G1 -> local (tc_environ Delta) && PROPx P (LOCALx Q (SEPx (R_G2 ++ R_FR))) |-- Post) -> local (tc_environ Delta) && PROPx P (LOCALx Q (SEPx R)) |-- Post.",
            "VernacStartTheoremProof",
            "4d0bdd60a6c4ad1ff8285f9c1a8826a293873043"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply derives_trans; [clear H1 | exact (H1 I)].",
            "VernacExtend",
            "4ba6a0e60517f74bab69f316dc43a41d71217d3c"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "unfold SEPx; intro.",
            "VernacExtend",
            "4ba2ea4133f12bf588b10b79822f8871db245553"
        ],
        [
            "eapply unlocalize_aux; eauto.",
            "VernacExtend",
            "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unlocalize_derives_unlift: forall R_G2 Pre R R_FR R_L1 R_G1 R_L2 Post w, construct_fold_right_sepcon Pre R -> split_FRZ_in_SEP R R_L2 (@FRZR R_L1 R_G1 w :: R_FR) -> (exists (H: (fold_right_sepcon R_G1) |-- fold_right_sepcon R_L1 * (fold_right_sepcon R_L2 -* fold_right_sepcon R_G2)), w = @Freezer.FRZRw_constr _ _ _ H) -> (@abbreviate _ (fun _ _ => True) R_L1 R_G1 -> fold_left_sepconx (R_G2 ++ R_FR) |-- Post) -> Pre |-- Post.",
            "VernacStartTheoremProof",
            "be173dcffe0e04ad2ac4a02300d821ab2def35b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply construct_fold_right_sepcon_spec in H.",
            "VernacExtend",
            "77f05561cb9467a2d3fc2dc1a2554d244f513dee"
        ],
        [
            "subst Pre.",
            "VernacExtend",
            "4dca2dbb1073d822e716b3adbceb4aedf465ca07"
        ],
        [
            "eapply derives_trans; [clear H2 | exact (H2 I)].",
            "VernacExtend",
            "b005909eac6847d6fbad6aae772d57bde3eb5628"
        ],
        [
            "rewrite fold_left_sepconx_eq.",
            "VernacExtend",
            "1bf9a751a2d556bf78dc4b0dd849668154927cb2"
        ],
        [
            "eapply unlocalize_aux; eauto.",
            "VernacExtend",
            "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive ramif_frame_gen: mpred -> mpred -> Prop := | ramif_frame_gen_refl: forall P, ramif_frame_gen P P | ramif_frame_gen_prop: forall (Pure: Prop) P Q, Pure -> ramif_frame_gen P (imp (prop Pure) Q) -> ramif_frame_gen P Q | ramif_frame_gen_allp: forall {A: Type} (x: A) P Q, (forall x: A, ramif_frame_gen (P x) (Q x)) -> ramif_frame_gen (allp P) (Q x).",
            "VernacInductive",
            "27112b5cd031e456bd5f80e615a724bfda6b4ed1"
        ],
        [
            "Ltac prove_ramif_frame_gen_rec wit := match wit with | pair ?wit0 ?x => prove_ramif_frame_gen_rec wit0; match goal with | |- ramif_frame_gen _ ?P => super_pattern P x end; apply (ramif_frame_gen_allp x); clear dependent x; intros x | _ => match goal with | |- ramif_frame_gen _ ?P => super_pattern P wit end; apply (ramif_frame_gen_allp wit); clear dependent wit; intros wit end.",
            "VernacExtend",
            "872147e620a5aa3997f8f3a0d5c50c1e7abbff2b"
        ],
        [
            "Ltac prove_ramif_frame_gen wit := prove_ramif_frame_gen_rec wit; apply ramif_frame_gen_refl.",
            "VernacExtend",
            "1affb6d70905abc0579d048e4efb92e4128a511e"
        ],
        [
            "Ltac conj_gen assu := match assu with | pair ?assu0 ?a => let r := conj_gen assu0 in constr:(conj r a) | _ => constr:(assu) end.",
            "VernacExtend",
            "c1197f2a97cfd8f7b53f1071bbf991ccdcb69092"
        ],
        [
            "Ltac prove_ramif_frame_gen_prop assu := let H := conj_gen assu in let Pure := type of H in apply (ramif_frame_gen_prop Pure _ _ H).",
            "VernacExtend",
            "7e6f92396e27886c37e19a7a853c317656571041"
        ],
        [
            "Lemma ramif_frame_gen_spec: forall P Q, ramif_frame_gen P Q -> P |-- Q.",
            "VernacStartTheoremProof",
            "0bc0b661f2399681617449ee8d212d5cfd57df52"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply imp_andp_adjoint in IHramif_frame_gen.",
            "VernacExtend",
            "45c51d08db1fc33a75170a9e5a453bed2c2b2546"
        ],
        [
            "eapply derives_trans; [| apply IHramif_frame_gen].",
            "VernacExtend",
            "f29d1d0c6447d354d5063a6d156c877e47abdb32"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply prop_right; auto.",
            "VernacExtend",
            "95e18efadb5767545f0255f518eaa92b08876b58"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (allp_left _ x).",
            "VernacExtend",
            "5f4aa64d8926a1c5408551ee04ebc7b13c8e4f31"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unlocalizeQ_triple: forall R_G2 Espec {cs: compspecs} Delta P Q R R_FR R_L1 R_G1 R_L2 F c Post w, split_FRZ_in_SEP R R_L2 (@FRZR R_L1 R_G1 w :: R_FR) -> ramif_frame_gen F (wand (fold_right_sepcon R_L2) (fold_right_sepcon R_G2)) -> (exists (H: (fold_right_sepcon R_G1) |-- sepcon (fold_right_sepcon R_L1) F), w = @Freezer.FRZRw_constr _ _ _ H) -> (@abbreviate _ (fun _ _ => True) R_L1 R_G1 -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx (R_G2 ++ R_FR)))) c Post) -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R))) c Post.",
            "VernacStartTheoremProof",
            "fb0b51f599432d9a326a3e2ec4e7a64d23b231c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_pre; [clear H2 | exact (H2 I)].",
            "VernacExtend",
            "4b7211d133d472398bbe5d833b1000e06b21174e"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "unfold SEPx; intro.",
            "VernacExtend",
            "4ba2ea4133f12bf588b10b79822f8871db245553"
        ],
        [
            "apply ramif_frame_gen_spec in H0; auto.",
            "VernacExtend",
            "b765bc86440da974414689316956ea2774591156"
        ],
        [
            "eapply unlocalize_aux; eauto.",
            "VernacExtend",
            "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unlocalizeQ_derives_canon: forall R_G2 Delta P Q R R_FR R_L1 R_G1 R_L2 F Post w, split_FRZ_in_SEP R R_L2 (@FRZR R_L1 R_G1 w :: R_FR) -> ramif_frame_gen F (wand (fold_right_sepcon R_L2) (fold_right_sepcon R_G2)) -> (exists (H: (fold_right_sepcon R_G1) |-- sepcon (fold_right_sepcon R_L1) F), w = @Freezer.FRZRw_constr _ _ _ H) -> (@abbreviate _ (fun _ _ => True) R_L1 R_G1 -> local (tc_environ Delta) && PROPx P (LOCALx Q (SEPx (R_G2 ++ R_FR))) |-- Post) -> local (tc_environ Delta) && PROPx P (LOCALx Q (SEPx R)) |-- Post.",
            "VernacStartTheoremProof",
            "e603ddba0606dcedb7dd9982273163ee4b7846af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply derives_trans; [clear H2 | exact (H2 I)].",
            "VernacExtend",
            "b005909eac6847d6fbad6aae772d57bde3eb5628"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "unfold SEPx; intro.",
            "VernacExtend",
            "4ba2ea4133f12bf588b10b79822f8871db245553"
        ],
        [
            "apply ramif_frame_gen_spec in H0; auto.",
            "VernacExtend",
            "b765bc86440da974414689316956ea2774591156"
        ],
        [
            "eapply unlocalize_aux; eauto.",
            "VernacExtend",
            "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unlocalizeQ_derives_unlift: forall R_G2 Pre R R_FR R_L1 R_G1 R_L2 F Post w, construct_fold_right_sepcon Pre R -> split_FRZ_in_SEP R R_L2 (@FRZR R_L1 R_G1 w :: R_FR) -> ramif_frame_gen F (wand (fold_right_sepcon R_L2) (fold_right_sepcon R_G2)) -> (exists (H: (fold_right_sepcon R_G1) |-- sepcon (fold_right_sepcon R_L1) F), w = @Freezer.FRZRw_constr _ _ _ H) -> (@abbreviate _ (fun _ _ => True) R_L1 R_G1 -> fold_left_sepconx (R_G2 ++ R_FR) |-- Post) -> Pre |-- Post.",
            "VernacStartTheoremProof",
            "b56c0cf121c923d94fa69718115b939d5cc01e33"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply construct_fold_right_sepcon_spec in H.",
            "VernacExtend",
            "77f05561cb9467a2d3fc2dc1a2554d244f513dee"
        ],
        [
            "subst Pre.",
            "VernacExtend",
            "4dca2dbb1073d822e716b3adbceb4aedf465ca07"
        ],
        [
            "eapply derives_trans; [clear H3 | exact (H3 I)].",
            "VernacExtend",
            "e59c0b3b726f36d329b031077389ecbc720044e6"
        ],
        [
            "apply ramif_frame_gen_spec in H1; auto.",
            "VernacExtend",
            "fed01e693c478967195a8a1a94a380bb4f4848ac"
        ],
        [
            "rewrite fold_left_sepconx_eq.",
            "VernacExtend",
            "1bf9a751a2d556bf78dc4b0dd849668154927cb2"
        ],
        [
            "eapply unlocalize_aux; eauto.",
            "VernacExtend",
            "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac unlocalize_plain R_G2 := match goal with | |- @semax _ _ _ _ _ _ => eapply (unlocalize_triple R_G2) | |- local (tc_environ _) && _ |-- _ => eapply (unlocalize_derives_canon R_G2) | |- @derives _ Nveric _ _ => eapply (unlocalize_derives_unlift R_G2); [construct_fold_right_sepcon | ..] end; [ prove_split_FRZ_in_SEP | refine (ex_intro _ _ eq_refl); match goal with | |- fold_right_sepcon ?R_G1 |-- sepcon (fold_right_sepcon ?R_L1) _ => unfold abbreviate in R_L1, R_G1; unfold R_L1, R_G1; clear R_L1 R_G1 end; rewrite <- !fold_left_sepconx_eq; unfold fold_left_sepconx | match goal with | |- _ ?R_L1 ?R_G1 -> _ => intros _; clear R_L1 R_G1; unfold_app end; try unfold fold_left_sepconx ].",
            "VernacExtend",
            "6a15f102a804ed539f0d6c32900e93a92b06008c"
        ],
        [
            "Ltac unlocalize_wit R_G2 wit tac := match goal with | |- @semax _ _ _ _ _ _ => eapply (unlocalizeQ_triple R_G2) | |- local (tc_environ _) && _ |-- _ => eapply (unlocalizeQ_derives_canon R_G2) | |- @derives _ Nveric _ _ => eapply (unlocalizeQ_derives_unlift R_G2); [construct_fold_right_sepcon | ..] end; [ prove_split_FRZ_in_SEP | rewrite <- !fold_right_sepconx_eq; unfold fold_right_sepconx; tac; prove_ramif_frame_gen wit | refine (ex_intro _ _ eq_refl); match goal with | |- fold_right_sepcon ?R_G1 |-- sepcon (fold_right_sepcon ?R_L1) _ => unfold abbreviate in R_L1, R_G1; unfold R_L1, R_G1; clear R_L1 R_G1 end; rewrite <- !fold_right_sepconx_eq; unfold fold_right_sepconx | match goal with | |- _ ?R_L1 ?R_G1 -> _ => intros _; clear R_L1 R_G1; unfold_app end; try unfold fold_left_sepconx ].",
            "VernacExtend",
            "d89bbafbe3ab5bcbf5ae011ae10993fe02e4ed8a"
        ],
        [
            "Tactic Notation \"unlocalize\" constr(R_G2) := unlocalize_plain R_G2.",
            "VernacExtend",
            "58372db6b0b5b0a791e9f6888695463c5114182c"
        ],
        [
            "Tactic Notation \"unlocalize\" constr(R_G2) \"using\" constr(wit) := unlocalize_wit R_G2 wit idtac.",
            "VernacExtend",
            "b496aba77471c1b9a46439f108e995cc35c8dfda"
        ],
        [
            "Tactic Notation \"unlocalize\" constr(R_G2) \"using\" constr(wit) \"assuming\" constr(assu) := let tac := prove_ramif_frame_gen_prop assu in unlocalize_wit R_G2 wit tac.",
            "VernacExtend",
            "a282e4c98b133e2e555f7cac1fd02a27cd3051b8"
        ]
    ],
    "proofs": [
        {
            "name": "FRZ1",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FRZ2",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FRZL1",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FRZL2",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FRZR1",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros ? ? [? ?].",
                        "VernacExtend",
                        "fee3529222b3721309ae430f2c9fbfe701ba194e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FRZR2",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? ? ? ? ?.",
                        "VernacExtend",
                        "0fd25fe13d0de8b2d4622718a0b14257db949623"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "apply wand_sepcon_adjoint; auto.",
                        "VernacExtend",
                        "59c5e8860b61b1cd7d8c32d247624064df083580"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FRZ_ax",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "apply Freezer.FRZ2.",
                        "VernacExtend",
                        "7962cbd7c9301f2a5937c5df8b0e37c86b2bf663"
                    ]
                },
                {
                    "command": [
                        "apply Freezer.FRZ1.",
                        "VernacExtend",
                        "74e4a788d564597ef719c20ee5a1a4d342bec0e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeze1_SEP'",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre; try apply H.",
                        "VernacExtend",
                        "cd071498b31c7aa1dac7ec71792716a70589ed9c"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "go_lowerx; entailer!.",
                        "VernacExtend",
                        "167df59d69a16e3b26875ed1895f9aa1391e89d6"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "generalize dependent R.",
                        "VernacExtend",
                        "0f8a1cd3948b6d9bedda69101791bdd7d4f028ff"
                    ]
                },
                {
                    "command": [
                        "induction n; destruct R; simpl; cancel.",
                        "VernacExtend",
                        "c57d431f4f9a5936385a106b9dcdf57a5de93b42"
                    ]
                },
                {
                    "command": [
                        "apply Freezer.FRZ1.",
                        "VernacExtend",
                        "74e4a788d564597ef719c20ee5a1a4d342bec0e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FRZL_ax",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "apply Freezer.FRZL2.",
                        "VernacExtend",
                        "28de39a0c12fba7646336f7072f7f1f5166f5a70"
                    ]
                },
                {
                    "command": [
                        "apply Freezer.FRZL1.",
                        "VernacExtend",
                        "5f070850b9edfcec8332d8d3cf007bab8736de91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_sepcon_deletenth",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "induction n; destruct l; simpl.",
                        "VernacExtend",
                        "33e5f9f08ab267b3897ba578b1ee7dc03818ea89"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; trivial.",
                        "VernacExtend",
                        "556b94902ef2e4165bbadaf41b88f2f2e7e40bc2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; trivial.",
                        "VernacExtend",
                        "556b94902ef2e4165bbadaf41b88f2f2e7e40bc2"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn.",
                        "VernacExtend",
                        "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- sepcon_assoc.",
                        "VernacExtend",
                        "18a75b77459f2f20ed92b66900bb7760f2b32df9"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm m).",
                        "VernacExtend",
                        "727663bdf255d6b4c01f1783107d19b077f8d20e"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_sepcon_deletenth'",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "induction n; destruct l; simpl.",
                        "VernacExtend",
                        "33e5f9f08ab267b3897ba578b1ee7dc03818ea89"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; trivial.",
                        "VernacExtend",
                        "556b94902ef2e4165bbadaf41b88f2f2e7e40bc2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; trivial.",
                        "VernacExtend",
                        "556b94902ef2e4165bbadaf41b88f2f2e7e40bc2"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; clear IHn.",
                        "VernacExtend",
                        "4aa256348cf16f1955e2da1ab9a20d96d478a5cc"
                    ]
                },
                {
                    "command": [
                        "extensionality.",
                        "VernacExtend",
                        "5f659a610dbf05b4e2ac5dec31944a29d867effa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- sepcon_assoc.",
                        "VernacExtend",
                        "18a75b77459f2f20ed92b66900bb7760f2b32df9"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm (l x)).",
                        "VernacExtend",
                        "0173f22c3dd3b7172be73cbd31f9eae166e65007"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeze_SEP'",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre; try eassumption.",
                        "VernacExtend",
                        "355ffaca5454745a0f95c77c3654f684bd6d602b"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "unfold PROPx.",
                        "VernacExtend",
                        "593deff54c68c9f1e69c515e783782e0f285a65f"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "unfold LOCALx.",
                        "VernacExtend",
                        "ea2b6e61532874513c5a254a27d6c9d225642880"
                    ]
                },
                {
                    "command": [
                        "apply derives_refl'.",
                        "VernacExtend",
                        "c778e5f165b217e12e92c88c8e5f68e18a05e94d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold SEPx.",
                        "VernacExtend",
                        "f854f9cf3a2437909acdcb52d99742a8cbb4fa69"
                    ]
                },
                {
                    "command": [
                        "rewrite FRZL_ax.",
                        "VernacExtend",
                        "808a9521ae977d4623cb935dd9317e7441011d1c"
                    ]
                },
                {
                    "command": [
                        "clear - H.",
                        "VernacExtend",
                        "0feb8621f12176e9894f4f3ff86ecf0003739aed"
                    ]
                },
                {
                    "command": [
                        "generalize dependent xs.",
                        "VernacExtend",
                        "f9ee514f9e2970475b230e56b17f7959870572a3"
                    ]
                },
                {
                    "command": [
                        "generalize dependent ys.",
                        "VernacExtend",
                        "63d69c61d52cf05a953e247ff8343f43ea2abfbf"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "induction l; intros.",
                        "VernacExtend",
                        "f3f6b28c6822ad560a06f008ea0a5aa487d0e8e3"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "extensionality x.",
                        "VernacExtend",
                        "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite emp_sepcon; trivial.",
                        "VernacExtend",
                        "ab01347df05ea6ca3f84d1019aa1dab6e19dcbee"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "remember (freezelist_nth l R).",
                        "VernacExtend",
                        "badd2549171a4aae9fab79a2bca845e459572007"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "specialize (IHl _ _ (eq_refl _)).",
                        "VernacExtend",
                        "5588775a3a4528c20b79115937e54810e1f4919b"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl.",
                        "VernacExtend",
                        "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
                    ]
                },
                {
                    "command": [
                        "clear IHl.",
                        "VernacExtend",
                        "8bbd9602dc9b79bb59ead5a20fa2e5495ddfe01a"
                    ]
                },
                {
                    "command": [
                        "extensionality.",
                        "VernacExtend",
                        "5f659a610dbf05b4e2ac5dec31944a29d867effa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm (nth a l1 emp)).",
                        "VernacExtend",
                        "06601309f245365954e5c7d08a00cec3816a90ad"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c08e0b8d2115b9a99f9d5cb3548a9da2273df02"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply fold_right_sepcon_deletenth.",
                        "VernacExtend",
                        "f238701b75c8f81612af61308463f16bd472b84f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_delete_nth",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "induction n; intros; destruct l; simpl; trivial.",
                        "VernacExtend",
                        "6536d2b670039df67fbf70613cd70b3cd1b5db2a"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn.",
                        "VernacExtend",
                        "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "my_nth_nth",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "induction n; destruct l; intros; simpl; trivial.",
                        "VernacExtend",
                        "0b54270f12c0c233c46bcd825f5e53fca72bc507"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "my_delete_nth_delete_nth",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "induction n; destruct l; intros; simpl; trivial.",
                        "VernacExtend",
                        "0b54270f12c0c233c46bcd825f5e53fca72bc507"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "my_freezelist_nth_freezelist_nth",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; trivial.",
                        "VernacExtend",
                        "7a2dd68219ca943570f5c99cdf42c4e1d65513bb"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl; clear IHl.",
                        "VernacExtend",
                        "9909f22e124a5fa020d054ae5164f34c974320b9"
                    ]
                },
                {
                    "command": [
                        "remember (freezelist_nth l al) as F.",
                        "VernacExtend",
                        "f966a277307a2a182ff04dbbfa8ff759362d3018"
                    ]
                },
                {
                    "command": [
                        "destruct F.",
                        "VernacExtend",
                        "e1303f88777128c097feaccddeb2cd8942e777dc"
                    ]
                },
                {
                    "command": [
                        "rewrite my_nth_nth, my_delete_nth_delete_nth; trivial.",
                        "VernacExtend",
                        "3c63f19513dafbf768fc8ee4660b3e242efa7eb4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeze_SEP''",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite my_freezelist_nth_freezelist_nth in H.",
                        "VernacExtend",
                        "f3623385da6bf321571a72c69d09bd4e21cf0597"
                    ]
                },
                {
                    "command": [
                        "eapply freeze_SEP'; eassumption.",
                        "VernacExtend",
                        "d22d3f0026d3ad43ccfa8d15d8be1771dc940f58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_total",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Zle_bool_total a1 a2); auto.",
                        "VernacExtend",
                        "fb29fc5b0c5f60d70c8aedc7f18fb56b0d3b33ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flatten_emp_in_mpreds'",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "unfold SEPx.",
                        "VernacExtend",
                        "f854f9cf3a2437909acdcb52d99742a8cbb4fa69"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "revert R H.",
                        "VernacExtend",
                        "4c728fd69935173ef01e0442a68c354cff1df21e"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "induction n; destruct R; intros.",
                        "VernacExtend",
                        "b3f6aaa2242ef502f3b5411954d089a59c1a2476"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl nth_error in H.",
                        "VernacExtend",
                        "cd4d961526874cf682ee232446b96ef32d4320f2"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply emp_sepcon.",
                        "VernacExtend",
                        "9dd300795f2527b9b4d9d9a3a7a4b7f6488a12a7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "specialize (IHn _ H1).",
                        "VernacExtend",
                        "aac65447c2a76abf3d44b9369e96754cc73c656b"
                    ]
                },
                {
                    "command": [
                        "clear H1.",
                        "VernacExtend",
                        "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
                    ]
                },
                {
                    "command": [
                        "simpl firstn.",
                        "VernacExtend",
                        "c07ce675a2f9e689ebfbeff357033f653bc28406"
                    ]
                },
                {
                    "command": [
                        "change (m :: firstn n R) with (app (m::nil) (firstn n R)).",
                        "VernacExtend",
                        "4d57812d6a2f546ed824420121edd13827001a25"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass.",
                        "VernacExtend",
                        "1e8737a155ba47802e4df29a56a47a094af2082d"
                    ]
                },
                {
                    "command": [
                        "unfold app at 1.",
                        "VernacExtend",
                        "194f3b633ca210ad576c2a376ed8972fbe1f342d"
                    ]
                },
                {
                    "command": [
                        "simpl; f_equal; auto.",
                        "VernacExtend",
                        "649eee8ad709ffbf62b1618162e754841096d2ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flatten_emp_in_SEP'",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "subst R'.",
                        "VernacExtend",
                        "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
                    ]
                },
                {
                    "command": [
                        "apply flatten_emp_in_mpreds'.",
                        "VernacExtend",
                        "46415f63197b1b2983f6763663cbca349c15bc21"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_FRZ_in_SEP_spec",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; auto.",
                        "VernacExtend",
                        "547f574af52ed1ecf6eeb00679f096581655b054"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsplit_FRZ_in_SEP.",
                        "VernacExtend",
                        "765ff58ec92b357de4aee5528096e9d25f7549cd"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; cancel.",
                        "VernacExtend",
                        "e594d23f2d5e5624933c2bb92a01553d57ec08f3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsplit_FRZ_in_SEP.",
                        "VernacExtend",
                        "765ff58ec92b357de4aee5528096e9d25f7549cd"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; cancel.",
                        "VernacExtend",
                        "e594d23f2d5e5624933c2bb92a01553d57ec08f3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsplit_FRZ_in_SEP.",
                        "VernacExtend",
                        "765ff58ec92b357de4aee5528096e9d25f7549cd"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; cancel.",
                        "VernacExtend",
                        "e594d23f2d5e5624933c2bb92a01553d57ec08f3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsplit_FRZ_in_SEP.",
                        "VernacExtend",
                        "765ff58ec92b357de4aee5528096e9d25f7549cd"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; cancel.",
                        "VernacExtend",
                        "e594d23f2d5e5624933c2bb92a01553d57ec08f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "localize",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [? ?].",
                        "VernacExtend",
                        "0f697508c155a692f324e9ae2fc37c0385689df4"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre; [clear H0 | exact H0].",
                        "VernacExtend",
                        "dba5064ea620dc7abac316984c9e705c00176958"
                    ]
                },
                {
                    "command": [
                        "apply split_FRZ_in_SEP_spec in H.",
                        "VernacExtend",
                        "39ebe0677cf3bf0ca82cc51f0097bbfa6460e3cf"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "unfold SEPx; intro.",
                        "VernacExtend",
                        "4ba2ea4133f12bf588b10b79822f8871db245553"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_right_sepcon_app.",
                        "VernacExtend",
                        "ccdab8789b72da2f2964f4902618bed2be7467f8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cancel.",
                        "VernacExtend",
                        "24ea99f626ec31ff5120f99494a934737348354b"
                    ]
                },
                {
                    "command": [
                        "apply Freezer.FRZR1.",
                        "VernacExtend",
                        "f5bc2d6db3beca6976e814428a906b21de96524e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlocalize_aux",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply split_FRZ_in_SEP_spec in H.",
                        "VernacExtend",
                        "39ebe0677cf3bf0ca82cc51f0097bbfa6460e3cf"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_right_sepcon_app.",
                        "VernacExtend",
                        "ccdab8789b72da2f2964f4902618bed2be7467f8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cancel.",
                        "VernacExtend",
                        "24ea99f626ec31ff5120f99494a934737348354b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [? ?]; subst.",
                        "VernacExtend",
                        "27f0ddbee24ddab1a1a1ead23fa01e423d5cc449"
                    ]
                },
                {
                    "command": [
                        "apply Freezer.FRZR2.",
                        "VernacExtend",
                        "27e1f2c4007059d127fef4190a03f2880e79cef9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlocalize_triple",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre; [clear H1 | exact (H1 I)].",
                        "VernacExtend",
                        "50709c87b9416b6aa79c37d8747acbf93e2d4bea"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "unfold SEPx; intro.",
                        "VernacExtend",
                        "4ba2ea4133f12bf588b10b79822f8871db245553"
                    ]
                },
                {
                    "command": [
                        "eapply unlocalize_aux; eauto.",
                        "VernacExtend",
                        "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlocalize_derives_canon",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [clear H1 | exact (H1 I)].",
                        "VernacExtend",
                        "4ba6a0e60517f74bab69f316dc43a41d71217d3c"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "unfold SEPx; intro.",
                        "VernacExtend",
                        "4ba2ea4133f12bf588b10b79822f8871db245553"
                    ]
                },
                {
                    "command": [
                        "eapply unlocalize_aux; eauto.",
                        "VernacExtend",
                        "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlocalize_derives_unlift",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply construct_fold_right_sepcon_spec in H.",
                        "VernacExtend",
                        "77f05561cb9467a2d3fc2dc1a2554d244f513dee"
                    ]
                },
                {
                    "command": [
                        "subst Pre.",
                        "VernacExtend",
                        "4dca2dbb1073d822e716b3adbceb4aedf465ca07"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [clear H2 | exact (H2 I)].",
                        "VernacExtend",
                        "b005909eac6847d6fbad6aae772d57bde3eb5628"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_left_sepconx_eq.",
                        "VernacExtend",
                        "1bf9a751a2d556bf78dc4b0dd849668154927cb2"
                    ]
                },
                {
                    "command": [
                        "eapply unlocalize_aux; eauto.",
                        "VernacExtend",
                        "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ramif_frame_gen_spec",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply imp_andp_adjoint in IHramif_frame_gen.",
                        "VernacExtend",
                        "45c51d08db1fc33a75170a9e5a453bed2c2b2546"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [| apply IHramif_frame_gen].",
                        "VernacExtend",
                        "f29d1d0c6447d354d5063a6d156c877e47abdb32"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; auto.",
                        "VernacExtend",
                        "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
                    ]
                },
                {
                    "command": [
                        "apply prop_right; auto.",
                        "VernacExtend",
                        "95e18efadb5767545f0255f518eaa92b08876b58"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (allp_left _ x).",
                        "VernacExtend",
                        "5f4aa64d8926a1c5408551ee04ebc7b13c8e4f31"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlocalizeQ_triple",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre; [clear H2 | exact (H2 I)].",
                        "VernacExtend",
                        "4b7211d133d472398bbe5d833b1000e06b21174e"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "unfold SEPx; intro.",
                        "VernacExtend",
                        "4ba2ea4133f12bf588b10b79822f8871db245553"
                    ]
                },
                {
                    "command": [
                        "apply ramif_frame_gen_spec in H0; auto.",
                        "VernacExtend",
                        "b765bc86440da974414689316956ea2774591156"
                    ]
                },
                {
                    "command": [
                        "eapply unlocalize_aux; eauto.",
                        "VernacExtend",
                        "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlocalizeQ_derives_canon",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [clear H2 | exact (H2 I)].",
                        "VernacExtend",
                        "b005909eac6847d6fbad6aae772d57bde3eb5628"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "unfold SEPx; intro.",
                        "VernacExtend",
                        "4ba2ea4133f12bf588b10b79822f8871db245553"
                    ]
                },
                {
                    "command": [
                        "apply ramif_frame_gen_spec in H0; auto.",
                        "VernacExtend",
                        "b765bc86440da974414689316956ea2774591156"
                    ]
                },
                {
                    "command": [
                        "eapply unlocalize_aux; eauto.",
                        "VernacExtend",
                        "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlocalizeQ_derives_unlift",
            "line_nb": 360,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply construct_fold_right_sepcon_spec in H.",
                        "VernacExtend",
                        "77f05561cb9467a2d3fc2dc1a2554d244f513dee"
                    ]
                },
                {
                    "command": [
                        "subst Pre.",
                        "VernacExtend",
                        "4dca2dbb1073d822e716b3adbceb4aedf465ca07"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [clear H3 | exact (H3 I)].",
                        "VernacExtend",
                        "e59c0b3b726f36d329b031077389ecbc720044e6"
                    ]
                },
                {
                    "command": [
                        "apply ramif_frame_gen_spec in H1; auto.",
                        "VernacExtend",
                        "fed01e693c478967195a8a1a94a380bb4f4848ac"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_left_sepconx_eq.",
                        "VernacExtend",
                        "1bf9a751a2d556bf78dc4b0dd849668154927cb2"
                    ]
                },
                {
                    "command": [
                        "eapply unlocalize_aux; eauto.",
                        "VernacExtend",
                        "bb83bed86f2488e521139f0cc4bd5a24cf968a1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}