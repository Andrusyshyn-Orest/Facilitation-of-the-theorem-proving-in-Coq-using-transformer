{
    "filename": "floyd/seplog_tactics.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.base.",
            "VernacRequire",
            "71eaece31f1eafc55d4fb2e652963b16885d7953"
        ],
        [
            "Require Import VST.floyd.val_lemmas.",
            "VernacRequire",
            "1360eb8a152923e773ffd6c8c81b508d40af4468"
        ],
        [
            "Local Open Scope logic.",
            "VernacOpenCloseScope",
            "5937723d189e5aa98ad78e1018bed51ea2c1b0cd"
        ],
        [
            "Hint Rewrite <- prop_and : gather_prop.",
            "VernacExtend",
            "e83355da151df6ed54e48cbdabe9aa656ffcf898"
        ],
        [
            "Lemma gather_prop_left {A}{NA: NatDed A}: forall P Q R, !! P && (!! Q && R) = !!(P/\\Q) && R.",
            "VernacStartTheoremProof",
            "7a975dd885b2a2c2a0b40061b707ae14703f7262"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- andp_assoc.",
            "VernacExtend",
            "af620aa2f90527d6460b0d98a5bf2930b4fc0390"
        ],
        [
            "rewrite <- prop_and; auto.",
            "VernacExtend",
            "6bb1eaf90899cc25b60f052ca8cad5d26979c2ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gather_prop_right {A}{NA: NatDed A}: forall P Q R, R && !! P && !! Q = !!(P/\\Q) && R.",
            "VernacStartTheoremProof",
            "60013eac46e7cfff3763520321f8f00c4abc373c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "rewrite <- prop_and; auto.",
            "VernacExtend",
            "6bb1eaf90899cc25b60f052ca8cad5d26979c2ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite gather_prop_left gather_prop_right : gather_prop.",
            "VernacExtend",
            "f4d1ed92f51d594428279b4b46a4d79813b8c20d"
        ],
        [
            "Lemma andp_in_order1 {A}{NA: NatDed A}: forall P Q, P && Q = P && (P --> Q).",
            "VernacStartTheoremProof",
            "03937298732878e427cfb5fdcc9ae044e1204472"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply imp_andp_adjoint.",
            "VernacExtend",
            "c8d879371afc1a39c626a3c8c5302ad38a2c6f45"
        ],
        [
            "apply andp_left1; auto.",
            "VernacExtend",
            "fbc9186131c9851d08ff7aadf76f5fc5ca898763"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply andp_left1; auto.",
            "VernacExtend",
            "fbc9186131c9851d08ff7aadf76f5fc5ca898763"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply modus_ponens.",
            "VernacExtend",
            "fdaed019e1f69005d045c54027eeb3f933047136"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andp_in_order2 {A}{NA: NatDed A}: forall P Q, P && Q = Q && (Q --> P).",
            "VernacStartTheoremProof",
            "4a7bc39b218393ab57c893fd593c2b4b95802130"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (andp_comm P Q).",
            "VernacExtend",
            "93fae2d0a51bb1f9bdede1e02c2245f0d40615a5"
        ],
        [
            "apply andp_in_order1.",
            "VernacExtend",
            "f5628c373db3d741821730110d9deb0224c80557"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andp_right1{A}{NA: NatDed A}: forall P Q R, P |-- Q -> P && Q |-- R -> P |-- Q && R.",
            "VernacStartTheoremProof",
            "9d5da366c7ef088ba55bf9372a96c193ebba30df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite andp_in_order1.",
            "VernacExtend",
            "1157e9314386d21cc8f4e7ab6b3c6f74e6dc7161"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply imp_andp_adjoint; auto.",
            "VernacExtend",
            "08b3bcda24a99b5280f754c4bf7446d144eca270"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andp_right2{A}{NA: NatDed A}: forall P Q R, P |-- R -> P && R |-- Q -> P |-- Q && R.",
            "VernacStartTheoremProof",
            "3c6c447c90f1d14bac93a2b4a44c5e3f3a703cd7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "apply andp_right1; auto.",
            "VernacExtend",
            "7186306bd9a9422ec13d3a29a0c9855b06725331"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition not_a_prop {A} (P: A) := True.",
            "VernacDefinition",
            "e724f6da57bb2f24f479b334a2b9232547cadf35"
        ],
        [
            "Ltac not_a_prop := match goal with | |- not_a_prop (prop _) => fail 1 | |- _ => apply Coq.Init.Logic.I end.",
            "VernacExtend",
            "2d41307218c65f5e6523620a9121ddddffbb5c4a"
        ],
        [
            "Lemma flip_prop {A}{NA: NatDed A}: forall P Q, not_a_prop P -> (P&& !! Q = !! Q && P).",
            "VernacStartTheoremProof",
            "6db68a4fc0e2c3997288886b4e30e45701fc1531"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply andp_comm.",
            "VernacExtend",
            "c3dd1c812b539bbcf23c38f415fc0d445780852e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @flip_prop using not_a_prop : gather_prop.",
            "VernacExtend",
            "fca6feda398e1c25ece7e44a95fd9e3e94d4cf14"
        ],
        [
            "Lemma gather_prop3 {A}{NA: NatDed A}: forall P Q R, not_a_prop R -> not_a_prop Q -> R && (!! P && Q) = !!P && (R && Q).",
            "VernacStartTheoremProof",
            "303fb9a94a4f2a0717eb5755d364985f07ea3ccb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "rewrite (andp_comm Q); auto.",
            "VernacExtend",
            "57c225ff0901b70c4f1bfd0ddf4fe85a73a2532e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @gather_prop3 using not_a_prop : gather_prop.",
            "VernacExtend",
            "8c391f7122f8210d5694c343d1e555afc7c3fa97"
        ],
        [
            "Lemma gather_prop4 {A}{NA: NatDed A}: forall P Q R, not_a_prop R -> not_a_prop Q -> (!!P && R) && Q = !!P && (R && Q).",
            "VernacStartTheoremProof",
            "70acc7d80c6936147dd8708b7a7523751e5b4efa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @gather_prop4 using not_a_prop : gather_prop.",
            "VernacExtend",
            "7eeb9f3064022a4c3ef9256fb8fb1876f47a2c06"
        ],
        [
            "Lemma gather_prop5 {A}{NA: NatDed A}: forall P Q R, not_a_prop R -> not_a_prop Q -> (R && !!P && Q) = !!P && (R && Q).",
            "VernacStartTheoremProof",
            "a54d027fc85434b14489513b3e4e6a93716cc787"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "rewrite andp_assoc.",
            "VernacExtend",
            "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
        ],
        [
            "f_equal; apply andp_comm.",
            "VernacExtend",
            "e882085d7b421cf300231195c54f80b4be6cb53c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @gather_prop5 using not_a_prop : gather_prop.",
            "VernacExtend",
            "078641e3467e50bd75952648eb55da95b9b7aff3"
        ],
        [
            "Hint Rewrite @sepcon_andp_prop @sepcon_andp_prop' : gather_prop.",
            "VernacExtend",
            "a2ea38d5ff6c3de46f6de8ba8ae0803511373bd3"
        ],
        [
            "Lemma go_lower_lem1: forall (P1 P: Prop) (QR PQR: mpred), (P1 -> prop P && QR |-- PQR) -> (prop (P1 /\\ P ) && QR |-- PQR).",
            "VernacStartTheoremProof",
            "37279054fab6829e5fa546bfb2e123347052d14a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply derives_extract_prop; intros [? ?].",
            "VernacExtend",
            "0524509259caef62b4ef3ae48427c46d7bc04d11"
        ],
        [
            "apply derives_trans with (!!P && QR).",
            "VernacExtend",
            "0f7274413f0810d3c488c80f5a539154462f5b17"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply prop_right; auto.",
            "VernacExtend",
            "95e18efadb5767545f0255f518eaa92b08876b58"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma go_lower_lem1': forall (P1 P2 P: Prop) (QR PQR: mpred), (prop (P1 /\\ (P2 /\\ P)) && QR |-- PQR) -> (prop ((P1 /\\ P2) /\\ P ) && QR |-- PQR).",
            "VernacStartTheoremProof",
            "3b06eb8d12a1cf0e4383c6ce21b541c401c01633"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply derives_trans; [ | apply H].",
            "VernacExtend",
            "55f3551caa1b0d454cacc5ba38b0f34a99d213c5"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "apply prop_derives; intuition.",
            "VernacExtend",
            "00eb4957947f543d27c19f5a0c78187ff4dacc38"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Extern 2 (?A |-- ?B) => (constr_eq A B; simple apply derives_refl) : cancel.",
            "VernacHints",
            "3140dee5c41b0ffc334518078dbf7a498bd7ae4f"
        ],
        [
            "Hint Extern 2 (?A |-- |> ?B) => (constr_eq A B; simple apply now_later) : cancel.",
            "VernacHints",
            "6f71b6573ae846f6f7d55a5ff7057ac9787ae048"
        ],
        [
            "Lemma cancel1_start: forall P Q : mpred, P |-- Q * emp -> P |-- Q.",
            "VernacStartTheoremProof",
            "070778c0f5c905f2cee14cf7890537b171349b79"
        ],
        [
            "Set Printing All.",
            "VernacSetOption",
            "9481d5f6ef2b8a1cd01e6b06eaa71ffbc49f5e79"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_emp in H; auto.",
            "VernacExtend",
            "b08ca73001f15c33f1d2ebd33227650f0e5a5e7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel1_here: forall P P' Q1 Q2 Q3 : mpred, P' |-- Q2 -> P |-- Q1 * Q3 -> P * P' |-- Q1 * Q2 * Q3.",
            "VernacStartTheoremProof",
            "4363bd887b743af70317edcc198abf0a4506a54e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (sepcon_comm Q1).",
            "VernacExtend",
            "0a3d3f57a9227c5f3023536975294f6a52baf568"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel1_next: forall P Q1 Q2 Q3 : mpred, P |-- Q1 * (Q2 * Q3) -> P |-- Q1 * Q2 * Q3.",
            "VernacStartTheoremProof",
            "6012e3fb03ec9ae0aadb6fd4d7edea441ac4f3dc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_assoc; auto.",
            "VernacExtend",
            "c82ac2a52d863cbff8c2f96c6df3aa5f8a536b29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel1_last: forall P P' Q2 Q3 : mpred, P' |-- Q2 -> P |-- Q3 -> P * P' |-- Q2 * Q3.",
            "VernacStartTheoremProof",
            "1ef82ab5966049305680991b94d0606dcd2fd399"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_comm; apply sepcon_derives; auto.",
            "VernacExtend",
            "5691b6f5dce76cf00701ba594e78f8cd3c94a5dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel1_finish1: forall P Q1 Q2 Q3 : mpred, P |-- Q1 * Q2 * Q3 -> P |-- Q1 * (Q2 * Q3).",
            "VernacStartTheoremProof",
            "b582e317d23738c7e6439d8b39832540c5a519c9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- sepcon_assoc.",
            "VernacExtend",
            "2cd6259c740fd8c1cc98f019baf661c39fb97af1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel1_finish2: forall P Q : mpred, P |-- Q -> P |-- Q * emp.",
            "VernacStartTheoremProof",
            "6c359c9537d4f5deb5194d4e1238053921ffb0dc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_emp; auto.",
            "VernacExtend",
            "547f574af52ed1ecf6eeb00679f096581655b054"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac cancel1 := first [ simple apply cancel1_here; [ try match goal with H := _ : list mpred |- _ => clear H end; solve [eauto with nocore cancel] | ] | simple apply cancel1_next; cancel1 | simple apply cancel1_last; [ try match goal with H := _ : list mpred |- _ => clear H end; solve [eauto with nocore cancel] | ] ].",
            "VernacExtend",
            "3f65bd464182ad913c67258e55267fb4526a41ae"
        ],
        [
            "Ltac cancel2 := simple apply cancel1_start; cancel1; repeat simple apply cancel1_finish1; try simple apply cancel1_finish2.",
            "VernacExtend",
            "35774208d7c084cadf3afe23c37fd83cda3ebfe0"
        ],
        [
            "Ltac lift1 a e1 rho := match e1 with | lift0 rho => constr:(a) | lift0 ?a1 => constr: (lift0 (a a1)) | _ => constr:(lift1 a e1) end.",
            "VernacExtend",
            "88d96e6690f67b13c9186626e8acd419e72d8c50"
        ],
        [
            "Ltac lift2 a e1 e2 rho := match e1 with | lift0 ?a1 => lift1 (a a1) e2 rho | _ => constr:(lift2 a e1 e2) end.",
            "VernacExtend",
            "37fc27db85ef3b8495cdd15bad008808bfc761db"
        ],
        [
            "Ltac lift3 a e1 e2 e3 rho := match e1 with | lift0 ?a1 => lift2 (a a1) e2 e3 rho | _ => constr:(lift3 a e1 e2 e3) end.",
            "VernacExtend",
            "01d2ac040e9811b92afd6576d4e63d46d080babb"
        ],
        [
            "Ltac lift4 a e1 e2 e3 e4 rho := match e1 with | lift0 ?a1 => lift3 (a a1) e2 e3 e4 rho | _ => constr:(lift4 a e1 e2 e3 e4) end.",
            "VernacExtend",
            "c4cca33d7a894dc0a48b987eb9aed9aae2be614a"
        ],
        [
            "Ltac abstract_env rho P := match P with | @emp mpred _ _ => constr:(@emp (environ->mpred) _ _) | @sepcon mpred _ _ ?e1 ?e2 => let e1' := abstract_env rho e1 in let e2' := abstract_env rho e2 in constr:(@sepcon (environ->mpred) _ _ e1' e2') | ?a0 ?a1 ?a2 ?e1 ?e2 ?e3 ?e4 => let e1' := abstract_env rho e1 in let e2' := abstract_env rho e2 in let e3' := abstract_env rho e3 in let e4' := abstract_env rho e4 in lift3 (a0 a1 a2) e1' e2' e3' e4' rho | ?a0 ?a1 ?e1 ?e2 ?e3 ?e4 => let e1' := abstract_env rho e1 in let e2' := abstract_env rho e2 in let e3' := abstract_env rho e3 in let e4' := abstract_env rho e4 in lift3 (a0 a1) e1' e2' e3' e4' rho | ?a0 ?e1 ?e2 ?e3 ?e4 => let e1' := abstract_env rho e1 in let e2' := abstract_env rho e2 in let e3' := abstract_env rho e3 in let e4' := abstract_env rho e4 in lift4 a0 e1' e2' e3' e4' rho | ?a0 ?e1 ?e2 ?e3 => let e1' := abstract_env rho e1 in let e2' := abstract_env rho e2 in let e3' := abstract_env rho e3 in lift3 a0 e1' e2' e3' rho | ?a0 ?e1 ?e2 => let e1' := abstract_env rho e1 in let e2' := abstract_env rho e2 in lift2 a0 e1' e2' rho | ?a0 ?e1 => let e1' := abstract_env rho e1 in lift1 a0 e1' rho | rho => constr: (lift1) | ?a => constr:(lift0 a) end.",
            "VernacExtend",
            "38289f4d475ced4ee6a7eba1430f736390517d30"
        ],
        [
            "Lemma cancel_frame0{A}{ND: NatDed A}{SL: SepLog A}: forall rho: environ, emp rho |-- fold_right sepcon emp nil rho.",
            "VernacStartTheoremProof",
            "f6944035de45f4c42b24bde3075e3193a5d80593"
        ],
        [
            "intro; apply derives_refl.",
            "VernacExtend",
            "ec298942cb8099dd40f3fe7e244cffa08a9d3654"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel_frame0_low: emp |-- fold_right_sepcon nil.",
            "VernacStartTheoremProof",
            "59aa796b35bf2b3f2d65a0b329af65fb660fc2a4"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel_frame2: forall (P Q: environ->mpred) F (rho: environ), Q rho |-- fold_right sepcon emp F rho -> (P * Q) rho |-- fold_right sepcon emp (P::F) rho.",
            "VernacStartTheoremProof",
            "89d4addbd146b1e622b8eb54d4fbcc42f9d4b8ec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel_frame2_low: forall (P Q: mpred) F, Q |-- fold_right_sepcon F -> (P * Q) |-- fold_right_sepcon (P::F).",
            "VernacStartTheoremProof",
            "4371183a13f1b5916d2b4b8d3c53a7ad2f7ac81f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel_frame1: forall (P: environ->mpred) (rho: environ), P rho |-- fold_right sepcon emp (P::nil) rho.",
            "VernacStartTheoremProof",
            "95a0c942c86efd43db6f12baa9a25ee5c292ef61"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fold_right.",
            "VernacExtend",
            "ab40f2cde00ad2f478c43d09492235dd57337224"
        ],
        [
            "rewrite sepcon_emp; apply derives_refl.",
            "VernacExtend",
            "bcd5e5643998cd8f043e5ffb7bb4c64b0ba7c1ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel_frame1_low: forall (P: mpred), P |-- fold_right_sepcon (P::nil).",
            "VernacStartTheoremProof",
            "ec78a518bf2f5d10a2334a1d9c5b7e197334affa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fold_right_sepcon.",
            "VernacExtend",
            "4b2db233ebb4776bd02ecdc9717c59b92f9a5355"
        ],
        [
            "rewrite sepcon_emp; apply derives_refl.",
            "VernacExtend",
            "bcd5e5643998cd8f043e5ffb7bb4c64b0ba7c1ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac fixup_lifts := repeat match goal with | |- context[@lift0 mpred] => change (@lift0 mpred) with (@liftx (LiftEnviron mpred)) | |- context[@lift1 ?A] => change (@lift1 A mpred) with (@liftx (Tarrow A (LiftEnviron mpred))) | |- context[@lift2 ?A ?B] => change (@lift2 A B mpred) with (@liftx (Tarrow A (Tarrow B (LiftEnviron mpred)))) | |- context[@lift3 ?A ?B ?C] => change (@lift3 A B C mpred) with (@liftx (Tarrow A (Tarrow B (Tarrow C (LiftEnviron mpred))))) | |- context[@lift4 ?A ?B ?C ?D] => change (@lift4 A B C D mpred) with (@liftx (Tarrow A (Tarrow B (Tarrow C (Tarrow D (LiftEnviron mpred)))))) end.",
            "VernacExtend",
            "06b5295cb5ca8da77541ae6c035d95792fc8c2fd"
        ],
        [
            "Fixpoint fold_right_sepconx (l: list mpred) : mpred := match l with | nil => emp | a::nil => a | a::b => a * fold_right_sepconx b end.",
            "VernacFixpoint",
            "9b32a4ebf63bfc9c4725f216d3b2d5114c7cacbf"
        ],
        [
            "Definition fold_left_sepconx (l: list mpred) : mpred := match l with | nil => emp | a::l => (fix fold_left_sepconx (a: mpred) (l: list mpred) {struct l}: mpred := match l with | nil => a | b :: l => fold_left_sepconx (sepcon a b) l end) a l end.",
            "VernacDefinition",
            "02837345794e1d93f1c13dc130127b08a870c07c"
        ],
        [
            "Lemma fold_right_sepconx_eq: forall l, fold_right_sepconx l = fold_right_sepcon l.",
            "VernacStartTheoremProof",
            "673cc150e406f17c0e007bba60eba7c5f1dbaae3"
        ],
        [
            "induction l; simpl; auto.",
            "VernacExtend",
            "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
        ],
        [
            "rewrite IHl.",
            "VernacExtend",
            "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
        ],
        [
            "destruct l; simpl; auto.",
            "VernacExtend",
            "0d38c36eba25efd8427e35fac4fbc2b7b810d9c7"
        ],
        [
            "rewrite sepcon_emp; auto.",
            "VernacExtend",
            "547f574af52ed1ecf6eeb00679f096581655b054"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_left_sepconx_eq: forall l, fold_left_sepconx l = fold_right_sepcon l.",
            "VernacStartTheoremProof",
            "56037703eef46a05ddf462abf5b8b10f375e941b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- fold_right_sepconx_eq.",
            "VernacExtend",
            "387c2dc9dcdd5b7d16e095553d45964da09918db"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "revert m; induction l; intros.",
            "VernacExtend",
            "5f98ebea5bd8eb82243e16b408d830b2117f2033"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite <- IHl.",
            "VernacExtend",
            "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
        ],
        [
            "clear IHl.",
            "VernacExtend",
            "8bbd9602dc9b79bb59ead5a20fa2e5495ddfe01a"
        ],
        [
            "revert m a; induction l; intros.",
            "VernacExtend",
            "519c32e0059bd7e0b5a9a44522df65362f2cfba4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "rewrite IHl.",
            "VernacExtend",
            "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_right_sepconx_eqx: forall A B, A |-- fold_right_sepconx B -> A |-- fold_right_sepcon B.",
            "VernacStartTheoremProof",
            "6601306034a71242b993fda1e025234bad408734"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- fold_right_sepconx_eq; auto.",
            "VernacExtend",
            "4eeb66beb97a8272d3ceba627a46cf6ef6bb296e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac unfold_right_sepcon A := lazymatch A with | (?B * ?C)%logic => let x := unfold_right_sepcon C in let y := constr:(B :: x) in y | ?D => let y := constr:(D::nil) in y end.",
            "VernacExtend",
            "730507c70007f3cfbdff014bde086a009c84e16c"
        ],
        [
            "Ltac cancel_frame := match goal with | |- _ |-- fold_right_sepcon _ => rewrite !sepcon_assoc; cancel_frame | F := ?v |- ?A |-- fold_right_sepcon ?F => is_evar v; apply fold_right_sepconx_eqx; let w := unfold_right_sepcon A in instantiate (1:=w) in (Value of F); unfold F; unfold fold_right_sepconx; simple apply derives_refl | |- ?P |-- fold_right _ _ ?F ?rho => let P' := abstract_env rho P in change ( P' rho |-- fold_right sepcon emp F rho); fixup_lifts; cbv beta; repeat rewrite sepcon_assoc; repeat match goal with |- (_ * _) _ |-- _ => apply cancel_frame2 end; try (unfold F; apply cancel_frame1); try (instantiate (1:=nil) in (Value of F); unfold F; apply cancel_frame0) end.",
            "VernacExtend",
            "edd164af018ccdf35ea7f8c27814f763555f2c27"
        ],
        [
            "Ltac pull_left A := repeat match goal with | |- context [?Q * ?R * A] => rewrite <- (pull_right A Q R) | |- context [?Q * A] => rewrite <- (pull_right0 A Q) end.",
            "VernacExtend",
            "c51cebe4bf9945964fc525cdbb5688a460795c41"
        ],
        [
            "Lemma cancel_left: forall P Q R: mpred, Q |-- R -> P * Q |-- P * R.",
            "VernacStartTheoremProof",
            "2f6e2f2e507b1e2e6321951c383002037b1934a1"
        ],
        [
            "intros; apply sepcon_derives; auto.",
            "VernacExtend",
            "c15566d7bc4205cb250eba6857f2c88d5bdfd6a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pull_left_special: forall A B C : mpred, (B * (A * C)) = (A * (B * C)).",
            "VernacStartTheoremProof",
            "abaeeba71a7b16c5962750e48a6d6801be49aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply sepcon_comm.",
            "VernacExtend",
            "f1e8c1b9e163425894c514fae16c41254657a6d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pull_left_special0: forall A B : mpred, (B * A) = (A * B).",
            "VernacStartTheoremProof",
            "b42c4ffb614a2832eb3ddf3ec38fb4d16d8e4e83"
        ],
        [
            "intros; apply sepcon_comm.",
            "VernacExtend",
            "4e3857e9e95703fe5f531cc942b7272887763b47"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac qcancel P := lazymatch P with | sepcon ?A ?B => match goal with |- _ |-- ?Q => try match Q with context [A] => let a := fresh \"A\" in set (a:=A); rewrite ?(pull_left_special0 a), ?(pull_left_special a); apply cancel_left; clear a end; qcancel B end | ?A => try match goal with |- _ |-- ?Q => lazymatch Q with context [A] => let a := fresh \"A\" in set (a:=A); rewrite ?(pull_left_special0 a), ?(pull_left_special a); rewrite ?(pull_left_special0 A), ?(pull_left_special A); apply cancel_left; clear a end end end.",
            "VernacExtend",
            "d5bc7c43845a0dc5b52062249830e9ea2564e90b"
        ],
        [
            "Ltac is_Type_or_type T := match type of T with | Type => idtac | type => idtac end.",
            "VernacExtend",
            "7116e0661c2fae017bf1c1651e1607f12f5789b8"
        ],
        [
            "Lemma fun_equal: forall {A B} (f g : A -> B) (x y : A), f = g -> x = y -> f x = g y.",
            "VernacStartTheoremProof",
            "4fa8554f87ad9ca69884a13d4a61b91fd7f3c510"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fun_equal': forall {A B} (f g : forall (x:A), B x) (y : A), f = g -> f y = g y.",
            "VernacStartTheoremProof",
            "513191b26a811907c2e0c828169973f521af7ba9"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac ecareful_unify := match goal with | |- ?X = ?X' => first [is_Type_or_type X | is_evar X | is_evar X' | constr_eq X X']; reflexivity | |- ?F _ = ?F' _ => first [apply fun_equal | apply fun_equal' with (f := F)]; revgoals; solve[ecareful_unify] end; idtac.",
            "VernacExtend",
            "8e9f3909888fdebf659baa81a39dcda42f44c81b"
        ],
        [
            "Ltac careful_unify := match goal with | |- ?X = ?X' => first [is_Type_or_type X | constr_eq X X']; reflexivity | |- ?F _ = ?F' _ => first [apply fun_equal | apply fun_equal' with (f := F)]; revgoals; solve[careful_unify] end; idtac.",
            "VernacExtend",
            "600b5a93d37f5e49de6de6fb23b23c4d3a5fcddc"
        ],
        [
            "Ltac cancel := rewrite ?sepcon_assoc; repeat match goal with |- ?A * _ |-- ?B * _ => constr_eq A B; simple apply (cancel_left A) end; match goal with |- ?P |-- _ => qcancel P end; repeat first [rewrite emp_sepcon | rewrite sepcon_emp]; try match goal with |- ?A |-- ?B => constr_eq A B; simple apply (derives_refl A) end; match goal with |- ?P |-- _ => rewrite <- (emp_sepcon P) end; repeat rewrite <- sepcon_assoc; repeat match goal with | |- sepcon _ emp |-- _ => fail 1 | |- sepcon _ TT |-- _ => pull_left (@TT mpred _) | |- sepcon _ ?P' |-- _ => first [ cancel2 | pull_left P' ] end; repeat first [rewrite emp_sepcon | rewrite sepcon_emp]; pull_left (@TT mpred _); first [ simpl; apply derives_refl'; solve [careful_unify] | apply TT_right | apply @sepcon_TT; solve [auto with nocore typeclass_instances] | apply @TT_sepcon; solve [auto with nocore typeclass_instances] | cancel_frame | idtac ].",
            "VernacExtend",
            "517365ba6d8a8c393a2709b5bf96fc22ac7048ed"
        ],
        [
            "Inductive syntactic_cancel: list mpred -> list mpred -> list mpred -> list mpred -> Prop := | syntactic_cancel_nil: forall R, syntactic_cancel R nil R nil | syntactic_cancel_cons_succeed: forall n R0 R L0 L F Res, find_nth_preds (fun R0 => R0 |-- L0) R (Some (n, R0)) -> syntactic_cancel (delete_nth n R) L F Res -> syntactic_cancel R (L0 :: L) F Res | syntactic_cancel_cons_fail: forall R L0 L F Res, find_nth_preds (fun R0 => R0 |-- L0) R None -> syntactic_cancel R L F Res -> syntactic_cancel R (L0 :: L) F (L0 :: Res).",
            "VernacInductive",
            "6340e0f3b7f174e76f72a3ab316868cbec866b4e"
        ],
        [
            "Lemma syntactic_cancel_cons: forall nR0 R L0 L F Res, find_nth_preds (fun R0 => R0 |-- L0) R nR0 -> syntactic_cancel match nR0 with | Some (n, _) => delete_nth n R | None => R end L F Res -> syntactic_cancel R (L0 :: L) F (let Res' := Res in match nR0 with | Some _ => Res' | None => L0 :: Res' end).",
            "VernacStartTheoremProof",
            "628891ec41b582e124b5321be6d29fbcab0229d1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct nR0 as [[? ?]|].",
            "VernacExtend",
            "98898bd2b743681858cedced618f82bae104feb7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply syntactic_cancel_cons_succeed; eauto.",
            "VernacExtend",
            "33907e041e8dc8ae2ee813cc60a440a1792213b6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply syntactic_cancel_cons_fail; eauto.",
            "VernacExtend",
            "180c613d7960a71b0cb60d555e560939bdb208ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma delete_nth_SEP: forall R n R0, nth_error R n = Some R0 -> fold_right_sepcon R |-- R0 * fold_right_sepcon (delete_nth n R).",
            "VernacStartTheoremProof",
            "c01c8027af5af487ad96ff6e6b821560bd664bce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert R H; induction n; intros; destruct R; try solve [inv H].",
            "VernacExtend",
            "3eb354311983a7d5b3de8ae1a40b2d38e865bc9b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply IHn in H.",
            "VernacExtend",
            "3a667a71fe045df0ed5b07937a7e95e1b04fe3b3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- sepcon_assoc, (sepcon_comm _ m), sepcon_assoc.",
            "VernacExtend",
            "5f98b052e6ed9e891967a92877ef834587f77c07"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma syntactic_cancel_solve1: forall F, fold_right_sepcon F |-- fold_right_sepcon nil * fold_right_sepcon F.",
            "VernacStartTheoremProof",
            "10be9392c36c7f39fb92b255ef6f4b398e809671"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl; rewrite emp_sepcon; auto.",
            "VernacExtend",
            "d6fa6467c4c0881968e7331429b6178a644ee63f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma syntactic_cancel_solve2: forall G, fold_right_sepcon G |-- fold_right_sepcon nil * TT.",
            "VernacStartTheoremProof",
            "c730ab5eb0ab496b9f5751b967937b44f3906281"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl; rewrite emp_sepcon.",
            "VernacExtend",
            "cab2c7fcf61a84119b604f0e4fb762f45fcaae2c"
        ],
        [
            "apply TT_right.",
            "VernacExtend",
            "319ddd4078d0d2ff0343ca8b858a3e7703981364"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma syntactic_cancel_spec1: forall G1 L1 G2 L2 F, syntactic_cancel G1 L1 G2 L2 -> fold_right_sepcon G2 |-- fold_right_sepcon L2 * F -> fold_right_sepcon G1 |-- fold_right_sepcon L1 * F.",
            "VernacStartTheoremProof",
            "51a11003820ef77e0e697e48369f1afde03ac5c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert F H0; induction H; intros.",
            "VernacExtend",
            "8b3a6da657f3de9ebbc1b762b7059bb056d4e4b8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply IHsyntactic_cancel in H1.",
            "VernacExtend",
            "fc5512daeaf99acedb83eb268342309bfb064768"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "eapply derives_trans; [| apply sepcon_derives; [apply derives_refl | apply H1]].",
            "VernacExtend",
            "a2e63ab85f890f2131f9cda6f97290b3387a0c5f"
        ],
        [
            "clear IHsyntactic_cancel H1.",
            "VernacExtend",
            "5743d5439e0ec4af6b317e3e14c650d811c0a477"
        ],
        [
            "apply find_nth_preds_Some in H.",
            "VernacExtend",
            "801e11a931884a1a6106c65cc99cf8bdda106f9c"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "eapply derives_trans; [apply delete_nth_SEP; eauto |].",
            "VernacExtend",
            "c47708ac31052ada190640e2232ba271d3516f9a"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "rewrite (sepcon_comm L0), sepcon_assoc in H1.",
            "VernacExtend",
            "6b68c00216c964ddd28fb36118f5f99e1065bb1a"
        ],
        [
            "apply (IHsyntactic_cancel (L0*F0)) in H1.",
            "VernacExtend",
            "44a33463a0c672e27679f1dceb3c93353c3c5fd2"
        ],
        [
            "eapply derives_trans; [exact H1 |].",
            "VernacExtend",
            "c6cf32d747b522c7a4ff4eff6e4c2580bfe5d903"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- sepcon_assoc.",
            "VernacExtend",
            "2cd6259c740fd8c1cc98f019baf661c39fb97af1"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "rewrite sepcon_comm; auto.",
            "VernacExtend",
            "d2c29cb76cae8b6b80971554ec9314b6f193e751"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma syntactic_cancel_spec2: forall G1 L1 G2 L2 G3 L3 F, syntactic_cancel G1 L1 G2 L2 -> syntactic_cancel G2 L2 G3 L3 -> fold_right_sepcon G3 |-- fold_right_sepcon L3 * F -> fold_right_sepcon G1 |-- fold_right_sepcon L1 * F.",
            "VernacStartTheoremProof",
            "63b71a29a8b0a02611ddc61b4bc943b9a1a26fb6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply syntactic_cancel_spec1; eauto.",
            "VernacExtend",
            "351e171e7d54c2f3f3ed6501214ad4ff151ec7d0"
        ],
        [
            "eapply syntactic_cancel_spec1; eauto.",
            "VernacExtend",
            "351e171e7d54c2f3f3ed6501214ad4ff151ec7d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma syntactic_cancel_solve3: fold_right_sepcon nil |-- fold_right_sepcon nil.",
            "VernacStartTheoremProof",
            "e3f03203589929b1a91eaaed3f9d47b2eccdf7c1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma syntactic_cancel_spec3: forall G1 L1 G2 L2, syntactic_cancel G1 L1 G2 L2 -> fold_right_sepcon G2 |-- fold_right_sepcon L2 -> fold_right_sepcon G1 |-- fold_right_sepcon L1.",
            "VernacStartTheoremProof",
            "d9e00f62f4d9c22d548af5ba9f548d2bba1329c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (sepcon_emp (fold_right_sepcon L1)).",
            "VernacExtend",
            "379e22c073a879746035d765b148c1ca4489c79a"
        ],
        [
            "eapply syntactic_cancel_spec1; eauto.",
            "VernacExtend",
            "351e171e7d54c2f3f3ed6501214ad4ff151ec7d0"
        ],
        [
            "rewrite sepcon_emp; auto.",
            "VernacExtend",
            "547f574af52ed1ecf6eeb00679f096581655b054"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac local_cancel_in_syntactic_cancel unify_tac := cbv beta; match goal with |- ?A |-- ?B => solve [ constr_eq A B; simple apply (derives_refl A) | tryif first [has_evar A | has_evar B] then fail else auto with nocore cancel | apply derives_refl'; unify_tac ] end.",
            "VernacExtend",
            "053182f256c1999f197dea440135ebf202ccae2d"
        ],
        [
            "Ltac syntactic_cancel local_tac := repeat first [ simple apply syntactic_cancel_nil | simple apply syntactic_cancel_cons; [ find_nth local_tac | cbv iota; unfold delete_nth; cbv zeta iota ] ].",
            "VernacExtend",
            "ce98c0b9ac9ba824e324d9978294f740ffb8e1af"
        ],
        [
            "Ltac cancel_for_evar_frame' local_tac := eapply syntactic_cancel_spec1; [ syntactic_cancel local_tac | cbv iota; cbv zeta beta; first [ match goal with | |- _ |-- _ * fold_right_sepcon ?F => try unfold F end; simple apply syntactic_cancel_solve1 | match goal with | |- fold_right_sepcon ?A |-- fold_right_sepcon ?B * _ => rewrite <- (fold_left_sepconx_eq A), <- (fold_left_sepconx_eq B) end; unfold fold_left_sepconx; cbv iota beta ] ].",
            "VernacExtend",
            "faa58f4576be59c3f8283ad2e39e860da927e21a"
        ],
        [
            "Ltac cancel_for_TT local_tac := eapply syntactic_cancel_spec1; [ syntactic_cancel local_tac | cbv iota; cbv zeta beta; first [ simple apply syntactic_cancel_solve2 | match goal with | |- fold_right_sepcon ?A |-- fold_right_sepcon ?B * _ => rewrite <- (fold_left_sepconx_eq A), <- (fold_left_sepconx_eq B) end; unfold fold_left_sepconx; cbv iota beta ] ].",
            "VernacExtend",
            "c232fce96e6c8529c38d94cd8f42941c174a66d3"
        ],
        [
            "Ltac cancel_for_normal local_tac := eapply syntactic_cancel_spec3; [ syntactic_cancel local_tac | cbv iota; cbv zeta beta; first [ simple apply syntactic_cancel_solve3 | match goal with | |- fold_right_sepcon ?A |-- fold_right_sepcon ?B => rewrite <- (fold_left_sepconx_eq A), <- (fold_left_sepconx_eq B) end; unfold fold_left_sepconx; cbv iota beta ] ].",
            "VernacExtend",
            "0fa187e5b2859f8357014aeb65c64c5862c944c1"
        ],
        [
            "Inductive merge_abnormal_mpred: mpred -> option mpred -> option mpred -> Prop := | merge_abnormal_mpred_None: forall P, merge_abnormal_mpred P None (Some P) | merge_abnormal_mpred_TT_Some: forall P, merge_abnormal_mpred TT (Some P) (Some P) | merge_abnormal_mpred_Some_TT: forall P, merge_abnormal_mpred P (Some TT) (Some P).",
            "VernacInductive",
            "81cb77ea7ad84f94eb4f4ea4781aba070de83d79"
        ],
        [
            "Inductive fold_abnormal_mpred: list mpred -> list mpred -> option mpred -> Prop := | fold_abnormal_mpred_nil: fold_abnormal_mpred nil nil None | fold_abnormal_mpred_TT: forall R res R' res', fold_abnormal_mpred R R' res -> merge_abnormal_mpred TT res res' -> fold_abnormal_mpred (TT :: R) R' res' | fold_abnormal_mpred_fold: forall F R res R' res', fold_abnormal_mpred R R' res -> merge_abnormal_mpred (fold_right_sepcon F) res res' -> fold_abnormal_mpred ((fold_right_sepcon F) :: R) R' res' | fold_abnormal_mpred_normal: forall P R R' res, fold_abnormal_mpred R R' res -> fold_abnormal_mpred (P :: R) (P :: R') res.",
            "VernacInductive",
            "c9b97c806611ed25fa1ddfae9a8ee88f7717f1d2"
        ],
        [
            "Definition Some_or_emp (res: option mpred) := match res with | Some P => P | _ => emp end.",
            "VernacDefinition",
            "d9495256e933de6f2f94d9fe76e06143e1de18cb"
        ],
        [
            "Lemma merge_abnormal_mpred_spec: forall P res res', merge_abnormal_mpred P res res' -> Some_or_emp res' |-- P * Some_or_emp res.",
            "VernacStartTheoremProof",
            "b0287193818b32611021f12e973699bf33b2b805"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H; simpl.",
            "VernacExtend",
            "01adddf2c80c803ee3ef60ae310f50d1728520a7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sepcon_emp; auto.",
            "VernacExtend",
            "547f574af52ed1ecf6eeb00679f096581655b054"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply TT_sepcon.",
            "VernacExtend",
            "d2135d0f95004fec5ffc509e28680646c441013d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply sepcon_TT.",
            "VernacExtend",
            "1faccfdbda5d432574996f256b3e77d72dbb36de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_abnormal_mpred_spec: forall R R' res, fold_abnormal_mpred R R' res -> fold_right_sepcon R' * Some_or_emp res |-- fold_right_sepcon R.",
            "VernacStartTheoremProof",
            "bf010001999545a29bf95ccf62c600471ec80169"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H; simpl.",
            "VernacExtend",
            "9726f146667ea4ca85eccbf11148dbb538898a23"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite emp_sepcon; auto.",
            "VernacExtend",
            "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply merge_abnormal_mpred_spec in H0.",
            "VernacExtend",
            "760e4dc73b3053a94633592bdf1df781814e1442"
        ],
        [
            "eapply derives_trans; [apply sepcon_derives; [apply derives_refl | apply H0] |].",
            "VernacExtend",
            "495955158f81300d2485d5dce37029f79a6d6093"
        ],
        [
            "rewrite <- sepcon_assoc.",
            "VernacExtend",
            "2cd6259c740fd8c1cc98f019baf661c39fb97af1"
        ],
        [
            "rewrite (sepcon_comm _ TT).",
            "VernacExtend",
            "72f5f32d86c67e4d3bdcfcba9d3f19c4d9f4a77d"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply merge_abnormal_mpred_spec in H0.",
            "VernacExtend",
            "760e4dc73b3053a94633592bdf1df781814e1442"
        ],
        [
            "eapply derives_trans; [apply sepcon_derives; [apply derives_refl | apply H0] |].",
            "VernacExtend",
            "495955158f81300d2485d5dce37029f79a6d6093"
        ],
        [
            "rewrite <- sepcon_assoc.",
            "VernacExtend",
            "2cd6259c740fd8c1cc98f019baf661c39fb97af1"
        ],
        [
            "rewrite (sepcon_comm _ (fold_right_sepcon F)).",
            "VernacExtend",
            "5535558e0a1b349f813769dfa5ed7957376fed6a"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive construct_fold_right_sepcon_rec: mpred -> list mpred -> list mpred -> Prop := | construct_fold_right_sepcon_rec_sepcon: forall P Q R R' R'', construct_fold_right_sepcon_rec Q R R' -> construct_fold_right_sepcon_rec P R' R'' -> construct_fold_right_sepcon_rec (P * Q) R R'' | construct_fold_right_sepcon_rec_emp: forall R, construct_fold_right_sepcon_rec emp R R | construct_fold_right_sepcon_rec_single: forall P R, construct_fold_right_sepcon_rec P R (P :: R).",
            "VernacInductive",
            "d1e4c6b2f076da559308876317dd3b95e904b6e4"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Inductive construct_fold_right_sepcon: mpred -> list mpred-> Prop := | construct_fold_right_sepcon_constr: forall P R, construct_fold_right_sepcon_rec P nil R -> construct_fold_right_sepcon P R.",
            "VernacInductive",
            "d6f97e1cd91298fe2b46bf202891fbdd62d93c74"
        ],
        [
            "Scheme Minimality for construct_fold_right_sepcon Sort Prop.",
            "VernacScheme",
            "bf76d967c175e72d02fa0ab9315f50347c23cd45"
        ],
        [
            "Local Set Elimination Schemes.",
            "VernacSetOption",
            "a6f81d57166133786f903f938950a2a5b598a282"
        ],
        [
            "Lemma construct_fold_right_sepcon_spec: forall P R, construct_fold_right_sepcon P R -> fold_right_sepcon R = P.",
            "VernacStartTheoremProof",
            "42898856fb406f71e1aad33dde6a1d56297e40ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rename R into R'.",
            "VernacExtend",
            "5d2fc32a67f563151740ecb0546344eff420e50a"
        ],
        [
            "transitivity (fold_right_sepcon nil * P).",
            "VernacExtend",
            "d279c13a9d449fb9547359c59e34f46abf022964"
        ],
        [
            "2:{",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite !emp_sepcon.",
            "VernacExtend",
            "2d636eb3cf3e9c00d540a4da9d3f3811b0003688"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forget (@nil mpred) as R.",
            "VernacExtend",
            "6019a3aee77cea80705c29d3ec78334d6b0333b3"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "etransitivity; [eassumption |].",
            "VernacExtend",
            "7b571e500fabc7b376608335b4944fe4707d5605"
        ],
        [
            "transitivity (fold_right_sepcon R * Q * P); [f_equal; eassumption |].",
            "VernacExtend",
            "7e44ab3c4f02d776bd62fb9e68d61d9774d5a96d"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "rewrite (sepcon_comm P).",
            "VernacExtend",
            "127ceff376f0a46d1b43877a6d543ed5bcb14289"
        ],
        [
            "rewrite !sepcon_assoc; auto.",
            "VernacExtend",
            "e9d9a0addd589f63966e5002a664221a54741d97"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sepcon_emp; auto.",
            "VernacExtend",
            "547f574af52ed1ecf6eeb00679f096581655b054"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (sepcon_comm _ P).",
            "VernacExtend",
            "3e603dc329a5cbc5ab146100ea27a79ae0a6505d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition before_symbol_cancel (P Q: list mpred) (res: option mpred): Prop := match res with | Some R => fold_right_sepcon P |-- fold_right_sepcon Q * R | None => fold_right_sepcon P |-- fold_right_sepcon Q end.",
            "VernacDefinition",
            "e10e9422c99b2ffa7de74cca75588dd04683026e"
        ],
        [
            "Lemma symbolic_cancel_setup: forall P P' Q Q' Q'' Qr, construct_fold_right_sepcon P P' -> construct_fold_right_sepcon Q Q' -> fold_abnormal_mpred Q' Q'' Qr -> before_symbol_cancel P' Q'' Qr -> P |-- Q.",
            "VernacStartTheoremProof",
            "b1464d64f7150a609679e1d4ed492e1378549f5a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply construct_fold_right_sepcon_spec in H.",
            "VernacExtend",
            "77f05561cb9467a2d3fc2dc1a2554d244f513dee"
        ],
        [
            "apply construct_fold_right_sepcon_spec in H0.",
            "VernacExtend",
            "23f4464c8effac12b8b804cc6fad368d883d9c3f"
        ],
        [
            "apply fold_abnormal_mpred_spec in H1.",
            "VernacExtend",
            "4e1af631a3474f1eb8504e25825a966d495df83d"
        ],
        [
            "rewrite <- H, <- H0.",
            "VernacExtend",
            "28bea5b2b714f871b468f880bee092fa6d89b80a"
        ],
        [
            "eapply derives_trans; [| exact H1].",
            "VernacExtend",
            "d661681426df0f847101d7e57048fe987ff6596d"
        ],
        [
            "destruct Qr; auto.",
            "VernacExtend",
            "347f303a0b321ad38a0d14b0e620c1598f854153"
        ],
        [
            "simpl in H2 |- *.",
            "VernacExtend",
            "9b676a94a33e45c29675ffaee8c88592367b37f5"
        ],
        [
            "rewrite sepcon_emp; auto.",
            "VernacExtend",
            "547f574af52ed1ecf6eeb00679f096581655b054"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac construct_fold_right_sepcon_rec := match goal with | |- construct_fold_right_sepcon_rec (sepcon _ _) _ _ => eapply construct_fold_right_sepcon_rec_sepcon; [construct_fold_right_sepcon_rec | construct_fold_right_sepcon_rec] | |- construct_fold_right_sepcon_rec emp _ _ => apply construct_fold_right_sepcon_rec_emp | _ => apply construct_fold_right_sepcon_rec_single end.",
            "VernacExtend",
            "0eff5d251cd0ced209191c793624bb41538c3297"
        ],
        [
            "Ltac merge_abnormal_mpred := first [ simple apply merge_abnormal_mpred_None | simple apply merge_abnormal_mpred_TT_Some | simple apply merge_abnormal_mpred_Some_TT | fail 1000 \"There should not be two fold_right_sepcon in the right side.\" ].",
            "VernacExtend",
            "c5b49c89380d897a1c4612017cbc2efe1b43c2ec"
        ],
        [
            "Ltac construct_fold_right_sepcon := apply construct_fold_right_sepcon_constr; construct_fold_right_sepcon_rec.",
            "VernacExtend",
            "74581b07a94434f4202b3a1af241ade0cd8c70db"
        ],
        [
            "Ltac is_evar_def F := try first [is_var F; unfold F; fail 1 | fail 2 F \"is not evar definition\"].",
            "VernacExtend",
            "22f45e8dca9361100c299aaadc7bb6fa8e8d7ff8"
        ],
        [
            "Ltac fold_abnormal_mpred := match goal with | |- fold_abnormal_mpred nil _ _ => simple apply fold_abnormal_mpred_nil | |- fold_abnormal_mpred (?P :: _) _ _ => match P with | TT => simple eapply fold_abnormal_mpred_TT; [fold_abnormal_mpred | merge_abnormal_mpred] | prop True => simple eapply fold_abnormal_mpred_TT; [fold_abnormal_mpred | merge_abnormal_mpred] | fold_right_sepcon ?F => is_evar_def F; simple eapply fold_abnormal_mpred_fold; [fold_abnormal_mpred | merge_abnormal_mpred] | _ => simple apply fold_abnormal_mpred_normal; fold_abnormal_mpred end end.",
            "VernacExtend",
            "8c6820a0450e3d91586c55f6321940dcd926ae25"
        ],
        [
            "Ltac new_cancel local_tac := match goal with | |- @derives mpred Nveric _ _ => idtac | _ => fail 1000 \"Tactic cancel can only handle proof goals with form _ |-- _ (unlifted version).\" end; eapply symbolic_cancel_setup; [ construct_fold_right_sepcon | construct_fold_right_sepcon | fold_abnormal_mpred | match goal with | |- before_symbol_cancel _ _ None => cbv iota beta delta [before_symbol_cancel]; cancel_for_normal local_tac | |- before_symbol_cancel _ _ (Some (fold_right_sepcon _)) => cbv iota beta delta [before_symbol_cancel]; cancel_for_evar_frame' local_tac | |- before_symbol_cancel _ _ (Some TT) => cbv iota beta delta [before_symbol_cancel]; cancel_for_TT local_tac | |- before_symbol_cancel _ _ (Some (prop True)) => cbv iota beta delta [before_symbol_cancel]; cancel_for_TT local_tac end ].",
            "VernacExtend",
            "be3b03712cdb2da7da300180ced7b5dd293b8604"
        ],
        [
            "Ltac cancel_unify_tac := autorewrite with cancel; careful_unify.",
            "VernacExtend",
            "670f4452daedd0a80a8dc8bed174c3909b0a3600"
        ],
        [
            "Ltac cancel_local_tac := cbv beta; match goal with |- ?A |-- ?B => solve [ constr_eq A B; simple apply (derives_refl A) | auto with nocore cancel | apply derives_refl'; cancel_unify_tac] end.",
            "VernacExtend",
            "dcbc6be36ba2f4bf5108b6254acfe1f048f35fcb"
        ],
        [
            "Ltac cancel ::= new_cancel cancel_local_tac.",
            "VernacExtend",
            "efb2871affda2d6e9b083995dfb9c985244376c9"
        ],
        [
            "Ltac no_evar_cancel_local_tac := local_cancel_in_syntactic_cancel cancel_unify_tac.",
            "VernacExtend",
            "5f894e900a1be53b4a338bad0ded56e9638fa0b8"
        ],
        [
            "Ltac no_evar_cancel := new_cancel no_evar_cancel_local_tac.",
            "VernacExtend",
            "bdd2447acc9491fec9339b0cd83a31066dc329d9"
        ],
        [
            "Ltac ecancel_unify_tac := autorewrite with cancel; ecareful_unify.",
            "VernacExtend",
            "55a04db0f8e7d3d11c687fd690d1fc0b6ea45585"
        ],
        [
            "Ltac ecancel_local_tac := local_cancel_in_syntactic_cancel ecancel_unify_tac.",
            "VernacExtend",
            "cd8e943c5965aef698babd4eb06c76c053e7846c"
        ],
        [
            "Ltac pure_ecancel := new_cancel ecancel_local_tac.",
            "VernacExtend",
            "f6f2a2843b75a07571e3d7bec19ac7294075b578"
        ],
        [
            "Ltac ecancel := no_evar_cancel; pure_ecancel.",
            "VernacExtend",
            "91cf22cde0d070d20856909ee80a60bf7322acc3"
        ],
        [
            "Ltac old_local_tac := local_cancel_in_syntactic_cancel careful_unify.",
            "VernacExtend",
            "70cdd207e0de48e69b872919f3d90e055de2127a"
        ],
        [
            "Ltac cancel_for_evar_frame := cancel_for_evar_frame' ecancel_local_tac.",
            "VernacExtend",
            "bed1a715e29f031d2d7a0b7cee76ca52e3090551"
        ],
        [
            "Ltac info_cancel_local_tac := (tryif try (cancel_local_tac; gfail 1) then match goal with |- ?Goal => idtac Goal \"fail\" end else match goal with |- ?Goal => idtac Goal \"success\" end); cancel_local_tac.",
            "VernacExtend",
            "605572c27fcbc8841827b1325fffe95a29ff43b3"
        ],
        [
            "Ltac info_cancel := new_cancel info_cancel_local_tac.",
            "VernacExtend",
            "30363642f52390cf109589e919ed9ed5c2cb69e5"
        ],
        [
            "Ltac info_ecancel_local_tac := (tryif try (ecancel_local_tac; gfail 1) then match goal with |- ?Goal => idtac Goal \"fail\" end else match goal with |- ?Goal => idtac Goal \"success\" end); ecancel_local_tac.",
            "VernacExtend",
            "75a377b498c390747c83f2444b5a4621efd42267"
        ],
        [
            "Ltac info_ecancel := info_cancel; new_cancel info_ecancel_local_tac.",
            "VernacExtend",
            "82913fcada3d4d1913a53862176da016b5f873ff"
        ],
        [
            "Ltac apply_find_core X := match X with | ?U -> ?V => match type of U with Prop => apply_find_core V end | @derives mpred _ _ _ => constr:(X) | @eq mpred ?A ?B => constr:(@derives mpred A B) end.",
            "VernacExtend",
            "e00853e9809c2a373f87639663ccb4643613d552"
        ],
        [
            "Lemma adjust_sep_apply: forall (Q: mpred) (P: Prop), Q |-- !! P -> Q |-- !! P && Q.",
            "VernacStartTheoremProof",
            "5d18eef699d64b420bd0435e9b5a3b65692e8c6f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac adjust_sep_apply H := match type of H with | _ |-- !! _ => constr:(adjust_sep_apply _ _ H) | _ => H end.",
            "VernacExtend",
            "0ba2e9ece8657d955a0f5f9f868f6d8f6cb2ffe8"
        ],
        [
            "Ltac adjust2_sep_apply H := let x := adjust_sep_apply H in match type of x with | @eq mpred _ _ => constr:(derives_refl' _ _ x) | _ => x end.",
            "VernacExtend",
            "2b7c9b785a04a921998c7d916317d865aac733e7"
        ],
        [
            "Ltac cancel_for_sep_apply := ecancel.",
            "VernacExtend",
            "a33e811c6edeaed13c020c45943443d64d7e42dc"
        ],
        [
            "Ltac sep_apply_aux2 H' := match type of H' with ?TH => match apply_find_core TH with ?C |-- ?D => let frame := fresh \"frame\" in evar (frame: list mpred); apply derives_trans with (C * fold_right_sepcon frame); [ solve [cancel_for_sep_apply] | eapply derives_trans; [apply sepcon_derives; [clear frame; apply H' | apply derives_refl] | let x := fresh \"x\" in set (x := fold_right_sepcon frame); subst frame; unfold fold_right_sepcon in x; subst x; rewrite ?sepcon_emp ] ] end end.",
            "VernacExtend",
            "f15c76be1339be794e79555004c6bf4dfe1f343c"
        ],
        [
            "Ltac head_of_type_of H := match type of H with ?A => apply_find_core A end.",
            "VernacExtend",
            "b11195632757c11f27acfb0f4614dfd2224494cc"
        ],
        [
            "Ltac sep_apply_aux1 H := let B := head_of_type_of H in lazymatch B with | ?A |-- _ => lazymatch A with | context [!! ?P && _] => let H' := fresh in assert (H' := H); rewrite ?(andp_assoc (!! P)) in H'; let H := fresh in assert (H:P); [ clear H' | rewrite (prop_true_andp P) in H' by apply H; clear H; sep_apply_aux1 H'; clear H' ] | _ => sep_apply_aux2 H end end.",
            "VernacExtend",
            "069a6c83c73d0a8571158e21bf041e54d7c0ee5d"
        ],
        [
            "Ltac sep_apply_aux0 H := let B := head_of_type_of H in lazymatch B with | ?A ?D |-- _ => tryif (match type of D with ?DT => constr_eq DT globals end) then (tryif (unfold A in H) then sep_apply_aux1 H else let H' := fresh in tryif (assert (H' := H); unfold A in H') then sep_apply_aux1 H' else sep_apply_aux1 H) else sep_apply_aux1 H | _ => sep_apply_aux1 H end.",
            "VernacExtend",
            "acfa2bbe02f57c4782cb783bf2531631a6f89470"
        ],
        [
            "Ltac sep_apply_in_entailment H := match goal with |- _ |-- _ => let H' := adjust2_sep_apply H in sep_apply_aux0 H' end.",
            "VernacExtend",
            "163b7dd9a84ee562651ca97f1892bebd0c3ce879"
        ],
        [
            "Ltac my_unshelve_evar name T cb evar_tac := let x := fresh name in unshelve evar (x:T); revgoals; [ let x' := eval unfold x in x in clear x; cb x' | evar_tac x ].",
            "VernacExtend",
            "602e58147933308af17968796320413f642c3458"
        ],
        [
            "Ltac new_sep_apply_in_entailment originalH evar_tac prop_tac := let rec sep_apply_in_entailment_rec H := lazymatch type of H with | forall x:?T, _ => lazymatch type of T with | Prop => let H' := fresh \"H\" in assert (H':T); [ | sep_apply_in_entailment_rec (H H'); clear H']; [ prop_tac | .. ] | _ => my_unshelve_evar x T ltac:(fun x => sep_apply_in_entailment_rec (H x)) evar_tac end | ?T -> _ => lazymatch type of T with | Prop => let H' := fresh \"H\" in assert (H':T); [ | sep_apply_in_entailment_rec (H H'); clear H']; [ prop_tac | .. ] | _ => let x := fresh \"arg\" in my_unshelve_evar x T ltac:(fun x => sep_apply_in_entailment_rec (H x)) evar_tac end | ?A |-- ?B => sep_apply_in_entailment H | ?A = ?B => sep_apply_in_entailment H | _ => fail 0 originalH \"is not an entailment\" end in sep_apply_in_entailment_rec originalH.",
            "VernacExtend",
            "2de77abe9c1593c10bde0f8013aef0ec30db6bbd"
        ],
        [
            "Lemma wand_refl_cancel_right: forall {A}{ND: NatDed A} {SL: SepLog A}{CA: ClassicalSep A} (P: A), emp |-- P -* P.",
            "VernacStartTheoremProof",
            "e8023042ce22579b921f4ff26d40c41894502a8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wand_sepcon_adjoint.",
            "VernacExtend",
            "fbf6785c920a452e456ac93d7196ce469016cc71"
        ],
        [
            "rewrite emp_sepcon.",
            "VernacExtend",
            "df65e2010e4babcc45591f5b17e65df5cd76a9f9"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel_emp_wand: forall P Q R: mpred, P |-- Q -> P |-- Q * (R -* R).",
            "VernacStartTheoremProof",
            "ed5abaeb6b97069841c9c44d6b13b3ec4c1e62ac"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (sepcon_emp P).",
            "VernacExtend",
            "429b96b6f91403ae7e7a7d4b2de18bc89f284da2"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "apply wand_refl_cancel_right.",
            "VernacExtend",
            "f1fe4616a0978dbf9083c1460d8ddc4c7f5c3af2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac cancel_wand := repeat match goal with |- _ |-- ?B => match B with context [?A -* ?A] => rewrite ?sepcon_assoc; pull_right (A -* A); first [apply cancel_emp_wand | apply wand_refl_cancel_right] end end.",
            "VernacExtend",
            "0b5b5f2d8e9f171e24ba839dabbef25e63bc51d6"
        ],
        [
            "Ltac norm_rewrite := autorewrite with norm.",
            "VernacExtend",
            "178caf148e9804b82e01233b2c542c804f075f57"
        ],
        [
            "Lemma TEST_L : forall n:nat, n=n -> (n + 1 = S n)%nat.",
            "VernacStartTheoremProof",
            "8cd57a61b4391e64c24aeeb97f9913e09ae679d7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- plus_n_Sm ,<- plus_n_O.",
            "VernacExtend",
            "3ab10ed8bdc732637dd23930a1bd0f0efb5a2c6c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite TEST_L using reflexivity : test888.",
            "VernacExtend",
            "78981f4f56bf53ff72d1c50ff423dc730054c6fc"
        ],
        [
            "Goal forall n, S n = (n + 1)%nat.",
            "VernacDefinition",
            "aca1ea044802cbe6bd2d06e91d97404a62d32d80"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite_strat (topdown hints test888).",
            "VernacExtend",
            "b64da39ed488e8cb0556a51216942d1f0f631f84"
        ],
        [
            "match goal with |- S n = S n => reflexivity end.",
            "VernacExtend",
            "a75f5c13ad5da125603a69e49cdfaca1c821dcf7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac normalize1 := match goal with | |- context [@andp ?A (@LiftNatDed ?T ?B ?C) ?D ?E ?F] => change (@andp A (@LiftNatDed T B C) D E F) with (D F && E F) | |- context [@later ?A (@LiftNatDed ?T ?B ?C) (@LiftIndir ?X1 ?X2 ?X3 ?X4 ?X5) ?D ?F] => change (@later A (@LiftNatDed T B C) (@LiftIndir X1 X2 X3 X4 X5) D F) with (@later B C X5 (D F)) | |- context [@sepcon ?A (@LiftNatDed ?B ?C ?D) (@LiftSepLog ?E ?F ?G ?H) ?J ?K ?L] => change (@sepcon A (@LiftNatDed B C D) (@LiftSepLog E F G H) J K L) with (@sepcon C D H (J L) (K L)) | |- context [(?P && ?Q) * ?R] => rewrite (corable_andp_sepcon1 P Q R) by (auto with norm) | |- context [?Q * (?P && ?R)] => rewrite (corable_sepcon_andp1 P Q R) by (auto with norm) | |- context [(?Q && ?P) * ?R] => rewrite (corable_andp_sepcon2 P Q R) by (auto with norm) | |- context [?Q * (?R && ?P)] => rewrite (corable_sepcon_andp2 P Q R) by (auto with norm) | |- derives ?A ?B => match A with | FF => apply FF_left | !! _ => apply derives_extract_prop0 | exp (fun y => _) => apply imp_extract_exp_left; (intro y || intro) | !! _ && _ => apply derives_extract_prop | _ && !! _ => apply derives_extract_prop' | context [ ((!! ?P) && ?Q) && ?R ] => rewrite (andp_assoc (!!P) Q R) | context [ ?Q && (!! ?P && ?R)] => match Q with !! _ => fail 2 | _ => rewrite (andp_assoc' (!!P) Q R) end | context [andp (exp (fun y => _)) _] => let BB := fresh \"BB\" in set (BB:=B); norm_rewrite; unfold BB; clear BB; apply imp_extract_exp_left; intro y | context [andp _ (exp (fun y => _))] => let BB := fresh \"BB\" in set (BB:=B); norm_rewrite; unfold BB; clear BB; apply imp_extract_exp_left; intro y | context [sepcon (exp (fun y => _)) _] => let BB := fresh \"BB\" in set (BB:=B); norm_rewrite; unfold BB; clear BB; apply imp_extract_exp_left; intro y | context [sepcon _ (exp (fun y => _))] => let BB := fresh \"BB\" in set (BB:=B); norm_rewrite; unfold BB; clear BB; apply imp_extract_exp_left; intro y | _ => simple apply TT_prop_right | _ => simple apply TT_right | _ => constr_eq A B; apply derives_refl end | |- _ => solve [auto] | |- _ |-- !! (?x = ?y) && _ => (rewrite (prop_true_andp' (x=y)) by (unfold y; reflexivity); unfold y in *; clear y) || (rewrite (prop_true_andp' (x=y)) by (unfold x; reflexivity); unfold x in *; clear x) | |- ?ZZ -> ?YY => match type of ZZ with | Prop => fancy_intros true || fail 1 | _ => intros _ end | |- ~ _ => fancy_intro true | |- _ => progress (norm_rewrite) | |- forall _, _ => let x := fresh \"x\" in (intro x; repeat normalize1; try generalize dependent x) end.",
            "VernacExtend",
            "d6524ee7c3bcd061d1f735211ebc2cdaa7e6165d"
        ],
        [
            "Ltac normalize := autorewrite with gather_prop; repeat (((repeat simple apply go_lower_lem1'; simple apply go_lower_lem1) || simple apply derives_extract_prop || simple apply derives_extract_prop'); fancy_intros true); repeat normalize1; try contradiction.",
            "VernacExtend",
            "60e70543b8f5ce627e434bd25819061b776cd637"
        ],
        [
            "Lemma allp_instantiate: forall {A : Type} {NA : NatDed A} {B : Type} (P : B -> A) (x : B), ALL y : B, P y |-- P x.",
            "VernacStartTheoremProof",
            "c05a0006b95e71713f624437797293095d704762"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply allp_left with x.",
            "VernacExtend",
            "1c73610d2dd3465689e4002edf19e7a241557354"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac allp_left x := match goal with |- ?A |-- _ => match A with context [@allp ?T ?ND ?B ?P] => sep_apply_in_entailment (@allp_instantiate T ND B P x) end end.",
            "VernacExtend",
            "73de20ad060a3e6c95e943ea01e6c33b4f83ce17"
        ],
        [
            "Lemma allp_instantiate': forall (B : Type) (P : B -> mpred) (x : B), allp P |-- P x.",
            "VernacStartTheoremProof",
            "3e95f859d83e3e3a0afd76be648d458f61ffa2b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply allp_instantiate.",
            "VernacExtend",
            "6dea8fb89c43fa8f24602638de10cb89381c5daf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_frame_elim'': forall P Q, (P -* Q) * P |-- Q.",
            "VernacStartTheoremProof",
            "f9195d8464cd0a3fd32117d19b2852d7e2b9b094"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "apply wand_frame_elim.",
            "VernacExtend",
            "bf7f7b52f3b4a5321a56abea4f34d8ab05959ecf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prop_sepcon: forall {A}{ND: NatDed A}{SL: SepLog A} P Q, !! P * Q = !! P && (TT * Q).",
            "VernacStartTheoremProof",
            "a70bbaa31eb4ce7b8af092c8a14d4a1976258904"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (andp_TT (!! _)), sepcon_andp_prop'.",
            "VernacExtend",
            "a09848594e580ee94f9a4ec2220581f1e7d296a6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prop_sepcon2: forall {A}{ND: NatDed A}{SL: SepLog A} P Q, Q * !! P = !! P && (TT * Q).",
            "VernacStartTheoremProof",
            "e93a68edf0954047b4345cf8ef76e5cbe006d4f6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "apply prop_sepcon.",
            "VernacExtend",
            "8c2a66edf6b1b0f90ececf031e73bda4320b3f95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "gather_prop_left",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- andp_assoc.",
                        "VernacExtend",
                        "af620aa2f90527d6460b0d98a5bf2930b4fc0390"
                    ]
                },
                {
                    "command": [
                        "rewrite <- prop_and; auto.",
                        "VernacExtend",
                        "6bb1eaf90899cc25b60f052ca8cad5d26979c2ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gather_prop_right",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_assoc.",
                        "VernacExtend",
                        "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm.",
                        "VernacExtend",
                        "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- prop_and; auto.",
                        "VernacExtend",
                        "6bb1eaf90899cc25b60f052ca8cad5d26979c2ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andp_in_order1",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply imp_andp_adjoint.",
                        "VernacExtend",
                        "c8d879371afc1a39c626a3c8c5302ad38a2c6f45"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1; auto.",
                        "VernacExtend",
                        "fbc9186131c9851d08ff7aadf76f5fc5ca898763"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply andp_right.",
                        "VernacExtend",
                        "614688b80ee6a44f752e79383d4234d6d5dfcee8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply andp_left1; auto.",
                        "VernacExtend",
                        "fbc9186131c9851d08ff7aadf76f5fc5ca898763"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply modus_ponens.",
                        "VernacExtend",
                        "fdaed019e1f69005d045c54027eeb3f933047136"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andp_in_order2",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (andp_comm P Q).",
                        "VernacExtend",
                        "93fae2d0a51bb1f9bdede1e02c2245f0d40615a5"
                    ]
                },
                {
                    "command": [
                        "apply andp_in_order1.",
                        "VernacExtend",
                        "f5628c373db3d741821730110d9deb0224c80557"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andp_right1",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_in_order1.",
                        "VernacExtend",
                        "1157e9314386d21cc8f4e7ab6b3c6f74e6dc7161"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; auto.",
                        "VernacExtend",
                        "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
                    ]
                },
                {
                    "command": [
                        "apply imp_andp_adjoint; auto.",
                        "VernacExtend",
                        "08b3bcda24a99b5280f754c4bf7446d144eca270"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andp_right2",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm.",
                        "VernacExtend",
                        "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
                    ]
                },
                {
                    "command": [
                        "apply andp_right1; auto.",
                        "VernacExtend",
                        "7186306bd9a9422ec13d3a29a0c9855b06725331"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_prop",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply andp_comm.",
                        "VernacExtend",
                        "c3dd1c812b539bbcf23c38f415fc0d445780852e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gather_prop3",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm.",
                        "VernacExtend",
                        "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_assoc.",
                        "VernacExtend",
                        "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
                    ]
                },
                {
                    "command": [
                        "rewrite (andp_comm Q); auto.",
                        "VernacExtend",
                        "57c225ff0901b70c4f1bfd0ddf4fe85a73a2532e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gather_prop4",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_assoc.",
                        "VernacExtend",
                        "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gather_prop5",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_assoc.",
                        "VernacExtend",
                        "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm.",
                        "VernacExtend",
                        "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_assoc.",
                        "VernacExtend",
                        "200650b65aadcd7d8884ebc4a7dde1f9da41d9ca"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply andp_comm.",
                        "VernacExtend",
                        "e882085d7b421cf300231195c54f80b4be6cb53c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "go_lower_lem1",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply derives_extract_prop; intros [? ?].",
                        "VernacExtend",
                        "0524509259caef62b4ef3ae48427c46d7bc04d11"
                    ]
                },
                {
                    "command": [
                        "apply derives_trans with (!!P && QR).",
                        "VernacExtend",
                        "0f7274413f0810d3c488c80f5a539154462f5b17"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; auto.",
                        "VernacExtend",
                        "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
                    ]
                },
                {
                    "command": [
                        "apply prop_right; auto.",
                        "VernacExtend",
                        "95e18efadb5767545f0255f518eaa92b08876b58"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "go_lower_lem1'",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [ | apply H].",
                        "VernacExtend",
                        "55f3551caa1b0d454cacc5ba38b0f34a99d213c5"
                    ]
                },
                {
                    "command": [
                        "apply andp_derives; auto.",
                        "VernacExtend",
                        "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
                    ]
                },
                {
                    "command": [
                        "apply prop_derives; intuition.",
                        "VernacExtend",
                        "00eb4957947f543d27c19f5a0c78187ff4dacc38"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel1_here",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm Q1).",
                        "VernacExtend",
                        "0a3d3f57a9227c5f3023536975294f6a52baf568"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel1_next",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc; auto.",
                        "VernacExtend",
                        "c82ac2a52d863cbff8c2f96c6df3aa5f8a536b29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel1_last",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm; apply sepcon_derives; auto.",
                        "VernacExtend",
                        "5691b6f5dce76cf00701ba594e78f8cd3c94a5dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel1_finish1",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sepcon_assoc.",
                        "VernacExtend",
                        "2cd6259c740fd8c1cc98f019baf661c39fb97af1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel1_finish2",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; auto.",
                        "VernacExtend",
                        "547f574af52ed1ecf6eeb00679f096581655b054"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_frame0",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intro; apply derives_refl.",
                        "VernacExtend",
                        "ec298942cb8099dd40f3fe7e244cffa08a9d3654"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_frame0_low",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_frame2",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_frame2_low",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_frame1",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fold_right.",
                        "VernacExtend",
                        "ab40f2cde00ad2f478c43d09492235dd57337224"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; apply derives_refl.",
                        "VernacExtend",
                        "bcd5e5643998cd8f043e5ffb7bb4c64b0ba7c1ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_frame1_low",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fold_right_sepcon.",
                        "VernacExtend",
                        "4b2db233ebb4776bd02ecdc9717c59b92f9a5355"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; apply derives_refl.",
                        "VernacExtend",
                        "bcd5e5643998cd8f043e5ffb7bb4c64b0ba7c1ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_sepconx_eq",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; auto.",
                        "VernacExtend",
                        "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl.",
                        "VernacExtend",
                        "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
                    ]
                },
                {
                    "command": [
                        "destruct l; simpl; auto.",
                        "VernacExtend",
                        "0d38c36eba25efd8427e35fac4fbc2b7b810d9c7"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; auto.",
                        "VernacExtend",
                        "547f574af52ed1ecf6eeb00679f096581655b054"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_left_sepconx_eq",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- fold_right_sepconx_eq.",
                        "VernacExtend",
                        "387c2dc9dcdd5b7d16e095553d45964da09918db"
                    ]
                },
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "revert m; induction l; intros.",
                        "VernacExtend",
                        "5f98ebea5bd8eb82243e16b408d830b2117f2033"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHl.",
                        "VernacExtend",
                        "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
                    ]
                },
                {
                    "command": [
                        "clear IHl.",
                        "VernacExtend",
                        "8bbd9602dc9b79bb59ead5a20fa2e5495ddfe01a"
                    ]
                },
                {
                    "command": [
                        "revert m a; induction l; intros.",
                        "VernacExtend",
                        "519c32e0059bd7e0b5a9a44522df65362f2cfba4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl.",
                        "VernacExtend",
                        "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_sepconx_eqx",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- fold_right_sepconx_eq; auto.",
                        "VernacExtend",
                        "4eeb66beb97a8272d3ceba627a46cf6ef6bb296e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_left",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros; apply sepcon_derives; auto.",
                        "VernacExtend",
                        "c15566d7bc4205cb250eba6857f2c88d5bdfd6a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pull_left_special",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_comm.",
                        "VernacExtend",
                        "f1e8c1b9e163425894c514fae16c41254657a6d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pull_left_special0",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "intros; apply sepcon_comm.",
                        "VernacExtend",
                        "4e3857e9e95703fe5f531cc942b7272887763b47"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_equal",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_equal'",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "syntactic_cancel_cons",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct nR0 as [[? ?]|].",
                        "VernacExtend",
                        "98898bd2b743681858cedced618f82bae104feb7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply syntactic_cancel_cons_succeed; eauto.",
                        "VernacExtend",
                        "33907e041e8dc8ae2ee813cc60a440a1792213b6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply syntactic_cancel_cons_fail; eauto.",
                        "VernacExtend",
                        "180c613d7960a71b0cb60d555e560939bdb208ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "delete_nth_SEP",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert R H; induction n; intros; destruct R; try solve [inv H].",
                        "VernacExtend",
                        "3eb354311983a7d5b3de8ae1a40b2d38e865bc9b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "apply IHn in H.",
                        "VernacExtend",
                        "3a667a71fe045df0ed5b07937a7e95e1b04fe3b3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sepcon_assoc, (sepcon_comm _ m), sepcon_assoc.",
                        "VernacExtend",
                        "5f98b052e6ed9e891967a92877ef834587f77c07"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "syntactic_cancel_solve1",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite emp_sepcon; auto.",
                        "VernacExtend",
                        "d6fa6467c4c0881968e7331429b6178a644ee63f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "syntactic_cancel_solve2",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite emp_sepcon.",
                        "VernacExtend",
                        "cab2c7fcf61a84119b604f0e4fb762f45fcaae2c"
                    ]
                },
                {
                    "command": [
                        "apply TT_right.",
                        "VernacExtend",
                        "319ddd4078d0d2ff0343ca8b858a3e7703981364"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "syntactic_cancel_spec1",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert F H0; induction H; intros.",
                        "VernacExtend",
                        "8b3a6da657f3de9ebbc1b762b7059bb056d4e4b8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply IHsyntactic_cancel in H1.",
                        "VernacExtend",
                        "fc5512daeaf99acedb83eb268342309bfb064768"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [| apply sepcon_derives; [apply derives_refl | apply H1]].",
                        "VernacExtend",
                        "a2e63ab85f890f2131f9cda6f97290b3387a0c5f"
                    ]
                },
                {
                    "command": [
                        "clear IHsyntactic_cancel H1.",
                        "VernacExtend",
                        "5743d5439e0ec4af6b317e3e14c650d811c0a477"
                    ]
                },
                {
                    "command": [
                        "apply find_nth_preds_Some in H.",
                        "VernacExtend",
                        "801e11a931884a1a6106c65cc99cf8bdda106f9c"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply delete_nth_SEP; eauto |].",
                        "VernacExtend",
                        "c47708ac31052ada190640e2232ba271d3516f9a"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm L0), sepcon_assoc in H1.",
                        "VernacExtend",
                        "6b68c00216c964ddd28fb36118f5f99e1065bb1a"
                    ]
                },
                {
                    "command": [
                        "apply (IHsyntactic_cancel (L0*F0)) in H1.",
                        "VernacExtend",
                        "44a33463a0c672e27679f1dceb3c93353c3c5fd2"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [exact H1 |].",
                        "VernacExtend",
                        "c6cf32d747b522c7a4ff4eff6e4c2580bfe5d903"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sepcon_assoc.",
                        "VernacExtend",
                        "2cd6259c740fd8c1cc98f019baf661c39fb97af1"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm; auto.",
                        "VernacExtend",
                        "d2c29cb76cae8b6b80971554ec9314b6f193e751"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "syntactic_cancel_spec2",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply syntactic_cancel_spec1; eauto.",
                        "VernacExtend",
                        "351e171e7d54c2f3f3ed6501214ad4ff151ec7d0"
                    ]
                },
                {
                    "command": [
                        "eapply syntactic_cancel_spec1; eauto.",
                        "VernacExtend",
                        "351e171e7d54c2f3f3ed6501214ad4ff151ec7d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "syntactic_cancel_solve3",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "syntactic_cancel_spec3",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sepcon_emp (fold_right_sepcon L1)).",
                        "VernacExtend",
                        "379e22c073a879746035d765b148c1ca4489c79a"
                    ]
                },
                {
                    "command": [
                        "eapply syntactic_cancel_spec1; eauto.",
                        "VernacExtend",
                        "351e171e7d54c2f3f3ed6501214ad4ff151ec7d0"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; auto.",
                        "VernacExtend",
                        "547f574af52ed1ecf6eeb00679f096581655b054"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "merge_abnormal_mpred_spec",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl.",
                        "VernacExtend",
                        "01adddf2c80c803ee3ef60ae310f50d1728520a7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; auto.",
                        "VernacExtend",
                        "547f574af52ed1ecf6eeb00679f096581655b054"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply TT_sepcon.",
                        "VernacExtend",
                        "d2135d0f95004fec5ffc509e28680646c441013d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_TT.",
                        "VernacExtend",
                        "1faccfdbda5d432574996f256b3e77d72dbb36de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_abnormal_mpred_spec",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H; simpl.",
                        "VernacExtend",
                        "9726f146667ea4ca85eccbf11148dbb538898a23"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite emp_sepcon; auto.",
                        "VernacExtend",
                        "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply merge_abnormal_mpred_spec in H0.",
                        "VernacExtend",
                        "760e4dc73b3053a94633592bdf1df781814e1442"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply sepcon_derives; [apply derives_refl | apply H0] |].",
                        "VernacExtend",
                        "495955158f81300d2485d5dce37029f79a6d6093"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sepcon_assoc.",
                        "VernacExtend",
                        "2cd6259c740fd8c1cc98f019baf661c39fb97af1"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm _ TT).",
                        "VernacExtend",
                        "72f5f32d86c67e4d3bdcfcba9d3f19c4d9f4a77d"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply merge_abnormal_mpred_spec in H0.",
                        "VernacExtend",
                        "760e4dc73b3053a94633592bdf1df781814e1442"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [apply sepcon_derives; [apply derives_refl | apply H0] |].",
                        "VernacExtend",
                        "495955158f81300d2485d5dce37029f79a6d6093"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sepcon_assoc.",
                        "VernacExtend",
                        "2cd6259c740fd8c1cc98f019baf661c39fb97af1"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm _ (fold_right_sepcon F)).",
                        "VernacExtend",
                        "5535558e0a1b349f813769dfa5ed7957376fed6a"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "symbolic_cancel_setup",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply construct_fold_right_sepcon_spec in H.",
                        "VernacExtend",
                        "77f05561cb9467a2d3fc2dc1a2554d244f513dee"
                    ]
                },
                {
                    "command": [
                        "apply construct_fold_right_sepcon_spec in H0.",
                        "VernacExtend",
                        "23f4464c8effac12b8b804cc6fad368d883d9c3f"
                    ]
                },
                {
                    "command": [
                        "apply fold_abnormal_mpred_spec in H1.",
                        "VernacExtend",
                        "4e1af631a3474f1eb8504e25825a966d495df83d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H, <- H0.",
                        "VernacExtend",
                        "28bea5b2b714f871b468f880bee092fa6d89b80a"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [| exact H1].",
                        "VernacExtend",
                        "d661681426df0f847101d7e57048fe987ff6596d"
                    ]
                },
                {
                    "command": [
                        "destruct Qr; auto.",
                        "VernacExtend",
                        "347f303a0b321ad38a0d14b0e620c1598f854153"
                    ]
                },
                {
                    "command": [
                        "simpl in H2 |- *.",
                        "VernacExtend",
                        "9b676a94a33e45c29675ffaee8c88592367b37f5"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; auto.",
                        "VernacExtend",
                        "547f574af52ed1ecf6eeb00679f096581655b054"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjust_sep_apply",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; auto.",
                        "VernacExtend",
                        "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_refl_cancel_right",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wand_sepcon_adjoint.",
                        "VernacExtend",
                        "fbf6785c920a452e456ac93d7196ce469016cc71"
                    ]
                },
                {
                    "command": [
                        "rewrite emp_sepcon.",
                        "VernacExtend",
                        "df65e2010e4babcc45591f5b17e65df5cd76a9f9"
                    ]
                },
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_emp_wand",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sepcon_emp P).",
                        "VernacExtend",
                        "429b96b6f91403ae7e7a7d4b2de18bc89f284da2"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "apply wand_refl_cancel_right.",
                        "VernacExtend",
                        "f1fe4616a0978dbf9083c1460d8ddc4c7f5c3af2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TEST_L",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_Sm ,<- plus_n_O.",
                        "VernacExtend",
                        "3ab10ed8bdc732637dd23930a1bd0f0efb5a2c6c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite_strat (topdown hints test888).",
                        "VernacExtend",
                        "b64da39ed488e8cb0556a51216942d1f0f631f84"
                    ]
                },
                {
                    "command": [
                        "match goal with |- S n = S n => reflexivity end.",
                        "VernacExtend",
                        "a75f5c13ad5da125603a69e49cdfaca1c821dcf7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "allp_instantiate",
            "line_nb": 429,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply allp_left with x.",
                        "VernacExtend",
                        "1c73610d2dd3465689e4002edf19e7a241557354"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "allp_instantiate'",
            "line_nb": 435,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply allp_instantiate.",
                        "VernacExtend",
                        "6dea8fb89c43fa8f24602638de10cb89381c5daf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_frame_elim''",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "apply wand_frame_elim.",
                        "VernacExtend",
                        "bf7f7b52f3b4a5321a56abea4f34d8ab05959ecf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prop_sepcon",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (andp_TT (!! _)), sepcon_andp_prop'.",
                        "VernacExtend",
                        "a09848594e580ee94f9a4ec2220581f1e7d296a6"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prop_sepcon2",
            "line_nb": 449,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "apply prop_sepcon.",
                        "VernacExtend",
                        "8c2a66edf6b1b0f90ececf031e73bda4320b3f95"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}