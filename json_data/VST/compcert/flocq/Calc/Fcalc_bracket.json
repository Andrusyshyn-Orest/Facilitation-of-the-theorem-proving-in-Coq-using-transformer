{
    "filename": "compcert/flocq/Calc/Fcalc_bracket.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Fcore_Raux.",
            "VernacRequire",
            "6a49ff899e4733a5492282770f91634f4e2bce84"
        ],
        [
            "Require Import Fcore_defs.",
            "VernacRequire",
            "a5831df34cd1384c0e8566554919e69e523ebc02"
        ],
        [
            "Require Import Fcore_float_prop.",
            "VernacRequire",
            "cb1b82d62c5b9c01c03fb8d695d9166849c8babe"
        ],
        [
            "Section Fcalc_bracket.",
            "VernacBeginSection",
            "4d067b80093883a1bbbe3b4053fd87abb83212f2"
        ],
        [
            "Variable d u : R.",
            "VernacAssumption",
            "60ddb3dcc8ce5d4a0c8ddd23aa653f0004cd24d1"
        ],
        [
            "Hypothesis Hdu : (d < u)%R.",
            "VernacAssumption",
            "014600c278a691eb44f235c7638f834a43afb6c7"
        ],
        [
            "Inductive location := loc_Exact | loc_Inexact : comparison -> location.",
            "VernacInductive",
            "46d20c9bdcdbb8045f753274c64a1a417850ce3d"
        ],
        [
            "Variable x : R.",
            "VernacAssumption",
            "e6fd4f979672b22a8a75f1027d2abfafb5dea904"
        ],
        [
            "Definition inbetween_loc := match Rcompare x d with | Gt => loc_Inexact (Rcompare x ((d + u) / 2)) | _ => loc_Exact end.",
            "VernacDefinition",
            "59df6ae787416578d956a1b5a214124b08d7786f"
        ],
        [
            "Inductive inbetween : location -> Prop := | inbetween_Exact : x = d -> inbetween loc_Exact | inbetween_Inexact l : (d < x < u)%R -> Rcompare x ((d + u) / 2)%R = l -> inbetween (loc_Inexact l).",
            "VernacInductive",
            "c04c87a8d00d39124982586d2f0b12ece072ccd0"
        ],
        [
            "Theorem inbetween_spec : (d <= x < u)%R -> inbetween inbetween_loc.",
            "VernacStartTheoremProof",
            "dc5e51645e8b55c3d5683e20d32508f03e257dbf"
        ],
        [
            "intros Hx.",
            "VernacExtend",
            "9276b72df3a882c9b4b954c90d9e870c80a906fc"
        ],
        [
            "unfold inbetween_loc.",
            "VernacExtend",
            "2effb044c9261260f42f00fe13c0e00d3134f839"
        ],
        [
            "destruct (Rcompare_spec x d) as [H|H|H].",
            "VernacExtend",
            "f0bff041a892f3ffad25651dd8d1db681621ab3a"
        ],
        [
            "now elim Rle_not_lt with (1 := proj1 Hx).",
            "VernacExtend",
            "9105bf99dc1a60f519b47d3b6a357c1cfbfbf489"
        ],
        [
            "now constructor.",
            "VernacExtend",
            "e001978ec065ef0fd63cb804e72fb73890e93711"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_unique : forall l l', inbetween l -> inbetween l' -> l = l'.",
            "VernacStartTheoremProof",
            "2d52755d82e5cd1ff058461758ee48d9c6ad5cdf"
        ],
        [
            "intros l l' Hl Hl'.",
            "VernacExtend",
            "c73d3e89524eb02748668e59348d3c7285b778f9"
        ],
        [
            "inversion_clear Hl ; inversion_clear Hl'.",
            "VernacExtend",
            "568a864087ff931bedcec7bf28e03840e3eeb735"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "elim Rlt_irrefl with (1 := proj1 H0).",
            "VernacExtend",
            "f2dc0d71f34d720e6c79b4623e3adf84d3046bdc"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "elim Rlt_irrefl with (1 := proj1 H).",
            "VernacExtend",
            "174969eec43cd0e6a1f63e400f01a62f163c0bac"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "now rewrite <- H0.",
            "VernacExtend",
            "2c1d8246c3e76b0802fe4bece3df6f4423c59a3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Fcalc_bracket_any.",
            "VernacBeginSection",
            "76c15f100c867210f7b98ad8c18184a5eab72418"
        ],
        [
            "Variable l : location.",
            "VernacAssumption",
            "0182ff3326b6b3928e8769e4a3c22008734a3264"
        ],
        [
            "Theorem inbetween_bounds : inbetween l -> (d <= x < u)%R.",
            "VernacStartTheoremProof",
            "1e7e19d4ae0ee0bddc74d59c85e15da3fe1aa5b4"
        ],
        [
            "intros [Hx|l' Hx Hl] ; clear l.",
            "VernacExtend",
            "8df072521404b689f0874aea3999a559fd119341"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "exact Hdu.",
            "VernacExtend",
            "5dd73af5233a8b43eec63899d1d4c800c3691d08"
        ],
        [
            "now split ; try apply Rlt_le.",
            "VernacExtend",
            "6576048db827390f18326a94589fed94be9eac44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_bounds_not_Eq : inbetween l -> l <> loc_Exact -> (d < x < u)%R.",
            "VernacStartTheoremProof",
            "5e109bd587d7e6c5934d9b48200dedac294f912f"
        ],
        [
            "intros [Hx|l' Hx Hl] H.",
            "VernacExtend",
            "13b916960a111041a5de3a03327d89ddcc1e0286"
        ],
        [
            "now elim H.",
            "VernacExtend",
            "25b0f8af2fb84c276497977e57d3240d2a987e06"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fcalc_bracket_any.",
            "VernacEndSegment",
            "ec7f5335a8eaa1f96dce416b4feb465b433a85dd"
        ],
        [
            "Theorem inbetween_distance_inexact : forall l, inbetween (loc_Inexact l) -> Rcompare (x - d) (u - x) = l.",
            "VernacStartTheoremProof",
            "fdcb7044a7b624c6cd80c0fe3e5d7012958ecdd4"
        ],
        [
            "intros l Hl.",
            "VernacExtend",
            "73c348d1ec294870f643ef6a781f4b0c88e45247"
        ],
        [
            "inversion_clear Hl as [|l' Hl' Hx].",
            "VernacExtend",
            "4a952233656367f4a8b629afe4251f7dd54ec746"
        ],
        [
            "now rewrite Rcompare_middle.",
            "VernacExtend",
            "e3f7d60c291e66b3754e71195316ee883d41ebac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_distance_inexact_abs : forall l, inbetween (loc_Inexact l) -> Rcompare (Rabs (d - x)) (Rabs (u - x)) = l.",
            "VernacStartTheoremProof",
            "69acd4179ec8b0ef1fa5294d5f5475fb90adc734"
        ],
        [
            "intros l Hl.",
            "VernacExtend",
            "73c348d1ec294870f643ef6a781f4b0c88e45247"
        ],
        [
            "rewrite Rabs_left1.",
            "VernacExtend",
            "959a39766c3ec0e54779596cf6d2e0ed16ff476d"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "rewrite Ropp_minus_distr.",
            "VernacExtend",
            "03410ea29af67bdcfa7393931606c01ed23d7394"
        ],
        [
            "now apply inbetween_distance_inexact.",
            "VernacExtend",
            "ce901556b9a151afc963f6418370787115f42b8d"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply (inbetween_bounds _ Hl).",
            "VernacExtend",
            "1b3fef2e521fb14639fc93248d74a39e972d9a24"
        ],
        [
            "apply Rle_minus.",
            "VernacExtend",
            "7e46e8a6683420ce8b2242ac68da7361c6b86840"
        ],
        [
            "apply (inbetween_bounds _ Hl).",
            "VernacExtend",
            "1b3fef2e521fb14639fc93248d74a39e972d9a24"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fcalc_bracket.",
            "VernacEndSegment",
            "4d6b9eae64b28f7991711b7f0dfaa26df471430f"
        ],
        [
            "Theorem inbetween_ex : forall d u l, (d < u)%R -> exists x, inbetween d u x l.",
            "VernacStartTheoremProof",
            "c11b6ba036f423b8add011d350de87688c99c3bb"
        ],
        [
            "intros d u [|l] Hdu.",
            "VernacExtend",
            "7c4cebf6d6e7625df56539075f65ebbf397471e2"
        ],
        [
            "exists d.",
            "VernacExtend",
            "39cea21d4e04fa9463f57be4e5a423277681d456"
        ],
        [
            "now constructor.",
            "VernacExtend",
            "e001978ec065ef0fd63cb804e72fb73890e93711"
        ],
        [
            "exists (d + match l with Lt => 1 | Eq => 2 | Gt => 3 end / 4 * (u - d))%R.",
            "VernacExtend",
            "3975bef8de32c85445fe226562cd02d088de7aba"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "set (v := (match l with Lt => 1 | Eq => 2 | Gt => 3 end / 4)%R).",
            "VernacExtend",
            "b179930047ec836d0271d89746ebc71904578d9f"
        ],
        [
            "assert (0 < v < 1)%R.",
            "VernacExtend",
            "79753b66e9ff4deec861c61f5e2841e66e4cf494"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold v, Rdiv.",
            "VernacExtend",
            "518ffc061d2e1ef162ff8206c8def78d309bcc3d"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "case l.",
            "VernacExtend",
            "e3d90db576dc4f9653683205875a7a80d4a8e938"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "now apply (Z2R_lt 0 1).",
            "VernacExtend",
            "8881bbe7f156e41a8b754c4f89238c660a066b32"
        ],
        [
            "now apply (Z2R_lt 0 3).",
            "VernacExtend",
            "5d2321671ce7fa7d23d67a55c2010acd6c81df38"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 4).",
            "VernacExtend",
            "af3833aa9d7ad60de4eed329ae0099a3aaf5b82b"
        ],
        [
            "unfold v, Rdiv.",
            "VernacExtend",
            "518ffc061d2e1ef162ff8206c8def78d309bcc3d"
        ],
        [
            "apply Rmult_lt_reg_r with 4%R.",
            "VernacExtend",
            "ca68314ad69c9aec069cb7511dfeeee65782cbcd"
        ],
        [
            "now apply (Z2R_lt 0 4).",
            "VernacExtend",
            "af3833aa9d7ad60de4eed329ae0099a3aaf5b82b"
        ],
        [
            "rewrite Rmult_assoc, Rinv_l.",
            "VernacExtend",
            "04f20fa04715e2d07252ea9fae946407206807dc"
        ],
        [
            "rewrite Rmult_1_r, Rmult_1_l.",
            "VernacExtend",
            "22e5cd8f03285244e204bff59daa3e77f52499a7"
        ],
        [
            "case l.",
            "VernacExtend",
            "e3d90db576dc4f9653683205875a7a80d4a8e938"
        ],
        [
            "now apply (Z2R_lt 2 4).",
            "VernacExtend",
            "be7bcc96443bc587e310dcf7e720454c18af5d78"
        ],
        [
            "now apply (Z2R_lt 1 4).",
            "VernacExtend",
            "891fa0a6dad2d03142788450b87c51ed4ac0b505"
        ],
        [
            "now apply (Z2R_lt 3 4).",
            "VernacExtend",
            "da962d4278e9315fc31b3e29e923f852d8f46ac0"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "now apply (Z2R_lt 0 4).",
            "VernacExtend",
            "af3833aa9d7ad60de4eed329ae0099a3aaf5b82b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rplus_lt_reg_r with (d * (v - 1))%R.",
            "VernacExtend",
            "d10a9d0962e7f686e2a992b24fe4c2e7967609a8"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "fd520335d31c715c2f686e2bdc0b380c493b04c0"
        ],
        [
            "now apply Rmult_lt_compat_l.",
            "VernacExtend",
            "96fc7ba97bff2b0615046e2fc30be14d2bd47b73"
        ],
        [
            "apply Rplus_lt_reg_l with (-u * v)%R.",
            "VernacExtend",
            "c02f0359ce52c9d0ab11453879c2a76bc570f183"
        ],
        [
            "replace (- u * v + (d + v * (u - d)))%R with (d * (1 - v))%R by ring.",
            "VernacExtend",
            "f736ee071ad332deb9381a204857b178e6a63e4e"
        ],
        [
            "replace (- u * v + u)%R with (u * (1 - v))%R by ring.",
            "VernacExtend",
            "6db17ebb3469a31d5303c2696c76df3852da6a58"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "apply Rplus_lt_reg_r with v.",
            "VernacExtend",
            "28bbb87a7982907627a309c65f87cec5dbdf65a4"
        ],
        [
            "now ring_simplify.",
            "VernacExtend",
            "2d108f365e3e8acc156a34cc381bc8087ba632ff"
        ],
        [
            "exact Hdu.",
            "VernacExtend",
            "5dd73af5233a8b43eec63899d1d4c800c3691d08"
        ],
        [
            "set (v := (match l with Lt => 1 | Eq => 2 | Gt => 3 end)%R).",
            "VernacExtend",
            "1ad3445dbdf0dde7e6cbf4ec0fa030910a8df099"
        ],
        [
            "rewrite <- (Rcompare_plus_r (- (d + u) / 2)).",
            "VernacExtend",
            "8177c2727430a59d40016680e6d3257d31547856"
        ],
        [
            "rewrite <- (Rcompare_mult_r 4).",
            "VernacExtend",
            "7858d2926f74baca99b247409c91fd389366b5ae"
        ],
        [
            "2: now apply (Z2R_lt 0 4).",
            "VernacExtend",
            "bee236f556d652ae74ff70adf36cac403f4ad2d7"
        ],
        [
            "replace (((d + u) / 2 + - (d + u) / 2) * 4)%R with ((u - d) * 0)%R by field.",
            "VernacExtend",
            "9094ee60af251b3eccc646591a10da5a1c4a7220"
        ],
        [
            "replace ((d + v / 4 * (u - d) + - (d + u) / 2) * 4)%R with ((u - d) * (v - 2))%R by field.",
            "VernacExtend",
            "4cdc252e0c4859d135028809c90d447591d35cdc"
        ],
        [
            "rewrite Rcompare_mult_l.",
            "VernacExtend",
            "c09679d953ccce0ab75a85d34deaa4e02750180b"
        ],
        [
            "2: now apply Rlt_Rminus.",
            "VernacExtend",
            "1fbb7e9650846217d33bd025336acf81e22dba82"
        ],
        [
            "rewrite <- (Rcompare_plus_r 2).",
            "VernacExtend",
            "5cd4971f28d30a4cc7a3093166cc3e8705f00cf1"
        ],
        [
            "ring_simplify (v - 2 + 2)%R (0 + 2)%R.",
            "VernacExtend",
            "d25b75f68038a113ddcefb8964de3ca70cd96f78"
        ],
        [
            "unfold v.",
            "VernacExtend",
            "dd01bfef1ec7e9ca0e58bc815f93a1cd7c22ac51"
        ],
        [
            "case l.",
            "VernacExtend",
            "e3d90db576dc4f9653683205875a7a80d4a8e938"
        ],
        [
            "exact (Rcompare_Z2R 2 2).",
            "VernacExtend",
            "8e3959dccdf4079fa31e867cfc156d905bdc280f"
        ],
        [
            "exact (Rcompare_Z2R 1 2).",
            "VernacExtend",
            "f05ee3dee5472658d847ffbeaa1fb2ec374acd90"
        ],
        [
            "exact (Rcompare_Z2R 3 2).",
            "VernacExtend",
            "59bbb8dc2ea80b4d342ae55cf54d9872d92742ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Fcalc_bracket_step.",
            "VernacBeginSection",
            "4d8c7d41487de5c0ed3382a5c17f84b376c23b71"
        ],
        [
            "Variable start step : R.",
            "VernacAssumption",
            "ae677c6600eb4bb4cacbcbc5400c9e71034513b0"
        ],
        [
            "Variable nb_steps : Z.",
            "VernacAssumption",
            "0f7447c591dc7b8d789c81ec39b18c16008b5153"
        ],
        [
            "Variable Hstep : (0 < step)%R.",
            "VernacAssumption",
            "238ce9ec463c03fa2d8cf8cba70407bfda38d521"
        ],
        [
            "Lemma ordered_steps : forall k, (start + Z2R k * step < start + Z2R (k + 1) * step)%R.",
            "VernacStartTheoremProof",
            "6f3c34d4a18602fc814fdecebbc2475bc6f5ae06"
        ],
        [
            "intros k.",
            "VernacExtend",
            "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "exact Hstep.",
            "VernacExtend",
            "b26f779744852f784b30df563259393908dfaf1c"
        ],
        [
            "apply Z2R_lt.",
            "VernacExtend",
            "20648688afbdacefe3b6070755cbe6f263ce5093"
        ],
        [
            "apply Zlt_succ.",
            "VernacExtend",
            "f4cf5b932d8c774be510b7802fbeea627fe15261"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma middle_range : forall k, ((start + (start + Z2R k * step)) / 2 = start + (Z2R k / 2 * step))%R.",
            "VernacStartTheoremProof",
            "80fcd8ab4b4c95a8dedaf38602242dfe09482af8"
        ],
        [
            "intros k.",
            "VernacExtend",
            "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis (Hnb_steps : (1 < nb_steps)%Z).",
            "VernacAssumption",
            "878b9f6dbf607f2d9b40c9feb8ad48a4f9e42d26"
        ],
        [
            "Lemma inbetween_step_not_Eq : forall x k l l', inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x l -> (0 < k < nb_steps)%Z -> Rcompare x (start + (Z2R nb_steps / 2 * step))%R = l' -> inbetween start (start + Z2R nb_steps * step) x (loc_Inexact l').",
            "VernacStartTheoremProof",
            "8d9e1078a106c30f30b9d73b37677e6f218d7f31"
        ],
        [
            "intros x k l l' Hx Hk Hl'.",
            "VernacExtend",
            "778a55a8f1fcae6f2fdff2a417212e52b0b68e87"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assert (Hx' := inbetween_bounds _ _ (ordered_steps _) _ _ Hx).",
            "VernacExtend",
            "d391f27e901bb96fd52cefa58a0c183e9c21316a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le_trans with (2 := proj1 Hx').",
            "VernacExtend",
            "ddf6d99d6564e77fe456847dcd22c971cb6a67dd"
        ],
        [
            "rewrite <- (Rplus_0_r start) at 1.",
            "VernacExtend",
            "b973834af3ac7ddac3d70becda4cbc9125dcf922"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "now apply (Z2R_lt 0).",
            "VernacExtend",
            "5fe7a71c929f2db40ffef7572e6694713b2d3e81"
        ],
        [
            "exact Hstep.",
            "VernacExtend",
            "b26f779744852f784b30df563259393908dfaf1c"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Hx').",
            "VernacExtend",
            "9186dbf290db341ed9f16eb3f975ba840b50e377"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "now rewrite middle_range.",
            "VernacExtend",
            "c46eaddd5adb2c85743632f2ca5c4f174c7aae65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_step_Lo : forall x k l, inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x l -> (0 < k)%Z -> (2 * k + 1 < nb_steps)%Z -> inbetween start (start + Z2R nb_steps * step) x (loc_Inexact Lt).",
            "VernacStartTheoremProof",
            "c93bd27734cc38b29026e9ce743edc11449801d0"
        ],
        [
            "intros x k l Hx Hk1 Hk2.",
            "VernacExtend",
            "4c5ab07146cecbd762c7e9fa9f26de8697a8a0ad"
        ],
        [
            "apply inbetween_step_not_Eq with (1 := Hx).",
            "VernacExtend",
            "521eba42e3784391cd297732df44babab788a0b4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Rcompare_Lt.",
            "VernacExtend",
            "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
        ],
        [
            "assert (Hx' := inbetween_bounds _ _ (ordered_steps _) _ _ Hx).",
            "VernacExtend",
            "d391f27e901bb96fd52cefa58a0c183e9c21316a"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Hx').",
            "VernacExtend",
            "9186dbf290db341ed9f16eb3f975ba840b50e377"
        ],
        [
            "apply Rcompare_not_Lt_inv.",
            "VernacExtend",
            "0973f93eb7fe8bb8322d964e818892eb4d38c2d7"
        ],
        [
            "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_l.",
            "VernacExtend",
            "6826cb45c591d638e246a1d02aa1bfb02689ed53"
        ],
        [
            "apply Rcompare_not_Lt.",
            "VernacExtend",
            "1dcb52a645dbba82ab863d8ce4e714e29a7ca4f7"
        ],
        [
            "change 2%R with (Z2R 2).",
            "VernacExtend",
            "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "exact Hstep.",
            "VernacExtend",
            "b26f779744852f784b30df563259393908dfaf1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_step_Hi : forall x k l, inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x l -> (nb_steps < 2 * k)%Z -> (k < nb_steps)%Z -> inbetween start (start + Z2R nb_steps * step) x (loc_Inexact Gt).",
            "VernacStartTheoremProof",
            "dfb2fff2b900cb26faac9defb75c6366b92bb3b9"
        ],
        [
            "intros x k l Hx Hk1 Hk2.",
            "VernacExtend",
            "4c5ab07146cecbd762c7e9fa9f26de8697a8a0ad"
        ],
        [
            "apply inbetween_step_not_Eq with (1 := Hx).",
            "VernacExtend",
            "521eba42e3784391cd297732df44babab788a0b4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Rcompare_Gt.",
            "VernacExtend",
            "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
        ],
        [
            "assert (Hx' := inbetween_bounds _ _ (ordered_steps _) _ _ Hx).",
            "VernacExtend",
            "d391f27e901bb96fd52cefa58a0c183e9c21316a"
        ],
        [
            "apply Rlt_le_trans with (2 := proj1 Hx').",
            "VernacExtend",
            "ddf6d99d6564e77fe456847dcd22c971cb6a67dd"
        ],
        [
            "apply Rcompare_Lt_inv.",
            "VernacExtend",
            "c84295216e91564a715169217fe9f312aa3f4478"
        ],
        [
            "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_l.",
            "VernacExtend",
            "6826cb45c591d638e246a1d02aa1bfb02689ed53"
        ],
        [
            "apply Rcompare_Lt.",
            "VernacExtend",
            "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
        ],
        [
            "change 2%R with (Z2R 2).",
            "VernacExtend",
            "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "apply Z2R_lt.",
            "VernacExtend",
            "20648688afbdacefe3b6070755cbe6f263ce5093"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "exact Hstep.",
            "VernacExtend",
            "b26f779744852f784b30df563259393908dfaf1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_step_Lo_not_Eq : forall x l, inbetween start (start + step) x l -> l <> loc_Exact -> inbetween start (start + Z2R nb_steps * step) x (loc_Inexact Lt).",
            "VernacStartTheoremProof",
            "740b1aeb32e13b93b40a54ee6651f1b5f8062c98"
        ],
        [
            "intros x l Hx Hl.",
            "VernacExtend",
            "a946cb40c3492dece119a4477c8bb21085b254d9"
        ],
        [
            "assert (Hx' := inbetween_bounds_not_Eq _ _ _ _ Hx Hl).",
            "VernacExtend",
            "f96c57c7eed82360eceafb49d124bbdfe27e6332"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Hx'.",
            "VernacExtend",
            "b86ae5b23af511ab5298308aa6904e92e151bdab"
        ],
        [
            "apply Rlt_trans with (1 := proj2 Hx').",
            "VernacExtend",
            "ac9cef9d685a3875fbd44e89c6fb5c72e017d76e"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite <- (Rmult_1_l step) at 1.",
            "VernacExtend",
            "0cbd1daf26f7a653cff6376ec358f69144095d10"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "exact Hstep.",
            "VernacExtend",
            "b26f779744852f784b30df563259393908dfaf1c"
        ],
        [
            "now apply (Z2R_lt 1).",
            "VernacExtend",
            "5011f688ce5df45568c4d67d4ca4257c5429bce4"
        ],
        [
            "apply Rcompare_Lt.",
            "VernacExtend",
            "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Hx').",
            "VernacExtend",
            "9186dbf290db341ed9f16eb3f975ba840b50e377"
        ],
        [
            "rewrite middle_range.",
            "VernacExtend",
            "7d9734b20ff2f537cb3c1ce60e3932ef25c0e9dd"
        ],
        [
            "apply Rcompare_not_Lt_inv.",
            "VernacExtend",
            "0973f93eb7fe8bb8322d964e818892eb4d38c2d7"
        ],
        [
            "rewrite <- (Rmult_1_l step) at 2.",
            "VernacExtend",
            "d4de17bd68da44805c488e8eda3ef4eabc0f05a1"
        ],
        [
            "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_l.",
            "VernacExtend",
            "6826cb45c591d638e246a1d02aa1bfb02689ed53"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "apply Rcompare_not_Lt.",
            "VernacExtend",
            "1dcb52a645dbba82ab863d8ce4e714e29a7ca4f7"
        ],
        [
            "apply (Z2R_le 2).",
            "VernacExtend",
            "a279012cca2d7da81553d571f987a3ff96cb7dd1"
        ],
        [
            "now apply (Zlt_le_succ 1).",
            "VernacExtend",
            "2ab0b010ee9335d78d78386929be1f69a0cdb818"
        ],
        [
            "exact Hstep.",
            "VernacExtend",
            "b26f779744852f784b30df563259393908dfaf1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma middle_odd : forall k, (2 * k + 1 = nb_steps)%Z -> (((start + Z2R k * step) + (start + Z2R (k + 1) * step))/2 = start + Z2R nb_steps /2 * step)%R.",
            "VernacStartTheoremProof",
            "818d6758e03227175b3ab352f7cfe24d6ae498cd"
        ],
        [
            "intros k Hk.",
            "VernacExtend",
            "341b086248172f5c94f8f482bb5f483619b45197"
        ],
        [
            "rewrite <- Hk.",
            "VernacExtend",
            "f883e565a25ccbc6e8ed4cf3fc05adeb909db79f"
        ],
        [
            "rewrite 2!Z2R_plus, Z2R_mult.",
            "VernacExtend",
            "f4e7527021e3232b29b63602c912fc2918314ee8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_step_any_Mi_odd : forall x k l, inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x (loc_Inexact l) -> (2 * k + 1 = nb_steps)%Z -> inbetween start (start + Z2R nb_steps * step) x (loc_Inexact l).",
            "VernacStartTheoremProof",
            "13d7bf1b170aa930539b5677ededd9742679b6e1"
        ],
        [
            "intros x k l Hx Hk.",
            "VernacExtend",
            "63a74013cdf29508014d736ab542caa1c0383f28"
        ],
        [
            "apply inbetween_step_not_Eq with (1 := Hx).",
            "VernacExtend",
            "521eba42e3784391cd297732df44babab788a0b4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "inversion_clear Hx as [|l' _ Hl].",
            "VernacExtend",
            "97ad9f0d79718821dbe995f34fe170df8c8e7bdd"
        ],
        [
            "now rewrite (middle_odd _ Hk) in Hl.",
            "VernacExtend",
            "a566679a82488bd4ec4c9fc4d11323cd71b843ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_step_Lo_Mi_Eq_odd : forall x k, inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x loc_Exact -> (2 * k + 1 = nb_steps)%Z -> inbetween start (start + Z2R nb_steps * step) x (loc_Inexact Lt).",
            "VernacStartTheoremProof",
            "6a235de38cb88d87edac6a2323323443007c25f1"
        ],
        [
            "intros x k Hx Hk.",
            "VernacExtend",
            "596ccafb4a9bd24eaf0d20aa737bb9df55a3c85d"
        ],
        [
            "apply inbetween_step_not_Eq with (1 := Hx).",
            "VernacExtend",
            "521eba42e3784391cd297732df44babab788a0b4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "inversion_clear Hx as [Hl|].",
            "VernacExtend",
            "208243d83bab4683349966936b77ceabed865506"
        ],
        [
            "rewrite Hl.",
            "VernacExtend",
            "bcb5a79f143a574cb4193cb68e496aca9c8a7cc3"
        ],
        [
            "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_r.",
            "VernacExtend",
            "34bcdfeca3f7dbf4f58664bc7eb6a647a21afbe2"
        ],
        [
            "apply Rcompare_Lt.",
            "VernacExtend",
            "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
        ],
        [
            "change 2%R with (Z2R 2).",
            "VernacExtend",
            "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "apply Z2R_lt.",
            "VernacExtend",
            "20648688afbdacefe3b6070755cbe6f263ce5093"
        ],
        [
            "rewrite <- Hk.",
            "VernacExtend",
            "f883e565a25ccbc6e8ed4cf3fc05adeb909db79f"
        ],
        [
            "apply Zlt_succ.",
            "VernacExtend",
            "f4cf5b932d8c774be510b7802fbeea627fe15261"
        ],
        [
            "exact Hstep.",
            "VernacExtend",
            "b26f779744852f784b30df563259393908dfaf1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_step_Hi_Mi_even : forall x k l, inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x l -> l <> loc_Exact -> (2 * k = nb_steps)%Z -> inbetween start (start + Z2R nb_steps * step) x (loc_Inexact Gt).",
            "VernacStartTheoremProof",
            "1fac62128f4b69b98140c130cf5197f5ce43209d"
        ],
        [
            "intros x k l Hx Hl Hk.",
            "VernacExtend",
            "f46a96183a94607faf86b9f5713f9b6e8094c072"
        ],
        [
            "apply inbetween_step_not_Eq with (1 := Hx).",
            "VernacExtend",
            "521eba42e3784391cd297732df44babab788a0b4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Rcompare_Gt.",
            "VernacExtend",
            "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
        ],
        [
            "assert (Hx' := inbetween_bounds_not_Eq _ _ _ _ Hx Hl).",
            "VernacExtend",
            "f96c57c7eed82360eceafb49d124bbdfe27e6332"
        ],
        [
            "apply Rle_lt_trans with (2 := proj1 Hx').",
            "VernacExtend",
            "26e892a72f033ec7fd1ebe14c20f9a24f19c3c25"
        ],
        [
            "apply Rcompare_not_Lt_inv.",
            "VernacExtend",
            "0973f93eb7fe8bb8322d964e818892eb4d38c2d7"
        ],
        [
            "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_r.",
            "VernacExtend",
            "34bcdfeca3f7dbf4f58664bc7eb6a647a21afbe2"
        ],
        [
            "change 2%R with (Z2R 2).",
            "VernacExtend",
            "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "apply Rcompare_not_Lt.",
            "VernacExtend",
            "1dcb52a645dbba82ab863d8ce4e714e29a7ca4f7"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "rewrite Hk.",
            "VernacExtend",
            "c5a1e8c9638c5734e858ad671e545e87eb94e50e"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "exact Hstep.",
            "VernacExtend",
            "b26f779744852f784b30df563259393908dfaf1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_step_Mi_Mi_even : forall x k, inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x loc_Exact -> (2 * k = nb_steps)%Z -> inbetween start (start + Z2R nb_steps * step) x (loc_Inexact Eq).",
            "VernacStartTheoremProof",
            "aad7f46c62722545e782bd5a529db99f6d5827d7"
        ],
        [
            "intros x k Hx Hk.",
            "VernacExtend",
            "596ccafb4a9bd24eaf0d20aa737bb9df55a3c85d"
        ],
        [
            "apply inbetween_step_not_Eq with (1 := Hx).",
            "VernacExtend",
            "521eba42e3784391cd297732df44babab788a0b4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Rcompare_Eq.",
            "VernacExtend",
            "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
        ],
        [
            "inversion_clear Hx as [Hx'|].",
            "VernacExtend",
            "059be99ff624d817e4bff35349bfd7536b20c4fe"
        ],
        [
            "rewrite Hx', <- Hk, Z2R_mult.",
            "VernacExtend",
            "465751bfc4671c48b2738b3baf1fdc3882f0a771"
        ],
        [
            "simpl (Z2R 2).",
            "VernacExtend",
            "8dd2f0503bce831d2d51c3b790e760c7d17999f3"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition new_location_even k l := if Zeq_bool k 0 then match l with loc_Exact => l | _ => loc_Inexact Lt end else loc_Inexact match Zcompare (2 * k) nb_steps with | Lt => Lt | Eq => match l with loc_Exact => Eq | _ => Gt end | Gt => Gt end.",
            "VernacDefinition",
            "3bff4ce6b3bf7f47b1d38b902f5a7433e1434b2e"
        ],
        [
            "Theorem new_location_even_correct : Zeven nb_steps = true -> forall x k l, (0 <= k < nb_steps)%Z -> inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x l -> inbetween start (start + Z2R nb_steps * step) x (new_location_even k l).",
            "VernacStartTheoremProof",
            "5cfa45dba41615a2635861a67aa2db7dfb10245e"
        ],
        [
            "intros He x k l Hk Hx.",
            "VernacExtend",
            "b876cd61130656773c4814b4ad03480402fa5930"
        ],
        [
            "unfold new_location_even.",
            "VernacExtend",
            "7e08ec9069e5ceaab5efc52882de0ead8309137a"
        ],
        [
            "destruct (Zeq_bool_spec k 0) as [Hk0|Hk0].",
            "VernacExtend",
            "ac52f35bb0c1416ed57f07d9e4838c456168a004"
        ],
        [
            "rewrite Hk0 in Hx.",
            "VernacExtend",
            "2014120400ae206f0be25b8c942aa7d0242b418e"
        ],
        [
            "rewrite Rmult_0_l, Rplus_0_r, Rmult_1_l in Hx.",
            "VernacExtend",
            "83528142f432dbd26ccd2396bf2c50ab5c003aac"
        ],
        [
            "set (l' := match l with loc_Exact => l | _ => loc_Inexact Lt end).",
            "VernacExtend",
            "57595e883687d248ed81ebe5c96a1be0b84c398d"
        ],
        [
            "assert ((l = loc_Exact /\\ l' = loc_Exact) \\/ (l <> loc_Exact /\\ l' = loc_Inexact Lt)).",
            "VernacExtend",
            "11f17430cc26dbacf1dceaa2bdba24a66c67dfaa"
        ],
        [
            "unfold l' ; case l ; try (now left) ; right ; now split.",
            "VernacExtend",
            "e2b561dacf4d6f20d77cd62e3fc34b35db0fde8c"
        ],
        [
            "destruct H as [(H1,H2)|(H1,H2)] ; rewrite H2.",
            "VernacExtend",
            "4d22e213e7b3a51ef15a1b04b2bace2d69adc5e8"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite H1 in Hx.",
            "VernacExtend",
            "335d31f0659b0c4a69fcb4a0848a6ce12f524f52"
        ],
        [
            "now inversion_clear Hx.",
            "VernacExtend",
            "6ca4a310679750241a7fdbd3da2921cd77ac3873"
        ],
        [
            "now apply inbetween_step_Lo_not_Eq with (2 := H1).",
            "VernacExtend",
            "a4c7c70e96c904bb155c6d1ee98255177f34a704"
        ],
        [
            "destruct (Zcompare_spec (2 * k) nb_steps) as [Hk1|Hk1|Hk1].",
            "VernacExtend",
            "a979276f7a83b3fcd791de99393f09eb10590022"
        ],
        [
            "apply inbetween_step_Lo with (1 := Hx).",
            "VernacExtend",
            "6ec21e8b2ca349803a58fbb5486532b7daea72c6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (Zeven_ex nb_steps).",
            "VernacExtend",
            "90b372334f94d97addace0650088b168961761fe"
        ],
        [
            "rewrite He in H.",
            "VernacExtend",
            "18887a950ea9676c8747f78c8dd7a2172c764131"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "set (l' := match l with loc_Exact => Eq | _ => Gt end).",
            "VernacExtend",
            "b134da86dce5257465c6df077571e273350b5eac"
        ],
        [
            "assert ((l = loc_Exact /\\ l' = Eq) \\/ (l <> loc_Exact /\\ l' = Gt)).",
            "VernacExtend",
            "19afcb2aa9cc607c10eb1cd30af80802cc133ade"
        ],
        [
            "unfold l' ; case l ; try (now left) ; right ; now split.",
            "VernacExtend",
            "e2b561dacf4d6f20d77cd62e3fc34b35db0fde8c"
        ],
        [
            "destruct H as [(H1,H2)|(H1,H2)] ; rewrite H2.",
            "VernacExtend",
            "4d22e213e7b3a51ef15a1b04b2bace2d69adc5e8"
        ],
        [
            "rewrite H1 in Hx.",
            "VernacExtend",
            "335d31f0659b0c4a69fcb4a0848a6ce12f524f52"
        ],
        [
            "now apply inbetween_step_Mi_Mi_even with (1 := Hx).",
            "VernacExtend",
            "17da69f94330002793c9c1127df2050b7678b7cb"
        ],
        [
            "now apply inbetween_step_Hi_Mi_even with (1 := Hx).",
            "VernacExtend",
            "aca3dea3d8d5f225fb2122a175717fd5278b1927"
        ],
        [
            "apply inbetween_step_Hi with (1 := Hx).",
            "VernacExtend",
            "d4a4ca015d8fca674bfaf509c9f171e7068c1764"
        ],
        [
            "exact Hk1.",
            "VernacExtend",
            "672e5c16bf0147204e92dc267a43aa8aa3dee661"
        ],
        [
            "apply Hk.",
            "VernacExtend",
            "f03ccac3a977e415801a182d83ad50611eb23292"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition new_location_odd k l := if Zeq_bool k 0 then match l with loc_Exact => l | _ => loc_Inexact Lt end else loc_Inexact match Zcompare (2 * k + 1) nb_steps with | Lt => Lt | Eq => match l with loc_Inexact l => l | loc_Exact => Lt end | Gt => Gt end.",
            "VernacDefinition",
            "fd8aae77fcb13eaef5c814c9c9f3dfa80d9193ed"
        ],
        [
            "Theorem new_location_odd_correct : Zeven nb_steps = false -> forall x k l, (0 <= k < nb_steps)%Z -> inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x l -> inbetween start (start + Z2R nb_steps * step) x (new_location_odd k l).",
            "VernacStartTheoremProof",
            "e75bb31949dc483d1d3c73b28d0b2c624c6cb3b4"
        ],
        [
            "intros Ho x k l Hk Hx.",
            "VernacExtend",
            "261e6496bb359a2e531044b808150d6212e1a133"
        ],
        [
            "unfold new_location_odd.",
            "VernacExtend",
            "7e4cf995baf4dd83571d55f681a0e7ce84edb65a"
        ],
        [
            "destruct (Zeq_bool_spec k 0) as [Hk0|Hk0].",
            "VernacExtend",
            "ac52f35bb0c1416ed57f07d9e4838c456168a004"
        ],
        [
            "rewrite Hk0 in Hx.",
            "VernacExtend",
            "2014120400ae206f0be25b8c942aa7d0242b418e"
        ],
        [
            "rewrite Rmult_0_l, Rplus_0_r, Rmult_1_l in Hx.",
            "VernacExtend",
            "83528142f432dbd26ccd2396bf2c50ab5c003aac"
        ],
        [
            "set (l' := match l with loc_Exact => l | _ => loc_Inexact Lt end).",
            "VernacExtend",
            "57595e883687d248ed81ebe5c96a1be0b84c398d"
        ],
        [
            "assert ((l = loc_Exact /\\ l' = loc_Exact) \\/ (l <> loc_Exact /\\ l' = loc_Inexact Lt)).",
            "VernacExtend",
            "11f17430cc26dbacf1dceaa2bdba24a66c67dfaa"
        ],
        [
            "unfold l' ; case l ; try (now left) ; right ; now split.",
            "VernacExtend",
            "e2b561dacf4d6f20d77cd62e3fc34b35db0fde8c"
        ],
        [
            "destruct H as [(H1,H2)|(H1,H2)] ; rewrite H2.",
            "VernacExtend",
            "4d22e213e7b3a51ef15a1b04b2bace2d69adc5e8"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite H1 in Hx.",
            "VernacExtend",
            "335d31f0659b0c4a69fcb4a0848a6ce12f524f52"
        ],
        [
            "now inversion_clear Hx.",
            "VernacExtend",
            "6ca4a310679750241a7fdbd3da2921cd77ac3873"
        ],
        [
            "now apply inbetween_step_Lo_not_Eq with (2 := H1).",
            "VernacExtend",
            "a4c7c70e96c904bb155c6d1ee98255177f34a704"
        ],
        [
            "destruct (Zcompare_spec (2 * k + 1) nb_steps) as [Hk1|Hk1|Hk1].",
            "VernacExtend",
            "c5882070600fb4701a048e8d4706599eeb43d75b"
        ],
        [
            "apply inbetween_step_Lo with (1 := Hx) (3 := Hk1).",
            "VernacExtend",
            "2609263bdf53edf108e68ddbea95bff790113a68"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "apply inbetween_step_Lo_Mi_Eq_odd with (1 := Hx) (2 := Hk1).",
            "VernacExtend",
            "46220cdbcfe72eed81a65d207c9a8e0f9cb2b91b"
        ],
        [
            "apply inbetween_step_any_Mi_odd with (1 := Hx) (2 := Hk1).",
            "VernacExtend",
            "427f36a8f5a3b7b285b3444ebcbd844d0c32d49b"
        ],
        [
            "apply inbetween_step_Hi with (1 := Hx).",
            "VernacExtend",
            "d4a4ca015d8fca674bfaf509c9f171e7068c1764"
        ],
        [
            "destruct (Zeven_ex nb_steps).",
            "VernacExtend",
            "90b372334f94d97addace0650088b168961761fe"
        ],
        [
            "rewrite Ho in H.",
            "VernacExtend",
            "11157452a5a1653e9a94b7e8c62afa5a58e43c44"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Hk.",
            "VernacExtend",
            "f03ccac3a977e415801a182d83ad50611eb23292"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition new_location := if Zeven nb_steps then new_location_even else new_location_odd.",
            "VernacDefinition",
            "626652edce8664b61947993f72f43f679dadfdd5"
        ],
        [
            "Theorem new_location_correct : forall x k l, (0 <= k < nb_steps)%Z -> inbetween (start + Z2R k * step) (start + Z2R (k + 1) * step) x l -> inbetween start (start + Z2R nb_steps * step) x (new_location k l).",
            "VernacStartTheoremProof",
            "f57e599037749658b9becfb9ae530488519d6a44"
        ],
        [
            "intros x k l Hk Hx.",
            "VernacExtend",
            "1f383d0c49191adbb46b5744340c4f0dce5ee0c9"
        ],
        [
            "unfold new_location.",
            "VernacExtend",
            "821e36c6b6e409ca19554197ab141033e831bb92"
        ],
        [
            "generalize (refl_equal nb_steps) (Zle_lt_trans _ _ _ (proj1 Hk) (proj2 Hk)).",
            "VernacExtend",
            "e0daa656eb74c4b34e2a0ae6fe31d16673e62de1"
        ],
        [
            "pattern nb_steps at 2 3 5 ; case nb_steps.",
            "VernacExtend",
            "91403a32990adb42ca5d339ca678a76d3a129733"
        ],
        [
            "now intros _.",
            "VernacExtend",
            "db3aad803f621233dc9262991171dfa29e5f6a45"
        ],
        [
            "intros [p|p|] Hp _.",
            "VernacExtend",
            "a725bd310e20c90c64355394388247bba673141d"
        ],
        [
            "apply new_location_odd_correct with (2 := Hk) (3 := Hx).",
            "VernacExtend",
            "3dcd0c0af8c4394a6d0aba86cc0e9cfecc92d28a"
        ],
        [
            "now rewrite Hp.",
            "VernacExtend",
            "cea3c3db7439399bbc773d617b362a71c6f621b3"
        ],
        [
            "apply new_location_even_correct with (2 := Hk) (3 := Hx).",
            "VernacExtend",
            "6578a0be1f6ea17d525f362c0169352ce8c37b1d"
        ],
        [
            "now rewrite Hp.",
            "VernacExtend",
            "cea3c3db7439399bbc773d617b362a71c6f621b3"
        ],
        [
            "now rewrite Hp in Hnb_steps.",
            "VernacExtend",
            "13a2d19806a8fe08e469dd7816210556dbe74c44"
        ],
        [
            "now intros p _.",
            "VernacExtend",
            "a6550d9b60872c71e25411f88bedd8a6c68b849a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fcalc_bracket_step.",
            "VernacEndSegment",
            "f3d26798984934f0a88a4a11c907c4f70ef3376c"
        ],
        [
            "Section Fcalc_bracket_scale.",
            "VernacBeginSection",
            "a8e0631f4ef282ede719ba2e79cac2ec38d68911"
        ],
        [
            "Lemma inbetween_mult_aux : forall x d s, ((x * s + d * s) / 2 = (x + d) / 2 * s)%R.",
            "VernacStartTheoremProof",
            "316c63753d2de824b9515f17d076ebb9c30c1da0"
        ],
        [
            "intros x d s.",
            "VernacExtend",
            "ad31d9da905d4796f764ee3ac87bd258ebe420b2"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_mult_compat : forall x d u l s, (0 < s)%R -> inbetween x d u l -> inbetween (x * s) (d * s) (u * s) l.",
            "VernacStartTheoremProof",
            "1ae402412bc7e459e1136cb98bf4583b295e473e"
        ],
        [
            "intros x d u l s Hs [Hx|l' Hx Hl] ; constructor.",
            "VernacExtend",
            "4067b866174af00b6582d141837f9450f63d0f7b"
        ],
        [
            "now rewrite Hx.",
            "VernacExtend",
            "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
        ],
        [
            "now split ; apply Rmult_lt_compat_r.",
            "VernacExtend",
            "039c2159181e02976582260213c16e371b5c22fd"
        ],
        [
            "rewrite inbetween_mult_aux.",
            "VernacExtend",
            "e8f184298bd92e430ed4733d450e6f48d52e748d"
        ],
        [
            "now rewrite Rcompare_mult_r.",
            "VernacExtend",
            "5a4d1319bc2da75e2e28da3790543837acae207f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_mult_reg : forall x d u l s, (0 < s)%R -> inbetween (x * s) (d * s) (u * s) l -> inbetween x d u l.",
            "VernacStartTheoremProof",
            "fad6a7c80a2da14185b280cff394f98fe3367877"
        ],
        [
            "intros x d u l s Hs [Hx|l' Hx Hl] ; constructor.",
            "VernacExtend",
            "4067b866174af00b6582d141837f9450f63d0f7b"
        ],
        [
            "apply Rmult_eq_reg_r with (1 := Hx).",
            "VernacExtend",
            "de1d30f2d65b653ca027d38701326e2ea2b535c5"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "now split ; apply Rmult_lt_reg_r with s.",
            "VernacExtend",
            "7a57580ef05edc2685be8be659c972d130cfe9e7"
        ],
        [
            "rewrite <- Rcompare_mult_r with (1 := Hs).",
            "VernacExtend",
            "5419eb512f039cbe18a4e2271a90e5385c2860c1"
        ],
        [
            "now rewrite inbetween_mult_aux in Hl.",
            "VernacExtend",
            "16565b955bb2a4c96c9766a7a7e14d793d165b22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fcalc_bracket_scale.",
            "VernacEndSegment",
            "d26ace506db482b53be54284f16f845384ff4c76"
        ],
        [
            "Section Fcalc_bracket_generic.",
            "VernacBeginSection",
            "a7831cb506446bc51e4812a6511f3f44fbcd40e4"
        ],
        [
            "Variable beta : radix.",
            "VernacAssumption",
            "5414570a6751198892ee4a13f107deb4c633e62b"
        ],
        [
            "Notation bpow e := (bpow beta e).",
            "VernacSyntacticDefinition",
            "c796e278ffd17ea9674b52f8e94413782272a594"
        ],
        [
            "Definition inbetween_float m e x l := inbetween (F2R (Float beta m e)) (F2R (Float beta (m + 1) e)) x l.",
            "VernacDefinition",
            "1ffe9b74c26f30eb9e8f49b4e482fd7e866f79e2"
        ],
        [
            "Theorem inbetween_float_bounds : forall x m e l, inbetween_float m e x l -> (F2R (Float beta m e) <= x < F2R (Float beta (m + 1) e))%R.",
            "VernacStartTheoremProof",
            "7329fe42fba27c29eea002fb5bc4ce7c7fff32a3"
        ],
        [
            "intros x m e l [Hx|l' Hx Hl].",
            "VernacExtend",
            "68e48a4e8f182afe02507bd70fed691aa0166021"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply F2R_lt_compat.",
            "VernacExtend",
            "93cbdbd641941108917d658b2f4f041e9a4630dc"
        ],
        [
            "apply Zlt_succ.",
            "VernacExtend",
            "f4cf5b932d8c774be510b7802fbeea627fe15261"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition inbetween_int m x l := inbetween (Z2R m) (Z2R (m + 1)) x l.",
            "VernacDefinition",
            "7fd6413c8534d1ce344cb2e781c678ca7161d20a"
        ],
        [
            "Theorem inbetween_float_new_location : forall x m e l k, (0 < k)%Z -> inbetween_float m e x l -> inbetween_float (Zdiv m (Zpower beta k)) (e + k) x (new_location (Zpower beta k) (Zmod m (Zpower beta k)) l).",
            "VernacStartTheoremProof",
            "b6dce5cbe4c79beb05b51097edfa039728087174"
        ],
        [
            "intros x m e l k Hk Hx.",
            "VernacExtend",
            "f24847d59bfe4ab9af82614d5b2ab61e99a0fd1a"
        ],
        [
            "unfold inbetween_float in *.",
            "VernacExtend",
            "932d5504a01ddc48b9dfbf1a08140e567a89994e"
        ],
        [
            "assert (Hr: forall m, F2R (Float beta m (e + k)) = F2R (Float beta (m * Zpower beta k) e)).",
            "VernacExtend",
            "0abd865cda034c5c0ea94bda8aa826413909c136"
        ],
        [
            "clear -Hk.",
            "VernacExtend",
            "7dbda6c6e41212f51deb695833d9b6969e2ccaad"
        ],
        [
            "intros m.",
            "VernacExtend",
            "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
        ],
        [
            "rewrite (F2R_change_exp beta e).",
            "VernacExtend",
            "3f5ee73fb83b88d96f3383a3fd55f27704742673"
        ],
        [
            "apply (f_equal (fun r => F2R (Float beta (m * Zpower _ r) e))).",
            "VernacExtend",
            "68524af67420e27e729292cae9a99dff5949374f"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (Hp: (Zpower beta k > 0)%Z).",
            "VernacExtend",
            "1af8532b78e07c267116da41dc7a154df3346f91"
        ],
        [
            "apply Zlt_gt.",
            "VernacExtend",
            "0c9f5f2fbabcb44c83f236e290499e43cbae87ee"
        ],
        [
            "apply Zpower_gt_0.",
            "VernacExtend",
            "f464f859abaff7394364ddf07e84a300b7e4e73b"
        ],
        [
            "now apply Zlt_le_weak.",
            "VernacExtend",
            "8df137fb70ba9a1f8f0605f13095da8524766c66"
        ],
        [
            "rewrite 2!Hr.",
            "VernacExtend",
            "833e7547cc15a6da93f51be92cd28ff4b48f6224"
        ],
        [
            "rewrite Zmult_plus_distr_l, Zmult_1_l.",
            "VernacExtend",
            "7f477f240d36d04e6f6d85ec85951ad2fd46a157"
        ],
        [
            "unfold F2R at 2.",
            "VernacExtend",
            "ddd475825d33cf651fd049012f87a1e4cabc4c48"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z2R_plus, Rmult_plus_distr_r.",
            "VernacExtend",
            "db46553146acbf0f6837d68a69e6c4cae7575298"
        ],
        [
            "apply new_location_correct.",
            "VernacExtend",
            "b24fec5d41c1254e1abe7e9eb5ca4e0856c18bfd"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "now apply Zpower_gt_1.",
            "VernacExtend",
            "2f322142ccdf35a529820d12620777a423fdda00"
        ],
        [
            "now apply Z_mod_lt.",
            "VernacExtend",
            "943f0fefbf2fa6f90f5723d988c3fcde13455c4e"
        ],
        [
            "rewrite <- 2!Rmult_plus_distr_r, <- 2!Z2R_plus.",
            "VernacExtend",
            "98b306dd68d1ad33c46bebf9b729dcd82d4395ce"
        ],
        [
            "rewrite Zmult_comm, Zplus_assoc.",
            "VernacExtend",
            "6bc2dfa6b9c63a83168307f76a14d2d9abd2ccd4"
        ],
        [
            "now rewrite <- Z_div_mod_eq.",
            "VernacExtend",
            "3b3f83683fb433d188c6a1991765d83f68ee9f28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_float_new_location_single : forall x m e l, inbetween_float m e x l -> inbetween_float (Zdiv m beta) (e + 1) x (new_location beta (Zmod m beta) l).",
            "VernacStartTheoremProof",
            "14bd10716d28b3f1a10614d6fe6322f73ec25963"
        ],
        [
            "intros x m e l Hx.",
            "VernacExtend",
            "207e3d2f6fb0e831c257a02435d4740d19c716fd"
        ],
        [
            "replace (radix_val beta) with (Zpower beta 1).",
            "VernacExtend",
            "6cf8c166eaec57509d0cb24e6ed7ffa24e7fc105"
        ],
        [
            "now apply inbetween_float_new_location.",
            "VernacExtend",
            "eebd2c5a0f51a0d1dba3fbc02eb3e925713f67ce"
        ],
        [
            "apply Zmult_1_r.",
            "VernacExtend",
            "a1ccfc3cd47e0c160b0b25fd6c5c666168314167"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_float_ex : forall m e l, exists x, inbetween_float m e x l.",
            "VernacStartTheoremProof",
            "893324771b3d3ad92969db24df340c87f649ffde"
        ],
        [
            "intros m e l.",
            "VernacExtend",
            "fbcd7ffc8c42cc3efb39b0982786dd4016af0202"
        ],
        [
            "apply inbetween_ex.",
            "VernacExtend",
            "223101019518fdda9d713d59d45fdf900fc3aeec"
        ],
        [
            "apply F2R_lt_compat.",
            "VernacExtend",
            "93cbdbd641941108917d658b2f4f041e9a4630dc"
        ],
        [
            "apply Zlt_succ.",
            "VernacExtend",
            "f4cf5b932d8c774be510b7802fbeea627fe15261"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inbetween_float_unique : forall x e m l m' l', inbetween_float m e x l -> inbetween_float m' e x l' -> m = m' /\\ l = l'.",
            "VernacStartTheoremProof",
            "039082b25d38ce5c090d2c58c444eab65b951b53"
        ],
        [
            "intros x e m l m' l' H H'.",
            "VernacExtend",
            "2b9c9256c1657cb0482338499478fd7fb500cf67"
        ],
        [
            "refine ((fun Hm => conj Hm _) _).",
            "VernacExtend",
            "03b1e384aff1d0e2ed106a57c65d7152516de892"
        ],
        [
            "rewrite <- Hm in H'.",
            "VernacExtend",
            "509555e1833685c22b0978eb4dfe6a5782c7ca4b"
        ],
        [
            "clear -H H'.",
            "VernacExtend",
            "0297900f88d8062f86aeb9e4958ce3cced20f4b5"
        ],
        [
            "apply inbetween_unique with (1 := H) (2 := H').",
            "VernacExtend",
            "b9306efa917e3292a06a41eeb1a37816079f0869"
        ],
        [
            "destruct (inbetween_float_bounds x m e l H) as (H1,H2).",
            "VernacExtend",
            "59d867e58d63cb16a4a1b515d2903b422c453c98"
        ],
        [
            "destruct (inbetween_float_bounds x m' e l' H') as (H3,H4).",
            "VernacExtend",
            "bf293f704d7004d63441bb31eb180e7f4c5920ad"
        ],
        [
            "cut (m < m' + 1 /\\ m' < m + 1)%Z.",
            "VernacExtend",
            "38d366a15b3b01e53e3e132ddebb4c928bf5b379"
        ],
        [
            "clear ; omega.",
            "VernacExtend",
            "eec4b40e7fab9dab9db362824141f438dba9b179"
        ],
        [
            "now split ; apply F2R_lt_reg with beta e ; apply Rle_lt_trans with x.",
            "VernacExtend",
            "87767d81d1b345794a5b03d1e1cc737234c7bc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fcalc_bracket_generic.",
            "VernacEndSegment",
            "d5f03c6937f1097d92cff0be02bf5e26ccbd0c72"
        ]
    ],
    "proofs": [
        {
            "name": "inbetween_spec",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros Hx.",
                        "VernacExtend",
                        "9276b72df3a882c9b4b954c90d9e870c80a906fc"
                    ]
                },
                {
                    "command": [
                        "unfold inbetween_loc.",
                        "VernacExtend",
                        "2effb044c9261260f42f00fe13c0e00d3134f839"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcompare_spec x d) as [H|H|H].",
                        "VernacExtend",
                        "f0bff041a892f3ffad25651dd8d1db681621ab3a"
                    ]
                },
                {
                    "command": [
                        "now elim Rle_not_lt with (1 := proj1 Hx).",
                        "VernacExtend",
                        "9105bf99dc1a60f519b47d3b6a357c1cfbfbf489"
                    ]
                },
                {
                    "command": [
                        "now constructor.",
                        "VernacExtend",
                        "e001978ec065ef0fd63cb804e72fb73890e93711"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_unique",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros l l' Hl Hl'.",
                        "VernacExtend",
                        "c73d3e89524eb02748668e59348d3c7285b778f9"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hl ; inversion_clear Hl'.",
                        "VernacExtend",
                        "568a864087ff931bedcec7bf28e03840e3eeb735"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_irrefl with (1 := proj1 H0).",
                        "VernacExtend",
                        "f2dc0d71f34d720e6c79b4623e3adf84d3046bdc"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H.",
                        "VernacExtend",
                        "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_irrefl with (1 := proj1 H).",
                        "VernacExtend",
                        "174969eec43cd0e6a1f63e400f01a62f163c0bac"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- H0.",
                        "VernacExtend",
                        "2c1d8246c3e76b0802fe4bece3df6f4423c59a3c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_bounds",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros [Hx|l' Hx Hl] ; clear l.",
                        "VernacExtend",
                        "8df072521404b689f0874aea3999a559fd119341"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "exact Hdu.",
                        "VernacExtend",
                        "5dd73af5233a8b43eec63899d1d4c800c3691d08"
                    ]
                },
                {
                    "command": [
                        "now split ; try apply Rlt_le.",
                        "VernacExtend",
                        "6576048db827390f18326a94589fed94be9eac44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_bounds_not_Eq",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros [Hx|l' Hx Hl] H.",
                        "VernacExtend",
                        "13b916960a111041a5de3a03327d89ddcc1e0286"
                    ]
                },
                {
                    "command": [
                        "now elim H.",
                        "VernacExtend",
                        "25b0f8af2fb84c276497977e57d3240d2a987e06"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_distance_inexact",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros l Hl.",
                        "VernacExtend",
                        "73c348d1ec294870f643ef6a781f4b0c88e45247"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hl as [|l' Hl' Hx].",
                        "VernacExtend",
                        "4a952233656367f4a8b629afe4251f7dd54ec746"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rcompare_middle.",
                        "VernacExtend",
                        "e3f7d60c291e66b3754e71195316ee883d41ebac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_distance_inexact_abs",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros l Hl.",
                        "VernacExtend",
                        "73c348d1ec294870f643ef6a781f4b0c88e45247"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_left1.",
                        "VernacExtend",
                        "959a39766c3ec0e54779596cf6d2e0ed16ff476d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr.",
                        "VernacExtend",
                        "03410ea29af67bdcfa7393931606c01ed23d7394"
                    ]
                },
                {
                    "command": [
                        "now apply inbetween_distance_inexact.",
                        "VernacExtend",
                        "ce901556b9a151afc963f6418370787115f42b8d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_minus.",
                        "VernacExtend",
                        "11bca255824a3f085e9099937bd67db6c181e148"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply (inbetween_bounds _ Hl).",
                        "VernacExtend",
                        "1b3fef2e521fb14639fc93248d74a39e972d9a24"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus.",
                        "VernacExtend",
                        "7e46e8a6683420ce8b2242ac68da7361c6b86840"
                    ]
                },
                {
                    "command": [
                        "apply (inbetween_bounds _ Hl).",
                        "VernacExtend",
                        "1b3fef2e521fb14639fc93248d74a39e972d9a24"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ordered_steps",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros k.",
                        "VernacExtend",
                        "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "e041593c57ec6470673cc705c01d215d230e0676"
                    ]
                },
                {
                    "command": [
                        "exact Hstep.",
                        "VernacExtend",
                        "b26f779744852f784b30df563259393908dfaf1c"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_lt.",
                        "VernacExtend",
                        "20648688afbdacefe3b6070755cbe6f263ce5093"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_succ.",
                        "VernacExtend",
                        "f4cf5b932d8c774be510b7802fbeea627fe15261"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "middle_range",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros k.",
                        "VernacExtend",
                        "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_step_not_Eq",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros x k l l' Hx Hk Hl'.",
                        "VernacExtend",
                        "778a55a8f1fcae6f2fdff2a417212e52b0b68e87"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assert (Hx' := inbetween_bounds _ _ (ordered_steps _) _ _ Hx).",
                        "VernacExtend",
                        "d391f27e901bb96fd52cefa58a0c183e9c21316a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := proj1 Hx').",
                        "VernacExtend",
                        "ddf6d99d6564e77fe456847dcd22c971cb6a67dd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_0_r start) at 1.",
                        "VernacExtend",
                        "b973834af3ac7ddac3d70becda4cbc9125dcf922"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0).",
                        "VernacExtend",
                        "5fe7a71c929f2db40ffef7572e6694713b2d3e81"
                    ]
                },
                {
                    "command": [
                        "exact Hstep.",
                        "VernacExtend",
                        "b26f779744852f784b30df563259393908dfaf1c"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := proj2 Hx').",
                        "VernacExtend",
                        "9186dbf290db341ed9f16eb3f975ba840b50e377"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "now rewrite middle_range.",
                        "VernacExtend",
                        "c46eaddd5adb2c85743632f2ca5c4f174c7aae65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_step_Lo",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "intros x k l Hx Hk1 Hk2.",
                        "VernacExtend",
                        "4c5ab07146cecbd762c7e9fa9f26de8697a8a0ad"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_not_Eq with (1 := Hx).",
                        "VernacExtend",
                        "521eba42e3784391cd297732df44babab788a0b4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt.",
                        "VernacExtend",
                        "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
                    ]
                },
                {
                    "command": [
                        "assert (Hx' := inbetween_bounds _ _ (ordered_steps _) _ _ Hx).",
                        "VernacExtend",
                        "d391f27e901bb96fd52cefa58a0c183e9c21316a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := proj2 Hx').",
                        "VernacExtend",
                        "9186dbf290db341ed9f16eb3f975ba840b50e377"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_not_Lt_inv.",
                        "VernacExtend",
                        "0973f93eb7fe8bb8322d964e818892eb4d38c2d7"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_l.",
                        "VernacExtend",
                        "6826cb45c591d638e246a1d02aa1bfb02689ed53"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_not_Lt.",
                        "VernacExtend",
                        "1dcb52a645dbba82ab863d8ce4e714e29a7ca4f7"
                    ]
                },
                {
                    "command": [
                        "change 2%R with (Z2R 2).",
                        "VernacExtend",
                        "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "exact Hstep.",
                        "VernacExtend",
                        "b26f779744852f784b30df563259393908dfaf1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_step_Hi",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "intros x k l Hx Hk1 Hk2.",
                        "VernacExtend",
                        "4c5ab07146cecbd762c7e9fa9f26de8697a8a0ad"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_not_Eq with (1 := Hx).",
                        "VernacExtend",
                        "521eba42e3784391cd297732df44babab788a0b4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Gt.",
                        "VernacExtend",
                        "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
                    ]
                },
                {
                    "command": [
                        "assert (Hx' := inbetween_bounds _ _ (ordered_steps _) _ _ Hx).",
                        "VernacExtend",
                        "d391f27e901bb96fd52cefa58a0c183e9c21316a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := proj1 Hx').",
                        "VernacExtend",
                        "ddf6d99d6564e77fe456847dcd22c971cb6a67dd"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt_inv.",
                        "VernacExtend",
                        "c84295216e91564a715169217fe9f312aa3f4478"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_l.",
                        "VernacExtend",
                        "6826cb45c591d638e246a1d02aa1bfb02689ed53"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt.",
                        "VernacExtend",
                        "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
                    ]
                },
                {
                    "command": [
                        "change 2%R with (Z2R 2).",
                        "VernacExtend",
                        "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_lt.",
                        "VernacExtend",
                        "20648688afbdacefe3b6070755cbe6f263ce5093"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "exact Hstep.",
                        "VernacExtend",
                        "b26f779744852f784b30df563259393908dfaf1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_step_Lo_not_Eq",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "intros x l Hx Hl.",
                        "VernacExtend",
                        "a946cb40c3492dece119a4477c8bb21085b254d9"
                    ]
                },
                {
                    "command": [
                        "assert (Hx' := inbetween_bounds_not_Eq _ _ _ _ Hx Hl).",
                        "VernacExtend",
                        "f96c57c7eed82360eceafb49d124bbdfe27e6332"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Hx'.",
                        "VernacExtend",
                        "b86ae5b23af511ab5298308aa6904e92e151bdab"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (1 := proj2 Hx').",
                        "VernacExtend",
                        "ac9cef9d685a3875fbd44e89c6fb5c72e017d76e"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_1_l step) at 1.",
                        "VernacExtend",
                        "0cbd1daf26f7a653cff6376ec358f69144095d10"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "e041593c57ec6470673cc705c01d215d230e0676"
                    ]
                },
                {
                    "command": [
                        "exact Hstep.",
                        "VernacExtend",
                        "b26f779744852f784b30df563259393908dfaf1c"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 1).",
                        "VernacExtend",
                        "5011f688ce5df45568c4d67d4ca4257c5429bce4"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt.",
                        "VernacExtend",
                        "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := proj2 Hx').",
                        "VernacExtend",
                        "9186dbf290db341ed9f16eb3f975ba840b50e377"
                    ]
                },
                {
                    "command": [
                        "rewrite middle_range.",
                        "VernacExtend",
                        "7d9734b20ff2f537cb3c1ce60e3932ef25c0e9dd"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_not_Lt_inv.",
                        "VernacExtend",
                        "0973f93eb7fe8bb8322d964e818892eb4d38c2d7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_1_l step) at 2.",
                        "VernacExtend",
                        "d4de17bd68da44805c488e8eda3ef4eabc0f05a1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_l.",
                        "VernacExtend",
                        "6826cb45c591d638e246a1d02aa1bfb02689ed53"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_not_Lt.",
                        "VernacExtend",
                        "1dcb52a645dbba82ab863d8ce4e714e29a7ca4f7"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_le 2).",
                        "VernacExtend",
                        "a279012cca2d7da81553d571f987a3ff96cb7dd1"
                    ]
                },
                {
                    "command": [
                        "now apply (Zlt_le_succ 1).",
                        "VernacExtend",
                        "2ab0b010ee9335d78d78386929be1f69a0cdb818"
                    ]
                },
                {
                    "command": [
                        "exact Hstep.",
                        "VernacExtend",
                        "b26f779744852f784b30df563259393908dfaf1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "middle_odd",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "intros k Hk.",
                        "VernacExtend",
                        "341b086248172f5c94f8f482bb5f483619b45197"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hk.",
                        "VernacExtend",
                        "f883e565a25ccbc6e8ed4cf3fc05adeb909db79f"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!Z2R_plus, Z2R_mult.",
                        "VernacExtend",
                        "f4e7527021e3232b29b63602c912fc2918314ee8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_step_any_Mi_odd",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "intros x k l Hx Hk.",
                        "VernacExtend",
                        "63a74013cdf29508014d736ab542caa1c0383f28"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_not_Eq with (1 := Hx).",
                        "VernacExtend",
                        "521eba42e3784391cd297732df44babab788a0b4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hx as [|l' _ Hl].",
                        "VernacExtend",
                        "97ad9f0d79718821dbe995f34fe170df8c8e7bdd"
                    ]
                },
                {
                    "command": [
                        "now rewrite (middle_odd _ Hk) in Hl.",
                        "VernacExtend",
                        "a566679a82488bd4ec4c9fc4d11323cd71b843ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_step_Lo_Mi_Eq_odd",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "intros x k Hx Hk.",
                        "VernacExtend",
                        "596ccafb4a9bd24eaf0d20aa737bb9df55a3c85d"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_not_Eq with (1 := Hx).",
                        "VernacExtend",
                        "521eba42e3784391cd297732df44babab788a0b4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hx as [Hl|].",
                        "VernacExtend",
                        "208243d83bab4683349966936b77ceabed865506"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl.",
                        "VernacExtend",
                        "bcb5a79f143a574cb4193cb68e496aca9c8a7cc3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_r.",
                        "VernacExtend",
                        "34bcdfeca3f7dbf4f58664bc7eb6a647a21afbe2"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt.",
                        "VernacExtend",
                        "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
                    ]
                },
                {
                    "command": [
                        "change 2%R with (Z2R 2).",
                        "VernacExtend",
                        "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_lt.",
                        "VernacExtend",
                        "20648688afbdacefe3b6070755cbe6f263ce5093"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hk.",
                        "VernacExtend",
                        "f883e565a25ccbc6e8ed4cf3fc05adeb909db79f"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_succ.",
                        "VernacExtend",
                        "f4cf5b932d8c774be510b7802fbeea627fe15261"
                    ]
                },
                {
                    "command": [
                        "exact Hstep.",
                        "VernacExtend",
                        "b26f779744852f784b30df563259393908dfaf1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_step_Hi_Mi_even",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros x k l Hx Hl Hk.",
                        "VernacExtend",
                        "f46a96183a94607faf86b9f5713f9b6e8094c072"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_not_Eq with (1 := Hx).",
                        "VernacExtend",
                        "521eba42e3784391cd297732df44babab788a0b4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Gt.",
                        "VernacExtend",
                        "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
                    ]
                },
                {
                    "command": [
                        "assert (Hx' := inbetween_bounds_not_Eq _ _ _ _ Hx Hl).",
                        "VernacExtend",
                        "f96c57c7eed82360eceafb49d124bbdfe27e6332"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := proj1 Hx').",
                        "VernacExtend",
                        "26e892a72f033ec7fd1ebe14c20f9a24f19c3c25"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_not_Lt_inv.",
                        "VernacExtend",
                        "0973f93eb7fe8bb8322d964e818892eb4d38c2d7"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_plus_l, Rcompare_mult_r, Rcompare_half_r.",
                        "VernacExtend",
                        "34bcdfeca3f7dbf4f58664bc7eb6a647a21afbe2"
                    ]
                },
                {
                    "command": [
                        "change 2%R with (Z2R 2).",
                        "VernacExtend",
                        "1130fc71e1344d754b49116cb28f5a8ef0e6e9ae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_not_Lt.",
                        "VernacExtend",
                        "1dcb52a645dbba82ab863d8ce4e714e29a7ca4f7"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "rewrite Hk.",
                        "VernacExtend",
                        "c5a1e8c9638c5734e858ad671e545e87eb94e50e"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "exact Hstep.",
                        "VernacExtend",
                        "b26f779744852f784b30df563259393908dfaf1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_step_Mi_Mi_even",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "intros x k Hx Hk.",
                        "VernacExtend",
                        "596ccafb4a9bd24eaf0d20aa737bb9df55a3c85d"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_not_Eq with (1 := Hx).",
                        "VernacExtend",
                        "521eba42e3784391cd297732df44babab788a0b4"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Eq.",
                        "VernacExtend",
                        "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hx as [Hx'|].",
                        "VernacExtend",
                        "059be99ff624d817e4bff35349bfd7536b20c4fe"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx', <- Hk, Z2R_mult.",
                        "VernacExtend",
                        "465751bfc4671c48b2738b3baf1fdc3882f0a771"
                    ]
                },
                {
                    "command": [
                        "simpl (Z2R 2).",
                        "VernacExtend",
                        "8dd2f0503bce831d2d51c3b790e760c7d17999f3"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "new_location_even_correct",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intros He x k l Hk Hx.",
                        "VernacExtend",
                        "b876cd61130656773c4814b4ad03480402fa5930"
                    ]
                },
                {
                    "command": [
                        "unfold new_location_even.",
                        "VernacExtend",
                        "7e08ec9069e5ceaab5efc52882de0ead8309137a"
                    ]
                },
                {
                    "command": [
                        "destruct (Zeq_bool_spec k 0) as [Hk0|Hk0].",
                        "VernacExtend",
                        "ac52f35bb0c1416ed57f07d9e4838c456168a004"
                    ]
                },
                {
                    "command": [
                        "rewrite Hk0 in Hx.",
                        "VernacExtend",
                        "2014120400ae206f0be25b8c942aa7d0242b418e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l, Rplus_0_r, Rmult_1_l in Hx.",
                        "VernacExtend",
                        "83528142f432dbd26ccd2396bf2c50ab5c003aac"
                    ]
                },
                {
                    "command": [
                        "set (l' := match l with loc_Exact => l | _ => loc_Inexact Lt end).",
                        "VernacExtend",
                        "57595e883687d248ed81ebe5c96a1be0b84c398d"
                    ]
                },
                {
                    "command": [
                        "assert ((l = loc_Exact /\\ l' = loc_Exact) \\/ (l <> loc_Exact /\\ l' = loc_Inexact Lt)).",
                        "VernacExtend",
                        "11f17430cc26dbacf1dceaa2bdba24a66c67dfaa"
                    ]
                },
                {
                    "command": [
                        "unfold l' ; case l ; try (now left) ; right ; now split.",
                        "VernacExtend",
                        "e2b561dacf4d6f20d77cd62e3fc34b35db0fde8c"
                    ]
                },
                {
                    "command": [
                        "destruct H as [(H1,H2)|(H1,H2)] ; rewrite H2.",
                        "VernacExtend",
                        "4d22e213e7b3a51ef15a1b04b2bace2d69adc5e8"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in Hx.",
                        "VernacExtend",
                        "335d31f0659b0c4a69fcb4a0848a6ce12f524f52"
                    ]
                },
                {
                    "command": [
                        "now inversion_clear Hx.",
                        "VernacExtend",
                        "6ca4a310679750241a7fdbd3da2921cd77ac3873"
                    ]
                },
                {
                    "command": [
                        "now apply inbetween_step_Lo_not_Eq with (2 := H1).",
                        "VernacExtend",
                        "a4c7c70e96c904bb155c6d1ee98255177f34a704"
                    ]
                },
                {
                    "command": [
                        "destruct (Zcompare_spec (2 * k) nb_steps) as [Hk1|Hk1|Hk1].",
                        "VernacExtend",
                        "a979276f7a83b3fcd791de99393f09eb10590022"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_Lo with (1 := Hx).",
                        "VernacExtend",
                        "6ec21e8b2ca349803a58fbb5486532b7daea72c6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (Zeven_ex nb_steps).",
                        "VernacExtend",
                        "90b372334f94d97addace0650088b168961761fe"
                    ]
                },
                {
                    "command": [
                        "rewrite He in H.",
                        "VernacExtend",
                        "18887a950ea9676c8747f78c8dd7a2172c764131"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "set (l' := match l with loc_Exact => Eq | _ => Gt end).",
                        "VernacExtend",
                        "b134da86dce5257465c6df077571e273350b5eac"
                    ]
                },
                {
                    "command": [
                        "assert ((l = loc_Exact /\\ l' = Eq) \\/ (l <> loc_Exact /\\ l' = Gt)).",
                        "VernacExtend",
                        "19afcb2aa9cc607c10eb1cd30af80802cc133ade"
                    ]
                },
                {
                    "command": [
                        "unfold l' ; case l ; try (now left) ; right ; now split.",
                        "VernacExtend",
                        "e2b561dacf4d6f20d77cd62e3fc34b35db0fde8c"
                    ]
                },
                {
                    "command": [
                        "destruct H as [(H1,H2)|(H1,H2)] ; rewrite H2.",
                        "VernacExtend",
                        "4d22e213e7b3a51ef15a1b04b2bace2d69adc5e8"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in Hx.",
                        "VernacExtend",
                        "335d31f0659b0c4a69fcb4a0848a6ce12f524f52"
                    ]
                },
                {
                    "command": [
                        "now apply inbetween_step_Mi_Mi_even with (1 := Hx).",
                        "VernacExtend",
                        "17da69f94330002793c9c1127df2050b7678b7cb"
                    ]
                },
                {
                    "command": [
                        "now apply inbetween_step_Hi_Mi_even with (1 := Hx).",
                        "VernacExtend",
                        "aca3dea3d8d5f225fb2122a175717fd5278b1927"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_Hi with (1 := Hx).",
                        "VernacExtend",
                        "d4a4ca015d8fca674bfaf509c9f171e7068c1764"
                    ]
                },
                {
                    "command": [
                        "exact Hk1.",
                        "VernacExtend",
                        "672e5c16bf0147204e92dc267a43aa8aa3dee661"
                    ]
                },
                {
                    "command": [
                        "apply Hk.",
                        "VernacExtend",
                        "f03ccac3a977e415801a182d83ad50611eb23292"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "new_location_odd_correct",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "intros Ho x k l Hk Hx.",
                        "VernacExtend",
                        "261e6496bb359a2e531044b808150d6212e1a133"
                    ]
                },
                {
                    "command": [
                        "unfold new_location_odd.",
                        "VernacExtend",
                        "7e4cf995baf4dd83571d55f681a0e7ce84edb65a"
                    ]
                },
                {
                    "command": [
                        "destruct (Zeq_bool_spec k 0) as [Hk0|Hk0].",
                        "VernacExtend",
                        "ac52f35bb0c1416ed57f07d9e4838c456168a004"
                    ]
                },
                {
                    "command": [
                        "rewrite Hk0 in Hx.",
                        "VernacExtend",
                        "2014120400ae206f0be25b8c942aa7d0242b418e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l, Rplus_0_r, Rmult_1_l in Hx.",
                        "VernacExtend",
                        "83528142f432dbd26ccd2396bf2c50ab5c003aac"
                    ]
                },
                {
                    "command": [
                        "set (l' := match l with loc_Exact => l | _ => loc_Inexact Lt end).",
                        "VernacExtend",
                        "57595e883687d248ed81ebe5c96a1be0b84c398d"
                    ]
                },
                {
                    "command": [
                        "assert ((l = loc_Exact /\\ l' = loc_Exact) \\/ (l <> loc_Exact /\\ l' = loc_Inexact Lt)).",
                        "VernacExtend",
                        "11f17430cc26dbacf1dceaa2bdba24a66c67dfaa"
                    ]
                },
                {
                    "command": [
                        "unfold l' ; case l ; try (now left) ; right ; now split.",
                        "VernacExtend",
                        "e2b561dacf4d6f20d77cd62e3fc34b35db0fde8c"
                    ]
                },
                {
                    "command": [
                        "destruct H as [(H1,H2)|(H1,H2)] ; rewrite H2.",
                        "VernacExtend",
                        "4d22e213e7b3a51ef15a1b04b2bace2d69adc5e8"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in Hx.",
                        "VernacExtend",
                        "335d31f0659b0c4a69fcb4a0848a6ce12f524f52"
                    ]
                },
                {
                    "command": [
                        "now inversion_clear Hx.",
                        "VernacExtend",
                        "6ca4a310679750241a7fdbd3da2921cd77ac3873"
                    ]
                },
                {
                    "command": [
                        "now apply inbetween_step_Lo_not_Eq with (2 := H1).",
                        "VernacExtend",
                        "a4c7c70e96c904bb155c6d1ee98255177f34a704"
                    ]
                },
                {
                    "command": [
                        "destruct (Zcompare_spec (2 * k + 1) nb_steps) as [Hk1|Hk1|Hk1].",
                        "VernacExtend",
                        "c5882070600fb4701a048e8d4706599eeb43d75b"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_Lo with (1 := Hx) (3 := Hk1).",
                        "VernacExtend",
                        "2609263bdf53edf108e68ddbea95bff790113a68"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_Lo_Mi_Eq_odd with (1 := Hx) (2 := Hk1).",
                        "VernacExtend",
                        "46220cdbcfe72eed81a65d207c9a8e0f9cb2b91b"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_any_Mi_odd with (1 := Hx) (2 := Hk1).",
                        "VernacExtend",
                        "427f36a8f5a3b7b285b3444ebcbd844d0c32d49b"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_step_Hi with (1 := Hx).",
                        "VernacExtend",
                        "d4a4ca015d8fca674bfaf509c9f171e7068c1764"
                    ]
                },
                {
                    "command": [
                        "destruct (Zeven_ex nb_steps).",
                        "VernacExtend",
                        "90b372334f94d97addace0650088b168961761fe"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho in H.",
                        "VernacExtend",
                        "11157452a5a1653e9a94b7e8c62afa5a58e43c44"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Hk.",
                        "VernacExtend",
                        "f03ccac3a977e415801a182d83ad50611eb23292"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "new_location_correct",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "intros x k l Hk Hx.",
                        "VernacExtend",
                        "1f383d0c49191adbb46b5744340c4f0dce5ee0c9"
                    ]
                },
                {
                    "command": [
                        "unfold new_location.",
                        "VernacExtend",
                        "821e36c6b6e409ca19554197ab141033e831bb92"
                    ]
                },
                {
                    "command": [
                        "generalize (refl_equal nb_steps) (Zle_lt_trans _ _ _ (proj1 Hk) (proj2 Hk)).",
                        "VernacExtend",
                        "e0daa656eb74c4b34e2a0ae6fe31d16673e62de1"
                    ]
                },
                {
                    "command": [
                        "pattern nb_steps at 2 3 5 ; case nb_steps.",
                        "VernacExtend",
                        "91403a32990adb42ca5d339ca678a76d3a129733"
                    ]
                },
                {
                    "command": [
                        "now intros _.",
                        "VernacExtend",
                        "db3aad803f621233dc9262991171dfa29e5f6a45"
                    ]
                },
                {
                    "command": [
                        "intros [p|p|] Hp _.",
                        "VernacExtend",
                        "a725bd310e20c90c64355394388247bba673141d"
                    ]
                },
                {
                    "command": [
                        "apply new_location_odd_correct with (2 := Hk) (3 := Hx).",
                        "VernacExtend",
                        "3dcd0c0af8c4394a6d0aba86cc0e9cfecc92d28a"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hp.",
                        "VernacExtend",
                        "cea3c3db7439399bbc773d617b362a71c6f621b3"
                    ]
                },
                {
                    "command": [
                        "apply new_location_even_correct with (2 := Hk) (3 := Hx).",
                        "VernacExtend",
                        "6578a0be1f6ea17d525f362c0169352ce8c37b1d"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hp.",
                        "VernacExtend",
                        "cea3c3db7439399bbc773d617b362a71c6f621b3"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hp in Hnb_steps.",
                        "VernacExtend",
                        "13a2d19806a8fe08e469dd7816210556dbe74c44"
                    ]
                },
                {
                    "command": [
                        "now intros p _.",
                        "VernacExtend",
                        "a6550d9b60872c71e25411f88bedd8a6c68b849a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_mult_aux",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "intros x d s.",
                        "VernacExtend",
                        "ad31d9da905d4796f764ee3ac87bd258ebe420b2"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_mult_compat",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "intros x d u l s Hs [Hx|l' Hx Hl] ; constructor.",
                        "VernacExtend",
                        "4067b866174af00b6582d141837f9450f63d0f7b"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hx.",
                        "VernacExtend",
                        "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
                    ]
                },
                {
                    "command": [
                        "now split ; apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "039c2159181e02976582260213c16e371b5c22fd"
                    ]
                },
                {
                    "command": [
                        "rewrite inbetween_mult_aux.",
                        "VernacExtend",
                        "e8f184298bd92e430ed4733d450e6f48d52e748d"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rcompare_mult_r.",
                        "VernacExtend",
                        "5a4d1319bc2da75e2e28da3790543837acae207f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_mult_reg",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "intros x d u l s Hs [Hx|l' Hx Hl] ; constructor.",
                        "VernacExtend",
                        "4067b866174af00b6582d141837f9450f63d0f7b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_reg_r with (1 := Hx).",
                        "VernacExtend",
                        "de1d30f2d65b653ca027d38701326e2ea2b535c5"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "now split ; apply Rmult_lt_reg_r with s.",
                        "VernacExtend",
                        "7a57580ef05edc2685be8be659c972d130cfe9e7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rcompare_mult_r with (1 := Hs).",
                        "VernacExtend",
                        "5419eb512f039cbe18a4e2271a90e5385c2860c1"
                    ]
                },
                {
                    "command": [
                        "now rewrite inbetween_mult_aux in Hl.",
                        "VernacExtend",
                        "16565b955bb2a4c96c9766a7a7e14d793d165b22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_float_bounds",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "intros x m e l [Hx|l' Hx Hl].",
                        "VernacExtend",
                        "68e48a4e8f182afe02507bd70fed691aa0166021"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply F2R_lt_compat.",
                        "VernacExtend",
                        "93cbdbd641941108917d658b2f4f041e9a4630dc"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_succ.",
                        "VernacExtend",
                        "f4cf5b932d8c774be510b7802fbeea627fe15261"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "apply Hx.",
                        "VernacExtend",
                        "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_float_new_location",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "intros x m e l k Hk Hx.",
                        "VernacExtend",
                        "f24847d59bfe4ab9af82614d5b2ab61e99a0fd1a"
                    ]
                },
                {
                    "command": [
                        "unfold inbetween_float in *.",
                        "VernacExtend",
                        "932d5504a01ddc48b9dfbf1a08140e567a89994e"
                    ]
                },
                {
                    "command": [
                        "assert (Hr: forall m, F2R (Float beta m (e + k)) = F2R (Float beta (m * Zpower beta k) e)).",
                        "VernacExtend",
                        "0abd865cda034c5c0ea94bda8aa826413909c136"
                    ]
                },
                {
                    "command": [
                        "clear -Hk.",
                        "VernacExtend",
                        "7dbda6c6e41212f51deb695833d9b6969e2ccaad"
                    ]
                },
                {
                    "command": [
                        "intros m.",
                        "VernacExtend",
                        "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
                    ]
                },
                {
                    "command": [
                        "rewrite (F2R_change_exp beta e).",
                        "VernacExtend",
                        "3f5ee73fb83b88d96f3383a3fd55f27704742673"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun r => F2R (Float beta (m * Zpower _ r) e))).",
                        "VernacExtend",
                        "68524af67420e27e729292cae9a99dff5949374f"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assert (Hp: (Zpower beta k > 0)%Z).",
                        "VernacExtend",
                        "1af8532b78e07c267116da41dc7a154df3346f91"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_gt.",
                        "VernacExtend",
                        "0c9f5f2fbabcb44c83f236e290499e43cbae87ee"
                    ]
                },
                {
                    "command": [
                        "apply Zpower_gt_0.",
                        "VernacExtend",
                        "f464f859abaff7394364ddf07e84a300b7e4e73b"
                    ]
                },
                {
                    "command": [
                        "now apply Zlt_le_weak.",
                        "VernacExtend",
                        "8df137fb70ba9a1f8f0605f13095da8524766c66"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!Hr.",
                        "VernacExtend",
                        "833e7547cc15a6da93f51be92cd28ff4b48f6224"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_plus_distr_l, Zmult_1_l.",
                        "VernacExtend",
                        "7f477f240d36d04e6f6d85ec85951ad2fd46a157"
                    ]
                },
                {
                    "command": [
                        "unfold F2R at 2.",
                        "VernacExtend",
                        "ddd475825d33cf651fd049012f87a1e4cabc4c48"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus, Rmult_plus_distr_r.",
                        "VernacExtend",
                        "db46553146acbf0f6837d68a69e6c4cae7575298"
                    ]
                },
                {
                    "command": [
                        "apply new_location_correct.",
                        "VernacExtend",
                        "b24fec5d41c1254e1abe7e9eb5ca4e0856c18bfd"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "now apply Zpower_gt_1.",
                        "VernacExtend",
                        "2f322142ccdf35a529820d12620777a423fdda00"
                    ]
                },
                {
                    "command": [
                        "now apply Z_mod_lt.",
                        "VernacExtend",
                        "943f0fefbf2fa6f90f5723d988c3fcde13455c4e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2!Rmult_plus_distr_r, <- 2!Z2R_plus.",
                        "VernacExtend",
                        "98b306dd68d1ad33c46bebf9b729dcd82d4395ce"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_comm, Zplus_assoc.",
                        "VernacExtend",
                        "6bc2dfa6b9c63a83168307f76a14d2d9abd2ccd4"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Z_div_mod_eq.",
                        "VernacExtend",
                        "3b3f83683fb433d188c6a1991765d83f68ee9f28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_float_new_location_single",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "intros x m e l Hx.",
                        "VernacExtend",
                        "207e3d2f6fb0e831c257a02435d4740d19c716fd"
                    ]
                },
                {
                    "command": [
                        "replace (radix_val beta) with (Zpower beta 1).",
                        "VernacExtend",
                        "6cf8c166eaec57509d0cb24e6ed7ffa24e7fc105"
                    ]
                },
                {
                    "command": [
                        "now apply inbetween_float_new_location.",
                        "VernacExtend",
                        "eebd2c5a0f51a0d1dba3fbc02eb3e925713f67ce"
                    ]
                },
                {
                    "command": [
                        "apply Zmult_1_r.",
                        "VernacExtend",
                        "a1ccfc3cd47e0c160b0b25fd6c5c666168314167"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_float_ex",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "intros m e l.",
                        "VernacExtend",
                        "fbcd7ffc8c42cc3efb39b0982786dd4016af0202"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_ex.",
                        "VernacExtend",
                        "223101019518fdda9d713d59d45fdf900fc3aeec"
                    ]
                },
                {
                    "command": [
                        "apply F2R_lt_compat.",
                        "VernacExtend",
                        "93cbdbd641941108917d658b2f4f041e9a4630dc"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_succ.",
                        "VernacExtend",
                        "f4cf5b932d8c774be510b7802fbeea627fe15261"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inbetween_float_unique",
            "line_nb": 420,
            "steps": [
                {
                    "command": [
                        "intros x e m l m' l' H H'.",
                        "VernacExtend",
                        "2b9c9256c1657cb0482338499478fd7fb500cf67"
                    ]
                },
                {
                    "command": [
                        "refine ((fun Hm => conj Hm _) _).",
                        "VernacExtend",
                        "03b1e384aff1d0e2ed106a57c65d7152516de892"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hm in H'.",
                        "VernacExtend",
                        "509555e1833685c22b0978eb4dfe6a5782c7ca4b"
                    ]
                },
                {
                    "command": [
                        "clear -H H'.",
                        "VernacExtend",
                        "0297900f88d8062f86aeb9e4958ce3cced20f4b5"
                    ]
                },
                {
                    "command": [
                        "apply inbetween_unique with (1 := H) (2 := H').",
                        "VernacExtend",
                        "b9306efa917e3292a06a41eeb1a37816079f0869"
                    ]
                },
                {
                    "command": [
                        "destruct (inbetween_float_bounds x m e l H) as (H1,H2).",
                        "VernacExtend",
                        "59d867e58d63cb16a4a1b515d2903b422c453c98"
                    ]
                },
                {
                    "command": [
                        "destruct (inbetween_float_bounds x m' e l' H') as (H3,H4).",
                        "VernacExtend",
                        "bf293f704d7004d63441bb31eb180e7f4c5920ad"
                    ]
                },
                {
                    "command": [
                        "cut (m < m' + 1 /\\ m' < m + 1)%Z.",
                        "VernacExtend",
                        "38d366a15b3b01e53e3e132ddebb4c928bf5b379"
                    ]
                },
                {
                    "command": [
                        "clear ; omega.",
                        "VernacExtend",
                        "eec4b40e7fab9dab9db362824141f438dba9b179"
                    ]
                },
                {
                    "command": [
                        "now split ; apply F2R_lt_reg with beta e ; apply Rle_lt_trans with x.",
                        "VernacExtend",
                        "87767d81d1b345794a5b03d1e1cc737234c7bc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}