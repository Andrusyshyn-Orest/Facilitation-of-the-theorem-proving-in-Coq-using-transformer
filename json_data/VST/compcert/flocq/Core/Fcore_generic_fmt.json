{
    "filename": "compcert/flocq/Core/Fcore_generic_fmt.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Fcore_Raux.",
            "VernacRequire",
            "6a49ff899e4733a5492282770f91634f4e2bce84"
        ],
        [
            "Require Import Fcore_defs.",
            "VernacRequire",
            "a5831df34cd1384c0e8566554919e69e523ebc02"
        ],
        [
            "Require Import Fcore_rnd.",
            "VernacRequire",
            "e56b94f747b869d666d08e61f9804bdee8d2613c"
        ],
        [
            "Require Import Fcore_float_prop.",
            "VernacRequire",
            "cb1b82d62c5b9c01c03fb8d695d9166849c8babe"
        ],
        [
            "Section Generic.",
            "VernacBeginSection",
            "73dbdef3b406b604704918cfc4ce587d0c37ccd2"
        ],
        [
            "Variable beta : radix.",
            "VernacAssumption",
            "5414570a6751198892ee4a13f107deb4c633e62b"
        ],
        [
            "Notation bpow e := (bpow beta e).",
            "VernacSyntacticDefinition",
            "c796e278ffd17ea9674b52f8e94413782272a594"
        ],
        [
            "Section Format.",
            "VernacBeginSection",
            "429cfa314ae618f049f27118d192f43d4e4a45c0"
        ],
        [
            "Variable fexp : Z -> Z.",
            "VernacAssumption",
            "c9cf8938d8929b51922f4ec187aafa959003e732"
        ],
        [
            "Class Valid_exp := valid_exp : forall k : Z, ( (fexp k < k)%Z -> (fexp (k + 1) <= k)%Z ) /\\ ( (k <= fexp k)%Z -> (fexp (fexp k + 1) <= fexp k)%Z /\\ forall l : Z, (l <= fexp k)%Z -> fexp l = fexp k ).",
            "VernacInductive",
            "505a0fc43b1b7385a0e0df92feaf46c0e88470f2"
        ],
        [
            "Context { valid_exp_ : Valid_exp }.",
            "VernacContext",
            "1d3397feb080cf24eee505ef1d0f28e165f8ac48"
        ],
        [
            "Theorem valid_exp_large : forall k l, (fexp k < k)%Z -> (k <= l)%Z -> (fexp l < l)%Z.",
            "VernacStartTheoremProof",
            "207e41e3d371b8cbeb21beb13eca296c7fbe006d"
        ],
        [
            "intros k l Hk H.",
            "VernacExtend",
            "94fd5aea29a707dd5ed41ca26f25cfb14c08f8ed"
        ],
        [
            "apply Znot_ge_lt.",
            "VernacExtend",
            "3a41d2310b70caaa796f877eb6b440290e0b2081"
        ],
        [
            "intros Hl.",
            "VernacExtend",
            "5c4705396c649f586841a9235569b2230fedbd7f"
        ],
        [
            "apply Zge_le in Hl.",
            "VernacExtend",
            "8687d72de03c08103ffff14cd81755390ae0184e"
        ],
        [
            "assert (H' := proj2 (proj2 (valid_exp l) Hl) k).",
            "VernacExtend",
            "c59e5d8635e4e3f3606dfeb74c27961ead740c67"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem valid_exp_large' : forall k l, (fexp k < k)%Z -> (l <= k)%Z -> (fexp l < k)%Z.",
            "VernacStartTheoremProof",
            "b8cf0cd5d48a4694ef4c88b240feeccb961b4737"
        ],
        [
            "intros k l Hk H.",
            "VernacExtend",
            "94fd5aea29a707dd5ed41ca26f25cfb14c08f8ed"
        ],
        [
            "apply Znot_ge_lt.",
            "VernacExtend",
            "3a41d2310b70caaa796f877eb6b440290e0b2081"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "apply Zge_le in H'.",
            "VernacExtend",
            "4432861beea4e1a6763439df0951944120e88c4c"
        ],
        [
            "assert (Hl := Zle_trans _ _ _ H H').",
            "VernacExtend",
            "d102685495473bae7c6c1f11decff431155348af"
        ],
        [
            "apply valid_exp in Hl.",
            "VernacExtend",
            "83e8016f3a2798810ecca7c8541366842e8f4195"
        ],
        [
            "assert (H1 := proj2 Hl k H').",
            "VernacExtend",
            "bbc839ffeffe2f4c7354357ee394c26028546380"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition canonic_exp x := fexp (ln_beta beta x).",
            "VernacDefinition",
            "331dcf4817b71163a37fcdfe7483c5bcdf2d9f87"
        ],
        [
            "Definition canonic (f : float beta) := Fexp f = canonic_exp (F2R f).",
            "VernacDefinition",
            "e1de092a9e3a63cfeec9d7b6d88dab62bca137eb"
        ],
        [
            "Definition scaled_mantissa x := (x * bpow (- canonic_exp x))%R.",
            "VernacDefinition",
            "37892c9f48c6e0737d4587ad7ea8aabe26ee2170"
        ],
        [
            "Definition generic_format (x : R) := x = F2R (Float beta (Ztrunc (scaled_mantissa x)) (canonic_exp x)).",
            "VernacDefinition",
            "9a427e5664849f701898f1050e62133f15ee5014"
        ],
        [
            "Theorem generic_format_0 : generic_format 0.",
            "VernacStartTheoremProof",
            "f437a92b57ac7d2bbfa1f944a25150b9be2fd520"
        ],
        [
            "unfold generic_format, scaled_mantissa.",
            "VernacExtend",
            "5dd3f7c8b737397d5f7a50337d30185eb9353de9"
        ],
        [
            "rewrite Rmult_0_l.",
            "VernacExtend",
            "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
        ],
        [
            "change (Ztrunc 0) with (Ztrunc (Z2R 0)).",
            "VernacExtend",
            "113da410db2a60e7d11b82e38e61cde7a10745d5"
        ],
        [
            "now rewrite Ztrunc_Z2R, F2R_0.",
            "VernacExtend",
            "a33877889992af581fab76940b1c439a90b8fb47"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_exp_opp : forall x, canonic_exp (-x) = canonic_exp x.",
            "VernacStartTheoremProof",
            "2ee2ad2fba0a189c7ae438668a7cd27ccec38426"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "now rewrite ln_beta_opp.",
            "VernacExtend",
            "5351695def44af96e3aa89b6a597f8dc68274385"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_exp_abs : forall x, canonic_exp (Rabs x) = canonic_exp x.",
            "VernacStartTheoremProof",
            "26158f5dd5def288af4c7157cc73db08d0705db0"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "now rewrite ln_beta_abs.",
            "VernacExtend",
            "70800e7bcca84e364527f7e50f01c888d5e12e8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_bpow : forall e, (fexp (e + 1) <= e)%Z -> generic_format (bpow e).",
            "VernacStartTheoremProof",
            "60d78b917799c2d9c9e3c2c9b178d62b237e0687"
        ],
        [
            "intros e H.",
            "VernacExtend",
            "d0b6fb9f08610a6ada67daf7c09c41e9e4f08eb4"
        ],
        [
            "unfold generic_format, scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "de5b77fe63834fa08b5f256387ac961205f531a0"
        ],
        [
            "rewrite ln_beta_bpow.",
            "VernacExtend",
            "562ed7a7f197615f8fb2cc276e6bc8e10357a919"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "rewrite <- (Z2R_Zpower beta (e + - fexp (e + 1))).",
            "VernacExtend",
            "ebcd23c360c93485f44e08eab66d470b652b68a2"
        ],
        [
            "rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
        ],
        [
            "rewrite <- F2R_bpow.",
            "VernacExtend",
            "29562ae2f86921a1e7081119c136279f93ff5e77"
        ],
        [
            "rewrite F2R_change_exp with (1 := H).",
            "VernacExtend",
            "e3e9affd2be8fbc43d829c257ab6738f680b03e2"
        ],
        [
            "now rewrite Zmult_1_l.",
            "VernacExtend",
            "eafda3f30939309f3a7824e9ac0a12511cd200e8"
        ],
        [
            "now apply Zle_minus_le_0.",
            "VernacExtend",
            "17c2cb27e85ea36789b13d90d3bf4957b04c6bb0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_bpow' : forall e, (fexp e <= e)%Z -> generic_format (bpow e).",
            "VernacStartTheoremProof",
            "2eb8a3f1249886264f148af7f21ed4ffe7961b2e"
        ],
        [
            "intros e He.",
            "VernacExtend",
            "933455ac9e50417dcc771605432cd330296b74b2"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "destruct (Zle_lt_or_eq _ _ He).",
            "VernacExtend",
            "fe902647be3b9a18dc3c6ed271dda39e9e7a509b"
        ],
        [
            "now apply valid_exp_.",
            "VernacExtend",
            "851252786b2ec456a1fa604e7e9dcaa2e724ea34"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply valid_exp.",
            "VernacExtend",
            "9335fa4770b756f93530fd54152de0507ba39d3b"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_F2R : forall m e, ( m <> 0 -> canonic_exp (F2R (Float beta m e)) <= e )%Z -> generic_format (F2R (Float beta m e)).",
            "VernacStartTheoremProof",
            "d8d1c52edd9d9173fcde55c7664fd37a1b475dfe"
        ],
        [
            "intros m e.",
            "VernacExtend",
            "87373ecd1defa17e19f5893f4866e22d7a98f7ba"
        ],
        [
            "destruct (Z_eq_dec m 0) as [Zm|Zm].",
            "VernacExtend",
            "8c759be9d3e57234d391680cfa38fa8e990684fc"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "rewrite Zm, F2R_0.",
            "VernacExtend",
            "b5fda876f08728239cd704dcc276f3bd0689d17e"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "unfold generic_format, scaled_mantissa.",
            "VernacExtend",
            "5dd3f7c8b737397d5f7a50337d30185eb9353de9"
        ],
        [
            "set (e' := canonic_exp (F2R (Float beta m e))).",
            "VernacExtend",
            "bfd01bb7ea116600a3c76c2a253d3f7a69e6c18e"
        ],
        [
            "intros He.",
            "VernacExtend",
            "dfbedaae88fb1ac0f1e0aadf409bd4a7b0ced9da"
        ],
        [
            "specialize (He Zm).",
            "VernacExtend",
            "10e6f5c1526e731bae1d0456acd0fe8a51e53afb"
        ],
        [
            "unfold F2R at 3.",
            "VernacExtend",
            "27270af7dd164f967da81ceb2c6170fea841d03a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite F2R_change_exp with (1 := He).",
            "VernacExtend",
            "4e0613555cc1af55c051b940df3e5abfe0625a28"
        ],
        [
            "apply F2R_eq_compat.",
            "VernacExtend",
            "bc1e4623b2196fb23776bd02c10b33de36f7515b"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus, <- Z2R_Zpower, <- Z2R_mult.",
            "VernacExtend",
            "a5efdf1ae4f472f72ffa259f1c5c2eef179850b3"
        ],
        [
            "now rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d27986c7f3c113e4c1cfe86d8597084c9806942"
        ],
        [
            "now apply Zle_left.",
            "VernacExtend",
            "2fb4f47f309d122be1aa508fc62f46b27eee4792"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generic_format_F2R': forall (x:R) (f:float beta), F2R f = x -> ((x <> 0)%R -> (canonic_exp x <= Fexp f)%Z) -> generic_format x.",
            "VernacStartTheoremProof",
            "8838f883a7aa08237bdd279c1fd267288cbdde28"
        ],
        [
            "intros x f H1 H2.",
            "VernacExtend",
            "581397b26875ae02f88522d1a89b5e782f379586"
        ],
        [
            "rewrite <- H1; destruct f as (m,e).",
            "VernacExtend",
            "7f4803bf2bb7c2fab6f98887fce05a2c803e9cd5"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "simpl in *; intros H3.",
            "VernacExtend",
            "58a1e07bfcc8ee7059ce46b18f64bf4fc16991d7"
        ],
        [
            "rewrite H1; apply H2.",
            "VernacExtend",
            "f36c7364cfa09360a8477e9112d6257ac0331ab5"
        ],
        [
            "intros Y; apply H3.",
            "VernacExtend",
            "58897bb5b669ef075ece74d0999fcc3f47ed8d04"
        ],
        [
            "apply F2R_eq_0_reg with beta e.",
            "VernacExtend",
            "df63e52f8b1f41fa25bd5082528160fab8173109"
        ],
        [
            "now rewrite H1.",
            "VernacExtend",
            "1172ac45f58471854abbfe26373581bfebca221c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_opp : forall m e, canonic (Float beta m e) -> canonic (Float beta (-m) e).",
            "VernacStartTheoremProof",
            "302ff372ef5c72e1a52c54c691e13cc4a1c6f05b"
        ],
        [
            "intros m e H.",
            "VernacExtend",
            "c2ddf735ed018afdde6b1492b1675c7da72a8137"
        ],
        [
            "unfold canonic.",
            "VernacExtend",
            "6a198835d9b378599c1fa5419c9760cfac4e66cc"
        ],
        [
            "now rewrite F2R_Zopp, canonic_exp_opp.",
            "VernacExtend",
            "99ce7e4be80fa02427d0b27f3b94a7aa8ef0cf0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_abs : forall m e, canonic (Float beta m e) -> canonic (Float beta (Zabs m) e).",
            "VernacStartTheoremProof",
            "3564c39b9cc87b3e2e35aa4c90734963ed55c612"
        ],
        [
            "intros m e H.",
            "VernacExtend",
            "c2ddf735ed018afdde6b1492b1675c7da72a8137"
        ],
        [
            "unfold canonic.",
            "VernacExtend",
            "6a198835d9b378599c1fa5419c9760cfac4e66cc"
        ],
        [
            "now rewrite F2R_Zabs, canonic_exp_abs.",
            "VernacExtend",
            "4e0e47b1ffbfcaba816cbebee7f382ae26ed44f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_0: canonic (Float beta 0 (fexp (ln_beta beta 0%R))).",
            "VernacStartTheoremProof",
            "b5fdd8640c62d9d06c440b7d99ece403696fa10e"
        ],
        [
            "unfold canonic; simpl; unfold canonic_exp.",
            "VernacExtend",
            "3cd045d744321b72f0e1ac1163b264f24f0fdc89"
        ],
        [
            "replace (F2R {| Fnum := 0; Fexp := fexp (ln_beta beta 0) |}) with 0%R.",
            "VernacExtend",
            "6e09755db3172d081ab6b5c75c7fafa42cbdb684"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold F2R; simpl; ring.",
            "VernacExtend",
            "f8c00c9c0cf05538647493d6c088dac9492f3d52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_unicity : forall f1 f2, canonic f1 -> canonic f2 -> F2R f1 = F2R f2 -> f1 = f2.",
            "VernacStartTheoremProof",
            "815b594ac56633fefe83d7b64093754f02e7dfec"
        ],
        [
            "intros (m1, e1) (m2, e2).",
            "VernacExtend",
            "0ebf19b3cdf90ba1cd3e5ced109926fe8715b988"
        ],
        [
            "unfold canonic.",
            "VernacExtend",
            "6a198835d9b378599c1fa5419c9760cfac4e66cc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros H1 H2 H.",
            "VernacExtend",
            "72dac5b298cbfc489f403a08ef6dadbbd39f71cd"
        ],
        [
            "rewrite H in H1.",
            "VernacExtend",
            "72668ea55992bff4c6a64774b37a8290e2ed12ee"
        ],
        [
            "rewrite <- H2 in H1.",
            "VernacExtend",
            "8866c762e9c242679de3395f9ee2e4d71a759815"
        ],
        [
            "clear H2.",
            "VernacExtend",
            "d86cdda4c02f9faf6d4c6694d967beddb27ce36a"
        ],
        [
            "rewrite H1 in H |- *.",
            "VernacExtend",
            "f5f1c03af6393114b7cd8c8ffd1c6f0cae6ffa5a"
        ],
        [
            "apply (f_equal (fun m => Float beta m e2)).",
            "VernacExtend",
            "2eaee81b39e57ca9fab8688875a793658904016d"
        ],
        [
            "apply F2R_eq_reg with (1 := H).",
            "VernacExtend",
            "1bc3248eacbec8baf5abff7a567bdbb9da9e64f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem scaled_mantissa_generic : forall x, generic_format x -> scaled_mantissa x = Z2R (Ztrunc (scaled_mantissa x)).",
            "VernacStartTheoremProof",
            "0239e5998afc65c76c9c03e4235113584721bce6"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "pattern x at 1 3 ; rewrite Hx.",
            "VernacExtend",
            "18ac8f5737f91489baa5bba929775d6fdf665ef0"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
            "VernacExtend",
            "d22582b85c489a47adda69f7972f01c491afc3e8"
        ],
        [
            "now rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d27986c7f3c113e4c1cfe86d8597084c9806942"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem scaled_mantissa_mult_bpow : forall x, (scaled_mantissa x * bpow (canonic_exp x))%R = x.",
            "VernacStartTheoremProof",
            "a4508853d22af73c907cd149155e080affe54a1e"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_l.",
            "VernacExtend",
            "d55454cba6848d88d9d82738236a4ed8919238d1"
        ],
        [
            "apply Rmult_1_r.",
            "VernacExtend",
            "7e290e72327ec53766aaa3b6504d3f54d3250d15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem scaled_mantissa_0 : scaled_mantissa 0 = 0%R.",
            "VernacStartTheoremProof",
            "cc05ea5e57dad9a127b78c1c929dd2a82e716405"
        ],
        [
            "apply Rmult_0_l.",
            "VernacExtend",
            "9d2fdd56dbced8968cf28714ab54a4daf5852a4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem scaled_mantissa_opp : forall x, scaled_mantissa (-x) = (-scaled_mantissa x)%R.",
            "VernacStartTheoremProof",
            "810ce292706dd5b489c47091fdec30bb1c35aad2"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite canonic_exp_opp.",
            "VernacExtend",
            "4f64bd993701cd658ccc00c4e33911f0305a20f4"
        ],
        [
            "now rewrite Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "1b7b97984e6714bb3e8b12a380038dfcfa613a3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem scaled_mantissa_abs : forall x, scaled_mantissa (Rabs x) = Rabs (scaled_mantissa x).",
            "VernacStartTheoremProof",
            "3a00776966b095785b2dfb057c7f51798ae38267"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite canonic_exp_abs, Rabs_mult.",
            "VernacExtend",
            "756be3ae9864c5e0c1b9828f1f2a79def60ccbd7"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Rabs_pos_eq.",
            "VernacExtend",
            "84ed980db60aa71de2fd237885e8f143313c5575"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_opp : forall x, generic_format x -> generic_format (-x).",
            "VernacStartTheoremProof",
            "04d537019a8a47c9fcc8cd823f149af66e4020b8"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold generic_format.",
            "VernacExtend",
            "a62257dc9b3d0326e5266d774af361152364eac7"
        ],
        [
            "rewrite scaled_mantissa_opp, canonic_exp_opp.",
            "VernacExtend",
            "fdc51b02eb5f867b58e719b5e976571d5682744f"
        ],
        [
            "rewrite Ztrunc_opp.",
            "VernacExtend",
            "29f2d2fa89b52b72b65faf9ac8af6455bda883a2"
        ],
        [
            "rewrite F2R_Zopp.",
            "VernacExtend",
            "14dc9704af59104fbc8331cc5f22daa96d394349"
        ],
        [
            "now apply f_equal.",
            "VernacExtend",
            "2be51066ac0713afbd2686f67010448cf5cd7ac9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_abs : forall x, generic_format x -> generic_format (Rabs x).",
            "VernacStartTheoremProof",
            "cf2d3f330806cb2dd90d925c4708799ee7c05d00"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold generic_format.",
            "VernacExtend",
            "a62257dc9b3d0326e5266d774af361152364eac7"
        ],
        [
            "rewrite scaled_mantissa_abs, canonic_exp_abs.",
            "VernacExtend",
            "e14a4235a464c4b77b2c50c8f3c871be41db918c"
        ],
        [
            "rewrite Ztrunc_abs.",
            "VernacExtend",
            "af86a4973a6e0af4135571b318a714a155932fe9"
        ],
        [
            "rewrite F2R_Zabs.",
            "VernacExtend",
            "66f910e5a29dea24936afff0b12cbc4a00a79405"
        ],
        [
            "now apply f_equal.",
            "VernacExtend",
            "2be51066ac0713afbd2686f67010448cf5cd7ac9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_abs_inv : forall x, generic_format (Rabs x) -> generic_format x.",
            "VernacStartTheoremProof",
            "8ed11456d7f0e201a858b99740a213af59a65c7c"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold generic_format, Rabs.",
            "VernacExtend",
            "74e38b54a3b396db62e4ed9058596da00ddf3143"
        ],
        [
            "case Rcase_abs ; intros _.",
            "VernacExtend",
            "4bc2d44e16eb96839334934b9b42113acf42af5f"
        ],
        [
            "rewrite scaled_mantissa_opp, canonic_exp_opp, Ztrunc_opp.",
            "VernacExtend",
            "8fdafc3e6c3cfcbccc90aee1f4cc97abe3c14d12"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite <- (Ropp_involutive x) at 1.",
            "VernacExtend",
            "63447bf08a27f79bf5158c9d9ac857dc78661462"
        ],
        [
            "rewrite H, F2R_Zopp.",
            "VernacExtend",
            "d9c6c3319e42363a75498ee8e2c11c5dc8b514da"
        ],
        [
            "apply Ropp_involutive.",
            "VernacExtend",
            "5693ee789e165349a2c109e8f1a16d4ccb445cfd"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_exp_fexp : forall x ex, (bpow (ex - 1) <= Rabs x < bpow ex)%R -> canonic_exp x = fexp ex.",
            "VernacStartTheoremProof",
            "9e35ef64f60824f03dda3330fb14997f00482280"
        ],
        [
            "intros x ex Hx.",
            "VernacExtend",
            "65e46be335892465f3d9716db11d76ecdaaba19a"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "now rewrite ln_beta_unique with (1 := Hx).",
            "VernacExtend",
            "53241dc96ce8f663d19395a52edd0a1aa1c58118"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_exp_fexp_pos : forall x ex, (bpow (ex - 1) <= x < bpow ex)%R -> canonic_exp x = fexp ex.",
            "VernacStartTheoremProof",
            "3cd40e7de12c9dd60b5bef66e6bd61a143bc914d"
        ],
        [
            "intros x ex Hx.",
            "VernacExtend",
            "65e46be335892465f3d9716db11d76ecdaaba19a"
        ],
        [
            "apply canonic_exp_fexp.",
            "VernacExtend",
            "ba7969e9a351da992729f2c38274cc63b9ec6221"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "apply Rle_trans with (2 := proj1 Hx).",
            "VernacExtend",
            "e212c0840714cfa4a152b9f288f8175433a4111d"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mantissa_small_pos : forall x ex, (bpow (ex - 1) <= x < bpow ex)%R -> (ex <= fexp ex)%Z -> (0 < x * bpow (- fexp ex) < 1)%R.",
            "VernacStartTheoremProof",
            "ad52c06f77028aaf391cf308fec765c252d5928c"
        ],
        [
            "intros x ex Hx He.",
            "VernacExtend",
            "f4a6b960fe733dc80febaef503e2ee5d5445520f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply Rlt_le_trans with (2 := proj1 Hx).",
            "VernacExtend",
            "11ab885f736bece1573f763b584891184f0d5f44"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Rmult_lt_reg_r with (bpow (fexp ex)).",
            "VernacExtend",
            "db8549e322c71beef9547ac9d0caeb26551bab81"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_l.",
            "VernacExtend",
            "d55454cba6848d88d9d82738236a4ed8919238d1"
        ],
        [
            "rewrite Rmult_1_r, Rmult_1_l.",
            "VernacExtend",
            "22e5cd8f03285244e204bff59daa3e77f52499a7"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Hx).",
            "VernacExtend",
            "e7ca6c9a098514e50bc26584178aaf1bac3efdda"
        ],
        [
            "now apply bpow_le.",
            "VernacExtend",
            "b07fc0e6cc6b5e33c8f24f56e53ed07e1d95cb75"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem scaled_mantissa_small : forall x ex, (Rabs x < bpow ex)%R -> (ex <= fexp ex)%Z -> (Rabs (scaled_mantissa x) < 1)%R.",
            "VernacStartTheoremProof",
            "3a76daeddb807baf3853ee1fe897882d4bd12c4e"
        ],
        [
            "intros x ex Ex He.",
            "VernacExtend",
            "4c7ef9e0299d4dd0754c7ab4bc0a662251c620a4"
        ],
        [
            "destruct (Req_dec x 0) as [Zx|Zx].",
            "VernacExtend",
            "b0fb74435c9a75d48c2d5b5e52e145e2f5a5444e"
        ],
        [
            "rewrite Zx, scaled_mantissa_0, Rabs_R0.",
            "VernacExtend",
            "3ffa3ce99b50a2fef614b183c4f70ebe08dca100"
        ],
        [
            "now apply (Z2R_lt 0 1).",
            "VernacExtend",
            "8881bbe7f156e41a8b754c4f89238c660a066b32"
        ],
        [
            "rewrite <- scaled_mantissa_abs.",
            "VernacExtend",
            "417525f3e0adb8d32b49deb62d8f5245c0bbd450"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite canonic_exp_abs.",
            "VernacExtend",
            "7f07af68b3be03eb10c9c1245d80b26e09c99fdd"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "destruct (ln_beta beta x) as (ex', Ex').",
            "VernacExtend",
            "3cadd4dbab6281b527d128bb2e7badc443238584"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "specialize (Ex' Zx).",
            "VernacExtend",
            "b9807764ec8acb326578e567497fd976bfa976e9"
        ],
        [
            "apply (mantissa_small_pos _ _ Ex').",
            "VernacExtend",
            "0f81cef055d4e5db3b0e1cf9bf0fed8dce981175"
        ],
        [
            "assert (ex' <= fexp ex)%Z.",
            "VernacExtend",
            "85d56a8cadf3b5f077fc020908f92dbf4203228e"
        ],
        [
            "apply Zle_trans with (2 := He).",
            "VernacExtend",
            "87c6088bd035658f08d07ef7b93834d63120738c"
        ],
        [
            "apply bpow_lt_bpow with beta.",
            "VernacExtend",
            "870ce5ea9072298b4170c8019ad8cc2184ae063e"
        ],
        [
            "now apply Rle_lt_trans with (2 := Ex).",
            "VernacExtend",
            "cc36ddb65120fec8de47d2ee824ed9e6dcb411c7"
        ],
        [
            "now rewrite (proj2 (proj2 (valid_exp _) He)).",
            "VernacExtend",
            "d30e931ed5e6cc589bd0d1751691ac48e67b4331"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem abs_scaled_mantissa_lt_bpow : forall x, (Rabs (scaled_mantissa x) < bpow (ln_beta beta x - canonic_exp x))%R.",
            "VernacStartTheoremProof",
            "9b6e7d0513d5f2c213924546722f9ff668627ee4"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Req_dec x 0) as [Zx|Zx].",
            "VernacExtend",
            "b0fb74435c9a75d48c2d5b5e52e145e2f5a5444e"
        ],
        [
            "rewrite Zx, scaled_mantissa_0, Rabs_R0.",
            "VernacExtend",
            "3ffa3ce99b50a2fef614b183c4f70ebe08dca100"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Rlt_le_trans with (1 := bpow_ln_beta_gt beta _).",
            "VernacExtend",
            "d0a2d187c4f0eecd7c965f123bf6426ae3500792"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite ln_beta_mult_bpow with (1 := Zx).",
            "VernacExtend",
            "56462ba2808abd7c59d71ac73627c02f3d25ac62"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_generic_gt : forall x, (x <> 0)%R -> generic_format x -> (canonic_exp x < ln_beta beta x)%Z.",
            "VernacStartTheoremProof",
            "08819802c4e4d08b5da17fda1526ddfe75874be1"
        ],
        [
            "intros x Zx Gx.",
            "VernacExtend",
            "b2a2a5e49b5333c0c08d5720b0df0ec2be3234d1"
        ],
        [
            "apply Znot_ge_lt.",
            "VernacExtend",
            "3a41d2310b70caaa796f877eb6b440290e0b2081"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "destruct (ln_beta beta x) as (ex,Ex) ; simpl.",
            "VernacExtend",
            "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
        ],
        [
            "specialize (Ex Zx).",
            "VernacExtend",
            "60a98592e41f8e51b8b8f13d2a29bc7a3ff55447"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Zge_le in H.",
            "VernacExtend",
            "e747d57c3f2d0614e47a10ee3bdde21daafca75d"
        ],
        [
            "generalize (scaled_mantissa_small x ex (proj2 Ex) H).",
            "VernacExtend",
            "32e84b3581debc2a535392c25d79b629d5b7d883"
        ],
        [
            "contradict Zx.",
            "VernacExtend",
            "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
        ],
        [
            "rewrite Gx.",
            "VernacExtend",
            "a1cd2da725c6af37ba6729d578a073c7bc93aa78"
        ],
        [
            "replace (Ztrunc (scaled_mantissa x)) with Z0.",
            "VernacExtend",
            "49f26ac3c56ca27f88932dd57a99b1ee0080111c"
        ],
        [
            "apply F2R_0.",
            "VernacExtend",
            "196be1ac823d0297c8d480b5085663e7d015d281"
        ],
        [
            "cut (Zabs (Ztrunc (scaled_mantissa x)) < 1)%Z.",
            "VernacExtend",
            "e15be877a064ffd324f681b1e1e1f3eebfedff79"
        ],
        [
            "clear ; zify ; omega.",
            "VernacExtend",
            "a6e41cc90e30259e80ee8e4f58a89b520b38df88"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "rewrite Z2R_abs.",
            "VernacExtend",
            "cf58612f915d64d0c2ad568d55a990877f8a2b6d"
        ],
        [
            "now rewrite <- scaled_mantissa_generic.",
            "VernacExtend",
            "6846fe079807807da745ecc24e04c3d726c53364"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mantissa_DN_small_pos : forall x ex, (bpow (ex - 1) <= x < bpow ex)%R -> (ex <= fexp ex)%Z -> Zfloor (x * bpow (- fexp ex)) = Z0.",
            "VernacStartTheoremProof",
            "2348ffd1ea5edab3cb9c3791e7ad77f75cabd186"
        ],
        [
            "intros x ex Hx He.",
            "VernacExtend",
            "f4a6b960fe733dc80febaef503e2ee5d5445520f"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (H := mantissa_small_pos x ex Hx He).",
            "VernacExtend",
            "ca5a1022d048f129eb12a538e378b487b5ba0ddf"
        ],
        [
            "split ; try apply Rlt_le ; apply H.",
            "VernacExtend",
            "07590b5b23bfe20ab4d400edc80b1f06783de910"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mantissa_UP_small_pos : forall x ex, (bpow (ex - 1) <= x < bpow ex)%R -> (ex <= fexp ex)%Z -> Zceil (x * bpow (- fexp ex)) = 1%Z.",
            "VernacStartTheoremProof",
            "36051f1a558f5c2413dc331e99a1f4679a75038e"
        ],
        [
            "intros x ex Hx He.",
            "VernacExtend",
            "f4a6b960fe733dc80febaef503e2ee5d5445520f"
        ],
        [
            "apply Zceil_imp.",
            "VernacExtend",
            "c9c91122777c8963f3fcab430c53aa15ef0b2dba"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (H := mantissa_small_pos x ex Hx He).",
            "VernacExtend",
            "ca5a1022d048f129eb12a538e378b487b5ba0ddf"
        ],
        [
            "split ; try apply Rlt_le ; apply H.",
            "VernacExtend",
            "07590b5b23bfe20ab4d400edc80b1f06783de910"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_discrete : forall x m, let e := canonic_exp x in (F2R (Float beta m e) < x < F2R (Float beta (m + 1) e))%R -> ~ generic_format x.",
            "VernacStartTheoremProof",
            "35b15da8c24547db349320966194dfa5913ac07e"
        ],
        [
            "intros x m e (Hx,Hx2) Hf.",
            "VernacExtend",
            "00bcf4549d4bcbcb2e61294fe5387d8ea40512b8"
        ],
        [
            "apply Rlt_not_le with (1 := Hx2).",
            "VernacExtend",
            "59228d16c772c187ab7bc87fa8bbefaf153b8253"
        ],
        [
            "clear Hx2.",
            "VernacExtend",
            "cb01c0195c302d6420851e8a8b32c1dbbee43ee0"
        ],
        [
            "rewrite Hf.",
            "VernacExtend",
            "4b4ea75b42501c41b9cce49efd492d21013c9685"
        ],
        [
            "fold e.",
            "VernacExtend",
            "d48ae3baca33b9353dad3c6792818723063df99e"
        ],
        [
            "apply F2R_le_compat.",
            "VernacExtend",
            "8bba15ecfc5793bb41769739c12cc1736c6b0ba6"
        ],
        [
            "apply Zlt_le_succ.",
            "VernacExtend",
            "070de595889f014f0a173659377506422eb25080"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "rewrite <- scaled_mantissa_generic with (1 := Hf).",
            "VernacExtend",
            "b92060b1f721617669ea15eddb3cb27a2cda5839"
        ],
        [
            "apply Rmult_lt_reg_r with (bpow e).",
            "VernacExtend",
            "b26ff243a59fac18787249ed2716e0161bf7f5f1"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "now rewrite scaled_mantissa_mult_bpow.",
            "VernacExtend",
            "fab99b6471eeaf42de834b44e57b617fc8d6582a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_canonic : forall f, canonic f -> generic_format (F2R f).",
            "VernacStartTheoremProof",
            "aa539402229f8573afd8b8c28b0fa00a510e7395"
        ],
        [
            "intros (m, e) Hf.",
            "VernacExtend",
            "60db62f7e6e69168887adadb8fb175cb080bc29e"
        ],
        [
            "unfold canonic in Hf.",
            "VernacExtend",
            "0e098a3fffcfa13019483a0cf2ec9b8e5279595c"
        ],
        [
            "simpl in Hf.",
            "VernacExtend",
            "fcb5032bdc02ce318beb038babaea61e5194fe85"
        ],
        [
            "unfold generic_format, scaled_mantissa.",
            "VernacExtend",
            "5dd3f7c8b737397d5f7a50337d30185eb9353de9"
        ],
        [
            "rewrite <- Hf.",
            "VernacExtend",
            "c2a104a968e91e1dadc20b044f294fa371a758e8"
        ],
        [
            "apply F2R_eq_compat.",
            "VernacExtend",
            "bc1e4623b2196fb23776bd02c10b33de36f7515b"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
            "VernacExtend",
            "d22582b85c489a47adda69f7972f01c491afc3e8"
        ],
        [
            "now rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d27986c7f3c113e4c1cfe86d8597084c9806942"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_ge_bpow : forall emin, ( forall e, (emin <= fexp e)%Z ) -> forall x, (0 < x)%R -> generic_format x -> (bpow emin <= x)%R.",
            "VernacStartTheoremProof",
            "9573da0b7833e438405c3c35b44f2355fd3cf9ee"
        ],
        [
            "intros emin Emin x Hx Fx.",
            "VernacExtend",
            "cb31cb28fda62fbf3456c9b0bd0968b07925e167"
        ],
        [
            "rewrite Fx.",
            "VernacExtend",
            "6d5fef6b9bb5c0abc3b57cf7001ef10fc8718bc8"
        ],
        [
            "apply Rle_trans with (bpow (fexp (ln_beta beta x))).",
            "VernacExtend",
            "549e1e00fffd18e936d2389b6473c04ff103cf85"
        ],
        [
            "now apply bpow_le.",
            "VernacExtend",
            "b07fc0e6cc6b5e33c8f24f56e53ed07e1d95cb75"
        ],
        [
            "apply bpow_le_F2R.",
            "VernacExtend",
            "803e6795d722fe9c018879dc40129c1bb37d679b"
        ],
        [
            "apply F2R_gt_0_reg with beta (canonic_exp x).",
            "VernacExtend",
            "92f7f844fba63a194ff66e871b68d084c8d2af1d"
        ],
        [
            "now rewrite <- Fx.",
            "VernacExtend",
            "c7a603b21e388817cbad5f1ef8746b776a29bf93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem abs_lt_bpow_prec: forall prec, (forall e, (e - prec <= fexp e)%Z) -> forall x, (Rabs x < bpow (prec + canonic_exp x))%R.",
            "VernacStartTheoremProof",
            "8a18734d584b23367ce79aa007da36dbaf063298"
        ],
        [
            "intros prec Hp x.",
            "VernacExtend",
            "fc07eb3bb1448e2e0197524ae57d7f4e0d176008"
        ],
        [
            "case (Req_dec x 0); intros Hxz.",
            "VernacExtend",
            "8dbb02233d5c2ca1ff35d374351481f35e5756b8"
        ],
        [
            "rewrite Hxz, Rabs_R0.",
            "VernacExtend",
            "53c678a9ae2e3dffd464f541963b476f897deed2"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "destruct (ln_beta beta x) as (ex,Ex) ; simpl.",
            "VernacExtend",
            "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
        ],
        [
            "specialize (Ex Hxz).",
            "VernacExtend",
            "a66c597fb31b2ec10f7d7fa5e05f8a24b55a11f9"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Ex).",
            "VernacExtend",
            "207c5221aac8c478d3b1d3f25a3245f046a0073f"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "specialize (Hp ex).",
            "VernacExtend",
            "fffc787054484b691878e5f0d6b359778c3df28a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_bpow_inv' : forall e, generic_format (bpow e) -> (fexp (e + 1) <= e)%Z.",
            "VernacStartTheoremProof",
            "e7d1380ffaea98d29ac9b9ea1684794542e6b7e0"
        ],
        [
            "intros e He.",
            "VernacExtend",
            "933455ac9e50417dcc771605432cd330296b74b2"
        ],
        [
            "apply Znot_gt_le.",
            "VernacExtend",
            "6a456f2f3e4f8c27d98bc6ea2a92afbf3ad279d0"
        ],
        [
            "contradict He.",
            "VernacExtend",
            "2910b2d5d0b7d4fb79d0b4d468d1005b17659b2c"
        ],
        [
            "unfold generic_format, scaled_mantissa, canonic_exp, F2R.",
            "VernacExtend",
            "4bd010ad35424112658e18922317a90e6e58d76f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite ln_beta_bpow, <- bpow_plus.",
            "VernacExtend",
            "b9b1e8d57adbb6a24c509ed8403a533d07609d1a"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "rewrite Ztrunc_floor.",
            "VernacExtend",
            "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
        ],
        [
            "2: apply bpow_ge_0.",
            "VernacExtend",
            "8cca2c2766d3b161d408096312c09533476d797c"
        ],
        [
            "rewrite Zfloor_imp with (n := Z0).",
            "VernacExtend",
            "5ba9d02b31f86f621fe8dde6acd08b72c3ca3fa4"
        ],
        [
            "rewrite Rmult_0_l.",
            "VernacExtend",
            "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply (bpow_lt _ _ 0).",
            "VernacExtend",
            "4ae3a0476b4d6a7ef340304f280f2dc694df0ca5"
        ],
        [
            "clear -He ; omega.",
            "VernacExtend",
            "ca3c9a3de6a55c4e031b6bd8157e101fb83ce0c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_bpow_inv : forall e, generic_format (bpow e) -> (fexp e <= e)%Z.",
            "VernacStartTheoremProof",
            "a9af98dc1304fa404850a93409a4d152a17adff8"
        ],
        [
            "intros e He.",
            "VernacExtend",
            "933455ac9e50417dcc771605432cd330296b74b2"
        ],
        [
            "apply generic_format_bpow_inv' in He.",
            "VernacExtend",
            "5420dc43cda76f7b8e4ebf109bdb7a4f30899ebf"
        ],
        [
            "assert (H := valid_exp_large' (e + 1) e).",
            "VernacExtend",
            "dddc5e75bc9f0bf0f8ea011be4ee139b4e7a051b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Fcore_generic_round_pos.",
            "VernacBeginSection",
            "6d27c36d3e7884b8f87b204def6a2423265a2d75"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Class Valid_rnd := { Zrnd_le : forall x y, (x <= y)%R -> (rnd x <= rnd y)%Z ; Zrnd_Z2R : forall n, rnd (Z2R n) = n }.",
            "VernacInductive",
            "44c8c908f2a23a0acb98622c4a0aff7f27f2ff61"
        ],
        [
            "Context { valid_rnd : Valid_rnd }.",
            "VernacContext",
            "375244bd9a93591c1402d991960da1dbbebd9817"
        ],
        [
            "Theorem Zrnd_DN_or_UP : forall x, rnd x = Zfloor x \\/ rnd x = Zceil x.",
            "VernacStartTheoremProof",
            "0fd011cae4d02584fd52ccb982d805e534b8cb6a"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Zle_or_lt (rnd x) (Zfloor x)) as [Hx|Hx].",
            "VernacExtend",
            "e1e074d70143d002f85aa45650d15c2e9675d51c"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply Zle_antisym with (1 := Hx).",
            "VernacExtend",
            "e6259be27beffe1d6eea84d2bf71e90fa2f1ab5f"
        ],
        [
            "rewrite <- (Zrnd_Z2R (Zfloor x)).",
            "VernacExtend",
            "381872b16c5b104ded227f521cb3e2e20506232b"
        ],
        [
            "apply Zrnd_le.",
            "VernacExtend",
            "40a015e9273d06e9e9e1204712ee76e014c94f7e"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply Zle_antisym.",
            "VernacExtend",
            "d5fb169d90b6dbda1fca926c28e78732e286a418"
        ],
        [
            "rewrite <- (Zrnd_Z2R (Zceil x)).",
            "VernacExtend",
            "5a4f4ae80aa7270fbe259786fcf64a9793faf2bd"
        ],
        [
            "apply Zrnd_le.",
            "VernacExtend",
            "40a015e9273d06e9e9e1204712ee76e014c94f7e"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "rewrite Zceil_floor_neq.",
            "VernacExtend",
            "b4fc727910b2a0e4293920fe2596a742e2d62876"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite <- H in Hx.",
            "VernacExtend",
            "8e6ca116b22f8bbc7720d3ba22c209f418c446a0"
        ],
        [
            "rewrite Zfloor_Z2R, Zrnd_Z2R in Hx.",
            "VernacExtend",
            "90e4f8c8c132a3244ae599e80e232aa48af649e4"
        ],
        [
            "apply Zlt_irrefl with (1 := Hx).",
            "VernacExtend",
            "d6d804c452f4ea0d3e7db2e1b9b79b126925374f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zrnd_ZR_or_AW : forall x, rnd x = Ztrunc x \\/ rnd x = Zaway x.",
            "VernacStartTheoremProof",
            "9e84bf05a0783b518f1eebc38d7f56bf0f16a08a"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold Ztrunc, Zaway.",
            "VernacExtend",
            "88bc38e27882fc0af4898612d910a19f5da49d23"
        ],
        [
            "destruct (Zrnd_DN_or_UP x) as [Hx|Hx] ; case Rlt_bool.",
            "VernacExtend",
            "2a9b48e877ffce2c8eeab9d03ad578b05e86d78b"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition round x := F2R (Float beta (rnd (scaled_mantissa x)) (canonic_exp x)).",
            "VernacDefinition",
            "b073debaf5a08599b5df05808261ccf639f096b9"
        ],
        [
            "Theorem round_bounded_large_pos : forall x ex, (fexp ex < ex)%Z -> (bpow (ex - 1) <= x < bpow ex)%R -> (bpow (ex - 1) <= round x <= bpow ex)%R.",
            "VernacStartTheoremProof",
            "158add0d726f093e850015c6bb159ba4e1133e7e"
        ],
        [
            "intros x ex He Hx.",
            "VernacExtend",
            "f4ed1e648f5ebef2364bc30e257ee29cc7ebf2b2"
        ],
        [
            "unfold round, scaled_mantissa.",
            "VernacExtend",
            "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
        ],
        [
            "rewrite (canonic_exp_fexp_pos _ _ Hx).",
            "VernacExtend",
            "ee65f3ae8db9cb4b5a103ddae66a6fcf8ef197d6"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (Zrnd_DN_or_UP (x * bpow (- fexp ex))) as [Hr|Hr] ; rewrite Hr.",
            "VernacExtend",
            "8d9b0bb063c9aecb8fbf940dee5ff4159b3e2ca3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "replace (ex - 1)%Z with (ex - 1 + - fexp ex + fexp ex)%Z by ring.",
            "VernacExtend",
            "4b0da0edc651a092e8e63cb46f449a24eca84ac6"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "assert (Hf: Z2R (Zpower beta (ex - 1 - fexp ex)) = bpow (ex - 1 + - fexp ex)).",
            "VernacExtend",
            "56bd474991e12d74b3f21cf79872bc2c01097450"
        ],
        [
            "apply Z2R_Zpower.",
            "VernacExtend",
            "d1db08cb7fff330669608b0fd9f379850ccd3950"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite <- Hf.",
            "VernacExtend",
            "c2a104a968e91e1dadc20b044f294fa371a758e8"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "apply Zfloor_lub.",
            "VernacExtend",
            "2a3f8e59d303f192a648e4eef260195d5e8b9977"
        ],
        [
            "rewrite Hf.",
            "VernacExtend",
            "4b4ea75b42501c41b9cce49efd492d21013c9685"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "apply Rle_trans with (2 := Rlt_le _ _ (proj2 Hx)).",
            "VernacExtend",
            "0de3473cf8cbc6afc73cfcf2a263da6561bf54f6"
        ],
        [
            "apply Rmult_le_reg_r with (bpow (- fexp ex)).",
            "VernacExtend",
            "c72e167d9625d241bb861c4e5279abe75a5a35f9"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
            "VernacExtend",
            "d22582b85c489a47adda69f7972f01c491afc3e8"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (1 := proj1 Hx).",
            "VernacExtend",
            "a51646dc10c68deeda041c21a02bf48aff082643"
        ],
        [
            "apply Rmult_le_reg_r with (bpow (- fexp ex)).",
            "VernacExtend",
            "c72e167d9625d241bb861c4e5279abe75a5a35f9"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
            "VernacExtend",
            "d22582b85c489a47adda69f7972f01c491afc3e8"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "pattern ex at 3 ; replace ex with (ex - fexp ex + fexp ex)%Z by ring.",
            "VernacExtend",
            "4125660b623c9b411fd6bdcb57ee779f4b4a20a9"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "assert (Hf: Z2R (Zpower beta (ex - fexp ex)) = bpow (ex - fexp ex)).",
            "VernacExtend",
            "3529dd49c015b4394af20397243d97eb8fe97c92"
        ],
        [
            "apply Z2R_Zpower.",
            "VernacExtend",
            "d1db08cb7fff330669608b0fd9f379850ccd3950"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite <- Hf.",
            "VernacExtend",
            "c2a104a968e91e1dadc20b044f294fa371a758e8"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "apply Zceil_glb.",
            "VernacExtend",
            "524f59be3c7aaf779be7bc5579e0b8cbb0c3a327"
        ],
        [
            "rewrite Hf.",
            "VernacExtend",
            "4b4ea75b42501c41b9cce49efd492d21013c9685"
        ],
        [
            "unfold Zminus.",
            "VernacExtend",
            "7085d4231409167767072da1bd24eb73ce98a683"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_bounded_small_pos : forall x ex, (ex <= fexp ex)%Z -> (bpow (ex - 1) <= x < bpow ex)%R -> round x = 0%R \\/ round x = bpow (fexp ex).",
            "VernacStartTheoremProof",
            "9a80403a91c74eca066e9a70f0f66c9ace461e94"
        ],
        [
            "intros x ex He Hx.",
            "VernacExtend",
            "f4ed1e648f5ebef2364bc30e257ee29cc7ebf2b2"
        ],
        [
            "unfold round, scaled_mantissa.",
            "VernacExtend",
            "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
        ],
        [
            "rewrite (canonic_exp_fexp_pos _ _ Hx).",
            "VernacExtend",
            "ee65f3ae8db9cb4b5a103ddae66a6fcf8ef197d6"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (Zrnd_DN_or_UP (x * bpow (-fexp ex))) as [Hr|Hr] ; rewrite Hr.",
            "VernacExtend",
            "8d9b0bb063c9aecb8fbf940dee5ff4159b3e2ca3"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply Rmult_eq_0_compat_r.",
            "VernacExtend",
            "bcda6698aeadf456bdd40487b042246f6ec3a43b"
        ],
        [
            "apply (@f_equal _ _ Z2R _ Z0).",
            "VernacExtend",
            "b921fe92c42948603208e5361e5c777462b542fe"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "refine (let H := _ in conj (Rlt_le _ _ (proj1 H)) (proj2 H)).",
            "VernacExtend",
            "f819ca306f25c7de174b8926d49d4ddcd2cb9ccc"
        ],
        [
            "now apply mantissa_small_pos.",
            "VernacExtend",
            "4eb8b19184144728711c38cf47e95ca3b0fc1bc6"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "pattern (bpow (fexp ex)) at 2 ; rewrite <- Rmult_1_l.",
            "VernacExtend",
            "74b89f2a7a1f65ee88a3c74cb561284a1c20d727"
        ],
        [
            "apply (f_equal (fun m => (m * bpow (fexp ex))%R)).",
            "VernacExtend",
            "0997879cbe56879faf0d550506b40b5d7cecde4e"
        ],
        [
            "apply (@f_equal _ _ Z2R _ 1%Z).",
            "VernacExtend",
            "1cf41713f4220393a22d9c2279d748ffefd2bc2d"
        ],
        [
            "apply Zceil_imp.",
            "VernacExtend",
            "c9c91122777c8963f3fcab430c53aa15ef0b2dba"
        ],
        [
            "refine (let H := _ in conj (proj1 H) (Rlt_le _ _ (proj2 H))).",
            "VernacExtend",
            "d531ed838df6c170cbec0087a62398ced5d12ec7"
        ],
        [
            "now apply mantissa_small_pos.",
            "VernacExtend",
            "4eb8b19184144728711c38cf47e95ca3b0fc1bc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_le_pos : forall x y, (0 < x)%R -> (x <= y)%R -> (round x <= round y)%R.",
            "VernacStartTheoremProof",
            "b2ced2a673a51564ca7501f80b01195e9ca174d0"
        ],
        [
            "intros x y Hx Hxy.",
            "VernacExtend",
            "e2fa962759626d3d2c242c0e1b9e884dd173573f"
        ],
        [
            "destruct (ln_beta beta x) as [ex Hex].",
            "VernacExtend",
            "bb232b502d55ad8cbbad9bb24f05eec63aa1682b"
        ],
        [
            "destruct (ln_beta beta y) as [ey Hey].",
            "VernacExtend",
            "5f5dd2553ee9b2f5cde0dee9801e96a28258e9b3"
        ],
        [
            "specialize (Hex (Rgt_not_eq _ _ Hx)).",
            "VernacExtend",
            "32abedc89c1bc6c4ce8ffe91ee839810ce8bee32"
        ],
        [
            "specialize (Hey (Rgt_not_eq _ _ (Rlt_le_trans _ _ _ Hx Hxy))).",
            "VernacExtend",
            "a020669df15f940de79e04eaffe54727d240232a"
        ],
        [
            "rewrite Rabs_pos_eq in Hex.",
            "VernacExtend",
            "023228d0261770c6e8ff1777b98c78a77b6abb22"
        ],
        [
            "2: now apply Rlt_le.",
            "VernacExtend",
            "9f23ebd721c661ddcc58b37b3d2937dd87b4451e"
        ],
        [
            "rewrite Rabs_pos_eq in Hey.",
            "VernacExtend",
            "a5c21012855c0f6067d88b1d8329e8875e59437e"
        ],
        [
            "2: apply Rle_trans with (2:=Hxy); now apply Rlt_le.",
            "VernacExtend",
            "f55161ab1ee88cc593aeb8debeb4f31cc4afcd21"
        ],
        [
            "assert (He: (ex <= ey)%Z).",
            "VernacExtend",
            "4b7529e5fc5a6a4a254a006fe5431eb6c245f44b"
        ],
        [
            "apply bpow_lt_bpow with beta.",
            "VernacExtend",
            "870ce5ea9072298b4170c8019ad8cc2184ae063e"
        ],
        [
            "apply Rle_lt_trans with (1 := proj1 Hex).",
            "VernacExtend",
            "ff6512817e99a650e6ce243254a7ceefde9ff8e2"
        ],
        [
            "now apply Rle_lt_trans with y.",
            "VernacExtend",
            "8a130a9973b7e01eeedb965a4ce3bce6fffc5870"
        ],
        [
            "assert (Heq: fexp ex = fexp ey -> (round x <= round y)%R).",
            "VernacExtend",
            "eefb789b60843855e1ab48ed0050cc83e954d57e"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "unfold round, scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "770e82e59444f7b0a563dadc86949e25d7ecc323"
        ],
        [
            "rewrite ln_beta_unique_pos with (1 := Hex).",
            "VernacExtend",
            "57e4ef4823fc3f65337bd78757b1316883db53c1"
        ],
        [
            "rewrite ln_beta_unique_pos with (1 := Hey).",
            "VernacExtend",
            "a88cd0297f7175e4d6830e5b3e6514fd15583acf"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply F2R_le_compat.",
            "VernacExtend",
            "8bba15ecfc5793bb41769739c12cc1736c6b0ba6"
        ],
        [
            "apply Zrnd_le.",
            "VernacExtend",
            "40a015e9273d06e9e9e1204712ee76e014c94f7e"
        ],
        [
            "apply Rmult_le_compat_r with (2 := Hxy).",
            "VernacExtend",
            "20a193519de653605e6a64655328925ee15af936"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "destruct (Zle_or_lt ey (fexp ey)) as [Hy1|Hy1].",
            "VernacExtend",
            "870f6b0426191d053318f8d85001e5058164e25a"
        ],
        [
            "apply Heq.",
            "VernacExtend",
            "bb166f28913e4713dec882777f222b5e7b9617a8"
        ],
        [
            "apply valid_exp with (1 := Hy1).",
            "VernacExtend",
            "56134839f253736ad98539e0779f4b7309a7d74a"
        ],
        [
            "now apply Zle_trans with ey.",
            "VernacExtend",
            "22d72bca9d6273de232235ea5d0eea033c9e89eb"
        ],
        [
            "destruct (Zle_lt_or_eq _ _ He) as [He'|He'].",
            "VernacExtend",
            "130bdec311848b592d69a90c08bab7b0161b51bb"
        ],
        [
            "2: now apply Heq, f_equal.",
            "VernacExtend",
            "dcbcdf35c384677443db1d25118bf4ae27c7a9a4"
        ],
        [
            "apply Rle_trans with (bpow (ey - 1)).",
            "VernacExtend",
            "9f24963ab34a6be5803f0d0f978b8cae3add75cb"
        ],
        [
            "2: now apply round_bounded_large_pos.",
            "VernacExtend",
            "609e2d9fe5bf8275ba2000a4ed07690fdf7af0b1"
        ],
        [
            "destruct (Zle_or_lt ex (fexp ex)) as [Hx1|Hx1].",
            "VernacExtend",
            "c920202097d714fd925aac1c81a08bb9bccc325e"
        ],
        [
            "destruct (round_bounded_small_pos _ _ Hx1 Hex) as [-> | ->].",
            "VernacExtend",
            "057a4f53afef707c4d53e8f84a56ef59146d8608"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "apply valid_exp, proj2 in Hx1.",
            "VernacExtend",
            "b42c9c7b46e21952997238a7f5a74e42a0f4ba9f"
        ],
        [
            "specialize (Hx1 ey).",
            "VernacExtend",
            "806ff81f6820b4d1dac12dc1e2e3540ead5a2664"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Rle_trans with (bpow ex).",
            "VernacExtend",
            "75011d099e54d81fab847d517fd0053eb4166e6f"
        ],
        [
            "now apply round_bounded_large_pos.",
            "VernacExtend",
            "a21316af9255d72709117817a9f096d1d8f8732a"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "now apply Z.lt_le_pred.",
            "VernacExtend",
            "2dd05af0a4f8b9e06d382323f57e1b61903b5b88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_generic : forall x, generic_format x -> round x = x.",
            "VernacStartTheoremProof",
            "aba199c88a69245d3e0bb83b6de662c73f2997c4"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "rewrite scaled_mantissa_generic with (1 := Hx).",
            "VernacExtend",
            "7c652371b1a9ceab9a1a93659bba501c3252ad7a"
        ],
        [
            "rewrite Zrnd_Z2R.",
            "VernacExtend",
            "ba0187195ffbc1f2b678c968899f2bf96cb7a871"
        ],
        [
            "now apply sym_eq.",
            "VernacExtend",
            "fef6d39327ad6dbcb8bd592a66f35c86d0ac26ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_0 : round 0 = 0%R.",
            "VernacStartTheoremProof",
            "c4668deea1711c68d301faaa5fc9483820d5e95c"
        ],
        [
            "unfold round, scaled_mantissa.",
            "VernacExtend",
            "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
        ],
        [
            "rewrite Rmult_0_l.",
            "VernacExtend",
            "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "rewrite Zrnd_Z2R.",
            "VernacExtend",
            "ba0187195ffbc1f2b678c968899f2bf96cb7a871"
        ],
        [
            "apply F2R_0.",
            "VernacExtend",
            "196be1ac823d0297c8d480b5085663e7d015d281"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem exp_small_round_0_pos : forall x ex, (bpow (ex - 1) <= x < bpow ex)%R -> round x = 0%R -> (ex <= fexp ex)%Z .",
            "VernacStartTheoremProof",
            "d8ef99f8c357ea11ed1b481a864c2f89601449a5"
        ],
        [
            "intros x ex H H1.",
            "VernacExtend",
            "b1ed015106187534858c93af016ddceb65ca23bf"
        ],
        [
            "case (Zle_or_lt ex (fexp ex)); trivial; intros V.",
            "VernacExtend",
            "e2be575c3b48e5ef97f39068a7965c8ba68d1172"
        ],
        [
            "contradict H1.",
            "VernacExtend",
            "0b63c4e4adfc14aec173e00d9e5760db696ca49f"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply Rlt_le_trans with (bpow (ex-1)).",
            "VernacExtend",
            "64eeedcde39633794562643475dd560dbfcdbb37"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply (round_bounded_large_pos); assumption.",
            "VernacExtend",
            "f351f4b957d5a999ce0d9364550d53167df283cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_round_pos : forall x, (0 < x)%R -> generic_format (round x).",
            "VernacStartTheoremProof",
            "b324ca5bfe7a1e184c873fe723ac1e05c931b162"
        ],
        [
            "intros x Hx0.",
            "VernacExtend",
            "7f611647e43f764a82db31deb10d3cb2607081df"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Hex).",
            "VernacExtend",
            "21921c4b6ef8de5f8e2c767fee1f9565dd6a946e"
        ],
        [
            "specialize (Hex (Rgt_not_eq _ _ Hx0)).",
            "VernacExtend",
            "6020e735a320cb585162cb95f85d32715b4e8874"
        ],
        [
            "rewrite Rabs_pos_eq in Hex.",
            "VernacExtend",
            "023228d0261770c6e8ff1777b98c78a77b6abb22"
        ],
        [
            "2: now apply Rlt_le.",
            "VernacExtend",
            "9f23ebd721c661ddcc58b37b3d2937dd87b4451e"
        ],
        [
            "destruct (Zle_or_lt ex (fexp ex)) as [He|He].",
            "VernacExtend",
            "2a61ad3e5b562e1ee7f9ef80b844852fcbbbc13b"
        ],
        [
            "destruct (round_bounded_small_pos _ _ He Hex) as [Hr|Hr] ; rewrite Hr.",
            "VernacExtend",
            "2c5792ffcbf9eda81d87d3af44e772b3cceae3ea"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "generalize (round_bounded_large_pos _ _ He Hex).",
            "VernacExtend",
            "f7c54b4e0e3765fe835a58df5b774f7add5f4869"
        ],
        [
            "intros (Hr1, Hr2).",
            "VernacExtend",
            "ddb968f133b783b764e1536ec764d76daf1afa49"
        ],
        [
            "destruct (Rle_or_lt (bpow ex) (round x)) as [Hr|Hr].",
            "VernacExtend",
            "cf25fc2a669c1723f04ff81e25039a93256c07c9"
        ],
        [
            "rewrite <- (Rle_antisym _ _ Hr Hr2).",
            "VernacExtend",
            "7ec908b894cadcfdd505ca16fbd56bef8ab18d05"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "rewrite (canonic_exp_fexp_pos (F2R _) _ (conj Hr1 Hr)).",
            "VernacExtend",
            "165f87ffdba5dc485347ce43f83828e3bffcc578"
        ],
        [
            "rewrite (canonic_exp_fexp_pos _ _ Hex).",
            "VernacExtend",
            "646395d3a0bbdbf8b094f25516c9aea8d1c22e80"
        ],
        [
            "now apply Zeq_le.",
            "VernacExtend",
            "bb62bded0fde69b0a2514575c9daea5a5be07c4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fcore_generic_round_pos.",
            "VernacEndSegment",
            "c4740b2422f0a267d1793652916cea0f4a0edc02"
        ],
        [
            "Theorem round_ext : forall rnd1 rnd2, ( forall x, rnd1 x = rnd2 x ) -> forall x, round rnd1 x = round rnd2 x.",
            "VernacStartTheoremProof",
            "3035bd237581e8f2ef4f5a529a465c2b70df3d8d"
        ],
        [
            "intros rnd1 rnd2 Hext x.",
            "VernacExtend",
            "8f0502453a8fa1d243de3d7633f8f9394ad707d4"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "now rewrite Hext.",
            "VernacExtend",
            "a2af8ffb347fdafc7de3ba33980d13ffd18f2186"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Zround_opp.",
            "VernacBeginSection",
            "54cb53f15af37b51413f32cce681d79384788daa"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Context { valid_rnd : Valid_rnd rnd }.",
            "VernacContext",
            "49759e314a3bb9ba66adea1eb824227c77e97e4c"
        ],
        [
            "Definition Zrnd_opp x := Zopp (rnd (-x)).",
            "VernacDefinition",
            "9b2d8958362dc1d8e757600cec248ae9fff9b99c"
        ],
        [
            "Global Instance valid_rnd_opp : Valid_rnd Zrnd_opp.",
            "VernacInstance",
            "af9479e5b8b27c03cda9b55b542bb6e77b77a05a"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "unfold Zrnd_opp.",
            "VernacExtend",
            "683597b5388d2271079df8998cf773f27b87c18c"
        ],
        [
            "apply Zopp_le_cancel.",
            "VernacExtend",
            "e3a890c698c83ebfe9cc00cbe005add0e6162e3a"
        ],
        [
            "rewrite 2!Zopp_involutive.",
            "VernacExtend",
            "3727371e490c8bf92e3f2bacf9ced1d63444fb09"
        ],
        [
            "apply Zrnd_le...",
            "VernacExtend",
            "219df7220cebaf88d5cc6ed5ee5a4e6b80811f78"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "unfold Zrnd_opp.",
            "VernacExtend",
            "683597b5388d2271079df8998cf773f27b87c18c"
        ],
        [
            "rewrite <- Z2R_opp, Zrnd_Z2R...",
            "VernacExtend",
            "0e920e2f665022288234f0d8f322d3897822dfde"
        ],
        [
            "apply Zopp_involutive.",
            "VernacExtend",
            "2f15c35202593552fbfa9a55396b0e46c1c25da8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_opp : forall x, round rnd (- x) = Ropp (round Zrnd_opp x).",
            "VernacStartTheoremProof",
            "5dd48cb7b7b99d4dae43549dd2935e1d9c450d24"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "rewrite <- F2R_Zopp, canonic_exp_opp, scaled_mantissa_opp.",
            "VernacExtend",
            "efc606980b53846bc9c3e225b13af61a2beac071"
        ],
        [
            "apply F2R_eq_compat.",
            "VernacExtend",
            "bc1e4623b2196fb23776bd02c10b33de36f7515b"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "exact (Zopp_involutive _).",
            "VernacExtend",
            "67190356a20bd290910ca088397e7b002de352b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Zround_opp.",
            "VernacEndSegment",
            "692c3824c2c4bd8703438ac0326883259f809f39"
        ],
        [
            "Global Instance valid_rnd_DN : Valid_rnd Zfloor.",
            "VernacInstance",
            "78f28708e007c2726d9320673f82589266edaa25"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Zfloor_le.",
            "VernacExtend",
            "ccfc8995275381bc98e1b4633a968d9d065e452e"
        ],
        [
            "apply Zfloor_Z2R.",
            "VernacExtend",
            "58df2bc8985dad2ec76c534580062785230749a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance valid_rnd_UP : Valid_rnd Zceil.",
            "VernacInstance",
            "63bb9a269652d5327d8a286dd1efaa45ce7419b4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Zceil_le.",
            "VernacExtend",
            "2acca68326ad50630b9557e44600b964e12a3a53"
        ],
        [
            "apply Zceil_Z2R.",
            "VernacExtend",
            "c8141d4497dc8abfa72f7f0897c24c389f131f72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance valid_rnd_ZR : Valid_rnd Ztrunc.",
            "VernacInstance",
            "2c79f46af9ff142d6b8b2292f0880d8650199759"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Ztrunc_le.",
            "VernacExtend",
            "8c0d793a2d668d46db50d35438a71adfa58ed3bd"
        ],
        [
            "apply Ztrunc_Z2R.",
            "VernacExtend",
            "72f94e4e634180fe6d572f9481360b75ad36203f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance valid_rnd_AW : Valid_rnd Zaway.",
            "VernacInstance",
            "988eef6c7e78be0d9c0dbf5d7de191739ac88d42"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Zaway_le.",
            "VernacExtend",
            "80d068316b39031ef57062f6d207be90f23c903b"
        ],
        [
            "apply Zaway_Z2R.",
            "VernacExtend",
            "3cd923a597f69c246a5ebe35e00fe198f0d82ac6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section monotone.",
            "VernacBeginSection",
            "1f12979590ccef68389a2bfc16e0d4823125d5a2"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Context { valid_rnd : Valid_rnd rnd }.",
            "VernacContext",
            "49759e314a3bb9ba66adea1eb824227c77e97e4c"
        ],
        [
            "Theorem round_DN_or_UP : forall x, round rnd x = round Zfloor x \\/ round rnd x = round Zceil x.",
            "VernacStartTheoremProof",
            "fc2aeb640f2b8c4282c2c0294ac6fdfb057ffca0"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "destruct (Zrnd_DN_or_UP rnd (scaled_mantissa x)) as [Hx|Hx].",
            "VernacExtend",
            "6ceaaf0bb002f63e6f10ab596553a48b46941ec8"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now rewrite Hx.",
            "VernacExtend",
            "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "now rewrite Hx.",
            "VernacExtend",
            "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_ZR_or_AW : forall x, round rnd x = round Ztrunc x \\/ round rnd x = round Zaway x.",
            "VernacStartTheoremProof",
            "c5dee1e14b939278c0412e80727682e9ef6a5af0"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "destruct (Zrnd_ZR_or_AW rnd (scaled_mantissa x)) as [Hx|Hx].",
            "VernacExtend",
            "0f6afbd78ed18fec7aca14561cdbbf5eb334599e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now rewrite Hx.",
            "VernacExtend",
            "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "now rewrite Hx.",
            "VernacExtend",
            "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_le : forall x y, (x <= y)%R -> (round rnd x <= round rnd y)%R.",
            "VernacStartTheoremProof",
            "8f228769aba33dbf2e1c8b346299a460c41fc7bc"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "destruct (total_order_T x 0) as [[Hx|Hx]|Hx].",
            "VernacExtend",
            "ede0cc349df7b17043690d1f6a6c849ac0414020"
        ],
        [
            "3: now apply round_le_pos.",
            "VernacExtend",
            "55539d5044d1a6d8ec6154e5bb767458c5aadc32"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "destruct (Rlt_or_le y 0) as [Hy|Hy].",
            "VernacExtend",
            "8997573f099202622bc69db631962404a43dd08d"
        ],
        [
            "rewrite <- (Ropp_involutive x), <- (Ropp_involutive y).",
            "VernacExtend",
            "a3c29a9859f53646463b97a8f02c5aeb63c48ba4"
        ],
        [
            "rewrite (scaled_mantissa_opp (-x)), (scaled_mantissa_opp (-y)).",
            "VernacExtend",
            "7060d7326f39fdee41707996db0702c72d751762"
        ],
        [
            "rewrite (canonic_exp_opp (-x)), (canonic_exp_opp (-y)).",
            "VernacExtend",
            "0c4e6f400fc6e4e20f5c9c43b9e8a5cc8f6bd3c0"
        ],
        [
            "apply Ropp_le_cancel.",
            "VernacExtend",
            "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
        ],
        [
            "rewrite <- 2!F2R_Zopp.",
            "VernacExtend",
            "fd1cbeb6eaae4c86edb163074696eb59ca73b5ce"
        ],
        [
            "apply (round_le_pos (Zrnd_opp rnd) (-y) (-x)).",
            "VernacExtend",
            "b115d65718f9b80537eb51d018a914b1232d35f7"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "now apply Ropp_lt_contravar.",
            "VernacExtend",
            "e78eb591f35b3721103af7436ff32e5846f47e1a"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "apply Rle_trans with 0%R.",
            "VernacExtend",
            "d5a3511c1567b70448a4157e0891ac043451db4d"
        ],
        [
            "apply F2R_le_0_compat.",
            "VernacExtend",
            "c7889603f8eec7f68976f04dd9e33c82750d814c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- (Zrnd_Z2R rnd 0).",
            "VernacExtend",
            "340dadd4a247ce93a191209a0cc392f1db06d747"
        ],
        [
            "apply Zrnd_le...",
            "VernacExtend",
            "219df7220cebaf88d5cc6ed5ee5a4e6b80811f78"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- (Rmult_0_l (bpow (- fexp (ln_beta beta x)))).",
            "VernacExtend",
            "2f751b0656cc401c3eb06770f420e45a943ee7e6"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply F2R_ge_0_compat.",
            "VernacExtend",
            "b402ba2570a45933251f0be9b2ec6bdb945a0ecc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- (Zrnd_Z2R rnd 0).",
            "VernacExtend",
            "340dadd4a247ce93a191209a0cc392f1db06d747"
        ],
        [
            "apply Zrnd_le...",
            "VernacExtend",
            "219df7220cebaf88d5cc6ed5ee5a4e6b80811f78"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "exact Hy.",
            "VernacExtend",
            "def2ddcf2b089fdcc58626c840dcc230a388ad11"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "rewrite round_0...",
            "VernacExtend",
            "5fbc8a38a813a4cbfdd36466b9d8439a4b4967f1"
        ],
        [
            "apply F2R_ge_0_compat.",
            "VernacExtend",
            "b402ba2570a45933251f0be9b2ec6bdb945a0ecc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- (Zrnd_Z2R rnd 0).",
            "VernacExtend",
            "340dadd4a247ce93a191209a0cc392f1db06d747"
        ],
        [
            "apply Zrnd_le...",
            "VernacExtend",
            "219df7220cebaf88d5cc6ed5ee5a4e6b80811f78"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "now rewrite <- Hx.",
            "VernacExtend",
            "436916de84b076436b48640bb9f693deac9e00d0"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_ge_generic : forall x y, generic_format x -> (x <= y)%R -> (x <= round rnd y)%R.",
            "VernacStartTheoremProof",
            "8ecccf27c1364df36a5b3a80ded834d9c6ec9a54"
        ],
        [
            "intros x y Hx Hxy.",
            "VernacExtend",
            "e2fa962759626d3d2c242c0e1b9e884dd173573f"
        ],
        [
            "rewrite <- (round_generic rnd x Hx).",
            "VernacExtend",
            "a72d6ef60a337ded70a7307a33e42ff1a45c9d42"
        ],
        [
            "now apply round_le.",
            "VernacExtend",
            "7cf7726fbdb7bf862a84c06ac38f2798bfe95ce5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_le_generic : forall x y, generic_format y -> (x <= y)%R -> (round rnd x <= y)%R.",
            "VernacStartTheoremProof",
            "1dff08c680ade17f2cae5d893e0b7277efdd28fe"
        ],
        [
            "intros x y Hy Hxy.",
            "VernacExtend",
            "47c10491d158605cf6c4835f87fe490df0a6b352"
        ],
        [
            "rewrite <- (round_generic rnd y Hy).",
            "VernacExtend",
            "56b63299906f7c229c465db087941dd6caa6892a"
        ],
        [
            "now apply round_le.",
            "VernacExtend",
            "7cf7726fbdb7bf862a84c06ac38f2798bfe95ce5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End monotone.",
            "VernacEndSegment",
            "e0b4f6096a36268f30d49f96ca054496f599f882"
        ],
        [
            "Theorem round_abs_abs : forall P : R -> R -> Prop, ( forall rnd (Hr : Valid_rnd rnd) x, (0 <= x)%R -> P x (round rnd x) ) -> forall rnd {Hr : Valid_rnd rnd} x, P (Rabs x) (Rabs (round rnd x)).",
            "VernacStartTheoremProof",
            "b184739efb1b297505d4c9275c10ec6d4930b018"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros P HP rnd Hr x.",
            "VernacExtend",
            "d9c5bbacc269eec2c5d472d2b8a17ceffc397fea"
        ],
        [
            "destruct (Rle_or_lt 0 x) as [Hx|Hx].",
            "VernacExtend",
            "a3770c27b57432695451ec9185f3f15f3759c589"
        ],
        [
            "rewrite 2!Rabs_pos_eq.",
            "VernacExtend",
            "ce2b3a42d972ffa8c959aebac91148e4e8b0e437"
        ],
        [
            "now apply HP.",
            "VernacExtend",
            "1dbf37580193a0b3ad1359912189144857e883cb"
        ],
        [
            "rewrite <- (round_0 rnd).",
            "VernacExtend",
            "0f0a46feb91efd4ff188a4c2b6e992ac407ebed3"
        ],
        [
            "now apply round_le.",
            "VernacExtend",
            "7cf7726fbdb7bf862a84c06ac38f2798bfe95ce5"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "rewrite (Rabs_left _ Hx).",
            "VernacExtend",
            "e155a89005b34a99335c54b462cebb49d9b50815"
        ],
        [
            "rewrite Rabs_left1.",
            "VernacExtend",
            "959a39766c3ec0e54779596cf6d2e0ed16ff476d"
        ],
        [
            "pattern x at 2 ; rewrite <- Ropp_involutive.",
            "VernacExtend",
            "45ebe575b2817f80cb27137464b8144eb79ddbb1"
        ],
        [
            "rewrite round_opp.",
            "VernacExtend",
            "6687d4bfbaff28e86606f8d4b3636912bdbc4045"
        ],
        [
            "rewrite Ropp_involutive.",
            "VernacExtend",
            "ba0ab440a50f656f08837503f0228b68c9acdf87"
        ],
        [
            "apply HP...",
            "VernacExtend",
            "eefc83825deefb0f222a43ca69afbe2bf11eff9c"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "rewrite <- (round_0 rnd).",
            "VernacExtend",
            "0f0a46feb91efd4ff188a4c2b6e992ac407ebed3"
        ],
        [
            "apply round_le...",
            "VernacExtend",
            "51053993cc4ba694cc876f6a3af8469bbfde4b50"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_bounded_large : forall rnd {Hr : Valid_rnd rnd} x ex, (fexp ex < ex)%Z -> (bpow (ex - 1) <= Rabs x < bpow ex)%R -> (bpow (ex - 1) <= Rabs (round rnd x) <= bpow ex)%R.",
            "VernacStartTheoremProof",
            "1fe04a40440774db4b8d1be06fada53b53eaf83f"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros rnd Hr x ex He.",
            "VernacExtend",
            "08a4ff13494d4588e516bbc5f87d358077ab258a"
        ],
        [
            "apply round_abs_abs...",
            "VernacExtend",
            "e3e7cdd3f71cafba74b853b4d890989bd5c91525"
        ],
        [
            "clear rnd Hr x.",
            "VernacExtend",
            "e73b94661b4a4830b7372b33d981c80c663df85c"
        ],
        [
            "intros rnd' Hr x _.",
            "VernacExtend",
            "9b644b403533d6649cb7cd4d9f77b53c3f89caaf"
        ],
        [
            "apply round_bounded_large_pos...",
            "VernacExtend",
            "6b28924c9a09966f99dc468d1925327fdd784bbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem exp_small_round_0 : forall rnd {Hr : Valid_rnd rnd} x ex, (bpow (ex - 1) <= Rabs x < bpow ex)%R -> round rnd x = 0%R -> (ex <= fexp ex)%Z .",
            "VernacStartTheoremProof",
            "183fc9708bd0cd34095ce239130f966ec1310acd"
        ],
        [
            "intros rnd Hr x ex H1 H2.",
            "VernacExtend",
            "f35d096711435bb78effd20f345da37962e9a193"
        ],
        [
            "generalize Rabs_R0.",
            "VernacExtend",
            "ad63c5627b4815e0678d618d58be544817ef47dc"
        ],
        [
            "rewrite <- H2 at 1.",
            "VernacExtend",
            "8af86740c11b0dcecbe8e1a1065c7341916b4e72"
        ],
        [
            "apply (round_abs_abs (fun t rt => forall (ex : Z), (bpow (ex - 1) <= t < bpow ex)%R -> rt = 0%R -> (ex <= fexp ex)%Z)); trivial.",
            "VernacExtend",
            "107362b22ccf4c376a27d7f1e48867602ebc7d69"
        ],
        [
            "clear; intros rnd Hr x Hx.",
            "VernacExtend",
            "6eca89658adc2ae1f42337ca6181b260cbf3b778"
        ],
        [
            "now apply exp_small_round_0_pos.",
            "VernacExtend",
            "23faa6529da55f0f10cf971b6869b45cd853b0c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section monotone_abs.",
            "VernacBeginSection",
            "7ea4d5a649ecf1035e71ea626d9b8f803aeedbc1"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Context { valid_rnd : Valid_rnd rnd }.",
            "VernacContext",
            "49759e314a3bb9ba66adea1eb824227c77e97e4c"
        ],
        [
            "Theorem abs_round_ge_generic : forall x y, generic_format x -> (x <= Rabs y)%R -> (x <= Rabs (round rnd y))%R.",
            "VernacStartTheoremProof",
            "ecadfc2e0e6ee1c16a52f35c3fe95c82876b8c1b"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply round_abs_abs...",
            "VernacExtend",
            "e3e7cdd3f71cafba74b853b4d890989bd5c91525"
        ],
        [
            "clear rnd valid_rnd y.",
            "VernacExtend",
            "786970d688ff51ce4c70b0abd310e1f5ad4a7d8b"
        ],
        [
            "intros rnd' Hrnd y Hy.",
            "VernacExtend",
            "f4117a418c8fa6dca71288e6e54a400e9fb4ea45"
        ],
        [
            "apply round_ge_generic...",
            "VernacExtend",
            "b942d5b4477c026dd26bf182ff70653039654af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem abs_round_le_generic : forall x y, generic_format y -> (Rabs x <= y)%R -> (Rabs (round rnd x) <= y)%R.",
            "VernacStartTheoremProof",
            "0031c97a23fb946287b8d877e20f8aef386ae044"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply round_abs_abs...",
            "VernacExtend",
            "e3e7cdd3f71cafba74b853b4d890989bd5c91525"
        ],
        [
            "clear rnd valid_rnd x.",
            "VernacExtend",
            "3b908b2e10913d172e166315e2d425eaccfea95c"
        ],
        [
            "intros rnd' Hrnd x Hx.",
            "VernacExtend",
            "b8624ab4d6063a1610dfecd2c3fe183309b7c085"
        ],
        [
            "apply round_le_generic...",
            "VernacExtend",
            "7f2a01600a932d09b4d49ff42273647f7ead7071"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End monotone_abs.",
            "VernacEndSegment",
            "d0e13f560f5e1f22679dc9313eb6bc1640405b56"
        ],
        [
            "Theorem round_DN_opp : forall x, round Zfloor (-x) = (- round Zceil x)%R.",
            "VernacStartTheoremProof",
            "4115dff4116e5fa78d4b5a59e982fdcfaffdb703"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "rewrite scaled_mantissa_opp.",
            "VernacExtend",
            "88c0a15c728ca1f5747eb5ebfaddf2989585bdfd"
        ],
        [
            "rewrite <- F2R_Zopp.",
            "VernacExtend",
            "fee744a8cf0293b57e4bea5c81b22afef33baeb7"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "rewrite Zopp_involutive.",
            "VernacExtend",
            "7b00d63dc772416460dc62c59515875a36dfefdb"
        ],
        [
            "now rewrite canonic_exp_opp.",
            "VernacExtend",
            "871b361b04a20878ff38a4a4b058b4dff94d5b28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_opp : forall x, round Zceil (-x) = (- round Zfloor x)%R.",
            "VernacStartTheoremProof",
            "9934ebd11402e4f8d7cb75858d382cd59b59c263"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "rewrite scaled_mantissa_opp.",
            "VernacExtend",
            "88c0a15c728ca1f5747eb5ebfaddf2989585bdfd"
        ],
        [
            "rewrite <- F2R_Zopp.",
            "VernacExtend",
            "fee744a8cf0293b57e4bea5c81b22afef33baeb7"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "rewrite Ropp_involutive.",
            "VernacExtend",
            "ba0ab440a50f656f08837503f0228b68c9acdf87"
        ],
        [
            "now rewrite canonic_exp_opp.",
            "VernacExtend",
            "871b361b04a20878ff38a4a4b058b4dff94d5b28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_ZR_opp : forall x, round Ztrunc (- x) = Ropp (round Ztrunc x).",
            "VernacStartTheoremProof",
            "777f00dbd4a9f0eb3aef8d619035530970ff893e"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "rewrite scaled_mantissa_opp, canonic_exp_opp, Ztrunc_opp.",
            "VernacExtend",
            "8fdafc3e6c3cfcbccc90aee1f4cc97abe3c14d12"
        ],
        [
            "apply F2R_Zopp.",
            "VernacExtend",
            "05f51edf1e5f6f3fae826b3dea7066ced4866243"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_ZR_abs : forall x, round Ztrunc (Rabs x) = Rabs (round Ztrunc x).",
            "VernacStartTheoremProof",
            "159f1f5f3118213c683aba8e430f7b434cb4a0df"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "unfold Rabs at 2.",
            "VernacExtend",
            "0354e25fdb84183a0daa6b591371c4f1db040f3a"
        ],
        [
            "destruct (Rcase_abs x) as [Hx|Hx].",
            "VernacExtend",
            "46050b72b19634f867951da323e8f2bfd81f6e9d"
        ],
        [
            "rewrite round_ZR_opp.",
            "VernacExtend",
            "c60fbc0e1ec0450b02e9084051447b9ab41f8b87"
        ],
        [
            "apply Rabs_left1.",
            "VernacExtend",
            "c7a513c7a52a5538ff8ca334a86949b1d00e34bd"
        ],
        [
            "rewrite <- (round_0 Ztrunc).",
            "VernacExtend",
            "d80c6799ec2e6d9ae3a470e270af8f5b3b1a8706"
        ],
        [
            "apply round_le...",
            "VernacExtend",
            "51053993cc4ba694cc876f6a3af8469bbfde4b50"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Rabs_pos_eq.",
            "VernacExtend",
            "84ed980db60aa71de2fd237885e8f143313c5575"
        ],
        [
            "rewrite <- (round_0 Ztrunc).",
            "VernacExtend",
            "d80c6799ec2e6d9ae3a470e270af8f5b3b1a8706"
        ],
        [
            "apply round_le...",
            "VernacExtend",
            "51053993cc4ba694cc876f6a3af8469bbfde4b50"
        ],
        [
            "now apply Rge_le.",
            "VernacExtend",
            "a9d375e1f97c153d1fcc15fabbf40ef83aa1533a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_AW_opp : forall x, round Zaway (- x) = Ropp (round Zaway x).",
            "VernacStartTheoremProof",
            "085bb0d3f55cb4cb8a5258a7e9ee32fa80390ce7"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "rewrite scaled_mantissa_opp, canonic_exp_opp, Zaway_opp.",
            "VernacExtend",
            "9851aca0825f2d0e2a084934d1f036b22e46e4c3"
        ],
        [
            "apply F2R_Zopp.",
            "VernacExtend",
            "05f51edf1e5f6f3fae826b3dea7066ced4866243"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_AW_abs : forall x, round Zaway (Rabs x) = Rabs (round Zaway x).",
            "VernacStartTheoremProof",
            "61c4f5a3b99e32183614db846396cdec10bca96d"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "unfold Rabs at 2.",
            "VernacExtend",
            "0354e25fdb84183a0daa6b591371c4f1db040f3a"
        ],
        [
            "destruct (Rcase_abs x) as [Hx|Hx].",
            "VernacExtend",
            "46050b72b19634f867951da323e8f2bfd81f6e9d"
        ],
        [
            "rewrite round_AW_opp.",
            "VernacExtend",
            "d02e260714b0062188ece6a22a684ccfa7b56db1"
        ],
        [
            "apply Rabs_left1.",
            "VernacExtend",
            "c7a513c7a52a5538ff8ca334a86949b1d00e34bd"
        ],
        [
            "rewrite <- (round_0 Zaway).",
            "VernacExtend",
            "8eb8c62b0fff9c369154174d66837c2cc5417764"
        ],
        [
            "apply round_le...",
            "VernacExtend",
            "51053993cc4ba694cc876f6a3af8469bbfde4b50"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Rabs_pos_eq.",
            "VernacExtend",
            "84ed980db60aa71de2fd237885e8f143313c5575"
        ],
        [
            "rewrite <- (round_0 Zaway).",
            "VernacExtend",
            "8eb8c62b0fff9c369154174d66837c2cc5417764"
        ],
        [
            "apply round_le...",
            "VernacExtend",
            "51053993cc4ba694cc876f6a3af8469bbfde4b50"
        ],
        [
            "now apply Rge_le.",
            "VernacExtend",
            "a9d375e1f97c153d1fcc15fabbf40ef83aa1533a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_ZR_pos : forall x, (0 <= x)%R -> round Ztrunc x = round Zfloor x.",
            "VernacStartTheoremProof",
            "e32a03bc18c2f439dfe62a423e29f0761366f33a"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold round, Ztrunc.",
            "VernacExtend",
            "c987915eae0720e2eaca38e67d80224e366ccb40"
        ],
        [
            "case Rlt_bool_spec.",
            "VernacExtend",
            "34a5734790264c820e9f5a43f0e8af9f8a4e3946"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "elim Rlt_not_le with (1 := H).",
            "VernacExtend",
            "80f2042ee5f87401d358bde34a0c50462ce24bcd"
        ],
        [
            "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
            "VernacExtend",
            "f4e119904c3e584e3697f8c5aadc435383c7d312"
        ],
        [
            "apply Rmult_le_compat_r with (2 := Hx).",
            "VernacExtend",
            "d3e8a2b01962b11815ce4b0ddeaa28edd291f5a0"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_ZR_neg : forall x, (x <= 0)%R -> round Ztrunc x = round Zceil x.",
            "VernacStartTheoremProof",
            "558ee3fefb73e735f59edc77e91af06eb1e93c6f"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold round, Ztrunc.",
            "VernacExtend",
            "c987915eae0720e2eaca38e67d80224e366ccb40"
        ],
        [
            "case Rlt_bool_spec.",
            "VernacExtend",
            "34a5734790264c820e9f5a43f0e8af9f8a4e3946"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "intros [H|H].",
            "VernacExtend",
            "76bd49ae65fcff8dd1f96fe0caeb50b38245e5bf"
        ],
        [
            "elim Rlt_not_le with (1 := H).",
            "VernacExtend",
            "80f2042ee5f87401d358bde34a0c50462ce24bcd"
        ],
        [
            "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
            "VernacExtend",
            "f4e119904c3e584e3697f8c5aadc435383c7d312"
        ],
        [
            "apply Rmult_le_compat_r with (2 := Hx).",
            "VernacExtend",
            "d3e8a2b01962b11815ce4b0ddeaa28edd291f5a0"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "now rewrite Zfloor_Z2R, Zceil_Z2R.",
            "VernacExtend",
            "5850ebedc6cd231f51030c10d8fa7959211dbbed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_AW_pos : forall x, (0 <= x)%R -> round Zaway x = round Zceil x.",
            "VernacStartTheoremProof",
            "188e554944cafe10dc4f015e37430d8d563ad5e1"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold round, Zaway.",
            "VernacExtend",
            "362493088321d7b9a789daeebdb784f119004418"
        ],
        [
            "case Rlt_bool_spec.",
            "VernacExtend",
            "34a5734790264c820e9f5a43f0e8af9f8a4e3946"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "elim Rlt_not_le with (1 := H).",
            "VernacExtend",
            "80f2042ee5f87401d358bde34a0c50462ce24bcd"
        ],
        [
            "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
            "VernacExtend",
            "f4e119904c3e584e3697f8c5aadc435383c7d312"
        ],
        [
            "apply Rmult_le_compat_r with (2 := Hx).",
            "VernacExtend",
            "d3e8a2b01962b11815ce4b0ddeaa28edd291f5a0"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_AW_neg : forall x, (x <= 0)%R -> round Zaway x = round Zfloor x.",
            "VernacStartTheoremProof",
            "08e1aabbaf5164ce38468d362028edacfd328c41"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold round, Zaway.",
            "VernacExtend",
            "362493088321d7b9a789daeebdb784f119004418"
        ],
        [
            "case Rlt_bool_spec.",
            "VernacExtend",
            "34a5734790264c820e9f5a43f0e8af9f8a4e3946"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "intros [H|H].",
            "VernacExtend",
            "76bd49ae65fcff8dd1f96fe0caeb50b38245e5bf"
        ],
        [
            "elim Rlt_not_le with (1 := H).",
            "VernacExtend",
            "80f2042ee5f87401d358bde34a0c50462ce24bcd"
        ],
        [
            "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
            "VernacExtend",
            "f4e119904c3e584e3697f8c5aadc435383c7d312"
        ],
        [
            "apply Rmult_le_compat_r with (2 := Hx).",
            "VernacExtend",
            "d3e8a2b01962b11815ce4b0ddeaa28edd291f5a0"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "now rewrite Zfloor_Z2R, Zceil_Z2R.",
            "VernacExtend",
            "5850ebedc6cd231f51030c10d8fa7959211dbbed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_round : forall rnd { Hr : Valid_rnd rnd } x, generic_format (round rnd x).",
            "VernacStartTheoremProof",
            "36c059fe9f7df1d534238677e095e7e8cded6b71"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros rnd Zrnd x.",
            "VernacExtend",
            "947aa101241d9b27daabb2725591fe6f98b2af4c"
        ],
        [
            "destruct (total_order_T x 0) as [[Hx|Hx]|Hx].",
            "VernacExtend",
            "ede0cc349df7b17043690d1f6a6c849ac0414020"
        ],
        [
            "rewrite <- (Ropp_involutive x).",
            "VernacExtend",
            "1908e4ee868b5f81dd7393a2a516c6e4756cc5e4"
        ],
        [
            "destruct (round_DN_or_UP rnd (- - x)) as [Hr|Hr] ; rewrite Hr.",
            "VernacExtend",
            "ab7b735ec580ac4f9dbfda6a70fa7325585463db"
        ],
        [
            "rewrite round_DN_opp.",
            "VernacExtend",
            "3191e6c7652f5b4ded4cbb288bd3e55653274cdc"
        ],
        [
            "apply generic_format_opp.",
            "VernacExtend",
            "62be59b59957b39ddc7a6a91ae10b7eda813132a"
        ],
        [
            "apply generic_format_round_pos...",
            "VernacExtend",
            "57fc4a3a320c05f379f0fee7754740b82eec3f6c"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "rewrite round_UP_opp.",
            "VernacExtend",
            "03e75cb24a175a63b28b30827f2b54e8caefcd5a"
        ],
        [
            "apply generic_format_opp.",
            "VernacExtend",
            "62be59b59957b39ddc7a6a91ae10b7eda813132a"
        ],
        [
            "apply generic_format_round_pos...",
            "VernacExtend",
            "57fc4a3a320c05f379f0fee7754740b82eec3f6c"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "rewrite round_0...",
            "VernacExtend",
            "5fbc8a38a813a4cbfdd36466b9d8439a4b4967f1"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "now apply generic_format_round_pos.",
            "VernacExtend",
            "8c5b77c7a02cc5772f206b67cf1b1a52d507d11b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_DN_pt : forall x, Rnd_DN_pt generic_format x (round Zfloor x).",
            "VernacStartTheoremProof",
            "b2810677eedd57b74d924818f5fcf9f9f2cc9002"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply generic_format_round...",
            "VernacExtend",
            "55b5df3e9c740005b41509d39a039e0b1a6f5f87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "pattern x at 2 ; rewrite <- scaled_mantissa_mult_bpow.",
            "VernacExtend",
            "fc44c71dd5f53fdc672aca47329264279b37ab15"
        ],
        [
            "unfold round, F2R.",
            "VernacExtend",
            "f7df1e666cb069edfb380cdf26ce3a214adbfa27"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "intros g Hg Hgx.",
            "VernacExtend",
            "02b0d1082911fa5a2e754a7b1dfbfdfce7959115"
        ],
        [
            "apply round_ge_generic...",
            "VernacExtend",
            "b942d5b4477c026dd26bf182ff70653039654af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_satisfies_any : satisfies_any generic_format.",
            "VernacStartTheoremProof",
            "9b5b0ced48f9c1fc1613b2bec8d6ae0eec78ef49"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact generic_format_0.",
            "VernacExtend",
            "34aae2d49742d3ef117a6e88122fe75a9690a076"
        ],
        [
            "exact generic_format_opp.",
            "VernacExtend",
            "c780b281e6499f42cf9f0667b0e0e63d2d72f6ff"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply round_DN_pt.",
            "VernacExtend",
            "5f4c4f54107563eb46e1766fa01338b4207ef35d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_pt : forall x, Rnd_UP_pt generic_format x (round Zceil x).",
            "VernacStartTheoremProof",
            "77a5b22ac76d589df90fc1b5d5286f4783500763"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "rewrite <- (Ropp_involutive x).",
            "VernacExtend",
            "1908e4ee868b5f81dd7393a2a516c6e4756cc5e4"
        ],
        [
            "rewrite round_UP_opp.",
            "VernacExtend",
            "03e75cb24a175a63b28b30827f2b54e8caefcd5a"
        ],
        [
            "apply Rnd_DN_UP_pt_sym.",
            "VernacExtend",
            "487fc036b78221200e1f0d6188a0ee96b77eabca"
        ],
        [
            "apply generic_format_opp.",
            "VernacExtend",
            "62be59b59957b39ddc7a6a91ae10b7eda813132a"
        ],
        [
            "apply round_DN_pt.",
            "VernacExtend",
            "5f4c4f54107563eb46e1766fa01338b4207ef35d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_ZR_pt : forall x, Rnd_ZR_pt generic_format x (round Ztrunc x).",
            "VernacStartTheoremProof",
            "d2b0a48dd97cb328b4fb595eb9a283209107f2a0"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "split ; intros Hx.",
            "VernacExtend",
            "88a3b5416993d7056bd31ff8df3f89e9abe0ada0"
        ],
        [
            "rewrite round_ZR_pos with (1 := Hx).",
            "VernacExtend",
            "d2945f743cef756457c7552be044bf401da5a20e"
        ],
        [
            "apply round_DN_pt.",
            "VernacExtend",
            "5f4c4f54107563eb46e1766fa01338b4207ef35d"
        ],
        [
            "rewrite round_ZR_neg with (1 := Hx).",
            "VernacExtend",
            "6872ded98b8d3ce19be2669ac579fab74bb55845"
        ],
        [
            "apply round_UP_pt.",
            "VernacExtend",
            "949fc15c9e78aa5120a8e381c4848e031dfcc7e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_DN_small_pos : forall x ex, (bpow (ex - 1) <= x < bpow ex)%R -> (ex <= fexp ex)%Z -> round Zfloor x = 0%R.",
            "VernacStartTheoremProof",
            "fddac83ec29f2be13e6355cf6eaa4d26958daa0c"
        ],
        [
            "intros x ex Hx He.",
            "VernacExtend",
            "f4a6b960fe733dc80febaef503e2ee5d5445520f"
        ],
        [
            "rewrite <- (F2R_0 beta (canonic_exp x)).",
            "VernacExtend",
            "43c576fcfd86b70d48a5854a9f2c3c6b125bf799"
        ],
        [
            "rewrite <- mantissa_DN_small_pos with (1 := Hx) (2 := He).",
            "VernacExtend",
            "10b434957e04f4d48696aee39a22669460984beb"
        ],
        [
            "now rewrite <- canonic_exp_fexp_pos with (1 := Hx).",
            "VernacExtend",
            "f089241daa222ef870a869f66cceddf32063c742"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_DN_UP_lt : forall x, ~ generic_format x -> (round Zfloor x < x < round Zceil x)%R.",
            "VernacStartTheoremProof",
            "098f8364c55fad029745836133491a90cc3ee7cb"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Fx.",
            "VernacExtend",
            "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
        ],
        [
            "assert (Hx:(round Zfloor x <= x <= round Zceil x)%R).",
            "VernacExtend",
            "541babb0aa130eb0041b6c0bcb8793b5e36272b9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply round_DN_pt.",
            "VernacExtend",
            "5f4c4f54107563eb46e1766fa01338b4207ef35d"
        ],
        [
            "apply round_UP_pt.",
            "VernacExtend",
            "949fc15c9e78aa5120a8e381c4848e031dfcc7e6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "destruct Hx as [Hx _].",
            "VernacExtend",
            "a282dd69d6d56a7b0ee65e258ec2ff2af54e925d"
        ],
        [
            "apply Rnot_le_lt; intro Hle.",
            "VernacExtend",
            "8f7012b54877e5b90eae7a62e24b3d4086c80664"
        ],
        [
            "assert (x = round Zfloor x) by now apply Rle_antisym.",
            "VernacExtend",
            "95a9766a2bab50bdf8cf50eaef057e2b8a960244"
        ],
        [
            "rewrite H in Fx.",
            "VernacExtend",
            "dcc362203411b006281ffc07aca5fd95888711cf"
        ],
        [
            "contradict Fx.",
            "VernacExtend",
            "6e1b7c9e3d7eee06e727fd69f635ef42d7a49784"
        ],
        [
            "apply generic_format_round...",
            "VernacExtend",
            "55b5df3e9c740005b41509d39a039e0b1a6f5f87"
        ],
        [
            "destruct Hx as [_ Hx].",
            "VernacExtend",
            "9eb9830602213da11930c59b613f701bcd0a8262"
        ],
        [
            "apply Rnot_le_lt; intro Hle.",
            "VernacExtend",
            "8f7012b54877e5b90eae7a62e24b3d4086c80664"
        ],
        [
            "assert (x = round Zceil x) by now apply Rle_antisym.",
            "VernacExtend",
            "c6e290cd9c155b00a116c086ec00e04163ac60ef"
        ],
        [
            "rewrite H in Fx.",
            "VernacExtend",
            "dcc362203411b006281ffc07aca5fd95888711cf"
        ],
        [
            "contradict Fx.",
            "VernacExtend",
            "6e1b7c9e3d7eee06e727fd69f635ef42d7a49784"
        ],
        [
            "apply generic_format_round...",
            "VernacExtend",
            "55b5df3e9c740005b41509d39a039e0b1a6f5f87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_small_pos : forall x ex, (bpow (ex - 1) <= x < bpow ex)%R -> (ex <= fexp ex)%Z -> round Zceil x = (bpow (fexp ex)).",
            "VernacStartTheoremProof",
            "67d3e7773e7940ec06f088827bc657646fbe5da2"
        ],
        [
            "intros x ex Hx He.",
            "VernacExtend",
            "f4a6b960fe733dc80febaef503e2ee5d5445520f"
        ],
        [
            "rewrite <- F2R_bpow.",
            "VernacExtend",
            "29562ae2f86921a1e7081119c136279f93ff5e77"
        ],
        [
            "rewrite <- mantissa_UP_small_pos with (1 := Hx) (2 := He).",
            "VernacExtend",
            "4a4c38270381f1ed1b7732841d690c5fc96faf7b"
        ],
        [
            "now rewrite <- canonic_exp_fexp_pos with (1 := Hx).",
            "VernacExtend",
            "f089241daa222ef870a869f66cceddf32063c742"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_EM : forall x, generic_format x \\/ ~generic_format x.",
            "VernacStartTheoremProof",
            "54ef37966d3a57a20ecfbb3fa8b7aad4bd28e5f9"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Req_dec (round Zfloor x) x) as [Hx|Hx].",
            "VernacExtend",
            "50b437fbb623aaa832a1cde2b6806cc099ab7e73"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "apply generic_format_round...",
            "VernacExtend",
            "55b5df3e9c740005b41509d39a039e0b1a6f5f87"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "apply round_generic...",
            "VernacExtend",
            "44537c9bd6bbe98a69c9d38bb5bf2943db0475ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section round_large.",
            "VernacBeginSection",
            "3c069bec18a3bb34abe853373ae19c349928c15e"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Context { valid_rnd : Valid_rnd rnd }.",
            "VernacContext",
            "49759e314a3bb9ba66adea1eb824227c77e97e4c"
        ],
        [
            "Theorem round_large_pos_ge_pow : forall x e, (0 < round rnd x)%R -> (bpow e <= x)%R -> (bpow e <= round rnd x)%R.",
            "VernacStartTheoremProof",
            "baede6477d2a6d9868d1f4f8a50b901db1cf8fad"
        ],
        [
            "intros x e Hd Hex.",
            "VernacExtend",
            "174d3db7bc780d3ffd8d448dd8afa174af05c11f"
        ],
        [
            "destruct (ln_beta beta x) as (ex, He).",
            "VernacExtend",
            "c9e86093c3be8ec240600e91efe15e45185c4d0b"
        ],
        [
            "assert (Hx: (0 < x)%R).",
            "VernacExtend",
            "b6dd3ab761f8a9d5b8c684e078f1e9fcb997a1ea"
        ],
        [
            "apply Rlt_le_trans with (2 := Hex).",
            "VernacExtend",
            "5c82a3ed013b33efb20f7fe5ce831cd3b754f183"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "specialize (He (Rgt_not_eq _ _ Hx)).",
            "VernacExtend",
            "7d8f36436d8639515855ffbdb262a2021b03e0a8"
        ],
        [
            "rewrite Rabs_pos_eq in He.",
            "VernacExtend",
            "9989db6dbc2793eb0c50c589e6b2515c5cad2e30"
        ],
        [
            "2: now apply Rlt_le.",
            "VernacExtend",
            "9f23ebd721c661ddcc58b37b3d2937dd87b4451e"
        ],
        [
            "apply Rle_trans with (bpow (ex - 1)).",
            "VernacExtend",
            "e4171cb5ae114bb9b441a15de69d3ee94d2991f7"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "cut (e < ex)%Z.",
            "VernacExtend",
            "df95a43f460668c3cb97e52ff23ac574f0a83d0b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply (lt_bpow beta).",
            "VernacExtend",
            "39756c21a1c38c15bfdc1abca446efcd43b5bc05"
        ],
        [
            "now apply Rle_lt_trans with (2 := proj2 He).",
            "VernacExtend",
            "8b12f619d0d4a7cd9d6a58f6027f5b7e7a681ac0"
        ],
        [
            "destruct (Zle_or_lt ex (fexp ex)).",
            "VernacExtend",
            "55415f731251856bdd954697ec10b84f1efcec29"
        ],
        [
            "destruct (round_bounded_small_pos rnd x ex H He) as [Hr|Hr].",
            "VernacExtend",
            "e32c512df8a220e8c4a177d52d9e33c33f03136f"
        ],
        [
            "rewrite Hr in Hd.",
            "VernacExtend",
            "01dc5b89ee8424ee64f855be9a2f425b942d4eeb"
        ],
        [
            "elim Rlt_irrefl with (1 := Hd).",
            "VernacExtend",
            "abaeaefc07fae6f786dfb8e82f2f84984048cc54"
        ],
        [
            "rewrite Hr.",
            "VernacExtend",
            "f125d3fd5b288de6b75a9762d9060512a4dedad7"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply (round_bounded_large_pos rnd x ex H He).",
            "VernacExtend",
            "9627440b8729e49aef1620c9e09919af8b3aa362"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End round_large.",
            "VernacEndSegment",
            "11a3104d909e950aa8c8da90fa47675ae0114e3c"
        ],
        [
            "Theorem ln_beta_round_ZR : forall x, (round Ztrunc x <> 0)%R -> (ln_beta beta (round Ztrunc x) = ln_beta beta x :> Z).",
            "VernacStartTheoremProof",
            "c8b847ddf68aedbecac412e5be5af850175872d9"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Zr.",
            "VernacExtend",
            "04b0e551782855dbfbf4ec492b09a2615a3eded6"
        ],
        [
            "destruct (Req_dec x 0) as [Zx|Zx].",
            "VernacExtend",
            "b0fb74435c9a75d48c2d5b5e52e145e2f5a5444e"
        ],
        [
            "rewrite Zx, round_0...",
            "VernacExtend",
            "a12f19bb1c1f19c2802318973ac20dd265eea18b"
        ],
        [
            "apply ln_beta_unique.",
            "VernacExtend",
            "79d65859d3098a3d6023e78328916ac1d9f90627"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Ex) ; simpl.",
            "VernacExtend",
            "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
        ],
        [
            "specialize (Ex Zx).",
            "VernacExtend",
            "60a98592e41f8e51b8b8f13d2a29bc7a3ff55447"
        ],
        [
            "rewrite <- round_ZR_abs.",
            "VernacExtend",
            "e1bf00824cabf537c08e07d71ed325739e2c6afd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply round_large_pos_ge_pow...",
            "VernacExtend",
            "a56e69c861252d285f79c77b6e391ce9ed5d8883"
        ],
        [
            "rewrite round_ZR_abs.",
            "VernacExtend",
            "63ff88c24153f573fae5bf471933ed85d36e5a7d"
        ],
        [
            "now apply Rabs_pos_lt.",
            "VernacExtend",
            "6644e63c10a4ebb716152f3789ed696595825302"
        ],
        [
            "apply Ex.",
            "VernacExtend",
            "731a0b1d525e39ed5cef08f414754edbca20bc6e"
        ],
        [
            "apply Rle_lt_trans with (2 := proj2 Ex).",
            "VernacExtend",
            "bbadb7f8bf791b2aea6c7e8acc7f8f81efc78f30"
        ],
        [
            "rewrite round_ZR_pos.",
            "VernacExtend",
            "7128923a492fd5c0addc5c3bbb7ad12cadf96f30"
        ],
        [
            "apply round_DN_pt.",
            "VernacExtend",
            "5f4c4f54107563eb46e1766fa01338b4207ef35d"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_round : forall rnd {Hrnd : Valid_rnd rnd} x, (round rnd x <> 0)%R -> (ln_beta beta (round rnd x) = ln_beta beta x :> Z) \\/ Rabs (round rnd x) = bpow (Zmax (ln_beta beta x) (fexp (ln_beta beta x))).",
            "VernacStartTheoremProof",
            "bd6d4eb312ea6f37b4169367e8600d10fed2eed4"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros rnd Hrnd x.",
            "VernacExtend",
            "00a2ef7e73fca782b46ca1cacc1330b36c3beabe"
        ],
        [
            "destruct (round_ZR_or_AW rnd x) as [Hr|Hr] ; rewrite Hr ; clear Hr rnd Hrnd.",
            "VernacExtend",
            "c4e69ae231f2c57950c1ad8671d61b15d9ea8a96"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now apply ln_beta_round_ZR.",
            "VernacExtend",
            "c91bf1760470d0633ba4465a575a50c7d95074dd"
        ],
        [
            "intros Zr.",
            "VernacExtend",
            "230a707d9c1e9a3c8a5b12862b390f68961ae666"
        ],
        [
            "destruct (Req_dec x 0) as [Zx|Zx].",
            "VernacExtend",
            "b0fb74435c9a75d48c2d5b5e52e145e2f5a5444e"
        ],
        [
            "rewrite Zx, round_0...",
            "VernacExtend",
            "a12f19bb1c1f19c2802318973ac20dd265eea18b"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Ex) ; simpl.",
            "VernacExtend",
            "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
        ],
        [
            "specialize (Ex Zx).",
            "VernacExtend",
            "60a98592e41f8e51b8b8f13d2a29bc7a3ff55447"
        ],
        [
            "rewrite <- ln_beta_abs.",
            "VernacExtend",
            "9aad19d67f22ac4171063b1a18df84a6b2724182"
        ],
        [
            "rewrite <- round_AW_abs.",
            "VernacExtend",
            "3d0e4603f40f8c9b42de429583bd9d0f487bd03a"
        ],
        [
            "destruct (Zle_or_lt ex (fexp ex)) as [He|He].",
            "VernacExtend",
            "2a61ad3e5b562e1ee7f9ef80b844852fcbbbc13b"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite Zmax_r with (1 := He).",
            "VernacExtend",
            "98ab19f87797e727feaa32dd1c00518d38beafdc"
        ],
        [
            "rewrite round_AW_pos with (1 := Rabs_pos _).",
            "VernacExtend",
            "36787ed8df881b8ea40048dd7131ad6956820559"
        ],
        [
            "now apply round_UP_small_pos.",
            "VernacExtend",
            "3a4ef3ceff059ee63a0f335ce4af8ffa0749e94e"
        ],
        [
            "destruct (round_bounded_large_pos Zaway _ ex He Ex) as (H1,[H2|H2]).",
            "VernacExtend",
            "94cc350c73d380221b89fc1fb34e3af9187fc4fd"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply ln_beta_unique.",
            "VernacExtend",
            "79d65859d3098a3d6023e78328916ac1d9f90627"
        ],
        [
            "rewrite <- round_AW_abs, Rabs_Rabsolu.",
            "VernacExtend",
            "533e9924937d994a15144568a522742e713c42e7"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "now rewrite Zmax_l with (1 := Zlt_le_weak _ _ He).",
            "VernacExtend",
            "4a11d2c12262e4dc41ac38ba4517f9d1feb2877e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_DN : forall x, (0 < round Zfloor x)%R -> (ln_beta beta (round Zfloor x) = ln_beta beta x :> Z).",
            "VernacStartTheoremProof",
            "fe1c75a7c613534d4bfab3a4642a4f87ea866b94"
        ],
        [
            "intros x Hd.",
            "VernacExtend",
            "a8acddfe5d9185868a2f31ec7fb3093a3fbeb577"
        ],
        [
            "assert (0 < x)%R.",
            "VernacExtend",
            "01ae35bbcdd5b574013104fce93b8ba46eef7cbb"
        ],
        [
            "apply Rlt_le_trans with (1 := Hd).",
            "VernacExtend",
            "bfb671d85a7568efae3150ee68286194fe9314db"
        ],
        [
            "apply round_DN_pt.",
            "VernacExtend",
            "5f4c4f54107563eb46e1766fa01338b4207ef35d"
        ],
        [
            "revert Hd.",
            "VernacExtend",
            "85ef60cf8eeaa01299993ce0d6b8b34e031fcc38"
        ],
        [
            "rewrite <- round_ZR_pos.",
            "VernacExtend",
            "c2484ea5501bffec75126367aa5b23507d4ae573"
        ],
        [
            "intros Hd.",
            "VernacExtend",
            "837784d92d66976ddf3817e677843ebc2a58d8dc"
        ],
        [
            "apply ln_beta_round_ZR.",
            "VernacExtend",
            "8e2a7e2de35352ea8bac57d8e80376d698e18984"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_exp_DN : forall x, (0 < round Zfloor x)%R -> canonic_exp (round Zfloor x) = canonic_exp x.",
            "VernacStartTheoremProof",
            "7e11c64fab191e4efd4ee1231c889663f20385ff"
        ],
        [
            "intros x Hd.",
            "VernacExtend",
            "a8acddfe5d9185868a2f31ec7fb3093a3fbeb577"
        ],
        [
            "apply (f_equal fexp).",
            "VernacExtend",
            "f40028f9502b41bafc803163c189f61ef324b731"
        ],
        [
            "now apply ln_beta_DN.",
            "VernacExtend",
            "4760e48bac58f51ea8925211981751cd5e93db0c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem scaled_mantissa_DN : forall x, (0 < round Zfloor x)%R -> scaled_mantissa (round Zfloor x) = Z2R (Zfloor (scaled_mantissa x)).",
            "VernacStartTheoremProof",
            "5adc6d0fec1c8e18bed42531559f416ec0016583"
        ],
        [
            "intros x Hd.",
            "VernacExtend",
            "a8acddfe5d9185868a2f31ec7fb3093a3fbeb577"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite canonic_exp_DN with (1 := Hd).",
            "VernacExtend",
            "9122cc452f5fe924566e657c162189bb71abaa3f"
        ],
        [
            "unfold round, F2R.",
            "VernacExtend",
            "f7df1e666cb069edfb380cdf26ce3a214adbfa27"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
            "VernacExtend",
            "a557b7734945e3d566e56163150de11aa5c5b3ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_N_pt_DN_or_UP : forall x f, Rnd_N_pt generic_format x f -> f = round Zfloor x \\/ f = round Zceil x.",
            "VernacStartTheoremProof",
            "59c889e15d2f4726c534f924193afb48c1f222d4"
        ],
        [
            "intros x f Hxf.",
            "VernacExtend",
            "b52a4f030dfc3c62dde4786afcdb0c0b76ce7f24"
        ],
        [
            "destruct (Rnd_N_pt_DN_or_UP _ _ _ Hxf).",
            "VernacExtend",
            "afe059d120b22daa0101440b5a58a9b2aef2e540"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply Rnd_DN_pt_unicity with (1 := H).",
            "VernacExtend",
            "4bc913b7c37f0f4e562b491884997f5d2445dbc1"
        ],
        [
            "apply round_DN_pt.",
            "VernacExtend",
            "5f4c4f54107563eb46e1766fa01338b4207ef35d"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply Rnd_UP_pt_unicity with (1 := H).",
            "VernacExtend",
            "5fd129d6177be8cbc9509c6c27a8890fbd9e816f"
        ],
        [
            "apply round_UP_pt.",
            "VernacExtend",
            "949fc15c9e78aa5120a8e381c4848e031dfcc7e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section not_FTZ.",
            "VernacBeginSection",
            "622cdf69788a3e8f5e970e8ea00a0aa5526f5edf"
        ],
        [
            "Class Exp_not_FTZ := exp_not_FTZ : forall e, (fexp (fexp e + 1) <= fexp e)%Z.",
            "VernacInductive",
            "c3e211286497a33fb2d76596de784eec1a8560d5"
        ],
        [
            "Context { exp_not_FTZ_ : Exp_not_FTZ }.",
            "VernacContext",
            "51d26c1629d214d3af26dfae9b496b27963bb590"
        ],
        [
            "Theorem subnormal_exponent : forall e x, (e <= fexp e)%Z -> generic_format x -> x = F2R (Float beta (Ztrunc (x * bpow (- fexp e))) (fexp e)).",
            "VernacStartTheoremProof",
            "ae2a09116922a5e72878220ce1bfb054bd0004dc"
        ],
        [
            "intros e x He Hx.",
            "VernacExtend",
            "d47f085ab024bd50d3b4099c6fe963d5055e706d"
        ],
        [
            "pattern x at 2 ; rewrite Hx.",
            "VernacExtend",
            "a451ba033550ff726cd0175e4e7e347af900b992"
        ],
        [
            "unfold F2R at 2.",
            "VernacExtend",
            "ddd475825d33cf651fd049012f87a1e4cabc4c48"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus.",
            "VernacExtend",
            "e64efbe326a420591ccd203c3aa334b6ee79c4aa"
        ],
        [
            "assert (H: Z2R (Zpower beta (canonic_exp x + - fexp e)) = bpow (canonic_exp x + - fexp e)).",
            "VernacExtend",
            "d128772c4d2eab846ed80a21b7360c32668c7099"
        ],
        [
            "apply Z2R_Zpower.",
            "VernacExtend",
            "d1db08cb7fff330669608b0fd9f379850ccd3950"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "set (ex := ln_beta beta x).",
            "VernacExtend",
            "2df4326b3f182e5b2419721e1c5d91ec5009423d"
        ],
        [
            "generalize (exp_not_FTZ ex).",
            "VernacExtend",
            "89cf5491ef2a7fc7eab281d2c9f51d828ea1dd04"
        ],
        [
            "generalize (proj2 (proj2 (valid_exp _) He) (fexp ex + 1)%Z).",
            "VernacExtend",
            "04328cf5087425e64f5c328cd2f17d52db7f75ba"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite <- Z2R_mult, Ztrunc_Z2R.",
            "VernacExtend",
            "7e73b12b45aa83210387c36a7e28569f9eadb50d"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z2R_mult.",
            "VernacExtend",
            "9df3e88fb03a8e1b32ba077432430323142e8b66"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus.",
            "VernacExtend",
            "e64efbe326a420591ccd203c3aa334b6ee79c4aa"
        ],
        [
            "now ring_simplify (canonic_exp x + - fexp e + fexp e)%Z.",
            "VernacExtend",
            "1fd15f314b38a7e65f1baa0b63d14d1b688e5bb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End not_FTZ.",
            "VernacEndSegment",
            "3e7513396d16947966f6bb1baee5b9f89fc26f20"
        ],
        [
            "Section monotone_exp.",
            "VernacBeginSection",
            "f476a7099632c46a9d238991d013b782ea10e72f"
        ],
        [
            "Class Monotone_exp := monotone_exp : forall ex ey, (ex <= ey)%Z -> (fexp ex <= fexp ey)%Z.",
            "VernacInductive",
            "6ef9d6413c8f536c4ce1ddd20f845c4ce35e98bc"
        ],
        [
            "Context { monotone_exp_ : Monotone_exp }.",
            "VernacContext",
            "f5c5d7ce8259ad740133d0b147f417db7d89769d"
        ],
        [
            "Global Instance monotone_exp_not_FTZ : Exp_not_FTZ.",
            "VernacInstance",
            "d6701ba40a45a70e3e1e529d0b11f421a9142418"
        ],
        [
            "intros e.",
            "VernacExtend",
            "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
        ],
        [
            "destruct (Z_lt_le_dec (fexp e) e) as [He|He].",
            "VernacExtend",
            "a65954cbe1f02c52d8430d1a3ea84382ac07fbd9"
        ],
        [
            "apply monotone_exp.",
            "VernacExtend",
            "04ccae1a2908d693edfe87d121b476fe26f24c85"
        ],
        [
            "now apply Zlt_le_succ.",
            "VernacExtend",
            "0ddb068a7da0e5ecd8002018d5306507f8b07087"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma canonic_exp_le_bpow : forall (x : R) (e : Z), x <> 0%R -> (Rabs x < bpow e)%R -> (canonic_exp x <= fexp e)%Z.",
            "VernacStartTheoremProof",
            "2bc5718e64a7cc1173dd7440c50a156a22cc734d"
        ],
        [
            "intros x e Zx Hx.",
            "VernacExtend",
            "69c741b58f204e1415d1f9aaf131b322455ebea8"
        ],
        [
            "apply monotone_exp.",
            "VernacExtend",
            "04ccae1a2908d693edfe87d121b476fe26f24c85"
        ],
        [
            "now apply ln_beta_le_bpow.",
            "VernacExtend",
            "faab6f875cb19e6202ef6892aa34c64c6331527d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma canonic_exp_ge_bpow : forall (x : R) (e : Z), (bpow (e - 1) <= Rabs x)%R -> (fexp e <= canonic_exp x)%Z.",
            "VernacStartTheoremProof",
            "2ecdede2afd4c09a2cd1b3d0cc9504f31fae2782"
        ],
        [
            "intros x e Hx.",
            "VernacExtend",
            "183d993f7f6ed381c7630272430ba030c84b0bb5"
        ],
        [
            "apply monotone_exp.",
            "VernacExtend",
            "04ccae1a2908d693edfe87d121b476fe26f24c85"
        ],
        [
            "rewrite (Zsucc_pred e).",
            "VernacExtend",
            "319d04f52feb8fefeddae6a0a16e9b4e68e6b8df"
        ],
        [
            "apply Zlt_le_succ.",
            "VernacExtend",
            "070de595889f014f0a173659377506422eb25080"
        ],
        [
            "now apply ln_beta_gt_bpow.",
            "VernacExtend",
            "944360694e9de116bfa3c2ce8238224f7332dde8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Context { valid_rnd : Valid_rnd rnd }.",
            "VernacContext",
            "49759e314a3bb9ba66adea1eb824227c77e97e4c"
        ],
        [
            "Theorem ln_beta_round_ge : forall x, round rnd x <> 0%R -> (ln_beta beta x <= ln_beta beta (round rnd x))%Z.",
            "VernacStartTheoremProof",
            "e9877b4cd80ff2e70563b6266833ab0a16aa379b"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (round_ZR_or_AW rnd x) as [H|H] ; rewrite H ; clear H ; intros Zr.",
            "VernacExtend",
            "3f480b97c0e75f90d481872a2cfe2eb752a1bf03"
        ],
        [
            "rewrite ln_beta_round_ZR with (1 := Zr).",
            "VernacExtend",
            "6fa37500710bbf5131a7dadfccdd8dcbde8c5388"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "apply ln_beta_le_abs.",
            "VernacExtend",
            "5d91662a86d36a47992ad980cdadb86c0b8e45f6"
        ],
        [
            "contradict Zr.",
            "VernacExtend",
            "cdf6fbf56914a6c305135999cf2ca45b4fabee5e"
        ],
        [
            "rewrite Zr.",
            "VernacExtend",
            "df53051af00fbf5871561a6f7b9dad356443b238"
        ],
        [
            "apply round_0...",
            "VernacExtend",
            "acc73e912c36de129bd103d90759fb30ec47be6f"
        ],
        [
            "rewrite <- round_AW_abs.",
            "VernacExtend",
            "3d0e4603f40f8c9b42de429583bd9d0f487bd03a"
        ],
        [
            "rewrite round_AW_pos.",
            "VernacExtend",
            "44a6925072c8b1cd975265fa59251ede0ff158b7"
        ],
        [
            "apply round_UP_pt.",
            "VernacExtend",
            "949fc15c9e78aa5120a8e381c4848e031dfcc7e6"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_exp_round_ge : forall x, round rnd x <> 0%R -> (canonic_exp x <= canonic_exp (round rnd x))%Z.",
            "VernacStartTheoremProof",
            "ed862efefcf3216cc54332577165b092cefeacaa"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Zr.",
            "VernacExtend",
            "04b0e551782855dbfbf4ec492b09a2615a3eded6"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "apply monotone_exp.",
            "VernacExtend",
            "04ccae1a2908d693edfe87d121b476fe26f24c85"
        ],
        [
            "now apply ln_beta_round_ge.",
            "VernacExtend",
            "c203ebf270774d47a8e0aa0bb569de2fbe845f52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End monotone_exp.",
            "VernacEndSegment",
            "dfb9d7fa1bab4f76b68777d4f49d0f1ba4f8e727"
        ],
        [
            "Section Znearest.",
            "VernacBeginSection",
            "0a38755132d022378c269080f0a68346c25ea699"
        ],
        [
            "Variable choice : Z -> bool.",
            "VernacAssumption",
            "63a0c7d67fa03ac82d9da57cc7a18e006f5ba997"
        ],
        [
            "Definition Znearest x := match Rcompare (x - Z2R (Zfloor x)) (/2) with | Lt => Zfloor x | Eq => if choice (Zfloor x) then Zceil x else Zfloor x | Gt => Zceil x end.",
            "VernacDefinition",
            "8074a324c1494ba4a94d27f7538085f4e6a96452"
        ],
        [
            "Theorem Znearest_DN_or_UP : forall x, Znearest x = Zfloor x \\/ Znearest x = Zceil x.",
            "VernacStartTheoremProof",
            "5323b7e5ea9cc47f8c77dbf89a0a59d551125cd0"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "case Rcompare_spec ; intros _.",
            "VernacExtend",
            "0602c8ef045c98bd6240ec0af601aec0a3030967"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "case choice.",
            "VernacExtend",
            "fc86470487de3cd9a4387bc8f5d92260b0aaa0ae"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Znearest_ge_floor : forall x, (Zfloor x <= Znearest x)%Z.",
            "VernacStartTheoremProof",
            "490adcbab12b59be4431882280fd8c0b5df10ecc"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Znearest_DN_or_UP x) as [Hx|Hx] ; rewrite Hx.",
            "VernacExtend",
            "f8555b822ed39a7e0ed6fd7cfe36878e4b953c30"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "apply le_Z2R.",
            "VernacExtend",
            "1945b4c25beb86c99a51fb31bc5e89da8f443292"
        ],
        [
            "apply Rle_trans with x.",
            "VernacExtend",
            "795cd4902a779137a2ca3d4d53ee3d5bd0e0d67f"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Znearest_le_ceil : forall x, (Znearest x <= Zceil x)%Z.",
            "VernacStartTheoremProof",
            "2bd5696ac459c0da9edfb7fcbaadb6be7aa24a7a"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Znearest_DN_or_UP x) as [Hx|Hx] ; rewrite Hx.",
            "VernacExtend",
            "f8555b822ed39a7e0ed6fd7cfe36878e4b953c30"
        ],
        [
            "apply le_Z2R.",
            "VernacExtend",
            "1945b4c25beb86c99a51fb31bc5e89da8f443292"
        ],
        [
            "apply Rle_trans with x.",
            "VernacExtend",
            "795cd4902a779137a2ca3d4d53ee3d5bd0e0d67f"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance valid_rnd_N : Valid_rnd Znearest.",
            "VernacInstance",
            "d7ad12775cb723aea14d463cee7e88b446cdf98c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "destruct (Rle_or_lt (Z2R (Zceil x)) y) as [H|H].",
            "VernacExtend",
            "494e55cce5c3e71f88ec3acc26673f94aa003034"
        ],
        [
            "apply Zle_trans with (1 := Znearest_le_ceil x).",
            "VernacExtend",
            "d7676de31b5491153a268c051ddaaecd4539f885"
        ],
        [
            "apply Zle_trans with (2 := Znearest_ge_floor y).",
            "VernacExtend",
            "c9a1eb5ea5e939ebe51954f37aefd1a6394aad44"
        ],
        [
            "now apply Zfloor_lub.",
            "VernacExtend",
            "21e49a9269b50da476743d3e833aac8408d14ed9"
        ],
        [
            "assert (Hf: Zfloor y = Zfloor x).",
            "VernacExtend",
            "6d1d6d492fc37e8bc2e154ad01d7bec8e7d9cc9a"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (2 := Zfloor_lb y).",
            "VernacExtend",
            "ef76dac046f3c5b855fc152163bd181e61ee5200"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "now apply Zfloor_le.",
            "VernacExtend",
            "4cc0f3aa133838b48df9664cf5449b7231dcd8cd"
        ],
        [
            "apply Rlt_le_trans with (1 := H).",
            "VernacExtend",
            "4cd6bf8b9ffdf301bc7c5f322262f3507ca79aef"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "apply Zceil_glb.",
            "VernacExtend",
            "524f59be3c7aaf779be7bc5579e0b8cbb0c3a327"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "apply Zfloor_ub.",
            "VernacExtend",
            "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
        ],
        [
            "unfold Znearest at 1.",
            "VernacExtend",
            "235a3f2bbb4ad30465a340ea412d508e778fa747"
        ],
        [
            "case Rcompare_spec ; intro Hx.",
            "VernacExtend",
            "a481a081f2ab5ff86e94db267716b49d89982720"
        ],
        [
            "rewrite <- Hf.",
            "VernacExtend",
            "c2a104a968e91e1dadc20b044f294fa371a758e8"
        ],
        [
            "apply Znearest_ge_floor.",
            "VernacExtend",
            "d39f3a565275e794d07ee28ee653b9541a3ac374"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "rewrite Hf.",
            "VernacExtend",
            "4b4ea75b42501c41b9cce49efd492d21013c9685"
        ],
        [
            "case Rcompare_spec ; intro Hy.",
            "VernacExtend",
            "175ad1f6b2aabfc00c880b62dbadc103d1bc0c56"
        ],
        [
            "elim Rlt_not_le with (1 := Hy).",
            "VernacExtend",
            "09db7b24a456bad7b9b138bf5568289bbc4b25ec"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "now apply Rplus_le_compat_r.",
            "VernacExtend",
            "8182aad22e58bd21105c801af074d763818ebcdd"
        ],
        [
            "replace y with x.",
            "VernacExtend",
            "32bcc5bf56210bff5b38cc9e9eaf0c7ab9375e0b"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "apply Rplus_eq_reg_l with (- Z2R (Zfloor x))%R.",
            "VernacExtend",
            "3a43c3ebff5c5df279004c3ebd03fd2e050bef37"
        ],
        [
            "rewrite 2!(Rplus_comm (- (Z2R (Zfloor x)))).",
            "VernacExtend",
            "846458f30276f2860b08c655610069c73ed3d5a0"
        ],
        [
            "change (x - Z2R (Zfloor x) = y - Z2R (Zfloor x))%R.",
            "VernacExtend",
            "5bb7e7dd79bb3e2e92452b186e21b4227be9b93e"
        ],
        [
            "now rewrite Hy.",
            "VernacExtend",
            "37f3892f52afecf00e3e8af6488d26ac9c8005b5"
        ],
        [
            "apply Zle_trans with (Zceil x).",
            "VernacExtend",
            "18595b03b3b38ffa64c4959f957776a2c75b4a7d"
        ],
        [
            "case choice.",
            "VernacExtend",
            "fc86470487de3cd9a4387bc8f5d92260b0aaa0ae"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "apply le_Z2R.",
            "VernacExtend",
            "1945b4c25beb86c99a51fb31bc5e89da8f443292"
        ],
        [
            "apply Rle_trans with x.",
            "VernacExtend",
            "795cd4902a779137a2ca3d4d53ee3d5bd0e0d67f"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "now apply Zceil_le.",
            "VernacExtend",
            "1db17e1169b75b1250fd3c02d2b7732ff8884a19"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "rewrite Hf.",
            "VernacExtend",
            "4b4ea75b42501c41b9cce49efd492d21013c9685"
        ],
        [
            "rewrite Rcompare_Gt.",
            "VernacExtend",
            "6af5b764e76966598fea1215f8858ea8132ad3dd"
        ],
        [
            "now apply Zceil_le.",
            "VernacExtend",
            "1db17e1169b75b1250fd3c02d2b7732ff8884a19"
        ],
        [
            "apply Rlt_le_trans with (1 := Hx).",
            "VernacExtend",
            "17cfcea7cef1e39ddff4797053bb05abaf553802"
        ],
        [
            "now apply Rplus_le_compat_r.",
            "VernacExtend",
            "8182aad22e58bd21105c801af074d763818ebcdd"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "rewrite Zfloor_Z2R.",
            "VernacExtend",
            "76c32ec848cfdb0ff47d7c42d76ad58c824310bd"
        ],
        [
            "rewrite Rcompare_Lt.",
            "VernacExtend",
            "1ed9ee0362e725864989e8a5e0bf1041f0280dbf"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "rewrite Rplus_opp_r.",
            "VernacExtend",
            "0b42d27f90670486f4fe47560bedca46e1efb1ec"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_floor_ceil_mid : forall x, Z2R (Zfloor x) <> x -> Rcompare (x - Z2R (Zfloor x)) (/ 2) = Rcompare (x - Z2R (Zfloor x)) (Z2R (Zceil x) - x).",
            "VernacStartTheoremProof",
            "e90f3278f2a1a621e2d4e43741f2d0256bb20f07"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "rewrite Zceil_floor_neq with (1 := Hx).",
            "VernacExtend",
            "96fb86acbfdc38a657b327d2e293b9794e2947e3"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (Rcompare_spec (x - Z2R (Zfloor x)) (/ 2)) as [H1|H1|H1] ; apply sym_eq.",
            "VernacExtend",
            "80b3b431425d73c3c17db7bb134009567cef1832"
        ],
        [
            "apply Rcompare_Lt.",
            "VernacExtend",
            "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
        ],
        [
            "apply Rplus_lt_reg_l with (x - Z2R (Zfloor x))%R.",
            "VernacExtend",
            "6dac5a87e13c17e7102f84c0fa8b86a8993fca7e"
        ],
        [
            "replace (x - Z2R (Zfloor x) + (x - Z2R (Zfloor x)))%R with ((x - Z2R (Zfloor x)) * 2)%R by ring.",
            "VernacExtend",
            "0d6468ad21f8a2384ddb752b06709f488bb3d6f7"
        ],
        [
            "replace (x - Z2R (Zfloor x) + (Z2R (Zfloor x) + 1 - x))%R with (/2 * 2)%R by field.",
            "VernacExtend",
            "c832de82361e18f59cc2c07ef8d4fc999add6b28"
        ],
        [
            "apply Rmult_lt_compat_r with (2 := H1).",
            "VernacExtend",
            "9cd2491257e75da192950e0648267d510139b67e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "apply Rcompare_Eq.",
            "VernacExtend",
            "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
        ],
        [
            "replace (Z2R (Zfloor x) + 1 - x)%R with (1 - (x - Z2R (Zfloor x)))%R by ring.",
            "VernacExtend",
            "08956dde5168fac3c3072b26046977e3337f5730"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rcompare_Gt.",
            "VernacExtend",
            "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
        ],
        [
            "apply Rplus_lt_reg_l with (x - Z2R (Zfloor x))%R.",
            "VernacExtend",
            "6dac5a87e13c17e7102f84c0fa8b86a8993fca7e"
        ],
        [
            "replace (x - Z2R (Zfloor x) + (x - Z2R (Zfloor x)))%R with ((x - Z2R (Zfloor x)) * 2)%R by ring.",
            "VernacExtend",
            "0d6468ad21f8a2384ddb752b06709f488bb3d6f7"
        ],
        [
            "replace (x - Z2R (Zfloor x) + (Z2R (Zfloor x) + 1 - x))%R with (/2 * 2)%R by field.",
            "VernacExtend",
            "c832de82361e18f59cc2c07ef8d4fc999add6b28"
        ],
        [
            "apply Rmult_lt_compat_r with (2 := H1).",
            "VernacExtend",
            "9cd2491257e75da192950e0648267d510139b67e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_ceil_floor_mid : forall x, Z2R (Zfloor x) <> x -> Rcompare (Z2R (Zceil x) - x) (/ 2) = Rcompare (Z2R (Zceil x) - x) (x - Z2R (Zfloor x)).",
            "VernacStartTheoremProof",
            "28bb5d93ad5aba301950be9e82a942ad8acda2eb"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "rewrite Zceil_floor_neq with (1 := Hx).",
            "VernacExtend",
            "96fb86acbfdc38a657b327d2e293b9794e2947e3"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (Rcompare_spec (Z2R (Zfloor x) + 1 - x) (/ 2)) as [H1|H1|H1] ; apply sym_eq.",
            "VernacExtend",
            "991cc7e37dc933f3fc1959f1b5c1f94d2cbec978"
        ],
        [
            "apply Rcompare_Lt.",
            "VernacExtend",
            "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
        ],
        [
            "apply Rplus_lt_reg_l with (Z2R (Zfloor x) + 1 - x)%R.",
            "VernacExtend",
            "8e4e1b584e3319ede7622337f646a68ce7d50267"
        ],
        [
            "replace (Z2R (Zfloor x) + 1 - x + (Z2R (Zfloor x) + 1 - x))%R with ((Z2R (Zfloor x) + 1 - x) * 2)%R by ring.",
            "VernacExtend",
            "84cc4deb4555d2a1a0554c1b1a865b07731b9379"
        ],
        [
            "replace (Z2R (Zfloor x) + 1 - x + (x - Z2R (Zfloor x)))%R with (/2 * 2)%R by field.",
            "VernacExtend",
            "9ba1011b7d411db8e7d1badc2a39b5d73ff4fc08"
        ],
        [
            "apply Rmult_lt_compat_r with (2 := H1).",
            "VernacExtend",
            "9cd2491257e75da192950e0648267d510139b67e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "apply Rcompare_Eq.",
            "VernacExtend",
            "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
        ],
        [
            "replace (x - Z2R (Zfloor x))%R with (1 - (Z2R (Zfloor x) + 1 - x))%R by ring.",
            "VernacExtend",
            "1fcfa5134d896a67c84d44d475fcefe942b41480"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rcompare_Gt.",
            "VernacExtend",
            "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
        ],
        [
            "apply Rplus_lt_reg_l with (Z2R (Zfloor x) + 1 - x)%R.",
            "VernacExtend",
            "8e4e1b584e3319ede7622337f646a68ce7d50267"
        ],
        [
            "replace (Z2R (Zfloor x) + 1 - x + (Z2R (Zfloor x) + 1 - x))%R with ((Z2R (Zfloor x) + 1 - x) * 2)%R by ring.",
            "VernacExtend",
            "84cc4deb4555d2a1a0554c1b1a865b07731b9379"
        ],
        [
            "replace (Z2R (Zfloor x) + 1 - x + (x - Z2R (Zfloor x)))%R with (/2 * 2)%R by field.",
            "VernacExtend",
            "9ba1011b7d411db8e7d1badc2a39b5d73ff4fc08"
        ],
        [
            "apply Rmult_lt_compat_r with (2 := H1).",
            "VernacExtend",
            "9cd2491257e75da192950e0648267d510139b67e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Znearest_N_strict : forall x, (x - Z2R (Zfloor x) <> /2)%R -> (Rabs (x - Z2R (Znearest x)) < /2)%R.",
            "VernacStartTheoremProof",
            "afbc4627f8dadc0d949b2ec9e8044f33675b9f48"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "case Rcompare_spec ; intros H.",
            "VernacExtend",
            "f8bd22068d34c20b85b9dde46edeaca422c503dc"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "now elim Hx.",
            "VernacExtend",
            "c5690f3d5e32721c1584798217837887272121e7"
        ],
        [
            "rewrite Rabs_left1.",
            "VernacExtend",
            "959a39766c3ec0e54779596cf6d2e0ed16ff476d"
        ],
        [
            "rewrite Ropp_minus_distr.",
            "VernacExtend",
            "03410ea29af67bdcfa7393931606c01ed23d7394"
        ],
        [
            "rewrite Zceil_floor_neq.",
            "VernacExtend",
            "b4fc727910b2a0e4293920fe2596a742e2d62876"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "apply Rplus_lt_reg_l with 1%R.",
            "VernacExtend",
            "5d1640d6f67d71336b74a0a138509a6754df5d5f"
        ],
        [
            "replace (1 + -/2)%R with (/2)%R by field.",
            "VernacExtend",
            "b2760f846e6183ce87f79efc75a3b8c2b54664a3"
        ],
        [
            "now replace (1 + - (Z2R (Zfloor x) + 1 - x))%R with (x - Z2R (Zfloor x))%R by ring.",
            "VernacExtend",
            "4a08c36b5b8ce92da331b4b27aa6c13955862771"
        ],
        [
            "apply Rlt_not_eq.",
            "VernacExtend",
            "4d888fdf05ab3816c2e650b03b478096db638cf5"
        ],
        [
            "apply Rplus_lt_reg_l with (- Z2R (Zfloor x))%R.",
            "VernacExtend",
            "46affff9e63824c659eeb8be1da6f14ba76242f7"
        ],
        [
            "apply Rlt_trans with (/2)%R.",
            "VernacExtend",
            "086b9491dc32022005e8f04dee8d1450bc1ab7ae"
        ],
        [
            "rewrite Rplus_opp_l.",
            "VernacExtend",
            "55e9f717c5b98ad065802667fa3fb1cf9124328a"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "now rewrite <- (Rplus_comm x).",
            "VernacExtend",
            "5f0301d7c7e1e1c710b4f88e731e2c9d742b1252"
        ],
        [
            "apply Rle_minus.",
            "VernacExtend",
            "7e46e8a6683420ce8b2242ac68da7361c6b86840"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Znearest_N : forall x, (Rabs (x - Z2R (Znearest x)) <= /2)%R.",
            "VernacStartTheoremProof",
            "765bdcd2a51b81508f93f12cdc23070610b31008"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Req_dec (x - Z2R (Zfloor x)) (/2)) as [Hx|Hx].",
            "VernacExtend",
            "660cb796eaed6220ff4e48016a9e0785fe522341"
        ],
        [
            "assert (K: (Rabs (/2) <= /2)%R).",
            "VernacExtend",
            "8a2cb7e33349b12cbc9b9c491be5ae26f63b5828"
        ],
        [
            "apply Req_le.",
            "VernacExtend",
            "b69ffc9461f465218c69f379ac293728d3f8e7bd"
        ],
        [
            "apply Rabs_pos_eq.",
            "VernacExtend",
            "84ed980db60aa71de2fd237885e8f143313c5575"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "destruct (Znearest_DN_or_UP x) as [H|H] ; rewrite H ; clear H.",
            "VernacExtend",
            "83115019f187777a3ce31f7d412f591702134208"
        ],
        [
            "now rewrite Hx.",
            "VernacExtend",
            "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
        ],
        [
            "rewrite Zceil_floor_neq.",
            "VernacExtend",
            "b4fc727910b2a0e4293920fe2596a742e2d62876"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (x - (Z2R (Zfloor x) + 1))%R with (x - Z2R (Zfloor x) - 1)%R by ring.",
            "VernacExtend",
            "2f52557a71e65869be30bd498c32045c41d1ef35"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "rewrite Rabs_minus_sym.",
            "VernacExtend",
            "ddb6224679ef13d2115963f7fdb5e59e73f39ad2"
        ],
        [
            "now replace (1 - /2)%R with (/2)%R by field.",
            "VernacExtend",
            "67fa02cd875dbae17cabfa9a82c88daf79e9b5a8"
        ],
        [
            "apply Rlt_not_eq.",
            "VernacExtend",
            "4d888fdf05ab3816c2e650b03b478096db638cf5"
        ],
        [
            "apply Rplus_lt_reg_l with (- Z2R (Zfloor x))%R.",
            "VernacExtend",
            "46affff9e63824c659eeb8be1da6f14ba76242f7"
        ],
        [
            "rewrite Rplus_opp_l, Rplus_comm.",
            "VernacExtend",
            "86aa52758f3379e752ec253028adea050068a5ce"
        ],
        [
            "fold (x - Z2R (Zfloor x))%R.",
            "VernacExtend",
            "bbbd330ff6df45e0fa0e346b3284ff09ee58023d"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "now apply Znearest_N_strict.",
            "VernacExtend",
            "33e64505baf2812568cfb786ab3c09d65658f3ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Znearest_imp : forall x n, (Rabs (x - Z2R n) < /2)%R -> Znearest x = n.",
            "VernacStartTheoremProof",
            "d2c937bae5be0f08bdf3185dc870c094dbd1298f"
        ],
        [
            "intros x n Hd.",
            "VernacExtend",
            "35b59e8936a701049e8eaabace5a246401857073"
        ],
        [
            "cut (Zabs (Znearest x - n) < 1)%Z.",
            "VernacExtend",
            "72d71cb141c03ab4e3491b8107dae84b3249e959"
        ],
        [
            "clear ; zify ; omega.",
            "VernacExtend",
            "a6e41cc90e30259e80ee8e4f58a89b520b38df88"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "rewrite Z2R_abs, Z2R_minus.",
            "VernacExtend",
            "4ad1018b53e2bd63ae0bbeb2bc6ff9033889ccc1"
        ],
        [
            "replace (Z2R (Znearest x) - Z2R n)%R with (- (x - Z2R (Znearest x)) + (x - Z2R n))%R by ring.",
            "VernacExtend",
            "4447a8a1dbb6a92f80deeff09991aa3c04bf4b8d"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace 1%R with (/2 + /2)%R by field.",
            "VernacExtend",
            "fb9de0756b3bb13689dab7748db4d50344e163c3"
        ],
        [
            "apply Rplus_le_lt_compat with (2 := Hd).",
            "VernacExtend",
            "293cc8ee9c8ddda921e6f207590fbd01ee46eddd"
        ],
        [
            "rewrite Rabs_Ropp.",
            "VernacExtend",
            "4585414329a0ef757c809f4a4dee3b3a09307b5c"
        ],
        [
            "apply Znearest_N.",
            "VernacExtend",
            "4b5101c6c501edc9e69373baff3d63c0b4c896fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_N_pt : forall x, Rnd_N_pt generic_format x (round Znearest x).",
            "VernacStartTheoremProof",
            "07cb95aba85861fdd0ffdae46829a0846f94f979"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "set (d := round Zfloor x).",
            "VernacExtend",
            "ac8fdc68793871e081c636170d47523980566697"
        ],
        [
            "set (u := round Zceil x).",
            "VernacExtend",
            "3516c2fefc194263d7aa2cd5dfb4c0037e9cd704"
        ],
        [
            "set (mx := scaled_mantissa x).",
            "VernacExtend",
            "4c0372af0a36851080181983058a26004db182cf"
        ],
        [
            "set (bx := bpow (canonic_exp x)).",
            "VernacExtend",
            "556a4c77cc882aabd9c5f02bd52206c9cba51f31"
        ],
        [
            "assert (H: (Rabs (round Znearest x - x) <= Rmin (x - d) (u - x))%R).",
            "VernacExtend",
            "4875042696967bfe5f0158a68a1f9b43b8e1b662"
        ],
        [
            "pattern x at -1 ; rewrite <- scaled_mantissa_mult_bpow.",
            "VernacExtend",
            "4e98dca021ff7512f2ad12fab096efe0f24d8b8f"
        ],
        [
            "unfold d, u, round, F2R.",
            "VernacExtend",
            "5c0f4362d7565147ecec498fc727f487d411fa5d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold mx bx.",
            "VernacExtend",
            "dc67553d983d338ffbda52842d344b2ea53f7175"
        ],
        [
            "rewrite <- 3!Rmult_minus_distr_r.",
            "VernacExtend",
            "6f09c5c67138797a751e0a2100b6feace58fa275"
        ],
        [
            "rewrite Rabs_mult, (Rabs_pos_eq bx).",
            "VernacExtend",
            "edb3ebbed61c055aa8252c0c1660564e5a3a42a9"
        ],
        [
            "2: apply bpow_ge_0.",
            "VernacExtend",
            "8cca2c2766d3b161d408096312c09533476d797c"
        ],
        [
            "rewrite <- Rmult_min_distr_r.",
            "VernacExtend",
            "9a61f1e45ca2f33114dd7753f492d13475393aa4"
        ],
        [
            "2: apply bpow_ge_0.",
            "VernacExtend",
            "8cca2c2766d3b161d408096312c09533476d797c"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "destruct (Req_dec (Z2R (Zfloor mx)) mx) as [Hm|Hm].",
            "VernacExtend",
            "76fc123e79853000b4281185bc5f5e4d7615d2c1"
        ],
        [
            "rewrite Hm.",
            "VernacExtend",
            "a83613f2496ce8bb382bfee229040b06b8d1ef3c"
        ],
        [
            "unfold Rminus at 2.",
            "VernacExtend",
            "55c1a862979f218e823e893061c5a45e5fcbe1db"
        ],
        [
            "rewrite Rplus_opp_r.",
            "VernacExtend",
            "0b42d27f90670486f4fe47560bedca46e1efb1ec"
        ],
        [
            "rewrite Rcompare_Lt.",
            "VernacExtend",
            "1ed9ee0362e725864989e8a5e0bf1041f0280dbf"
        ],
        [
            "rewrite Hm.",
            "VernacExtend",
            "a83613f2496ce8bb382bfee229040b06b8d1ef3c"
        ],
        [
            "unfold Rminus at -3.",
            "VernacExtend",
            "1d375f137ae322f1e7d268dbebba2deb1c4c8d32"
        ],
        [
            "rewrite Rplus_opp_r.",
            "VernacExtend",
            "0b42d27f90670486f4fe47560bedca46e1efb1ec"
        ],
        [
            "rewrite Rabs_R0.",
            "VernacExtend",
            "4d6634083a68d86e15f3870da962b3fc61d79ebb"
        ],
        [
            "unfold Rmin.",
            "VernacExtend",
            "ec4de2dbd1c783154b87decb3c93990283dcef6b"
        ],
        [
            "destruct (Rle_dec 0 (Z2R (Zceil mx) - mx)) as [H|H].",
            "VernacExtend",
            "b98db0c034105a5907b41ffac7b77bc0433a487b"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "rewrite Rcompare_floor_ceil_mid with (1 := Hm).",
            "VernacExtend",
            "443bd4b9d0cebc608eda5d85c9f314f4d2479aeb"
        ],
        [
            "rewrite Rmin_compare.",
            "VernacExtend",
            "3c1c8b4a20662cdbf0300f6d0fc4cd6355be818c"
        ],
        [
            "assert (H: (Rabs (mx - Z2R (Zfloor mx)) <= mx - Z2R (Zfloor mx))%R).",
            "VernacExtend",
            "e8672d75ab69b8a8265886644dceb505f2ac2263"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "case Rcompare_spec ; intros Hm'.",
            "VernacExtend",
            "4414508619b9ada3600bff3183c797196123a3f7"
        ],
        [
            "now rewrite Rabs_minus_sym.",
            "VernacExtend",
            "d157bf348c31a86ee5826d3b775b5e19c69eb0a6"
        ],
        [
            "case choice.",
            "VernacExtend",
            "fc86470487de3cd9a4387bc8f5d92260b0aaa0ae"
        ],
        [
            "rewrite <- Hm'.",
            "VernacExtend",
            "56157fb6cf55ff1eff02e4380c0be206172bb201"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "now rewrite Rabs_minus_sym.",
            "VernacExtend",
            "d157bf348c31a86ee5826d3b775b5e19c69eb0a6"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "apply Rnd_DN_UP_pt_N with d u.",
            "VernacExtend",
            "18eb15a64fe7983d85b38aab6e403d5d432b3429"
        ],
        [
            "apply generic_format_round.",
            "VernacExtend",
            "48e3baa889a9f7b98c000fe5360f9f01bc0057b2"
        ],
        [
            "auto with typeclass_instances.",
            "VernacExtend",
            "673e27e9d909eb73b87d5da012fc02debf6cfc76"
        ],
        [
            "now apply round_DN_pt.",
            "VernacExtend",
            "6510a9823447c9276f352893446580c47e73e896"
        ],
        [
            "now apply round_UP_pt.",
            "VernacExtend",
            "5d2cbd68b7b815a8c1e2a718d26431f0ff1e35c6"
        ],
        [
            "apply Rle_trans with (1 := H).",
            "VernacExtend",
            "afdcb615c6a4c5d01b0dcd863ef8e5aeca62d6d8"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "apply Rle_trans with (1 := H).",
            "VernacExtend",
            "afdcb615c6a4c5d01b0dcd863ef8e5aeca62d6d8"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_N_middle : forall x, (x - round Zfloor x = round Zceil x - x)%R -> round Znearest x = if choice (Zfloor (scaled_mantissa x)) then round Zceil x else round Zfloor x.",
            "VernacStartTheoremProof",
            "a6b5d04820482f6b1fd34c4474f697df95ec4071"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "pattern x at 1 4 ; rewrite <- scaled_mantissa_mult_bpow.",
            "VernacExtend",
            "e58cc565cf5899f2a60db9f75a1d62d1f258c5f0"
        ],
        [
            "unfold round, Znearest, F2R.",
            "VernacExtend",
            "9849b8c059e739f108228f458dcc827324ba9102"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (Req_dec (Z2R (Zfloor (scaled_mantissa x))) (scaled_mantissa x)) as [Fx|Fx].",
            "VernacExtend",
            "dcb490494d1e297264567c3429daa2ba461ed67d"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "rewrite <- Fx.",
            "VernacExtend",
            "3eb9ff71c5f9468a2df9b7f7943d9ba7bc8d3704"
        ],
        [
            "rewrite Zceil_Z2R, Zfloor_Z2R.",
            "VernacExtend",
            "6ed0f069d1c2595789003dcfb0e769682cbd878d"
        ],
        [
            "set (m := Zfloor (scaled_mantissa x)).",
            "VernacExtend",
            "5c78651f937ddd9b484ee0e56ca000d16b45994b"
        ],
        [
            "now case (Rcompare (Z2R m - Z2R m) (/ 2)) ; case (choice m).",
            "VernacExtend",
            "082187ec367854cbd8263a42807e38791ac9d1eb"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite Rcompare_floor_ceil_mid with (1 := Fx).",
            "VernacExtend",
            "9a3080febecb2fed00603848cd26cb1011c6c161"
        ],
        [
            "rewrite Rcompare_Eq.",
            "VernacExtend",
            "908eb644f4489dc9bfd3757c906ed729025ad3c1"
        ],
        [
            "now case choice.",
            "VernacExtend",
            "c68fa2e97dd184fdbb694ae0879f7e7d7c709609"
        ],
        [
            "apply Rmult_eq_reg_r with (bpow (canonic_exp x)).",
            "VernacExtend",
            "2c28caf6e9854d111ce519f4c02393c422f1fd76"
        ],
        [
            "now rewrite 2!Rmult_minus_distr_r.",
            "VernacExtend",
            "0f7788abd12de6c62c71e2c49275bda537670328"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_N_really_small_pos : forall x, forall ex, (Fcore_Raux.bpow beta (ex - 1) <= x < Fcore_Raux.bpow beta ex)%R -> (ex < fexp ex)%Z -> (round Znearest x = 0)%R.",
            "VernacStartTheoremProof",
            "e4e105258d78cfc225806ddd9410d427d60513df"
        ],
        [
            "intros x ex Hex Hf.",
            "VernacExtend",
            "9aeeb0e43e57d893ae30ce8dbb6fac12b3c66df3"
        ],
        [
            "unfold round, F2R, scaled_mantissa, canonic_exp; simpl.",
            "VernacExtend",
            "8d123ad36eb1686a4be03ea41f972a7fcad620af"
        ],
        [
            "apply (Rmult_eq_reg_r (bpow (- fexp (ln_beta beta x)))); [|now apply Rgt_not_eq; apply bpow_gt_0].",
            "VernacExtend",
            "7f8c0d8480441a17c517d45950d0d16eed71e083"
        ],
        [
            "rewrite Rmult_0_l, Rmult_assoc, <- bpow_plus.",
            "VernacExtend",
            "94a0cc14705466d69e267f529224f04a2cac9e7e"
        ],
        [
            "replace (_ + - _)%Z with 0%Z by ring; simpl; rewrite Rmult_1_r.",
            "VernacExtend",
            "775f11ac61ee9e36de050ceb813b791c45ddc983"
        ],
        [
            "change 0%R with (Z2R 0); apply f_equal.",
            "VernacExtend",
            "fe254e32d98dc880636e0cf039f093b34abef05e"
        ],
        [
            "apply Znearest_imp.",
            "VernacExtend",
            "95b581a95c6472c958c61dadecd8ea7aece50428"
        ],
        [
            "simpl; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r.",
            "VernacExtend",
            "71f88301e81d78c542d8df68d06378829937368d"
        ],
        [
            "assert (H : (x >= 0)%R).",
            "VernacExtend",
            "983df7c3294fbe37f32bfa39e1e3b06e455658af"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Rle_ge; apply Rle_trans with (bpow (ex - 1)); [|exact (proj1 Hex)].",
            "VernacExtend",
            "c5fa7c5669c5e080146db9440c40d3b39c7ab3a4"
        ],
        [
            "now apply bpow_ge_0.",
            "VernacExtend",
            "8d43b785efd875c566a55a0415104968ba2c5db1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (H' : (x * bpow (- fexp (ln_beta beta x)) >= 0)%R).",
            "VernacExtend",
            "05ec4cb0cf5d4f29541ac60a8f0d738ea703fc91"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Rle_ge; apply Rmult_le_pos.",
            "VernacExtend",
            "7d007ccbe591f3ffd6982f0d57bed1df4ebf343e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply Rge_le.",
            "VernacExtend",
            "a9d375e1f97c153d1fcc15fabbf40ef83aa1533a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply bpow_ge_0.",
            "VernacExtend",
            "8d43b785efd875c566a55a0415104968ba2c5db1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Rabs_right; [|exact H'].",
            "VernacExtend",
            "4debe808b7484b28fb8f4351b00912db2b1b4add"
        ],
        [
            "apply (Rmult_lt_reg_r (bpow (fexp (ln_beta beta x)))); [now apply bpow_gt_0|].",
            "VernacExtend",
            "39cfed5b6f0e6dccbc465e734a3fb9dc263f9a4c"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus.",
            "VernacExtend",
            "e64efbe326a420591ccd203c3aa334b6ee79c4aa"
        ],
        [
            "replace (- _ + _)%Z with 0%Z by ring; simpl; rewrite Rmult_1_r.",
            "VernacExtend",
            "036ba863a8ee0e751c3c06fa0df9e331904eaa01"
        ],
        [
            "apply (Rlt_le_trans _ _ _ (proj2 Hex)).",
            "VernacExtend",
            "a0b16ee658a956472d6791ba171730cfb0756cdb"
        ],
        [
            "apply Rle_trans with (bpow (fexp (ln_beta beta x) - 1)).",
            "VernacExtend",
            "22c62bfd2d8514e04bb6049955babb3850ecf751"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "rewrite (ln_beta_unique beta x ex); [omega|].",
            "VernacExtend",
            "e066fce907af4dee6ca8a9dc001a98abea8f0674"
        ],
        [
            "now rewrite Rabs_right.",
            "VernacExtend",
            "1f45b6d9e8168e0718a5263ca7ba7326a1c2792f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold Zminus; rewrite bpow_plus.",
            "VernacExtend",
            "1de35bed46f214eff68b00095dd9903663f239f2"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "fd520335d31c715c2f686e2bdc0b380c493b04c0"
        ],
        [
            "apply Rmult_le_compat_r; [now apply bpow_ge_0|].",
            "VernacExtend",
            "4a486c90f003a691d8f6953ba5bb92d8a58fe4a6"
        ],
        [
            "unfold Fcore_Raux.bpow, Z.pow_pos; simpl.",
            "VernacExtend",
            "779733416dcbad2a3471eb36d9058093eb08150c"
        ],
        [
            "rewrite Zmult_1_r.",
            "VernacExtend",
            "417376d82024400c741f6570f03b2437a77ee661"
        ],
        [
            "apply Rinv_le; [exact Rlt_0_2|].",
            "VernacExtend",
            "730b44166c168c22e4a31975662324c540bfc8e1"
        ],
        [
            "change 2%R with (Z2R 2); apply Z2R_le.",
            "VernacExtend",
            "434982929cb42bd43dba8233e7661991c6d7e8eb"
        ],
        [
            "destruct beta as (beta_val,beta_prop).",
            "VernacExtend",
            "31f237390e579283b1fbfb3fdeb97e791d4f8c97"
        ],
        [
            "now apply Zle_bool_imp_le.",
            "VernacExtend",
            "58a939dc5b091786ac14b82b5f01868c4efb5e4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Znearest.",
            "VernacEndSegment",
            "87094225ecf23dd172d0f4e6d13bc2e9c38f4c07"
        ],
        [
            "Section rndNA.",
            "VernacBeginSection",
            "1e0e8dd8f46567929308961c88757b0a3f439f50"
        ],
        [
            "Global Instance valid_rnd_NA : Valid_rnd (Znearest (Zle_bool 0)) := valid_rnd_N _.",
            "VernacInstance",
            "241d3c5abd0829a63b1bdb6453eef675b1b4abfb"
        ],
        [
            "Theorem round_NA_pt : forall x, Rnd_NA_pt generic_format x (round (Znearest (Zle_bool 0)) x).",
            "VernacStartTheoremProof",
            "e7e59055a76c2a6351d04b2427da3eaeddcc2643"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "generalize (round_N_pt (Zle_bool 0) x).",
            "VernacExtend",
            "f7acc8ace316040c212090ac96294da21eca5229"
        ],
        [
            "set (f := round (Znearest (Zle_bool 0)) x).",
            "VernacExtend",
            "c691b626a32fdced48b079a0e63c8663b972c194"
        ],
        [
            "intros Rxf.",
            "VernacExtend",
            "5146f926106bd68a51f25d3e759080af242331c2"
        ],
        [
            "destruct (Req_dec (x - round Zfloor x) (round Zceil x - x)) as [Hm|Hm].",
            "VernacExtend",
            "507d9f1a72a8665f7fede8584ed937bdcfb7d8a5"
        ],
        [
            "apply Rnd_NA_N_pt.",
            "VernacExtend",
            "eed8445ee1e21d575f8abba0e3c683189935766b"
        ],
        [
            "exact generic_format_0.",
            "VernacExtend",
            "34aae2d49742d3ef117a6e88122fe75a9690a076"
        ],
        [
            "exact Rxf.",
            "VernacExtend",
            "c20e21bc7d96c46b3742109ffab22031f847613e"
        ],
        [
            "destruct (Rle_or_lt 0 x) as [Hx|Hx].",
            "VernacExtend",
            "a3770c27b57432695451ec9185f3f15f3759c589"
        ],
        [
            "rewrite Rabs_pos_eq with (1 := Hx).",
            "VernacExtend",
            "a465db2a8ec152a807cdaa74dc7cac57c68345a6"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "unfold f.",
            "VernacExtend",
            "54a386f4161710b69df4a2025df24a14e842ecf2"
        ],
        [
            "rewrite round_N_middle with (1 := Hm).",
            "VernacExtend",
            "905db7ba4251bde90efe10b02340922b89065cb7"
        ],
        [
            "rewrite Zle_bool_true.",
            "VernacExtend",
            "4665a87fafe0a4cdce3109c78c64b7a4e889634d"
        ],
        [
            "apply (round_UP_pt x).",
            "VernacExtend",
            "ac82eeb026163fd8bdef79f113fa1ac9be1cbcdd"
        ],
        [
            "apply Zfloor_lub.",
            "VernacExtend",
            "2a3f8e59d303f192a648e4eef260195d5e8b9977"
        ],
        [
            "apply Rmult_le_pos with (1 := Hx).",
            "VernacExtend",
            "9c9080f14c38931124baef01823092be47cbff82"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Rnd_N_pt_pos with (2 := Hx) (3 := Rxf).",
            "VernacExtend",
            "f076e592eccc88149fa6853bd3139513aff3a845"
        ],
        [
            "exact generic_format_0.",
            "VernacExtend",
            "34aae2d49742d3ef117a6e88122fe75a9690a076"
        ],
        [
            "rewrite Rabs_left with (1 := Hx).",
            "VernacExtend",
            "c6403664ba27489c7a2bd373129c5a2edc8570dd"
        ],
        [
            "rewrite Rabs_left1.",
            "VernacExtend",
            "959a39766c3ec0e54779596cf6d2e0ed16ff476d"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "unfold f.",
            "VernacExtend",
            "54a386f4161710b69df4a2025df24a14e842ecf2"
        ],
        [
            "rewrite round_N_middle with (1 := Hm).",
            "VernacExtend",
            "905db7ba4251bde90efe10b02340922b89065cb7"
        ],
        [
            "rewrite Zle_bool_false.",
            "VernacExtend",
            "958139bcc90f42020f9b6fc3f99c032f5ffc6e97"
        ],
        [
            "apply (round_DN_pt x).",
            "VernacExtend",
            "e1ccef453750c6a8e8d625958ee1240a7f60b620"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "apply Rle_lt_trans with (scaled_mantissa x).",
            "VernacExtend",
            "d29cccfd011cb3ab66af7f308fb533ac7ec22bcb"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
            "VernacExtend",
            "f4e119904c3e584e3697f8c5aadc435383c7d312"
        ],
        [
            "apply Rmult_lt_compat_r with (2 := Hx).",
            "VernacExtend",
            "0c90e4d4b1d8a064704aafd0f3308f3c21fde398"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Rnd_N_pt_neg with (3 := Rxf).",
            "VernacExtend",
            "8bfcbaac1ecf515f6f785f66d7d6a462362f9b05"
        ],
        [
            "exact generic_format_0.",
            "VernacExtend",
            "34aae2d49742d3ef117a6e88122fe75a9690a076"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rxf.",
            "VernacExtend",
            "b7526d580387cd8641bcd16efca0fa87286b028b"
        ],
        [
            "intros g Rxg.",
            "VernacExtend",
            "f9d09942fc981672706fb3ac93fac74d04cb2317"
        ],
        [
            "rewrite Rnd_N_pt_unicity with (3 := Hm) (4 := Rxf) (5 := Rxg).",
            "VernacExtend",
            "9d8438997cdfa266565410e230ac16314eb93323"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply round_DN_pt.",
            "VernacExtend",
            "5f4c4f54107563eb46e1766fa01338b4207ef35d"
        ],
        [
            "apply round_UP_pt.",
            "VernacExtend",
            "949fc15c9e78aa5120a8e381c4848e031dfcc7e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End rndNA.",
            "VernacEndSegment",
            "1de746d07ad13ced768b2df6186faa1ef0382a1a"
        ],
        [
            "Section rndN_opp.",
            "VernacBeginSection",
            "2a5efb4083b08e7cec49a71229d007fd7c434f08"
        ],
        [
            "Theorem Znearest_opp : forall choice x, Znearest choice (- x) = (- Znearest (fun t => negb (choice (- (t + 1))%Z)) x)%Z.",
            "VernacStartTheoremProof",
            "a290ee8d9d187c8a781f8ecf4221a6d02f393a78"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros choice x.",
            "VernacExtend",
            "8be0dc28b7e1d3b48acd180a6053107ee4186f2f"
        ],
        [
            "destruct (Req_dec (Z2R (Zfloor x)) x) as [Hx|Hx].",
            "VernacExtend",
            "503dc090601bb30d97da572618aa89574587b534"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "rewrite <- Z2R_opp.",
            "VernacExtend",
            "94ccc3da21311dc6271e2f2c14ae90581cdd1c91"
        ],
        [
            "rewrite 2!Zrnd_Z2R...",
            "VernacExtend",
            "7c0fd52814d2612eb742982256cd0a23bef40acd"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "replace (- x - Z2R (Zfloor (-x)))%R with (Z2R (Zceil x) - x)%R.",
            "VernacExtend",
            "0aaa92812f7fa2a3918057cf5e7a3e05bda515fe"
        ],
        [
            "rewrite Rcompare_ceil_floor_mid with (1 := Hx).",
            "VernacExtend",
            "90cf0a65c64715d2d228e1b8416ebb619c21a7c8"
        ],
        [
            "rewrite Rcompare_floor_ceil_mid with (1 := Hx).",
            "VernacExtend",
            "836ea233b920399b8b281bc73712b731af997a6b"
        ],
        [
            "rewrite Rcompare_sym.",
            "VernacExtend",
            "256d551cd946d2556ff5000ae0d62882322840d9"
        ],
        [
            "rewrite <- Zceil_floor_neq with (1 := Hx).",
            "VernacExtend",
            "720d15c626ed1b6a26fcbd018f2b99154ff4f855"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "rewrite Ropp_involutive.",
            "VernacExtend",
            "ba0ab440a50f656f08837503f0228b68c9acdf87"
        ],
        [
            "case Rcompare ; simpl ; trivial.",
            "VernacExtend",
            "cc1af142e50ca322b92af9271bb6c9e4144db9b6"
        ],
        [
            "rewrite Zopp_involutive.",
            "VernacExtend",
            "7b00d63dc772416460dc62c59515875a36dfefdb"
        ],
        [
            "case (choice (Zfloor (- x))) ; simpl ; trivial.",
            "VernacExtend",
            "7f93cf26eaf6ebbca6b45320eba9ab4bd4600372"
        ],
        [
            "now rewrite Zopp_involutive.",
            "VernacExtend",
            "5977f48c86fee003e81940402fa72f011bd22120"
        ],
        [
            "now rewrite Zopp_involutive.",
            "VernacExtend",
            "5977f48c86fee003e81940402fa72f011bd22120"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "rewrite Z2R_opp.",
            "VernacExtend",
            "f3d51769485a2c167744d3d3fd4fffa672e5e611"
        ],
        [
            "apply Rplus_comm.",
            "VernacExtend",
            "0a47c60f716db020ba314277a62e5fbde1f9f84a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_N_opp : forall choice, forall x, round (Znearest choice) (-x) = (- round (Znearest (fun t => negb (choice (- (t + 1))%Z))) x)%R.",
            "VernacStartTheoremProof",
            "557d184b33680222d55b2ac314c24b0afd55f03a"
        ],
        [
            "intros choice x.",
            "VernacExtend",
            "8be0dc28b7e1d3b48acd180a6053107ee4186f2f"
        ],
        [
            "unfold round, F2R.",
            "VernacExtend",
            "f7df1e666cb069edfb380cdf26ce3a214adbfa27"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite canonic_exp_opp.",
            "VernacExtend",
            "4f64bd993701cd658ccc00c4e33911f0305a20f4"
        ],
        [
            "rewrite scaled_mantissa_opp.",
            "VernacExtend",
            "88c0a15c728ca1f5747eb5ebfaddf2989585bdfd"
        ],
        [
            "rewrite Znearest_opp.",
            "VernacExtend",
            "350c75d1f4325109ea758b936da66b03e76bbc75"
        ],
        [
            "rewrite Z2R_opp.",
            "VernacExtend",
            "f3d51769485a2c167744d3d3fd4fffa672e5e611"
        ],
        [
            "now rewrite Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "1b7b97984e6714bb3e8b12a380038dfcfa613a3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End rndN_opp.",
            "VernacEndSegment",
            "b56b63953a9d0760c3c5850b3965ef4be9bfbfc1"
        ],
        [
            "End Format.",
            "VernacEndSegment",
            "f472cffc302c838c9b39993d2559c7070fbd79f8"
        ],
        [
            "Section Inclusion.",
            "VernacBeginSection",
            "896a837cdf36991933f8486e8960e3193cf4f1ed"
        ],
        [
            "Variables fexp1 fexp2 : Z -> Z.",
            "VernacAssumption",
            "f021e7f7bad04325f682d67f48fb575434c6d891"
        ],
        [
            "Context { valid_exp1 : Valid_exp fexp1 }.",
            "VernacContext",
            "0acb4494bf2efca78fc014e3c1d1e08e6512bfa5"
        ],
        [
            "Context { valid_exp2 : Valid_exp fexp2 }.",
            "VernacContext",
            "ba587bec0f4d2432dc78978ac77d59bbb98224c6"
        ],
        [
            "Theorem generic_inclusion_ln_beta : forall x, ( x <> R0 -> (fexp2 (ln_beta beta x) <= fexp1 (ln_beta beta x))%Z ) -> generic_format fexp1 x -> generic_format fexp2 x.",
            "VernacStartTheoremProof",
            "bed1277f79c190641e82d755b6f0e28155047f15"
        ],
        [
            "intros x He Fx.",
            "VernacExtend",
            "573610ce5fc1ccdbcb6826c99fe8782e0e8494d0"
        ],
        [
            "rewrite Fx.",
            "VernacExtend",
            "6d5fef6b9bb5c0abc3b57cf7001ef10fc8718bc8"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "intros Zx.",
            "VernacExtend",
            "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
        ],
        [
            "rewrite <- Fx.",
            "VernacExtend",
            "3eb9ff71c5f9468a2df9b7f7943d9ba7bc8d3704"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "contradict Zx.",
            "VernacExtend",
            "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
        ],
        [
            "rewrite Zx, scaled_mantissa_0.",
            "VernacExtend",
            "44bc490a4864749eae631bc7457fb2454762a570"
        ],
        [
            "apply (Ztrunc_Z2R 0).",
            "VernacExtend",
            "f2dca00f6438321da92a0cb199732aa8776ab401"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_inclusion_lt_ge : forall e1 e2, ( forall e, (e1 < e <= e2)%Z -> (fexp2 e <= fexp1 e)%Z ) -> forall x, (bpow e1 <= Rabs x < bpow e2)%R -> generic_format fexp1 x -> generic_format fexp2 x.",
            "VernacStartTheoremProof",
            "a44dbbbea2a24add1f912fa9ec8617ac22938d72"
        ],
        [
            "intros e1 e2 He x (Hx1,Hx2).",
            "VernacExtend",
            "a84eddd052241dc877f2154e16876910ed00daa2"
        ],
        [
            "apply generic_inclusion_ln_beta.",
            "VernacExtend",
            "084c11396ddecfe59843f97c4e3acea4d44cab1b"
        ],
        [
            "intros Zx.",
            "VernacExtend",
            "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply ln_beta_gt_bpow.",
            "VernacExtend",
            "944360694e9de116bfa3c2ce8238224f7332dde8"
        ],
        [
            "now apply ln_beta_le_bpow.",
            "VernacExtend",
            "faab6f875cb19e6202ef6892aa34c64c6331527d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_inclusion : forall e, (fexp2 e <= fexp1 e)%Z -> forall x, (bpow (e - 1) <= Rabs x <= bpow e)%R -> generic_format fexp1 x -> generic_format fexp2 x.",
            "VernacStartTheoremProof",
            "5ffa9ac913f69ae6c31549b083cfb564236ff327"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros e He x (Hx1,[Hx2|Hx2]).",
            "VernacExtend",
            "a8dddfa3a95333ca783968017e05f4cc9bb6bd57"
        ],
        [
            "apply generic_inclusion_ln_beta.",
            "VernacExtend",
            "084c11396ddecfe59843f97c4e3acea4d44cab1b"
        ],
        [
            "now rewrite ln_beta_unique with (1 := conj Hx1 Hx2).",
            "VernacExtend",
            "e2fd2dc8224db751729170705dfcca2c04a21393"
        ],
        [
            "intros Fx.",
            "VernacExtend",
            "5748294fed3b0d4958955158ed1b2352a02e1a8a"
        ],
        [
            "apply generic_format_abs_inv.",
            "VernacExtend",
            "47d9e9231e70b9eb9ef8b6a83f5c1d3532b1e6cd"
        ],
        [
            "rewrite Hx2.",
            "VernacExtend",
            "762fa2d49508177b00d0e4ad5a9c143b424050e0"
        ],
        [
            "apply generic_format_bpow'...",
            "VernacExtend",
            "24f0dcb887afaa2c8c833e712b6ccc44bf9d608d"
        ],
        [
            "apply Zle_trans with (1 := He).",
            "VernacExtend",
            "ab0fae9cbccf91500a2a36603193ad7ac8f426f4"
        ],
        [
            "apply generic_format_bpow_inv...",
            "VernacExtend",
            "f570da961359c0c9e8b3cd7c1aff070b3c9589d3"
        ],
        [
            "rewrite <- Hx2.",
            "VernacExtend",
            "be892d53e75e9912db0d3f85c6a12b4c076422a2"
        ],
        [
            "now apply generic_format_abs.",
            "VernacExtend",
            "97ee5b6fb3356b9dfee032d9e9aa0b99ec3a2227"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_inclusion_le_ge : forall e1 e2, (e1 < e2)%Z -> ( forall e, (e1 < e <= e2)%Z -> (fexp2 e <= fexp1 e)%Z ) -> forall x, (bpow e1 <= Rabs x <= bpow e2)%R -> generic_format fexp1 x -> generic_format fexp2 x.",
            "VernacStartTheoremProof",
            "d77d8999b1a99278358cb477bba79dda64b32b04"
        ],
        [
            "intros e1 e2 He' He x (Hx1,[Hx2|Hx2]).",
            "VernacExtend",
            "8d9915d9203ca661c578cbb6ee655ab10d9fc25d"
        ],
        [
            "apply generic_inclusion_ln_beta.",
            "VernacExtend",
            "084c11396ddecfe59843f97c4e3acea4d44cab1b"
        ],
        [
            "intros Zx.",
            "VernacExtend",
            "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply ln_beta_gt_bpow.",
            "VernacExtend",
            "944360694e9de116bfa3c2ce8238224f7332dde8"
        ],
        [
            "now apply ln_beta_le_bpow.",
            "VernacExtend",
            "faab6f875cb19e6202ef6892aa34c64c6331527d"
        ],
        [
            "apply generic_inclusion with (e := e2).",
            "VernacExtend",
            "ffc6683e0286fd110df0a568f42252498c8e8576"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply He'.",
            "VernacExtend",
            "3ca595dd7608c823b6f2298989075e15027b0ef4"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "rewrite Hx2.",
            "VernacExtend",
            "762fa2d49508177b00d0e4ad5a9c143b424050e0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "apply Zle_pred.",
            "VernacExtend",
            "74e60cd76d675249c45bd31401205b5a27bc8eb6"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_inclusion_le : forall e2, ( forall e, (e <= e2)%Z -> (fexp2 e <= fexp1 e)%Z ) -> forall x, (Rabs x <= bpow e2)%R -> generic_format fexp1 x -> generic_format fexp2 x.",
            "VernacStartTheoremProof",
            "f0bc14dd1c51cc3c83cf7125fc0224426fed190d"
        ],
        [
            "intros e2 He x [Hx|Hx].",
            "VernacExtend",
            "238c5186e1b1f008ab0e4c084eda6449172d518e"
        ],
        [
            "apply generic_inclusion_ln_beta.",
            "VernacExtend",
            "084c11396ddecfe59843f97c4e3acea4d44cab1b"
        ],
        [
            "intros Zx.",
            "VernacExtend",
            "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "now apply ln_beta_le_bpow.",
            "VernacExtend",
            "faab6f875cb19e6202ef6892aa34c64c6331527d"
        ],
        [
            "apply generic_inclusion with (e := e2).",
            "VernacExtend",
            "ffc6683e0286fd110df0a568f42252498c8e8576"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "apply Zle_pred.",
            "VernacExtend",
            "74e60cd76d675249c45bd31401205b5a27bc8eb6"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_inclusion_ge : forall e1, ( forall e, (e1 < e)%Z -> (fexp2 e <= fexp1 e)%Z ) -> forall x, (bpow e1 <= Rabs x)%R -> generic_format fexp1 x -> generic_format fexp2 x.",
            "VernacStartTheoremProof",
            "532037cb6751ad1563a01746743c86d2d0b8d4ec"
        ],
        [
            "intros e1 He x Hx.",
            "VernacExtend",
            "d0c14afa6ef11d6cd12c7e87e7c57c363079e4ef"
        ],
        [
            "apply generic_inclusion_ln_beta.",
            "VernacExtend",
            "084c11396ddecfe59843f97c4e3acea4d44cab1b"
        ],
        [
            "intros Zx.",
            "VernacExtend",
            "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "now apply ln_beta_gt_bpow.",
            "VernacExtend",
            "944360694e9de116bfa3c2ce8238224f7332dde8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable rnd : R -> Z.",
            "VernacAssumption",
            "5bdfd3c40d2aa8ce2b985c638278827c00ad436e"
        ],
        [
            "Context { valid_rnd : Valid_rnd rnd }.",
            "VernacContext",
            "49759e314a3bb9ba66adea1eb824227c77e97e4c"
        ],
        [
            "Theorem generic_round_generic : forall x, generic_format fexp1 x -> generic_format fexp1 (round fexp2 rnd x).",
            "VernacStartTheoremProof",
            "25a9a8032dfc0d7bb5f418f2556e0bcbe8e8be93"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Gx.",
            "VernacExtend",
            "600a1a824ad6966d056d2a9a75172c199bac2291"
        ],
        [
            "apply generic_format_abs_inv.",
            "VernacExtend",
            "47d9e9231e70b9eb9ef8b6a83f5c1d3532b1e6cd"
        ],
        [
            "apply generic_format_abs in Gx.",
            "VernacExtend",
            "6d26dfc85f68a8e11e3bfc0d6f5723ba0959a89e"
        ],
        [
            "revert rnd valid_rnd x Gx.",
            "VernacExtend",
            "4dec26d940beeb77f6148a7aa1147ff57fa09291"
        ],
        [
            "refine (round_abs_abs _ (fun x y => generic_format fexp1 x -> generic_format fexp1 y) _).",
            "VernacExtend",
            "70653f4030912ac7bbb375253569951424dda079"
        ],
        [
            "intros rnd valid_rnd x [Hx|Hx] Gx.",
            "VernacExtend",
            "7db187f35e217a00ccd1f49be936430ed0e1d495"
        ],
        [
            "generalize (ln_beta_generic_gt _ x (Rgt_not_eq _ _ Hx) Gx).",
            "VernacExtend",
            "dac35ce110dbc208b0c4d85c83641041adff5599"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "destruct (ln_beta beta x) as (ex,Ex) ; simpl.",
            "VernacExtend",
            "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
        ],
        [
            "specialize (Ex (Rgt_not_eq _ _ Hx)).",
            "VernacExtend",
            "f3dec33d1f9f510a28d0f2cb90df1d16cc334a08"
        ],
        [
            "intros He'.",
            "VernacExtend",
            "7643c54943734a5b7b1506fcc88a14f324fca387"
        ],
        [
            "rewrite Rabs_pos_eq in Ex by now apply Rlt_le.",
            "VernacExtend",
            "e817905601505d8fa3bf922fde3389d757cd1528"
        ],
        [
            "destruct (Zle_or_lt ex (fexp2 ex)) as [He|He].",
            "VernacExtend",
            "5129bc7a187af3cccb4aecd2b1c1c89321186146"
        ],
        [
            "destruct (round_bounded_small_pos fexp2 rnd x ex He Ex) as [Hr|Hr].",
            "VernacExtend",
            "8ae2ce7dbdbea636fd79379ef221d2b4a9b53a17"
        ],
        [
            "rewrite Hr.",
            "VernacExtend",
            "f125d3fd5b288de6b75a9762d9060512a4dedad7"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "rewrite Hr.",
            "VernacExtend",
            "f125d3fd5b288de6b75a9762d9060512a4dedad7"
        ],
        [
            "apply generic_format_bpow'...",
            "VernacExtend",
            "24f0dcb887afaa2c8c833e712b6ccc44bf9d608d"
        ],
        [
            "apply Zlt_le_weak.",
            "VernacExtend",
            "77c804797cd604de1af1fd78f914f426e7c6ce85"
        ],
        [
            "apply valid_exp_large with ex...",
            "VernacExtend",
            "8cf85f367c99fd51fe5c7eab76d077451db986a4"
        ],
        [
            "destruct (Zle_or_lt (canonic_exp fexp2 x) (canonic_exp fexp1 x)) as [He''|He''].",
            "VernacExtend",
            "55ff0dc40fa971ebee887274aaefbf5a2524108f"
        ],
        [
            "rewrite round_generic...",
            "VernacExtend",
            "af5222f20fb69e4892cd9b764ef3997628087b6a"
        ],
        [
            "rewrite Gx.",
            "VernacExtend",
            "a1cd2da725c6af37ba6729d578a073c7bc93aa78"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "fold (round fexp1 Ztrunc x).",
            "VernacExtend",
            "ba8d4665abf025ce06f590dfcfd1f6b8aedbd606"
        ],
        [
            "intros Zx.",
            "VernacExtend",
            "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
        ],
        [
            "unfold canonic_exp at 1.",
            "VernacExtend",
            "d46c3c38a840bbe7f452aa66ef75d41ee20212ed"
        ],
        [
            "rewrite ln_beta_round_ZR...",
            "VernacExtend",
            "cad3fbc4cc30ecf2ffaee9843f7a6dc19899d80d"
        ],
        [
            "contradict Zx.",
            "VernacExtend",
            "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
        ],
        [
            "apply F2R_eq_0_reg with (1 := Zx).",
            "VernacExtend",
            "c69c4caf72bea6ac10d1c15055f3690ad52ececf"
        ],
        [
            "destruct (round_bounded_large_pos fexp2 rnd x ex He Ex) as (Hr1,[Hr2|Hr2]).",
            "VernacExtend",
            "5950fb145531f542180573a9571ea77fa3ede4d8"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "intros Zx.",
            "VernacExtend",
            "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
        ],
        [
            "fold (round fexp2 rnd x).",
            "VernacExtend",
            "3570f55217357f5b6fb5391a7a6404ec57ca9c43"
        ],
        [
            "unfold canonic_exp at 1.",
            "VernacExtend",
            "d46c3c38a840bbe7f452aa66ef75d41ee20212ed"
        ],
        [
            "rewrite ln_beta_unique_pos with (1 := conj Hr1 Hr2).",
            "VernacExtend",
            "b61ce8d14871c9d7578f5e9258aa7251ccecc150"
        ],
        [
            "rewrite <- ln_beta_unique_pos with (1 := Ex).",
            "VernacExtend",
            "f2285da7c1a8a1a84366deb830bdc0347d2a8b70"
        ],
        [
            "now apply Zlt_le_weak.",
            "VernacExtend",
            "8df137fb70ba9a1f8f0605f13095da8524766c66"
        ],
        [
            "rewrite Hr2.",
            "VernacExtend",
            "febbabc95b996a0878c185036ee3988cdc9c9555"
        ],
        [
            "apply generic_format_bpow'...",
            "VernacExtend",
            "24f0dcb887afaa2c8c833e712b6ccc44bf9d608d"
        ],
        [
            "now apply Zlt_le_weak.",
            "VernacExtend",
            "8df137fb70ba9a1f8f0605f13095da8524766c66"
        ],
        [
            "rewrite <- Hx, round_0...",
            "VernacExtend",
            "2989dd4d1ff38e238cea434d97d71b118b1a4753"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Inclusion.",
            "VernacEndSegment",
            "3a0d20ce385637e3d56de85a0dcf791d0da9ece4"
        ],
        [
            "End Generic.",
            "VernacEndSegment",
            "f8ae555c2c1febd3363f905591dd4b1f5c2646a9"
        ],
        [
            "Notation ZnearestA := (Znearest (Zle_bool 0)).",
            "VernacSyntacticDefinition",
            "aa2f4447a5b270085d279f5d703d1e23ca7c02eb"
        ],
        [
            "Section rndNA_opp.",
            "VernacBeginSection",
            "1a2f7ef58133de122873b65014682f6d4f5aef2b"
        ],
        [
            "Lemma round_NA_opp : forall beta : radix, forall (fexp : Z -> Z), forall x, (round beta fexp ZnearestA (- x) = - round beta fexp ZnearestA x)%R.",
            "VernacStartTheoremProof",
            "80a75dac889cca66d30f3d2393064a948db988ea"
        ],
        [
            "intros beta fexp x.",
            "VernacExtend",
            "b9e6ffec1a37759b92b0c19265b65528e561d7bb"
        ],
        [
            "rewrite round_N_opp.",
            "VernacExtend",
            "75544eee29f2902978176e3adf6604dc4f68a033"
        ],
        [
            "apply Ropp_eq_compat.",
            "VernacExtend",
            "0a7e593df75dda4a02ea72003a8c07176275c9fe"
        ],
        [
            "apply round_ext.",
            "VernacExtend",
            "88a8bc21a41dc91770db45d495513ef42d22b3f0"
        ],
        [
            "clear x; intro x.",
            "VernacExtend",
            "7369f10e5b29e71e5de9ad8eb8189233b839197e"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "case_eq (Rcompare (x - Z2R (Zfloor x)) (/ 2)); intro C; [|reflexivity|reflexivity].",
            "VernacExtend",
            "0f94824f8159c1f77d21f163cc92d17379472e47"
        ],
        [
            "apply Rcompare_Eq_inv in C.",
            "VernacExtend",
            "fe981425af309b326aa4c82495248dcbf5d835b0"
        ],
        [
            "assert (H : negb (0 <=? - (Zfloor x + 1))%Z = (0 <=? Zfloor x)%Z); [|now rewrite H].",
            "VernacExtend",
            "8166224773a255e1fe6430c6d98ca53abc82ce8c"
        ],
        [
            "rewrite negb_Zle_bool.",
            "VernacExtend",
            "b063790e22e6589164e7802adff03293aa1b5210"
        ],
        [
            "case_eq (0 <=? Zfloor x)%Z; intro C'.",
            "VernacExtend",
            "9571122aa96447ec5b3be0c4f155894ac7c54af9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Zle_bool_imp_le in C'.",
            "VernacExtend",
            "bf52dbd80b6bcfba5a71f3b61784b4410f6ea888"
        ],
        [
            "apply Zlt_bool_true.",
            "VernacExtend",
            "bebe147ff91dd7ce791fff229d45a54236180415"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.leb_gt in C'.",
            "VernacExtend",
            "36985a649ed7d25e38ba82590147d2eae7a52ba2"
        ],
        [
            "apply Zlt_bool_false.",
            "VernacExtend",
            "727bcedc45dab1285379e344de04340c612a0572"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End rndNA_opp.",
            "VernacEndSegment",
            "9a635e81894521b212499b53cde98ebc98fac37a"
        ],
        [
            "Notation rndDN := Zfloor (only parsing).",
            "VernacSyntacticDefinition",
            "e6ff35ec411d87cd6a4e2807b061009c7d30e6c4"
        ],
        [
            "Notation rndUP := Zceil (only parsing).",
            "VernacSyntacticDefinition",
            "2eb86d536cea270f3891f5e81b946a1d0f10d924"
        ],
        [
            "Notation rndZR := Ztrunc (only parsing).",
            "VernacSyntacticDefinition",
            "706802cfbd500e1867baa66b54b2e623fca211eb"
        ],
        [
            "Notation rndNA := ZnearestA (only parsing).",
            "VernacSyntacticDefinition",
            "742fe9fefd51d8e6ca6158adfdbe15371f48a9c9"
        ]
    ],
    "proofs": [
        {
            "name": "valid_exp_large",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros k l Hk H.",
                        "VernacExtend",
                        "94fd5aea29a707dd5ed41ca26f25cfb14c08f8ed"
                    ]
                },
                {
                    "command": [
                        "apply Znot_ge_lt.",
                        "VernacExtend",
                        "3a41d2310b70caaa796f877eb6b440290e0b2081"
                    ]
                },
                {
                    "command": [
                        "intros Hl.",
                        "VernacExtend",
                        "5c4705396c649f586841a9235569b2230fedbd7f"
                    ]
                },
                {
                    "command": [
                        "apply Zge_le in Hl.",
                        "VernacExtend",
                        "8687d72de03c08103ffff14cd81755390ae0184e"
                    ]
                },
                {
                    "command": [
                        "assert (H' := proj2 (proj2 (valid_exp l) Hl) k).",
                        "VernacExtend",
                        "c59e5d8635e4e3f3606dfeb74c27961ead740c67"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_exp_large'",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros k l Hk H.",
                        "VernacExtend",
                        "94fd5aea29a707dd5ed41ca26f25cfb14c08f8ed"
                    ]
                },
                {
                    "command": [
                        "apply Znot_ge_lt.",
                        "VernacExtend",
                        "3a41d2310b70caaa796f877eb6b440290e0b2081"
                    ]
                },
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "apply Zge_le in H'.",
                        "VernacExtend",
                        "4432861beea4e1a6763439df0951944120e88c4c"
                    ]
                },
                {
                    "command": [
                        "assert (Hl := Zle_trans _ _ _ H H').",
                        "VernacExtend",
                        "d102685495473bae7c6c1f11decff431155348af"
                    ]
                },
                {
                    "command": [
                        "apply valid_exp in Hl.",
                        "VernacExtend",
                        "83e8016f3a2798810ecca7c8541366842e8f4195"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := proj2 Hl k H').",
                        "VernacExtend",
                        "bbc839ffeffe2f4c7354357ee394c26028546380"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_0",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "unfold generic_format, scaled_mantissa.",
                        "VernacExtend",
                        "5dd3f7c8b737397d5f7a50337d30185eb9353de9"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l.",
                        "VernacExtend",
                        "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
                    ]
                },
                {
                    "command": [
                        "change (Ztrunc 0) with (Ztrunc (Z2R 0)).",
                        "VernacExtend",
                        "113da410db2a60e7d11b82e38e61cde7a10745d5"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ztrunc_Z2R, F2R_0.",
                        "VernacExtend",
                        "a33877889992af581fab76940b1c439a90b8fb47"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_exp_opp",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "now rewrite ln_beta_opp.",
                        "VernacExtend",
                        "5351695def44af96e3aa89b6a597f8dc68274385"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_exp_abs",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "now rewrite ln_beta_abs.",
                        "VernacExtend",
                        "70800e7bcca84e364527f7e50f01c888d5e12e8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_bpow",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros e H.",
                        "VernacExtend",
                        "d0b6fb9f08610a6ada67daf7c09c41e9e4f08eb4"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format, scaled_mantissa, canonic_exp.",
                        "VernacExtend",
                        "de5b77fe63834fa08b5f256387ac961205f531a0"
                    ]
                },
                {
                    "command": [
                        "rewrite ln_beta_bpow.",
                        "VernacExtend",
                        "562ed7a7f197615f8fb2cc276e6bc8e10357a919"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z2R_Zpower beta (e + - fexp (e + 1))).",
                        "VernacExtend",
                        "ebcd23c360c93485f44e08eab66d470b652b68a2"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_Z2R.",
                        "VernacExtend",
                        "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- F2R_bpow.",
                        "VernacExtend",
                        "29562ae2f86921a1e7081119c136279f93ff5e77"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_change_exp with (1 := H).",
                        "VernacExtend",
                        "e3e9affd2be8fbc43d829c257ab6738f680b03e2"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zmult_1_l.",
                        "VernacExtend",
                        "eafda3f30939309f3a7824e9ac0a12511cd200e8"
                    ]
                },
                {
                    "command": [
                        "now apply Zle_minus_le_0.",
                        "VernacExtend",
                        "17c2cb27e85ea36789b13d90d3bf4957b04c6bb0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_bpow'",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros e He.",
                        "VernacExtend",
                        "933455ac9e50417dcc771605432cd330296b74b2"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow.",
                        "VernacExtend",
                        "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
                    ]
                },
                {
                    "command": [
                        "destruct (Zle_lt_or_eq _ _ He).",
                        "VernacExtend",
                        "fe902647be3b9a18dc3c6ed271dda39e9e7a509b"
                    ]
                },
                {
                    "command": [
                        "now apply valid_exp_.",
                        "VernacExtend",
                        "851252786b2ec456a1fa604e7e9dcaa2e724ea34"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "apply valid_exp.",
                        "VernacExtend",
                        "9335fa4770b756f93530fd54152de0507ba39d3b"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_F2R",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros m e.",
                        "VernacExtend",
                        "87373ecd1defa17e19f5893f4866e22d7a98f7ba"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_eq_dec m 0) as [Zm|Zm].",
                        "VernacExtend",
                        "8c759be9d3e57234d391680cfa38fa8e990684fc"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "rewrite Zm, F2R_0.",
                        "VernacExtend",
                        "b5fda876f08728239cd704dcc276f3bd0689d17e"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_0.",
                        "VernacExtend",
                        "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format, scaled_mantissa.",
                        "VernacExtend",
                        "5dd3f7c8b737397d5f7a50337d30185eb9353de9"
                    ]
                },
                {
                    "command": [
                        "set (e' := canonic_exp (F2R (Float beta m e))).",
                        "VernacExtend",
                        "bfd01bb7ea116600a3c76c2a253d3f7a69e6c18e"
                    ]
                },
                {
                    "command": [
                        "intros He.",
                        "VernacExtend",
                        "dfbedaae88fb1ac0f1e0aadf409bd4a7b0ced9da"
                    ]
                },
                {
                    "command": [
                        "specialize (He Zm).",
                        "VernacExtend",
                        "10e6f5c1526e731bae1d0456acd0fe8a51e53afb"
                    ]
                },
                {
                    "command": [
                        "unfold F2R at 3.",
                        "VernacExtend",
                        "27270af7dd164f967da81ceb2c6170fea841d03a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_change_exp with (1 := He).",
                        "VernacExtend",
                        "4e0613555cc1af55c051b940df3e5abfe0625a28"
                    ]
                },
                {
                    "command": [
                        "apply F2R_eq_compat.",
                        "VernacExtend",
                        "bc1e4623b2196fb23776bd02c10b33de36f7515b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus, <- Z2R_Zpower, <- Z2R_mult.",
                        "VernacExtend",
                        "a5efdf1ae4f472f72ffa259f1c5c2eef179850b3"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ztrunc_Z2R.",
                        "VernacExtend",
                        "5d27986c7f3c113e4c1cfe86d8597084c9806942"
                    ]
                },
                {
                    "command": [
                        "now apply Zle_left.",
                        "VernacExtend",
                        "2fb4f47f309d122be1aa508fc62f46b27eee4792"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_F2R'",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros x f H1 H2.",
                        "VernacExtend",
                        "581397b26875ae02f88522d1a89b5e782f379586"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; destruct f as (m,e).",
                        "VernacExtend",
                        "7f4803bf2bb7c2fab6f98887fce05a2c803e9cd5"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_F2R.",
                        "VernacExtend",
                        "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
                    ]
                },
                {
                    "command": [
                        "simpl in *; intros H3.",
                        "VernacExtend",
                        "58a1e07bfcc8ee7059ce46b18f64bf4fc16991d7"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; apply H2.",
                        "VernacExtend",
                        "f36c7364cfa09360a8477e9112d6257ac0331ab5"
                    ]
                },
                {
                    "command": [
                        "intros Y; apply H3.",
                        "VernacExtend",
                        "58897bb5b669ef075ece74d0999fcc3f47ed8d04"
                    ]
                },
                {
                    "command": [
                        "apply F2R_eq_0_reg with beta e.",
                        "VernacExtend",
                        "df63e52f8b1f41fa25bd5082528160fab8173109"
                    ]
                },
                {
                    "command": [
                        "now rewrite H1.",
                        "VernacExtend",
                        "1172ac45f58471854abbfe26373581bfebca221c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_opp",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros m e H.",
                        "VernacExtend",
                        "c2ddf735ed018afdde6b1492b1675c7da72a8137"
                    ]
                },
                {
                    "command": [
                        "unfold canonic.",
                        "VernacExtend",
                        "6a198835d9b378599c1fa5419c9760cfac4e66cc"
                    ]
                },
                {
                    "command": [
                        "now rewrite F2R_Zopp, canonic_exp_opp.",
                        "VernacExtend",
                        "99ce7e4be80fa02427d0b27f3b94a7aa8ef0cf0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_abs",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros m e H.",
                        "VernacExtend",
                        "c2ddf735ed018afdde6b1492b1675c7da72a8137"
                    ]
                },
                {
                    "command": [
                        "unfold canonic.",
                        "VernacExtend",
                        "6a198835d9b378599c1fa5419c9760cfac4e66cc"
                    ]
                },
                {
                    "command": [
                        "now rewrite F2R_Zabs, canonic_exp_abs.",
                        "VernacExtend",
                        "4e0e47b1ffbfcaba816cbebee7f382ae26ed44f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_0",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "unfold canonic; simpl; unfold canonic_exp.",
                        "VernacExtend",
                        "3cd045d744321b72f0e1ac1163b264f24f0fdc89"
                    ]
                },
                {
                    "command": [
                        "replace (F2R {| Fnum := 0; Fexp := fexp (ln_beta beta 0) |}) with 0%R.",
                        "VernacExtend",
                        "6e09755db3172d081ab6b5c75c7fafa42cbdb684"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl; ring.",
                        "VernacExtend",
                        "f8c00c9c0cf05538647493d6c088dac9492f3d52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_unicity",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros (m1, e1) (m2, e2).",
                        "VernacExtend",
                        "0ebf19b3cdf90ba1cd3e5ced109926fe8715b988"
                    ]
                },
                {
                    "command": [
                        "unfold canonic.",
                        "VernacExtend",
                        "6a198835d9b378599c1fa5419c9760cfac4e66cc"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2 H.",
                        "VernacExtend",
                        "72dac5b298cbfc489f403a08ef6dadbbd39f71cd"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H1.",
                        "VernacExtend",
                        "72668ea55992bff4c6a64774b37a8290e2ed12ee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2 in H1.",
                        "VernacExtend",
                        "8866c762e9c242679de3395f9ee2e4d71a759815"
                    ]
                },
                {
                    "command": [
                        "clear H2.",
                        "VernacExtend",
                        "d86cdda4c02f9faf6d4c6694d967beddb27ce36a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H |- *.",
                        "VernacExtend",
                        "f5f1c03af6393114b7cd8c8ffd1c6f0cae6ffa5a"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun m => Float beta m e2)).",
                        "VernacExtend",
                        "2eaee81b39e57ca9fab8688875a793658904016d"
                    ]
                },
                {
                    "command": [
                        "apply F2R_eq_reg with (1 := H).",
                        "VernacExtend",
                        "1bc3248eacbec8baf5abff7a567bdbb9da9e64f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scaled_mantissa_generic",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 3 ; rewrite Hx.",
                        "VernacExtend",
                        "18ac8f5737f91489baa5bba929775d6fdf665ef0"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
                        "VernacExtend",
                        "d22582b85c489a47adda69f7972f01c491afc3e8"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ztrunc_Z2R.",
                        "VernacExtend",
                        "5d27986c7f3c113e4c1cfe86d8597084c9806942"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scaled_mantissa_mult_bpow",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_l.",
                        "VernacExtend",
                        "d55454cba6848d88d9d82738236a4ed8919238d1"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_1_r.",
                        "VernacExtend",
                        "7e290e72327ec53766aaa3b6504d3f54d3250d15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scaled_mantissa_0",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "apply Rmult_0_l.",
                        "VernacExtend",
                        "9d2fdd56dbced8968cf28714ab54a4daf5852a4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scaled_mantissa_opp",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "rewrite canonic_exp_opp.",
                        "VernacExtend",
                        "4f64bd993701cd658ccc00c4e33911f0305a20f4"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "1b7b97984e6714bb3e8b12a380038dfcfa613a3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scaled_mantissa_abs",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "rewrite canonic_exp_abs, Rabs_mult.",
                        "VernacExtend",
                        "756be3ae9864c5e0c1b9828f1f2a79def60ccbd7"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_eq.",
                        "VernacExtend",
                        "84ed980db60aa71de2fd237885e8f143313c5575"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_opp",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format.",
                        "VernacExtend",
                        "a62257dc9b3d0326e5266d774af361152364eac7"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_opp, canonic_exp_opp.",
                        "VernacExtend",
                        "fdc51b02eb5f867b58e719b5e976571d5682744f"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_opp.",
                        "VernacExtend",
                        "29f2d2fa89b52b72b65faf9ac8af6455bda883a2"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_Zopp.",
                        "VernacExtend",
                        "14dc9704af59104fbc8331cc5f22daa96d394349"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal.",
                        "VernacExtend",
                        "2be51066ac0713afbd2686f67010448cf5cd7ac9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_abs",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format.",
                        "VernacExtend",
                        "a62257dc9b3d0326e5266d774af361152364eac7"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_abs, canonic_exp_abs.",
                        "VernacExtend",
                        "e14a4235a464c4b77b2c50c8f3c871be41db918c"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_abs.",
                        "VernacExtend",
                        "af86a4973a6e0af4135571b318a714a155932fe9"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_Zabs.",
                        "VernacExtend",
                        "66f910e5a29dea24936afff0b12cbc4a00a79405"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal.",
                        "VernacExtend",
                        "2be51066ac0713afbd2686f67010448cf5cd7ac9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_abs_inv",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format, Rabs.",
                        "VernacExtend",
                        "74e38b54a3b396db62e4ed9058596da00ddf3143"
                    ]
                },
                {
                    "command": [
                        "case Rcase_abs ; intros _.",
                        "VernacExtend",
                        "4bc2d44e16eb96839334934b9b42113acf42af5f"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_opp, canonic_exp_opp, Ztrunc_opp.",
                        "VernacExtend",
                        "8fdafc3e6c3cfcbccc90aee1f4cc97abe3c14d12"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive x) at 1.",
                        "VernacExtend",
                        "63447bf08a27f79bf5158c9d9ac857dc78661462"
                    ]
                },
                {
                    "command": [
                        "rewrite H, F2R_Zopp.",
                        "VernacExtend",
                        "d9c6c3319e42363a75498ee8e2c11c5dc8b514da"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_involutive.",
                        "VernacExtend",
                        "5693ee789e165349a2c109e8f1a16d4ccb445cfd"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_exp_fexp",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros x ex Hx.",
                        "VernacExtend",
                        "65e46be335892465f3d9716db11d76ecdaaba19a"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "now rewrite ln_beta_unique with (1 := Hx).",
                        "VernacExtend",
                        "53241dc96ce8f663d19395a52edd0a1aa1c58118"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_exp_fexp_pos",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros x ex Hx.",
                        "VernacExtend",
                        "65e46be335892465f3d9716db11d76ecdaaba19a"
                    ]
                },
                {
                    "command": [
                        "apply canonic_exp_fexp.",
                        "VernacExtend",
                        "ba7969e9a351da992729f2c38274cc63b9ec6221"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := proj1 Hx).",
                        "VernacExtend",
                        "e212c0840714cfa4a152b9f288f8175433a4111d"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mantissa_small_pos",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "intros x ex Hx He.",
                        "VernacExtend",
                        "f4a6b960fe733dc80febaef503e2ee5d5445520f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := proj1 Hx).",
                        "VernacExtend",
                        "11ab885f736bece1573f763b584891184f0d5f44"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_r with (bpow (fexp ex)).",
                        "VernacExtend",
                        "db8549e322c71beef9547ac9d0caeb26551bab81"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_l.",
                        "VernacExtend",
                        "d55454cba6848d88d9d82738236a4ed8919238d1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r, Rmult_1_l.",
                        "VernacExtend",
                        "22e5cd8f03285244e204bff59daa3e77f52499a7"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := proj2 Hx).",
                        "VernacExtend",
                        "e7ca6c9a098514e50bc26584178aaf1bac3efdda"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_le.",
                        "VernacExtend",
                        "b07fc0e6cc6b5e33c8f24f56e53ed07e1d95cb75"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scaled_mantissa_small",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "intros x ex Ex He.",
                        "VernacExtend",
                        "4c7ef9e0299d4dd0754c7ab4bc0a662251c620a4"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec x 0) as [Zx|Zx].",
                        "VernacExtend",
                        "b0fb74435c9a75d48c2d5b5e52e145e2f5a5444e"
                    ]
                },
                {
                    "command": [
                        "rewrite Zx, scaled_mantissa_0, Rabs_R0.",
                        "VernacExtend",
                        "3ffa3ce99b50a2fef614b183c4f70ebe08dca100"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 1).",
                        "VernacExtend",
                        "8881bbe7f156e41a8b754c4f89238c660a066b32"
                    ]
                },
                {
                    "command": [
                        "rewrite <- scaled_mantissa_abs.",
                        "VernacExtend",
                        "417525f3e0adb8d32b49deb62d8f5245c0bbd450"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "rewrite canonic_exp_abs.",
                        "VernacExtend",
                        "7f07af68b3be03eb10c9c1245d80b26e09c99fdd"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex', Ex').",
                        "VernacExtend",
                        "3cadd4dbab6281b527d128bb2e7badc443238584"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "specialize (Ex' Zx).",
                        "VernacExtend",
                        "b9807764ec8acb326578e567497fd976bfa976e9"
                    ]
                },
                {
                    "command": [
                        "apply (mantissa_small_pos _ _ Ex').",
                        "VernacExtend",
                        "0f81cef055d4e5db3b0e1cf9bf0fed8dce981175"
                    ]
                },
                {
                    "command": [
                        "assert (ex' <= fexp ex)%Z.",
                        "VernacExtend",
                        "85d56a8cadf3b5f077fc020908f92dbf4203228e"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (2 := He).",
                        "VernacExtend",
                        "87c6088bd035658f08d07ef7b93834d63120738c"
                    ]
                },
                {
                    "command": [
                        "apply bpow_lt_bpow with beta.",
                        "VernacExtend",
                        "870ce5ea9072298b4170c8019ad8cc2184ae063e"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_lt_trans with (2 := Ex).",
                        "VernacExtend",
                        "cc36ddb65120fec8de47d2ee824ed9e6dcb411c7"
                    ]
                },
                {
                    "command": [
                        "now rewrite (proj2 (proj2 (valid_exp _) He)).",
                        "VernacExtend",
                        "d30e931ed5e6cc589bd0d1751691ac48e67b4331"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abs_scaled_mantissa_lt_bpow",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec x 0) as [Zx|Zx].",
                        "VernacExtend",
                        "b0fb74435c9a75d48c2d5b5e52e145e2f5a5444e"
                    ]
                },
                {
                    "command": [
                        "rewrite Zx, scaled_mantissa_0, Rabs_R0.",
                        "VernacExtend",
                        "3ffa3ce99b50a2fef614b183c4f70ebe08dca100"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := bpow_ln_beta_gt beta _).",
                        "VernacExtend",
                        "d0a2d187c4f0eecd7c965f123bf6426ae3500792"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "rewrite ln_beta_mult_bpow with (1 := Zx).",
                        "VernacExtend",
                        "56462ba2808abd7c59d71ac73627c02f3d25ac62"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_generic_gt",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "intros x Zx Gx.",
                        "VernacExtend",
                        "b2a2a5e49b5333c0c08d5720b0df0ec2be3234d1"
                    ]
                },
                {
                    "command": [
                        "apply Znot_ge_lt.",
                        "VernacExtend",
                        "3a41d2310b70caaa796f877eb6b440290e0b2081"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex,Ex) ; simpl.",
                        "VernacExtend",
                        "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
                    ]
                },
                {
                    "command": [
                        "specialize (Ex Zx).",
                        "VernacExtend",
                        "60a98592e41f8e51b8b8f13d2a29bc7a3ff55447"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Zge_le in H.",
                        "VernacExtend",
                        "e747d57c3f2d0614e47a10ee3bdde21daafca75d"
                    ]
                },
                {
                    "command": [
                        "generalize (scaled_mantissa_small x ex (proj2 Ex) H).",
                        "VernacExtend",
                        "32e84b3581debc2a535392c25d79b629d5b7d883"
                    ]
                },
                {
                    "command": [
                        "contradict Zx.",
                        "VernacExtend",
                        "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
                    ]
                },
                {
                    "command": [
                        "rewrite Gx.",
                        "VernacExtend",
                        "a1cd2da725c6af37ba6729d578a073c7bc93aa78"
                    ]
                },
                {
                    "command": [
                        "replace (Ztrunc (scaled_mantissa x)) with Z0.",
                        "VernacExtend",
                        "49f26ac3c56ca27f88932dd57a99b1ee0080111c"
                    ]
                },
                {
                    "command": [
                        "apply F2R_0.",
                        "VernacExtend",
                        "196be1ac823d0297c8d480b5085663e7d015d281"
                    ]
                },
                {
                    "command": [
                        "cut (Zabs (Ztrunc (scaled_mantissa x)) < 1)%Z.",
                        "VernacExtend",
                        "e15be877a064ffd324f681b1e1e1f3eebfedff79"
                    ]
                },
                {
                    "command": [
                        "clear ; zify ; omega.",
                        "VernacExtend",
                        "a6e41cc90e30259e80ee8e4f58a89b520b38df88"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z2R.",
                        "VernacExtend",
                        "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_abs.",
                        "VernacExtend",
                        "cf58612f915d64d0c2ad568d55a990877f8a2b6d"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- scaled_mantissa_generic.",
                        "VernacExtend",
                        "6846fe079807807da745ecc24e04c3d726c53364"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mantissa_DN_small_pos",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "intros x ex Hx He.",
                        "VernacExtend",
                        "f4a6b960fe733dc80febaef503e2ee5d5445520f"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (H := mantissa_small_pos x ex Hx He).",
                        "VernacExtend",
                        "ca5a1022d048f129eb12a538e378b487b5ba0ddf"
                    ]
                },
                {
                    "command": [
                        "split ; try apply Rlt_le ; apply H.",
                        "VernacExtend",
                        "07590b5b23bfe20ab4d400edc80b1f06783de910"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mantissa_UP_small_pos",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intros x ex Hx He.",
                        "VernacExtend",
                        "f4a6b960fe733dc80febaef503e2ee5d5445520f"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_imp.",
                        "VernacExtend",
                        "c9c91122777c8963f3fcab430c53aa15ef0b2dba"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (H := mantissa_small_pos x ex Hx He).",
                        "VernacExtend",
                        "ca5a1022d048f129eb12a538e378b487b5ba0ddf"
                    ]
                },
                {
                    "command": [
                        "split ; try apply Rlt_le ; apply H.",
                        "VernacExtend",
                        "07590b5b23bfe20ab4d400edc80b1f06783de910"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_discrete",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intros x m e (Hx,Hx2) Hf.",
                        "VernacExtend",
                        "00bcf4549d4bcbcb2e61294fe5387d8ea40512b8"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le with (1 := Hx2).",
                        "VernacExtend",
                        "59228d16c772c187ab7bc87fa8bbefaf153b8253"
                    ]
                },
                {
                    "command": [
                        "clear Hx2.",
                        "VernacExtend",
                        "cb01c0195c302d6420851e8a8b32c1dbbee43ee0"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf.",
                        "VernacExtend",
                        "4b4ea75b42501c41b9cce49efd492d21013c9685"
                    ]
                },
                {
                    "command": [
                        "fold e.",
                        "VernacExtend",
                        "d48ae3baca33b9353dad3c6792818723063df99e"
                    ]
                },
                {
                    "command": [
                        "apply F2R_le_compat.",
                        "VernacExtend",
                        "8bba15ecfc5793bb41769739c12cc1736c6b0ba6"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_succ.",
                        "VernacExtend",
                        "070de595889f014f0a173659377506422eb25080"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z2R.",
                        "VernacExtend",
                        "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- scaled_mantissa_generic with (1 := Hf).",
                        "VernacExtend",
                        "b92060b1f721617669ea15eddb3cb27a2cda5839"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_r with (bpow e).",
                        "VernacExtend",
                        "b26ff243a59fac18787249ed2716e0161bf7f5f1"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "now rewrite scaled_mantissa_mult_bpow.",
                        "VernacExtend",
                        "fab99b6471eeaf42de834b44e57b617fc8d6582a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_canonic",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros (m, e) Hf.",
                        "VernacExtend",
                        "60db62f7e6e69168887adadb8fb175cb080bc29e"
                    ]
                },
                {
                    "command": [
                        "unfold canonic in Hf.",
                        "VernacExtend",
                        "0e098a3fffcfa13019483a0cf2ec9b8e5279595c"
                    ]
                },
                {
                    "command": [
                        "simpl in Hf.",
                        "VernacExtend",
                        "fcb5032bdc02ce318beb038babaea61e5194fe85"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format, scaled_mantissa.",
                        "VernacExtend",
                        "5dd3f7c8b737397d5f7a50337d30185eb9353de9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hf.",
                        "VernacExtend",
                        "c2a104a968e91e1dadc20b044f294fa371a758e8"
                    ]
                },
                {
                    "command": [
                        "apply F2R_eq_compat.",
                        "VernacExtend",
                        "bc1e4623b2196fb23776bd02c10b33de36f7515b"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
                        "VernacExtend",
                        "d22582b85c489a47adda69f7972f01c491afc3e8"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ztrunc_Z2R.",
                        "VernacExtend",
                        "5d27986c7f3c113e4c1cfe86d8597084c9806942"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_ge_bpow",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "intros emin Emin x Hx Fx.",
                        "VernacExtend",
                        "cb31cb28fda62fbf3456c9b0bd0968b07925e167"
                    ]
                },
                {
                    "command": [
                        "rewrite Fx.",
                        "VernacExtend",
                        "6d5fef6b9bb5c0abc3b57cf7001ef10fc8718bc8"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow (fexp (ln_beta beta x))).",
                        "VernacExtend",
                        "549e1e00fffd18e936d2389b6473c04ff103cf85"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_le.",
                        "VernacExtend",
                        "b07fc0e6cc6b5e33c8f24f56e53ed07e1d95cb75"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le_F2R.",
                        "VernacExtend",
                        "803e6795d722fe9c018879dc40129c1bb37d679b"
                    ]
                },
                {
                    "command": [
                        "apply F2R_gt_0_reg with beta (canonic_exp x).",
                        "VernacExtend",
                        "92f7f844fba63a194ff66e871b68d084c8d2af1d"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Fx.",
                        "VernacExtend",
                        "c7a603b21e388817cbad5f1ef8746b776a29bf93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abs_lt_bpow_prec",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "intros prec Hp x.",
                        "VernacExtend",
                        "fc07eb3bb1448e2e0197524ae57d7f4e0d176008"
                    ]
                },
                {
                    "command": [
                        "case (Req_dec x 0); intros Hxz.",
                        "VernacExtend",
                        "8dbb02233d5c2ca1ff35d374351481f35e5756b8"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxz, Rabs_R0.",
                        "VernacExtend",
                        "53c678a9ae2e3dffd464f541963b476f897deed2"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex,Ex) ; simpl.",
                        "VernacExtend",
                        "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
                    ]
                },
                {
                    "command": [
                        "specialize (Ex Hxz).",
                        "VernacExtend",
                        "a66c597fb31b2ec10f7d7fa5e05f8a24b55a11f9"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := proj2 Ex).",
                        "VernacExtend",
                        "207c5221aac8c478d3b1d3f25a3245f046a0073f"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "specialize (Hp ex).",
                        "VernacExtend",
                        "fffc787054484b691878e5f0d6b359778c3df28a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_bpow_inv",
            "line_nb": 343,
            "steps": [
                {
                    "command": [
                        "intros e He.",
                        "VernacExtend",
                        "933455ac9e50417dcc771605432cd330296b74b2"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow_inv' in He.",
                        "VernacExtend",
                        "5420dc43cda76f7b8e4ebf109bdb7a4f30899ebf"
                    ]
                },
                {
                    "command": [
                        "assert (H := valid_exp_large' (e + 1) e).",
                        "VernacExtend",
                        "dddc5e75bc9f0bf0f8ea011be4ee139b4e7a051b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zrnd_DN_or_UP",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Zle_or_lt (rnd x) (Zfloor x)) as [Hx|Hx].",
                        "VernacExtend",
                        "e1e074d70143d002f85aa45650d15c2e9675d51c"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply Zle_antisym with (1 := Hx).",
                        "VernacExtend",
                        "e6259be27beffe1d6eea84d2bf71e90fa2f1ab5f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zrnd_Z2R (Zfloor x)).",
                        "VernacExtend",
                        "381872b16c5b104ded227f521cb3e2e20506232b"
                    ]
                },
                {
                    "command": [
                        "apply Zrnd_le.",
                        "VernacExtend",
                        "40a015e9273d06e9e9e1204712ee76e014c94f7e"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply Zle_antisym.",
                        "VernacExtend",
                        "d5fb169d90b6dbda1fca926c28e78732e286a418"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zrnd_Z2R (Zceil x)).",
                        "VernacExtend",
                        "5a4f4ae80aa7270fbe259786fcf64a9793faf2bd"
                    ]
                },
                {
                    "command": [
                        "apply Zrnd_le.",
                        "VernacExtend",
                        "40a015e9273d06e9e9e1204712ee76e014c94f7e"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_ub.",
                        "VernacExtend",
                        "31edc0840e36e6b04e75719515ba742855146abc"
                    ]
                },
                {
                    "command": [
                        "rewrite Zceil_floor_neq.",
                        "VernacExtend",
                        "b4fc727910b2a0e4293920fe2596a742e2d62876"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H in Hx.",
                        "VernacExtend",
                        "8e6ca116b22f8bbc7720d3ba22c209f418c446a0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zfloor_Z2R, Zrnd_Z2R in Hx.",
                        "VernacExtend",
                        "90e4f8c8c132a3244ae599e80e232aa48af649e4"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_irrefl with (1 := Hx).",
                        "VernacExtend",
                        "d6d804c452f4ea0d3e7db2e1b9b79b126925374f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zrnd_ZR_or_AW",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold Ztrunc, Zaway.",
                        "VernacExtend",
                        "88bc38e27882fc0af4898612d910a19f5da49d23"
                    ]
                },
                {
                    "command": [
                        "destruct (Zrnd_DN_or_UP x) as [Hx|Hx] ; case Rlt_bool.",
                        "VernacExtend",
                        "2a9b48e877ffce2c8eeab9d03ad578b05e86d78b"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_bounded_large_pos",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "intros x ex He Hx.",
                        "VernacExtend",
                        "f4ed1e648f5ebef2364bc30e257ee29cc7ebf2b2"
                    ]
                },
                {
                    "command": [
                        "unfold round, scaled_mantissa.",
                        "VernacExtend",
                        "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
                    ]
                },
                {
                    "command": [
                        "rewrite (canonic_exp_fexp_pos _ _ Hx).",
                        "VernacExtend",
                        "ee65f3ae8db9cb4b5a103ddae66a6fcf8ef197d6"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (Zrnd_DN_or_UP (x * bpow (- fexp ex))) as [Hr|Hr] ; rewrite Hr.",
                        "VernacExtend",
                        "8d9b0bb063c9aecb8fbf940dee5ff4159b3e2ca3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "replace (ex - 1)%Z with (ex - 1 + - fexp ex + fexp ex)%Z by ring.",
                        "VernacExtend",
                        "4b0da0edc651a092e8e63cb46f449a24eca84ac6"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "assert (Hf: Z2R (Zpower beta (ex - 1 - fexp ex)) = bpow (ex - 1 + - fexp ex)).",
                        "VernacExtend",
                        "56bd474991e12d74b3f21cf79872bc2c01097450"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_Zpower.",
                        "VernacExtend",
                        "d1db08cb7fff330669608b0fd9f379850ccd3950"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hf.",
                        "VernacExtend",
                        "c2a104a968e91e1dadc20b044f294fa371a758e8"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lub.",
                        "VernacExtend",
                        "2a3f8e59d303f192a648e4eef260195d5e8b9977"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf.",
                        "VernacExtend",
                        "4b4ea75b42501c41b9cce49efd492d21013c9685"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply Hx.",
                        "VernacExtend",
                        "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rlt_le _ _ (proj2 Hx)).",
                        "VernacExtend",
                        "0de3473cf8cbc6afc73cfcf2a263da6561bf54f6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_r with (bpow (- fexp ex)).",
                        "VernacExtend",
                        "c72e167d9625d241bb861c4e5279abe75a5a35f9"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
                        "VernacExtend",
                        "d22582b85c489a47adda69f7972f01c491afc3e8"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := proj1 Hx).",
                        "VernacExtend",
                        "a51646dc10c68deeda041c21a02bf48aff082643"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_r with (bpow (- fexp ex)).",
                        "VernacExtend",
                        "c72e167d9625d241bb861c4e5279abe75a5a35f9"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
                        "VernacExtend",
                        "d22582b85c489a47adda69f7972f01c491afc3e8"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_ub.",
                        "VernacExtend",
                        "31edc0840e36e6b04e75719515ba742855146abc"
                    ]
                },
                {
                    "command": [
                        "pattern ex at 3 ; replace ex with (ex - fexp ex + fexp ex)%Z by ring.",
                        "VernacExtend",
                        "4125660b623c9b411fd6bdcb57ee779f4b4a20a9"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "assert (Hf: Z2R (Zpower beta (ex - fexp ex)) = bpow (ex - fexp ex)).",
                        "VernacExtend",
                        "3529dd49c015b4394af20397243d97eb8fe97c92"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_Zpower.",
                        "VernacExtend",
                        "d1db08cb7fff330669608b0fd9f379850ccd3950"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hf.",
                        "VernacExtend",
                        "c2a104a968e91e1dadc20b044f294fa371a758e8"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_glb.",
                        "VernacExtend",
                        "524f59be3c7aaf779be7bc5579e0b8cbb0c3a327"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf.",
                        "VernacExtend",
                        "4b4ea75b42501c41b9cce49efd492d21013c9685"
                    ]
                },
                {
                    "command": [
                        "unfold Zminus.",
                        "VernacExtend",
                        "7085d4231409167767072da1bd24eb73ce98a683"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply Hx.",
                        "VernacExtend",
                        "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_bounded_small_pos",
            "line_nb": 435,
            "steps": [
                {
                    "command": [
                        "intros x ex He Hx.",
                        "VernacExtend",
                        "f4ed1e648f5ebef2364bc30e257ee29cc7ebf2b2"
                    ]
                },
                {
                    "command": [
                        "unfold round, scaled_mantissa.",
                        "VernacExtend",
                        "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
                    ]
                },
                {
                    "command": [
                        "rewrite (canonic_exp_fexp_pos _ _ Hx).",
                        "VernacExtend",
                        "ee65f3ae8db9cb4b5a103ddae66a6fcf8ef197d6"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (Zrnd_DN_or_UP (x * bpow (-fexp ex))) as [Hr|Hr] ; rewrite Hr.",
                        "VernacExtend",
                        "8d9b0bb063c9aecb8fbf940dee5ff4159b3e2ca3"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_0_compat_r.",
                        "VernacExtend",
                        "bcda6698aeadf456bdd40487b042246f6ec3a43b"
                    ]
                },
                {
                    "command": [
                        "apply (@f_equal _ _ Z2R _ Z0).",
                        "VernacExtend",
                        "b921fe92c42948603208e5361e5c777462b542fe"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "refine (let H := _ in conj (Rlt_le _ _ (proj1 H)) (proj2 H)).",
                        "VernacExtend",
                        "f819ca306f25c7de174b8926d49d4ddcd2cb9ccc"
                    ]
                },
                {
                    "command": [
                        "now apply mantissa_small_pos.",
                        "VernacExtend",
                        "4eb8b19184144728711c38cf47e95ca3b0fc1bc6"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "pattern (bpow (fexp ex)) at 2 ; rewrite <- Rmult_1_l.",
                        "VernacExtend",
                        "74b89f2a7a1f65ee88a3c74cb561284a1c20d727"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun m => (m * bpow (fexp ex))%R)).",
                        "VernacExtend",
                        "0997879cbe56879faf0d550506b40b5d7cecde4e"
                    ]
                },
                {
                    "command": [
                        "apply (@f_equal _ _ Z2R _ 1%Z).",
                        "VernacExtend",
                        "1cf41713f4220393a22d9c2279d748ffefd2bc2d"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_imp.",
                        "VernacExtend",
                        "c9c91122777c8963f3fcab430c53aa15ef0b2dba"
                    ]
                },
                {
                    "command": [
                        "refine (let H := _ in conj (proj1 H) (Rlt_le _ _ (proj2 H))).",
                        "VernacExtend",
                        "d531ed838df6c170cbec0087a62398ced5d12ec7"
                    ]
                },
                {
                    "command": [
                        "now apply mantissa_small_pos.",
                        "VernacExtend",
                        "4eb8b19184144728711c38cf47e95ca3b0fc1bc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_generic",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_generic with (1 := Hx).",
                        "VernacExtend",
                        "7c652371b1a9ceab9a1a93659bba501c3252ad7a"
                    ]
                },
                {
                    "command": [
                        "rewrite Zrnd_Z2R.",
                        "VernacExtend",
                        "ba0187195ffbc1f2b678c968899f2bf96cb7a871"
                    ]
                },
                {
                    "command": [
                        "now apply sym_eq.",
                        "VernacExtend",
                        "fef6d39327ad6dbcb8bd592a66f35c86d0ac26ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_0",
            "line_nb": 507,
            "steps": [
                {
                    "command": [
                        "unfold round, scaled_mantissa.",
                        "VernacExtend",
                        "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l.",
                        "VernacExtend",
                        "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Zrnd_Z2R.",
                        "VernacExtend",
                        "ba0187195ffbc1f2b678c968899f2bf96cb7a871"
                    ]
                },
                {
                    "command": [
                        "apply F2R_0.",
                        "VernacExtend",
                        "196be1ac823d0297c8d480b5085663e7d015d281"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp_small_round_0_pos",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "intros x ex H H1.",
                        "VernacExtend",
                        "b1ed015106187534858c93af016ddceb65ca23bf"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt ex (fexp ex)); trivial; intros V.",
                        "VernacExtend",
                        "e2be575c3b48e5ef97f39068a7965c8ba68d1172"
                    ]
                },
                {
                    "command": [
                        "contradict H1.",
                        "VernacExtend",
                        "0b63c4e4adfc14aec173e00d9e5760db696ca49f"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq.",
                        "VernacExtend",
                        "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (bpow (ex-1)).",
                        "VernacExtend",
                        "64eeedcde39633794562643475dd560dbfcdbb37"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply (round_bounded_large_pos); assumption.",
                        "VernacExtend",
                        "f351f4b957d5a999ce0d9364550d53167df283cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_ext",
            "line_nb": 547,
            "steps": [
                {
                    "command": [
                        "intros rnd1 rnd2 Hext x.",
                        "VernacExtend",
                        "8f0502453a8fa1d243de3d7633f8f9394ad707d4"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hext.",
                        "VernacExtend",
                        "a2af8ffb347fdafc7de3ba33980d13ffd18f2186"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_opp",
            "line_nb": 570,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "rewrite <- F2R_Zopp, canonic_exp_opp, scaled_mantissa_opp.",
                        "VernacExtend",
                        "efc606980b53846bc9c3e225b13af61a2beac071"
                    ]
                },
                {
                    "command": [
                        "apply F2R_eq_compat.",
                        "VernacExtend",
                        "bc1e4623b2196fb23776bd02c10b33de36f7515b"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "exact (Zopp_involutive _).",
                        "VernacExtend",
                        "67190356a20bd290910ca088397e7b002de352b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_rnd_DN",
            "line_nb": 579,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_le.",
                        "VernacExtend",
                        "ccfc8995275381bc98e1b4633a968d9d065e452e"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_Z2R.",
                        "VernacExtend",
                        "58df2bc8985dad2ec76c534580062785230749a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_rnd_UP",
            "line_nb": 584,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_le.",
                        "VernacExtend",
                        "2acca68326ad50630b9557e44600b964e12a3a53"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_Z2R.",
                        "VernacExtend",
                        "c8141d4497dc8abfa72f7f0897c24c389f131f72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_rnd_ZR",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Ztrunc_le.",
                        "VernacExtend",
                        "8c0d793a2d668d46db50d35438a71adfa58ed3bd"
                    ]
                },
                {
                    "command": [
                        "apply Ztrunc_Z2R.",
                        "VernacExtend",
                        "72f94e4e634180fe6d572f9481360b75ad36203f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_rnd_AW",
            "line_nb": 594,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Zaway_le.",
                        "VernacExtend",
                        "80d068316b39031ef57062f6d207be90f23c903b"
                    ]
                },
                {
                    "command": [
                        "apply Zaway_Z2R.",
                        "VernacExtend",
                        "3cd923a597f69c246a5ebe35e00fe198f0d82ac6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_DN_or_UP",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "destruct (Zrnd_DN_or_UP rnd (scaled_mantissa x)) as [Hx|Hx].",
                        "VernacExtend",
                        "6ceaaf0bb002f63e6f10ab596553a48b46941ec8"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hx.",
                        "VernacExtend",
                        "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hx.",
                        "VernacExtend",
                        "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_ZR_or_AW",
            "line_nb": 611,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "destruct (Zrnd_ZR_or_AW rnd (scaled_mantissa x)) as [Hx|Hx].",
                        "VernacExtend",
                        "0f6afbd78ed18fec7aca14561cdbbf5eb334599e"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hx.",
                        "VernacExtend",
                        "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hx.",
                        "VernacExtend",
                        "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_ge_generic",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "intros x y Hx Hxy.",
                        "VernacExtend",
                        "e2fa962759626d3d2c242c0e1b9e884dd173573f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (round_generic rnd x Hx).",
                        "VernacExtend",
                        "a72d6ef60a337ded70a7307a33e42ff1a45c9d42"
                    ]
                },
                {
                    "command": [
                        "now apply round_le.",
                        "VernacExtend",
                        "7cf7726fbdb7bf862a84c06ac38f2798bfe95ce5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_le_generic",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "intros x y Hy Hxy.",
                        "VernacExtend",
                        "47c10491d158605cf6c4835f87fe490df0a6b352"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (round_generic rnd y Hy).",
                        "VernacExtend",
                        "56b63299906f7c229c465db087941dd6caa6892a"
                    ]
                },
                {
                    "command": [
                        "now apply round_le.",
                        "VernacExtend",
                        "7cf7726fbdb7bf862a84c06ac38f2798bfe95ce5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp_small_round_0",
            "line_nb": 704,
            "steps": [
                {
                    "command": [
                        "intros rnd Hr x ex H1 H2.",
                        "VernacExtend",
                        "f35d096711435bb78effd20f345da37962e9a193"
                    ]
                },
                {
                    "command": [
                        "generalize Rabs_R0.",
                        "VernacExtend",
                        "ad63c5627b4815e0678d618d58be544817ef47dc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2 at 1.",
                        "VernacExtend",
                        "8af86740c11b0dcecbe8e1a1065c7341916b4e72"
                    ]
                },
                {
                    "command": [
                        "apply (round_abs_abs (fun t rt => forall (ex : Z), (bpow (ex - 1) <= t < bpow ex)%R -> rt = 0%R -> (ex <= fexp ex)%Z)); trivial.",
                        "VernacExtend",
                        "107362b22ccf4c376a27d7f1e48867602ebc7d69"
                    ]
                },
                {
                    "command": [
                        "clear; intros rnd Hr x Hx.",
                        "VernacExtend",
                        "6eca89658adc2ae1f42337ca6181b260cbf3b778"
                    ]
                },
                {
                    "command": [
                        "now apply exp_small_round_0_pos.",
                        "VernacExtend",
                        "23faa6529da55f0f10cf971b6869b45cd853b0c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_DN_opp",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_opp.",
                        "VernacExtend",
                        "88c0a15c728ca1f5747eb5ebfaddf2989585bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- F2R_Zopp.",
                        "VernacExtend",
                        "fee744a8cf0293b57e4bea5c81b22afef33baeb7"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil.",
                        "VernacExtend",
                        "f8d0a58a84f92c1de4ab8daa30b020e932099600"
                    ]
                },
                {
                    "command": [
                        "rewrite Zopp_involutive.",
                        "VernacExtend",
                        "7b00d63dc772416460dc62c59515875a36dfefdb"
                    ]
                },
                {
                    "command": [
                        "now rewrite canonic_exp_opp.",
                        "VernacExtend",
                        "871b361b04a20878ff38a4a4b058b4dff94d5b28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_UP_opp",
            "line_nb": 741,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_opp.",
                        "VernacExtend",
                        "88c0a15c728ca1f5747eb5ebfaddf2989585bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- F2R_Zopp.",
                        "VernacExtend",
                        "fee744a8cf0293b57e4bea5c81b22afef33baeb7"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil.",
                        "VernacExtend",
                        "f8d0a58a84f92c1de4ab8daa30b020e932099600"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive.",
                        "VernacExtend",
                        "ba0ab440a50f656f08837503f0228b68c9acdf87"
                    ]
                },
                {
                    "command": [
                        "now rewrite canonic_exp_opp.",
                        "VernacExtend",
                        "871b361b04a20878ff38a4a4b058b4dff94d5b28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_ZR_opp",
            "line_nb": 750,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_opp, canonic_exp_opp, Ztrunc_opp.",
                        "VernacExtend",
                        "8fdafc3e6c3cfcbccc90aee1f4cc97abe3c14d12"
                    ]
                },
                {
                    "command": [
                        "apply F2R_Zopp.",
                        "VernacExtend",
                        "05f51edf1e5f6f3fae826b3dea7066ced4866243"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_AW_opp",
            "line_nb": 772,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_opp, canonic_exp_opp, Zaway_opp.",
                        "VernacExtend",
                        "9851aca0825f2d0e2a084934d1f036b22e46e4c3"
                    ]
                },
                {
                    "command": [
                        "apply F2R_Zopp.",
                        "VernacExtend",
                        "05f51edf1e5f6f3fae826b3dea7066ced4866243"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_ZR_pos",
            "line_nb": 794,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold round, Ztrunc.",
                        "VernacExtend",
                        "c987915eae0720e2eaca38e67d80224e366ccb40"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec.",
                        "VernacExtend",
                        "34a5734790264c820e9f5a43f0e8af9f8a4e3946"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_not_le with (1 := H).",
                        "VernacExtend",
                        "80f2042ee5f87401d358bde34a0c50462ce24bcd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
                        "VernacExtend",
                        "f4e119904c3e584e3697f8c5aadc435383c7d312"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r with (2 := Hx).",
                        "VernacExtend",
                        "d3e8a2b01962b11815ce4b0ddeaa28edd291f5a0"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_ZR_neg",
            "line_nb": 805,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold round, Ztrunc.",
                        "VernacExtend",
                        "c987915eae0720e2eaca38e67d80224e366ccb40"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec.",
                        "VernacExtend",
                        "34a5734790264c820e9f5a43f0e8af9f8a4e3946"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "intros [H|H].",
                        "VernacExtend",
                        "76bd49ae65fcff8dd1f96fe0caeb50b38245e5bf"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_not_le with (1 := H).",
                        "VernacExtend",
                        "80f2042ee5f87401d358bde34a0c50462ce24bcd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
                        "VernacExtend",
                        "f4e119904c3e584e3697f8c5aadc435383c7d312"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r with (2 := Hx).",
                        "VernacExtend",
                        "d3e8a2b01962b11815ce4b0ddeaa28edd291f5a0"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zfloor_Z2R, Zceil_Z2R.",
                        "VernacExtend",
                        "5850ebedc6cd231f51030c10d8fa7959211dbbed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_AW_pos",
            "line_nb": 819,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold round, Zaway.",
                        "VernacExtend",
                        "362493088321d7b9a789daeebdb784f119004418"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec.",
                        "VernacExtend",
                        "34a5734790264c820e9f5a43f0e8af9f8a4e3946"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_not_le with (1 := H).",
                        "VernacExtend",
                        "80f2042ee5f87401d358bde34a0c50462ce24bcd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
                        "VernacExtend",
                        "f4e119904c3e584e3697f8c5aadc435383c7d312"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r with (2 := Hx).",
                        "VernacExtend",
                        "d3e8a2b01962b11815ce4b0ddeaa28edd291f5a0"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_AW_neg",
            "line_nb": 830,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold round, Zaway.",
                        "VernacExtend",
                        "362493088321d7b9a789daeebdb784f119004418"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec.",
                        "VernacExtend",
                        "34a5734790264c820e9f5a43f0e8af9f8a4e3946"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "intros [H|H].",
                        "VernacExtend",
                        "76bd49ae65fcff8dd1f96fe0caeb50b38245e5bf"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_not_le with (1 := H).",
                        "VernacExtend",
                        "80f2042ee5f87401d358bde34a0c50462ce24bcd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
                        "VernacExtend",
                        "f4e119904c3e584e3697f8c5aadc435383c7d312"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r with (2 := Hx).",
                        "VernacExtend",
                        "d3e8a2b01962b11815ce4b0ddeaa28edd291f5a0"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zfloor_Z2R, Zceil_Z2R.",
                        "VernacExtend",
                        "5850ebedc6cd231f51030c10d8fa7959211dbbed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_UP_pt",
            "line_nb": 886,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive x).",
                        "VernacExtend",
                        "1908e4ee868b5f81dd7393a2a516c6e4756cc5e4"
                    ]
                },
                {
                    "command": [
                        "rewrite round_UP_opp.",
                        "VernacExtend",
                        "03e75cb24a175a63b28b30827f2b54e8caefcd5a"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_DN_UP_pt_sym.",
                        "VernacExtend",
                        "487fc036b78221200e1f0d6188a0ee96b77eabca"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_opp.",
                        "VernacExtend",
                        "62be59b59957b39ddc7a6a91ae10b7eda813132a"
                    ]
                },
                {
                    "command": [
                        "apply round_DN_pt.",
                        "VernacExtend",
                        "5f4c4f54107563eb46e1766fa01338b4207ef35d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_ZR_pt",
            "line_nb": 894,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "split ; intros Hx.",
                        "VernacExtend",
                        "88a3b5416993d7056bd31ff8df3f89e9abe0ada0"
                    ]
                },
                {
                    "command": [
                        "rewrite round_ZR_pos with (1 := Hx).",
                        "VernacExtend",
                        "d2945f743cef756457c7552be044bf401da5a20e"
                    ]
                },
                {
                    "command": [
                        "apply round_DN_pt.",
                        "VernacExtend",
                        "5f4c4f54107563eb46e1766fa01338b4207ef35d"
                    ]
                },
                {
                    "command": [
                        "rewrite round_ZR_neg with (1 := Hx).",
                        "VernacExtend",
                        "6872ded98b8d3ce19be2669ac579fab74bb55845"
                    ]
                },
                {
                    "command": [
                        "apply round_UP_pt.",
                        "VernacExtend",
                        "949fc15c9e78aa5120a8e381c4848e031dfcc7e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_DN_small_pos",
            "line_nb": 902,
            "steps": [
                {
                    "command": [
                        "intros x ex Hx He.",
                        "VernacExtend",
                        "f4a6b960fe733dc80febaef503e2ee5d5445520f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (F2R_0 beta (canonic_exp x)).",
                        "VernacExtend",
                        "43c576fcfd86b70d48a5854a9f2c3c6b125bf799"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mantissa_DN_small_pos with (1 := Hx) (2 := He).",
                        "VernacExtend",
                        "10b434957e04f4d48696aee39a22669460984beb"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- canonic_exp_fexp_pos with (1 := Hx).",
                        "VernacExtend",
                        "f089241daa222ef870a869f66cceddf32063c742"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_UP_small_pos",
            "line_nb": 929,
            "steps": [
                {
                    "command": [
                        "intros x ex Hx He.",
                        "VernacExtend",
                        "f4a6b960fe733dc80febaef503e2ee5d5445520f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- F2R_bpow.",
                        "VernacExtend",
                        "29562ae2f86921a1e7081119c136279f93ff5e77"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mantissa_UP_small_pos with (1 := Hx) (2 := He).",
                        "VernacExtend",
                        "4a4c38270381f1ed1b7732841d690c5fc96faf7b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- canonic_exp_fexp_pos with (1 := Hx).",
                        "VernacExtend",
                        "f089241daa222ef870a869f66cceddf32063c742"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_DN",
            "line_nb": 1020,
            "steps": [
                {
                    "command": [
                        "intros x Hd.",
                        "VernacExtend",
                        "a8acddfe5d9185868a2f31ec7fb3093a3fbeb577"
                    ]
                },
                {
                    "command": [
                        "assert (0 < x)%R.",
                        "VernacExtend",
                        "01ae35bbcdd5b574013104fce93b8ba46eef7cbb"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hd).",
                        "VernacExtend",
                        "bfb671d85a7568efae3150ee68286194fe9314db"
                    ]
                },
                {
                    "command": [
                        "apply round_DN_pt.",
                        "VernacExtend",
                        "5f4c4f54107563eb46e1766fa01338b4207ef35d"
                    ]
                },
                {
                    "command": [
                        "revert Hd.",
                        "VernacExtend",
                        "85ef60cf8eeaa01299993ce0d6b8b34e031fcc38"
                    ]
                },
                {
                    "command": [
                        "rewrite <- round_ZR_pos.",
                        "VernacExtend",
                        "c2484ea5501bffec75126367aa5b23507d4ae573"
                    ]
                },
                {
                    "command": [
                        "intros Hd.",
                        "VernacExtend",
                        "837784d92d66976ddf3817e677843ebc2a58d8dc"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_round_ZR.",
                        "VernacExtend",
                        "8e2a7e2de35352ea8bac57d8e80376d698e18984"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_exp_DN",
            "line_nb": 1032,
            "steps": [
                {
                    "command": [
                        "intros x Hd.",
                        "VernacExtend",
                        "a8acddfe5d9185868a2f31ec7fb3093a3fbeb577"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal fexp).",
                        "VernacExtend",
                        "f40028f9502b41bafc803163c189f61ef324b731"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_DN.",
                        "VernacExtend",
                        "4760e48bac58f51ea8925211981751cd5e93db0c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scaled_mantissa_DN",
            "line_nb": 1037,
            "steps": [
                {
                    "command": [
                        "intros x Hd.",
                        "VernacExtend",
                        "a8acddfe5d9185868a2f31ec7fb3093a3fbeb577"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "rewrite canonic_exp_DN with (1 := Hd).",
                        "VernacExtend",
                        "9122cc452f5fe924566e657c162189bb71abaa3f"
                    ]
                },
                {
                    "command": [
                        "unfold round, F2R.",
                        "VernacExtend",
                        "f7df1e666cb069edfb380cdf26ce3a214adbfa27"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
                        "VernacExtend",
                        "a557b7734945e3d566e56163150de11aa5c5b3ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_N_pt_DN_or_UP",
            "line_nb": 1045,
            "steps": [
                {
                    "command": [
                        "intros x f Hxf.",
                        "VernacExtend",
                        "b52a4f030dfc3c62dde4786afcdb0c0b76ce7f24"
                    ]
                },
                {
                    "command": [
                        "destruct (Rnd_N_pt_DN_or_UP _ _ _ Hxf).",
                        "VernacExtend",
                        "afe059d120b22daa0101440b5a58a9b2aef2e540"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_DN_pt_unicity with (1 := H).",
                        "VernacExtend",
                        "4bc913b7c37f0f4e562b491884997f5d2445dbc1"
                    ]
                },
                {
                    "command": [
                        "apply round_DN_pt.",
                        "VernacExtend",
                        "5f4c4f54107563eb46e1766fa01338b4207ef35d"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_UP_pt_unicity with (1 := H).",
                        "VernacExtend",
                        "5fd129d6177be8cbc9509c6c27a8890fbd9e816f"
                    ]
                },
                {
                    "command": [
                        "apply round_UP_pt.",
                        "VernacExtend",
                        "949fc15c9e78aa5120a8e381c4848e031dfcc7e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subnormal_exponent",
            "line_nb": 1058,
            "steps": [
                {
                    "command": [
                        "intros e x He Hx.",
                        "VernacExtend",
                        "d47f085ab024bd50d3b4099c6fe963d5055e706d"
                    ]
                },
                {
                    "command": [
                        "pattern x at 2 ; rewrite Hx.",
                        "VernacExtend",
                        "a451ba033550ff726cd0175e4e7e347af900b992"
                    ]
                },
                {
                    "command": [
                        "unfold F2R at 2.",
                        "VernacExtend",
                        "ddd475825d33cf651fd049012f87a1e4cabc4c48"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus.",
                        "VernacExtend",
                        "e64efbe326a420591ccd203c3aa334b6ee79c4aa"
                    ]
                },
                {
                    "command": [
                        "assert (H: Z2R (Zpower beta (canonic_exp x + - fexp e)) = bpow (canonic_exp x + - fexp e)).",
                        "VernacExtend",
                        "d128772c4d2eab846ed80a21b7360c32668c7099"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_Zpower.",
                        "VernacExtend",
                        "d1db08cb7fff330669608b0fd9f379850ccd3950"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "set (ex := ln_beta beta x).",
                        "VernacExtend",
                        "2df4326b3f182e5b2419721e1c5d91ec5009423d"
                    ]
                },
                {
                    "command": [
                        "generalize (exp_not_FTZ ex).",
                        "VernacExtend",
                        "89cf5491ef2a7fc7eab281d2c9f51d828ea1dd04"
                    ]
                },
                {
                    "command": [
                        "generalize (proj2 (proj2 (valid_exp _) He) (fexp ex + 1)%Z).",
                        "VernacExtend",
                        "04328cf5087425e64f5c328cd2f17d52db7f75ba"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult, Ztrunc_Z2R.",
                        "VernacExtend",
                        "7e73b12b45aa83210387c36a7e28569f9eadb50d"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_mult.",
                        "VernacExtend",
                        "9df3e88fb03a8e1b32ba077432430323142e8b66"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus.",
                        "VernacExtend",
                        "e64efbe326a420591ccd203c3aa334b6ee79c4aa"
                    ]
                },
                {
                    "command": [
                        "now ring_simplify (canonic_exp x + - fexp e + fexp e)%Z.",
                        "VernacExtend",
                        "1fd15f314b38a7e65f1baa0b63d14d1b688e5bb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monotone_exp_not_FTZ",
            "line_nb": 1084,
            "steps": [
                {
                    "command": [
                        "intros e.",
                        "VernacExtend",
                        "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_lt_le_dec (fexp e) e) as [He|He].",
                        "VernacExtend",
                        "a65954cbe1f02c52d8430d1a3ea84382ac07fbd9"
                    ]
                },
                {
                    "command": [
                        "apply monotone_exp.",
                        "VernacExtend",
                        "04ccae1a2908d693edfe87d121b476fe26f24c85"
                    ]
                },
                {
                    "command": [
                        "now apply Zlt_le_succ.",
                        "VernacExtend",
                        "0ddb068a7da0e5ecd8002018d5306507f8b07087"
                    ]
                },
                {
                    "command": [
                        "now apply valid_exp.",
                        "VernacExtend",
                        "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_exp_le_bpow",
            "line_nb": 1091,
            "steps": [
                {
                    "command": [
                        "intros x e Zx Hx.",
                        "VernacExtend",
                        "69c741b58f204e1415d1f9aaf131b322455ebea8"
                    ]
                },
                {
                    "command": [
                        "apply monotone_exp.",
                        "VernacExtend",
                        "04ccae1a2908d693edfe87d121b476fe26f24c85"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_le_bpow.",
                        "VernacExtend",
                        "faab6f875cb19e6202ef6892aa34c64c6331527d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_exp_ge_bpow",
            "line_nb": 1096,
            "steps": [
                {
                    "command": [
                        "intros x e Hx.",
                        "VernacExtend",
                        "183d993f7f6ed381c7630272430ba030c84b0bb5"
                    ]
                },
                {
                    "command": [
                        "apply monotone_exp.",
                        "VernacExtend",
                        "04ccae1a2908d693edfe87d121b476fe26f24c85"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zsucc_pred e).",
                        "VernacExtend",
                        "319d04f52feb8fefeddae6a0a16e9b4e68e6b8df"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_succ.",
                        "VernacExtend",
                        "070de595889f014f0a173659377506422eb25080"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_gt_bpow.",
                        "VernacExtend",
                        "944360694e9de116bfa3c2ce8238224f7332dde8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znearest_DN_or_UP",
            "line_nb": 1131,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold Znearest.",
                        "VernacExtend",
                        "c6481393d02b9e0a0e8669a35ef29881ad118b89"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; intros _.",
                        "VernacExtend",
                        "0602c8ef045c98bd6240ec0af601aec0a3030967"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "case choice.",
                        "VernacExtend",
                        "fc86470487de3cd9a4387bc8f5d92260b0aaa0ae"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znearest_ge_floor",
            "line_nb": 1141,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Znearest_DN_or_UP x) as [Hx|Hx] ; rewrite Hx.",
                        "VernacExtend",
                        "f8555b822ed39a7e0ed6fd7cfe36878e4b953c30"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "apply le_Z2R.",
                        "VernacExtend",
                        "1945b4c25beb86c99a51fb31bc5e89da8f443292"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with x.",
                        "VernacExtend",
                        "795cd4902a779137a2ca3d4d53ee3d5bd0e0d67f"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_ub.",
                        "VernacExtend",
                        "31edc0840e36e6b04e75719515ba742855146abc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znearest_le_ceil",
            "line_nb": 1150,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Znearest_DN_or_UP x) as [Hx|Hx] ; rewrite Hx.",
                        "VernacExtend",
                        "f8555b822ed39a7e0ed6fd7cfe36878e4b953c30"
                    ]
                },
                {
                    "command": [
                        "apply le_Z2R.",
                        "VernacExtend",
                        "1945b4c25beb86c99a51fb31bc5e89da8f443292"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with x.",
                        "VernacExtend",
                        "795cd4902a779137a2ca3d4d53ee3d5bd0e0d67f"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_ub.",
                        "VernacExtend",
                        "31edc0840e36e6b04e75719515ba742855146abc"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_rnd_N",
            "line_nb": 1159,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_or_lt (Z2R (Zceil x)) y) as [H|H].",
                        "VernacExtend",
                        "494e55cce5c3e71f88ec3acc26673f94aa003034"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (1 := Znearest_le_ceil x).",
                        "VernacExtend",
                        "d7676de31b5491153a268c051ddaaecd4539f885"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (2 := Znearest_ge_floor y).",
                        "VernacExtend",
                        "c9a1eb5ea5e939ebe51954f37aefd1a6394aad44"
                    ]
                },
                {
                    "command": [
                        "now apply Zfloor_lub.",
                        "VernacExtend",
                        "21e49a9269b50da476743d3e833aac8408d14ed9"
                    ]
                },
                {
                    "command": [
                        "assert (Hf: Zfloor y = Zfloor x).",
                        "VernacExtend",
                        "6d1d6d492fc37e8bc2e154ad01d7bec8e7d9cc9a"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Zfloor_lb y).",
                        "VernacExtend",
                        "ef76dac046f3c5b855fc152163bd181e61ee5200"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "now apply Zfloor_le.",
                        "VernacExtend",
                        "4cc0f3aa133838b48df9664cf5449b7231dcd8cd"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := H).",
                        "VernacExtend",
                        "4cd6bf8b9ffdf301bc7c5f322262f3507ca79aef"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_glb.",
                        "VernacExtend",
                        "524f59be3c7aaf779be7bc5579e0b8cbb0c3a327"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_ub.",
                        "VernacExtend",
                        "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
                    ]
                },
                {
                    "command": [
                        "unfold Znearest at 1.",
                        "VernacExtend",
                        "235a3f2bbb4ad30465a340ea412d508e778fa747"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; intro Hx.",
                        "VernacExtend",
                        "a481a081f2ab5ff86e94db267716b49d89982720"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hf.",
                        "VernacExtend",
                        "c2a104a968e91e1dadc20b044f294fa371a758e8"
                    ]
                },
                {
                    "command": [
                        "apply Znearest_ge_floor.",
                        "VernacExtend",
                        "d39f3a565275e794d07ee28ee653b9541a3ac374"
                    ]
                },
                {
                    "command": [
                        "unfold Znearest.",
                        "VernacExtend",
                        "c6481393d02b9e0a0e8669a35ef29881ad118b89"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf.",
                        "VernacExtend",
                        "4b4ea75b42501c41b9cce49efd492d21013c9685"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; intro Hy.",
                        "VernacExtend",
                        "175ad1f6b2aabfc00c880b62dbadc103d1bc0c56"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_not_le with (1 := Hy).",
                        "VernacExtend",
                        "09db7b24a456bad7b9b138bf5568289bbc4b25ec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx.",
                        "VernacExtend",
                        "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "8182aad22e58bd21105c801af074d763818ebcdd"
                    ]
                },
                {
                    "command": [
                        "replace y with x.",
                        "VernacExtend",
                        "32bcc5bf56210bff5b38cc9e9eaf0c7ab9375e0b"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_reg_l with (- Z2R (Zfloor x))%R.",
                        "VernacExtend",
                        "3a43c3ebff5c5df279004c3ebd03fd2e050bef37"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!(Rplus_comm (- (Z2R (Zfloor x)))).",
                        "VernacExtend",
                        "846458f30276f2860b08c655610069c73ed3d5a0"
                    ]
                },
                {
                    "command": [
                        "change (x - Z2R (Zfloor x) = y - Z2R (Zfloor x))%R.",
                        "VernacExtend",
                        "5bb7e7dd79bb3e2e92452b186e21b4227be9b93e"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hy.",
                        "VernacExtend",
                        "37f3892f52afecf00e3e8af6488d26ac9c8005b5"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (Zceil x).",
                        "VernacExtend",
                        "18595b03b3b38ffa64c4959f957776a2c75b4a7d"
                    ]
                },
                {
                    "command": [
                        "case choice.",
                        "VernacExtend",
                        "fc86470487de3cd9a4387bc8f5d92260b0aaa0ae"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "apply le_Z2R.",
                        "VernacExtend",
                        "1945b4c25beb86c99a51fb31bc5e89da8f443292"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with x.",
                        "VernacExtend",
                        "795cd4902a779137a2ca3d4d53ee3d5bd0e0d67f"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_ub.",
                        "VernacExtend",
                        "31edc0840e36e6b04e75719515ba742855146abc"
                    ]
                },
                {
                    "command": [
                        "now apply Zceil_le.",
                        "VernacExtend",
                        "1db17e1169b75b1250fd3c02d2b7732ff8884a19"
                    ]
                },
                {
                    "command": [
                        "unfold Znearest.",
                        "VernacExtend",
                        "c6481393d02b9e0a0e8669a35ef29881ad118b89"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf.",
                        "VernacExtend",
                        "4b4ea75b42501c41b9cce49efd492d21013c9685"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Gt.",
                        "VernacExtend",
                        "6af5b764e76966598fea1215f8858ea8132ad3dd"
                    ]
                },
                {
                    "command": [
                        "now apply Zceil_le.",
                        "VernacExtend",
                        "1db17e1169b75b1250fd3c02d2b7732ff8884a19"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hx).",
                        "VernacExtend",
                        "17cfcea7cef1e39ddff4797053bb05abaf553802"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "8182aad22e58bd21105c801af074d763818ebcdd"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "unfold Znearest.",
                        "VernacExtend",
                        "c6481393d02b9e0a0e8669a35ef29881ad118b89"
                    ]
                },
                {
                    "command": [
                        "rewrite Zfloor_Z2R.",
                        "VernacExtend",
                        "76c32ec848cfdb0ff47d7c42d76ad58c824310bd"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Lt.",
                        "VernacExtend",
                        "1ed9ee0362e725864989e8a5e0bf1041f0280dbf"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_r.",
                        "VernacExtend",
                        "0b42d27f90670486f4fe47560bedca46e1efb1ec"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_floor_ceil_mid",
            "line_nb": 1218,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "rewrite Zceil_floor_neq with (1 := Hx).",
                        "VernacExtend",
                        "96fb86acbfdc38a657b327d2e293b9794e2947e3"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcompare_spec (x - Z2R (Zfloor x)) (/ 2)) as [H1|H1|H1] ; apply sym_eq.",
                        "VernacExtend",
                        "80b3b431425d73c3c17db7bb134009567cef1832"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt.",
                        "VernacExtend",
                        "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (x - Z2R (Zfloor x))%R.",
                        "VernacExtend",
                        "6dac5a87e13c17e7102f84c0fa8b86a8993fca7e"
                    ]
                },
                {
                    "command": [
                        "replace (x - Z2R (Zfloor x) + (x - Z2R (Zfloor x)))%R with ((x - Z2R (Zfloor x)) * 2)%R by ring.",
                        "VernacExtend",
                        "0d6468ad21f8a2384ddb752b06709f488bb3d6f7"
                    ]
                },
                {
                    "command": [
                        "replace (x - Z2R (Zfloor x) + (Z2R (Zfloor x) + 1 - x))%R with (/2 * 2)%R by field.",
                        "VernacExtend",
                        "c832de82361e18f59cc2c07ef8d4fc999add6b28"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r with (2 := H1).",
                        "VernacExtend",
                        "9cd2491257e75da192950e0648267d510139b67e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Eq.",
                        "VernacExtend",
                        "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
                    ]
                },
                {
                    "command": [
                        "replace (Z2R (Zfloor x) + 1 - x)%R with (1 - (x - Z2R (Zfloor x)))%R by ring.",
                        "VernacExtend",
                        "08956dde5168fac3c3072b26046977e3337f5730"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Gt.",
                        "VernacExtend",
                        "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (x - Z2R (Zfloor x))%R.",
                        "VernacExtend",
                        "6dac5a87e13c17e7102f84c0fa8b86a8993fca7e"
                    ]
                },
                {
                    "command": [
                        "replace (x - Z2R (Zfloor x) + (x - Z2R (Zfloor x)))%R with ((x - Z2R (Zfloor x)) * 2)%R by ring.",
                        "VernacExtend",
                        "0d6468ad21f8a2384ddb752b06709f488bb3d6f7"
                    ]
                },
                {
                    "command": [
                        "replace (x - Z2R (Zfloor x) + (Z2R (Zfloor x) + 1 - x))%R with (/2 * 2)%R by field.",
                        "VernacExtend",
                        "c832de82361e18f59cc2c07ef8d4fc999add6b28"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r with (2 := H1).",
                        "VernacExtend",
                        "9cd2491257e75da192950e0648267d510139b67e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_ceil_floor_mid",
            "line_nb": 1241,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "rewrite Zceil_floor_neq with (1 := Hx).",
                        "VernacExtend",
                        "96fb86acbfdc38a657b327d2e293b9794e2947e3"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcompare_spec (Z2R (Zfloor x) + 1 - x) (/ 2)) as [H1|H1|H1] ; apply sym_eq.",
                        "VernacExtend",
                        "991cc7e37dc933f3fc1959f1b5c1f94d2cbec978"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt.",
                        "VernacExtend",
                        "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (Z2R (Zfloor x) + 1 - x)%R.",
                        "VernacExtend",
                        "8e4e1b584e3319ede7622337f646a68ce7d50267"
                    ]
                },
                {
                    "command": [
                        "replace (Z2R (Zfloor x) + 1 - x + (Z2R (Zfloor x) + 1 - x))%R with ((Z2R (Zfloor x) + 1 - x) * 2)%R by ring.",
                        "VernacExtend",
                        "84cc4deb4555d2a1a0554c1b1a865b07731b9379"
                    ]
                },
                {
                    "command": [
                        "replace (Z2R (Zfloor x) + 1 - x + (x - Z2R (Zfloor x)))%R with (/2 * 2)%R by field.",
                        "VernacExtend",
                        "9ba1011b7d411db8e7d1badc2a39b5d73ff4fc08"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r with (2 := H1).",
                        "VernacExtend",
                        "9cd2491257e75da192950e0648267d510139b67e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Eq.",
                        "VernacExtend",
                        "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
                    ]
                },
                {
                    "command": [
                        "replace (x - Z2R (Zfloor x))%R with (1 - (Z2R (Zfloor x) + 1 - x))%R by ring.",
                        "VernacExtend",
                        "1fcfa5134d896a67c84d44d475fcefe942b41480"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Gt.",
                        "VernacExtend",
                        "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (Z2R (Zfloor x) + 1 - x)%R.",
                        "VernacExtend",
                        "8e4e1b584e3319ede7622337f646a68ce7d50267"
                    ]
                },
                {
                    "command": [
                        "replace (Z2R (Zfloor x) + 1 - x + (Z2R (Zfloor x) + 1 - x))%R with ((Z2R (Zfloor x) + 1 - x) * 2)%R by ring.",
                        "VernacExtend",
                        "84cc4deb4555d2a1a0554c1b1a865b07731b9379"
                    ]
                },
                {
                    "command": [
                        "replace (Z2R (Zfloor x) + 1 - x + (x - Z2R (Zfloor x)))%R with (/2 * 2)%R by field.",
                        "VernacExtend",
                        "9ba1011b7d411db8e7d1badc2a39b5d73ff4fc08"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r with (2 := H1).",
                        "VernacExtend",
                        "9cd2491257e75da192950e0648267d510139b67e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znearest_N_strict",
            "line_nb": 1264,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold Znearest.",
                        "VernacExtend",
                        "c6481393d02b9e0a0e8669a35ef29881ad118b89"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; intros H.",
                        "VernacExtend",
                        "f8bd22068d34c20b85b9dde46edeaca422c503dc"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_minus.",
                        "VernacExtend",
                        "11bca255824a3f085e9099937bd67db6c181e148"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "now elim Hx.",
                        "VernacExtend",
                        "c5690f3d5e32721c1584798217837887272121e7"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_left1.",
                        "VernacExtend",
                        "959a39766c3ec0e54779596cf6d2e0ed16ff476d"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr.",
                        "VernacExtend",
                        "03410ea29af67bdcfa7393931606c01ed23d7394"
                    ]
                },
                {
                    "command": [
                        "rewrite Zceil_floor_neq.",
                        "VernacExtend",
                        "b4fc727910b2a0e4293920fe2596a742e2d62876"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with 1%R.",
                        "VernacExtend",
                        "5d1640d6f67d71336b74a0a138509a6754df5d5f"
                    ]
                },
                {
                    "command": [
                        "replace (1 + -/2)%R with (/2)%R by field.",
                        "VernacExtend",
                        "b2760f846e6183ce87f79efc75a3b8c2b54664a3"
                    ]
                },
                {
                    "command": [
                        "now replace (1 + - (Z2R (Zfloor x) + 1 - x))%R with (x - Z2R (Zfloor x))%R by ring.",
                        "VernacExtend",
                        "4a08c36b5b8ce92da331b4b27aa6c13955862771"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_eq.",
                        "VernacExtend",
                        "4d888fdf05ab3816c2e650b03b478096db638cf5"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (- Z2R (Zfloor x))%R.",
                        "VernacExtend",
                        "46affff9e63824c659eeb8be1da6f14ba76242f7"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (/2)%R.",
                        "VernacExtend",
                        "086b9491dc32022005e8f04dee8d1450bc1ab7ae"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_l.",
                        "VernacExtend",
                        "55e9f717c5b98ad065802667fa3fb1cf9124328a"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- (Rplus_comm x).",
                        "VernacExtend",
                        "5f0301d7c7e1e1c710b4f88e731e2c9d742b1252"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus.",
                        "VernacExtend",
                        "7e46e8a6683420ce8b2242ac68da7361c6b86840"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_ub.",
                        "VernacExtend",
                        "31edc0840e36e6b04e75719515ba742855146abc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znearest_N",
            "line_nb": 1292,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec (x - Z2R (Zfloor x)) (/2)) as [Hx|Hx].",
                        "VernacExtend",
                        "660cb796eaed6220ff4e48016a9e0785fe522341"
                    ]
                },
                {
                    "command": [
                        "assert (K: (Rabs (/2) <= /2)%R).",
                        "VernacExtend",
                        "8a2cb7e33349b12cbc9b9c491be5ae26f63b5828"
                    ]
                },
                {
                    "command": [
                        "apply Req_le.",
                        "VernacExtend",
                        "b69ffc9461f465218c69f379ac293728d3f8e7bd"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_eq.",
                        "VernacExtend",
                        "84ed980db60aa71de2fd237885e8f143313c5575"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "destruct (Znearest_DN_or_UP x) as [H|H] ; rewrite H ; clear H.",
                        "VernacExtend",
                        "83115019f187777a3ce31f7d412f591702134208"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hx.",
                        "VernacExtend",
                        "59501fe84d3dd548a8beaa1f63a3ab4e79d6ce19"
                    ]
                },
                {
                    "command": [
                        "rewrite Zceil_floor_neq.",
                        "VernacExtend",
                        "b4fc727910b2a0e4293920fe2596a742e2d62876"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (x - (Z2R (Zfloor x) + 1))%R with (x - Z2R (Zfloor x) - 1)%R by ring.",
                        "VernacExtend",
                        "2f52557a71e65869be30bd498c32045c41d1ef35"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_minus_sym.",
                        "VernacExtend",
                        "ddb6224679ef13d2115963f7fdb5e59e73f39ad2"
                    ]
                },
                {
                    "command": [
                        "now replace (1 - /2)%R with (/2)%R by field.",
                        "VernacExtend",
                        "67fa02cd875dbae17cabfa9a82c88daf79e9b5a8"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_eq.",
                        "VernacExtend",
                        "4d888fdf05ab3816c2e650b03b478096db638cf5"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (- Z2R (Zfloor x))%R.",
                        "VernacExtend",
                        "46affff9e63824c659eeb8be1da6f14ba76242f7"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_l, Rplus_comm.",
                        "VernacExtend",
                        "86aa52758f3379e752ec253028adea050068a5ce"
                    ]
                },
                {
                    "command": [
                        "fold (x - Z2R (Zfloor x))%R.",
                        "VernacExtend",
                        "bbbd330ff6df45e0fa0e346b3284ff09ee58023d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "now apply Znearest_N_strict.",
                        "VernacExtend",
                        "33e64505baf2812568cfb786ab3c09d65658f3ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znearest_imp",
            "line_nb": 1320,
            "steps": [
                {
                    "command": [
                        "intros x n Hd.",
                        "VernacExtend",
                        "35b59e8936a701049e8eaabace5a246401857073"
                    ]
                },
                {
                    "command": [
                        "cut (Zabs (Znearest x - n) < 1)%Z.",
                        "VernacExtend",
                        "72d71cb141c03ab4e3491b8107dae84b3249e959"
                    ]
                },
                {
                    "command": [
                        "clear ; zify ; omega.",
                        "VernacExtend",
                        "a6e41cc90e30259e80ee8e4f58a89b520b38df88"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z2R.",
                        "VernacExtend",
                        "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_abs, Z2R_minus.",
                        "VernacExtend",
                        "4ad1018b53e2bd63ae0bbeb2bc6ff9033889ccc1"
                    ]
                },
                {
                    "command": [
                        "replace (Z2R (Znearest x) - Z2R n)%R with (- (x - Z2R (Znearest x)) + (x - Z2R n))%R by ring.",
                        "VernacExtend",
                        "4447a8a1dbb6a92f80deeff09991aa3c04bf4b8d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
                        "VernacExtend",
                        "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace 1%R with (/2 + /2)%R by field.",
                        "VernacExtend",
                        "fb9de0756b3bb13689dab7748db4d50344e163c3"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_lt_compat with (2 := Hd).",
                        "VernacExtend",
                        "293cc8ee9c8ddda921e6f207590fbd01ee46eddd"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "4585414329a0ef757c809f4a4dee3b3a09307b5c"
                    ]
                },
                {
                    "command": [
                        "apply Znearest_N.",
                        "VernacExtend",
                        "4b5101c6c501edc9e69373baff3d63c0b4c896fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_N_middle",
            "line_nb": 1396,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 4 ; rewrite <- scaled_mantissa_mult_bpow.",
                        "VernacExtend",
                        "e58cc565cf5899f2a60db9f75a1d62d1f258c5f0"
                    ]
                },
                {
                    "command": [
                        "unfold round, Znearest, F2R.",
                        "VernacExtend",
                        "9849b8c059e739f108228f458dcc827324ba9102"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec (Z2R (Zfloor (scaled_mantissa x))) (scaled_mantissa x)) as [Fx|Fx].",
                        "VernacExtend",
                        "dcb490494d1e297264567c3429daa2ba461ed67d"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Fx.",
                        "VernacExtend",
                        "3eb9ff71c5f9468a2df9b7f7943d9ba7bc8d3704"
                    ]
                },
                {
                    "command": [
                        "rewrite Zceil_Z2R, Zfloor_Z2R.",
                        "VernacExtend",
                        "6ed0f069d1c2595789003dcfb0e769682cbd878d"
                    ]
                },
                {
                    "command": [
                        "set (m := Zfloor (scaled_mantissa x)).",
                        "VernacExtend",
                        "5c78651f937ddd9b484ee0e56ca000d16b45994b"
                    ]
                },
                {
                    "command": [
                        "now case (Rcompare (Z2R m - Z2R m) (/ 2)) ; case (choice m).",
                        "VernacExtend",
                        "082187ec367854cbd8263a42807e38791ac9d1eb"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_floor_ceil_mid with (1 := Fx).",
                        "VernacExtend",
                        "9a3080febecb2fed00603848cd26cb1011c6c161"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Eq.",
                        "VernacExtend",
                        "908eb644f4489dc9bfd3757c906ed729025ad3c1"
                    ]
                },
                {
                    "command": [
                        "now case choice.",
                        "VernacExtend",
                        "c68fa2e97dd184fdbb694ae0879f7e7d7c709609"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_reg_r with (bpow (canonic_exp x)).",
                        "VernacExtend",
                        "2c28caf6e9854d111ce519f4c02393c422f1fd76"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!Rmult_minus_distr_r.",
                        "VernacExtend",
                        "0f7788abd12de6c62c71e2c49275bda537670328"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq.",
                        "VernacExtend",
                        "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_N_really_small_pos",
            "line_nb": 1416,
            "steps": [
                {
                    "command": [
                        "intros x ex Hex Hf.",
                        "VernacExtend",
                        "9aeeb0e43e57d893ae30ce8dbb6fac12b3c66df3"
                    ]
                },
                {
                    "command": [
                        "unfold round, F2R, scaled_mantissa, canonic_exp; simpl.",
                        "VernacExtend",
                        "8d123ad36eb1686a4be03ea41f972a7fcad620af"
                    ]
                },
                {
                    "command": [
                        "apply (Rmult_eq_reg_r (bpow (- fexp (ln_beta beta x)))); [|now apply Rgt_not_eq; apply bpow_gt_0].",
                        "VernacExtend",
                        "7f8c0d8480441a17c517d45950d0d16eed71e083"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l, Rmult_assoc, <- bpow_plus.",
                        "VernacExtend",
                        "94a0cc14705466d69e267f529224f04a2cac9e7e"
                    ]
                },
                {
                    "command": [
                        "replace (_ + - _)%Z with 0%Z by ring; simpl; rewrite Rmult_1_r.",
                        "VernacExtend",
                        "775f11ac61ee9e36de050ceb813b791c45ddc983"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0); apply f_equal.",
                        "VernacExtend",
                        "fe254e32d98dc880636e0cf039f093b34abef05e"
                    ]
                },
                {
                    "command": [
                        "apply Znearest_imp.",
                        "VernacExtend",
                        "95b581a95c6472c958c61dadecd8ea7aece50428"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r.",
                        "VernacExtend",
                        "71f88301e81d78c542d8df68d06378829937368d"
                    ]
                },
                {
                    "command": [
                        "assert (H : (x >= 0)%R).",
                        "VernacExtend",
                        "983df7c3294fbe37f32bfa39e1e3b06e455658af"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rle_trans with (bpow (ex - 1)); [|exact (proj1 Hex)].",
                        "VernacExtend",
                        "c5fa7c5669c5e080146db9440c40d3b39c7ab3a4"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_ge_0.",
                        "VernacExtend",
                        "8d43b785efd875c566a55a0415104968ba2c5db1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (H' : (x * bpow (- fexp (ln_beta beta x)) >= 0)%R).",
                        "VernacExtend",
                        "05ec4cb0cf5d4f29541ac60a8f0d738ea703fc91"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rmult_le_pos.",
                        "VernacExtend",
                        "7d007ccbe591f3ffd6982f0d57bed1df4ebf343e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply Rge_le.",
                        "VernacExtend",
                        "a9d375e1f97c153d1fcc15fabbf40ef83aa1533a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_ge_0.",
                        "VernacExtend",
                        "8d43b785efd875c566a55a0415104968ba2c5db1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right; [|exact H'].",
                        "VernacExtend",
                        "4debe808b7484b28fb8f4351b00912db2b1b4add"
                    ]
                },
                {
                    "command": [
                        "apply (Rmult_lt_reg_r (bpow (fexp (ln_beta beta x)))); [now apply bpow_gt_0|].",
                        "VernacExtend",
                        "39cfed5b6f0e6dccbc465e734a3fb9dc263f9a4c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, <- bpow_plus.",
                        "VernacExtend",
                        "e64efbe326a420591ccd203c3aa334b6ee79c4aa"
                    ]
                },
                {
                    "command": [
                        "replace (- _ + _)%Z with 0%Z by ring; simpl; rewrite Rmult_1_r.",
                        "VernacExtend",
                        "036ba863a8ee0e751c3c06fa0df9e331904eaa01"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_le_trans _ _ _ (proj2 Hex)).",
                        "VernacExtend",
                        "a0b16ee658a956472d6791ba171730cfb0756cdb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow (fexp (ln_beta beta x) - 1)).",
                        "VernacExtend",
                        "22c62bfd2d8514e04bb6049955babb3850ecf751"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "rewrite (ln_beta_unique beta x ex); [omega|].",
                        "VernacExtend",
                        "e066fce907af4dee6ca8a9dc001a98abea8f0674"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rabs_right.",
                        "VernacExtend",
                        "1f45b6d9e8168e0718a5263ca7ba7326a1c2792f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold Zminus; rewrite bpow_plus.",
                        "VernacExtend",
                        "1de35bed46f214eff68b00095dd9903663f239f2"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "fd520335d31c715c2f686e2bdc0b380c493b04c0"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r; [now apply bpow_ge_0|].",
                        "VernacExtend",
                        "4a486c90f003a691d8f6953ba5bb92d8a58fe4a6"
                    ]
                },
                {
                    "command": [
                        "unfold Fcore_Raux.bpow, Z.pow_pos; simpl.",
                        "VernacExtend",
                        "779733416dcbad2a3471eb36d9058093eb08150c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_1_r.",
                        "VernacExtend",
                        "417376d82024400c741f6570f03b2437a77ee661"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_le; [exact Rlt_0_2|].",
                        "VernacExtend",
                        "730b44166c168c22e4a31975662324c540bfc8e1"
                    ]
                },
                {
                    "command": [
                        "change 2%R with (Z2R 2); apply Z2R_le.",
                        "VernacExtend",
                        "434982929cb42bd43dba8233e7661991c6d7e8eb"
                    ]
                },
                {
                    "command": [
                        "destruct beta as (beta_val,beta_prop).",
                        "VernacExtend",
                        "31f237390e579283b1fbfb3fdeb97e791d4f8c97"
                    ]
                },
                {
                    "command": [
                        "now apply Zle_bool_imp_le.",
                        "VernacExtend",
                        "58a939dc5b091786ac14b82b5f01868c4efb5e4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_NA_pt",
            "line_nb": 1462,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "generalize (round_N_pt (Zle_bool 0) x).",
                        "VernacExtend",
                        "f7acc8ace316040c212090ac96294da21eca5229"
                    ]
                },
                {
                    "command": [
                        "set (f := round (Znearest (Zle_bool 0)) x).",
                        "VernacExtend",
                        "c691b626a32fdced48b079a0e63c8663b972c194"
                    ]
                },
                {
                    "command": [
                        "intros Rxf.",
                        "VernacExtend",
                        "5146f926106bd68a51f25d3e759080af242331c2"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec (x - round Zfloor x) (round Zceil x - x)) as [Hm|Hm].",
                        "VernacExtend",
                        "507d9f1a72a8665f7fede8584ed937bdcfb7d8a5"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_NA_N_pt.",
                        "VernacExtend",
                        "eed8445ee1e21d575f8abba0e3c683189935766b"
                    ]
                },
                {
                    "command": [
                        "exact generic_format_0.",
                        "VernacExtend",
                        "34aae2d49742d3ef117a6e88122fe75a9690a076"
                    ]
                },
                {
                    "command": [
                        "exact Rxf.",
                        "VernacExtend",
                        "c20e21bc7d96c46b3742109ffab22031f847613e"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_or_lt 0 x) as [Hx|Hx].",
                        "VernacExtend",
                        "a3770c27b57432695451ec9185f3f15f3759c589"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq with (1 := Hx).",
                        "VernacExtend",
                        "a465db2a8ec152a807cdaa74dc7cac57c68345a6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "unfold f.",
                        "VernacExtend",
                        "54a386f4161710b69df4a2025df24a14e842ecf2"
                    ]
                },
                {
                    "command": [
                        "rewrite round_N_middle with (1 := Hm).",
                        "VernacExtend",
                        "905db7ba4251bde90efe10b02340922b89065cb7"
                    ]
                },
                {
                    "command": [
                        "rewrite Zle_bool_true.",
                        "VernacExtend",
                        "4665a87fafe0a4cdce3109c78c64b7a4e889634d"
                    ]
                },
                {
                    "command": [
                        "apply (round_UP_pt x).",
                        "VernacExtend",
                        "ac82eeb026163fd8bdef79f113fa1ac9be1cbcdd"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lub.",
                        "VernacExtend",
                        "2a3f8e59d303f192a648e4eef260195d5e8b9977"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos with (1 := Hx).",
                        "VernacExtend",
                        "9c9080f14c38931124baef01823092be47cbff82"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_N_pt_pos with (2 := Hx) (3 := Rxf).",
                        "VernacExtend",
                        "f076e592eccc88149fa6853bd3139513aff3a845"
                    ]
                },
                {
                    "command": [
                        "exact generic_format_0.",
                        "VernacExtend",
                        "34aae2d49742d3ef117a6e88122fe75a9690a076"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_left with (1 := Hx).",
                        "VernacExtend",
                        "c6403664ba27489c7a2bd373129c5a2edc8570dd"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_left1.",
                        "VernacExtend",
                        "959a39766c3ec0e54779596cf6d2e0ed16ff476d"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "unfold f.",
                        "VernacExtend",
                        "54a386f4161710b69df4a2025df24a14e842ecf2"
                    ]
                },
                {
                    "command": [
                        "rewrite round_N_middle with (1 := Hm).",
                        "VernacExtend",
                        "905db7ba4251bde90efe10b02340922b89065cb7"
                    ]
                },
                {
                    "command": [
                        "rewrite Zle_bool_false.",
                        "VernacExtend",
                        "958139bcc90f42020f9b6fc3f99c032f5ffc6e97"
                    ]
                },
                {
                    "command": [
                        "apply (round_DN_pt x).",
                        "VernacExtend",
                        "e1ccef453750c6a8e8d625958ee1240a7f60b620"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z2R.",
                        "VernacExtend",
                        "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (scaled_mantissa x).",
                        "VernacExtend",
                        "d29cccfd011cb3ab66af7f308fb533ac7ec22bcb"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_0_l (bpow (- canonic_exp x))).",
                        "VernacExtend",
                        "f4e119904c3e584e3697f8c5aadc435383c7d312"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r with (2 := Hx).",
                        "VernacExtend",
                        "0c90e4d4b1d8a064704aafd0f3308f3c21fde398"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_N_pt_neg with (3 := Rxf).",
                        "VernacExtend",
                        "8bfcbaac1ecf515f6f785f66d7d6a462362f9b05"
                    ]
                },
                {
                    "command": [
                        "exact generic_format_0.",
                        "VernacExtend",
                        "34aae2d49742d3ef117a6e88122fe75a9690a076"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rxf.",
                        "VernacExtend",
                        "b7526d580387cd8641bcd16efca0fa87286b028b"
                    ]
                },
                {
                    "command": [
                        "intros g Rxg.",
                        "VernacExtend",
                        "f9d09942fc981672706fb3ac93fac74d04cb2317"
                    ]
                },
                {
                    "command": [
                        "rewrite Rnd_N_pt_unicity with (3 := Hm) (4 := Rxf) (5 := Rxg).",
                        "VernacExtend",
                        "9d8438997cdfa266565410e230ac16314eb93323"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply round_DN_pt.",
                        "VernacExtend",
                        "5f4c4f54107563eb46e1766fa01338b4207ef35d"
                    ]
                },
                {
                    "command": [
                        "apply round_UP_pt.",
                        "VernacExtend",
                        "949fc15c9e78aa5120a8e381c4848e031dfcc7e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_N_opp",
            "line_nb": 1534,
            "steps": [
                {
                    "command": [
                        "intros choice x.",
                        "VernacExtend",
                        "8be0dc28b7e1d3b48acd180a6053107ee4186f2f"
                    ]
                },
                {
                    "command": [
                        "unfold round, F2R.",
                        "VernacExtend",
                        "f7df1e666cb069edfb380cdf26ce3a214adbfa27"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite canonic_exp_opp.",
                        "VernacExtend",
                        "4f64bd993701cd658ccc00c4e33911f0305a20f4"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_opp.",
                        "VernacExtend",
                        "88c0a15c728ca1f5747eb5ebfaddf2989585bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite Znearest_opp.",
                        "VernacExtend",
                        "350c75d1f4325109ea758b936da66b03e76bbc75"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_opp.",
                        "VernacExtend",
                        "f3d51769485a2c167744d3d3fd4fffa672e5e611"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "1b7b97984e6714bb3e8b12a380038dfcfa613a3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_inclusion_ln_beta",
            "line_nb": 1550,
            "steps": [
                {
                    "command": [
                        "intros x He Fx.",
                        "VernacExtend",
                        "573610ce5fc1ccdbcb6826c99fe8782e0e8494d0"
                    ]
                },
                {
                    "command": [
                        "rewrite Fx.",
                        "VernacExtend",
                        "6d5fef6b9bb5c0abc3b57cf7001ef10fc8718bc8"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_F2R.",
                        "VernacExtend",
                        "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
                    ]
                },
                {
                    "command": [
                        "intros Zx.",
                        "VernacExtend",
                        "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Fx.",
                        "VernacExtend",
                        "3eb9ff71c5f9468a2df9b7f7943d9ba7bc8d3704"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "contradict Zx.",
                        "VernacExtend",
                        "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
                    ]
                },
                {
                    "command": [
                        "rewrite Zx, scaled_mantissa_0.",
                        "VernacExtend",
                        "44bc490a4864749eae631bc7457fb2454762a570"
                    ]
                },
                {
                    "command": [
                        "apply (Ztrunc_Z2R 0).",
                        "VernacExtend",
                        "f2dca00f6438321da92a0cb199732aa8776ab401"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_inclusion_lt_ge",
            "line_nb": 1561,
            "steps": [
                {
                    "command": [
                        "intros e1 e2 He x (Hx1,Hx2).",
                        "VernacExtend",
                        "a84eddd052241dc877f2154e16876910ed00daa2"
                    ]
                },
                {
                    "command": [
                        "apply generic_inclusion_ln_beta.",
                        "VernacExtend",
                        "084c11396ddecfe59843f97c4e3acea4d44cab1b"
                    ]
                },
                {
                    "command": [
                        "intros Zx.",
                        "VernacExtend",
                        "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_gt_bpow.",
                        "VernacExtend",
                        "944360694e9de116bfa3c2ce8238224f7332dde8"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_le_bpow.",
                        "VernacExtend",
                        "faab6f875cb19e6202ef6892aa34c64c6331527d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_inclusion_le_ge",
            "line_nb": 1584,
            "steps": [
                {
                    "command": [
                        "intros e1 e2 He' He x (Hx1,[Hx2|Hx2]).",
                        "VernacExtend",
                        "8d9915d9203ca661c578cbb6ee655ab10d9fc25d"
                    ]
                },
                {
                    "command": [
                        "apply generic_inclusion_ln_beta.",
                        "VernacExtend",
                        "084c11396ddecfe59843f97c4e3acea4d44cab1b"
                    ]
                },
                {
                    "command": [
                        "intros Zx.",
                        "VernacExtend",
                        "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_gt_bpow.",
                        "VernacExtend",
                        "944360694e9de116bfa3c2ce8238224f7332dde8"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_le_bpow.",
                        "VernacExtend",
                        "faab6f875cb19e6202ef6892aa34c64c6331527d"
                    ]
                },
                {
                    "command": [
                        "apply generic_inclusion with (e := e2).",
                        "VernacExtend",
                        "ffc6683e0286fd110df0a568f42252498c8e8576"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply He'.",
                        "VernacExtend",
                        "3ca595dd7608c823b6f2298989075e15027b0ef4"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx2.",
                        "VernacExtend",
                        "762fa2d49508177b00d0e4ad5a9c143b424050e0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "apply Zle_pred.",
                        "VernacExtend",
                        "74e60cd76d675249c45bd31401205b5a27bc8eb6"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_inclusion_le",
            "line_nb": 1603,
            "steps": [
                {
                    "command": [
                        "intros e2 He x [Hx|Hx].",
                        "VernacExtend",
                        "238c5186e1b1f008ab0e4c084eda6449172d518e"
                    ]
                },
                {
                    "command": [
                        "apply generic_inclusion_ln_beta.",
                        "VernacExtend",
                        "084c11396ddecfe59843f97c4e3acea4d44cab1b"
                    ]
                },
                {
                    "command": [
                        "intros Zx.",
                        "VernacExtend",
                        "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_le_bpow.",
                        "VernacExtend",
                        "faab6f875cb19e6202ef6892aa34c64c6331527d"
                    ]
                },
                {
                    "command": [
                        "apply generic_inclusion with (e := e2).",
                        "VernacExtend",
                        "ffc6683e0286fd110df0a568f42252498c8e8576"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "apply Zle_pred.",
                        "VernacExtend",
                        "74e60cd76d675249c45bd31401205b5a27bc8eb6"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_inclusion_ge",
            "line_nb": 1618,
            "steps": [
                {
                    "command": [
                        "intros e1 He x Hx.",
                        "VernacExtend",
                        "d0c14afa6ef11d6cd12c7e87e7c57c363079e4ef"
                    ]
                },
                {
                    "command": [
                        "apply generic_inclusion_ln_beta.",
                        "VernacExtend",
                        "084c11396ddecfe59843f97c4e3acea4d44cab1b"
                    ]
                },
                {
                    "command": [
                        "intros Zx.",
                        "VernacExtend",
                        "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_gt_bpow.",
                        "VernacExtend",
                        "944360694e9de116bfa3c2ce8238224f7332dde8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_NA_opp",
            "line_nb": 1677,
            "steps": [
                {
                    "command": [
                        "intros beta fexp x.",
                        "VernacExtend",
                        "b9e6ffec1a37759b92b0c19265b65528e561d7bb"
                    ]
                },
                {
                    "command": [
                        "rewrite round_N_opp.",
                        "VernacExtend",
                        "75544eee29f2902978176e3adf6604dc4f68a033"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_eq_compat.",
                        "VernacExtend",
                        "0a7e593df75dda4a02ea72003a8c07176275c9fe"
                    ]
                },
                {
                    "command": [
                        "apply round_ext.",
                        "VernacExtend",
                        "88a8bc21a41dc91770db45d495513ef42d22b3f0"
                    ]
                },
                {
                    "command": [
                        "clear x; intro x.",
                        "VernacExtend",
                        "7369f10e5b29e71e5de9ad8eb8189233b839197e"
                    ]
                },
                {
                    "command": [
                        "unfold Znearest.",
                        "VernacExtend",
                        "c6481393d02b9e0a0e8669a35ef29881ad118b89"
                    ]
                },
                {
                    "command": [
                        "case_eq (Rcompare (x - Z2R (Zfloor x)) (/ 2)); intro C; [|reflexivity|reflexivity].",
                        "VernacExtend",
                        "0f94824f8159c1f77d21f163cc92d17379472e47"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Eq_inv in C.",
                        "VernacExtend",
                        "fe981425af309b326aa4c82495248dcbf5d835b0"
                    ]
                },
                {
                    "command": [
                        "assert (H : negb (0 <=? - (Zfloor x + 1))%Z = (0 <=? Zfloor x)%Z); [|now rewrite H].",
                        "VernacExtend",
                        "8166224773a255e1fe6430c6d98ca53abc82ce8c"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_Zle_bool.",
                        "VernacExtend",
                        "b063790e22e6589164e7802adff03293aa1b5210"
                    ]
                },
                {
                    "command": [
                        "case_eq (0 <=? Zfloor x)%Z; intro C'.",
                        "VernacExtend",
                        "9571122aa96447ec5b3be0c4f155894ac7c54af9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Zle_bool_imp_le in C'.",
                        "VernacExtend",
                        "bf52dbd80b6bcfba5a71f3b61784b4410f6ea888"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_true.",
                        "VernacExtend",
                        "bebe147ff91dd7ce791fff229d45a54236180415"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.leb_gt in C'.",
                        "VernacExtend",
                        "36985a649ed7d25e38ba82590147d2eae7a52ba2"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_bool_false.",
                        "VernacExtend",
                        "727bcedc45dab1285379e344de04340c612a0572"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}