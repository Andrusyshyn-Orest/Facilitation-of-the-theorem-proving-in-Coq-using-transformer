{
    "filename": "compcert/flocq/Core/Fcore_ulp.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Reals Psatz.",
            "VernacRequire",
            "aa71e9955fdefb9d3b0e58d51406978b644e60c0"
        ],
        [
            "Require Import Fcore_Raux.",
            "VernacRequire",
            "6a49ff899e4733a5492282770f91634f4e2bce84"
        ],
        [
            "Require Import Fcore_defs.",
            "VernacRequire",
            "a5831df34cd1384c0e8566554919e69e523ebc02"
        ],
        [
            "Require Import Fcore_rnd.",
            "VernacRequire",
            "e56b94f747b869d666d08e61f9804bdee8d2613c"
        ],
        [
            "Require Import Fcore_generic_fmt.",
            "VernacRequire",
            "cb86ef6ed7d243b0910cb42e7367eddef0ead8b4"
        ],
        [
            "Require Import Fcore_float_prop.",
            "VernacRequire",
            "cb1b82d62c5b9c01c03fb8d695d9166849c8babe"
        ],
        [
            "Section Fcore_ulp.",
            "VernacBeginSection",
            "3afecc298f2cd62762639b44caed2172a4d2060a"
        ],
        [
            "Variable beta : radix.",
            "VernacAssumption",
            "5414570a6751198892ee4a13f107deb4c633e62b"
        ],
        [
            "Notation bpow e := (bpow beta e).",
            "VernacSyntacticDefinition",
            "c796e278ffd17ea9674b52f8e94413782272a594"
        ],
        [
            "Variable fexp : Z -> Z.",
            "VernacAssumption",
            "c9cf8938d8929b51922f4ec187aafa959003e732"
        ],
        [
            "Lemma Z_le_dec_aux: forall x y : Z, (x <= y)%Z \\/ ~ (x <= y)%Z.",
            "VernacStartTheoremProof",
            "bb8eb54c7b0a78196de73b2f7c4ebf153819d4a9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Z_le_dec x y).",
            "VernacExtend",
            "4c63ff26a14ac07b9915981081bec6dd38b54fad"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition negligible_exp: option Z := match (LPO_Z _ (fun z => Z_le_dec_aux z (fexp z))) with | inleft N => Some (proj1_sig N) | inright _ => None end.",
            "VernacDefinition",
            "3f990b3a14044d437d0c75104d8991efbe9621c9"
        ],
        [
            "Inductive negligible_exp_prop: option Z -> Prop := | negligible_None: (forall n, (fexp n < n)%Z) -> negligible_exp_prop None | negligible_Some: forall n, (n <= fexp n)%Z -> negligible_exp_prop (Some n).",
            "VernacInductive",
            "6896fefa4169ea4caba4c38686084a6a2e1451ef"
        ],
        [
            "Lemma negligible_exp_spec: negligible_exp_prop negligible_exp.",
            "VernacStartTheoremProof",
            "f005b6cb44ca5b3c63a8c7cd89c9a1b5e9acbcbc"
        ],
        [
            "unfold negligible_exp; destruct LPO_Z as [(n,Hn)|Hn].",
            "VernacExtend",
            "3a2880bfc9c2ee99f9e284aa695e9d15e005d0ab"
        ],
        [
            "now apply negligible_Some.",
            "VernacExtend",
            "187547bb0ef7d6c8496848296de6bd6197aaeb7b"
        ],
        [
            "apply negligible_None.",
            "VernacExtend",
            "98d7fcace0824c62ca2871bd41ebb3c26c063d07"
        ],
        [
            "intros n; specialize (Hn n); omega.",
            "VernacExtend",
            "b7dc6ab45aea1f7cde2073c57517072bb0ab62e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negligible_exp_spec': (negligible_exp = None /\\ forall n, (fexp n < n)%Z) \\/ exists n, (negligible_exp = Some n /\\ (n <= fexp n)%Z).",
            "VernacStartTheoremProof",
            "8f4ca1798b57fe57264f09c29354fe84a8b40c61"
        ],
        [
            "unfold negligible_exp; destruct LPO_Z as [(n,Hn)|Hn].",
            "VernacExtend",
            "3a2880bfc9c2ee99f9e284aa695e9d15e005d0ab"
        ],
        [
            "right; simpl; exists n; now split.",
            "VernacExtend",
            "216ab122174c9fdbc30e6ae3692cafed6051aa95"
        ],
        [
            "left; split; trivial.",
            "VernacExtend",
            "bb08f79acdb3338a8faae32b7db83c00fb4f67c7"
        ],
        [
            "intros n; specialize (Hn n); omega.",
            "VernacExtend",
            "b7dc6ab45aea1f7cde2073c57517072bb0ab62e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Context { valid_exp : Valid_exp fexp }.",
            "VernacContext",
            "ee7e72f13eb494c423b2621bcb97f515165b66dc"
        ],
        [
            "Lemma fexp_negligible_exp_eq: forall n m, (n <= fexp n)%Z -> (m <= fexp m)%Z -> fexp n = fexp m.",
            "VernacStartTheoremProof",
            "3325efb1564d7cd2dcfa8c32206db0a110729eaf"
        ],
        [
            "intros n m Hn Hm.",
            "VernacExtend",
            "c015ffe457193f0270ea4e3a78379b6375abe752"
        ],
        [
            "case (Zle_or_lt n m); intros H.",
            "VernacExtend",
            "0d1634be6aa4ceeba31519fe139294d437b55c2e"
        ],
        [
            "apply valid_exp; omega.",
            "VernacExtend",
            "6ef75f2c2f4a2ce106e6d8811b105679bfad26f0"
        ],
        [
            "apply sym_eq, valid_exp; omega.",
            "VernacExtend",
            "d2e090a504f49a9b1f2411f3c9347c9beea4f648"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ulp x := match Req_bool x 0 with | true => match negligible_exp with | Some n => bpow (fexp n) | None => 0%R end | false => bpow (canonic_exp beta fexp x) end.",
            "VernacDefinition",
            "bad6aabced98e83e1c0a55963d8e7319bd5028bb"
        ],
        [
            "Lemma ulp_neq_0 : forall x:R, (x <> 0)%R -> ulp x = bpow (canonic_exp beta fexp x).",
            "VernacStartTheoremProof",
            "2aa3766531ba5dab455588e172bc55d75dda1642"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold ulp; case (Req_bool_spec x); trivial.",
            "VernacExtend",
            "59d2bccef9defdadbfdc66ef15f55c5695994375"
        ],
        [
            "intros H; now contradict H.",
            "VernacExtend",
            "abe9b871a7efcd70f3980602fc630d81b2218ece"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation F := (generic_format beta fexp).",
            "VernacSyntacticDefinition",
            "56fd6f46f069a44a9701831d32985bfa664d3338"
        ],
        [
            "Theorem ulp_opp : forall x, ulp (- x) = ulp x.",
            "VernacStartTheoremProof",
            "54fa1f35def91b7e7e3940ee6b479656b9735091"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold ulp.",
            "VernacExtend",
            "9e560e414a15c4da6d704e34787237d738152786"
        ],
        [
            "case Req_bool_spec; intros H1.",
            "VernacExtend",
            "6f6c0b2218d148482371ffabe76473779f29d682"
        ],
        [
            "rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "1ddc34657bbaf0e1ed99f250c33e677f69023738"
        ],
        [
            "rewrite <- (Ropp_involutive x), H1; ring.",
            "VernacExtend",
            "46ea54b22829f32156e42f103ed9f4ce1148cf97"
        ],
        [
            "rewrite Req_bool_false.",
            "VernacExtend",
            "87c0332f4e178122c88f4ccd38e07b0c3d1931c8"
        ],
        [
            "now rewrite canonic_exp_opp.",
            "VernacExtend",
            "871b361b04a20878ff38a4a4b058b4dff94d5b28"
        ],
        [
            "intros H2; apply H1; rewrite H2; ring.",
            "VernacExtend",
            "778220a3a50348d483a10fb83f93d5c0c5fbb93e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_abs : forall x, ulp (Rabs x) = ulp x.",
            "VernacStartTheoremProof",
            "d9e580eb5dbae3eb8128d14b88ceda2558ab18dc"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold ulp; case (Req_bool_spec x 0); intros H1.",
            "VernacExtend",
            "7295cebcab8bbc3b2ac76db14a1d9adbfc0f13d3"
        ],
        [
            "rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "1ddc34657bbaf0e1ed99f250c33e677f69023738"
        ],
        [
            "now rewrite H1, Rabs_R0.",
            "VernacExtend",
            "56db45ecc64612800feb1c74bb80626591c2b1b0"
        ],
        [
            "rewrite Req_bool_false.",
            "VernacExtend",
            "87c0332f4e178122c88f4ccd38e07b0c3d1931c8"
        ],
        [
            "now rewrite canonic_exp_abs.",
            "VernacExtend",
            "44b2aef1a639bd55914aee93b3b6561ab562a348"
        ],
        [
            "now apply Rabs_no_R0.",
            "VernacExtend",
            "799535f6b2745ffc198f4b7b5a653816e4ede72a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_ge_0: forall x, (0 <= ulp x)%R.",
            "VernacStartTheoremProof",
            "662d5edd6054755bc4f7f6e30ffb20b4c27054f0"
        ],
        [
            "intros x; unfold ulp; case Req_bool_spec; intros.",
            "VernacExtend",
            "aadb5e5bd8cd07d4c9b0e56d2b24b4c824b20f0d"
        ],
        [
            "case negligible_exp; intros.",
            "VernacExtend",
            "d010bf10552c7e52151490d1f7d1561cb7410762"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_le_id: forall x, (0 < x)%R -> F x -> (ulp x <= x)%R.",
            "VernacStartTheoremProof",
            "ae9d3569b0ca8e7f2017caacc547c16592fa44a0"
        ],
        [
            "intros x Zx Fx.",
            "VernacExtend",
            "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
        ],
        [
            "rewrite <- (Rmult_1_l (ulp x)).",
            "VernacExtend",
            "87e567d239c62ccd33bee5e7356826f6abb33b9d"
        ],
        [
            "pattern x at 2; rewrite Fx.",
            "VernacExtend",
            "08b2ab5a1d7660b907aa90d5fc242aae9ba71a53"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "2: now apply Rgt_not_eq.",
            "VernacExtend",
            "31c101b0e129e41611531a67652122e8e2da84a6"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply (Z2R_le (Zsucc 0)).",
            "VernacExtend",
            "c69a76a91df9f09c0968a37ad959e00eecbec238"
        ],
        [
            "apply Zlt_le_succ.",
            "VernacExtend",
            "070de595889f014f0a173659377506422eb25080"
        ],
        [
            "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
            "VernacExtend",
            "cc50004bf078c7614bf88890b3bff694a33301de"
        ],
        [
            "now rewrite <- Fx.",
            "VernacExtend",
            "c7a603b21e388817cbad5f1ef8746b776a29bf93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_le_abs: forall x, (x <> 0)%R -> F x -> (ulp x <= Rabs x)%R.",
            "VernacStartTheoremProof",
            "d0023ebb466d8e086f809613d6ee172a6a6c5a71"
        ],
        [
            "intros x Zx Fx.",
            "VernacExtend",
            "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
        ],
        [
            "rewrite <- ulp_abs.",
            "VernacExtend",
            "0c095ca69ab4d10eed50cc3e3f8830eadef7c9e3"
        ],
        [
            "apply ulp_le_id.",
            "VernacExtend",
            "2cd3b70783af30a44249477eb94d86f3f3231002"
        ],
        [
            "now apply Rabs_pos_lt.",
            "VernacExtend",
            "6644e63c10a4ebb716152f3789ed696595825302"
        ],
        [
            "now apply generic_format_abs.",
            "VernacExtend",
            "97ee5b6fb3356b9dfee032d9e9aa0b99ec3a2227"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_DN_ulp : forall x, ~ F x -> round beta fexp Zceil x = (round beta fexp Zfloor x + ulp x)%R.",
            "VernacStartTheoremProof",
            "fcbbdd50d492cafa171d183ff8a24845a6c6a39e"
        ],
        [
            "intros x Fx.",
            "VernacExtend",
            "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Zceil_floor_neq.",
            "VernacExtend",
            "b4fc727910b2a0e4293920fe2596a742e2d62876"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Fx.",
            "VernacExtend",
            "540de9c00a7d19369574e8ecd876ced9348c1df9"
        ],
        [
            "unfold generic_format, F2R.",
            "VernacExtend",
            "395ed202f2878b051c40c4090c0991875bbabc9d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "now rewrite scaled_mantissa_mult_bpow.",
            "VernacExtend",
            "fab99b6471eeaf42de834b44e57b617fc8d6582a"
        ],
        [
            "intros V; apply Fx.",
            "VernacExtend",
            "b907386037de9e909bc59e2f114c15c723dfa425"
        ],
        [
            "rewrite V.",
            "VernacExtend",
            "22d30038d8005a7fbe2e5a5c28c65e4e9dc9d597"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_bpow : forall e, ulp (bpow e) = bpow (fexp (e + 1)).",
            "VernacStartTheoremProof",
            "ec518d6de7d39f96181fc17b8a09dc5f379a155e"
        ],
        [
            "intros e.",
            "VernacExtend",
            "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply canonic_exp_fexp.",
            "VernacExtend",
            "ba7969e9a351da992729f2c38274cc63b9ec6221"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "ring_simplify (e + 1 - 1)%Z.",
            "VernacExtend",
            "b3fad0b20c7b660308c7a98672f62e3c87191a96"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply bpow_lt.",
            "VernacExtend",
            "45b51ee535829682305d615af418ef00162d772b"
        ],
        [
            "apply Zlt_succ.",
            "VernacExtend",
            "f4cf5b932d8c774be510b7802fbeea627fe15261"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Rgt_not_eq, Rlt_gt, bpow_gt_0.",
            "VernacExtend",
            "642fdf2d374f8a7d651214d5afceb3d4fd17fa2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generic_format_ulp_0: F (ulp 0).",
            "VernacStartTheoremProof",
            "f9f24051e9de45ad5562845204d363e2cda81da3"
        ],
        [
            "unfold ulp.",
            "VernacExtend",
            "9e560e414a15c4da6d704e34787237d738152786"
        ],
        [
            "rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "1ddc34657bbaf0e1ed99f250c33e677f69023738"
        ],
        [
            "case negligible_exp_spec.",
            "VernacExtend",
            "5c480850adf5f7b9bb835a50c56f1be90974885d"
        ],
        [
            "intros _; apply generic_format_0.",
            "VernacExtend",
            "e8f840a66ad04d527f3a831a76c39fb13d42eef1"
        ],
        [
            "intros n H1.",
            "VernacExtend",
            "c2fbeb7e6bb47f8211ed4ff786ace830396c66ca"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generic_format_bpow_ge_ulp_0: forall e, (ulp 0 <= bpow e)%R -> F (bpow e).",
            "VernacStartTheoremProof",
            "fe09fe06173bb8320f3f8d6c3d8344d48bd6f2f9"
        ],
        [
            "intros e; unfold ulp.",
            "VernacExtend",
            "6e7685c233e7f69ba097964b668ddbd86484d031"
        ],
        [
            "rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "1ddc34657bbaf0e1ed99f250c33e677f69023738"
        ],
        [
            "case negligible_exp_spec.",
            "VernacExtend",
            "5c480850adf5f7b9bb835a50c56f1be90974885d"
        ],
        [
            "intros H1 _.",
            "VernacExtend",
            "6a4fc48a0ec5462f531cd626a9a096023cfc4f75"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "specialize (H1 (e+1)%Z); omega.",
            "VernacExtend",
            "2d8448e591bf3f0ee5c9e3dfce2e965c2edd2ca2"
        ],
        [
            "intros n H1 H2.",
            "VernacExtend",
            "c9e6fb4894cb92e0212ddec13f8eed3f418a82ee"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "case (Zle_or_lt (e+1) (fexp (e+1))); intros H4.",
            "VernacExtend",
            "eae847d05b9a6d8b63858dbf3bc0fcb6fc8ced95"
        ],
        [
            "absurd (e+1 <= e)%Z.",
            "VernacExtend",
            "77f89a6d144b93a981fa41f4110462d793543e0c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Zle_trans with (1:=H4).",
            "VernacExtend",
            "6f8da5d18ad029d388d6198c36b865b26244603d"
        ],
        [
            "replace (fexp (e+1)) with (fexp n).",
            "VernacExtend",
            "394dcc1560c280eea92d6d6e36b29d3aa15de5b6"
        ],
        [
            "now apply le_bpow with beta.",
            "VernacExtend",
            "61019a2fbfcc15ae05d39eafdf0368ee528edc57"
        ],
        [
            "now apply fexp_negligible_exp_eq.",
            "VernacExtend",
            "43389139faaf48344eaefa07da3d56044d7f4324"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generic_format_ulp: Exp_not_FTZ fexp -> forall x, F (ulp x).",
            "VernacStartTheoremProof",
            "39faa90cd13b1f6ffe5293264a39951817f1503e"
        ],
        [
            "unfold Exp_not_FTZ; intros H x.",
            "VernacExtend",
            "b01209f9703e7216c583d3f0550cd1011ade7ead"
        ],
        [
            "case (Req_dec x 0); intros Hx.",
            "VernacExtend",
            "c7eef59dd0c7db2a0be8efe921100bcf7bddb099"
        ],
        [
            "rewrite Hx; apply generic_format_ulp_0.",
            "VernacExtend",
            "645b9eafcca9e60de9bc1f0d05a7e92cdaca7a86"
        ],
        [
            "rewrite (ulp_neq_0 _ Hx).",
            "VernacExtend",
            "84a5809c9abc3e7404ef63abebdc615e5cc16131"
        ],
        [
            "apply generic_format_bpow; unfold canonic_exp.",
            "VernacExtend",
            "4175a017f06a8208116358635dd56e64333b8d98"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_FTZ_generic_format_ulp: (forall x, F (ulp x)) -> Exp_not_FTZ fexp.",
            "VernacStartTheoremProof",
            "fd77db6c0e8b783710f44330686714ecdcf93d3a"
        ],
        [
            "intros H e.",
            "VernacExtend",
            "c0918e4121b291004420d1eea713013aac79391b"
        ],
        [
            "specialize (H (bpow (e-1))).",
            "VernacExtend",
            "73ae4f689223bb24c26679893592e0f34ae16e6d"
        ],
        [
            "rewrite ulp_neq_0 in H.",
            "VernacExtend",
            "46c571abe001bae5ff6fa01579c9b88f605a1d22"
        ],
        [
            "2: apply Rgt_not_eq, bpow_gt_0.",
            "VernacExtend",
            "226fa0309c0acc0b0b497f6cce2b54ed68049250"
        ],
        [
            "unfold canonic_exp in H.",
            "VernacExtend",
            "f3f1cb2d5e98f0fdfa1736dfb49cf789ba806a00"
        ],
        [
            "rewrite ln_beta_bpow in H.",
            "VernacExtend",
            "83a6a5893268681a39bdef897aa5dc54f20fef66"
        ],
        [
            "apply generic_format_bpow_inv' in H...",
            "VernacExtend",
            "06602c7fca8c21fa2fb3d19004d0bf13257ed091"
        ],
        [
            "now replace (e-1+1)%Z with e in H by ring.",
            "VernacExtend",
            "b913093962cd85a44c326ee0ab2c90a657c5eefa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ulp_ge_ulp_0: Exp_not_FTZ fexp -> forall x, (ulp 0 <= ulp x)%R.",
            "VernacStartTheoremProof",
            "a2d63831ff5571cf7042fd090f5d7c97ebf4d6c0"
        ],
        [
            "unfold Exp_not_FTZ; intros H x.",
            "VernacExtend",
            "b01209f9703e7216c583d3f0550cd1011ade7ead"
        ],
        [
            "case (Req_dec x 0); intros Hx.",
            "VernacExtend",
            "c7eef59dd0c7db2a0be8efe921100bcf7bddb099"
        ],
        [
            "rewrite Hx; now right.",
            "VernacExtend",
            "107f692a7a3b1b2bdae126fbbf201087382dad54"
        ],
        [
            "unfold ulp at 1.",
            "VernacExtend",
            "0572dd797107af505ec1b3fd7217d0d0be6589cc"
        ],
        [
            "rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "1ddc34657bbaf0e1ed99f250c33e677f69023738"
        ],
        [
            "case negligible_exp_spec'.",
            "VernacExtend",
            "387a1196f38e55cdebc472e558dab276ab9e795a"
        ],
        [
            "intros (H1,H2); rewrite H1; apply ulp_ge_0.",
            "VernacExtend",
            "34a1eee53b125d9edd52ad6e4b7d02a6f31d7995"
        ],
        [
            "intros (n,(H1,H2)); rewrite H1.",
            "VernacExtend",
            "b16847e5599fbae7d4ab04725d0304d7d12e366a"
        ],
        [
            "rewrite ulp_neq_0; trivial.",
            "VernacExtend",
            "15f172fa8ef4443236132f274b2179ad6f15bde8"
        ],
        [
            "apply bpow_le; unfold canonic_exp.",
            "VernacExtend",
            "30cc6dfb6d281537599f4c69e9c1491280f8e138"
        ],
        [
            "generalize (ln_beta beta x); intros l.",
            "VernacExtend",
            "6d2c4ad6a732fddd73d829d8985983a031cea2ef"
        ],
        [
            "case (Zle_or_lt l (fexp l)); intros Hl.",
            "VernacExtend",
            "089137891b51aad7803a2cbf79099f4ad1dc83c1"
        ],
        [
            "rewrite (fexp_negligible_exp_eq n l); trivial; apply Zle_refl.",
            "VernacExtend",
            "30a03a62e843b3fea679d2c5d32415cc7d820ff7"
        ],
        [
            "case (Zle_or_lt (fexp n) (fexp l)); trivial; intros K.",
            "VernacExtend",
            "527409d0882e74d8d051a89667868ec4d31bf1f9"
        ],
        [
            "absurd (fexp n <= fexp l)%Z.",
            "VernacExtend",
            "fcd24461ca8181a6adbd11f809dca6c91d6deae3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Zle_trans with (2:= H _).",
            "VernacExtend",
            "588cdb1a8e26f88625f828f13ae6e6a60921b9a5"
        ],
        [
            "apply Zeq_le, sym_eq, valid_exp; trivial.",
            "VernacExtend",
            "1246873da1730e5433963261d16bf51114269465"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_FTZ_ulp_ge_ulp_0: (forall x, (ulp 0 <= ulp x)%R) -> Exp_not_FTZ fexp.",
            "VernacStartTheoremProof",
            "a9321f30301cf1e5cb458f6aeadd2a317f1e6691"
        ],
        [
            "intros H e.",
            "VernacExtend",
            "c0918e4121b291004420d1eea713013aac79391b"
        ],
        [
            "apply generic_format_bpow_inv' with beta.",
            "VernacExtend",
            "670530b20eb4792bd0acaec3865a626a08ac842c"
        ],
        [
            "apply generic_format_bpow_ge_ulp_0.",
            "VernacExtend",
            "ae5f5cbe439905eae531b6a112f974704be339f0"
        ],
        [
            "replace e with ((e-1)+1)%Z by ring.",
            "VernacExtend",
            "86331f953be658b9007651882faeb355dc02fc2c"
        ],
        [
            "rewrite <- ulp_bpow.",
            "VernacExtend",
            "3583c87799b90c621957d7179ad503aab9182bd8"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_le_pos : forall { Hm : Monotone_exp fexp }, forall x y: R, (0 <= x)%R -> (x <= y)%R -> (ulp x <= ulp y)%R.",
            "VernacStartTheoremProof",
            "c962188094368ff9e4bba1a198d45dfa30f81c44"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros Hm x y Hx Hxy.",
            "VernacExtend",
            "fa7276a8aa5c652ed841f712c00990ad1ddad62e"
        ],
        [
            "destruct Hx as [Hx|Hx].",
            "VernacExtend",
            "8e06011632e4360ed2b9155923e8542a0243f9b4"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "apply Hm.",
            "VernacExtend",
            "4945492c05b96129bcb747a3f727831b55a19496"
        ],
        [
            "now apply ln_beta_le.",
            "VernacExtend",
            "140d5e4fbab2c50a0cc169c19fd0644f7fead754"
        ],
        [
            "apply Rgt_not_eq, Rlt_gt.",
            "VernacExtend",
            "33d0568d5ebf1ccd3cff903866ed38aee8533e98"
        ],
        [
            "now apply Rlt_le_trans with (1:=Hx).",
            "VernacExtend",
            "cbf7a2ed280181e52be91fc7b112678bb4ab7c24"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "apply ulp_ge_ulp_0.",
            "VernacExtend",
            "881cae3982e9267541fdd8a8dd9dd77e4f0cb4b5"
        ],
        [
            "apply monotone_exp_not_FTZ...",
            "VernacExtend",
            "6706faa089af171c921d4ad492665426adba5e3d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_le : forall { Hm : Monotone_exp fexp }, forall x y: R, (Rabs x <= Rabs y)%R -> (ulp x <= ulp y)%R.",
            "VernacStartTheoremProof",
            "c72a9244721336cedc3097f5387cf8c2931295ad"
        ],
        [
            "intros Hm x y Hxy.",
            "VernacExtend",
            "8159a84e4f3d5626e25e4922a5f6e14fca8019df"
        ],
        [
            "rewrite <- ulp_abs.",
            "VernacExtend",
            "0c095ca69ab4d10eed50cc3e3f8830eadef7c9e3"
        ],
        [
            "rewrite <- (ulp_abs y).",
            "VernacExtend",
            "ad4e3a044e927a9e91b0721fce8fb6e944a122c1"
        ],
        [
            "apply ulp_le_pos; trivial.",
            "VernacExtend",
            "29357c9d9f6bbd6d623b9f4c5acb1ec85cdb9a74"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pred_pos x := if Req_bool x (bpow (ln_beta beta x - 1)) then (x - bpow (fexp (ln_beta beta x - 1)))%R else (x - ulp x)%R.",
            "VernacDefinition",
            "4af235dd731f37623d75f3e6399059e6844486dd"
        ],
        [
            "Definition succ x := if (Rle_bool 0 x) then (x+ulp x)%R else (- pred_pos (-x))%R.",
            "VernacDefinition",
            "10de507ba7e84cbe56919d497696e02364dc5262"
        ],
        [
            "Definition pred x := (- succ (-x))%R.",
            "VernacDefinition",
            "162aa09548f910bff25a097716ec479056493639"
        ],
        [
            "Theorem pred_eq_pos: forall x, (0 <= x)%R -> (pred x = pred_pos x)%R.",
            "VernacStartTheoremProof",
            "62de4b3e2543718d0488b3382d89e3eceb996847"
        ],
        [
            "intros x Hx; unfold pred, succ.",
            "VernacExtend",
            "7d3e5abe3a85d439a38ee30df38bcbfd9c36e8f0"
        ],
        [
            "case Rle_bool_spec; intros Hx'.",
            "VernacExtend",
            "840c7eed3675949342a5f09cc6e3eaa06385de77"
        ],
        [
            "assert (K:(x = 0)%R).",
            "VernacExtend",
            "d77db24a2b0c8642b32f0aa0e83e8186146596d7"
        ],
        [
            "apply Rle_antisym; try assumption.",
            "VernacExtend",
            "6ecd622569a23dc012cf733e50db077e701c2581"
        ],
        [
            "apply Ropp_le_cancel.",
            "VernacExtend",
            "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
        ],
        [
            "now rewrite Ropp_0.",
            "VernacExtend",
            "bdccb9115687197516836d66ef83b6f1d4aea72f"
        ],
        [
            "rewrite K; unfold pred_pos.",
            "VernacExtend",
            "ee0724e7ddb1a9e87f91b7583fc1040070a658f7"
        ],
        [
            "rewrite Req_bool_false.",
            "VernacExtend",
            "87c0332f4e178122c88f4ccd38e07b0c3d1931c8"
        ],
        [
            "2: apply Rlt_not_eq, bpow_gt_0.",
            "VernacExtend",
            "6d545a32d24a25d76326a6d9a2afb8a605cffa9b"
        ],
        [
            "rewrite Ropp_0; ring.",
            "VernacExtend",
            "aaa282434f6fb9c9d0d7698d817340c171aed35e"
        ],
        [
            "now rewrite 2!Ropp_involutive.",
            "VernacExtend",
            "d49564ef796bfefc79824afc48d8a66986310002"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_eq_pos: forall x, (0 <= x)%R -> (succ x = x + ulp x)%R.",
            "VernacStartTheoremProof",
            "5ae3f35717be09f94b6910f212c328e00d26024a"
        ],
        [
            "intros x Hx; unfold succ.",
            "VernacExtend",
            "3af217bf1eb51add6dec7fe7188b5423a166cfe0"
        ],
        [
            "now rewrite Rle_bool_true.",
            "VernacExtend",
            "071e49710b0aa0c91a38f1ec717fb16f7b0c1436"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_eq_opp_succ_opp: forall x, pred x = (- succ (-x))%R.",
            "VernacStartTheoremProof",
            "e558a56d7f24b60b8d7cf4edd6fa53c6898be629"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_eq_opp_pred_opp: forall x, succ x = (- pred (-x))%R.",
            "VernacStartTheoremProof",
            "1a59e2c4c49f5e91dbfbcd8c16c698bc8a1af369"
        ],
        [
            "intros x; unfold pred.",
            "VernacExtend",
            "64bb33c36b71891a13280f6302cdf5aaa8cefc9d"
        ],
        [
            "now rewrite 2!Ropp_involutive.",
            "VernacExtend",
            "d49564ef796bfefc79824afc48d8a66986310002"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_opp: forall x, (succ (-x) = - pred x)%R.",
            "VernacStartTheoremProof",
            "448ee029152814058add1a7692fc063314644c58"
        ],
        [
            "intros x; rewrite succ_eq_opp_pred_opp.",
            "VernacExtend",
            "682b567fe026a46d93e86b2c441d599510e06ee5"
        ],
        [
            "now rewrite Ropp_involutive.",
            "VernacExtend",
            "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_opp: forall x, (pred (-x) = - succ x)%R.",
            "VernacStartTheoremProof",
            "1908ce9f1b193530f228d5e750584d29a35c28de"
        ],
        [
            "intros x; rewrite pred_eq_opp_succ_opp.",
            "VernacExtend",
            "711379a8e86afd9242f83ffd60c173ef3f8b271a"
        ],
        [
            "now rewrite Ropp_involutive.",
            "VernacExtend",
            "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem id_m_ulp_ge_bpow : forall x e, F x -> x <> ulp x -> (bpow e < x)%R -> (bpow e <= x - ulp x)%R.",
            "VernacStartTheoremProof",
            "b50459b205af62330941d44d7bb43d6b116c203d"
        ],
        [
            "intros x e Fx Hx' Hx.",
            "VernacExtend",
            "9fb3b437ff982e82a88ae5da540affa5895285cc"
        ],
        [
            "assert (1 <= Ztrunc (scaled_mantissa beta fexp x))%Z.",
            "VernacExtend",
            "4f6751103de8382d657a0452bc81140fc2b29cd5"
        ],
        [
            "assert (0 < Ztrunc (scaled_mantissa beta fexp x))%Z.",
            "VernacExtend",
            "f474e47277fc2838cebced00c2295c86ea258b89"
        ],
        [
            "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
            "VernacExtend",
            "cc50004bf078c7614bf88890b3bff694a33301de"
        ],
        [
            "rewrite <- Fx.",
            "VernacExtend",
            "3eb9ff71c5f9468a2df9b7f7943d9ba7bc8d3704"
        ],
        [
            "apply Rle_lt_trans with (2:=Hx).",
            "VernacExtend",
            "6f4ed50de93b15e6078a10a54947a690658815ec"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "case (Zle_lt_or_eq _ _ H); intros Hm.",
            "VernacExtend",
            "8b33948acc9b9fcca9f05c32bbeac3f17c794cc5"
        ],
        [
            "pattern x at 1 ; rewrite Fx.",
            "VernacExtend",
            "e7212daf1b2eadf4c14b78c97ccdd2962dbbb4ad"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "pattern (bpow (canonic_exp beta fexp x)) at 2 ; rewrite <- Rmult_1_l.",
            "VernacExtend",
            "511c7a4363ae3d36fcc66fd6f75ac47096e04b52"
        ],
        [
            "rewrite <- Rmult_minus_distr_r.",
            "VernacExtend",
            "18758e497e8bc01cec62916b73173699aa395eff"
        ],
        [
            "change 1%R with (Z2R 1).",
            "VernacExtend",
            "70dd8f0fc2009fb1b2dbc2766a6144484b011676"
        ],
        [
            "rewrite <- Z2R_minus.",
            "VernacExtend",
            "7d4fecf8931f8ca938d25720366e724d7310a2f3"
        ],
        [
            "change (bpow e <= F2R (Float beta (Ztrunc (scaled_mantissa beta fexp x) - 1) (canonic_exp beta fexp x)))%R.",
            "VernacExtend",
            "9dec8a2e15935ce119d8d5e67df2ac866b513518"
        ],
        [
            "apply bpow_le_F2R_m1; trivial.",
            "VernacExtend",
            "2ea72f691c64b7a8d25c0aac8426c99be676f35e"
        ],
        [
            "now rewrite <- Fx.",
            "VernacExtend",
            "c7a603b21e388817cbad5f1ef8746b776a29bf93"
        ],
        [
            "apply Rgt_not_eq, Rlt_gt.",
            "VernacExtend",
            "33d0568d5ebf1ccd3cff903866ed38aee8533e98"
        ],
        [
            "apply Rlt_trans with (2:=Hx), bpow_gt_0.",
            "VernacExtend",
            "1a0c15a4ad3fde8623b1bd7bc5b314e2d711ef85"
        ],
        [
            "contradict Hx'.",
            "VernacExtend",
            "bf2a53f1fd9a939e1ad8f050ced0e409e56ec4da"
        ],
        [
            "pattern x at 1; rewrite Fx.",
            "VernacExtend",
            "e7212daf1b2eadf4c14b78c97ccdd2962dbbb4ad"
        ],
        [
            "rewrite <- Hm.",
            "VernacExtend",
            "69ec748689bbf57009285e1da612c01efdea5784"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "now rewrite Rmult_1_l.",
            "VernacExtend",
            "39aa2da5739377940b431b8d8d8fd48176888975"
        ],
        [
            "apply Rgt_not_eq, Rlt_gt.",
            "VernacExtend",
            "33d0568d5ebf1ccd3cff903866ed38aee8533e98"
        ],
        [
            "apply Rlt_trans with (2:=Hx), bpow_gt_0.",
            "VernacExtend",
            "1a0c15a4ad3fde8623b1bd7bc5b314e2d711ef85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem id_p_ulp_le_bpow : forall x e, (0 < x)%R -> F x -> (x < bpow e)%R -> (x + ulp x <= bpow e)%R.",
            "VernacStartTheoremProof",
            "3e19db5ccb6600954752667c01161ff5b908d989"
        ],
        [
            "intros x e Zx Fx Hx.",
            "VernacExtend",
            "54e37ae8403fc3779f5bdc589390b0eb5885085c"
        ],
        [
            "pattern x at 1 ; rewrite Fx.",
            "VernacExtend",
            "e7212daf1b2eadf4c14b78c97ccdd2962dbbb4ad"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "pattern (bpow (canonic_exp beta fexp x)) at 2 ; rewrite <- Rmult_1_l.",
            "VernacExtend",
            "511c7a4363ae3d36fcc66fd6f75ac47096e04b52"
        ],
        [
            "rewrite <- Rmult_plus_distr_r.",
            "VernacExtend",
            "fc7ad719ee7ef2a698d7f17e2549071dcd77682e"
        ],
        [
            "change 1%R with (Z2R 1).",
            "VernacExtend",
            "70dd8f0fc2009fb1b2dbc2766a6144484b011676"
        ],
        [
            "rewrite <- Z2R_plus.",
            "VernacExtend",
            "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
        ],
        [
            "change (F2R (Float beta (Ztrunc (scaled_mantissa beta fexp x) + 1) (canonic_exp beta fexp x)) <= bpow e)%R.",
            "VernacExtend",
            "8526fbc3c10035d29ac7544c2258ce0c79da153f"
        ],
        [
            "apply F2R_p1_le_bpow.",
            "VernacExtend",
            "c1b5e1f22cf9a6557a3b52b37e6c09bc01cd4f13"
        ],
        [
            "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
            "VernacExtend",
            "cc50004bf078c7614bf88890b3bff694a33301de"
        ],
        [
            "now rewrite <- Fx.",
            "VernacExtend",
            "c7a603b21e388817cbad5f1ef8746b776a29bf93"
        ],
        [
            "now rewrite <- Fx.",
            "VernacExtend",
            "c7a603b21e388817cbad5f1ef8746b776a29bf93"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generic_format_pred_aux1: forall x, (0 < x)%R -> F x -> x <> bpow (ln_beta beta x - 1) -> F (x - ulp x).",
            "VernacStartTheoremProof",
            "7e0d3e66fbdd3a42471833eacf716126f01582e2"
        ],
        [
            "intros x Zx Fx Hx.",
            "VernacExtend",
            "b1c758dac630e193780b6cf37d3e70f73517516c"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Ex).",
            "VernacExtend",
            "4ae43c504e4028726c85ec9490254355ab7e753f"
        ],
        [
            "simpl in Hx.",
            "VernacExtend",
            "5ec81d98094402995a527f35cf2e3fc289afc828"
        ],
        [
            "specialize (Ex (Rgt_not_eq _ _ Zx)).",
            "VernacExtend",
            "d32f4b8f8b177c6cdab4fdf20d1f94264ecc69ca"
        ],
        [
            "assert (Ex' : (bpow (ex - 1) < x < bpow ex)%R).",
            "VernacExtend",
            "64029fadb59c293920e745ca3ac9c251856709d8"
        ],
        [
            "rewrite Rabs_pos_eq in Ex.",
            "VernacExtend",
            "b2d026151c1616c084a1cae6f2bc2694e83410ff"
        ],
        [
            "destruct Ex as (H,H'); destruct H; split; trivial.",
            "VernacExtend",
            "c2e4223615a40286bcd14a5d9fa04803f68d349d"
        ],
        [
            "contradict Hx; easy.",
            "VernacExtend",
            "c62d736e16941336130da9fbc61062390c87dcac"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "unfold generic_format, scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "de5b77fe63834fa08b5f256387ac961205f531a0"
        ],
        [
            "rewrite ln_beta_unique with beta (x - ulp x)%R ex.",
            "VernacExtend",
            "fbce43df351f4029e8fd49a45ca37b4956c620ff"
        ],
        [
            "pattern x at 1 3 ; rewrite Fx.",
            "VernacExtend",
            "f5b7e4c9c105c3121cf94eaa23543d47865fdf39"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite canonic_exp_fexp with (1 := Ex).",
            "VernacExtend",
            "e86367c4913cc8cd4260e235dd6d5b822e8e0823"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_minus_distr_r.",
            "VernacExtend",
            "7cac6f5a93014aab094ca24fb3f582a08cd1bfe3"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
        ],
        [
            "rewrite <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
            "VernacExtend",
            "ed523a468f00f96e47b6acbefb29512258a153e8"
        ],
        [
            "change (bpow 0) with (Z2R 1).",
            "VernacExtend",
            "b72f70d42f3227f295cea686fa67bfbd1260f313"
        ],
        [
            "rewrite <- Z2R_minus.",
            "VernacExtend",
            "7d4fecf8931f8ca938d25720366e724d7310a2f3"
        ],
        [
            "rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
        ],
        [
            "rewrite Z2R_minus.",
            "VernacExtend",
            "75c0e17ece028e1c09696e50b0c135aa8a6471e2"
        ],
        [
            "rewrite Rmult_minus_distr_r.",
            "VernacExtend",
            "7cac6f5a93014aab094ca24fb3f582a08cd1bfe3"
        ],
        [
            "now rewrite Rmult_1_l.",
            "VernacExtend",
            "39aa2da5739377940b431b8d8d8fd48176888975"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply id_m_ulp_ge_bpow; trivial.",
            "VernacExtend",
            "fe027238cdb25b53c95f6f01d914a215ef19db07"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "assert (ex-1 < canonic_exp beta fexp x < ex)%Z.",
            "VernacExtend",
            "2d45e089698149bea7302ec584a2215b504ce053"
        ],
        [
            "split ; apply (lt_bpow beta) ; rewrite <- H ; easy.",
            "VernacExtend",
            "57892739b47a6e4862cc2d3889768451ec84a834"
        ],
        [
            "clear -H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "apply Ex'.",
            "VernacExtend",
            "b093cc24e001666e1fa4d782a1829010f89ea6e3"
        ],
        [
            "apply Rle_lt_trans with (2 := proj2 Ex').",
            "VernacExtend",
            "3e99d73295235deca1554e5f13bcb1a424db17a9"
        ],
        [
            "pattern x at 3 ; rewrite <- Rplus_0_r.",
            "VernacExtend",
            "4ae14a033123343b675cbc564af019e7738cdb4b"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "rewrite <-Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply ulp_ge_0.",
            "VernacExtend",
            "5d0ce5d17ef4f7c6c49a717ed77dfcf0148cc9ed"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "pattern x at 2; rewrite Fx.",
            "VernacExtend",
            "08b2ab5a1d7660b907aa90d5fc242aae9ba71a53"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "pattern (bpow (canonic_exp beta fexp x)) at 1; rewrite <- Rmult_1_l.",
            "VernacExtend",
            "4867dca71fef6bf901112ed251a7a2eb41a4c34c"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "replace 1%R with (Z2R 1) by reflexivity.",
            "VernacExtend",
            "1b169d9ffd7913b0db06d38db9371ae76c3b87c1"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "assert (0 < Ztrunc (scaled_mantissa beta fexp x))%Z.",
            "VernacExtend",
            "f474e47277fc2838cebced00c2295c86ea258b89"
        ],
        [
            "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
            "VernacExtend",
            "cc50004bf078c7614bf88890b3bff694a33301de"
        ],
        [
            "rewrite <- Fx.",
            "VernacExtend",
            "3eb9ff71c5f9468a2df9b7f7943d9ba7bc8d3704"
        ],
        [
            "apply Rle_lt_trans with (2:=proj1 Ex').",
            "VernacExtend",
            "91c205acaf3024be645843aacfb40b21ff96fab3"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generic_format_pred_aux2 : forall x, (0 < x)%R -> F x -> let e := ln_beta_val beta x (ln_beta beta x) in x = bpow (e - 1) -> F (x - bpow (fexp (e - 1))).",
            "VernacStartTheoremProof",
            "759a9008c8849c22f776850622fdc1ab7a6904be"
        ],
        [
            "intros x Zx Fx e Hx.",
            "VernacExtend",
            "835c3c2d1eec907889f53997257ba92e849df7c5"
        ],
        [
            "pose (f:=(x - bpow (fexp (e - 1)))%R).",
            "VernacExtend",
            "b57d526752a79a75f647f836827184458d887547"
        ],
        [
            "fold f.",
            "VernacExtend",
            "de58e7b99431eb33ee9d868e71f2efdc8167d769"
        ],
        [
            "assert (He:(fexp (e-1) <= e-1)%Z).",
            "VernacExtend",
            "68332d021aba90b0f8abc850a0e5f55495d75da5"
        ],
        [
            "apply generic_format_bpow_inv with beta; trivial.",
            "VernacExtend",
            "0312aa3ed927dfae0a82c2f1880a36bf5277a17a"
        ],
        [
            "rewrite <- Hx; assumption.",
            "VernacExtend",
            "4fb1493c9ee15a240b9dfe90adde9430f6e03981"
        ],
        [
            "case (Zle_lt_or_eq _ _ He); clear He; intros He.",
            "VernacExtend",
            "6d2dd3421c5fb7fb760b5385f251e19b6ffce606"
        ],
        [
            "assert (f = F2R (Float beta (Zpower beta (e-1-(fexp (e-1))) -1) (fexp (e-1))))%R.",
            "VernacExtend",
            "cc07b8de8090a05c2e2a49db1b518dd625948863"
        ],
        [
            "unfold f; rewrite Hx.",
            "VernacExtend",
            "15c2c09ff8b2e7a6c351e57146de3d8fc3604859"
        ],
        [
            "unfold F2R; simpl.",
            "VernacExtend",
            "a8b73d273d1c692e5deb932d4bd557029927ed13"
        ],
        [
            "rewrite Z2R_minus, Z2R_Zpower.",
            "VernacExtend",
            "b351058e08399db0bf37161e96987314ab897a70"
        ],
        [
            "rewrite Rmult_minus_distr_r, Rmult_1_l.",
            "VernacExtend",
            "ca21cbaa8baff6f996b717d075323593050ca5ce"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "now replace (e - 1 - fexp (e - 1) + fexp (e - 1))%Z with (e-1)%Z by ring.",
            "VernacExtend",
            "c899e5f85ce8db0f843e3036a2252d1e526e4429"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "apply Zeq_le.",
            "VernacExtend",
            "15b2cfeee43457d9d2d9b5468b18e659a52650cf"
        ],
        [
            "apply canonic_exp_fexp.",
            "VernacExtend",
            "ba7969e9a351da992729f2c38274cc63b9ec6221"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "unfold f; rewrite Hx.",
            "VernacExtend",
            "15c2c09ff8b2e7a6c351e57146de3d8fc3604859"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "9b60731d6b608338747f09fec19f24d12baad022"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rplus_le_reg_l with (bpow (fexp (e-1))).",
            "VernacExtend",
            "5a6a5ed0f7fb14f7f3c6511ebaa71d9d6e5978ea"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply Rle_trans with (bpow (e - 2) + bpow (e - 2))%R.",
            "VernacExtend",
            "67a1a9427ec2697b0fa65b81a0db8db1aa34d036"
        ],
        [
            "apply Rplus_le_compat ; apply bpow_le ; omega.",
            "VernacExtend",
            "dc35b4eecc7df1eb5a429e8eb3ef34ce59c25dfb"
        ],
        [
            "apply Rle_trans with (2*bpow (e - 2))%R;[right; ring|idtac].",
            "VernacExtend",
            "a049d897dc61bd966ca22929bf6ad176ff0e5a36"
        ],
        [
            "apply Rle_trans with (bpow 1*bpow (e - 2))%R.",
            "VernacExtend",
            "f21b87d02395d6316685f19610a8f4c565b28ec9"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "replace 2%R with (Z2R 2) by reflexivity.",
            "VernacExtend",
            "2a88aa789df458555e3360a653317448d10e185c"
        ],
        [
            "replace (bpow 1) with (Z2R beta).",
            "VernacExtend",
            "6279da19e37728e549d53f2ce737ad79d913bfb4"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "apply <- Zle_is_le_bool.",
            "VernacExtend",
            "ea954b2f99b94cb74e9119fa25034596bca40790"
        ],
        [
            "now destruct beta.",
            "VernacExtend",
            "0c19ff5aa6b3ad93137e505451b7b05645e5144a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Zpower_pos; simpl.",
            "VernacExtend",
            "d9e7e90469a292f63d6afd5dc7e55b9f2466bd06"
        ],
        [
            "now rewrite Zmult_1_r.",
            "VernacExtend",
            "f6f70bbb1f374ceb32e4d41d5982648e20013849"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "replace (1+(e-2))%Z with (e-1)%Z by ring.",
            "VernacExtend",
            "e030d5234a1cc37cd5669d78a5ee0043e4f6d1e7"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "rewrite <- Rplus_0_r.",
            "VernacExtend",
            "9c14ce628bea4e8dc982de42fd460ab22bb09911"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Rle_ge; apply Rle_0_minus.",
            "VernacExtend",
            "d9cf44a251207e029bc076bf6b3fe1a414f2ff45"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "replace f with 0%R.",
            "VernacExtend",
            "fe5a9cda92b6cb9dd96870e0b9478a082fc94f45"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "unfold f.",
            "VernacExtend",
            "54a386f4161710b69df4a2025df24a14e842ecf2"
        ],
        [
            "rewrite Hx, He.",
            "VernacExtend",
            "356e0aa8239a5fef020af60062b2c609378e5eba"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_succ_aux1 : forall x, (0 < x)%R -> F x -> F (x + ulp x).",
            "VernacStartTheoremProof",
            "dfec50e43666bf8bf32d0e68467420e262499d15"
        ],
        [
            "intros x Zx Fx.",
            "VernacExtend",
            "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Ex).",
            "VernacExtend",
            "4ae43c504e4028726c85ec9490254355ab7e753f"
        ],
        [
            "specialize (Ex (Rgt_not_eq _ _ Zx)).",
            "VernacExtend",
            "d32f4b8f8b177c6cdab4fdf20d1f94264ecc69ca"
        ],
        [
            "assert (Ex' := Ex).",
            "VernacExtend",
            "f986ce32a30bf2cd6ed64062f0e34f3f9e1d9c20"
        ],
        [
            "rewrite Rabs_pos_eq in Ex'.",
            "VernacExtend",
            "e947027049138c0f1c65be75542abaf5a1843140"
        ],
        [
            "destruct (id_p_ulp_le_bpow x ex) ; try easy.",
            "VernacExtend",
            "366cb261954e2185e5c5edc4df53fa096f7c7cdc"
        ],
        [
            "unfold generic_format, scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "de5b77fe63834fa08b5f256387ac961205f531a0"
        ],
        [
            "rewrite ln_beta_unique with beta (x + ulp x)%R ex.",
            "VernacExtend",
            "52e5282729aba96b0d661b545a56cb39753da219"
        ],
        [
            "pattern x at 1 3 ; rewrite Fx.",
            "VernacExtend",
            "f5b7e4c9c105c3121cf94eaa23543d47865fdf39"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite canonic_exp_fexp with (1 := Ex).",
            "VernacExtend",
            "e86367c4913cc8cd4260e235dd6d5b822e8e0823"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_plus_distr_r.",
            "VernacExtend",
            "ddbb6f4dc1ffc967497bf9fa73715334cda5e5a0"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
        ],
        [
            "rewrite <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
            "VernacExtend",
            "ed523a468f00f96e47b6acbefb29512258a153e8"
        ],
        [
            "change (bpow 0) with (Z2R 1).",
            "VernacExtend",
            "b72f70d42f3227f295cea686fa67bfbd1260f313"
        ],
        [
            "rewrite <- Z2R_plus.",
            "VernacExtend",
            "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
        ],
        [
            "rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "rewrite Rmult_plus_distr_r.",
            "VernacExtend",
            "ddbb6f4dc1ffc967497bf9fa73715334cda5e5a0"
        ],
        [
            "now rewrite Rmult_1_l.",
            "VernacExtend",
            "39aa2da5739377940b431b8d8d8fd48176888975"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (1 := proj1 Ex').",
            "VernacExtend",
            "7f5271d4b09a97d29897708e5837b48e312ff830"
        ],
        [
            "pattern x at 1 ; rewrite <- Rplus_0_r.",
            "VernacExtend",
            "8042e1391a755f4c111ac2347fda459e8a49458e"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply ulp_ge_0.",
            "VernacExtend",
            "5d0ce5d17ef4f7c6c49a717ed77dfcf0148cc9ed"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "apply Rplus_le_le_0_compat.",
            "VernacExtend",
            "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply ulp_ge_0.",
            "VernacExtend",
            "5d0ce5d17ef4f7c6c49a717ed77dfcf0148cc9ed"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "apply valid_exp.",
            "VernacExtend",
            "9335fa4770b756f93530fd54152de0507ba39d3b"
        ],
        [
            "destruct (Zle_or_lt ex (fexp ex)) ; trivial.",
            "VernacExtend",
            "e774f3f91253c19f2469a97d66a9dd085822eb4f"
        ],
        [
            "elim Rlt_not_le with (1 := Zx).",
            "VernacExtend",
            "0c141297a39994f6f866d806bc858accbe738c92"
        ],
        [
            "rewrite Fx.",
            "VernacExtend",
            "6d5fef6b9bb5c0abc3b57cf7001ef10fc8718bc8"
        ],
        [
            "replace (Ztrunc (scaled_mantissa beta fexp x)) with Z0.",
            "VernacExtend",
            "0911f4ffa5b7aaa6fc62cd630f220f1836fdc013"
        ],
        [
            "rewrite F2R_0.",
            "VernacExtend",
            "2b1ed44aa307676d6672cc7c6a6e12102bae31de"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite canonic_exp_fexp with (1 := Ex).",
            "VernacExtend",
            "e86367c4913cc8cd4260e235dd6d5b822e8e0823"
        ],
        [
            "destruct (mantissa_small_pos beta fexp x ex) ; trivial.",
            "VernacExtend",
            "fcb332db01bef34d67b5b58b226b09830b67dd05"
        ],
        [
            "rewrite Ztrunc_floor.",
            "VernacExtend",
            "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_pred_pos : forall x, F x -> (0 < x)%R -> F (pred_pos x).",
            "VernacStartTheoremProof",
            "ab24f436b0cc0773389dced9eae19a072f09d70f"
        ],
        [
            "intros x Fx Zx.",
            "VernacExtend",
            "03cf147ba97dd8bf0db382e691e41808a8fe3178"
        ],
        [
            "unfold pred_pos; case Req_bool_spec; intros H.",
            "VernacExtend",
            "0832f47d5ba8c5f3cb8266e02ce72cd3b6309438"
        ],
        [
            "now apply generic_format_pred_aux2.",
            "VernacExtend",
            "73caa6d42f13db15d5b18e2c4e53276fc441b2aa"
        ],
        [
            "now apply generic_format_pred_aux1.",
            "VernacExtend",
            "ccc28b3618bf1e8cc92c37e23b1b41e42842ae95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_succ : forall x, F x -> F (succ x).",
            "VernacStartTheoremProof",
            "4aa25b403a1b27e2cc7f964553007332b77786ce"
        ],
        [
            "intros x Fx.",
            "VernacExtend",
            "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
        ],
        [
            "unfold succ; case Rle_bool_spec; intros Zx.",
            "VernacExtend",
            "5882c68e3e65f3bd8a7474148ff5e9e55b4ca560"
        ],
        [
            "destruct Zx as [Zx|Zx].",
            "VernacExtend",
            "39d1826664a3495b71216dd505fb8e8a7800bc49"
        ],
        [
            "now apply generic_format_succ_aux1.",
            "VernacExtend",
            "fb5230ce7e90fe3a42fe4340a93810150389ecbf"
        ],
        [
            "rewrite <- Zx, Rplus_0_l.",
            "VernacExtend",
            "4d120c1ad37d6043f0fe977ce84797d3c593c1c8"
        ],
        [
            "apply generic_format_ulp_0.",
            "VernacExtend",
            "3ba2b27c1856c8fdb00489921a23acba6284f67c"
        ],
        [
            "apply generic_format_opp.",
            "VernacExtend",
            "62be59b59957b39ddc7a6a91ae10b7eda813132a"
        ],
        [
            "apply generic_format_pred_pos.",
            "VernacExtend",
            "8636c3bf56fb0309b36680ba767bf38c4d798acb"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_pred : forall x, F x -> F (pred x).",
            "VernacStartTheoremProof",
            "9a468aa5fc1869586b0a47f13edbaed57617689d"
        ],
        [
            "intros x Fx.",
            "VernacExtend",
            "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
        ],
        [
            "unfold pred.",
            "VernacExtend",
            "6e45067cb52c62b8c79e0cd80f271215f39c71fa"
        ],
        [
            "apply generic_format_opp.",
            "VernacExtend",
            "62be59b59957b39ddc7a6a91ae10b7eda813132a"
        ],
        [
            "apply generic_format_succ.",
            "VernacExtend",
            "c461ec379d3a210b2836d07793074fffa2f70529"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_pos_lt_id : forall x, (x <> 0)%R -> (pred_pos x < x)%R.",
            "VernacStartTheoremProof",
            "6763915c38f9e9b7e849c4ccaf8b84f1fa999bc8"
        ],
        [
            "intros x Zx.",
            "VernacExtend",
            "08f1bfaa3e93c75720cd0db10b7702c6fc3946cd"
        ],
        [
            "unfold pred_pos.",
            "VernacExtend",
            "00032b62c2ff86fd6d2463b95a8824b80bdd0bbf"
        ],
        [
            "case Req_bool_spec; intros H.",
            "VernacExtend",
            "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
        ],
        [
            "rewrite <- Rplus_0_r.",
            "VernacExtend",
            "9c14ce628bea4e8dc982de42fd460ab22bb09911"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite <- Rplus_0_r.",
            "VernacExtend",
            "9c14ce628bea4e8dc982de42fd460ab22bb09911"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "rewrite ulp_neq_0; trivial.",
            "VernacExtend",
            "15f172fa8ef4443236132f274b2179ad6f15bde8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_gt_id : forall x, (x <> 0)%R -> (x < succ x)%R.",
            "VernacStartTheoremProof",
            "b8746bc1bf47e43f8a323a911c6e4f3c1d5da5fa"
        ],
        [
            "intros x Zx; unfold succ.",
            "VernacExtend",
            "f0200cf9b125dcb1a113c65ba08338d68c1f92d2"
        ],
        [
            "case Rle_bool_spec; intros Hx.",
            "VernacExtend",
            "181acf1e48a76558a97f2b4e114a33e12418b402"
        ],
        [
            "pattern x at 1; rewrite <- (Rplus_0_r x).",
            "VernacExtend",
            "a91e8e3fb241bfb6d56c92e4a0f26a40df1d56a8"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite ulp_neq_0; trivial.",
            "VernacExtend",
            "15f172fa8ef4443236132f274b2179ad6f15bde8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "pattern x at 1; rewrite <- (Ropp_involutive x).",
            "VernacExtend",
            "046990090bb4bae8343ee8707756e127002a9a07"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "apply pred_pos_lt_id.",
            "VernacExtend",
            "4d4c19a92aa6248b0649cd4f7858be4879b4a920"
        ],
        [
            "now auto with real.",
            "VernacExtend",
            "ed65101a4bf5ea3c345b08a08e4a22201bc38a3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_lt_id : forall x, (x <> 0)%R -> (pred x < x)%R.",
            "VernacStartTheoremProof",
            "7572958744b6d42f70505d1252c67a0cd68b6ff5"
        ],
        [
            "intros x Zx; unfold pred.",
            "VernacExtend",
            "32a6993e269a39fcd45b88b67e93f1d3382c8586"
        ],
        [
            "pattern x at 2; rewrite <- (Ropp_involutive x).",
            "VernacExtend",
            "85d9d0674aa177d2c1e9816b19cc191cabe2a17b"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "apply succ_gt_id.",
            "VernacExtend",
            "855a990f520df43d8f675f50aeeac64505b12d10"
        ],
        [
            "now auto with real.",
            "VernacExtend",
            "ed65101a4bf5ea3c345b08a08e4a22201bc38a3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_ge_id : forall x, (x <= succ x)%R.",
            "VernacStartTheoremProof",
            "8f311cbe8c70f2d08c3ec17b938da3c9ff74e2bc"
        ],
        [
            "intros x; case (Req_dec x 0).",
            "VernacExtend",
            "836703e2b43f55d55d1160d52a760cbadce3f737"
        ],
        [
            "intros V; rewrite V.",
            "VernacExtend",
            "2bfe8545237a50d26081a107d0a9653ec3fbb491"
        ],
        [
            "unfold succ; rewrite Rle_bool_true;[idtac|now right].",
            "VernacExtend",
            "68703279e466794a1c8c80c4666bed91be4f074d"
        ],
        [
            "rewrite Rplus_0_l; apply ulp_ge_0.",
            "VernacExtend",
            "304ea718811371e4bfa18207fbc08a65bb8e78cb"
        ],
        [
            "intros; left; now apply succ_gt_id.",
            "VernacExtend",
            "20c4682d4db1ad9f33c6f056d3b280a4e4d1a61e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_le_id : forall x, (pred x <= x)%R.",
            "VernacStartTheoremProof",
            "5f885e8cb00033e51842220e05260a3db5d48981"
        ],
        [
            "intros x; unfold pred.",
            "VernacExtend",
            "64bb33c36b71891a13280f6302cdf5aaa8cefc9d"
        ],
        [
            "pattern x at 2; rewrite <- (Ropp_involutive x).",
            "VernacExtend",
            "85d9d0674aa177d2c1e9816b19cc191cabe2a17b"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply succ_ge_id.",
            "VernacExtend",
            "f21fdfecc025a3ee62ed34f4983e6a2ca56ac619"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_pos_ge_0 : forall x, (0 < x)%R -> F x -> (0 <= pred_pos x)%R.",
            "VernacStartTheoremProof",
            "7dd8f4cd7fc0dad4dc64899630297c05216ff16c"
        ],
        [
            "intros x Zx Fx.",
            "VernacExtend",
            "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
        ],
        [
            "unfold pred_pos.",
            "VernacExtend",
            "00032b62c2ff86fd6d2463b95a8824b80bdd0bbf"
        ],
        [
            "case Req_bool_spec; intros H.",
            "VernacExtend",
            "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "destruct (ln_beta beta x) as (ex,Ex) ; simpl.",
            "VernacExtend",
            "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
        ],
        [
            "rewrite ln_beta_bpow.",
            "VernacExtend",
            "562ed7a7f197615f8fb2cc276e6bc8e10357a919"
        ],
        [
            "ring_simplify (ex - 1 + 1 - 1)%Z.",
            "VernacExtend",
            "f5267ccef10c59eba31ddec7257ccde6a5c3a7e7"
        ],
        [
            "apply generic_format_bpow_inv with beta; trivial.",
            "VernacExtend",
            "0312aa3ed927dfae0a82c2f1880a36bf5277a17a"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite <- H; assumption.",
            "VernacExtend",
            "a97c9ef724ad863a1649a87e1183b8c29f2d0f87"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "now apply ulp_le_id.",
            "VernacExtend",
            "25b3942c873e1e0c1260d5e442f5fa2e864d9226"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_ge_0 : forall x, (0 < x)%R -> F x -> (0 <= pred x)%R.",
            "VernacStartTheoremProof",
            "b4fa6fea2d159df9590f009f4a4194ed3575b875"
        ],
        [
            "intros x Zx Fx.",
            "VernacExtend",
            "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
        ],
        [
            "rewrite pred_eq_pos.",
            "VernacExtend",
            "a7913ee32dc142a4ef5976fb55d4794a82f1003a"
        ],
        [
            "now apply pred_pos_ge_0.",
            "VernacExtend",
            "cd080dca294f509925e5a873551f88ac891ef128"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_pos_plus_ulp_aux1 : forall x, (0 < x)%R -> F x -> x <> bpow (ln_beta beta x - 1) -> ((x - ulp x) + ulp (x-ulp x) = x)%R.",
            "VernacStartTheoremProof",
            "0ef00304106a350f3174de2b456dc592224089e4"
        ],
        [
            "intros x Zx Fx Hx.",
            "VernacExtend",
            "b1c758dac630e193780b6cf37d3e70f73517516c"
        ],
        [
            "replace (ulp (x - ulp x)) with (ulp x).",
            "VernacExtend",
            "d46b7fe0ea5eda536bccdb0659c42202d9a78224"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (H:(x <> 0)%R) by auto with real.",
            "VernacExtend",
            "5adf291f57af74e80f44680b1a44258c095921d0"
        ],
        [
            "assert (H':(x <> bpow (canonic_exp beta fexp x))%R).",
            "VernacExtend",
            "f7d3b74d580e7263fa046833026a988ebafb67bc"
        ],
        [
            "unfold canonic_exp; intros M.",
            "VernacExtend",
            "36d028f187b128425b171b5aadd603cb12d1a305"
        ],
        [
            "case_eq (ln_beta beta x); intros ex Hex T.",
            "VernacExtend",
            "f63904e87a2bf714c324561fbfa1e1373ef63ea0"
        ],
        [
            "assert (Lex:(ln_beta_val beta x (ln_beta beta x) = ex)%Z).",
            "VernacExtend",
            "b0625f9d6b59451c38ef1977393017d0740ef54a"
        ],
        [
            "rewrite T; reflexivity.",
            "VernacExtend",
            "85bc6eac8390dcb97575cab4da892fc2f1bd25e8"
        ],
        [
            "rewrite Lex in *.",
            "VernacExtend",
            "26151c78360067f771a8cbfb3d84c2e15f9d82fc"
        ],
        [
            "clear T; simpl in *; specialize (Hex H).",
            "VernacExtend",
            "2c4a8057770e5d9a149912e48819f8281e3cffef"
        ],
        [
            "rewrite Rabs_right in Hex.",
            "VernacExtend",
            "04fcece331bc1848bb34ed32d86d623962f4a689"
        ],
        [
            "2: apply Rle_ge; apply Rlt_le; easy.",
            "VernacExtend",
            "170dfa6abc299a9b67b657dd9cf405b9da136264"
        ],
        [
            "assert (ex-1 < fexp ex < ex)%Z.",
            "VernacExtend",
            "14a05506627f1c4dd51c59c1eac5998a8942118c"
        ],
        [
            "split ; apply (lt_bpow beta); rewrite <- M;[idtac|easy].",
            "VernacExtend",
            "7d12fa8421fef2113eb2d888b7bb77aa36abdc84"
        ],
        [
            "destruct (proj1 Hex);[trivial|idtac].",
            "VernacExtend",
            "158ced355c182db1c90fca686e1137eb919772ce"
        ],
        [
            "contradict Hx; auto with real.",
            "VernacExtend",
            "abfaef7f666db1e6cf8cd363d2e654f40391b7e3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite 2!ulp_neq_0; try auto with real.",
            "VernacExtend",
            "352e14fc3fefc8c1ccd86df411caa66947d48b08"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "unfold canonic_exp; apply f_equal.",
            "VernacExtend",
            "1d9949982a17e95746f699bd50a13a0775835f49"
        ],
        [
            "case_eq (ln_beta beta x); intros ex Hex T.",
            "VernacExtend",
            "f63904e87a2bf714c324561fbfa1e1373ef63ea0"
        ],
        [
            "assert (Lex:(ln_beta_val beta x (ln_beta beta x) = ex)%Z).",
            "VernacExtend",
            "b0625f9d6b59451c38ef1977393017d0740ef54a"
        ],
        [
            "rewrite T; reflexivity.",
            "VernacExtend",
            "85bc6eac8390dcb97575cab4da892fc2f1bd25e8"
        ],
        [
            "rewrite Lex in *; simpl in *; clear T.",
            "VernacExtend",
            "5916f06b4dd084a50b4fb939842b796753c29df5"
        ],
        [
            "specialize (Hex H).",
            "VernacExtend",
            "64cddbf3e586c26b89957fd6156ee6b465e291bb"
        ],
        [
            "apply sym_eq, ln_beta_unique.",
            "VernacExtend",
            "bae5a56c8995d9b05c2d2e015eeafba3bfb3e4eb"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "9b60731d6b608338747f09fec19f24d12baad022"
        ],
        [
            "rewrite Rabs_right in Hex.",
            "VernacExtend",
            "04fcece331bc1848bb34ed32d86d623962f4a689"
        ],
        [
            "2: apply Rle_ge; apply Rlt_le; easy.",
            "VernacExtend",
            "170dfa6abc299a9b67b657dd9cf405b9da136264"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "destruct Hex as ([H1|H1],H2).",
            "VernacExtend",
            "ceca43754ff5713436e5f571e4d2d0de8220d5d9"
        ],
        [
            "apply Rle_trans with (x-ulp x)%R.",
            "VernacExtend",
            "0be2da190000d176d1f9ac3e44bfb345de1a3579"
        ],
        [
            "apply id_m_ulp_ge_bpow; trivial.",
            "VernacExtend",
            "fe027238cdb25b53c95f6f01d914a215ef19db07"
        ],
        [
            "rewrite ulp_neq_0; trivial.",
            "VernacExtend",
            "15f172fa8ef4443236132f274b2179ad6f15bde8"
        ],
        [
            "rewrite ulp_neq_0; trivial.",
            "VernacExtend",
            "15f172fa8ef4443236132f274b2179ad6f15bde8"
        ],
        [
            "right; unfold canonic_exp; now rewrite Lex.",
            "VernacExtend",
            "145ae125cb121f6f68da2cda6a5edc489b09b4d2"
        ],
        [
            "contradict Hx; auto with real.",
            "VernacExtend",
            "abfaef7f666db1e6cf8cd363d2e654f40391b7e3"
        ],
        [
            "apply Rle_lt_trans with (2:=proj2 Hex).",
            "VernacExtend",
            "460ad974761f43eba1c3d0c02692674f2fca6970"
        ],
        [
            "rewrite <- Rplus_0_r.",
            "VernacExtend",
            "9c14ce628bea4e8dc982de42fd460ab22bb09911"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "rewrite Fx.",
            "VernacExtend",
            "6d5fef6b9bb5c0abc3b57cf7001ef10fc8718bc8"
        ],
        [
            "unfold F2R, canonic_exp; simpl.",
            "VernacExtend",
            "fc8db3dcce3c0cc548a9e0bce42b3698832d79b1"
        ],
        [
            "rewrite Lex.",
            "VernacExtend",
            "24bb50cd3a5732079330cdc3353e206dce28a3fa"
        ],
        [
            "pattern (bpow (fexp ex)) at 1; rewrite <- Rmult_1_l.",
            "VernacExtend",
            "c17ee8fef2f11b49012c41e73eab661686057dca"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "replace 1%R with (Z2R (Zsucc 0)) by reflexivity.",
            "VernacExtend",
            "c7ba2ca28cd835f8f4e751304f317d1cbf944c4d"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "apply Zlt_le_succ.",
            "VernacExtend",
            "070de595889f014f0a173659377506422eb25080"
        ],
        [
            "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
            "VernacExtend",
            "cc50004bf078c7614bf88890b3bff694a33301de"
        ],
        [
            "now rewrite <- Fx.",
            "VernacExtend",
            "c7a603b21e388817cbad5f1ef8746b776a29bf93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_pos_plus_ulp_aux2 : forall x, (0 < x)%R -> F x -> let e := ln_beta_val beta x (ln_beta beta x) in x = bpow (e - 1) -> (x - bpow (fexp (e-1)) <> 0)%R -> ((x - bpow (fexp (e-1))) + ulp (x - bpow (fexp (e-1))) = x)%R.",
            "VernacStartTheoremProof",
            "a0219dcf6a2f1f19ad1c893b2df82be14409e188"
        ],
        [
            "intros x Zx Fx e Hxe Zp.",
            "VernacExtend",
            "69e0a31e2bcd0e57d03af65e59cb80d20a226ee4"
        ],
        [
            "replace (ulp (x - bpow (fexp (e - 1)))) with (bpow (fexp (e - 1))).",
            "VernacExtend",
            "abc2fedb10fdaabdf3f02d3493353d3d9f648a0c"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (He:(fexp (e-1) <= e-1)%Z).",
            "VernacExtend",
            "68332d021aba90b0f8abc850a0e5f55495d75da5"
        ],
        [
            "apply generic_format_bpow_inv with beta; trivial.",
            "VernacExtend",
            "0312aa3ed927dfae0a82c2f1880a36bf5277a17a"
        ],
        [
            "rewrite <- Hxe; assumption.",
            "VernacExtend",
            "d4660937e6cb93b89e44199a202b075ce8146ecc"
        ],
        [
            "case (Zle_lt_or_eq _ _ He); clear He; intros He.",
            "VernacExtend",
            "6d2dd3421c5fb7fb760b5385f251e19b6ffce606"
        ],
        [
            "rewrite ulp_neq_0; trivial.",
            "VernacExtend",
            "15f172fa8ef4443236132f274b2179ad6f15bde8"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "unfold canonic_exp; apply f_equal.",
            "VernacExtend",
            "1d9949982a17e95746f699bd50a13a0775835f49"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply ln_beta_unique.",
            "VernacExtend",
            "79d65859d3098a3d6023e78328916ac1d9f90627"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "9b60731d6b608338747f09fec19f24d12baad022"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rplus_le_reg_l with (bpow (fexp (e-1))).",
            "VernacExtend",
            "5a6a5ed0f7fb14f7f3c6511ebaa71d9d6e5978ea"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply Rle_trans with (bpow (e - 2) + bpow (e - 2))%R.",
            "VernacExtend",
            "67a1a9427ec2697b0fa65b81a0db8db1aa34d036"
        ],
        [
            "apply Rplus_le_compat; apply bpow_le; omega.",
            "VernacExtend",
            "dc35b4eecc7df1eb5a429e8eb3ef34ce59c25dfb"
        ],
        [
            "apply Rle_trans with (2*bpow (e - 2))%R;[right; ring|idtac].",
            "VernacExtend",
            "a049d897dc61bd966ca22929bf6ad176ff0e5a36"
        ],
        [
            "apply Rle_trans with (bpow 1*bpow (e - 2))%R.",
            "VernacExtend",
            "f21b87d02395d6316685f19610a8f4c565b28ec9"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "replace 2%R with (Z2R 2) by reflexivity.",
            "VernacExtend",
            "2a88aa789df458555e3360a653317448d10e185c"
        ],
        [
            "replace (bpow 1) with (Z2R beta).",
            "VernacExtend",
            "6279da19e37728e549d53f2ce737ad79d913bfb4"
        ],
        [
            "apply Z2R_le.",
            "VernacExtend",
            "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
        ],
        [
            "apply <- Zle_is_le_bool.",
            "VernacExtend",
            "ea954b2f99b94cb74e9119fa25034596bca40790"
        ],
        [
            "now destruct beta.",
            "VernacExtend",
            "0c19ff5aa6b3ad93137e505451b7b05645e5144a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Zpower_pos; simpl.",
            "VernacExtend",
            "d9e7e90469a292f63d6afd5dc7e55b9f2466bd06"
        ],
        [
            "now rewrite Zmult_1_r.",
            "VernacExtend",
            "f6f70bbb1f374ceb32e4d41d5982648e20013849"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "replace (1+(e-2))%Z with (e-1)%Z by ring.",
            "VernacExtend",
            "e030d5234a1cc37cd5669d78a5ee0043e4f6d1e7"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "rewrite <- Rplus_0_r, Hxe.",
            "VernacExtend",
            "5e8c342dd7ee2810454cb796e64842b62a7e2a69"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Rle_ge; apply Rle_0_minus.",
            "VernacExtend",
            "d9cf44a251207e029bc076bf6b3fe1a414f2ff45"
        ],
        [
            "rewrite Hxe.",
            "VernacExtend",
            "3b6ea8abf17f6dca00e30c3c3c999ced9069608b"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "contradict Zp.",
            "VernacExtend",
            "4a8cf1ee5ee52d91e7b2254bc9b2cb359b5a586e"
        ],
        [
            "rewrite Hxe, He; ring.",
            "VernacExtend",
            "06ceaf8d69cdd66a14e42147794fdec4975dadaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_pos_plus_ulp_aux3 : forall x, (0 < x)%R -> F x -> let e := ln_beta_val beta x (ln_beta beta x) in x = bpow (e - 1) -> (x - bpow (fexp (e-1)) = 0)%R -> (ulp 0 = x)%R.",
            "VernacStartTheoremProof",
            "6db16a1d25ff234b41361d31ccb4ea49cd296e30"
        ],
        [
            "intros x Hx Fx e H1 H2.",
            "VernacExtend",
            "bbaf441601235f7156ecffab42175e6b219bb7f1"
        ],
        [
            "assert (H3:(x = bpow (fexp (e - 1)))).",
            "VernacExtend",
            "acf511de62078a2bc1210039edcb4bbc4ef02830"
        ],
        [
            "now apply Rminus_diag_uniq.",
            "VernacExtend",
            "53b13d3db7de2f4c42c9ac660df6538c102b3328"
        ],
        [
            "assert (H4: (fexp (e-1) = e-1)%Z).",
            "VernacExtend",
            "c266b4a66a299e27e24afba8d63bdb6f05bf0c5f"
        ],
        [
            "apply bpow_inj with beta.",
            "VernacExtend",
            "76f2a42ff5dbc235df33eb03baa423da9cf4b351"
        ],
        [
            "now rewrite <- H1.",
            "VernacExtend",
            "3ed18ae6c0befa12fd4388e2abee3bdd735c3702"
        ],
        [
            "unfold ulp; rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "18eeb4900b3a6b5b47a11e52365f2023f78359bc"
        ],
        [
            "case negligible_exp_spec.",
            "VernacExtend",
            "5c480850adf5f7b9bb835a50c56f1be90974885d"
        ],
        [
            "intros K.",
            "VernacExtend",
            "e2e6d7d842a55ca16087666d9b923718d8bd0dec"
        ],
        [
            "specialize (K (e-1)%Z).",
            "VernacExtend",
            "ecfd58d39f90077505838567e4aa360dc4851a3e"
        ],
        [
            "contradict K; omega.",
            "VernacExtend",
            "d32fbeb375caf3c6ffde1cbe35deb2f74295498b"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "rewrite H3; apply f_equal.",
            "VernacExtend",
            "67b8dec73cfd5f234b3b1fc88ff5db6387ad81b4"
        ],
        [
            "case (Zle_or_lt n (e-1)); intros H6.",
            "VernacExtend",
            "d3373278ce1c9d302005ebe028992f7e29498d82"
        ],
        [
            "apply valid_exp; omega.",
            "VernacExtend",
            "6ef75f2c2f4a2ce106e6d8811b105679bfad26f0"
        ],
        [
            "apply sym_eq, valid_exp; omega.",
            "VernacExtend",
            "d2e090a504f49a9b1f2411f3c9347c9beea4f648"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_pos_plus_ulp : forall x, (0 < x)%R -> F x -> (pred_pos x + ulp (pred_pos x) = x)%R.",
            "VernacStartTheoremProof",
            "c9e2445208023ae8c17b9e6e90a7c9106c74cdb5"
        ],
        [
            "intros x Zx Fx.",
            "VernacExtend",
            "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
        ],
        [
            "unfold pred_pos.",
            "VernacExtend",
            "00032b62c2ff86fd6d2463b95a8824b80bdd0bbf"
        ],
        [
            "case Req_bool_spec; intros H.",
            "VernacExtend",
            "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
        ],
        [
            "case (Req_EM_T (x - bpow (fexp (ln_beta_val beta x (ln_beta beta x) -1))) 0); intros H1.",
            "VernacExtend",
            "8537706671e7af22a9e5e602ab67441c547f41d6"
        ],
        [
            "rewrite H1, Rplus_0_l.",
            "VernacExtend",
            "57a0868b506781dee54f61b156d4dc23211305c8"
        ],
        [
            "now apply pred_pos_plus_ulp_aux3.",
            "VernacExtend",
            "069f202039a376766234bd4a7c08c612c867bd25"
        ],
        [
            "now apply pred_pos_plus_ulp_aux2.",
            "VernacExtend",
            "a9439e80be1e81586cd17c0ca4f4f9bd78d06d99"
        ],
        [
            "now apply pred_pos_plus_ulp_aux1.",
            "VernacExtend",
            "ac673def40871c8398680becfb9261a47dc64168"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_plus_eps: forall x, (0 < x)%R -> F x -> forall eps, (0 <= eps < ulp x)%R -> ln_beta beta (x + eps) = ln_beta beta x :> Z.",
            "VernacStartTheoremProof",
            "c3fe7142ec525e17c856682f8c826bff0c54de60"
        ],
        [
            "intros x Zx Fx eps Heps.",
            "VernacExtend",
            "04b5a1d3f8ca6c259a2b87f851b903d6015f57d9"
        ],
        [
            "destruct (ln_beta beta x) as (ex, He).",
            "VernacExtend",
            "c9e86093c3be8ec240600e91efe15e45185c4d0b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "specialize (He (Rgt_not_eq _ _ Zx)).",
            "VernacExtend",
            "7ea63868c385c99804607d3bd52f39a0037e31df"
        ],
        [
            "apply ln_beta_unique.",
            "VernacExtend",
            "79d65859d3098a3d6023e78328916ac1d9f90627"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "rewrite Rabs_pos_eq in He.",
            "VernacExtend",
            "9989db6dbc2793eb0c50c589e6b2515c5cad2e30"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (1 := proj1 He).",
            "VernacExtend",
            "688b7d4ad4d9c61e02327ef121bc02376fdfb98a"
        ],
        [
            "pattern x at 1 ; rewrite <- Rplus_0_r.",
            "VernacExtend",
            "8042e1391a755f4c111ac2347fda459e8a49458e"
        ],
        [
            "now apply Rplus_le_compat_l.",
            "VernacExtend",
            "83b74ce917a38b4c507ac1ab8d2785aa8d319f4c"
        ],
        [
            "apply Rlt_le_trans with (x + ulp x)%R.",
            "VernacExtend",
            "d2118aaa3a7b5211854d5755f0fa336e84c71dc3"
        ],
        [
            "now apply Rplus_lt_compat_l.",
            "VernacExtend",
            "3bd4c5b4b87c1bf314aa40391ee053f817c7bc6d"
        ],
        [
            "pattern x at 1 ; rewrite Fx.",
            "VernacExtend",
            "e7212daf1b2eadf4c14b78c97ccdd2962dbbb4ad"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "pattern (bpow (canonic_exp beta fexp x)) at 2 ; rewrite <- Rmult_1_l.",
            "VernacExtend",
            "511c7a4363ae3d36fcc66fd6f75ac47096e04b52"
        ],
        [
            "rewrite <- Rmult_plus_distr_r.",
            "VernacExtend",
            "fc7ad719ee7ef2a698d7f17e2549071dcd77682e"
        ],
        [
            "change 1%R with (Z2R 1).",
            "VernacExtend",
            "70dd8f0fc2009fb1b2dbc2766a6144484b011676"
        ],
        [
            "rewrite <- Z2R_plus.",
            "VernacExtend",
            "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
        ],
        [
            "change (F2R (Float beta (Ztrunc (scaled_mantissa beta fexp x) + 1) (canonic_exp beta fexp x)) <= bpow ex)%R.",
            "VernacExtend",
            "5aa92ab01b2cfd13c8b5f7fd7c1fe448b01a4141"
        ],
        [
            "apply F2R_p1_le_bpow.",
            "VernacExtend",
            "c1b5e1f22cf9a6557a3b52b37e6c09bc01cd4f13"
        ],
        [
            "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
            "VernacExtend",
            "cc50004bf078c7614bf88890b3bff694a33301de"
        ],
        [
            "now rewrite <- Fx.",
            "VernacExtend",
            "c7a603b21e388817cbad5f1ef8746b776a29bf93"
        ],
        [
            "now rewrite <- Fx.",
            "VernacExtend",
            "c7a603b21e388817cbad5f1ef8746b776a29bf93"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Rplus_le_le_0_compat.",
            "VernacExtend",
            "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Heps.",
            "VernacExtend",
            "90231750e58f3a7b3480beec4b7e7230c8770744"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_DN_plus_eps_pos: forall x, (0 <= x)%R -> F x -> forall eps, (0 <= eps < ulp x)%R -> round beta fexp Zfloor (x + eps) = x.",
            "VernacStartTheoremProof",
            "4959ee51abaccc3d06989e008021e225e95eb454"
        ],
        [
            "intros x Zx Fx eps Heps.",
            "VernacExtend",
            "04b5a1d3f8ca6c259a2b87f851b903d6015f57d9"
        ],
        [
            "destruct Zx as [Zx|Zx].",
            "VernacExtend",
            "39d1826664a3495b71216dd505fb8e8a7800bc49"
        ],
        [
            "pattern x at 2 ; rewrite Fx.",
            "VernacExtend",
            "08b2ab5a1d7660b907aa90d5fc242aae9ba71a53"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold canonic_exp at 1 2.",
            "VernacExtend",
            "8111cf43b660dbc83922dae24590f84686125384"
        ],
        [
            "rewrite ln_beta_plus_eps ; trivial.",
            "VernacExtend",
            "c508ca3f9cb10e1ca26a522b298e6c02aaf5087d"
        ],
        [
            "apply (f_equal (fun m => F2R (Float beta m _))).",
            "VernacExtend",
            "1fe9f7491817cb6f9d78e0a260e8455a9dda1ed3"
        ],
        [
            "rewrite Ztrunc_floor.",
            "VernacExtend",
            "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (Rle_trans _ _ _ (Zfloor_lb _)).",
            "VernacExtend",
            "b2e37d36f037769cf4eadd0c0ec7775cfb6dc0f9"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "pattern x at 1 ; rewrite <- Rplus_0_r.",
            "VernacExtend",
            "8042e1391a755f4c111ac2347fda459e8a49458e"
        ],
        [
            "now apply Rplus_le_compat_l.",
            "VernacExtend",
            "83b74ce917a38b4c507ac1ab8d2785aa8d319f4c"
        ],
        [
            "apply Rlt_le_trans with ((x + ulp x) * bpow (- canonic_exp beta fexp x))%R.",
            "VernacExtend",
            "2ea9b16b61cb98f23f2fc5b32578b6a746b44230"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "now apply Rplus_lt_compat_l.",
            "VernacExtend",
            "3bd4c5b4b87c1bf314aa40391ee053f817c7bc6d"
        ],
        [
            "rewrite Rmult_plus_distr_r.",
            "VernacExtend",
            "ddbb6f4dc1ffc967497bf9fa73715334cda5e5a0"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "pattern x at 1 3 ; rewrite Fx.",
            "VernacExtend",
            "f5b7e4c9c105c3121cf94eaa23543d47865fdf39"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "rewrite Zplus_opp_r.",
            "VernacExtend",
            "620faac1ce39c95a869f321696b4b1e9398b76ad"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "rewrite Zfloor_Z2R.",
            "VernacExtend",
            "76c32ec848cfdb0ff47d7c42d76ad58c824310bd"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "rewrite ulp_neq_0.",
            "VernacExtend",
            "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
        ],
        [
            "2: now apply Rgt_not_eq.",
            "VernacExtend",
            "31c101b0e129e41611531a67652122e8e2da84a6"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "rewrite Zplus_opp_r.",
            "VernacExtend",
            "620faac1ce39c95a869f321696b4b1e9398b76ad"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "rewrite <- Zx, Rplus_0_l; rewrite <- Zx in Heps.",
            "VernacExtend",
            "7afaa1df736a9cb99d97b266577da000517ebe9e"
        ],
        [
            "case (proj1 Heps); intros P.",
            "VernacExtend",
            "9ab3b9962315acab4f3842abe5dc6235309a8c72"
        ],
        [
            "unfold round, scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "770e82e59444f7b0a563dadc86949e25d7ecc323"
        ],
        [
            "revert Heps; unfold ulp.",
            "VernacExtend",
            "3c3c35ecab69cca02788c6738b9565785bfe158b"
        ],
        [
            "rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "1ddc34657bbaf0e1ed99f250c33e677f69023738"
        ],
        [
            "case negligible_exp_spec.",
            "VernacExtend",
            "5c480850adf5f7b9bb835a50c56f1be90974885d"
        ],
        [
            "intros _ (H1,H2).",
            "VernacExtend",
            "d2032262bda8827cb1e6e8e377476bf36cb9a785"
        ],
        [
            "absurd (0 < 0)%R; auto with real.",
            "VernacExtend",
            "1cca8d9088b656ccbf3fa9967923d93f1cde20c9"
        ],
        [
            "now apply Rle_lt_trans with (1:=H1).",
            "VernacExtend",
            "8b5d3ec0182c69d357f6950ffefe21bbe2bcf237"
        ],
        [
            "intros n Hn H.",
            "VernacExtend",
            "4bcf5905089889e3554a54dd583f91a8814bb8d3"
        ],
        [
            "assert (fexp (ln_beta beta eps) = fexp n).",
            "VernacExtend",
            "ab916e7c705a7a697dd607d6d4015ac576362ba7"
        ],
        [
            "apply valid_exp; try assumption.",
            "VernacExtend",
            "494bc9b8f6950a4621c848974aaa22e248ef68f1"
        ],
        [
            "assert(ln_beta beta eps-1 < fexp n)%Z;[idtac|omega].",
            "VernacExtend",
            "5024b551f45e89e8a5a37ae1499a0ccc7a2daacb"
        ],
        [
            "apply lt_bpow with beta.",
            "VernacExtend",
            "8b691f5c9c4b728daf6b23cc71cb0efd1b7f2669"
        ],
        [
            "apply Rle_lt_trans with (2:=proj2 H).",
            "VernacExtend",
            "6c00929f8c7bb4a27a6db7daa94d31b8e282d559"
        ],
        [
            "destruct (ln_beta beta eps) as (e,He).",
            "VernacExtend",
            "369961214c1feea7c0f60b8c8c0b5ebe2a941b9c"
        ],
        [
            "simpl; rewrite Rabs_pos_eq in He.",
            "VernacExtend",
            "1dbf5564b085456187e4ee19fbe89b8b0ed05c59"
        ],
        [
            "now apply He, Rgt_not_eq.",
            "VernacExtend",
            "97fdcc58489e786a73a2ed779ce679424246956b"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "replace (Zfloor (eps * bpow (- fexp (ln_beta beta eps)))) with 0%Z.",
            "VernacExtend",
            "80b98f83b3f2ad1b36cb33a5dce0ef3e1ea6c3b1"
        ],
        [
            "unfold F2R; simpl; ring.",
            "VernacExtend",
            "f8c00c9c0cf05538647493d6c088dac9492f3d52"
        ],
        [
            "apply sym_eq, Zfloor_imp.",
            "VernacExtend",
            "e8938d933000339458a99c3dfdf3552f60102079"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Rmult_lt_reg_r with (bpow (fexp n)).",
            "VernacExtend",
            "589754f43664c467c6ca800e43a9677b926f27ed"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus.",
            "VernacExtend",
            "e64efbe326a420591ccd203c3aa334b6ee79c4aa"
        ],
        [
            "rewrite H0; ring_simplify (-fexp n + fexp n)%Z.",
            "VernacExtend",
            "c79b90f463eb617d9c776e53788d13fa28cb2a5e"
        ],
        [
            "simpl; rewrite Rmult_1_l, Rmult_1_r.",
            "VernacExtend",
            "94f981da5eb527fcd2c6812a98e8fff2ae4b295b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite <- P, round_0; trivial.",
            "VernacExtend",
            "e8dd94779ed38852e2a66947bcd7f7d35a13af78"
        ],
        [
            "apply valid_rnd_DN.",
            "VernacExtend",
            "db3f59739c22e9187ce54b4d0ca701fb2ba25a92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_plus_eps_pos : forall x, (0 <= x)%R -> F x -> forall eps, (0 < eps <= ulp x)%R -> round beta fexp Zceil (x + eps) = (x + ulp x)%R.",
            "VernacStartTheoremProof",
            "f1c367b6030cedbcf23060b438a40a694197f81a"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Zx Fx eps.",
            "VernacExtend",
            "31057560ef67eda8d61102e2aa9ae7ba642446d3"
        ],
        [
            "case Zx; intros Zx1.",
            "VernacExtend",
            "b6361a6f3406105a6cb0a61eddba76cb7faca4df"
        ],
        [
            "intros (Heps1,[Heps2|Heps2]).",
            "VernacExtend",
            "4389fc1c131c6768ccf8df0de7bd45981ce31c33"
        ],
        [
            "assert (Heps: (0 <= eps < ulp x)%R).",
            "VernacExtend",
            "2c5adb6b3f343f8c0bf3892098ea9227f3b547aa"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "exact Heps2.",
            "VernacExtend",
            "11e1a17b960a130bfe34f45f4669065568b202c3"
        ],
        [
            "assert (Hd := round_DN_plus_eps_pos x Zx Fx eps Heps).",
            "VernacExtend",
            "67ea6155c90a6afd536a34fc6bf6f2de2da68a3f"
        ],
        [
            "rewrite round_UP_DN_ulp.",
            "VernacExtend",
            "0b8c999c1f012ce3acee78b38934d62e097c7188"
        ],
        [
            "rewrite Hd.",
            "VernacExtend",
            "88abaeb91ac1303911ff95b63d0fe35e7b02a734"
        ],
        [
            "rewrite 2!ulp_neq_0.",
            "VernacExtend",
            "78e4aa03c2d807b7cb76083f9075079ae0110042"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "now rewrite ln_beta_plus_eps.",
            "VernacExtend",
            "be972b35faf51ed5a8286f71153c691add624593"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "now apply Rgt_not_eq, Rplus_lt_0_compat.",
            "VernacExtend",
            "97ab61c205cf7cb7fb799b5043eab59539744477"
        ],
        [
            "intros Fs.",
            "VernacExtend",
            "f0129d323cd270fddf53d41adbdee14b1ff869b3"
        ],
        [
            "rewrite round_generic in Hd...",
            "VernacExtend",
            "6fcadd43ff2c66dbf0652ef1a40288a635d373cd"
        ],
        [
            "apply Rgt_not_eq with (2 := Hd).",
            "VernacExtend",
            "f853de2331b31c461316528ca4d42d3b9840735b"
        ],
        [
            "pattern x at 2 ; rewrite <- Rplus_0_r.",
            "VernacExtend",
            "c7bd2a25a8446e3cf8cf882820f5490829188ac4"
        ],
        [
            "now apply Rplus_lt_compat_l.",
            "VernacExtend",
            "3bd4c5b4b87c1bf314aa40391ee053f817c7bc6d"
        ],
        [
            "rewrite Heps2.",
            "VernacExtend",
            "e1601f226e1ca5f994878bdc7b4308885352f59c"
        ],
        [
            "apply round_generic...",
            "VernacExtend",
            "44537c9bd6bbe98a69c9d38bb5bf2943db0475ff"
        ],
        [
            "now apply generic_format_succ_aux1.",
            "VernacExtend",
            "fb5230ce7e90fe3a42fe4340a93810150389ecbf"
        ],
        [
            "rewrite <- Zx1, 2!Rplus_0_l.",
            "VernacExtend",
            "2c1fc27e50a1ab43595a246e337bf2ce0988ce70"
        ],
        [
            "intros Heps.",
            "VernacExtend",
            "7be267f3e365cdf9d4edd070af09848d94848cff"
        ],
        [
            "case (proj2 Heps).",
            "VernacExtend",
            "a8d922ca03906691f450a6606be134b61e1198c2"
        ],
        [
            "unfold round, scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "770e82e59444f7b0a563dadc86949e25d7ecc323"
        ],
        [
            "unfold ulp.",
            "VernacExtend",
            "9e560e414a15c4da6d704e34787237d738152786"
        ],
        [
            "rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "1ddc34657bbaf0e1ed99f250c33e677f69023738"
        ],
        [
            "case negligible_exp_spec.",
            "VernacExtend",
            "5c480850adf5f7b9bb835a50c56f1be90974885d"
        ],
        [
            "intros H2.",
            "VernacExtend",
            "1cdce4ec62ec85608d1a6cc1fb7ae184c894a041"
        ],
        [
            "intros J; absurd (0 < 0)%R; auto with real.",
            "VernacExtend",
            "9f447dbd8c3906ef7b7bb25993d04761ed563f17"
        ],
        [
            "apply Rlt_trans with eps; try assumption; apply Heps.",
            "VernacExtend",
            "156b98865e05d7a1f21998a57c7fdba3edcb8499"
        ],
        [
            "intros n Hn H.",
            "VernacExtend",
            "4bcf5905089889e3554a54dd583f91a8814bb8d3"
        ],
        [
            "assert (fexp (ln_beta beta eps) = fexp n).",
            "VernacExtend",
            "ab916e7c705a7a697dd607d6d4015ac576362ba7"
        ],
        [
            "apply valid_exp; try assumption.",
            "VernacExtend",
            "494bc9b8f6950a4621c848974aaa22e248ef68f1"
        ],
        [
            "assert(ln_beta beta eps-1 < fexp n)%Z;[idtac|omega].",
            "VernacExtend",
            "5024b551f45e89e8a5a37ae1499a0ccc7a2daacb"
        ],
        [
            "apply lt_bpow with beta.",
            "VernacExtend",
            "8b691f5c9c4b728daf6b23cc71cb0efd1b7f2669"
        ],
        [
            "apply Rle_lt_trans with (2:=H).",
            "VernacExtend",
            "9614cbb69f03b90a25adf5bf07e93263d822c11a"
        ],
        [
            "destruct (ln_beta beta eps) as (e,He).",
            "VernacExtend",
            "369961214c1feea7c0f60b8c8c0b5ebe2a941b9c"
        ],
        [
            "simpl; rewrite Rabs_pos_eq in He.",
            "VernacExtend",
            "1dbf5564b085456187e4ee19fbe89b8b0ed05c59"
        ],
        [
            "now apply He, Rgt_not_eq.",
            "VernacExtend",
            "97fdcc58489e786a73a2ed779ce679424246956b"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "replace (Zceil (eps * bpow (- fexp (ln_beta beta eps)))) with 1%Z.",
            "VernacExtend",
            "d8d1bd97a8500710e9e249d38d54ad0338e693de"
        ],
        [
            "unfold F2R; simpl; rewrite H0; ring.",
            "VernacExtend",
            "1fe42f417efd6a2d98342e1866bdda9092b28732"
        ],
        [
            "apply sym_eq, Zceil_imp.",
            "VernacExtend",
            "7875d1f54b4fc5b1319d02c85b95e281fa44c607"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c139429a9dc1a4d876b2b14ee0308290a28650f4"
        ],
        [
            "apply Heps.",
            "VernacExtend",
            "90231750e58f3a7b3480beec4b7e7230c8770744"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Rmult_le_reg_r with (bpow (fexp n)).",
            "VernacExtend",
            "0d8d7dc910ee0794bd178fd128644c4909e153c8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus.",
            "VernacExtend",
            "e64efbe326a420591ccd203c3aa334b6ee79c4aa"
        ],
        [
            "rewrite H0; ring_simplify (-fexp n + fexp n)%Z.",
            "VernacExtend",
            "c79b90f463eb617d9c776e53788d13fa28cb2a5e"
        ],
        [
            "simpl; rewrite Rmult_1_l, Rmult_1_r.",
            "VernacExtend",
            "94f981da5eb527fcd2c6812a98e8fff2ae4b295b"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "intros P; rewrite P.",
            "VernacExtend",
            "6fb1731d99cd5d6f0832a61b9a46a7e506f8f86c"
        ],
        [
            "apply round_generic...",
            "VernacExtend",
            "44537c9bd6bbe98a69c9d38bb5bf2943db0475ff"
        ],
        [
            "apply generic_format_ulp_0.",
            "VernacExtend",
            "3ba2b27c1856c8fdb00489921a23acba6284f67c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_pred_plus_eps_pos : forall x, (0 < x)%R -> F x -> forall eps, (0 < eps <= ulp (pred x) )%R -> round beta fexp Zceil (pred x + eps) = x.",
            "VernacStartTheoremProof",
            "7281ad28b7453696c3986f388d28a83b197887f0"
        ],
        [
            "intros x Hx Fx eps Heps.",
            "VernacExtend",
            "30afb1d47f0c85dffe4599a06375644e2c5c5104"
        ],
        [
            "rewrite round_UP_plus_eps_pos; trivial.",
            "VernacExtend",
            "cc6d1341f0772815afe8a8fcce5da8594b1e5cd4"
        ],
        [
            "rewrite pred_eq_pos.",
            "VernacExtend",
            "a7913ee32dc142a4ef5976fb55d4794a82f1003a"
        ],
        [
            "apply pred_pos_plus_ulp; trivial.",
            "VernacExtend",
            "98073b0734cd629518cccf1af766bb428b8e0276"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "now apply pred_ge_0.",
            "VernacExtend",
            "306e14761cbc39ffff402e1872b7ee715e3005bf"
        ],
        [
            "apply generic_format_pred; trivial.",
            "VernacExtend",
            "f4751004976958ade9ec76cd5b3cb17510589630"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_DN_minus_eps_pos : forall x, (0 < x)%R -> F x -> forall eps, (0 < eps <= ulp (pred x))%R -> round beta fexp Zfloor (x - eps) = pred x.",
            "VernacStartTheoremProof",
            "0cfe016f2a50f2ee0d12e1caa6b49c2f0fd33d3c"
        ],
        [
            "intros x Hpx Fx eps.",
            "VernacExtend",
            "0273260366bbe693926d9cd1bd35b5e925a78477"
        ],
        [
            "rewrite pred_eq_pos;[intros Heps|now left].",
            "VernacExtend",
            "6c8ab0cc558eecabab655b0215afceb19c75b868"
        ],
        [
            "replace (x-eps)%R with (pred_pos x + (ulp (pred_pos x)-eps))%R.",
            "VernacExtend",
            "5c689c87f3aa9548383228f4158e18e9d9ee9e94"
        ],
        [
            "2: pattern x at 3; rewrite <- (pred_pos_plus_ulp x); trivial.",
            "VernacExtend",
            "751839854249d2459adf1f6bfb78c81a75c25246"
        ],
        [
            "2: ring.",
            "VernacExtend",
            "9b21521f19f7d04658b7219865777c687582f61a"
        ],
        [
            "rewrite round_DN_plus_eps_pos; trivial.",
            "VernacExtend",
            "d150f5535119c6dfd409a27d3589f6a6e28ea020"
        ],
        [
            "now apply pred_pos_ge_0.",
            "VernacExtend",
            "cd080dca294f509925e5a873551f88ac891ef128"
        ],
        [
            "now apply generic_format_pred_pos.",
            "VernacExtend",
            "df214f676fe5d4e9441001cd23036fe4a52457dd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "now apply Heps.",
            "VernacExtend",
            "83f545efeac5859ca769100468252a69296d5f90"
        ],
        [
            "rewrite <- Rplus_0_r.",
            "VernacExtend",
            "9c14ce628bea4e8dc982de42fd460ab22bb09911"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "now apply Heps.",
            "VernacExtend",
            "83f545efeac5859ca769100468252a69296d5f90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_DN_plus_eps: forall x, F x -> forall eps, (0 <= eps < if (Rle_bool 0 x) then (ulp x) else (ulp (pred (-x))))%R -> round beta fexp Zfloor (x + eps) = x.",
            "VernacStartTheoremProof",
            "8082dfa852953260111a846dfd0f5c44126f653f"
        ],
        [
            "intros x Fx eps Heps.",
            "VernacExtend",
            "e9881e9792320540328754f8291705bc04c48216"
        ],
        [
            "case (Rle_or_lt 0 x); intros Zx.",
            "VernacExtend",
            "8b80fb46e577b24f7ff4a3304341dea01f324646"
        ],
        [
            "apply round_DN_plus_eps_pos; try assumption.",
            "VernacExtend",
            "8a1cbc9b68b6caaca2b9ec33acc46eba0d7fe4fd"
        ],
        [
            "split; try apply Heps.",
            "VernacExtend",
            "92a896c5e50094a9646bd82fe61aa7a1a457f003"
        ],
        [
            "rewrite Rle_bool_true in Heps; trivial.",
            "VernacExtend",
            "a8f218c03589b4835101889755f38c88c1f8026a"
        ],
        [
            "now apply Heps.",
            "VernacExtend",
            "83f545efeac5859ca769100468252a69296d5f90"
        ],
        [
            "rewrite Rle_bool_false in Heps; trivial.",
            "VernacExtend",
            "836feba127249cdf87fd3c70fbc50fb8918dc041"
        ],
        [
            "rewrite <- (Ropp_involutive (x+eps)).",
            "VernacExtend",
            "816450bb57634d826ed5e98ad0252e92466ec5eb"
        ],
        [
            "pattern x at 2; rewrite <- (Ropp_involutive x).",
            "VernacExtend",
            "85d9d0674aa177d2c1e9816b19cc191cabe2a17b"
        ],
        [
            "rewrite round_DN_opp.",
            "VernacExtend",
            "3191e6c7652f5b4ded4cbb288bd3e55653274cdc"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "replace (-(x+eps))%R with (pred (-x) + (ulp (pred (-x)) - eps))%R.",
            "VernacExtend",
            "10d676cac8d131f56eb7b842b8a7b54ef4b22e34"
        ],
        [
            "rewrite round_UP_pred_plus_eps_pos; try reflexivity.",
            "VernacExtend",
            "066c92d1761489c8ce99b34fcf52c931f5eb51ff"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rplus_lt_reg_l with eps; ring_simplify.",
            "VernacExtend",
            "c223c0102e33bf8b88af1a88c90b851468b05e9d"
        ],
        [
            "apply Heps.",
            "VernacExtend",
            "90231750e58f3a7b3480beec4b7e7230c8770744"
        ],
        [
            "apply Rplus_le_reg_l with (eps-ulp (pred (- x)))%R; ring_simplify.",
            "VernacExtend",
            "fa9f94b2fbd1e836df66655ce54c4988ea4a87c2"
        ],
        [
            "apply Heps.",
            "VernacExtend",
            "90231750e58f3a7b3480beec4b7e7230c8770744"
        ],
        [
            "unfold pred.",
            "VernacExtend",
            "6e45067cb52c62b8c79e0cd80f271215f39c71fa"
        ],
        [
            "rewrite Ropp_involutive.",
            "VernacExtend",
            "ba0ab440a50f656f08837503f0228b68c9acdf87"
        ],
        [
            "unfold succ; rewrite Rle_bool_false; try assumption.",
            "VernacExtend",
            "4c6fabc7d43736a7485688b4c7e910273bc63d85"
        ],
        [
            "rewrite Ropp_involutive; unfold Rminus.",
            "VernacExtend",
            "5cbc056b2b3669d01ed87cd192e47396c133e1cc"
        ],
        [
            "rewrite <- Rplus_assoc, pred_pos_plus_ulp.",
            "VernacExtend",
            "070b31496580290b0d103b937291baeab684c820"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_plus_eps : forall x, F x -> forall eps, (0 < eps <= if (Rle_bool 0 x) then (ulp x) else (ulp (pred (-x))))%R -> round beta fexp Zceil (x + eps) = (succ x)%R.",
            "VernacStartTheoremProof",
            "afc81e10ccce914b5b881168918c4d1183af60c6"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Fx eps Heps.",
            "VernacExtend",
            "e9881e9792320540328754f8291705bc04c48216"
        ],
        [
            "case (Rle_or_lt 0 x); intros Zx.",
            "VernacExtend",
            "8b80fb46e577b24f7ff4a3304341dea01f324646"
        ],
        [
            "rewrite succ_eq_pos; try assumption.",
            "VernacExtend",
            "1f12d20a89e3455f91d0175c8d2e81723ba7c339"
        ],
        [
            "rewrite Rle_bool_true in Heps; trivial.",
            "VernacExtend",
            "a8f218c03589b4835101889755f38c88c1f8026a"
        ],
        [
            "apply round_UP_plus_eps_pos; assumption.",
            "VernacExtend",
            "c85f63150de6482c553edcac4868d9a89cefc8ea"
        ],
        [
            "rewrite Rle_bool_false in Heps; trivial.",
            "VernacExtend",
            "836feba127249cdf87fd3c70fbc50fb8918dc041"
        ],
        [
            "rewrite <- (Ropp_involutive (x+eps)).",
            "VernacExtend",
            "816450bb57634d826ed5e98ad0252e92466ec5eb"
        ],
        [
            "rewrite <- (Ropp_involutive (succ x)).",
            "VernacExtend",
            "b931f094a09a7ecdbc74ca4ecdac3e31ff29b4ed"
        ],
        [
            "rewrite round_UP_opp.",
            "VernacExtend",
            "03e75cb24a175a63b28b30827f2b54e8caefcd5a"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "replace (-(x+eps))%R with (-succ x + (-eps + ulp (pred (-x))))%R.",
            "VernacExtend",
            "85e40d7838a149eeeca11c12a5c03e30fe32a1bc"
        ],
        [
            "apply round_DN_plus_eps_pos.",
            "VernacExtend",
            "44ba2f721696c2f435f7412e5313082c47612d65"
        ],
        [
            "rewrite <- pred_opp.",
            "VernacExtend",
            "6004fad89a6ea1ac28df360d5799cb5acab8f201"
        ],
        [
            "apply pred_ge_0.",
            "VernacExtend",
            "7d8fcfb3a152af24cb1d70fa961e172558c9b520"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "now apply generic_format_opp, generic_format_succ.",
            "VernacExtend",
            "22079a3f7039bb04a9b6b561c25f5e4a146246b4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rplus_le_reg_l with eps; ring_simplify.",
            "VernacExtend",
            "e1d61efc22b7922445d171ad80a09814c074b424"
        ],
        [
            "apply Heps.",
            "VernacExtend",
            "90231750e58f3a7b3480beec4b7e7230c8770744"
        ],
        [
            "unfold pred; rewrite Ropp_involutive.",
            "VernacExtend",
            "992baddadfbc9f0d7509cf8d42e7938114a3f768"
        ],
        [
            "apply Rplus_lt_reg_l with (eps-ulp (- succ x))%R; ring_simplify.",
            "VernacExtend",
            "c979a14e5d1365747a6770eed89ccdc75eef42f2"
        ],
        [
            "apply Heps.",
            "VernacExtend",
            "90231750e58f3a7b3480beec4b7e7230c8770744"
        ],
        [
            "unfold succ; rewrite Rle_bool_false; try assumption.",
            "VernacExtend",
            "4c6fabc7d43736a7485688b4c7e910273bc63d85"
        ],
        [
            "apply trans_eq with (-x +-eps)%R;[idtac|ring].",
            "VernacExtend",
            "08ad210acece3619a5a6f879f050dc6225859b50"
        ],
        [
            "pattern (-x)%R at 3; rewrite <- (pred_pos_plus_ulp (-x)).",
            "VernacExtend",
            "16278aa16016e564c1233c98f43217c630fab812"
        ],
        [
            "rewrite pred_eq_pos.",
            "VernacExtend",
            "a7913ee32dc142a4ef5976fb55d4794a82f1003a"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "left; now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "dd2a5495ebff7169bc0132c06e6e829a4d27f2d1"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_pred_pos_lt : forall x y, F x -> F y -> (0 <= x < y)%R -> (x <= pred_pos y)%R.",
            "VernacStartTheoremProof",
            "536226c1338e4eadbf9ee48cbaae42e24a2dc720"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y Fx Fy H.",
            "VernacExtend",
            "5dfce852ee5a0d1f5b4b37618bc1a27cad684f96"
        ],
        [
            "case (proj1 H); intros V.",
            "VernacExtend",
            "4bcdee93a73fa7eeb49ba2f0f25b3969c2ceb460"
        ],
        [
            "assert (Zy:(0 < y)%R).",
            "VernacExtend",
            "1cc9d32ff0a36f147b8c489fa518225024d9f251"
        ],
        [
            "apply Rle_lt_trans with (1:=proj1 H).",
            "VernacExtend",
            "c33cb6a9cfe43f8e182e59678a6c360e6d26bf7c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assert (Zp: (0 < pred y)%R).",
            "VernacExtend",
            "0b3848496a296c56668ca128c6f6a1ceaa9a7cb2"
        ],
        [
            "assert (Zp:(0 <= pred y)%R).",
            "VernacExtend",
            "22406d44513a057f3162e1e9761c3ae810f8a53a"
        ],
        [
            "apply pred_ge_0 ; trivial.",
            "VernacExtend",
            "a2617d9a1851cf7526277347c895fa4411409068"
        ],
        [
            "destruct Zp; trivial.",
            "VernacExtend",
            "9e758a4a2da6cf8bd95db5348734bbdae6b74142"
        ],
        [
            "generalize H0.",
            "VernacExtend",
            "83d8c9bf832ff69c91cc4428b24355f2bade716e"
        ],
        [
            "rewrite pred_eq_pos;[idtac|now left].",
            "VernacExtend",
            "4c875a3574ae4698eaeb9b3f640f88615caff9e1"
        ],
        [
            "unfold pred_pos.",
            "VernacExtend",
            "00032b62c2ff86fd6d2463b95a8824b80bdd0bbf"
        ],
        [
            "destruct (ln_beta beta y) as (ey,Hey); simpl.",
            "VernacExtend",
            "799501d5e8a6d8ad7848192fff1551fae0835fa6"
        ],
        [
            "case Req_bool_spec; intros Hy2.",
            "VernacExtend",
            "bc687f596c74c40c534627ec0d856a720d027999"
        ],
        [
            "intros Hy3.",
            "VernacExtend",
            "30698ba2573f3396eed39c0132e4688ccefda49f"
        ],
        [
            "assert (ey-1 = fexp (ey -1))%Z.",
            "VernacExtend",
            "bb15f2f5688e5a7aa9564444065e95be95bd1684"
        ],
        [
            "apply bpow_inj with beta.",
            "VernacExtend",
            "76f2a42ff5dbc235df33eb03baa423da9cf4b351"
        ],
        [
            "rewrite <- Hy2, <- Rplus_0_l, Hy3.",
            "VernacExtend",
            "edab629335b056e55c28c91fa76c4943ab67d8e6"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (Zx: (x <> 0)%R).",
            "VernacExtend",
            "24ffc80be4d6e92df9a42c6677fd1187cbd948ce"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "destruct (ln_beta beta x) as (ex,Hex).",
            "VernacExtend",
            "21921c4b6ef8de5f8e2c767fee1f9565dd6a946e"
        ],
        [
            "specialize (Hex Zx).",
            "VernacExtend",
            "35041bad374adf3a4ad0b8597d710e89f8f39f2b"
        ],
        [
            "assert (ex <= ey)%Z.",
            "VernacExtend",
            "612618f1208e6df2e56fa216dbe1fc4d5ebeefe6"
        ],
        [
            "apply bpow_lt_bpow with beta.",
            "VernacExtend",
            "870ce5ea9072298b4170c8019ad8cc2184ae063e"
        ],
        [
            "apply Rle_lt_trans with (1:=proj1 Hex).",
            "VernacExtend",
            "ff6512817e99a650e6ce243254a7ceefde9ff8e2"
        ],
        [
            "apply Rlt_trans with (Rabs y).",
            "VernacExtend",
            "3fe75571aacbd9ed78f4140de836ef47883cce37"
        ],
        [
            "rewrite 2!Rabs_right.",
            "VernacExtend",
            "ad45f26b25cf3cff993e30756828722d916912c1"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "now apply Rgt_ge.",
            "VernacExtend",
            "53d7ec5ffbcc44d865de3d67e3e04b929447ae40"
        ],
        [
            "now apply Rgt_ge.",
            "VernacExtend",
            "53d7ec5ffbcc44d865de3d67e3e04b929447ae40"
        ],
        [
            "apply Hey.",
            "VernacExtend",
            "e938ee0e67294187a39fb64a4eb915ecc5a77238"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "case (Zle_lt_or_eq _ _ H2); intros Hexy.",
            "VernacExtend",
            "6a10b3738beb0a0d170081efb3e2cedc5bd1a57c"
        ],
        [
            "assert (fexp ex = fexp (ey-1))%Z.",
            "VernacExtend",
            "c675e4e36e8d9d9cc79f49a81f4018cee8942ed8"
        ],
        [
            "apply valid_exp.",
            "VernacExtend",
            "9335fa4770b756f93530fd54152de0507ba39d3b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "absurd (0 < Ztrunc (scaled_mantissa beta fexp x) < 1)%Z.",
            "VernacExtend",
            "2468a9a37c96e8f1b1f2019b029132cfbef98c53"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
            "VernacExtend",
            "cc50004bf078c7614bf88890b3bff694a33301de"
        ],
        [
            "now rewrite <- Fx.",
            "VernacExtend",
            "c7a603b21e388817cbad5f1ef8746b776a29bf93"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "apply Rmult_lt_reg_r with (bpow (canonic_exp beta fexp x)).",
            "VernacExtend",
            "f78f857924d30df72fe6662ccdbbd8779f5364de"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "replace (Z2R (Ztrunc (scaled_mantissa beta fexp x)) * bpow (canonic_exp beta fexp x))%R with x.",
            "VernacExtend",
            "3d65b4c142385d65e33b3584eaf6db9adf295f05"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "rewrite ln_beta_unique with beta x ex.",
            "VernacExtend",
            "de28d923ba03a6f76d15d2026998761316d26cf9"
        ],
        [
            "rewrite H3,<-H1, <- Hy2.",
            "VernacExtend",
            "de4affd68c35d709ba517111973751023a09e9c2"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exact Hex.",
            "VernacExtend",
            "e0ee9de7cc2fcb930bb369f96acabead1395690e"
        ],
        [
            "absurd (y <= x)%R.",
            "VernacExtend",
            "92703171ecc32ef0ef9ed065769fef089c3f4227"
        ],
        [
            "now apply Rlt_not_le.",
            "VernacExtend",
            "4facd85a616984407afb6678a0f80bafe88428e6"
        ],
        [
            "rewrite Rabs_right in Hex.",
            "VernacExtend",
            "04fcece331bc1848bb34ed32d86d623962f4a689"
        ],
        [
            "apply Rle_trans with (2:=proj1 Hex).",
            "VernacExtend",
            "ce9f06cdac000d9a4eefe4b816909dbf353a4312"
        ],
        [
            "rewrite Hexy, Hy2.",
            "VernacExtend",
            "4e187da2bcf6f11e7f518ea150ba785f481dd35a"
        ],
        [
            "now apply Rle_refl.",
            "VernacExtend",
            "a84720c59d904b1ea447393359b57b216439685b"
        ],
        [
            "now apply Rgt_ge.",
            "VernacExtend",
            "53d7ec5ffbcc44d865de3d67e3e04b929447ae40"
        ],
        [
            "intros Hy3.",
            "VernacExtend",
            "30698ba2573f3396eed39c0132e4688ccefda49f"
        ],
        [
            "assert (y = bpow (fexp ey))%R.",
            "VernacExtend",
            "0de55ac8f623d5eab2552759fa9ce055c0f49263"
        ],
        [
            "apply Rminus_diag_uniq.",
            "VernacExtend",
            "8eb1824cb9720290931a3e1997d4f75911974aa0"
        ],
        [
            "rewrite Hy3.",
            "VernacExtend",
            "896c26e807420559354eb1814321011e41a71338"
        ],
        [
            "rewrite ulp_neq_0;[idtac|now apply Rgt_not_eq].",
            "VernacExtend",
            "927a7fcfe90c7c39185e20ce632d2f6d4cfc7c3b"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "rewrite (ln_beta_unique beta y ey); trivial.",
            "VernacExtend",
            "0174eadcee839eb148e54e87f13aff4f3bf86294"
        ],
        [
            "apply Hey.",
            "VernacExtend",
            "e938ee0e67294187a39fb64a4eb915ecc5a77238"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "contradict Hy2.",
            "VernacExtend",
            "b11ceab93c996ff5efa899831c9ce2c25320e413"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply Zplus_reg_l with 1%Z.",
            "VernacExtend",
            "5a9489a50a3c2362d99e73d4a6fdc741d9957fc6"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply trans_eq with (ln_beta beta y).",
            "VernacExtend",
            "b3e7a8dbf0338ec09dc81549e4ac744ab2297b4c"
        ],
        [
            "apply sym_eq; apply ln_beta_unique.",
            "VernacExtend",
            "32c1dc1704ad8e7226b13ece98376806e98e9f39"
        ],
        [
            "rewrite H1, Rabs_right.",
            "VernacExtend",
            "fb2cabcfea4d84b4e639f708accb6dcea46c0c1a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply bpow_lt.",
            "VernacExtend",
            "45b51ee535829682305d615af418ef00162d772b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Rle_ge; apply bpow_ge_0.",
            "VernacExtend",
            "85afd7e6674d935e75ebba906d1eed3e591b7510"
        ],
        [
            "apply ln_beta_unique.",
            "VernacExtend",
            "79d65859d3098a3d6023e78328916ac1d9f90627"
        ],
        [
            "apply Hey.",
            "VernacExtend",
            "e938ee0e67294187a39fb64a4eb915ecc5a77238"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "case (Rle_or_lt (ulp (pred_pos y)) (y-x)); intros H1.",
            "VernacExtend",
            "b28a86c1c35bfaec2a3d90edfae34d28cc8d61ae"
        ],
        [
            "apply Rplus_le_reg_r with (-x + ulp (pred_pos y))%R.",
            "VernacExtend",
            "7f875093a0b11ab255151698e1bd15a4f2e85deb"
        ],
        [
            "ring_simplify (x+(-x+ulp (pred_pos y)))%R.",
            "VernacExtend",
            "4021e4aafdf1fb53600e9f8c7f7d945706102257"
        ],
        [
            "apply Rle_trans with (1:=H1).",
            "VernacExtend",
            "2ee5aa053941e16dd67ff806efe73173552711a4"
        ],
        [
            "rewrite <- (pred_pos_plus_ulp y) at 1; trivial.",
            "VernacExtend",
            "a5ca760c82241c7cfc4da5cfaf4c4347d12a6e65"
        ],
        [
            "apply Req_le; ring.",
            "VernacExtend",
            "19538d2e4e56d090ab4de667482ab16c11e80cfb"
        ],
        [
            "replace x with (y-(y-x))%R by ring.",
            "VernacExtend",
            "3383d9bc94b4e2e7dde3a94d63aaf0fdcbe7cbdd"
        ],
        [
            "rewrite <- pred_eq_pos;[idtac|now left].",
            "VernacExtend",
            "372320812e8705f6827946bf7f1e59f206250036"
        ],
        [
            "rewrite <- round_DN_minus_eps_pos with (eps:=(y-x)%R); try easy.",
            "VernacExtend",
            "7b93e0d492ea49fa4a12ea2ad66ec9e084a6b278"
        ],
        [
            "ring_simplify (y-(y-x))%R.",
            "VernacExtend",
            "ef5615a909fee416f1ff9b82cb7c9f8ede0e06ff"
        ],
        [
            "apply Req_le.",
            "VernacExtend",
            "b69ffc9461f465218c69f379ac293728d3f8e7bd"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply round_generic...",
            "VernacExtend",
            "44537c9bd6bbe98a69c9d38bb5bf2943db0475ff"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "now apply Rlt_Rminus.",
            "VernacExtend",
            "98fbeb5f7590c6c2524c2eb370f8862917d0d966"
        ],
        [
            "rewrite pred_eq_pos;[idtac|now left].",
            "VernacExtend",
            "4c875a3574ae4698eaeb9b3f640f88615caff9e1"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "rewrite <- V; apply pred_pos_ge_0; trivial.",
            "VernacExtend",
            "e968f877e5bc55aa5f8953ee7917b13f069b3f1c"
        ],
        [
            "apply Rle_lt_trans with (1:=proj1 H); apply H.",
            "VernacExtend",
            "261cfa2ed1c1961df7c06274e8908c9ebc4edbef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_le_lt_aux: forall x y, F x -> F y -> (0 <= x)%R -> (x < y)%R -> (succ x <= y)%R.",
            "VernacStartTheoremProof",
            "182a85d52d2c1ce325a4d200590611e8bf9e7bad"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y Hx Hy Zx H.",
            "VernacExtend",
            "d6f49da8d5d4a12232c20361dccb06a3f69bfdc5"
        ],
        [
            "rewrite succ_eq_pos; trivial.",
            "VernacExtend",
            "757a79f97ab3745efc6123d82168e51bb86a12eb"
        ],
        [
            "case (Rle_or_lt (ulp x) (y-x)); intros H1.",
            "VernacExtend",
            "abf2cb5834c4a7d5bde4a5bc58f92951fbf87fea"
        ],
        [
            "apply Rplus_le_reg_r with (-x)%R.",
            "VernacExtend",
            "9e8e90988ac17f8fd62cf8ca8d1c85f98dc783a6"
        ],
        [
            "now ring_simplify (x+ulp x + -x)%R.",
            "VernacExtend",
            "90c8224062878c4db86c93acdd0208a3375c391a"
        ],
        [
            "replace y with (x+(y-x))%R by ring.",
            "VernacExtend",
            "91403a972e9cbfb8de69cfb624d9f6087a49d27e"
        ],
        [
            "absurd (x < y)%R.",
            "VernacExtend",
            "5223b7f2d0b1e315fb6edefabda12d88bb12de4a"
        ],
        [
            "2: apply H.",
            "VernacExtend",
            "d68ca3163bed92fea701ea0e7330cbb605c3b245"
        ],
        [
            "apply Rle_not_lt; apply Req_le.",
            "VernacExtend",
            "277b925df3aa61977b66b312900d67ffe2d30663"
        ],
        [
            "rewrite <- round_DN_plus_eps_pos with (eps:=(y-x)%R); try easy.",
            "VernacExtend",
            "6dc3fafe2e2c641dfe8023b09409ac650c92f370"
        ],
        [
            "ring_simplify (x+(y-x))%R.",
            "VernacExtend",
            "00455a6218fd297e4ce76814ab5e4a549695f0fb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply round_generic...",
            "VernacExtend",
            "44537c9bd6bbe98a69c9d38bb5bf2943db0475ff"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "apply Rlt_le; now apply Rlt_Rminus.",
            "VernacExtend",
            "0593f51411cdaff7e34123eca4b2a1ced702ae52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_le_lt: forall x y, F x -> F y -> (x < y)%R -> (succ x <= y)%R.",
            "VernacStartTheoremProof",
            "0b5a747a688da3759d82c381b2fd894001592c13"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y Fx Fy H.",
            "VernacExtend",
            "5dfce852ee5a0d1f5b4b37618bc1a27cad684f96"
        ],
        [
            "destruct (Rle_or_lt 0 x) as [Hx|Hx].",
            "VernacExtend",
            "a3770c27b57432695451ec9185f3f15f3759c589"
        ],
        [
            "now apply succ_le_lt_aux.",
            "VernacExtend",
            "b3a10f106ac43fcce3d935e82ea9e6441cee59f7"
        ],
        [
            "unfold succ; rewrite Rle_bool_false; try assumption.",
            "VernacExtend",
            "4c6fabc7d43736a7485688b4c7e910273bc63d85"
        ],
        [
            "case (Rle_or_lt y 0); intros Hy.",
            "VernacExtend",
            "cd411ce344ced245f3d2ad30126b58d7db40a878"
        ],
        [
            "rewrite <- (Ropp_involutive y).",
            "VernacExtend",
            "824feab48798fe5d8e8dd219cedbec26d8a1d102"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply le_pred_pos_lt.",
            "VernacExtend",
            "21283dd4332c8947115958929704971c3c287b56"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- Ropp_0; now apply Ropp_le_contravar.",
            "VernacExtend",
            "e06b1909e789cea75c25523148092178c517acb0"
        ],
        [
            "now apply Ropp_lt_contravar.",
            "VernacExtend",
            "e78eb591f35b3721103af7436ff32e5846f47e1a"
        ],
        [
            "apply Rle_trans with (-0)%R.",
            "VernacExtend",
            "df2e64014d2a8810ee16344e5b56ad4c66558d04"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply pred_pos_ge_0.",
            "VernacExtend",
            "3cb42715c35003f62cd9c8c0cc56479bdb749e07"
        ],
        [
            "rewrite <- Ropp_0; now apply Ropp_lt_contravar.",
            "VernacExtend",
            "c56dd2a9dd8b7bb8cda0dbd6e500d1855a02b7b1"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "rewrite Ropp_0; now left.",
            "VernacExtend",
            "1513d96f4766cd358403e2cd7aa776d2d8373a22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_pred_lt : forall x y, F x -> F y -> (x < y)%R -> (x <= pred y)%R.",
            "VernacStartTheoremProof",
            "ca3d3b13031eb9562ea912ccc2f5363cae187cf2"
        ],
        [
            "intros x y Fx Fy Hxy.",
            "VernacExtend",
            "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
        ],
        [
            "rewrite <- (Ropp_involutive x).",
            "VernacExtend",
            "1908e4ee868b5f81dd7393a2a516c6e4756cc5e4"
        ],
        [
            "unfold pred; apply Ropp_le_contravar.",
            "VernacExtend",
            "19759a4c9e32c44d44830075fa3d9f1c80c478d3"
        ],
        [
            "apply succ_le_lt.",
            "VernacExtend",
            "f96909b97cfc058151924bcbad3d9cf554e0b9d4"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "now apply Ropp_lt_contravar.",
            "VernacExtend",
            "e78eb591f35b3721103af7436ff32e5846f47e1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_succ_le : forall x y, (y <> 0)%R -> (x <= y)%R -> (x < succ y)%R.",
            "VernacStartTheoremProof",
            "144862ccca56b7971618154ff8c1994dd9415e84"
        ],
        [
            "intros x y Zy Hxy.",
            "VernacExtend",
            "ce1deea3dd3141076dc8cdded46af726f69bf8c0"
        ],
        [
            "apply Rle_lt_trans with (1 := Hxy).",
            "VernacExtend",
            "bfb6a058e6aa79b608959d9250227b33542c507e"
        ],
        [
            "now apply succ_gt_id.",
            "VernacExtend",
            "180967b02233a0ced714f5c3a59776bc87a2a489"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_lt_le : forall x y, (x <> 0)%R -> (x <= y)%R -> (pred x < y)%R.",
            "VernacStartTheoremProof",
            "c240378f1791a3533f86396f5c45fc3e2c30f9e7"
        ],
        [
            "intros x y Zy Hxy.",
            "VernacExtend",
            "ce1deea3dd3141076dc8cdded46af726f69bf8c0"
        ],
        [
            "apply Rlt_le_trans with (2 := Hxy).",
            "VernacExtend",
            "637372b14e191bbb401360117e35aae334cdca7a"
        ],
        [
            "now apply pred_lt_id.",
            "VernacExtend",
            "140821a3944128e4a7f2d0ca7fe1399eac3b9a57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_pred_aux : forall x, F x -> (0 < x)%R -> succ (pred x)=x.",
            "VernacStartTheoremProof",
            "0f09d29a9819d1ff92fc3cdf62149bd5bcd49381"
        ],
        [
            "intros x Fx Hx.",
            "VernacExtend",
            "a77573063d21c82841aeec3468a4194152c4d0af"
        ],
        [
            "rewrite pred_eq_pos;[idtac|now left].",
            "VernacExtend",
            "4c875a3574ae4698eaeb9b3f640f88615caff9e1"
        ],
        [
            "rewrite succ_eq_pos.",
            "VernacExtend",
            "00a965627ec89a77f9d4ee95464c5865b8c95628"
        ],
        [
            "2: now apply pred_pos_ge_0.",
            "VernacExtend",
            "33c8f04e940ec95254c67a7a01997372436b56ba"
        ],
        [
            "now apply pred_pos_plus_ulp.",
            "VernacExtend",
            "9b075de8c51b9ce2851080296a982c2e49a52fb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_ulp_0 : pred (ulp 0) = 0%R.",
            "VernacStartTheoremProof",
            "d396f1d077c0a91437dbf05e8723673d7521d101"
        ],
        [
            "rewrite pred_eq_pos.",
            "VernacExtend",
            "a7913ee32dc142a4ef5976fb55d4794a82f1003a"
        ],
        [
            "2: apply ulp_ge_0.",
            "VernacExtend",
            "6c88867fd429c47aad59554c0d48a37780e4f1a8"
        ],
        [
            "unfold ulp; rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "18eeb4900b3a6b5b47a11e52365f2023f78359bc"
        ],
        [
            "case negligible_exp_spec'.",
            "VernacExtend",
            "387a1196f38e55cdebc472e558dab276ab9e795a"
        ],
        [
            "intros [H1 _]; rewrite H1.",
            "VernacExtend",
            "a7d17e3b1b5f3325bc75348afbd77c3ac58aa9ff"
        ],
        [
            "unfold pred_pos; rewrite Req_bool_false.",
            "VernacExtend",
            "ab740d0fc01a2f6f8a1bfb349481b7ea3e6af5b3"
        ],
        [
            "2: apply Rlt_not_eq, bpow_gt_0.",
            "VernacExtend",
            "6d545a32d24a25d76326a6d9a2afb8a605cffa9b"
        ],
        [
            "unfold ulp; rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "18eeb4900b3a6b5b47a11e52365f2023f78359bc"
        ],
        [
            "rewrite H1; ring.",
            "VernacExtend",
            "698aeb70cdb5caeee61df00d3fb6a302387653ec"
        ],
        [
            "intros (n,(H1,H2)); rewrite H1.",
            "VernacExtend",
            "b16847e5599fbae7d4ab04725d0304d7d12e366a"
        ],
        [
            "unfold pred_pos.",
            "VernacExtend",
            "00032b62c2ff86fd6d2463b95a8824b80bdd0bbf"
        ],
        [
            "rewrite ln_beta_bpow.",
            "VernacExtend",
            "562ed7a7f197615f8fb2cc276e6bc8e10357a919"
        ],
        [
            "replace (fexp n + 1 - 1)%Z with (fexp n) by ring.",
            "VernacExtend",
            "a86204b20ee46b0c3f1835df1335084ef8e8b868"
        ],
        [
            "rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "1ddc34657bbaf0e1ed99f250c33e677f69023738"
        ],
        [
            "apply Rminus_diag_eq, f_equal.",
            "VernacExtend",
            "fc5a2af4735342c8a74e2ad15e9e2ae212d1ad3a"
        ],
        [
            "apply sym_eq, valid_exp; omega.",
            "VernacExtend",
            "d2e090a504f49a9b1f2411f3c9347c9beea4f648"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_0 : succ 0 = ulp 0.",
            "VernacStartTheoremProof",
            "e91d77586d0fbf9d60c3a9fcd186b2de8ec4dd75"
        ],
        [
            "unfold succ.",
            "VernacExtend",
            "8d37bbdf17f277d3b9e0a1bfcd91c6eb3f09e939"
        ],
        [
            "rewrite Rle_bool_true.",
            "VernacExtend",
            "a9cbb345d80107750a4d675be292ce609218305d"
        ],
        [
            "apply Rplus_0_l.",
            "VernacExtend",
            "cf8d4ade30d9c7c3114ecbd301b9ca2ddc4870b1"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_0 : pred 0 = Ropp (ulp 0).",
            "VernacStartTheoremProof",
            "24218a05004ae2c594d0aaee773f953bd9918a85"
        ],
        [
            "rewrite <- succ_0.",
            "VernacExtend",
            "76317dcd1e91de92debff5759eb63ea8be33c76f"
        ],
        [
            "rewrite <- Ropp_0 at 1.",
            "VernacExtend",
            "f81d224d0357ff49d8e2de77e52cc16cf9338df6"
        ],
        [
            "apply pred_opp.",
            "VernacExtend",
            "6709a31e90957ca3bdad0599e651a819c4d7fefd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_succ_aux : forall x, F x -> (0 < x)%R -> pred (succ x) = x.",
            "VernacStartTheoremProof",
            "67f99224f4e87fa0b76aa6b77d81493dc0965aaa"
        ],
        [
            "intros x Fx Hx.",
            "VernacExtend",
            "a77573063d21c82841aeec3468a4194152c4d0af"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply succ_le_lt with (1 := Fx) in H.",
            "VernacExtend",
            "b2a7fdecae89f5124a1d70ca478d621c7c4345c8"
        ],
        [
            "revert H.",
            "VernacExtend",
            "6842e040dd98a07b1eb54bbabc9c3f1076566a9a"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "apply pred_lt_id.",
            "VernacExtend",
            "2c65a47608cda9a57951cb54fbbd28db9414f481"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply Rlt_le_trans with (1 := Hx).",
            "VernacExtend",
            "17cfcea7cef1e39ddff4797053bb05abaf553802"
        ],
        [
            "apply succ_ge_id.",
            "VernacExtend",
            "f21fdfecc025a3ee62ed34f4983e6a2ca56ac619"
        ],
        [
            "now apply generic_format_pred, generic_format_succ.",
            "VernacExtend",
            "9724277165d4a22f3efb98bf1550f5db0697d450"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply le_pred_lt with (1 := Fx).",
            "VernacExtend",
            "239a67e7b13b52b36bd589b2eb928801530806c3"
        ],
        [
            "now apply generic_format_succ.",
            "VernacExtend",
            "d5d06553c810af8867fdd562b973b5a92dc251c1"
        ],
        [
            "apply succ_gt_id.",
            "VernacExtend",
            "855a990f520df43d8f675f50aeeac64505b12d10"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_pred : forall x, F x -> succ (pred x) = x.",
            "VernacStartTheoremProof",
            "3407f960c16bcb78326b4af61a8428a59385e4b2"
        ],
        [
            "intros x Fx.",
            "VernacExtend",
            "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
        ],
        [
            "destruct (Rle_or_lt 0 x) as [[Hx|Hx]|Hx].",
            "VernacExtend",
            "27f28885ffc72c27f4a7551b7a09dd9dbdbf71e7"
        ],
        [
            "now apply succ_pred_aux.",
            "VernacExtend",
            "fe41a99873bfaeafda42ce2c4392045c6fbe59bc"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "rewrite pred_0, succ_opp, pred_ulp_0.",
            "VernacExtend",
            "d3d5b7849ea8d5685c79635ce8769c1ca10d269f"
        ],
        [
            "apply Ropp_0.",
            "VernacExtend",
            "47cff39407a1cebe5fba9237cee9d56885ff4336"
        ],
        [
            "rewrite pred_eq_opp_succ_opp, succ_opp.",
            "VernacExtend",
            "5d6ef4333122760179c2072b7b690762f389f7d3"
        ],
        [
            "rewrite pred_succ_aux.",
            "VernacExtend",
            "1a1dfd7f10f76c2812f22a8741e64c762198526c"
        ],
        [
            "apply Ropp_involutive.",
            "VernacExtend",
            "5693ee789e165349a2c109e8f1a16d4ccb445cfd"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_succ : forall x, F x -> pred (succ x) = x.",
            "VernacStartTheoremProof",
            "d7b044791e643b1d87d9469fd08b01aa282343ef"
        ],
        [
            "intros x Fx.",
            "VernacExtend",
            "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
        ],
        [
            "rewrite <- (Ropp_involutive x).",
            "VernacExtend",
            "1908e4ee868b5f81dd7393a2a516c6e4756cc5e4"
        ],
        [
            "rewrite succ_opp, pred_opp.",
            "VernacExtend",
            "9029c4b1215b208593470c9f185b9a5fa9a44323"
        ],
        [
            "apply f_equal, succ_pred.",
            "VernacExtend",
            "7c2d27368d87a5a0a961f4e8c8cdc3c101b414ad"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_pred_plus_eps : forall x, F x -> forall eps, (0 < eps <= if (Rle_bool x 0) then (ulp x) else (ulp (pred x)))%R -> round beta fexp Zceil (pred x + eps) = x.",
            "VernacStartTheoremProof",
            "e27b49e55e2660559c557075b5f5e28234ce2ac9"
        ],
        [
            "intros x Fx eps Heps.",
            "VernacExtend",
            "e9881e9792320540328754f8291705bc04c48216"
        ],
        [
            "rewrite round_UP_plus_eps.",
            "VernacExtend",
            "972d28cd18c871877a57da354847f8e47417d92a"
        ],
        [
            "now apply succ_pred.",
            "VernacExtend",
            "86f7d1b36e59773b21111f3dd2d09a8604de7abd"
        ],
        [
            "now apply generic_format_pred.",
            "VernacExtend",
            "cd37bd667190ee674375cd3e532c8548ccf94e29"
        ],
        [
            "unfold pred at 4.",
            "VernacExtend",
            "b6f53709a9d14627b113e9ab09c822fc10dc1da9"
        ],
        [
            "rewrite Ropp_involutive, pred_succ.",
            "VernacExtend",
            "19277449d891532b2a63cbe6216f7e65c7d7fa94"
        ],
        [
            "rewrite ulp_opp.",
            "VernacExtend",
            "614ade85f55f34efcc29c0f3949a6e88c1a659b0"
        ],
        [
            "generalize Heps; case (Rle_bool_spec x 0); intros H1 H2.",
            "VernacExtend",
            "2eea3e4ce0c152d756414dbe3344689a17e1b287"
        ],
        [
            "rewrite Rle_bool_false; trivial.",
            "VernacExtend",
            "b058adfebc086446f7aa8f9bdc622612fee8c719"
        ],
        [
            "case H1; intros H1'.",
            "VernacExtend",
            "04f7f48eb0f9ccb93ef11c47b2f1fe980631cf48"
        ],
        [
            "apply Rlt_le_trans with (2:=H1).",
            "VernacExtend",
            "97dab73b2a99c846bed2e7414a4f5066e1f5b995"
        ],
        [
            "apply pred_lt_id.",
            "VernacExtend",
            "2c65a47608cda9a57951cb54fbbd28db9414f481"
        ],
        [
            "now apply Rlt_not_eq.",
            "VernacExtend",
            "7c469637fc05542bf9c3c4fab85774b12e6b8f93"
        ],
        [
            "rewrite H1'; unfold pred, succ.",
            "VernacExtend",
            "f30348c344188a37f1848f2a513ec4c5884502ff"
        ],
        [
            "rewrite Ropp_0; rewrite Rle_bool_true;[idtac|now right].",
            "VernacExtend",
            "961888cea19b53a66e7c35f57dcec9a171ce8490"
        ],
        [
            "rewrite Rplus_0_l.",
            "VernacExtend",
            "b29625dd91809e03948728f9a3f640ec69c648c0"
        ],
        [
            "rewrite <- Ropp_0; apply Ropp_lt_contravar.",
            "VernacExtend",
            "723e2c9a3b68d6f0d4e39e57a90f9335931ee496"
        ],
        [
            "apply Rlt_le_trans with (1:=proj1 H2).",
            "VernacExtend",
            "854a304438ac875a15977253030166831ae91046"
        ],
        [
            "apply Rle_trans with (1:=proj2 H2).",
            "VernacExtend",
            "436f9e2f66df0436e098d6cea2019e306aebb82b"
        ],
        [
            "rewrite Ropp_0, H1'.",
            "VernacExtend",
            "bf62599f8885e8e6b03e4bebff90378e7ce457ed"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "rewrite Rle_bool_true; trivial.",
            "VernacExtend",
            "3f948286db1b02b3a91ddca317ee0ac5afacfb6e"
        ],
        [
            "now apply pred_ge_0.",
            "VernacExtend",
            "306e14761cbc39ffff402e1872b7ee715e3005bf"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_DN_minus_eps: forall x, F x -> forall eps, (0 < eps <= if (Rle_bool x 0) then (ulp x) else (ulp (pred x)))%R -> round beta fexp Zfloor (x - eps) = pred x.",
            "VernacStartTheoremProof",
            "e48bfd70d29a73bc5e73a55f76e562cfbaeb6eea"
        ],
        [
            "intros x Fx eps Heps.",
            "VernacExtend",
            "e9881e9792320540328754f8291705bc04c48216"
        ],
        [
            "replace (x-eps)%R with (-(-x+eps))%R by ring.",
            "VernacExtend",
            "fc990d7fa8cdcdec72e66655f676594fb49f32fd"
        ],
        [
            "rewrite round_DN_opp.",
            "VernacExtend",
            "3191e6c7652f5b4ded4cbb288bd3e55653274cdc"
        ],
        [
            "unfold pred; apply f_equal.",
            "VernacExtend",
            "acaea2f087ed0f009d1c3de127ff853166774f0d"
        ],
        [
            "pattern (-x)%R at 1; rewrite <- (pred_succ (-x)).",
            "VernacExtend",
            "da90248f7145ad2e9a909f0a40d5a63e43979e28"
        ],
        [
            "apply round_UP_pred_plus_eps.",
            "VernacExtend",
            "48b6b6bb99471b1d80c24f15d5f2914146cd6342"
        ],
        [
            "now apply generic_format_succ, generic_format_opp.",
            "VernacExtend",
            "a86fc032916dca4f1211ff3a5cf50b97108859d2"
        ],
        [
            "rewrite pred_succ.",
            "VernacExtend",
            "05abf6f61387d00a9b4dc0ffaf430b3708aef0fb"
        ],
        [
            "rewrite ulp_opp.",
            "VernacExtend",
            "614ade85f55f34efcc29c0f3949a6e88c1a659b0"
        ],
        [
            "generalize Heps; case (Rle_bool_spec x 0); intros H1 H2.",
            "VernacExtend",
            "2eea3e4ce0c152d756414dbe3344689a17e1b287"
        ],
        [
            "rewrite Rle_bool_false; trivial.",
            "VernacExtend",
            "b058adfebc086446f7aa8f9bdc622612fee8c719"
        ],
        [
            "case H1; intros H1'.",
            "VernacExtend",
            "04f7f48eb0f9ccb93ef11c47b2f1fe980631cf48"
        ],
        [
            "apply Rlt_le_trans with (-x)%R.",
            "VernacExtend",
            "ea9ebad78a1a39e845e52cb2e49d2f7bdfd50290"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "apply succ_ge_id.",
            "VernacExtend",
            "f21fdfecc025a3ee62ed34f4983e6a2ca56ac619"
        ],
        [
            "rewrite H1', Ropp_0, succ_eq_pos;[idtac|now right].",
            "VernacExtend",
            "2e2fd9ff4a9d622dee123ddcd5d92f3079e83f3a"
        ],
        [
            "rewrite Rplus_0_l.",
            "VernacExtend",
            "b29625dd91809e03948728f9a3f640ec69c648c0"
        ],
        [
            "apply Rlt_le_trans with (1:=proj1 H2).",
            "VernacExtend",
            "854a304438ac875a15977253030166831ae91046"
        ],
        [
            "rewrite H1' in H2; apply H2.",
            "VernacExtend",
            "f0d3190521a42f430a910d860177c1fc37d0c0a1"
        ],
        [
            "rewrite Rle_bool_true.",
            "VernacExtend",
            "a9cbb345d80107750a4d675be292ce609218305d"
        ],
        [
            "now rewrite succ_opp, ulp_opp.",
            "VernacExtend",
            "973d4478ef804c6d5c2e4c0374ccf747811d6d58"
        ],
        [
            "rewrite succ_opp.",
            "VernacExtend",
            "5a36d7336e04f8e0f774026e5aab30771271adfa"
        ],
        [
            "rewrite <- Ropp_0; apply Ropp_le_contravar.",
            "VernacExtend",
            "7da389623297383bf0cd78f8b4d8ed8eb90a21c8"
        ],
        [
            "now apply pred_ge_0.",
            "VernacExtend",
            "306e14761cbc39ffff402e1872b7ee715e3005bf"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem error_lt_ulp : forall rnd { Zrnd : Valid_rnd rnd } x, (x <> 0)%R -> (Rabs (round beta fexp rnd x - x) < ulp x)%R.",
            "VernacStartTheoremProof",
            "0bbcbfe5f03590522bd1d46edda1385d41143cd2"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros rnd Zrnd x Zx.",
            "VernacExtend",
            "27802ac4731f889f3e60c83438bdbc3edd13806a"
        ],
        [
            "destruct (generic_format_EM beta fexp x) as [Hx|Hx].",
            "VernacExtend",
            "5cc5598cd2cf38e74a5a8eefa3cc94edd95dc51c"
        ],
        [
            "rewrite round_generic...",
            "VernacExtend",
            "af5222f20fb69e4892cd9b764ef3997628087b6a"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "rewrite Rplus_opp_r, Rabs_R0.",
            "VernacExtend",
            "b992f52f9e76b9342039bebddb24d23f55a5c69d"
        ],
        [
            "rewrite ulp_neq_0; trivial.",
            "VernacExtend",
            "15f172fa8ef4443236132f274b2179ad6f15bde8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "destruct (round_DN_or_UP beta fexp rnd x) as [H|H] ; rewrite H ; clear H.",
            "VernacExtend",
            "0ccb04f4af24783a0d325db73f5ef563466ced95"
        ],
        [
            "rewrite Rabs_left1.",
            "VernacExtend",
            "959a39766c3ec0e54779596cf6d2e0ed16ff476d"
        ],
        [
            "rewrite Ropp_minus_distr.",
            "VernacExtend",
            "03410ea29af67bdcfa7393931606c01ed23d7394"
        ],
        [
            "apply Rplus_lt_reg_l with (round beta fexp Zfloor x).",
            "VernacExtend",
            "130365d173736fcbf057f53173ab2488335c50f0"
        ],
        [
            "rewrite <- round_UP_DN_ulp with (1 := Hx).",
            "VernacExtend",
            "fa26d6e54113d05f55d656372d6c9750b4d5371e"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "assert (Hu: (x <= round beta fexp Zceil x)%R).",
            "VernacExtend",
            "86c8e306f712a47a1174ff4bed94df8faeb8d16f"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "destruct Hu as [Hu|Hu].",
            "VernacExtend",
            "2fd575b4e717379131decc27898a35e9f1465097"
        ],
        [
            "exact Hu.",
            "VernacExtend",
            "2ef276b73f30adea6147a9e5bb93e0371d61e365"
        ],
        [
            "elim Hx.",
            "VernacExtend",
            "6da67d91ac8c390d9321f1009df1327ed8c33ccd"
        ],
        [
            "rewrite Hu.",
            "VernacExtend",
            "9f5596f6e0e4f19e8bba25608aa9811b0d578444"
        ],
        [
            "apply generic_format_round...",
            "VernacExtend",
            "55b5df3e9c740005b41509d39a039e0b1a6f5f87"
        ],
        [
            "apply Rle_minus.",
            "VernacExtend",
            "7e46e8a6683420ce8b2242ac68da7361c6b86840"
        ],
        [
            "apply round_DN_pt...",
            "VernacExtend",
            "884406c318b02180316764822f617990ec1c51ad"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "rewrite round_UP_DN_ulp with (1 := Hx).",
            "VernacExtend",
            "40d3ea1a3b9c2ab17a27c109c4335d1d0ed6beba"
        ],
        [
            "apply Rplus_lt_reg_r with (x - ulp x)%R.",
            "VernacExtend",
            "1e8344882694d7604f2f75ddad94bccd500bf28c"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "assert (Hd: (round beta fexp Zfloor x <= x)%R).",
            "VernacExtend",
            "cb091ae3a419503e983a330e557fc08ec818d6fe"
        ],
        [
            "apply round_DN_pt...",
            "VernacExtend",
            "884406c318b02180316764822f617990ec1c51ad"
        ],
        [
            "destruct Hd as [Hd|Hd].",
            "VernacExtend",
            "da2f2105f4c170c9a207765b01d8a8c35191ed34"
        ],
        [
            "exact Hd.",
            "VernacExtend",
            "fb3d72d836588e055ecb19b2466f71903a0848f4"
        ],
        [
            "elim Hx.",
            "VernacExtend",
            "6da67d91ac8c390d9321f1009df1327ed8c33ccd"
        ],
        [
            "rewrite <- Hd.",
            "VernacExtend",
            "36a0441d89364a3a72a0d7fb93c9e78171a826a8"
        ],
        [
            "apply generic_format_round...",
            "VernacExtend",
            "55b5df3e9c740005b41509d39a039e0b1a6f5f87"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem error_le_ulp : forall rnd { Zrnd : Valid_rnd rnd } x, (Rabs (round beta fexp rnd x - x) <= ulp x)%R.",
            "VernacStartTheoremProof",
            "b382f83401dc06eb631f8258de2ea19c65bfa63d"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros rnd Zrnd x.",
            "VernacExtend",
            "947aa101241d9b27daabb2725591fe6f98b2af4c"
        ],
        [
            "case (Req_dec x 0).",
            "VernacExtend",
            "48b07fbc7d3b96b1577a9087d5947ea0644069d5"
        ],
        [
            "intros Zx; rewrite Zx, round_0...",
            "VernacExtend",
            "d34979be7f43f52306f58e301e13c49a0175ddcb"
        ],
        [
            "unfold Rminus; rewrite Rplus_0_l, Ropp_0, Rabs_R0.",
            "VernacExtend",
            "ad7dce626b8da3a02c56c66fa9bb6db4758a695a"
        ],
        [
            "apply ulp_ge_0.",
            "VernacExtend",
            "5d0ce5d17ef4f7c6c49a717ed77dfcf0148cc9ed"
        ],
        [
            "intros Zx; left.",
            "VernacExtend",
            "33b725c537f403e60de1554b4862c120f5ef30a2"
        ],
        [
            "now apply error_lt_ulp.",
            "VernacExtend",
            "bd4381b0a575bab4daad860ab962cdc14a8e0e78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem error_le_half_ulp : forall choice x, (Rabs (round beta fexp (Znearest choice) x - x) <= /2 * ulp x)%R.",
            "VernacStartTheoremProof",
            "54f4a6d1d99760985959823cefad77eafa284e8e"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros choice x.",
            "VernacExtend",
            "8be0dc28b7e1d3b48acd180a6053107ee4186f2f"
        ],
        [
            "destruct (generic_format_EM beta fexp x) as [Hx|Hx].",
            "VernacExtend",
            "5cc5598cd2cf38e74a5a8eefa3cc94edd95dc51c"
        ],
        [
            "rewrite round_generic...",
            "VernacExtend",
            "af5222f20fb69e4892cd9b764ef3997628087b6a"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "rewrite Rplus_opp_r, Rabs_R0.",
            "VernacExtend",
            "b992f52f9e76b9342039bebddb24d23f55a5c69d"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "apply ulp_ge_0.",
            "VernacExtend",
            "5d0ce5d17ef4f7c6c49a717ed77dfcf0148cc9ed"
        ],
        [
            "set (d := round beta fexp Zfloor x).",
            "VernacExtend",
            "f38fc386d065e9fc4888548d4ea25105b4b898aa"
        ],
        [
            "destruct (round_N_pt beta fexp choice x) as (Hr1, Hr2).",
            "VernacExtend",
            "449a775245646bc5494db6a815dd2c8e221d436c"
        ],
        [
            "destruct (Rle_or_lt (x - d) (d + ulp x - x)) as [H|H].",
            "VernacExtend",
            "530fdaf44b33019e0c07e0ba0afbf744b54509c3"
        ],
        [
            "apply Rle_trans with (Rabs (d - x)).",
            "VernacExtend",
            "2379d212dcbedd4869be037cf8667ddfa94b41d6"
        ],
        [
            "apply Hr2.",
            "VernacExtend",
            "647fc1dcae40c3a791d35f0865040ba06bedde89"
        ],
        [
            "apply (round_DN_pt beta fexp x).",
            "VernacExtend",
            "6e96adc12340c6ff55f6ed257d671cceb87cd90f"
        ],
        [
            "rewrite Rabs_left1.",
            "VernacExtend",
            "959a39766c3ec0e54779596cf6d2e0ed16ff476d"
        ],
        [
            "rewrite Ropp_minus_distr.",
            "VernacExtend",
            "03410ea29af67bdcfa7393931606c01ed23d7394"
        ],
        [
            "apply Rmult_le_reg_r with 2%R.",
            "VernacExtend",
            "7b59964c8030872e38e0f6bf18a5609b6631285a"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "apply Rplus_le_reg_r with (d - x)%R.",
            "VernacExtend",
            "56176ece47b1d9a8d800acba1c404c62127f1213"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply Rle_trans with (1 := H).",
            "VernacExtend",
            "afdcb615c6a4c5d01b0dcd863ef8e5aeca62d6d8"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rle_minus.",
            "VernacExtend",
            "7e46e8a6683420ce8b2242ac68da7361c6b86840"
        ],
        [
            "apply (round_DN_pt beta fexp x).",
            "VernacExtend",
            "6e96adc12340c6ff55f6ed257d671cceb87cd90f"
        ],
        [
            "assert (Hu: (d + ulp x)%R = round beta fexp Zceil x).",
            "VernacExtend",
            "3edf58a2fc5ee2170ccaafcc14c377103632c10f"
        ],
        [
            "unfold d.",
            "VernacExtend",
            "76098dd1c777f09ddbb61e803c51b93547ecc2dd"
        ],
        [
            "now rewrite <- round_UP_DN_ulp.",
            "VernacExtend",
            "7b49fc720abe39a63b4dcf36f63a142c28c2f45f"
        ],
        [
            "apply Rle_trans with (Rabs (d + ulp x - x)).",
            "VernacExtend",
            "406740c25a77a5a6d894e48adc96e1b40ede88a6"
        ],
        [
            "apply Hr2.",
            "VernacExtend",
            "647fc1dcae40c3a791d35f0865040ba06bedde89"
        ],
        [
            "rewrite Hu.",
            "VernacExtend",
            "9f5596f6e0e4f19e8bba25608aa9811b0d578444"
        ],
        [
            "apply (round_UP_pt beta fexp x).",
            "VernacExtend",
            "afbca80c904e52b7a144731e8074c4e9a598722a"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "apply Rmult_le_reg_r with 2%R.",
            "VernacExtend",
            "7b59964c8030872e38e0f6bf18a5609b6631285a"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "apply Rplus_le_reg_r with (- (d + ulp x - x))%R.",
            "VernacExtend",
            "429fd012eff8450f53337fee85fa1a5628440181"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rlt_le_trans with (1 := H).",
            "VernacExtend",
            "4cd6bf8b9ffdf301bc7c5f322262f3507ca79aef"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rle_0_minus.",
            "VernacExtend",
            "11bca255824a3f085e9099937bd67db6c181e148"
        ],
        [
            "rewrite Hu.",
            "VernacExtend",
            "9f5596f6e0e4f19e8bba25608aa9811b0d578444"
        ],
        [
            "apply (round_UP_pt beta fexp x).",
            "VernacExtend",
            "afbca80c904e52b7a144731e8074c4e9a598722a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_DN : forall x, (0 < round beta fexp Zfloor x)%R -> ulp (round beta fexp Zfloor x) = ulp x.",
            "VernacStartTheoremProof",
            "50691e17aa0c2a2baafe233398dbf66911723076"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Hd.",
            "VernacExtend",
            "a8acddfe5d9185868a2f31ec7fb3093a3fbeb577"
        ],
        [
            "rewrite 2!ulp_neq_0.",
            "VernacExtend",
            "78e4aa03c2d807b7cb76083f9075079ae0110042"
        ],
        [
            "now rewrite canonic_exp_DN with (2 := Hd).",
            "VernacExtend",
            "a365ac14f9d857757498011b0202842d05b40e9c"
        ],
        [
            "intros T; contradict Hd; rewrite T, round_0...",
            "VernacExtend",
            "c361f7e803411b61c354f25745b1881fc5a9ebd6"
        ],
        [
            "apply Rlt_irrefl.",
            "VernacExtend",
            "2987b5b4da9cd6a04e9f73b1f733706ed6db7363"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_neq_0_negligible_exp: negligible_exp=None -> forall rnd { Zrnd : Valid_rnd rnd } x, (x <> 0)%R -> (round beta fexp rnd x <> 0)%R.",
            "VernacStartTheoremProof",
            "3ce82cb8acb38ff7149de50f6489aa7503e4f212"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros H rndn Hrnd x Hx K.",
            "VernacExtend",
            "71e67dcf1de32a4e368962f143ba0e1220917db9"
        ],
        [
            "case negligible_exp_spec'.",
            "VernacExtend",
            "387a1196f38e55cdebc472e558dab276ab9e795a"
        ],
        [
            "intros (_,Hn).",
            "VernacExtend",
            "8346b9926fc43909e36204429eda3996a2d07bc5"
        ],
        [
            "destruct (ln_beta beta x) as (e,He).",
            "VernacExtend",
            "b8b3fd0885671b68d791e7b7a2c74b1cce1c51ed"
        ],
        [
            "absurd (fexp e < e)%Z.",
            "VernacExtend",
            "45072206e5a997dace0a95c4552ebfba263bc43f"
        ],
        [
            "apply Zle_not_lt.",
            "VernacExtend",
            "a635904a634172283c98f3792d1f8261c5710c4f"
        ],
        [
            "apply exp_small_round_0 with beta rndn x...",
            "VernacExtend",
            "23732a4d3db7d0fc9895a0a27019591474fcf089"
        ],
        [
            "apply (Hn e).",
            "VernacExtend",
            "8c3ee0b2676033a5610c87500ffb7b1e6b4bd9ce"
        ],
        [
            "intros (n,(H1,_)).",
            "VernacExtend",
            "f5c554ed690738641b5f189725b6322a88c0063c"
        ],
        [
            "rewrite H in H1; discriminate.",
            "VernacExtend",
            "12134c41016c2b6d0518f6d46dc1728ba42a141d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem error_lt_ulp_round : forall { Hm : Monotone_exp fexp } rnd { Zrnd : Valid_rnd rnd } x, ( x <> 0)%R -> (Rabs (round beta fexp rnd x - x) < ulp (round beta fexp rnd x))%R.",
            "VernacStartTheoremProof",
            "2bb2b2304d6cd9fc34ed9990c49fe5f58ffd532e"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros Hm.",
            "VernacExtend",
            "76990ca140a9355e8012e89d27e48eb51607f2b7"
        ],
        [
            "cut (forall rnd : R -> Z, Valid_rnd rnd -> forall x : R, (0 < x)%R -> (Rabs (round beta fexp rnd x - x) < ulp (round beta fexp rnd x))%R).",
            "VernacExtend",
            "90ce69ab925cdae1cf635d5c74899bdcef116e90"
        ],
        [
            "intros M rnd Hrnd x Zx.",
            "VernacExtend",
            "1846a715cad46ff33c7115714e9841ed1c4e5751"
        ],
        [
            "case (Rle_or_lt 0 x).",
            "VernacExtend",
            "500b289f56bb26ae7325584eeef5874684d76c7e"
        ],
        [
            "intros H; destruct H.",
            "VernacExtend",
            "1d9dfbaa09a2b60d688c43a9c68e592b3ab51df7"
        ],
        [
            "now apply M.",
            "VernacExtend",
            "46013aa78367d0c44db3a742a817f7093168e054"
        ],
        [
            "contradict H; now apply sym_not_eq.",
            "VernacExtend",
            "a886c4178d7951f1bdff1d5b77fa0c26ac878e7b"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite <- (Ropp_involutive x).",
            "VernacExtend",
            "1908e4ee868b5f81dd7393a2a516c6e4756cc5e4"
        ],
        [
            "rewrite round_opp, ulp_opp.",
            "VernacExtend",
            "72719f0029b430b9b572f170c1d12680c0192221"
        ],
        [
            "replace (- round beta fexp (Zrnd_opp rnd) (- x) - - - x)%R with (-(round beta fexp (Zrnd_opp rnd) (- x) - (-x)))%R by ring.",
            "VernacExtend",
            "d1193661d3f0e284633d54133f04dfe1ba9ee36d"
        ],
        [
            "rewrite Rabs_Ropp.",
            "VernacExtend",
            "4585414329a0ef757c809f4a4dee3b3a09307b5c"
        ],
        [
            "apply M.",
            "VernacExtend",
            "af74eaa2e68f6b9f39ed3392227b35cde6d0bdf2"
        ],
        [
            "now apply valid_rnd_opp.",
            "VernacExtend",
            "63b9da12041c954d121af14de1ef5363c52a1526"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "intros rnd Hrnd x Hx.",
            "VernacExtend",
            "ada88cce1026d4cc17854339dcba9714911b4760"
        ],
        [
            "case (Rle_lt_or_eq_dec 0 (round beta fexp Zfloor x)).",
            "VernacExtend",
            "73fb0f734187a76517cdcbc89fa5fa4ecb8c037a"
        ],
        [
            "apply round_ge_generic...",
            "VernacExtend",
            "b942d5b4477c026dd26bf182ff70653039654af9"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "intros Hx2.",
            "VernacExtend",
            "0beed80953be65d0547b74218b429c24d862282e"
        ],
        [
            "apply Rlt_le_trans with (ulp x).",
            "VernacExtend",
            "c5665627915d5b3b9a180afca90a6bdad9bef84e"
        ],
        [
            "apply error_lt_ulp...",
            "VernacExtend",
            "cc239a89d957fb00929dd0b52e58f87b7a36d1f3"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "rewrite <- ulp_DN; trivial.",
            "VernacExtend",
            "435b4c98c434f4501c0afb4911fd953f8db6a1cf"
        ],
        [
            "apply ulp_le_pos.",
            "VernacExtend",
            "228249b7be835a8efa8d735c274a08c11a145092"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "case (round_DN_or_UP beta fexp rnd x); intros V; rewrite V.",
            "VernacExtend",
            "aae9c18fbcf14fead090fbea4daa413c6b4fcfa7"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rle_trans with x.",
            "VernacExtend",
            "795cd4902a779137a2ca3d4d53ee3d5bd0e0d67f"
        ],
        [
            "apply round_DN_pt...",
            "VernacExtend",
            "884406c318b02180316764822f617990ec1c51ad"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "intros Hx2.",
            "VernacExtend",
            "0beed80953be65d0547b74218b429c24d862282e"
        ],
        [
            "case (round_DN_or_UP beta fexp rnd x); intros V; rewrite V; clear V.",
            "VernacExtend",
            "63258389e897c1c5cc5c502ce30df7d67f079d9a"
        ],
        [
            "rewrite <- Hx2.",
            "VernacExtend",
            "be892d53e75e9912db0d3f85c6a12b4c076422a2"
        ],
        [
            "unfold Rminus; rewrite Rplus_0_l, Rabs_Ropp.",
            "VernacExtend",
            "0aa94bdbb4f82667b139a2f6946a4f4b67d95273"
        ],
        [
            "unfold ulp; rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "18eeb4900b3a6b5b47a11e52365f2023f78359bc"
        ],
        [
            "case negligible_exp_spec.",
            "VernacExtend",
            "5c480850adf5f7b9bb835a50c56f1be90974885d"
        ],
        [
            "intros K; contradict Hx2.",
            "VernacExtend",
            "908f459a79eda4ef35ce3644b264a73976ee5175"
        ],
        [
            "apply Rlt_not_eq.",
            "VernacExtend",
            "4d888fdf05ab3816c2e650b03b478096db638cf5"
        ],
        [
            "apply F2R_gt_0_compat; simpl.",
            "VernacExtend",
            "c4244c4077b46262faf31f9564790a72a3fd97a9"
        ],
        [
            "apply Zlt_le_trans with 1%Z.",
            "VernacExtend",
            "939fa731ea95817dbb4f5f01318a69674adf9231"
        ],
        [
            "apply Pos2Z.is_pos.",
            "VernacExtend",
            "87f8b68919cf0de4fdbc603862643e870f7a6fd9"
        ],
        [
            "apply Zfloor_lub.",
            "VernacExtend",
            "2a3f8e59d303f192a648e4eef260195d5e8b9977"
        ],
        [
            "simpl; unfold scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "a10fa5a8af224e9d10e77661fa0841065218a62f"
        ],
        [
            "destruct (ln_beta beta x) as (e,He); simpl.",
            "VernacExtend",
            "a77119bf270c9ca756e41a97e3305b575f82dce7"
        ],
        [
            "apply Rle_trans with (bpow (e-1) * bpow (- fexp e))%R.",
            "VernacExtend",
            "706510b72a661406753a141ac7e9d1fa9400c178"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "replace 1%R with (bpow 0) by reflexivity.",
            "VernacExtend",
            "d5418351239332c373e24c120889fb91795d49ff"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "specialize (K e); omega.",
            "VernacExtend",
            "59414c7572a60f370510056c5fb56238e1b78c08"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "rewrite <- (Rabs_pos_eq x).",
            "VernacExtend",
            "9bf37ca4f1d18b7a3c7a6af43b1e14d1d280d8e9"
        ],
        [
            "now apply He, Rgt_not_eq.",
            "VernacExtend",
            "97fdcc58489e786a73a2ed779ce679424246956b"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "rewrite Rabs_pos_eq;[idtac|now left].",
            "VernacExtend",
            "282c6e66387169cf5c7b763a5f3e04772d451823"
        ],
        [
            "case (Rle_or_lt (bpow (fexp n)) x); trivial.",
            "VernacExtend",
            "b0abde5b6138f273a6f3c406ea9d86342b7a0f97"
        ],
        [
            "intros K; contradict Hx2.",
            "VernacExtend",
            "908f459a79eda4ef35ce3644b264a73976ee5175"
        ],
        [
            "apply Rlt_not_eq.",
            "VernacExtend",
            "4d888fdf05ab3816c2e650b03b478096db638cf5"
        ],
        [
            "apply Rlt_le_trans with (bpow (fexp n)).",
            "VernacExtend",
            "84645cb6b36797f6b1c0a6152cf7c2a4f31fe50c"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply round_ge_generic...",
            "VernacExtend",
            "b942d5b4477c026dd26bf182ff70653039654af9"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "apply Rlt_le_trans with (ulp x).",
            "VernacExtend",
            "c5665627915d5b3b9a180afca90a6bdad9bef84e"
        ],
        [
            "apply error_lt_ulp...",
            "VernacExtend",
            "cc239a89d957fb00929dd0b52e58f87b7a36d1f3"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "apply ulp_le_pos.",
            "VernacExtend",
            "228249b7be835a8efa8d735c274a08c11a145092"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem error_le_half_ulp_round : forall { Hm : Monotone_exp fexp }, forall choice x, (Rabs (round beta fexp (Znearest choice) x - x) <= /2 * ulp (round beta fexp (Znearest choice) x))%R.",
            "VernacStartTheoremProof",
            "5f46e43dc82d85dcca8a53bef153797d89365ff4"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros Hm choice x.",
            "VernacExtend",
            "9cdebbc12949e0fc841595b4127e773f95e59084"
        ],
        [
            "case (Req_dec (round beta fexp (Znearest choice) x) 0); intros Hfx.",
            "VernacExtend",
            "9889eb23940eeff9a1296b3e38208219db4419f9"
        ],
        [
            "case (Req_dec x 0); intros Hx.",
            "VernacExtend",
            "c7eef59dd0c7db2a0be8efe921100bcf7bddb099"
        ],
        [
            "apply Rle_trans with (1:=error_le_half_ulp _ _).",
            "VernacExtend",
            "66fbd1ef6f441b65f1007d53756de5170bb59b63"
        ],
        [
            "rewrite Hx, round_0...",
            "VernacExtend",
            "2812e147924da54ba966c5efe832484a33eb854b"
        ],
        [
            "right; ring.",
            "VernacExtend",
            "fd78e12e931c5c888aae66d8787277e6e0aa2249"
        ],
        [
            "generalize (error_le_half_ulp choice x).",
            "VernacExtend",
            "41ed83f8af14251f07fb9946eac9ab1e98717610"
        ],
        [
            "rewrite Hfx.",
            "VernacExtend",
            "8d9edf6eed4a1c32ad88cb65dd39c1c4b1a7326b"
        ],
        [
            "unfold Rminus; rewrite Rplus_0_l, Rabs_Ropp.",
            "VernacExtend",
            "0aa94bdbb4f82667b139a2f6946a4f4b67d95273"
        ],
        [
            "intros N.",
            "VernacExtend",
            "118d8cc76afed992d416336eb00759d8eee4e0b4"
        ],
        [
            "unfold ulp; rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "18eeb4900b3a6b5b47a11e52365f2023f78359bc"
        ],
        [
            "case negligible_exp_spec'.",
            "VernacExtend",
            "387a1196f38e55cdebc472e558dab276ab9e795a"
        ],
        [
            "intros (H1,H2).",
            "VernacExtend",
            "cbe4fae06561c7d97a3cceb65a0c2d56dc027b9e"
        ],
        [
            "contradict Hfx.",
            "VernacExtend",
            "02506b423c2555841101a51296a2518d201f31f5"
        ],
        [
            "apply round_neq_0_negligible_exp...",
            "VernacExtend",
            "ec833f4662b1b249e5c1b93ea28a50d280dfed99"
        ],
        [
            "intros (n,(H1,Hn)); rewrite H1.",
            "VernacExtend",
            "96069dfb5cb3f4100ba25a62018cc70859ef7976"
        ],
        [
            "apply Rle_trans with (1:=N).",
            "VernacExtend",
            "50fb96cf1ef77f5cb3d27c0fd5a34471da27c467"
        ],
        [
            "right; apply f_equal.",
            "VernacExtend",
            "a4891a8d4470eb2c2febe52831f6d7de87ee5aff"
        ],
        [
            "rewrite ulp_neq_0; trivial.",
            "VernacExtend",
            "15f172fa8ef4443236132f274b2179ad6f15bde8"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "apply valid_exp; trivial.",
            "VernacExtend",
            "d915eed897bc8348eef5cd7532e5710af0a8573c"
        ],
        [
            "assert (ln_beta beta x -1 < fexp n)%Z;[idtac|omega].",
            "VernacExtend",
            "9ffbd278d4858272fc3fefe8431a5940556121c4"
        ],
        [
            "apply lt_bpow with beta.",
            "VernacExtend",
            "8b691f5c9c4b728daf6b23cc71cb0efd1b7f2669"
        ],
        [
            "destruct (ln_beta beta x) as (e,He).",
            "VernacExtend",
            "b8b3fd0885671b68d791e7b7a2c74b1cce1c51ed"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rle_lt_trans with (Rabs x).",
            "VernacExtend",
            "09b1010e522634f61af2161fdd1eab140e4a0acb"
        ],
        [
            "now apply He.",
            "VernacExtend",
            "bc5a7f8e7b2610109d0f75edbd9562c779d335b7"
        ],
        [
            "apply Rle_lt_trans with (Rabs (round beta fexp (Znearest choice) x - x)).",
            "VernacExtend",
            "d65822444bdcdfb2fb8b0ee1bb0e9ef1778d29d7"
        ],
        [
            "right; rewrite Hfx; unfold Rminus; rewrite Rplus_0_l.",
            "VernacExtend",
            "f1f8bf2504085da6d9390f1a989f17c8b72628d9"
        ],
        [
            "apply sym_eq, Rabs_Ropp.",
            "VernacExtend",
            "7b592c356c6ff1db5b81df93a68f846ad870d90b"
        ],
        [
            "apply Rlt_le_trans with (ulp 0).",
            "VernacExtend",
            "126447bd86ba4aa8cfc6957be6f220229257fbcf"
        ],
        [
            "rewrite <- Hfx.",
            "VernacExtend",
            "a0699362a459d335a9c22bbcabae974726ef5cab"
        ],
        [
            "apply error_lt_ulp_round...",
            "VernacExtend",
            "78a6da6e10aebea6e46de9a9eb0a19a459ee6296"
        ],
        [
            "unfold ulp; rewrite Req_bool_true, H1; trivial.",
            "VernacExtend",
            "b0553b66f3e69c7a6b8dc75ab82dd95e6c7ad392"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "case (round_DN_or_UP beta fexp (Znearest choice) x); intros Hx.",
            "VernacExtend",
            "b58b85a46791ccdd5ee623d692824242229b143b"
        ],
        [
            "case (Rle_or_lt 0 (round beta fexp Zfloor x)).",
            "VernacExtend",
            "74d2ae35cad187a50ee1669e3aad2024186f60b9"
        ],
        [
            "intros H; destruct H.",
            "VernacExtend",
            "1d9dfbaa09a2b60d688c43a9c68e592b3ab51df7"
        ],
        [
            "rewrite Hx at 2.",
            "VernacExtend",
            "543d7244db608ffabf915c34ad91a366c6993909"
        ],
        [
            "rewrite ulp_DN; trivial.",
            "VernacExtend",
            "649bf89aff2fde859efb897de9da7f2f58626bee"
        ],
        [
            "apply error_le_half_ulp.",
            "VernacExtend",
            "d2a9c9c9a70069398a25eb521cb99b312157fdba"
        ],
        [
            "rewrite Hx in Hfx; contradict Hfx; auto with real.",
            "VernacExtend",
            "43f302c6dcd05eed511e23d74fd5a830622da930"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Rle_trans with (1:=error_le_half_ulp _ _).",
            "VernacExtend",
            "66fbd1ef6f441b65f1007d53756de5170bb59b63"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rlt_le, pos_half_prf.",
            "VernacExtend",
            "46411de5b55190b5bb9bf4ef268a904ff4c964a6"
        ],
        [
            "apply ulp_le.",
            "VernacExtend",
            "533bbd31c8bab365ebb459d22859b4aa0883e724"
        ],
        [
            "rewrite Hx; rewrite (Rabs_left1 x), Rabs_left; try assumption.",
            "VernacExtend",
            "1df4106b6cadbc5aa2faadccaec2f2143214f233"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply (round_DN_pt beta fexp x).",
            "VernacExtend",
            "6e96adc12340c6ff55f6ed257d671cceb87cd90f"
        ],
        [
            "case (Rle_or_lt x 0); trivial.",
            "VernacExtend",
            "6cf66b66e667bf3ba6c34025a0786a60e243dca3"
        ],
        [
            "intros H1; contradict H.",
            "VernacExtend",
            "199fedc1e01133fcc776e70787a87d4661908276"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply round_ge_generic...",
            "VernacExtend",
            "b942d5b4477c026dd26bf182ff70653039654af9"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "case (Rle_or_lt 0 (round beta fexp Zceil x)).",
            "VernacExtend",
            "67a5f59bf0ca88584380f62ba678d2c4459e09b9"
        ],
        [
            "intros H; destruct H.",
            "VernacExtend",
            "1d9dfbaa09a2b60d688c43a9c68e592b3ab51df7"
        ],
        [
            "apply Rle_trans with (1:=error_le_half_ulp _ _).",
            "VernacExtend",
            "66fbd1ef6f441b65f1007d53756de5170bb59b63"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rlt_le, pos_half_prf.",
            "VernacExtend",
            "46411de5b55190b5bb9bf4ef268a904ff4c964a6"
        ],
        [
            "apply ulp_le_pos; trivial.",
            "VernacExtend",
            "29357c9d9f6bbd6d623b9f4c5acb1ec85cdb9a74"
        ],
        [
            "case (Rle_or_lt 0 x); trivial.",
            "VernacExtend",
            "e74cabb569140dd375962d7efc62d77f552f8ff1"
        ],
        [
            "intros H1; contradict H.",
            "VernacExtend",
            "199fedc1e01133fcc776e70787a87d4661908276"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply round_le_generic...",
            "VernacExtend",
            "7f2a01600a932d09b4d49ff42273647f7ead7071"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "rewrite Hx; apply (round_UP_pt beta fexp x).",
            "VernacExtend",
            "74be0f94fb3631709f904c8dcf86d1668f62fcf4"
        ],
        [
            "rewrite Hx in Hfx; contradict Hfx; auto with real.",
            "VernacExtend",
            "43f302c6dcd05eed511e23d74fd5a830622da930"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite Hx at 2; rewrite <- (ulp_opp (round beta fexp Zceil x)).",
            "VernacExtend",
            "7e6ac3c50e43aff90d24f4e83b0e18df2aa4a3c2"
        ],
        [
            "rewrite <- round_DN_opp.",
            "VernacExtend",
            "697cd4b751358168c8d9e8cb73a351fd979ebfdf"
        ],
        [
            "rewrite ulp_DN; trivial.",
            "VernacExtend",
            "649bf89aff2fde859efb897de9da7f2f58626bee"
        ],
        [
            "pattern x at 1 2; rewrite <- Ropp_involutive.",
            "VernacExtend",
            "13a4065f9b37b31b2983cdf59196d2fc92500ba3"
        ],
        [
            "rewrite round_N_opp.",
            "VernacExtend",
            "75544eee29f2902978176e3adf6604dc4f68a033"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "rewrite <- Ropp_plus_distr, Rabs_Ropp.",
            "VernacExtend",
            "9ab05dba9c8ddd949362407cea9feea4460610d5"
        ],
        [
            "apply error_le_half_ulp.",
            "VernacExtend",
            "d2a9c9c9a70069398a25eb521cb99b312157fdba"
        ],
        [
            "rewrite round_DN_opp; apply Ropp_0_gt_lt_contravar; apply Rlt_gt; assumption.",
            "VernacExtend",
            "7df78c8e57c7b5b610669a599b601552a56420cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_le : forall x y, F x -> F y -> (x <= y)%R -> (pred x <= pred y)%R.",
            "VernacStartTheoremProof",
            "d678ac41d07d8c4c50bc8dd6d375642f9dbf64f3"
        ],
        [
            "intros x y Fx Fy [Hxy| ->].",
            "VernacExtend",
            "167fd939e7bbd59624a743f3edfeea835f23521d"
        ],
        [
            "2: apply Rle_refl.",
            "VernacExtend",
            "82c5ff5b5cad97e3961efcc9eb38f647cacc8982"
        ],
        [
            "apply le_pred_lt with (2 := Fy).",
            "VernacExtend",
            "0c335d76873a19071ba1080b127ffdd738425e4a"
        ],
        [
            "now apply generic_format_pred.",
            "VernacExtend",
            "cd37bd667190ee674375cd3e532c8548ccf94e29"
        ],
        [
            "apply Rle_lt_trans with (2 := Hxy).",
            "VernacExtend",
            "1f9aa95de43d14a4bf867fc07f333f7e09b8ae63"
        ],
        [
            "apply pred_le_id.",
            "VernacExtend",
            "97d91dfe16bb39dbbe105dccaa3c4d22cfa2f315"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_le: forall x y, F x -> F y -> (x <= y)%R -> (succ x <= succ y)%R.",
            "VernacStartTheoremProof",
            "a48b495d12b59a44c6bc07d36ecf09c539934dcc"
        ],
        [
            "intros x y Fx Fy Hxy.",
            "VernacExtend",
            "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
        ],
        [
            "rewrite 2!succ_eq_opp_pred_opp.",
            "VernacExtend",
            "75362c0823d45febc845ced01a68ff0e8447172f"
        ],
        [
            "apply Ropp_le_contravar, pred_le; try apply generic_format_opp; try assumption.",
            "VernacExtend",
            "0dc834159c8f6f4bd0ae5d0df7a6dc51128471a3"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_le_inv: forall x y, F x -> F y -> (pred x <= pred y)%R -> (x <= y)%R.",
            "VernacStartTheoremProof",
            "7cc0e76c5b7fc999b881cfde936d515b2d66e778"
        ],
        [
            "intros x y Fx Fy Hxy.",
            "VernacExtend",
            "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
        ],
        [
            "rewrite <- (succ_pred x), <- (succ_pred y); try assumption.",
            "VernacExtend",
            "df049993ee3599ae8c461ab7ab326c71bf4edc13"
        ],
        [
            "apply succ_le; trivial; now apply generic_format_pred.",
            "VernacExtend",
            "5930ddc8237a558769d1891096b8998455bb9001"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_le_inv: forall x y, F x -> F y -> (succ x <= succ y)%R -> (x <= y)%R.",
            "VernacStartTheoremProof",
            "499b3821213d4c99096106317786a35ca6361453"
        ],
        [
            "intros x y Fx Fy Hxy.",
            "VernacExtend",
            "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
        ],
        [
            "rewrite <- (pred_succ x), <- (pred_succ y); try assumption.",
            "VernacExtend",
            "7b248c9ac5d9b33a3f0d513215aac615ee6ff067"
        ],
        [
            "apply pred_le; trivial; now apply generic_format_succ.",
            "VernacExtend",
            "f31c1dee14b99f7244918974e06fe1ebee1703cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_lt : forall x y, F x -> F y -> (x < y)%R -> (pred x < pred y)%R.",
            "VernacStartTheoremProof",
            "74123ea1b1221070f4b3d141259d5b54ff568a11"
        ],
        [
            "intros x y Fx Fy Hxy.",
            "VernacExtend",
            "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
        ],
        [
            "apply Rnot_le_lt.",
            "VernacExtend",
            "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Rgt_not_le with (1 := Hxy).",
            "VernacExtend",
            "e463f5130329078b6ef34d1b6d7ad24890d19ee5"
        ],
        [
            "now apply pred_le_inv.",
            "VernacExtend",
            "729b9d769ec1bee27c51fbfd5f76ec677ea9ca6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_lt : forall x y, F x -> F y -> (x < y)%R -> (succ x < succ y)%R.",
            "VernacStartTheoremProof",
            "b6c6c855bbc78a9cb51e8ef1e558971f7ca43cd2"
        ],
        [
            "intros x y Fx Fy Hxy.",
            "VernacExtend",
            "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
        ],
        [
            "apply Rnot_le_lt.",
            "VernacExtend",
            "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Rgt_not_le with (1 := Hxy).",
            "VernacExtend",
            "e463f5130329078b6ef34d1b6d7ad24890d19ee5"
        ],
        [
            "now apply succ_le_inv.",
            "VernacExtend",
            "c132902cb567d45168fc05aec27eab02baa5e9bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_round_DN_lt_UP : forall x y, F y -> (y < round beta fexp Zceil x -> y <= round beta fexp Zfloor x)%R.",
            "VernacStartTheoremProof",
            "6819df418d14cccfdb6978d01aa3bc3e422876e2"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y Fy Hlt.",
            "VernacExtend",
            "77edd45855b76e9455b9a0816cf13cc3fd85cdf3"
        ],
        [
            "apply round_DN_pt...",
            "VernacExtend",
            "884406c318b02180316764822f617990ec1c51ad"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "contradict Hlt.",
            "VernacExtend",
            "76622bea483cc6a124a2d22492aaa90c58be3771"
        ],
        [
            "apply RIneq.Rle_not_lt.",
            "VernacExtend",
            "e2f0e5a2a33e1bb0406bd7edf5c20f9479e231d1"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_le_gt_DN : forall x y, F y -> (round beta fexp Zfloor x < y -> round beta fexp Zceil x <= y)%R.",
            "VernacStartTheoremProof",
            "2f3f14c168329f64a2176bb699b14b9fe31f36c6"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x y Fy Hlt.",
            "VernacExtend",
            "77edd45855b76e9455b9a0816cf13cc3fd85cdf3"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "contradict Hlt.",
            "VernacExtend",
            "76622bea483cc6a124a2d22492aaa90c58be3771"
        ],
        [
            "apply RIneq.Rle_not_lt.",
            "VernacExtend",
            "e2f0e5a2a33e1bb0406bd7edf5c20f9479e231d1"
        ],
        [
            "apply round_DN_pt...",
            "VernacExtend",
            "884406c318b02180316764822f617990ec1c51ad"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_UP_le_DN : forall x, (pred (round beta fexp Zceil x) <= round beta fexp Zfloor x)%R.",
            "VernacStartTheoremProof",
            "95fede79a89cda85b2398fd4cf0c9c78c06e2bf4"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (generic_format_EM beta fexp x) as [Fx|Fx].",
            "VernacExtend",
            "1595c9b6548b2db06bd75d336f54df8260b4639b"
        ],
        [
            "rewrite !round_generic...",
            "VernacExtend",
            "1f4a87414c20565a3e2103d238e266efa8ed1899"
        ],
        [
            "apply pred_le_id.",
            "VernacExtend",
            "97d91dfe16bb39dbbe105dccaa3c4d22cfa2f315"
        ],
        [
            "case (Req_dec (round beta fexp Zceil x) 0); intros Zx.",
            "VernacExtend",
            "9f270bd7f4cf989674bbb6a58f9f5d51d61e74c3"
        ],
        [
            "rewrite Zx; unfold pred; rewrite Ropp_0.",
            "VernacExtend",
            "ab9d69c7d2381ec234e4fa7b3af9eead1d153e67"
        ],
        [
            "unfold succ; rewrite Rle_bool_true;[idtac|now right].",
            "VernacExtend",
            "68703279e466794a1c8c80c4666bed91be4f074d"
        ],
        [
            "rewrite Rplus_0_l; unfold ulp; rewrite Req_bool_true; trivial.",
            "VernacExtend",
            "49ee4ac6c9b35b847d3773ab89799596fed9305d"
        ],
        [
            "case negligible_exp_spec'.",
            "VernacExtend",
            "387a1196f38e55cdebc472e558dab276ab9e795a"
        ],
        [
            "intros (H1,H2).",
            "VernacExtend",
            "cbe4fae06561c7d97a3cceb65a0c2d56dc027b9e"
        ],
        [
            "contradict Zx; apply round_neq_0_negligible_exp...",
            "VernacExtend",
            "4b1c9c7d387dc31fcf65b6a8a3bc265ce1d26cdf"
        ],
        [
            "intros L; apply Fx; rewrite L; apply generic_format_0.",
            "VernacExtend",
            "cfbbcd38b193511092e64e8a36740e2bf89a6ed6"
        ],
        [
            "intros (n,(H1,Hn)); rewrite H1.",
            "VernacExtend",
            "96069dfb5cb3f4100ba25a62018cc70859ef7976"
        ],
        [
            "case (Rle_or_lt (- bpow (fexp n)) (round beta fexp Zfloor x)); trivial; intros K.",
            "VernacExtend",
            "fd099bc2013a194e7c727bf08b59163e0f5dee81"
        ],
        [
            "absurd (round beta fexp Zceil x <= - bpow (fexp n))%R.",
            "VernacExtend",
            "c8bb7e73800207db319b6c709179a72100e619c8"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "rewrite Zx, <- Ropp_0.",
            "VernacExtend",
            "de3ab0ad5b8df95c7ce9640dfc3dd92307f3380a"
        ],
        [
            "apply Ropp_lt_contravar, bpow_gt_0.",
            "VernacExtend",
            "42660cba3eb353073d59660b7c0231362055c599"
        ],
        [
            "apply round_UP_le_gt_DN; try assumption.",
            "VernacExtend",
            "97ef47df1fb92ff8e2e52183866b78f1a1bacbcf"
        ],
        [
            "apply generic_format_opp, generic_format_bpow.",
            "VernacExtend",
            "f313150a1dfad32a114d20487001392f40d09707"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "assert (let u := round beta fexp Zceil x in pred u < u)%R as Hup.",
            "VernacExtend",
            "d8ac1cba4aa5eaaa3fc9fc175bd7e5be3bff2844"
        ],
        [
            "now apply pred_lt_id.",
            "VernacExtend",
            "140821a3944128e4a7f2d0ca7fe1399eac3b9a57"
        ],
        [
            "apply le_round_DN_lt_UP...",
            "VernacExtend",
            "8efc7eb556366ac4338bd247f00d61223d175547"
        ],
        [
            "apply generic_format_pred...",
            "VernacExtend",
            "8902cd814bd23ce88a2682daa535e8cb3f9e9618"
        ],
        [
            "now apply round_UP_pt.",
            "VernacExtend",
            "5d2cbd68b7b815a8c1e2a718d26431f0ff1e35c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pred_UP_eq_DN : forall x, ~ F x -> (pred (round beta fexp Zceil x) = round beta fexp Zfloor x)%R.",
            "VernacStartTheoremProof",
            "97ebde191fd3340b762d72c5d4b2079dd7ea0c81"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Fx.",
            "VernacExtend",
            "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "now apply pred_UP_le_DN.",
            "VernacExtend",
            "a50bd50a1eb92eab003ebb8ff00cff811e630cc7"
        ],
        [
            "apply le_pred_lt; try apply generic_format_round...",
            "VernacExtend",
            "3d0b6f03cccb32d9ebab532d373ec45b672f2abb"
        ],
        [
            "pose proof round_DN_UP_lt _ _ _ Fx as HE.",
            "VernacExtend",
            "a1619bedc2d72122a469f90182df0b766006b18b"
        ],
        [
            "now apply Rlt_trans with (1 := proj1 HE) (2 := proj2 HE).",
            "VernacExtend",
            "2c67c25bed42bf4b15ee2694f1f2653709adbb51"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_DN_eq_UP : forall x, ~ F x -> (succ (round beta fexp Zfloor x) = round beta fexp Zceil x)%R.",
            "VernacStartTheoremProof",
            "7fccf30e094314211d8b4a1b124d0e520ed2e77e"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Fx.",
            "VernacExtend",
            "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
        ],
        [
            "rewrite <- pred_UP_eq_DN; trivial.",
            "VernacExtend",
            "5c0b240f4a7c4f1c0a0ff3ddb1416f3ebf7eb21d"
        ],
        [
            "rewrite succ_pred; trivial.",
            "VernacExtend",
            "7bd7d534127c9247d4133ca7456c524add33054e"
        ],
        [
            "apply generic_format_round...",
            "VernacExtend",
            "55b5df3e9c740005b41509d39a039e0b1a6f5f87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_DN_eq_betw: forall x d, F d -> (d <= x < succ d)%R -> round beta fexp Zfloor x = d.",
            "VernacStartTheoremProof",
            "7997bf3c0a7908f494cc7c391749f3d55f5a2046"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x d Fd (Hxd1,Hxd2).",
            "VernacExtend",
            "1e3d61692db40643873271f1d018645317caa4f3"
        ],
        [
            "generalize (round_DN_pt beta fexp x); intros (T1,(T2,T3)).",
            "VernacExtend",
            "57f8ac84e1c69649cae51513d179381b1e2ad792"
        ],
        [
            "apply sym_eq, Rle_antisym.",
            "VernacExtend",
            "a41954fa4b0c53702f48462a08a0e6101664a08a"
        ],
        [
            "now apply T3.",
            "VernacExtend",
            "6c24d4bc7e6caba40af8d60b8cc32e074d6e2e2b"
        ],
        [
            "destruct (generic_format_EM beta fexp x) as [Fx|NFx].",
            "VernacExtend",
            "15df38772b4ae459a53c0cf7dcb2e477c4bcf824"
        ],
        [
            "rewrite round_generic...",
            "VernacExtend",
            "af5222f20fb69e4892cd9b764ef3997628087b6a"
        ],
        [
            "apply succ_le_inv; try assumption.",
            "VernacExtend",
            "5b233eb78866c3b940cc1db86b3c78fed6aec766"
        ],
        [
            "apply succ_le_lt; try assumption.",
            "VernacExtend",
            "6645d687bb5e8e6c0e506f7aa1daca1204d70df7"
        ],
        [
            "apply generic_format_succ...",
            "VernacExtend",
            "83fda234b25f66eee5ce279c25c3b0002167f751"
        ],
        [
            "apply succ_le_inv; try assumption.",
            "VernacExtend",
            "5b233eb78866c3b940cc1db86b3c78fed6aec766"
        ],
        [
            "rewrite succ_DN_eq_UP; trivial.",
            "VernacExtend",
            "596086385086edeae633a618c04af0ee9d328d71"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "apply generic_format_succ...",
            "VernacExtend",
            "83fda234b25f66eee5ce279c25c3b0002167f751"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_UP_eq_betw: forall x u, F u -> (pred u < x <= u)%R -> round beta fexp Zceil x = u.",
            "VernacStartTheoremProof",
            "f7085831536106ed97cbc876020f2db26c28347e"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x u Fu Hux.",
            "VernacExtend",
            "750cce91d50480dbfe61baf0f0af8a6ae3919f90"
        ],
        [
            "rewrite <- (Ropp_involutive (round beta fexp Zceil x)).",
            "VernacExtend",
            "ce7b003bc353d0bd44d8c015b66cd2d8813202c8"
        ],
        [
            "rewrite <- round_DN_opp.",
            "VernacExtend",
            "697cd4b751358168c8d9e8cb73a351fd979ebfdf"
        ],
        [
            "rewrite <- (Ropp_involutive u).",
            "VernacExtend",
            "2af402cb48c9a2adb150b8cef67deff956a7a38c"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply round_DN_eq_betw; try assumption.",
            "VernacExtend",
            "6699917df41ff695a154a000b49437add4aedd76"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "split;[now apply Ropp_le_contravar|idtac].",
            "VernacExtend",
            "7c651d1e4a3d25461f9c93bb8069d6a1e4130d93"
        ],
        [
            "rewrite succ_opp.",
            "VernacExtend",
            "5a36d7336e04f8e0f774026e5aab30771271adfa"
        ],
        [
            "now apply Ropp_lt_contravar.",
            "VernacExtend",
            "e78eb591f35b3721103af7436ff32e5846f47e1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_N_le_midp: forall choice u v, F u -> (v < (u + succ u)/2)%R -> (round beta fexp (Znearest choice) v <= u)%R.",
            "VernacStartTheoremProof",
            "4390f034f571e0a05d793daaba3db60398625cba"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros choice u v Fu H.",
            "VernacExtend",
            "98e5719e56ef2258370c7c5d803c7dc9c3093485"
        ],
        [
            "assert (V: ((succ u = 0 /\\ u = 0) \\/ u < succ u)%R).",
            "VernacExtend",
            "42c45c8f265e37323760beed384fc160e66806dd"
        ],
        [
            "specialize (succ_ge_id u); intros P; destruct P as [P|P].",
            "VernacExtend",
            "299c220e152a60917b6219c79d24c3137a74537d"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "case (Req_dec u 0); intros Zu.",
            "VernacExtend",
            "35f9c9ace866d307045023ee2ca34eea1c8d804c"
        ],
        [
            "left; split; trivial.",
            "VernacExtend",
            "bb08f79acdb3338a8faae32b7db83c00fb4f67c7"
        ],
        [
            "now rewrite <- P.",
            "VernacExtend",
            "a5ce8826ce13a056e4bbe6e249ef53403a3f8325"
        ],
        [
            "right; now apply succ_gt_id.",
            "VernacExtend",
            "c05d435ade7c254adb343f87d5d96a977161a768"
        ],
        [
            "destruct V as [(V1,V2)|V].",
            "VernacExtend",
            "42d85e881acd75d2e4ced12b1aa452ff64b7a8ad"
        ],
        [
            "rewrite V2; apply round_le_generic...",
            "VernacExtend",
            "76ee76225d1f4abd64735d1a858e53e5807a8e06"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "left; apply Rlt_le_trans with (1:=H).",
            "VernacExtend",
            "8c04c42c1e749758c109085115a788ab6c38d6d5"
        ],
        [
            "rewrite V1,V2; right; field.",
            "VernacExtend",
            "3ab844e81ded804533364132fb0e160cc2b7dd9a"
        ],
        [
            "assert (T: (u < (u + succ u) / 2 < succ u)%R) by lra.",
            "VernacExtend",
            "4ccb34a634eaf7cd827b2cc07d6a47bb78559d2d"
        ],
        [
            "destruct T as (T1,T2).",
            "VernacExtend",
            "d64e2745c4d0503e32261531fb8df7be35d87704"
        ],
        [
            "apply Rnd_N_pt_monotone with F v ((u + succ u) / 2)%R...",
            "VernacExtend",
            "1c7ea6859c24b9fbd08f96bfa9f5d3d6ce4d634c"
        ],
        [
            "apply round_N_pt...",
            "VernacExtend",
            "c4c42da2940b36dc7a6871ff18871f46c58efbb0"
        ],
        [
            "apply Rnd_DN_pt_N with (succ u)%R.",
            "VernacExtend",
            "f997b64e0e2d6558da0bababb8b3ddac11523f86"
        ],
        [
            "pattern u at 3; replace u with (round beta fexp Zfloor ((u + succ u) / 2)).",
            "VernacExtend",
            "e3d8af5ddad82165e98aa2e731fbdcb844112a5c"
        ],
        [
            "apply round_DN_pt...",
            "VernacExtend",
            "884406c318b02180316764822f617990ec1c51ad"
        ],
        [
            "apply round_DN_eq_betw; trivial.",
            "VernacExtend",
            "9a04a3b0c302f3a7d31c0987c25e58bab75b246c"
        ],
        [
            "split; try left; assumption.",
            "VernacExtend",
            "9624be6bf630586e039df503c1dac468ff151dfd"
        ],
        [
            "pattern (succ u) at 2; replace (succ u) with (round beta fexp Zceil ((u + succ u) / 2)).",
            "VernacExtend",
            "aa2819286fefd7225f12f5f00e489d6774fba3b6"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "apply round_UP_eq_betw; trivial.",
            "VernacExtend",
            "23157de6f0b1ba4d01e59efa6393dbc77e0dce4a"
        ],
        [
            "apply generic_format_succ...",
            "VernacExtend",
            "83fda234b25f66eee5ce279c25c3b0002167f751"
        ],
        [
            "rewrite pred_succ; trivial.",
            "VernacExtend",
            "fb7fdae5d82c093589aca4e531d2ca5e20053224"
        ],
        [
            "split; try left; assumption.",
            "VernacExtend",
            "9624be6bf630586e039df503c1dac468ff151dfd"
        ],
        [
            "right; field.",
            "VernacExtend",
            "745ea5b657a2ce92bd598e5a11292676f3ff684e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_N_ge_midp: forall choice u v, F u -> ((u + pred u)/2 < v)%R -> (u <= round beta fexp (Znearest choice) v)%R.",
            "VernacStartTheoremProof",
            "b4c10bbddb98186c719d57d1529aab4d87ed75d3"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros choice u v Fu H.",
            "VernacExtend",
            "98e5719e56ef2258370c7c5d803c7dc9c3093485"
        ],
        [
            "rewrite <- (Ropp_involutive v).",
            "VernacExtend",
            "239cd0d88bd8841d92c4e36d32bd461efbdd28b2"
        ],
        [
            "rewrite round_N_opp.",
            "VernacExtend",
            "75544eee29f2902978176e3adf6604dc4f68a033"
        ],
        [
            "rewrite <- (Ropp_involutive u).",
            "VernacExtend",
            "2af402cb48c9a2adb150b8cef67deff956a7a38c"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply round_N_le_midp.",
            "VernacExtend",
            "44d1b7587fa1f0473595016b65f7776a13828d9c"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "rewrite Ropp_involutive.",
            "VernacExtend",
            "ba0ab440a50f656f08837503f0228b68c9acdf87"
        ],
        [
            "apply Rle_lt_trans with (2:=H).",
            "VernacExtend",
            "9614cbb69f03b90a25adf5bf07e93263d822c11a"
        ],
        [
            "unfold pred.",
            "VernacExtend",
            "6e45067cb52c62b8c79e0cd80f271215f39c71fa"
        ],
        [
            "right; field.",
            "VernacExtend",
            "745ea5b657a2ce92bd598e5a11292676f3ff684e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_N_eq_DN: forall choice x, let d:=round beta fexp Zfloor x in let u:=round beta fexp Zceil x in (x<(d+u)/2)%R -> round beta fexp (Znearest choice) x = d.",
            "VernacStartTheoremProof",
            "7aed8ffe6608d54c9f5958c5619bb5d38ea6dcff"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros choice x d u H.",
            "VernacExtend",
            "d3c33e288da24bdf334ffc9d026cdb4db564b1ba"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "destruct (generic_format_EM beta fexp x) as [Fx|Fx].",
            "VernacExtend",
            "1595c9b6548b2db06bd75d336f54df8260b4639b"
        ],
        [
            "rewrite round_generic...",
            "VernacExtend",
            "af5222f20fb69e4892cd9b764ef3997628087b6a"
        ],
        [
            "apply round_DN_pt; trivial; now right.",
            "VernacExtend",
            "6e09dc6997cfecbacd5ffd329def8a9295593cfa"
        ],
        [
            "apply round_N_le_midp.",
            "VernacExtend",
            "44d1b7587fa1f0473595016b65f7776a13828d9c"
        ],
        [
            "apply round_DN_pt...",
            "VernacExtend",
            "884406c318b02180316764822f617990ec1c51ad"
        ],
        [
            "apply Rlt_le_trans with (1:=H).",
            "VernacExtend",
            "4cd6bf8b9ffdf301bc7c5f322262f3507ca79aef"
        ],
        [
            "right; apply f_equal2; trivial; apply f_equal.",
            "VernacExtend",
            "d88b43b73d7dfd37f2a9ccfa7eccbf16256fe14f"
        ],
        [
            "now apply sym_eq, succ_DN_eq_UP.",
            "VernacExtend",
            "629ad68c1469e0773a073f6653b2f369ba7d4251"
        ],
        [
            "apply round_ge_generic; try apply round_DN_pt...",
            "VernacExtend",
            "ad06f711ce5b835f696696d9b8a77796f70ab496"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_N_eq_DN_pt: forall choice x d u, Rnd_DN_pt F x d -> Rnd_UP_pt F x u -> (x<(d+u)/2)%R -> round beta fexp (Znearest choice) x = d.",
            "VernacStartTheoremProof",
            "d749ef2bb9834adff80d479528fddc364322e392"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros choice x d u Hd Hu H.",
            "VernacExtend",
            "5831f8f3fbad40ecd7bf9f7c7bc4dd18ee535552"
        ],
        [
            "assert (H0:(d = round beta fexp Zfloor x)%R).",
            "VernacExtend",
            "31aaff4c1f41aefda776e3da2e4f49b9c2d09a2c"
        ],
        [
            "apply Rnd_DN_pt_unicity with (1:=Hd).",
            "VernacExtend",
            "a2ec2461d5e844abb0a758cc70a11d90c8643537"
        ],
        [
            "apply round_DN_pt...",
            "VernacExtend",
            "884406c318b02180316764822f617990ec1c51ad"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply round_N_eq_DN.",
            "VernacExtend",
            "817faa7172454502b5ad8ac97020ae02764e38fd"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite Rnd_UP_pt_unicity with F x (round beta fexp Zceil x) u; try assumption.",
            "VernacExtend",
            "82e5b1ff5d5cfd3700c9303535debc70de2fb359"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_N_eq_UP: forall choice x, let d:=round beta fexp Zfloor x in let u:=round beta fexp Zceil x in ((d+u)/2 < x)%R -> round beta fexp (Znearest choice) x = u.",
            "VernacStartTheoremProof",
            "997b31f18c1c3043d265696bf50309cb01cd6915"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros choice x d u H.",
            "VernacExtend",
            "d3c33e288da24bdf334ffc9d026cdb4db564b1ba"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "apply round_le_generic; try apply round_UP_pt...",
            "VernacExtend",
            "0bf06c0663f36320b83472d26d1930ad9dcb2e5f"
        ],
        [
            "destruct (generic_format_EM beta fexp x) as [Fx|Fx].",
            "VernacExtend",
            "1595c9b6548b2db06bd75d336f54df8260b4639b"
        ],
        [
            "rewrite round_generic...",
            "VernacExtend",
            "af5222f20fb69e4892cd9b764ef3997628087b6a"
        ],
        [
            "apply round_UP_pt; trivial; now right.",
            "VernacExtend",
            "5b9ad3a9051d24abd7bb8cc0fe8b5e7073d940f5"
        ],
        [
            "apply round_N_ge_midp.",
            "VernacExtend",
            "15962d56573b25f532cf94124c9198cf03926b0f"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "apply Rle_lt_trans with (2:=H).",
            "VernacExtend",
            "9614cbb69f03b90a25adf5bf07e93263d822c11a"
        ],
        [
            "right; apply f_equal2; trivial; rewrite Rplus_comm; apply f_equal2; trivial.",
            "VernacExtend",
            "2d53851c7e108e7bb14fa0f59b73dd861f3a1a01"
        ],
        [
            "now apply pred_UP_eq_DN.",
            "VernacExtend",
            "090801d69087d113e76ad7c115bab4d134eb8ed7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_N_eq_UP_pt: forall choice x d u, Rnd_DN_pt F x d -> Rnd_UP_pt F x u -> ((d+u)/2 < x)%R -> round beta fexp (Znearest choice) x = u.",
            "VernacStartTheoremProof",
            "3f712e5cab27dbcfdb5e056c739f292edb009a7e"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros choice x d u Hd Hu H.",
            "VernacExtend",
            "5831f8f3fbad40ecd7bf9f7c7bc4dd18ee535552"
        ],
        [
            "assert (H0:(u = round beta fexp Zceil x)%R).",
            "VernacExtend",
            "cfc85a6c38ed45cc63edcede48cca0a3ca13917b"
        ],
        [
            "apply Rnd_UP_pt_unicity with (1:=Hu).",
            "VernacExtend",
            "b6d25297a341d07e7007ec5b4b720beb1374a55c"
        ],
        [
            "apply round_UP_pt...",
            "VernacExtend",
            "76e1dae0c319836e409c92c6efc5f7490f4e6d87"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply round_N_eq_UP.",
            "VernacExtend",
            "e447c53da5409a19c52bddcdc5f922277818d697"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite Rnd_DN_pt_unicity with F x (round beta fexp Zfloor x) d; try assumption.",
            "VernacExtend",
            "d28a3174975d0a5f5b5fea5866f83de5b3f3e7b6"
        ],
        [
            "apply round_DN_pt...",
            "VernacExtend",
            "884406c318b02180316764822f617990ec1c51ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fcore_ulp.",
            "VernacEndSegment",
            "33100c99995ae12b2da4384c6d5dc62f3d624f7e"
        ]
    ],
    "proofs": [
        {
            "name": "Z_le_dec_aux",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec x y).",
                        "VernacExtend",
                        "4c63ff26a14ac07b9915981081bec6dd38b54fad"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negligible_exp_spec",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "unfold negligible_exp; destruct LPO_Z as [(n,Hn)|Hn].",
                        "VernacExtend",
                        "3a2880bfc9c2ee99f9e284aa695e9d15e005d0ab"
                    ]
                },
                {
                    "command": [
                        "now apply negligible_Some.",
                        "VernacExtend",
                        "187547bb0ef7d6c8496848296de6bd6197aaeb7b"
                    ]
                },
                {
                    "command": [
                        "apply negligible_None.",
                        "VernacExtend",
                        "98d7fcace0824c62ca2871bd41ebb3c26c063d07"
                    ]
                },
                {
                    "command": [
                        "intros n; specialize (Hn n); omega.",
                        "VernacExtend",
                        "b7dc6ab45aea1f7cde2073c57517072bb0ab62e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negligible_exp_spec'",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "unfold negligible_exp; destruct LPO_Z as [(n,Hn)|Hn].",
                        "VernacExtend",
                        "3a2880bfc9c2ee99f9e284aa695e9d15e005d0ab"
                    ]
                },
                {
                    "command": [
                        "right; simpl; exists n; now split.",
                        "VernacExtend",
                        "216ab122174c9fdbc30e6ae3692cafed6051aa95"
                    ]
                },
                {
                    "command": [
                        "left; split; trivial.",
                        "VernacExtend",
                        "bb08f79acdb3338a8faae32b7db83c00fb4f67c7"
                    ]
                },
                {
                    "command": [
                        "intros n; specialize (Hn n); omega.",
                        "VernacExtend",
                        "b7dc6ab45aea1f7cde2073c57517072bb0ab62e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fexp_negligible_exp_eq",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros n m Hn Hm.",
                        "VernacExtend",
                        "c015ffe457193f0270ea4e3a78379b6375abe752"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt n m); intros H.",
                        "VernacExtend",
                        "0d1634be6aa4ceeba31519fe139294d437b55c2e"
                    ]
                },
                {
                    "command": [
                        "apply valid_exp; omega.",
                        "VernacExtend",
                        "6ef75f2c2f4a2ce106e6d8811b105679bfad26f0"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, valid_exp; omega.",
                        "VernacExtend",
                        "d2e090a504f49a9b1f2411f3c9347c9beea4f648"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_neq_0",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold ulp; case (Req_bool_spec x); trivial.",
                        "VernacExtend",
                        "59d2bccef9defdadbfdc66ef15f55c5695994375"
                    ]
                },
                {
                    "command": [
                        "intros H; now contradict H.",
                        "VernacExtend",
                        "abe9b871a7efcd70f3980602fc630d81b2218ece"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_opp",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold ulp.",
                        "VernacExtend",
                        "9e560e414a15c4da6d704e34787237d738152786"
                    ]
                },
                {
                    "command": [
                        "case Req_bool_spec; intros H1.",
                        "VernacExtend",
                        "6f6c0b2218d148482371ffabe76473779f29d682"
                    ]
                },
                {
                    "command": [
                        "rewrite Req_bool_true; trivial.",
                        "VernacExtend",
                        "1ddc34657bbaf0e1ed99f250c33e677f69023738"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive x), H1; ring.",
                        "VernacExtend",
                        "46ea54b22829f32156e42f103ed9f4ce1148cf97"
                    ]
                },
                {
                    "command": [
                        "rewrite Req_bool_false.",
                        "VernacExtend",
                        "87c0332f4e178122c88f4ccd38e07b0c3d1931c8"
                    ]
                },
                {
                    "command": [
                        "now rewrite canonic_exp_opp.",
                        "VernacExtend",
                        "871b361b04a20878ff38a4a4b058b4dff94d5b28"
                    ]
                },
                {
                    "command": [
                        "intros H2; apply H1; rewrite H2; ring.",
                        "VernacExtend",
                        "778220a3a50348d483a10fb83f93d5c0c5fbb93e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_abs",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold ulp; case (Req_bool_spec x 0); intros H1.",
                        "VernacExtend",
                        "7295cebcab8bbc3b2ac76db14a1d9adbfc0f13d3"
                    ]
                },
                {
                    "command": [
                        "rewrite Req_bool_true; trivial.",
                        "VernacExtend",
                        "1ddc34657bbaf0e1ed99f250c33e677f69023738"
                    ]
                },
                {
                    "command": [
                        "now rewrite H1, Rabs_R0.",
                        "VernacExtend",
                        "56db45ecc64612800feb1c74bb80626591c2b1b0"
                    ]
                },
                {
                    "command": [
                        "rewrite Req_bool_false.",
                        "VernacExtend",
                        "87c0332f4e178122c88f4ccd38e07b0c3d1931c8"
                    ]
                },
                {
                    "command": [
                        "now rewrite canonic_exp_abs.",
                        "VernacExtend",
                        "44b2aef1a639bd55914aee93b3b6561ab562a348"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_no_R0.",
                        "VernacExtend",
                        "799535f6b2745ffc198f4b7b5a653816e4ede72a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_ge_0",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros x; unfold ulp; case Req_bool_spec; intros.",
                        "VernacExtend",
                        "aadb5e5bd8cd07d4c9b0e56d2b24b4c824b20f0d"
                    ]
                },
                {
                    "command": [
                        "case negligible_exp; intros.",
                        "VernacExtend",
                        "d010bf10552c7e52151490d1f7d1561cb7410762"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_le_abs",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros x Zx Fx.",
                        "VernacExtend",
                        "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ulp_abs.",
                        "VernacExtend",
                        "0c095ca69ab4d10eed50cc3e3f8830eadef7c9e3"
                    ]
                },
                {
                    "command": [
                        "apply ulp_le_id.",
                        "VernacExtend",
                        "2cd3b70783af30a44249477eb94d86f3f3231002"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_pos_lt.",
                        "VernacExtend",
                        "6644e63c10a4ebb716152f3789ed696595825302"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_abs.",
                        "VernacExtend",
                        "97ee5b6fb3356b9dfee032d9e9aa0b99ec3a2227"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_UP_DN_ulp",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros x Fx.",
                        "VernacExtend",
                        "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Zceil_floor_neq.",
                        "VernacExtend",
                        "b4fc727910b2a0e4293920fe2596a742e2d62876"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Fx.",
                        "VernacExtend",
                        "540de9c00a7d19369574e8ecd876ced9348c1df9"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format, F2R.",
                        "VernacExtend",
                        "395ed202f2878b051c40c4090c0991875bbabc9d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_Z2R.",
                        "VernacExtend",
                        "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "now rewrite scaled_mantissa_mult_bpow.",
                        "VernacExtend",
                        "fab99b6471eeaf42de834b44e57b617fc8d6582a"
                    ]
                },
                {
                    "command": [
                        "intros V; apply Fx.",
                        "VernacExtend",
                        "b907386037de9e909bc59e2f114c15c723dfa425"
                    ]
                },
                {
                    "command": [
                        "rewrite V.",
                        "VernacExtend",
                        "22d30038d8005a7fbe2e5a5c28c65e4e9dc9d597"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_0.",
                        "VernacExtend",
                        "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_bpow",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros e.",
                        "VernacExtend",
                        "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "apply canonic_exp_fexp.",
                        "VernacExtend",
                        "ba7969e9a351da992729f2c38274cc63b9ec6221"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "ring_simplify (e + 1 - 1)%Z.",
                        "VernacExtend",
                        "b3fad0b20c7b660308c7a98672f62e3c87191a96"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply bpow_lt.",
                        "VernacExtend",
                        "45b51ee535829682305d615af418ef00162d772b"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_succ.",
                        "VernacExtend",
                        "f4cf5b932d8c774be510b7802fbeea627fe15261"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq, Rlt_gt, bpow_gt_0.",
                        "VernacExtend",
                        "642fdf2d374f8a7d651214d5afceb3d4fd17fa2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_ulp_0",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "unfold ulp.",
                        "VernacExtend",
                        "9e560e414a15c4da6d704e34787237d738152786"
                    ]
                },
                {
                    "command": [
                        "rewrite Req_bool_true; trivial.",
                        "VernacExtend",
                        "1ddc34657bbaf0e1ed99f250c33e677f69023738"
                    ]
                },
                {
                    "command": [
                        "case negligible_exp_spec.",
                        "VernacExtend",
                        "5c480850adf5f7b9bb835a50c56f1be90974885d"
                    ]
                },
                {
                    "command": [
                        "intros _; apply generic_format_0.",
                        "VernacExtend",
                        "e8f840a66ad04d527f3a831a76c39fb13d42eef1"
                    ]
                },
                {
                    "command": [
                        "intros n H1.",
                        "VernacExtend",
                        "c2fbeb7e6bb47f8211ed4ff786ace830396c66ca"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow.",
                        "VernacExtend",
                        "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
                    ]
                },
                {
                    "command": [
                        "now apply valid_exp.",
                        "VernacExtend",
                        "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_bpow_ge_ulp_0",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros e; unfold ulp.",
                        "VernacExtend",
                        "6e7685c233e7f69ba097964b668ddbd86484d031"
                    ]
                },
                {
                    "command": [
                        "rewrite Req_bool_true; trivial.",
                        "VernacExtend",
                        "1ddc34657bbaf0e1ed99f250c33e677f69023738"
                    ]
                },
                {
                    "command": [
                        "case negligible_exp_spec.",
                        "VernacExtend",
                        "5c480850adf5f7b9bb835a50c56f1be90974885d"
                    ]
                },
                {
                    "command": [
                        "intros H1 _.",
                        "VernacExtend",
                        "6a4fc48a0ec5462f531cd626a9a096023cfc4f75"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow.",
                        "VernacExtend",
                        "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
                    ]
                },
                {
                    "command": [
                        "specialize (H1 (e+1)%Z); omega.",
                        "VernacExtend",
                        "2d8448e591bf3f0ee5c9e3dfce2e965c2edd2ca2"
                    ]
                },
                {
                    "command": [
                        "intros n H1 H2.",
                        "VernacExtend",
                        "c9e6fb4894cb92e0212ddec13f8eed3f418a82ee"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow.",
                        "VernacExtend",
                        "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt (e+1) (fexp (e+1))); intros H4.",
                        "VernacExtend",
                        "eae847d05b9a6d8b63858dbf3bc0fcb6fc8ced95"
                    ]
                },
                {
                    "command": [
                        "absurd (e+1 <= e)%Z.",
                        "VernacExtend",
                        "77f89a6d144b93a981fa41f4110462d793543e0c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (1:=H4).",
                        "VernacExtend",
                        "6f8da5d18ad029d388d6198c36b865b26244603d"
                    ]
                },
                {
                    "command": [
                        "replace (fexp (e+1)) with (fexp n).",
                        "VernacExtend",
                        "394dcc1560c280eea92d6d6e36b29d3aa15de5b6"
                    ]
                },
                {
                    "command": [
                        "now apply le_bpow with beta.",
                        "VernacExtend",
                        "61019a2fbfcc15ae05d39eafdf0368ee528edc57"
                    ]
                },
                {
                    "command": [
                        "now apply fexp_negligible_exp_eq.",
                        "VernacExtend",
                        "43389139faaf48344eaefa07da3d56044d7f4324"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_ulp",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "unfold Exp_not_FTZ; intros H x.",
                        "VernacExtend",
                        "b01209f9703e7216c583d3f0550cd1011ade7ead"
                    ]
                },
                {
                    "command": [
                        "case (Req_dec x 0); intros Hx.",
                        "VernacExtend",
                        "c7eef59dd0c7db2a0be8efe921100bcf7bddb099"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx; apply generic_format_ulp_0.",
                        "VernacExtend",
                        "645b9eafcca9e60de9bc1f0d05a7e92cdaca7a86"
                    ]
                },
                {
                    "command": [
                        "rewrite (ulp_neq_0 _ Hx).",
                        "VernacExtend",
                        "84a5809c9abc3e7404ef63abebdc615e5cc16131"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow; unfold canonic_exp.",
                        "VernacExtend",
                        "4175a017f06a8208116358635dd56e64333b8d98"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_ge_ulp_0",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "unfold Exp_not_FTZ; intros H x.",
                        "VernacExtend",
                        "b01209f9703e7216c583d3f0550cd1011ade7ead"
                    ]
                },
                {
                    "command": [
                        "case (Req_dec x 0); intros Hx.",
                        "VernacExtend",
                        "c7eef59dd0c7db2a0be8efe921100bcf7bddb099"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx; now right.",
                        "VernacExtend",
                        "107f692a7a3b1b2bdae126fbbf201087382dad54"
                    ]
                },
                {
                    "command": [
                        "unfold ulp at 1.",
                        "VernacExtend",
                        "0572dd797107af505ec1b3fd7217d0d0be6589cc"
                    ]
                },
                {
                    "command": [
                        "rewrite Req_bool_true; trivial.",
                        "VernacExtend",
                        "1ddc34657bbaf0e1ed99f250c33e677f69023738"
                    ]
                },
                {
                    "command": [
                        "case negligible_exp_spec'.",
                        "VernacExtend",
                        "387a1196f38e55cdebc472e558dab276ab9e795a"
                    ]
                },
                {
                    "command": [
                        "intros (H1,H2); rewrite H1; apply ulp_ge_0.",
                        "VernacExtend",
                        "34a1eee53b125d9edd52ad6e4b7d02a6f31d7995"
                    ]
                },
                {
                    "command": [
                        "intros (n,(H1,H2)); rewrite H1.",
                        "VernacExtend",
                        "b16847e5599fbae7d4ab04725d0304d7d12e366a"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0; trivial.",
                        "VernacExtend",
                        "15f172fa8ef4443236132f274b2179ad6f15bde8"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le; unfold canonic_exp.",
                        "VernacExtend",
                        "30cc6dfb6d281537599f4c69e9c1491280f8e138"
                    ]
                },
                {
                    "command": [
                        "generalize (ln_beta beta x); intros l.",
                        "VernacExtend",
                        "6d2c4ad6a732fddd73d829d8985983a031cea2ef"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt l (fexp l)); intros Hl.",
                        "VernacExtend",
                        "089137891b51aad7803a2cbf79099f4ad1dc83c1"
                    ]
                },
                {
                    "command": [
                        "rewrite (fexp_negligible_exp_eq n l); trivial; apply Zle_refl.",
                        "VernacExtend",
                        "30a03a62e843b3fea679d2c5d32415cc7d820ff7"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt (fexp n) (fexp l)); trivial; intros K.",
                        "VernacExtend",
                        "527409d0882e74d8d051a89667868ec4d31bf1f9"
                    ]
                },
                {
                    "command": [
                        "absurd (fexp n <= fexp l)%Z.",
                        "VernacExtend",
                        "fcd24461ca8181a6adbd11f809dca6c91d6deae3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (2:= H _).",
                        "VernacExtend",
                        "588cdb1a8e26f88625f828f13ae6e6a60921b9a5"
                    ]
                },
                {
                    "command": [
                        "apply Zeq_le, sym_eq, valid_exp; trivial.",
                        "VernacExtend",
                        "1246873da1730e5433963261d16bf51114269465"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_FTZ_ulp_ge_ulp_0",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros H e.",
                        "VernacExtend",
                        "c0918e4121b291004420d1eea713013aac79391b"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow_inv' with beta.",
                        "VernacExtend",
                        "670530b20eb4792bd0acaec3865a626a08ac842c"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow_ge_ulp_0.",
                        "VernacExtend",
                        "ae5f5cbe439905eae531b6a112f974704be339f0"
                    ]
                },
                {
                    "command": [
                        "replace e with ((e-1)+1)%Z by ring.",
                        "VernacExtend",
                        "86331f953be658b9007651882faeb355dc02fc2c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ulp_bpow.",
                        "VernacExtend",
                        "3583c87799b90c621957d7179ad503aab9182bd8"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_le",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "intros Hm x y Hxy.",
                        "VernacExtend",
                        "8159a84e4f3d5626e25e4922a5f6e14fca8019df"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ulp_abs.",
                        "VernacExtend",
                        "0c095ca69ab4d10eed50cc3e3f8830eadef7c9e3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (ulp_abs y).",
                        "VernacExtend",
                        "ad4e3a044e927a9e91b0721fce8fb6e944a122c1"
                    ]
                },
                {
                    "command": [
                        "apply ulp_le_pos; trivial.",
                        "VernacExtend",
                        "29357c9d9f6bbd6d623b9f4c5acb1ec85cdb9a74"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_eq_pos",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros x Hx; unfold succ.",
                        "VernacExtend",
                        "3af217bf1eb51add6dec7fe7188b5423a166cfe0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rle_bool_true.",
                        "VernacExtend",
                        "071e49710b0aa0c91a38f1ec717fb16f7b0c1436"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_eq_opp_succ_opp",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_eq_opp_pred_opp",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "intros x; unfold pred.",
                        "VernacExtend",
                        "64bb33c36b71891a13280f6302cdf5aaa8cefc9d"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!Ropp_involutive.",
                        "VernacExtend",
                        "d49564ef796bfefc79824afc48d8a66986310002"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_opp",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros x; rewrite succ_eq_opp_pred_opp.",
                        "VernacExtend",
                        "682b567fe026a46d93e86b2c441d599510e06ee5"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive.",
                        "VernacExtend",
                        "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_opp",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros x; rewrite pred_eq_opp_succ_opp.",
                        "VernacExtend",
                        "711379a8e86afd9242f83ffd60c173ef3f8b271a"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive.",
                        "VernacExtend",
                        "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "id_m_ulp_ge_bpow",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "intros x e Fx Hx' Hx.",
                        "VernacExtend",
                        "9fb3b437ff982e82a88ae5da540affa5895285cc"
                    ]
                },
                {
                    "command": [
                        "assert (1 <= Ztrunc (scaled_mantissa beta fexp x))%Z.",
                        "VernacExtend",
                        "4f6751103de8382d657a0452bc81140fc2b29cd5"
                    ]
                },
                {
                    "command": [
                        "assert (0 < Ztrunc (scaled_mantissa beta fexp x))%Z.",
                        "VernacExtend",
                        "f474e47277fc2838cebced00c2295c86ea258b89"
                    ]
                },
                {
                    "command": [
                        "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
                        "VernacExtend",
                        "cc50004bf078c7614bf88890b3bff694a33301de"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Fx.",
                        "VernacExtend",
                        "3eb9ff71c5f9468a2df9b7f7943d9ba7bc8d3704"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2:=Hx).",
                        "VernacExtend",
                        "6f4ed50de93b15e6078a10a54947a690658815ec"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "case (Zle_lt_or_eq _ _ H); intros Hm.",
                        "VernacExtend",
                        "8b33948acc9b9fcca9f05c32bbeac3f17c794cc5"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 ; rewrite Fx.",
                        "VernacExtend",
                        "e7212daf1b2eadf4c14b78c97ccdd2962dbbb4ad"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "pattern (bpow (canonic_exp beta fexp x)) at 2 ; rewrite <- Rmult_1_l.",
                        "VernacExtend",
                        "511c7a4363ae3d36fcc66fd6f75ac47096e04b52"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_minus_distr_r.",
                        "VernacExtend",
                        "18758e497e8bc01cec62916b73173699aa395eff"
                    ]
                },
                {
                    "command": [
                        "change 1%R with (Z2R 1).",
                        "VernacExtend",
                        "70dd8f0fc2009fb1b2dbc2766a6144484b011676"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_minus.",
                        "VernacExtend",
                        "7d4fecf8931f8ca938d25720366e724d7310a2f3"
                    ]
                },
                {
                    "command": [
                        "change (bpow e <= F2R (Float beta (Ztrunc (scaled_mantissa beta fexp x) - 1) (canonic_exp beta fexp x)))%R.",
                        "VernacExtend",
                        "9dec8a2e15935ce119d8d5e67df2ac866b513518"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le_F2R_m1; trivial.",
                        "VernacExtend",
                        "2ea72f691c64b7a8d25c0aac8426c99be676f35e"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Fx.",
                        "VernacExtend",
                        "c7a603b21e388817cbad5f1ef8746b776a29bf93"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq, Rlt_gt.",
                        "VernacExtend",
                        "33d0568d5ebf1ccd3cff903866ed38aee8533e98"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (2:=Hx), bpow_gt_0.",
                        "VernacExtend",
                        "1a0c15a4ad3fde8623b1bd7bc5b314e2d711ef85"
                    ]
                },
                {
                    "command": [
                        "contradict Hx'.",
                        "VernacExtend",
                        "bf2a53f1fd9a939e1ad8f050ced0e409e56ec4da"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1; rewrite Fx.",
                        "VernacExtend",
                        "e7212daf1b2eadf4c14b78c97ccdd2962dbbb4ad"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hm.",
                        "VernacExtend",
                        "69ec748689bbf57009285e1da612c01efdea5784"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmult_1_l.",
                        "VernacExtend",
                        "39aa2da5739377940b431b8d8d8fd48176888975"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq, Rlt_gt.",
                        "VernacExtend",
                        "33d0568d5ebf1ccd3cff903866ed38aee8533e98"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (2:=Hx), bpow_gt_0.",
                        "VernacExtend",
                        "1a0c15a4ad3fde8623b1bd7bc5b314e2d711ef85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "id_p_ulp_le_bpow",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "intros x e Zx Fx Hx.",
                        "VernacExtend",
                        "54e37ae8403fc3779f5bdc589390b0eb5885085c"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 ; rewrite Fx.",
                        "VernacExtend",
                        "e7212daf1b2eadf4c14b78c97ccdd2962dbbb4ad"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "pattern (bpow (canonic_exp beta fexp x)) at 2 ; rewrite <- Rmult_1_l.",
                        "VernacExtend",
                        "511c7a4363ae3d36fcc66fd6f75ac47096e04b52"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_plus_distr_r.",
                        "VernacExtend",
                        "fc7ad719ee7ef2a698d7f17e2549071dcd77682e"
                    ]
                },
                {
                    "command": [
                        "change 1%R with (Z2R 1).",
                        "VernacExtend",
                        "70dd8f0fc2009fb1b2dbc2766a6144484b011676"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_plus.",
                        "VernacExtend",
                        "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
                    ]
                },
                {
                    "command": [
                        "change (F2R (Float beta (Ztrunc (scaled_mantissa beta fexp x) + 1) (canonic_exp beta fexp x)) <= bpow e)%R.",
                        "VernacExtend",
                        "8526fbc3c10035d29ac7544c2258ce0c79da153f"
                    ]
                },
                {
                    "command": [
                        "apply F2R_p1_le_bpow.",
                        "VernacExtend",
                        "c1b5e1f22cf9a6557a3b52b37e6c09bc01cd4f13"
                    ]
                },
                {
                    "command": [
                        "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
                        "VernacExtend",
                        "cc50004bf078c7614bf88890b3bff694a33301de"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Fx.",
                        "VernacExtend",
                        "c7a603b21e388817cbad5f1ef8746b776a29bf93"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Fx.",
                        "VernacExtend",
                        "c7a603b21e388817cbad5f1ef8746b776a29bf93"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_pred_aux1",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "intros x Zx Fx Hx.",
                        "VernacExtend",
                        "b1c758dac630e193780b6cf37d3e70f73517516c"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex, Ex).",
                        "VernacExtend",
                        "4ae43c504e4028726c85ec9490254355ab7e753f"
                    ]
                },
                {
                    "command": [
                        "simpl in Hx.",
                        "VernacExtend",
                        "5ec81d98094402995a527f35cf2e3fc289afc828"
                    ]
                },
                {
                    "command": [
                        "specialize (Ex (Rgt_not_eq _ _ Zx)).",
                        "VernacExtend",
                        "d32f4b8f8b177c6cdab4fdf20d1f94264ecc69ca"
                    ]
                },
                {
                    "command": [
                        "assert (Ex' : (bpow (ex - 1) < x < bpow ex)%R).",
                        "VernacExtend",
                        "64029fadb59c293920e745ca3ac9c251856709d8"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq in Ex.",
                        "VernacExtend",
                        "b2d026151c1616c084a1cae6f2bc2694e83410ff"
                    ]
                },
                {
                    "command": [
                        "destruct Ex as (H,H'); destruct H; split; trivial.",
                        "VernacExtend",
                        "c2e4223615a40286bcd14a5d9fa04803f68d349d"
                    ]
                },
                {
                    "command": [
                        "contradict Hx; easy.",
                        "VernacExtend",
                        "c62d736e16941336130da9fbc61062390c87dcac"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format, scaled_mantissa, canonic_exp.",
                        "VernacExtend",
                        "de5b77fe63834fa08b5f256387ac961205f531a0"
                    ]
                },
                {
                    "command": [
                        "rewrite ln_beta_unique with beta (x - ulp x)%R ex.",
                        "VernacExtend",
                        "fbce43df351f4029e8fd49a45ca37b4956c620ff"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 3 ; rewrite Fx.",
                        "VernacExtend",
                        "f5b7e4c9c105c3121cf94eaa23543d47865fdf39"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "rewrite canonic_exp_fexp with (1 := Ex).",
                        "VernacExtend",
                        "e86367c4913cc8cd4260e235dd6d5b822e8e0823"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_minus_distr_r.",
                        "VernacExtend",
                        "7cac6f5a93014aab094ca24fb3f582a08cd1bfe3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc.",
                        "VernacExtend",
                        "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
                        "VernacExtend",
                        "ed523a468f00f96e47b6acbefb29512258a153e8"
                    ]
                },
                {
                    "command": [
                        "change (bpow 0) with (Z2R 1).",
                        "VernacExtend",
                        "b72f70d42f3227f295cea686fa67bfbd1260f313"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_minus.",
                        "VernacExtend",
                        "7d4fecf8931f8ca938d25720366e724d7310a2f3"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_Z2R.",
                        "VernacExtend",
                        "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_minus.",
                        "VernacExtend",
                        "75c0e17ece028e1c09696e50b0c135aa8a6471e2"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_minus_distr_r.",
                        "VernacExtend",
                        "7cac6f5a93014aab094ca24fb3f582a08cd1bfe3"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmult_1_l.",
                        "VernacExtend",
                        "39aa2da5739377940b431b8d8d8fd48176888975"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply id_m_ulp_ge_bpow; trivial.",
                        "VernacExtend",
                        "fe027238cdb25b53c95f6f01d914a215ef19db07"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "assert (ex-1 < canonic_exp beta fexp x < ex)%Z.",
                        "VernacExtend",
                        "2d45e089698149bea7302ec584a2215b504ce053"
                    ]
                },
                {
                    "command": [
                        "split ; apply (lt_bpow beta) ; rewrite <- H ; easy.",
                        "VernacExtend",
                        "57892739b47a6e4862cc2d3889768451ec84a834"
                    ]
                },
                {
                    "command": [
                        "clear -H0.",
                        "VernacExtend",
                        "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "apply Ex'.",
                        "VernacExtend",
                        "b093cc24e001666e1fa4d782a1829010f89ea6e3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := proj2 Ex').",
                        "VernacExtend",
                        "3e99d73295235deca1554e5f13bcb1a424db17a9"
                    ]
                },
                {
                    "command": [
                        "pattern x at 3 ; rewrite <- Rplus_0_r.",
                        "VernacExtend",
                        "4ae14a033123343b675cbc564af019e7738cdb4b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "apply ulp_ge_0.",
                        "VernacExtend",
                        "5d0ce5d17ef4f7c6c49a717ed77dfcf0148cc9ed"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_minus.",
                        "VernacExtend",
                        "11bca255824a3f085e9099937bd67db6c181e148"
                    ]
                },
                {
                    "command": [
                        "pattern x at 2; rewrite Fx.",
                        "VernacExtend",
                        "08b2ab5a1d7660b907aa90d5fc242aae9ba71a53"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "pattern (bpow (canonic_exp beta fexp x)) at 1; rewrite <- Rmult_1_l.",
                        "VernacExtend",
                        "4867dca71fef6bf901112ed251a7a2eb41a4c34c"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "replace 1%R with (Z2R 1) by reflexivity.",
                        "VernacExtend",
                        "1b169d9ffd7913b0db06d38db9371ae76c3b87c1"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "assert (0 < Ztrunc (scaled_mantissa beta fexp x))%Z.",
                        "VernacExtend",
                        "f474e47277fc2838cebced00c2295c86ea258b89"
                    ]
                },
                {
                    "command": [
                        "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
                        "VernacExtend",
                        "cc50004bf078c7614bf88890b3bff694a33301de"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Fx.",
                        "VernacExtend",
                        "3eb9ff71c5f9468a2df9b7f7943d9ba7bc8d3704"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2:=proj1 Ex').",
                        "VernacExtend",
                        "91c205acaf3024be645843aacfb40b21ff96fab3"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_pred_aux2",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "intros x Zx Fx e Hx.",
                        "VernacExtend",
                        "835c3c2d1eec907889f53997257ba92e849df7c5"
                    ]
                },
                {
                    "command": [
                        "pose (f:=(x - bpow (fexp (e - 1)))%R).",
                        "VernacExtend",
                        "b57d526752a79a75f647f836827184458d887547"
                    ]
                },
                {
                    "command": [
                        "fold f.",
                        "VernacExtend",
                        "de58e7b99431eb33ee9d868e71f2efdc8167d769"
                    ]
                },
                {
                    "command": [
                        "assert (He:(fexp (e-1) <= e-1)%Z).",
                        "VernacExtend",
                        "68332d021aba90b0f8abc850a0e5f55495d75da5"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow_inv with beta; trivial.",
                        "VernacExtend",
                        "0312aa3ed927dfae0a82c2f1880a36bf5277a17a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx; assumption.",
                        "VernacExtend",
                        "4fb1493c9ee15a240b9dfe90adde9430f6e03981"
                    ]
                },
                {
                    "command": [
                        "case (Zle_lt_or_eq _ _ He); clear He; intros He.",
                        "VernacExtend",
                        "6d2dd3421c5fb7fb760b5385f251e19b6ffce606"
                    ]
                },
                {
                    "command": [
                        "assert (f = F2R (Float beta (Zpower beta (e-1-(fexp (e-1))) -1) (fexp (e-1))))%R.",
                        "VernacExtend",
                        "cc07b8de8090a05c2e2a49db1b518dd625948863"
                    ]
                },
                {
                    "command": [
                        "unfold f; rewrite Hx.",
                        "VernacExtend",
                        "15c2c09ff8b2e7a6c351e57146de3d8fc3604859"
                    ]
                },
                {
                    "command": [
                        "unfold F2R; simpl.",
                        "VernacExtend",
                        "a8b73d273d1c692e5deb932d4bd557029927ed13"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_minus, Z2R_Zpower.",
                        "VernacExtend",
                        "b351058e08399db0bf37161e96987314ab897a70"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_minus_distr_r, Rmult_1_l.",
                        "VernacExtend",
                        "ca21cbaa8baff6f996b717d075323593050ca5ce"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "now replace (e - 1 - fexp (e - 1) + fexp (e - 1))%Z with (e-1)%Z by ring.",
                        "VernacExtend",
                        "c899e5f85ce8db0f843e3036a2252d1e526e4429"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_F2R.",
                        "VernacExtend",
                        "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "apply Zeq_le.",
                        "VernacExtend",
                        "15b2cfeee43457d9d2d9b5468b18e659a52650cf"
                    ]
                },
                {
                    "command": [
                        "apply canonic_exp_fexp.",
                        "VernacExtend",
                        "ba7969e9a351da992729f2c38274cc63b9ec6221"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "unfold f; rewrite Hx.",
                        "VernacExtend",
                        "15c2c09ff8b2e7a6c351e57146de3d8fc3604859"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right.",
                        "VernacExtend",
                        "9b60731d6b608338747f09fec19f24d12baad022"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (bpow (fexp (e-1))).",
                        "VernacExtend",
                        "5a6a5ed0f7fb14f7f3c6511ebaa71d9d6e5978ea"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow (e - 2) + bpow (e - 2))%R.",
                        "VernacExtend",
                        "67a1a9427ec2697b0fa65b81a0db8db1aa34d036"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat ; apply bpow_le ; omega.",
                        "VernacExtend",
                        "dc35b4eecc7df1eb5a429e8eb3ef34ce59c25dfb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2*bpow (e - 2))%R;[right; ring|idtac].",
                        "VernacExtend",
                        "a049d897dc61bd966ca22929bf6ad176ff0e5a36"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow 1*bpow (e - 2))%R.",
                        "VernacExtend",
                        "f21b87d02395d6316685f19610a8f4c565b28ec9"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "replace 2%R with (Z2R 2) by reflexivity.",
                        "VernacExtend",
                        "2a88aa789df458555e3360a653317448d10e185c"
                    ]
                },
                {
                    "command": [
                        "replace (bpow 1) with (Z2R beta).",
                        "VernacExtend",
                        "6279da19e37728e549d53f2ce737ad79d913bfb4"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "apply <- Zle_is_le_bool.",
                        "VernacExtend",
                        "ea954b2f99b94cb74e9119fa25034596bca40790"
                    ]
                },
                {
                    "command": [
                        "now destruct beta.",
                        "VernacExtend",
                        "0c19ff5aa6b3ad93137e505451b7b05645e5144a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Zpower_pos; simpl.",
                        "VernacExtend",
                        "d9e7e90469a292f63d6afd5dc7e55b9f2466bd06"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zmult_1_r.",
                        "VernacExtend",
                        "f6f70bbb1f374ceb32e4d41d5982648e20013849"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "replace (1+(e-2))%Z with (e-1)%Z by ring.",
                        "VernacExtend",
                        "e030d5234a1cc37cd5669d78a5ee0043e4f6d1e7"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rplus_0_r.",
                        "VernacExtend",
                        "9c14ce628bea4e8dc982de42fd460ab22bb09911"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rle_0_minus.",
                        "VernacExtend",
                        "d9cf44a251207e029bc076bf6b3fe1a414f2ff45"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "replace f with 0%R.",
                        "VernacExtend",
                        "fe5a9cda92b6cb9dd96870e0b9478a082fc94f45"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_0.",
                        "VernacExtend",
                        "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
                    ]
                },
                {
                    "command": [
                        "unfold f.",
                        "VernacExtend",
                        "54a386f4161710b69df4a2025df24a14e842ecf2"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx, He.",
                        "VernacExtend",
                        "356e0aa8239a5fef020af60062b2c609378e5eba"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_succ_aux1",
            "line_nb": 429,
            "steps": [
                {
                    "command": [
                        "intros x Zx Fx.",
                        "VernacExtend",
                        "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex, Ex).",
                        "VernacExtend",
                        "4ae43c504e4028726c85ec9490254355ab7e753f"
                    ]
                },
                {
                    "command": [
                        "specialize (Ex (Rgt_not_eq _ _ Zx)).",
                        "VernacExtend",
                        "d32f4b8f8b177c6cdab4fdf20d1f94264ecc69ca"
                    ]
                },
                {
                    "command": [
                        "assert (Ex' := Ex).",
                        "VernacExtend",
                        "f986ce32a30bf2cd6ed64062f0e34f3f9e1d9c20"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq in Ex'.",
                        "VernacExtend",
                        "e947027049138c0f1c65be75542abaf5a1843140"
                    ]
                },
                {
                    "command": [
                        "destruct (id_p_ulp_le_bpow x ex) ; try easy.",
                        "VernacExtend",
                        "366cb261954e2185e5c5edc4df53fa096f7c7cdc"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format, scaled_mantissa, canonic_exp.",
                        "VernacExtend",
                        "de5b77fe63834fa08b5f256387ac961205f531a0"
                    ]
                },
                {
                    "command": [
                        "rewrite ln_beta_unique with beta (x + ulp x)%R ex.",
                        "VernacExtend",
                        "52e5282729aba96b0d661b545a56cb39753da219"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 3 ; rewrite Fx.",
                        "VernacExtend",
                        "f5b7e4c9c105c3121cf94eaa23543d47865fdf39"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "rewrite canonic_exp_fexp with (1 := Ex).",
                        "VernacExtend",
                        "e86367c4913cc8cd4260e235dd6d5b822e8e0823"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_r.",
                        "VernacExtend",
                        "ddbb6f4dc1ffc967497bf9fa73715334cda5e5a0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc.",
                        "VernacExtend",
                        "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
                        "VernacExtend",
                        "ed523a468f00f96e47b6acbefb29512258a153e8"
                    ]
                },
                {
                    "command": [
                        "change (bpow 0) with (Z2R 1).",
                        "VernacExtend",
                        "b72f70d42f3227f295cea686fa67bfbd1260f313"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_plus.",
                        "VernacExtend",
                        "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_Z2R.",
                        "VernacExtend",
                        "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_r.",
                        "VernacExtend",
                        "ddbb6f4dc1ffc967497bf9fa73715334cda5e5a0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmult_1_l.",
                        "VernacExtend",
                        "39aa2da5739377940b431b8d8d8fd48176888975"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := proj1 Ex').",
                        "VernacExtend",
                        "7f5271d4b09a97d29897708e5837b48e312ff830"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 ; rewrite <- Rplus_0_r.",
                        "VernacExtend",
                        "8042e1391a755f4c111ac2347fda459e8a49458e"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "apply ulp_ge_0.",
                        "VernacExtend",
                        "5d0ce5d17ef4f7c6c49a717ed77dfcf0148cc9ed"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat.",
                        "VernacExtend",
                        "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "apply ulp_ge_0.",
                        "VernacExtend",
                        "5d0ce5d17ef4f7c6c49a717ed77dfcf0148cc9ed"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow.",
                        "VernacExtend",
                        "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
                    ]
                },
                {
                    "command": [
                        "apply valid_exp.",
                        "VernacExtend",
                        "9335fa4770b756f93530fd54152de0507ba39d3b"
                    ]
                },
                {
                    "command": [
                        "destruct (Zle_or_lt ex (fexp ex)) ; trivial.",
                        "VernacExtend",
                        "e774f3f91253c19f2469a97d66a9dd085822eb4f"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_not_le with (1 := Zx).",
                        "VernacExtend",
                        "0c141297a39994f6f866d806bc858accbe738c92"
                    ]
                },
                {
                    "command": [
                        "rewrite Fx.",
                        "VernacExtend",
                        "6d5fef6b9bb5c0abc3b57cf7001ef10fc8718bc8"
                    ]
                },
                {
                    "command": [
                        "replace (Ztrunc (scaled_mantissa beta fexp x)) with Z0.",
                        "VernacExtend",
                        "0911f4ffa5b7aaa6fc62cd630f220f1836fdc013"
                    ]
                },
                {
                    "command": [
                        "rewrite F2R_0.",
                        "VernacExtend",
                        "2b1ed44aa307676d6672cc7c6a6e12102bae31de"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "unfold scaled_mantissa.",
                        "VernacExtend",
                        "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
                    ]
                },
                {
                    "command": [
                        "rewrite canonic_exp_fexp with (1 := Ex).",
                        "VernacExtend",
                        "e86367c4913cc8cd4260e235dd6d5b822e8e0823"
                    ]
                },
                {
                    "command": [
                        "destruct (mantissa_small_pos beta fexp x ex) ; trivial.",
                        "VernacExtend",
                        "fcb332db01bef34d67b5b58b226b09830b67dd05"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_floor.",
                        "VernacExtend",
                        "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "exact H2.",
                        "VernacExtend",
                        "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_pred_pos",
            "line_nb": 485,
            "steps": [
                {
                    "command": [
                        "intros x Fx Zx.",
                        "VernacExtend",
                        "03cf147ba97dd8bf0db382e691e41808a8fe3178"
                    ]
                },
                {
                    "command": [
                        "unfold pred_pos; case Req_bool_spec; intros H.",
                        "VernacExtend",
                        "0832f47d5ba8c5f3cb8266e02ce72cd3b6309438"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_pred_aux2.",
                        "VernacExtend",
                        "73caa6d42f13db15d5b18e2c4e53276fc441b2aa"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_pred_aux1.",
                        "VernacExtend",
                        "ccc28b3618bf1e8cc92c37e23b1b41e42842ae95"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_succ",
            "line_nb": 491,
            "steps": [
                {
                    "command": [
                        "intros x Fx.",
                        "VernacExtend",
                        "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
                    ]
                },
                {
                    "command": [
                        "unfold succ; case Rle_bool_spec; intros Zx.",
                        "VernacExtend",
                        "5882c68e3e65f3bd8a7474148ff5e9e55b4ca560"
                    ]
                },
                {
                    "command": [
                        "destruct Zx as [Zx|Zx].",
                        "VernacExtend",
                        "39d1826664a3495b71216dd505fb8e8a7800bc49"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_succ_aux1.",
                        "VernacExtend",
                        "fb5230ce7e90fe3a42fe4340a93810150389ecbf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zx, Rplus_0_l.",
                        "VernacExtend",
                        "4d120c1ad37d6043f0fe977ce84797d3c593c1c8"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_ulp_0.",
                        "VernacExtend",
                        "3ba2b27c1856c8fdb00489921a23acba6284f67c"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_opp.",
                        "VernacExtend",
                        "62be59b59957b39ddc7a6a91ae10b7eda813132a"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_pred_pos.",
                        "VernacExtend",
                        "8636c3bf56fb0309b36680ba767bf38c4d798acb"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_0_gt_lt_contravar.",
                        "VernacExtend",
                        "ecb98ecd6b09bc328efde571a05a97f968602afa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_pred",
            "line_nb": 503,
            "steps": [
                {
                    "command": [
                        "intros x Fx.",
                        "VernacExtend",
                        "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
                    ]
                },
                {
                    "command": [
                        "unfold pred.",
                        "VernacExtend",
                        "6e45067cb52c62b8c79e0cd80f271215f39c71fa"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_opp.",
                        "VernacExtend",
                        "62be59b59957b39ddc7a6a91ae10b7eda813132a"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_succ.",
                        "VernacExtend",
                        "c461ec379d3a210b2836d07793074fffa2f70529"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_pos_lt_id",
            "line_nb": 510,
            "steps": [
                {
                    "command": [
                        "intros x Zx.",
                        "VernacExtend",
                        "08f1bfaa3e93c75720cd0db10b7702c6fc3946cd"
                    ]
                },
                {
                    "command": [
                        "unfold pred_pos.",
                        "VernacExtend",
                        "00032b62c2ff86fd6d2463b95a8824b80bdd0bbf"
                    ]
                },
                {
                    "command": [
                        "case Req_bool_spec; intros H.",
                        "VernacExtend",
                        "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rplus_0_r.",
                        "VernacExtend",
                        "9c14ce628bea4e8dc982de42fd460ab22bb09911"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rplus_0_r.",
                        "VernacExtend",
                        "9c14ce628bea4e8dc982de42fd460ab22bb09911"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0; trivial.",
                        "VernacExtend",
                        "15f172fa8ef4443236132f274b2179ad6f15bde8"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_gt_id",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "intros x Zx; unfold succ.",
                        "VernacExtend",
                        "f0200cf9b125dcb1a113c65ba08338d68c1f92d2"
                    ]
                },
                {
                    "command": [
                        "case Rle_bool_spec; intros Hx.",
                        "VernacExtend",
                        "181acf1e48a76558a97f2b4e114a33e12418b402"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1; rewrite <- (Rplus_0_r x).",
                        "VernacExtend",
                        "a91e8e3fb241bfb6d56c92e4a0f26a40df1d56a8"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0; trivial.",
                        "VernacExtend",
                        "15f172fa8ef4443236132f274b2179ad6f15bde8"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1; rewrite <- (Ropp_involutive x).",
                        "VernacExtend",
                        "046990090bb4bae8343ee8707756e127002a9a07"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
                    ]
                },
                {
                    "command": [
                        "apply pred_pos_lt_id.",
                        "VernacExtend",
                        "4d4c19a92aa6248b0649cd4f7858be4879b4a920"
                    ]
                },
                {
                    "command": [
                        "now auto with real.",
                        "VernacExtend",
                        "ed65101a4bf5ea3c345b08a08e4a22201bc38a3c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_lt_id",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "intros x Zx; unfold pred.",
                        "VernacExtend",
                        "32a6993e269a39fcd45b88b67e93f1d3382c8586"
                    ]
                },
                {
                    "command": [
                        "pattern x at 2; rewrite <- (Ropp_involutive x).",
                        "VernacExtend",
                        "85d9d0674aa177d2c1e9816b19cc191cabe2a17b"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
                    ]
                },
                {
                    "command": [
                        "apply succ_gt_id.",
                        "VernacExtend",
                        "855a990f520df43d8f675f50aeeac64505b12d10"
                    ]
                },
                {
                    "command": [
                        "now auto with real.",
                        "VernacExtend",
                        "ed65101a4bf5ea3c345b08a08e4a22201bc38a3c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_ge_id",
            "line_nb": 545,
            "steps": [
                {
                    "command": [
                        "intros x; case (Req_dec x 0).",
                        "VernacExtend",
                        "836703e2b43f55d55d1160d52a760cbadce3f737"
                    ]
                },
                {
                    "command": [
                        "intros V; rewrite V.",
                        "VernacExtend",
                        "2bfe8545237a50d26081a107d0a9653ec3fbb491"
                    ]
                },
                {
                    "command": [
                        "unfold succ; rewrite Rle_bool_true;[idtac|now right].",
                        "VernacExtend",
                        "68703279e466794a1c8c80c4666bed91be4f074d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_l; apply ulp_ge_0.",
                        "VernacExtend",
                        "304ea718811371e4bfa18207fbc08a65bb8e78cb"
                    ]
                },
                {
                    "command": [
                        "intros; left; now apply succ_gt_id.",
                        "VernacExtend",
                        "20c4682d4db1ad9f33c6f056d3b280a4e4d1a61e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_le_id",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "intros x; unfold pred.",
                        "VernacExtend",
                        "64bb33c36b71891a13280f6302cdf5aaa8cefc9d"
                    ]
                },
                {
                    "command": [
                        "pattern x at 2; rewrite <- (Ropp_involutive x).",
                        "VernacExtend",
                        "85d9d0674aa177d2c1e9816b19cc191cabe2a17b"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "apply succ_ge_id.",
                        "VernacExtend",
                        "f21fdfecc025a3ee62ed34f4983e6a2ca56ac619"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_pos_ge_0",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "intros x Zx Fx.",
                        "VernacExtend",
                        "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
                    ]
                },
                {
                    "command": [
                        "unfold pred_pos.",
                        "VernacExtend",
                        "00032b62c2ff86fd6d2463b95a8824b80bdd0bbf"
                    ]
                },
                {
                    "command": [
                        "case Req_bool_spec; intros H.",
                        "VernacExtend",
                        "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_minus.",
                        "VernacExtend",
                        "11bca255824a3f085e9099937bd67db6c181e148"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex,Ex) ; simpl.",
                        "VernacExtend",
                        "b1e4f88c6ee4a9c9d665163dce0c7fa4d6c4566a"
                    ]
                },
                {
                    "command": [
                        "rewrite ln_beta_bpow.",
                        "VernacExtend",
                        "562ed7a7f197615f8fb2cc276e6bc8e10357a919"
                    ]
                },
                {
                    "command": [
                        "ring_simplify (ex - 1 + 1 - 1)%Z.",
                        "VernacExtend",
                        "f5267ccef10c59eba31ddec7257ccde6a5c3a7e7"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow_inv with beta; trivial.",
                        "VernacExtend",
                        "0312aa3ed927dfae0a82c2f1880a36bf5277a17a"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; assumption.",
                        "VernacExtend",
                        "a97c9ef724ad863a1649a87e1183b8c29f2d0f87"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_minus.",
                        "VernacExtend",
                        "11bca255824a3f085e9099937bd67db6c181e148"
                    ]
                },
                {
                    "command": [
                        "now apply ulp_le_id.",
                        "VernacExtend",
                        "25b3942c873e1e0c1260d5e442f5fa2e864d9226"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_ge_0",
            "line_nb": 574,
            "steps": [
                {
                    "command": [
                        "intros x Zx Fx.",
                        "VernacExtend",
                        "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_eq_pos.",
                        "VernacExtend",
                        "a7913ee32dc142a4ef5976fb55d4794a82f1003a"
                    ]
                },
                {
                    "command": [
                        "now apply pred_pos_ge_0.",
                        "VernacExtend",
                        "cd080dca294f509925e5a873551f88ac891ef128"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_pos_plus_ulp_aux2",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "intros x Zx Fx e Hxe Zp.",
                        "VernacExtend",
                        "69e0a31e2bcd0e57d03af65e59cb80d20a226ee4"
                    ]
                },
                {
                    "command": [
                        "replace (ulp (x - bpow (fexp (e - 1)))) with (bpow (fexp (e - 1))).",
                        "VernacExtend",
                        "abc2fedb10fdaabdf3f02d3493353d3d9f648a0c"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "assert (He:(fexp (e-1) <= e-1)%Z).",
                        "VernacExtend",
                        "68332d021aba90b0f8abc850a0e5f55495d75da5"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow_inv with beta; trivial.",
                        "VernacExtend",
                        "0312aa3ed927dfae0a82c2f1880a36bf5277a17a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hxe; assumption.",
                        "VernacExtend",
                        "d4660937e6cb93b89e44199a202b075ce8146ecc"
                    ]
                },
                {
                    "command": [
                        "case (Zle_lt_or_eq _ _ He); clear He; intros He.",
                        "VernacExtend",
                        "6d2dd3421c5fb7fb760b5385f251e19b6ffce606"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0; trivial.",
                        "VernacExtend",
                        "15f172fa8ef4443236132f274b2179ad6f15bde8"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp; apply f_equal.",
                        "VernacExtend",
                        "1d9949982a17e95746f699bd50a13a0775835f49"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_unique.",
                        "VernacExtend",
                        "79d65859d3098a3d6023e78328916ac1d9f90627"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right.",
                        "VernacExtend",
                        "9b60731d6b608338747f09fec19f24d12baad022"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (bpow (fexp (e-1))).",
                        "VernacExtend",
                        "5a6a5ed0f7fb14f7f3c6511ebaa71d9d6e5978ea"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow (e - 2) + bpow (e - 2))%R.",
                        "VernacExtend",
                        "67a1a9427ec2697b0fa65b81a0db8db1aa34d036"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat; apply bpow_le; omega.",
                        "VernacExtend",
                        "dc35b4eecc7df1eb5a429e8eb3ef34ce59c25dfb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2*bpow (e - 2))%R;[right; ring|idtac].",
                        "VernacExtend",
                        "a049d897dc61bd966ca22929bf6ad176ff0e5a36"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow 1*bpow (e - 2))%R.",
                        "VernacExtend",
                        "f21b87d02395d6316685f19610a8f4c565b28ec9"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "replace 2%R with (Z2R 2) by reflexivity.",
                        "VernacExtend",
                        "2a88aa789df458555e3360a653317448d10e185c"
                    ]
                },
                {
                    "command": [
                        "replace (bpow 1) with (Z2R beta).",
                        "VernacExtend",
                        "6279da19e37728e549d53f2ce737ad79d913bfb4"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_le.",
                        "VernacExtend",
                        "b1047db1ca8ec0d49de6b93d8ab59e7c07265bfb"
                    ]
                },
                {
                    "command": [
                        "apply <- Zle_is_le_bool.",
                        "VernacExtend",
                        "ea954b2f99b94cb74e9119fa25034596bca40790"
                    ]
                },
                {
                    "command": [
                        "now destruct beta.",
                        "VernacExtend",
                        "0c19ff5aa6b3ad93137e505451b7b05645e5144a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Zpower_pos; simpl.",
                        "VernacExtend",
                        "d9e7e90469a292f63d6afd5dc7e55b9f2466bd06"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zmult_1_r.",
                        "VernacExtend",
                        "f6f70bbb1f374ceb32e4d41d5982648e20013849"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "replace (1+(e-2))%Z with (e-1)%Z by ring.",
                        "VernacExtend",
                        "e030d5234a1cc37cd5669d78a5ee0043e4f6d1e7"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rplus_0_r, Hxe.",
                        "VernacExtend",
                        "5e8c342dd7ee2810454cb796e64842b62a7e2a69"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rle_0_minus.",
                        "VernacExtend",
                        "d9cf44a251207e029bc076bf6b3fe1a414f2ff45"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxe.",
                        "VernacExtend",
                        "3b6ea8abf17f6dca00e30c3c3c999ced9069608b"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "contradict Zp.",
                        "VernacExtend",
                        "4a8cf1ee5ee52d91e7b2254bc9b2cb359b5a586e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxe, He; ring.",
                        "VernacExtend",
                        "06ceaf8d69cdd66a14e42147794fdec4975dadaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_pos_plus_ulp_aux3",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "intros x Hx Fx e H1 H2.",
                        "VernacExtend",
                        "bbaf441601235f7156ecffab42175e6b219bb7f1"
                    ]
                },
                {
                    "command": [
                        "assert (H3:(x = bpow (fexp (e - 1)))).",
                        "VernacExtend",
                        "acf511de62078a2bc1210039edcb4bbc4ef02830"
                    ]
                },
                {
                    "command": [
                        "now apply Rminus_diag_uniq.",
                        "VernacExtend",
                        "53b13d3db7de2f4c42c9ac660df6538c102b3328"
                    ]
                },
                {
                    "command": [
                        "assert (H4: (fexp (e-1) = e-1)%Z).",
                        "VernacExtend",
                        "c266b4a66a299e27e24afba8d63bdb6f05bf0c5f"
                    ]
                },
                {
                    "command": [
                        "apply bpow_inj with beta.",
                        "VernacExtend",
                        "76f2a42ff5dbc235df33eb03baa423da9cf4b351"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- H1.",
                        "VernacExtend",
                        "3ed18ae6c0befa12fd4388e2abee3bdd735c3702"
                    ]
                },
                {
                    "command": [
                        "unfold ulp; rewrite Req_bool_true; trivial.",
                        "VernacExtend",
                        "18eeb4900b3a6b5b47a11e52365f2023f78359bc"
                    ]
                },
                {
                    "command": [
                        "case negligible_exp_spec.",
                        "VernacExtend",
                        "5c480850adf5f7b9bb835a50c56f1be90974885d"
                    ]
                },
                {
                    "command": [
                        "intros K.",
                        "VernacExtend",
                        "e2e6d7d842a55ca16087666d9b923718d8bd0dec"
                    ]
                },
                {
                    "command": [
                        "specialize (K (e-1)%Z).",
                        "VernacExtend",
                        "ecfd58d39f90077505838567e4aa360dc4851a3e"
                    ]
                },
                {
                    "command": [
                        "contradict K; omega.",
                        "VernacExtend",
                        "d32fbeb375caf3c6ffde1cbe35deb2f74295498b"
                    ]
                },
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply f_equal.",
                        "VernacExtend",
                        "67b8dec73cfd5f234b3b1fc88ff5db6387ad81b4"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt n (e-1)); intros H6.",
                        "VernacExtend",
                        "d3373278ce1c9d302005ebe028992f7e29498d82"
                    ]
                },
                {
                    "command": [
                        "apply valid_exp; omega.",
                        "VernacExtend",
                        "6ef75f2c2f4a2ce106e6d8811b105679bfad26f0"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, valid_exp; omega.",
                        "VernacExtend",
                        "d2e090a504f49a9b1f2411f3c9347c9beea4f648"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_pos_plus_ulp",
            "line_nb": 703,
            "steps": [
                {
                    "command": [
                        "intros x Zx Fx.",
                        "VernacExtend",
                        "c13bf6456603a1f625abfdbe6a00dee258b06c5c"
                    ]
                },
                {
                    "command": [
                        "unfold pred_pos.",
                        "VernacExtend",
                        "00032b62c2ff86fd6d2463b95a8824b80bdd0bbf"
                    ]
                },
                {
                    "command": [
                        "case Req_bool_spec; intros H.",
                        "VernacExtend",
                        "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
                    ]
                },
                {
                    "command": [
                        "case (Req_EM_T (x - bpow (fexp (ln_beta_val beta x (ln_beta beta x) -1))) 0); intros H1.",
                        "VernacExtend",
                        "8537706671e7af22a9e5e602ab67441c547f41d6"
                    ]
                },
                {
                    "command": [
                        "rewrite H1, Rplus_0_l.",
                        "VernacExtend",
                        "57a0868b506781dee54f61b156d4dc23211305c8"
                    ]
                },
                {
                    "command": [
                        "now apply pred_pos_plus_ulp_aux3.",
                        "VernacExtend",
                        "069f202039a376766234bd4a7c08c612c867bd25"
                    ]
                },
                {
                    "command": [
                        "now apply pred_pos_plus_ulp_aux2.",
                        "VernacExtend",
                        "a9439e80be1e81586cd17c0ca4f4f9bd78d06d99"
                    ]
                },
                {
                    "command": [
                        "now apply pred_pos_plus_ulp_aux1.",
                        "VernacExtend",
                        "ac673def40871c8398680becfb9261a47dc64168"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_plus_eps",
            "line_nb": 713,
            "steps": [
                {
                    "command": [
                        "intros x Zx Fx eps Heps.",
                        "VernacExtend",
                        "04b5a1d3f8ca6c259a2b87f851b903d6015f57d9"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex, He).",
                        "VernacExtend",
                        "c9e86093c3be8ec240600e91efe15e45185c4d0b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "specialize (He (Rgt_not_eq _ _ Zx)).",
                        "VernacExtend",
                        "7ea63868c385c99804607d3bd52f39a0037e31df"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_unique.",
                        "VernacExtend",
                        "79d65859d3098a3d6023e78328916ac1d9f90627"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq in He.",
                        "VernacExtend",
                        "9989db6dbc2793eb0c50c589e6b2515c5cad2e30"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := proj1 He).",
                        "VernacExtend",
                        "688b7d4ad4d9c61e02327ef121bc02376fdfb98a"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 ; rewrite <- Rplus_0_r.",
                        "VernacExtend",
                        "8042e1391a755f4c111ac2347fda459e8a49458e"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "83b74ce917a38b4c507ac1ab8d2785aa8d319f4c"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (x + ulp x)%R.",
                        "VernacExtend",
                        "d2118aaa3a7b5211854d5755f0fa336e84c71dc3"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "3bd4c5b4b87c1bf314aa40391ee053f817c7bc6d"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 ; rewrite Fx.",
                        "VernacExtend",
                        "e7212daf1b2eadf4c14b78c97ccdd2962dbbb4ad"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0.",
                        "VernacExtend",
                        "b4bcababf374cfa2a41fe0c19161a11c28a11d32"
                    ]
                },
                {
                    "command": [
                        "unfold F2R.",
                        "VernacExtend",
                        "01074792470ba071b62f8438b8d9b8c922ca2998"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "pattern (bpow (canonic_exp beta fexp x)) at 2 ; rewrite <- Rmult_1_l.",
                        "VernacExtend",
                        "511c7a4363ae3d36fcc66fd6f75ac47096e04b52"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_plus_distr_r.",
                        "VernacExtend",
                        "fc7ad719ee7ef2a698d7f17e2549071dcd77682e"
                    ]
                },
                {
                    "command": [
                        "change 1%R with (Z2R 1).",
                        "VernacExtend",
                        "70dd8f0fc2009fb1b2dbc2766a6144484b011676"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_plus.",
                        "VernacExtend",
                        "34b18f1df9cc7268c70f355324b3f0e0fcc9644f"
                    ]
                },
                {
                    "command": [
                        "change (F2R (Float beta (Ztrunc (scaled_mantissa beta fexp x) + 1) (canonic_exp beta fexp x)) <= bpow ex)%R.",
                        "VernacExtend",
                        "5aa92ab01b2cfd13c8b5f7fd7c1fe448b01a4141"
                    ]
                },
                {
                    "command": [
                        "apply F2R_p1_le_bpow.",
                        "VernacExtend",
                        "c1b5e1f22cf9a6557a3b52b37e6c09bc01cd4f13"
                    ]
                },
                {
                    "command": [
                        "apply F2R_gt_0_reg with beta (canonic_exp beta fexp x).",
                        "VernacExtend",
                        "cc50004bf078c7614bf88890b3bff694a33301de"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Fx.",
                        "VernacExtend",
                        "c7a603b21e388817cbad5f1ef8746b776a29bf93"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Fx.",
                        "VernacExtend",
                        "c7a603b21e388817cbad5f1ef8746b776a29bf93"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat.",
                        "VernacExtend",
                        "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "apply Heps.",
                        "VernacExtend",
                        "90231750e58f3a7b3480beec4b7e7230c8770744"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_UP_pred_plus_eps_pos",
            "line_nb": 885,
            "steps": [
                {
                    "command": [
                        "intros x Hx Fx eps Heps.",
                        "VernacExtend",
                        "30afb1d47f0c85dffe4599a06375644e2c5c5104"
                    ]
                },
                {
                    "command": [
                        "rewrite round_UP_plus_eps_pos; trivial.",
                        "VernacExtend",
                        "cc6d1341f0772815afe8a8fcce5da8594b1e5cd4"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_eq_pos.",
                        "VernacExtend",
                        "a7913ee32dc142a4ef5976fb55d4794a82f1003a"
                    ]
                },
                {
                    "command": [
                        "apply pred_pos_plus_ulp; trivial.",
                        "VernacExtend",
                        "98073b0734cd629518cccf1af766bb428b8e0276"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "now apply pred_ge_0.",
                        "VernacExtend",
                        "306e14761cbc39ffff402e1872b7ee715e3005bf"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_pred; trivial.",
                        "VernacExtend",
                        "f4751004976958ade9ec76cd5b3cb17510589630"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_DN_plus_eps",
            "line_nb": 912,
            "steps": [
                {
                    "command": [
                        "intros x Fx eps Heps.",
                        "VernacExtend",
                        "e9881e9792320540328754f8291705bc04c48216"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt 0 x); intros Zx.",
                        "VernacExtend",
                        "8b80fb46e577b24f7ff4a3304341dea01f324646"
                    ]
                },
                {
                    "command": [
                        "apply round_DN_plus_eps_pos; try assumption.",
                        "VernacExtend",
                        "8a1cbc9b68b6caaca2b9ec33acc46eba0d7fe4fd"
                    ]
                },
                {
                    "command": [
                        "split; try apply Heps.",
                        "VernacExtend",
                        "92a896c5e50094a9646bd82fe61aa7a1a457f003"
                    ]
                },
                {
                    "command": [
                        "rewrite Rle_bool_true in Heps; trivial.",
                        "VernacExtend",
                        "a8f218c03589b4835101889755f38c88c1f8026a"
                    ]
                },
                {
                    "command": [
                        "now apply Heps.",
                        "VernacExtend",
                        "83f545efeac5859ca769100468252a69296d5f90"
                    ]
                },
                {
                    "command": [
                        "rewrite Rle_bool_false in Heps; trivial.",
                        "VernacExtend",
                        "836feba127249cdf87fd3c70fbc50fb8918dc041"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive (x+eps)).",
                        "VernacExtend",
                        "816450bb57634d826ed5e98ad0252e92466ec5eb"
                    ]
                },
                {
                    "command": [
                        "pattern x at 2; rewrite <- (Ropp_involutive x).",
                        "VernacExtend",
                        "85d9d0674aa177d2c1e9816b19cc191cabe2a17b"
                    ]
                },
                {
                    "command": [
                        "rewrite round_DN_opp.",
                        "VernacExtend",
                        "3191e6c7652f5b4ded4cbb288bd3e55653274cdc"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "replace (-(x+eps))%R with (pred (-x) + (ulp (pred (-x)) - eps))%R.",
                        "VernacExtend",
                        "10d676cac8d131f56eb7b842b8a7b54ef4b22e34"
                    ]
                },
                {
                    "command": [
                        "rewrite round_UP_pred_plus_eps_pos; try reflexivity.",
                        "VernacExtend",
                        "066c92d1761489c8ce99b34fcf52c931f5eb51ff"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_0_gt_lt_contravar.",
                        "VernacExtend",
                        "ecb98ecd6b09bc328efde571a05a97f968602afa"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with eps; ring_simplify.",
                        "VernacExtend",
                        "c223c0102e33bf8b88af1a88c90b851468b05e9d"
                    ]
                },
                {
                    "command": [
                        "apply Heps.",
                        "VernacExtend",
                        "90231750e58f3a7b3480beec4b7e7230c8770744"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (eps-ulp (pred (- x)))%R; ring_simplify.",
                        "VernacExtend",
                        "fa9f94b2fbd1e836df66655ce54c4988ea4a87c2"
                    ]
                },
                {
                    "command": [
                        "apply Heps.",
                        "VernacExtend",
                        "90231750e58f3a7b3480beec4b7e7230c8770744"
                    ]
                },
                {
                    "command": [
                        "unfold pred.",
                        "VernacExtend",
                        "6e45067cb52c62b8c79e0cd80f271215f39c71fa"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive.",
                        "VernacExtend",
                        "ba0ab440a50f656f08837503f0228b68c9acdf87"
                    ]
                },
                {
                    "command": [
                        "unfold succ; rewrite Rle_bool_false; try assumption.",
                        "VernacExtend",
                        "4c6fabc7d43736a7485688b4c7e910273bc63d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive; unfold Rminus.",
                        "VernacExtend",
                        "5cbc056b2b3669d01ed87cd192e47396c133e1cc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rplus_assoc, pred_pos_plus_ulp.",
                        "VernacExtend",
                        "070b31496580290b0d103b937291baeab684c820"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_0_gt_lt_contravar.",
                        "VernacExtend",
                        "ecb98ecd6b09bc328efde571a05a97f968602afa"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_pred_lt",
            "line_nb": 1125,
            "steps": [
                {
                    "command": [
                        "intros x y Fx Fy Hxy.",
                        "VernacExtend",
                        "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive x).",
                        "VernacExtend",
                        "1908e4ee868b5f81dd7393a2a516c6e4756cc5e4"
                    ]
                },
                {
                    "command": [
                        "unfold pred; apply Ropp_le_contravar.",
                        "VernacExtend",
                        "19759a4c9e32c44d44830075fa3d9f1c80c478d3"
                    ]
                },
                {
                    "command": [
                        "apply succ_le_lt.",
                        "VernacExtend",
                        "f96909b97cfc058151924bcbad3d9cf554e0b9d4"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "e78eb591f35b3721103af7436ff32e5846f47e1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_succ_le",
            "line_nb": 1134,
            "steps": [
                {
                    "command": [
                        "intros x y Zy Hxy.",
                        "VernacExtend",
                        "ce1deea3dd3141076dc8cdded46af726f69bf8c0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Hxy).",
                        "VernacExtend",
                        "bfb6a058e6aa79b608959d9250227b33542c507e"
                    ]
                },
                {
                    "command": [
                        "now apply succ_gt_id.",
                        "VernacExtend",
                        "180967b02233a0ced714f5c3a59776bc87a2a489"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_lt_le",
            "line_nb": 1139,
            "steps": [
                {
                    "command": [
                        "intros x y Zy Hxy.",
                        "VernacExtend",
                        "ce1deea3dd3141076dc8cdded46af726f69bf8c0"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Hxy).",
                        "VernacExtend",
                        "637372b14e191bbb401360117e35aae334cdca7a"
                    ]
                },
                {
                    "command": [
                        "now apply pred_lt_id.",
                        "VernacExtend",
                        "140821a3944128e4a7f2d0ca7fe1399eac3b9a57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_0",
            "line_nb": 1169,
            "steps": [
                {
                    "command": [
                        "unfold succ.",
                        "VernacExtend",
                        "8d37bbdf17f277d3b9e0a1bfcd91c6eb3f09e939"
                    ]
                },
                {
                    "command": [
                        "rewrite Rle_bool_true.",
                        "VernacExtend",
                        "a9cbb345d80107750a4d675be292ce609218305d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_0_l.",
                        "VernacExtend",
                        "cf8d4ade30d9c7c3114ecbd301b9ca2ddc4870b1"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_0",
            "line_nb": 1175,
            "steps": [
                {
                    "command": [
                        "rewrite <- succ_0.",
                        "VernacExtend",
                        "76317dcd1e91de92debff5759eb63ea8be33c76f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0 at 1.",
                        "VernacExtend",
                        "f81d224d0357ff49d8e2de77e52cc16cf9338df6"
                    ]
                },
                {
                    "command": [
                        "apply pred_opp.",
                        "VernacExtend",
                        "6709a31e90957ca3bdad0599e651a819c4d7fefd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_succ_aux",
            "line_nb": 1180,
            "steps": [
                {
                    "command": [
                        "intros x Fx Hx.",
                        "VernacExtend",
                        "a77573063d21c82841aeec3468a4194152c4d0af"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym.",
                        "VernacExtend",
                        "8e9431fb6db6f151160007e68131f4f5cb1c7968"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le.",
                        "VernacExtend",
                        "3c60597e841405b7d257d92c4717e01515b21555"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply succ_le_lt with (1 := Fx) in H.",
                        "VernacExtend",
                        "b2a7fdecae89f5124a1d70ca478d621c7c4345c8"
                    ]
                },
                {
                    "command": [
                        "revert H.",
                        "VernacExtend",
                        "6842e040dd98a07b1eb54bbabc9c3f1076566a9a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le.",
                        "VernacExtend",
                        "970672dbfa76c5b1a5bbbe80816db4b871608528"
                    ]
                },
                {
                    "command": [
                        "apply pred_lt_id.",
                        "VernacExtend",
                        "2c65a47608cda9a57951cb54fbbd28db9414f481"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq.",
                        "VernacExtend",
                        "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hx).",
                        "VernacExtend",
                        "17cfcea7cef1e39ddff4797053bb05abaf553802"
                    ]
                },
                {
                    "command": [
                        "apply succ_ge_id.",
                        "VernacExtend",
                        "f21fdfecc025a3ee62ed34f4983e6a2ca56ac619"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_pred, generic_format_succ.",
                        "VernacExtend",
                        "9724277165d4a22f3efb98bf1550f5db0697d450"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_lt with (1 := Fx).",
                        "VernacExtend",
                        "239a67e7b13b52b36bd589b2eb928801530806c3"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_succ.",
                        "VernacExtend",
                        "d5d06553c810af8867fdd562b973b5a92dc251c1"
                    ]
                },
                {
                    "command": [
                        "apply succ_gt_id.",
                        "VernacExtend",
                        "855a990f520df43d8f675f50aeeac64505b12d10"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_pred",
            "line_nb": 1200,
            "steps": [
                {
                    "command": [
                        "intros x Fx.",
                        "VernacExtend",
                        "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_or_lt 0 x) as [[Hx|Hx]|Hx].",
                        "VernacExtend",
                        "27f28885ffc72c27f4a7551b7a09dd9dbdbf71e7"
                    ]
                },
                {
                    "command": [
                        "now apply succ_pred_aux.",
                        "VernacExtend",
                        "fe41a99873bfaeafda42ce2c4392045c6fbe59bc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx.",
                        "VernacExtend",
                        "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_0, succ_opp, pred_ulp_0.",
                        "VernacExtend",
                        "d3d5b7849ea8d5685c79635ce8769c1ca10d269f"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_0.",
                        "VernacExtend",
                        "47cff39407a1cebe5fba9237cee9d56885ff4336"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_eq_opp_succ_opp, succ_opp.",
                        "VernacExtend",
                        "5d6ef4333122760179c2072b7b690762f389f7d3"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_succ_aux.",
                        "VernacExtend",
                        "1a1dfd7f10f76c2812f22a8741e64c762198526c"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_involutive.",
                        "VernacExtend",
                        "5693ee789e165349a2c109e8f1a16d4ccb445cfd"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_0_gt_lt_contravar.",
                        "VernacExtend",
                        "ecb98ecd6b09bc328efde571a05a97f968602afa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_succ",
            "line_nb": 1213,
            "steps": [
                {
                    "command": [
                        "intros x Fx.",
                        "VernacExtend",
                        "0ea84c4f294891f926047a9da2b7c25ef18d00c4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive x).",
                        "VernacExtend",
                        "1908e4ee868b5f81dd7393a2a516c6e4756cc5e4"
                    ]
                },
                {
                    "command": [
                        "rewrite succ_opp, pred_opp.",
                        "VernacExtend",
                        "9029c4b1215b208593470c9f185b9a5fa9a44323"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, succ_pred.",
                        "VernacExtend",
                        "7c2d27368d87a5a0a961f4e8c8cdc3c101b414ad"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_UP_pred_plus_eps",
            "line_nb": 1220,
            "steps": [
                {
                    "command": [
                        "intros x Fx eps Heps.",
                        "VernacExtend",
                        "e9881e9792320540328754f8291705bc04c48216"
                    ]
                },
                {
                    "command": [
                        "rewrite round_UP_plus_eps.",
                        "VernacExtend",
                        "972d28cd18c871877a57da354847f8e47417d92a"
                    ]
                },
                {
                    "command": [
                        "now apply succ_pred.",
                        "VernacExtend",
                        "86f7d1b36e59773b21111f3dd2d09a8604de7abd"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_pred.",
                        "VernacExtend",
                        "cd37bd667190ee674375cd3e532c8548ccf94e29"
                    ]
                },
                {
                    "command": [
                        "unfold pred at 4.",
                        "VernacExtend",
                        "b6f53709a9d14627b113e9ab09c822fc10dc1da9"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive, pred_succ.",
                        "VernacExtend",
                        "19277449d891532b2a63cbe6216f7e65c7d7fa94"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_opp.",
                        "VernacExtend",
                        "614ade85f55f34efcc29c0f3949a6e88c1a659b0"
                    ]
                },
                {
                    "command": [
                        "generalize Heps; case (Rle_bool_spec x 0); intros H1 H2.",
                        "VernacExtend",
                        "2eea3e4ce0c152d756414dbe3344689a17e1b287"
                    ]
                },
                {
                    "command": [
                        "rewrite Rle_bool_false; trivial.",
                        "VernacExtend",
                        "b058adfebc086446f7aa8f9bdc622612fee8c719"
                    ]
                },
                {
                    "command": [
                        "case H1; intros H1'.",
                        "VernacExtend",
                        "04f7f48eb0f9ccb93ef11c47b2f1fe980631cf48"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2:=H1).",
                        "VernacExtend",
                        "97dab73b2a99c846bed2e7414a4f5066e1f5b995"
                    ]
                },
                {
                    "command": [
                        "apply pred_lt_id.",
                        "VernacExtend",
                        "2c65a47608cda9a57951cb54fbbd28db9414f481"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_not_eq.",
                        "VernacExtend",
                        "7c469637fc05542bf9c3c4fab85774b12e6b8f93"
                    ]
                },
                {
                    "command": [
                        "rewrite H1'; unfold pred, succ.",
                        "VernacExtend",
                        "f30348c344188a37f1848f2a513ec4c5884502ff"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0; rewrite Rle_bool_true;[idtac|now right].",
                        "VernacExtend",
                        "961888cea19b53a66e7c35f57dcec9a171ce8490"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_l.",
                        "VernacExtend",
                        "b29625dd91809e03948728f9a3f640ec69c648c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0; apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "723e2c9a3b68d6f0d4e39e57a90f9335931ee496"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1:=proj1 H2).",
                        "VernacExtend",
                        "854a304438ac875a15977253030166831ae91046"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1:=proj2 H2).",
                        "VernacExtend",
                        "436f9e2f66df0436e098d6cea2019e306aebb82b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0, H1'.",
                        "VernacExtend",
                        "bf62599f8885e8e6b03e4bebff90378e7ce457ed"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "rewrite Rle_bool_true; trivial.",
                        "VernacExtend",
                        "3f948286db1b02b3a91ddca317ee0ac5afacfb6e"
                    ]
                },
                {
                    "command": [
                        "now apply pred_ge_0.",
                        "VernacExtend",
                        "306e14761cbc39ffff402e1872b7ee715e3005bf"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_DN_minus_eps",
            "line_nb": 1246,
            "steps": [
                {
                    "command": [
                        "intros x Fx eps Heps.",
                        "VernacExtend",
                        "e9881e9792320540328754f8291705bc04c48216"
                    ]
                },
                {
                    "command": [
                        "replace (x-eps)%R with (-(-x+eps))%R by ring.",
                        "VernacExtend",
                        "fc990d7fa8cdcdec72e66655f676594fb49f32fd"
                    ]
                },
                {
                    "command": [
                        "rewrite round_DN_opp.",
                        "VernacExtend",
                        "3191e6c7652f5b4ded4cbb288bd3e55653274cdc"
                    ]
                },
                {
                    "command": [
                        "unfold pred; apply f_equal.",
                        "VernacExtend",
                        "acaea2f087ed0f009d1c3de127ff853166774f0d"
                    ]
                },
                {
                    "command": [
                        "pattern (-x)%R at 1; rewrite <- (pred_succ (-x)).",
                        "VernacExtend",
                        "da90248f7145ad2e9a909f0a40d5a63e43979e28"
                    ]
                },
                {
                    "command": [
                        "apply round_UP_pred_plus_eps.",
                        "VernacExtend",
                        "48b6b6bb99471b1d80c24f15d5f2914146cd6342"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_succ, generic_format_opp.",
                        "VernacExtend",
                        "a86fc032916dca4f1211ff3a5cf50b97108859d2"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_succ.",
                        "VernacExtend",
                        "05abf6f61387d00a9b4dc0ffaf430b3708aef0fb"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_opp.",
                        "VernacExtend",
                        "614ade85f55f34efcc29c0f3949a6e88c1a659b0"
                    ]
                },
                {
                    "command": [
                        "generalize Heps; case (Rle_bool_spec x 0); intros H1 H2.",
                        "VernacExtend",
                        "2eea3e4ce0c152d756414dbe3344689a17e1b287"
                    ]
                },
                {
                    "command": [
                        "rewrite Rle_bool_false; trivial.",
                        "VernacExtend",
                        "b058adfebc086446f7aa8f9bdc622612fee8c719"
                    ]
                },
                {
                    "command": [
                        "case H1; intros H1'.",
                        "VernacExtend",
                        "04f7f48eb0f9ccb93ef11c47b2f1fe980631cf48"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (-x)%R.",
                        "VernacExtend",
                        "ea9ebad78a1a39e845e52cb2e49d2f7bdfd50290"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_0_gt_lt_contravar.",
                        "VernacExtend",
                        "ecb98ecd6b09bc328efde571a05a97f968602afa"
                    ]
                },
                {
                    "command": [
                        "apply succ_ge_id.",
                        "VernacExtend",
                        "f21fdfecc025a3ee62ed34f4983e6a2ca56ac619"
                    ]
                },
                {
                    "command": [
                        "rewrite H1', Ropp_0, succ_eq_pos;[idtac|now right].",
                        "VernacExtend",
                        "2e2fd9ff4a9d622dee123ddcd5d92f3079e83f3a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_l.",
                        "VernacExtend",
                        "b29625dd91809e03948728f9a3f640ec69c648c0"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1:=proj1 H2).",
                        "VernacExtend",
                        "854a304438ac875a15977253030166831ae91046"
                    ]
                },
                {
                    "command": [
                        "rewrite H1' in H2; apply H2.",
                        "VernacExtend",
                        "f0d3190521a42f430a910d860177c1fc37d0c0a1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rle_bool_true.",
                        "VernacExtend",
                        "a9cbb345d80107750a4d675be292ce609218305d"
                    ]
                },
                {
                    "command": [
                        "now rewrite succ_opp, ulp_opp.",
                        "VernacExtend",
                        "973d4478ef804c6d5c2e4c0374ccf747811d6d58"
                    ]
                },
                {
                    "command": [
                        "rewrite succ_opp.",
                        "VernacExtend",
                        "5a36d7336e04f8e0f774026e5aab30771271adfa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0; apply Ropp_le_contravar.",
                        "VernacExtend",
                        "7da389623297383bf0cd78f8b4d8ed8eb90a21c8"
                    ]
                },
                {
                    "command": [
                        "now apply pred_ge_0.",
                        "VernacExtend",
                        "306e14761cbc39ffff402e1872b7ee715e3005bf"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_le",
            "line_nb": 1560,
            "steps": [
                {
                    "command": [
                        "intros x y Fx Fy Hxy.",
                        "VernacExtend",
                        "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!succ_eq_opp_pred_opp.",
                        "VernacExtend",
                        "75362c0823d45febc845ced01a68ff0e8447172f"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar, pred_le; try apply generic_format_opp; try assumption.",
                        "VernacExtend",
                        "0dc834159c8f6f4bd0ae5d0df7a6dc51128471a3"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_le_inv",
            "line_nb": 1566,
            "steps": [
                {
                    "command": [
                        "intros x y Fx Fy Hxy.",
                        "VernacExtend",
                        "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (succ_pred x), <- (succ_pred y); try assumption.",
                        "VernacExtend",
                        "df049993ee3599ae8c461ab7ab326c71bf4edc13"
                    ]
                },
                {
                    "command": [
                        "apply succ_le; trivial; now apply generic_format_pred.",
                        "VernacExtend",
                        "5930ddc8237a558769d1891096b8998455bb9001"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_le_inv",
            "line_nb": 1571,
            "steps": [
                {
                    "command": [
                        "intros x y Fx Fy Hxy.",
                        "VernacExtend",
                        "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (pred_succ x), <- (pred_succ y); try assumption.",
                        "VernacExtend",
                        "7b248c9ac5d9b33a3f0d513215aac615ee6ff067"
                    ]
                },
                {
                    "command": [
                        "apply pred_le; trivial; now apply generic_format_succ.",
                        "VernacExtend",
                        "f31c1dee14b99f7244918974e06fe1ebee1703cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_lt",
            "line_nb": 1576,
            "steps": [
                {
                    "command": [
                        "intros x y Fx Fy Hxy.",
                        "VernacExtend",
                        "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_le_lt.",
                        "VernacExtend",
                        "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_le with (1 := Hxy).",
                        "VernacExtend",
                        "e463f5130329078b6ef34d1b6d7ad24890d19ee5"
                    ]
                },
                {
                    "command": [
                        "now apply pred_le_inv.",
                        "VernacExtend",
                        "729b9d769ec1bee27c51fbfd5f76ec677ea9ca6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_lt",
            "line_nb": 1583,
            "steps": [
                {
                    "command": [
                        "intros x y Fx Fy Hxy.",
                        "VernacExtend",
                        "219d5dcdddd66f394c67fffbbae9ec81ea134d5f"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_le_lt.",
                        "VernacExtend",
                        "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_le with (1 := Hxy).",
                        "VernacExtend",
                        "e463f5130329078b6ef34d1b6d7ad24890d19ee5"
                    ]
                },
                {
                    "command": [
                        "now apply succ_le_inv.",
                        "VernacExtend",
                        "c132902cb567d45168fc05aec27eab02baa5e9bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}