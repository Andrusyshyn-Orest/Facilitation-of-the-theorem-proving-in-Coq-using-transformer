{
    "filename": "compcert/flocq/Core/Fcore_Raux.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Export Reals.",
            "VernacRequire",
            "c308256845bb25cabcadd813416fe220c5f7bc46"
        ],
        [
            "Require Export ZArith.",
            "VernacRequire",
            "e55f3132f44691206e5b3b8ec9a74fbc1c203a27"
        ],
        [
            "Require Export Fcore_Zaux.",
            "VernacRequire",
            "70364ff8012e046376032e23de43aacc08b63990"
        ],
        [
            "Section Rmissing.",
            "VernacBeginSection",
            "5bdce4f415272cf8e19a708abf9a4cb75c46bbef"
        ],
        [
            "Theorem Rle_0_minus : forall x y, (x <= y)%R -> (0 <= y - x)%R.",
            "VernacStartTheoremProof",
            "b43cd9d2710b66804b031790e0d1843ba51f212b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rge_le.",
            "VernacExtend",
            "eae8ed3f063c0c64fc52ba03563e73be950936a6"
        ],
        [
            "apply Rge_minus.",
            "VernacExtend",
            "a4511845a3392e6b50fa37e8429010098a62df7d"
        ],
        [
            "now apply Rle_ge.",
            "VernacExtend",
            "cfaaed0928a5913dd1c0a45d2536af0f1ea04705"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_eq_Rabs : forall x y : R, Rabs x = Rabs y -> x = y \\/ x = Ropp y.",
            "VernacStartTheoremProof",
            "92f3af8470fa19c9e02fecf6e3c4e00c6df9b3e6"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "unfold Rabs in H.",
            "VernacExtend",
            "4412519e8e61187bf26ab028718bac5ef23219d8"
        ],
        [
            "destruct (Rcase_abs x) as [_|_].",
            "VernacExtend",
            "1f46103d60118efbc9868ae75c17c103408068be"
        ],
        [
            "assert (H' := f_equal Ropp H).",
            "VernacExtend",
            "57ef2d6abab2ffe3d89de53e10975f2e169c94e5"
        ],
        [
            "rewrite Ropp_involutive in H'.",
            "VernacExtend",
            "fb49a4b235034cfb63ab3d95f3fa681c01653265"
        ],
        [
            "rewrite H'.",
            "VernacExtend",
            "232d4714354910d49fdbf1140eac1d26da075d17"
        ],
        [
            "destruct (Rcase_abs y) as [_|_].",
            "VernacExtend",
            "95735143ac221302036e8375ad9cfa6b8fc4c32a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply Ropp_involutive.",
            "VernacExtend",
            "5693ee789e165349a2c109e8f1a16d4ccb445cfd"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "now destruct (Rcase_abs y) as [_|_] ; [right|left].",
            "VernacExtend",
            "8596a612c38da99e0a758195d6a34bf44c1cf57b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_minus_le: forall x y : R, (0 <= y)%R -> (y <= 2*x)%R -> (Rabs (x-y) <= x)%R.",
            "VernacStartTheoremProof",
            "abfcb9a4104d05e621bcbf6aa20d9dea38142e2a"
        ],
        [
            "intros x y Hx Hy.",
            "VernacExtend",
            "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
        ],
        [
            "unfold Rabs; case (Rcase_abs (x - y)); intros H.",
            "VernacExtend",
            "39fa52f79b7d00f4b07e6dc229d5950fde5d375d"
        ],
        [
            "apply Rplus_le_reg_l with x; ring_simplify; assumption.",
            "VernacExtend",
            "dbb50110094bcca074ee18e9f756dac1b0b97dbe"
        ],
        [
            "apply Rplus_le_reg_l with (-x)%R; ring_simplify.",
            "VernacExtend",
            "000d1170eedb8ddd88a57d020ac73ba5fa7e03e0"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rplus_eq_reg_r : forall r r1 r2 : R, (r1 + r = r2 + r)%R -> (r1 = r2)%R.",
            "VernacStartTheoremProof",
            "4b84a76d30fe118fca168180862d213a04f4a26e"
        ],
        [
            "intros r r1 r2 H.",
            "VernacExtend",
            "7d69b4a5c41c5fd894131fecf3224173010b0c0e"
        ],
        [
            "apply Rplus_eq_reg_l with r.",
            "VernacExtend",
            "8a1e4989327befc80e70872c28cbfcd35ad49a11"
        ],
        [
            "now rewrite 2!(Rplus_comm r).",
            "VernacExtend",
            "c98a82163595e3644c2dd82ca175b5300ea36490"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rplus_lt_reg_l : forall r r1 r2 : R, (r + r1 < r + r2)%R -> (r1 < r2)%R.",
            "VernacStartTheoremProof",
            "ff329f92022784e84ba6a70d44486798f0ceabad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "solve [ apply Rplus_lt_reg_l with (1 := H) | apply Rplus_lt_reg_r with (1 := H) ].",
            "VernacExtend",
            "618011807c907df4769a41e61eef94faf2ab2ffa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rplus_lt_reg_r : forall r r1 r2 : R, (r1 + r < r2 + r)%R -> (r1 < r2)%R.",
            "VernacStartTheoremProof",
            "fd1c293a601df831a30726002bb33a948c710fc8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rplus_lt_reg_l with r.",
            "VernacExtend",
            "b2859e4c3aa97868bb5077a7cbe3aa127a1b83ed"
        ],
        [
            "now rewrite 2!(Rplus_comm r).",
            "VernacExtend",
            "c98a82163595e3644c2dd82ca175b5300ea36490"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rplus_le_reg_r : forall r r1 r2 : R, (r1 + r <= r2 + r)%R -> (r1 <= r2)%R.",
            "VernacStartTheoremProof",
            "f4655e587ad2c5820310e45582d31b4b053cff35"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rplus_le_reg_l with r.",
            "VernacExtend",
            "eafcb9776db331932c962a2902d48f04cb211745"
        ],
        [
            "now rewrite 2!(Rplus_comm r).",
            "VernacExtend",
            "c98a82163595e3644c2dd82ca175b5300ea36490"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_lt_reg_r : forall r r1 r2 : R, (0 < r)%R -> (r1 * r < r2 * r)%R -> (r1 < r2)%R.",
            "VernacStartTheoremProof",
            "e8d8351b41999fb14cc5c95e1ce18e68af3cfe6b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rmult_lt_reg_l with r.",
            "VernacExtend",
            "951b260ea75ec0e209bdf66ef5030fdc54071be5"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "now rewrite 2!(Rmult_comm r).",
            "VernacExtend",
            "557bf21287e064822cbaab9ac6fdbacad2aa49c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_le_reg_r : forall r r1 r2 : R, (0 < r)%R -> (r1 * r <= r2 * r)%R -> (r1 <= r2)%R.",
            "VernacStartTheoremProof",
            "e43faea1311a0f8fcba6c0906f1bafbdd4819b9c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rmult_le_reg_l with r.",
            "VernacExtend",
            "69bdcde7296fea42c305ec364175b946a42b4148"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "now rewrite 2!(Rmult_comm r).",
            "VernacExtend",
            "557bf21287e064822cbaab9ac6fdbacad2aa49c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_lt_compat : forall r1 r2 r3 r4, (0 <= r1)%R -> (0 <= r3)%R -> (r1 < r2)%R -> (r3 < r4)%R -> (r1 * r3 < r2 * r4)%R.",
            "VernacStartTheoremProof",
            "7c286bc120510feb499283482dbc8f9e993440b7"
        ],
        [
            "intros r1 r2 r3 r4 Pr1 Pr3 H12 H34.",
            "VernacExtend",
            "df63838156608b8fc8a09fa2337409512ae87d58"
        ],
        [
            "apply Rle_lt_trans with (r1 * r4)%R.",
            "VernacExtend",
            "83577b785bf3d78cffb3f72c909fce8bba7bf2cf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact Pr1.",
            "VernacExtend",
            "3eb1a9701b963fb533eb12fd973faad8c0d0971e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply Rle_lt_trans with r3.",
            "VernacExtend",
            "e8af61dcb6385cd15224cb2e0fe184e58e6ccb04"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact H12.",
            "VernacExtend",
            "b9348fdc21b7bcee6cb44dcec4cedd2c158efd73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_eq_reg_r : forall r r1 r2 : R, (r1 * r)%R = (r2 * r)%R -> r <> 0%R -> r1 = r2.",
            "VernacStartTheoremProof",
            "8c3123eca288f41c6ed2cc3aee8c1c78de2f3f8e"
        ],
        [
            "intros r r1 r2 H1 H2.",
            "VernacExtend",
            "248a501618e63722000384d6d7e286cf5ef20292"
        ],
        [
            "apply Rmult_eq_reg_l with r.",
            "VernacExtend",
            "2e9c0ec8c00678b1d33a0cb26d627b7d81a38919"
        ],
        [
            "now rewrite 2!(Rmult_comm r).",
            "VernacExtend",
            "557bf21287e064822cbaab9ac6fdbacad2aa49c5"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_minus_distr_r : forall r r1 r2 : R, ((r1 - r2) * r = r1 * r - r2 * r)%R.",
            "VernacStartTheoremProof",
            "51df33e161e83f221e4062bd9bab2f788e61acd1"
        ],
        [
            "intros r r1 r2.",
            "VernacExtend",
            "252ef0d5658be505901d0cd7aa950bafb354cc5f"
        ],
        [
            "rewrite <- 3!(Rmult_comm r).",
            "VernacExtend",
            "8844f996084b134a1e21c0b3a3a8957265c5acfd"
        ],
        [
            "apply Rmult_minus_distr_l.",
            "VernacExtend",
            "3686ed9fff6bd2ca29f1b13c28d4f683aaa4b945"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmult_neq_reg_r: forall r1 r2 r3:R, (r2 * r1 <> r3 * r1)%R -> r2 <> r3.",
            "VernacStartTheoremProof",
            "90dd494521fa477af64a3a8ad07a6311167f83d2"
        ],
        [
            "intros r1 r2 r3 H1 H2.",
            "VernacExtend",
            "7992f70ee4f536fc5511bf5eb8d3d2b575d82a07"
        ],
        [
            "apply H1; rewrite H2; ring.",
            "VernacExtend",
            "49a9394ddf4a24119584113853ef563a7e0c823f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmult_neq_compat_r: forall r1 r2 r3:R, (r1 <> 0)%R -> (r2 <> r3)%R -> (r2 *r1 <> r3*r1)%R.",
            "VernacStartTheoremProof",
            "1e91a932a70a594eb12fbc14817db95ebb9fbc39"
        ],
        [
            "intros r1 r2 r3 H H1 H2.",
            "VernacExtend",
            "723c95d75c23e44991caafaf10cebb9230687a39"
        ],
        [
            "now apply H1, Rmult_eq_reg_r with r1.",
            "VernacExtend",
            "2539204087b1d5cf1d7f5401e6a35a8ef4e741b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_min_distr_r : forall r r1 r2 : R, (0 <= r)%R -> (Rmin r1 r2 * r)%R = Rmin (r1 * r) (r2 * r).",
            "VernacStartTheoremProof",
            "ef7e6bc96e977522ee981aabdaf16a03be468968"
        ],
        [
            "intros r r1 r2 [Hr|Hr].",
            "VernacExtend",
            "7143917cfdbafd3ed577614e23b89e3dae409c98"
        ],
        [
            "unfold Rmin.",
            "VernacExtend",
            "ec4de2dbd1c783154b87decb3c93990283dcef6b"
        ],
        [
            "destruct (Rle_dec r1 r2) as [H1|H1] ; destruct (Rle_dec (r1 * r) (r2 * r)) as [H2|H2] ; try easy.",
            "VernacExtend",
            "fd754ea3ddbf5869b8be112c605bbe775f69c93d"
        ],
        [
            "apply (f_equal (fun x => Rmult x r)).",
            "VernacExtend",
            "8a78580996684cdb7850fd4bc2665c697ffd4538"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "apply Rmult_le_reg_r with (1 := Hr).",
            "VernacExtend",
            "3e109a7ba703df2da101360d3161db034ebe0c03"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "now apply Rnot_le_lt.",
            "VernacExtend",
            "472d95d86d32de5f65bdb99059686dfbade9f294"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "now apply Rnot_le_lt.",
            "VernacExtend",
            "472d95d86d32de5f65bdb99059686dfbade9f294"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "rewrite <- Hr.",
            "VernacExtend",
            "2f6bc99e9b1c75ed1711fcaabf67f634d72e5a37"
        ],
        [
            "rewrite 3!Rmult_0_r.",
            "VernacExtend",
            "ddf2ee157433882ea46d3efd9edca4a5732d545f"
        ],
        [
            "unfold Rmin.",
            "VernacExtend",
            "ec4de2dbd1c783154b87decb3c93990283dcef6b"
        ],
        [
            "destruct (Rle_dec 0 0) as [H0|H0].",
            "VernacExtend",
            "145cbf3c3409e84348ff69481bc107ede0b2375a"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_min_distr_l : forall r r1 r2 : R, (0 <= r)%R -> (r * Rmin r1 r2)%R = Rmin (r * r1) (r * r2).",
            "VernacStartTheoremProof",
            "dae8a285d0635ed264de317e34fb551e9fe64835"
        ],
        [
            "intros r r1 r2 Hr.",
            "VernacExtend",
            "d8343279711521089d8863d4679b07f2d9b025c2"
        ],
        [
            "rewrite 3!(Rmult_comm r).",
            "VernacExtend",
            "6933f70934afa1ce738115ade2bdf0bbefc32dca"
        ],
        [
            "now apply Rmult_min_distr_r.",
            "VernacExtend",
            "8b65af81b16653f2761a377478934b2908e12d50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_opp: forall x y, (Rmin (-x) (-y) = - Rmax x y)%R.",
            "VernacStartTheoremProof",
            "9b72e49f2f09077f2953b3655f1fb32b00f9c193"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply Rmax_case_strong; intros H.",
            "VernacExtend",
            "e14bc0bbd56612d7a80b646e975d2e08154b9003"
        ],
        [
            "rewrite Rmin_left; trivial.",
            "VernacExtend",
            "3ea763a178b68b8e8d0101e9cb23afcf8a690109"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "rewrite Rmin_right; trivial.",
            "VernacExtend",
            "66372d75ab5e2f3141a4f097859e0bde261205f7"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_opp: forall x y, (Rmax (-x) (-y) = - Rmin x y)%R.",
            "VernacStartTheoremProof",
            "3f1d902a1a30cec96d4fd20ffa719f7ee1413db5"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply Rmin_case_strong; intros H.",
            "VernacExtend",
            "93fb2bd112427cb2754262e41dd424158f9f0ffe"
        ],
        [
            "rewrite Rmax_left; trivial.",
            "VernacExtend",
            "8a68f8f86033635c553d166d15d910b63813875d"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "rewrite Rmax_right; trivial.",
            "VernacExtend",
            "163bcf42a5f7777b6bcdf12d7e692945be8c61a0"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem exp_le : forall x y : R, (x <= y)%R -> (exp x <= exp y)%R.",
            "VernacStartTheoremProof",
            "c6bedce881ea96d2c21a6885b2f8ec41c10929e1"
        ],
        [
            "intros x y [H|H].",
            "VernacExtend",
            "4315d3976cbb4dc1e5aa5788996a1917036adb34"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "now apply exp_increasing.",
            "VernacExtend",
            "39e46376b7a9f77b5c8ffc8211425092b5bc112f"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rinv_lt : forall x y, (0 < x)%R -> (x < y)%R -> (/y < /x)%R.",
            "VernacStartTheoremProof",
            "289bddf35497d97823fec5ce56457c3254dab5e7"
        ],
        [
            "intros x y Hx Hxy.",
            "VernacExtend",
            "e2fa962759626d3d2c242c0e1b9e884dd173573f"
        ],
        [
            "apply Rinv_lt_contravar.",
            "VernacExtend",
            "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "now apply Rlt_trans with x.",
            "VernacExtend",
            "50cb1795c493c89ad4458298a2db20c67fa2bc3a"
        ],
        [
            "exact Hxy.",
            "VernacExtend",
            "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rinv_le : forall x y, (0 < x)%R -> (x <= y)%R -> (/y <= /x)%R.",
            "VernacStartTheoremProof",
            "bf2399e46361bb48a61bea639c1698f4d98a4c0d"
        ],
        [
            "intros x y Hx Hxy.",
            "VernacExtend",
            "e2fa962759626d3d2c242c0e1b9e884dd173573f"
        ],
        [
            "apply Rle_Rinv.",
            "VernacExtend",
            "1c2230e335301795a7c124c6298eabc78161766e"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "now apply Rlt_le_trans with x.",
            "VernacExtend",
            "834462f3b6aebf2dfb26dbef0bb0f4b93df468d0"
        ],
        [
            "exact Hxy.",
            "VernacExtend",
            "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sqrt_ge_0 : forall x : R, (0 <= sqrt x)%R.",
            "VernacStartTheoremProof",
            "384a81c6ce4bddd50cb383eea7af3f1fc61ffe27"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold sqrt.",
            "VernacExtend",
            "71ef64092f0003bcdade22760b25585d0190003b"
        ],
        [
            "destruct (Rcase_abs x) as [_|H].",
            "VernacExtend",
            "258f36b4961901de3739fe4c9a213a2f048a433e"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rsqrt_positivity.",
            "VernacExtend",
            "c089a16cf41c581e86d723b7996d69567c3bf3f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_neg : forall x, (x <= 0)%R -> (sqrt x = 0)%R.",
            "VernacStartTheoremProof",
            "58812be5f492ca1ae3df84be0a169639b2edba63"
        ],
        [
            "intros x Npx.",
            "VernacExtend",
            "76b8a502ca3ef411810120154de6c1cc4dca3fe8"
        ],
        [
            "destruct (Req_dec x 0) as [Zx|Nzx].",
            "VernacExtend",
            "a9fd0c25b4dba2604ee89352bda5eb8b54702c72"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Zx.",
            "VernacExtend",
            "581c5d76fc2e01443ebc6c7c2af3efff071cc08e"
        ],
        [
            "exact sqrt_0.",
            "VernacExtend",
            "a98b160232fb59556fc15457ffff5446b45c6389"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold sqrt.",
            "VernacExtend",
            "71ef64092f0003bcdade22760b25585d0190003b"
        ],
        [
            "destruct Rcase_abs.",
            "VernacExtend",
            "a0a91093170f5b4cf321ee15e7351f7e2c63322b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "casetype False.",
            "VernacExtend",
            "d301d3603984ec3bb04cdfbf39cf968367f9e414"
        ],
        [
            "now apply Nzx, Rle_antisym; [|apply Rge_le].",
            "VernacExtend",
            "43e92d8577b51b556f7a38dba97c2b96bc4a82f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_le : forall x y, (-y <= x <= y)%R -> (Rabs x <= y)%R.",
            "VernacStartTheoremProof",
            "8cb92f329c4b13efbddd2ee425d2ae2780f2944c"
        ],
        [
            "intros x y (Hyx,Hxy).",
            "VernacExtend",
            "45656ab73b8541d758b9ef2ecfeea15b0419df30"
        ],
        [
            "unfold Rabs.",
            "VernacExtend",
            "32b62f5465b04c4380fa7a8bf154e157fb296719"
        ],
        [
            "case Rcase_abs ; intros Hx.",
            "VernacExtend",
            "c8aa219ad299811e7d712de3e13738c0cff0714e"
        ],
        [
            "apply Ropp_le_cancel.",
            "VernacExtend",
            "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
        ],
        [
            "now rewrite Ropp_involutive.",
            "VernacExtend",
            "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
        ],
        [
            "exact Hxy.",
            "VernacExtend",
            "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_le_inv : forall x y, (Rabs x <= y)%R -> (-y <= x <= y)%R.",
            "VernacStartTheoremProof",
            "00ad92e0d858bfc50f81447c9aa2da2f58c70ce7"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (- Rabs x)%R.",
            "VernacExtend",
            "eb09ea54da70ad3c896655b4b1405b8cef1be8a8"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "apply Ropp_le_cancel.",
            "VernacExtend",
            "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
        ],
        [
            "rewrite Ropp_involutive, <- Rabs_Ropp.",
            "VernacExtend",
            "bb7aaa680e04c3e86b186d451ed2c9b617e98566"
        ],
        [
            "apply RRle_abs.",
            "VernacExtend",
            "1333b00626244e19099bec7e0de632062c4070a3"
        ],
        [
            "apply Rle_trans with (2 := Hxy).",
            "VernacExtend",
            "10741e2cd960be8243d43e987f87abd2fd3bf2b0"
        ],
        [
            "apply RRle_abs.",
            "VernacExtend",
            "1333b00626244e19099bec7e0de632062c4070a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_ge : forall x y, (y <= -x \\/ x <= y)%R -> (x <= Rabs y)%R.",
            "VernacStartTheoremProof",
            "f78ad5afad7dcff0b237602f1981173baeb134d2"
        ],
        [
            "intros x y [Hyx|Hxy].",
            "VernacExtend",
            "8f67753e27922b413f98ee4b69cdbca562fe0e86"
        ],
        [
            "apply Rle_trans with (-y)%R.",
            "VernacExtend",
            "a3701a8e5e1a3efca79b8d63459761e315dd48d6"
        ],
        [
            "apply Ropp_le_cancel.",
            "VernacExtend",
            "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
        ],
        [
            "now rewrite Ropp_involutive.",
            "VernacExtend",
            "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
        ],
        [
            "rewrite <- Rabs_Ropp.",
            "VernacExtend",
            "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
        ],
        [
            "apply RRle_abs.",
            "VernacExtend",
            "1333b00626244e19099bec7e0de632062c4070a3"
        ],
        [
            "apply Rle_trans with (1 := Hxy).",
            "VernacExtend",
            "15320367548a991b5ea122fc234978ee63198cbd"
        ],
        [
            "apply RRle_abs.",
            "VernacExtend",
            "1333b00626244e19099bec7e0de632062c4070a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_ge_inv : forall x y, (x <= Rabs y)%R -> (y <= -x \\/ x <= y)%R.",
            "VernacStartTheoremProof",
            "dd9bfefd626687f92d0f42ca747a2b7fc2f5bcc8"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Rabs.",
            "VernacExtend",
            "32b62f5465b04c4380fa7a8bf154e157fb296719"
        ],
        [
            "case Rcase_abs ; intros Hy Hxy.",
            "VernacExtend",
            "ab6a37b5995a385867c08394143aeeed3de92bb5"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply Ropp_le_cancel.",
            "VernacExtend",
            "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
        ],
        [
            "now rewrite Ropp_involutive.",
            "VernacExtend",
            "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_lt : forall x y, (-y < x < y)%R -> (Rabs x < y)%R.",
            "VernacStartTheoremProof",
            "f14704a74e0bcc56cd45ace487800735a4d4c5c4"
        ],
        [
            "intros x y (Hyx,Hxy).",
            "VernacExtend",
            "45656ab73b8541d758b9ef2ecfeea15b0419df30"
        ],
        [
            "now apply Rabs_def1.",
            "VernacExtend",
            "76c03d503eef0a52118850d89e6867745239d04f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_lt_inv : forall x y, (Rabs x < y)%R -> (-y < x < y)%R.",
            "VernacStartTheoremProof",
            "f6624839ffc09f2b958d7dba4a2340d47da48c0d"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "now split ; eapply Rabs_def2.",
            "VernacExtend",
            "7996800e66ff59bbb2ec9143bbf5573ab64acf90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_gt : forall x y, (y < -x \\/ x < y)%R -> (x < Rabs y)%R.",
            "VernacStartTheoremProof",
            "124b216d11898f474047bf0e462939bab952c173"
        ],
        [
            "intros x y [Hyx|Hxy].",
            "VernacExtend",
            "8f67753e27922b413f98ee4b69cdbca562fe0e86"
        ],
        [
            "rewrite <- Rabs_Ropp.",
            "VernacExtend",
            "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
        ],
        [
            "apply Rlt_le_trans with (Ropp y).",
            "VernacExtend",
            "3fc13839abe1049eeaf1dbaef2175ae93bf621d9"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "now rewrite Ropp_involutive.",
            "VernacExtend",
            "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
        ],
        [
            "apply RRle_abs.",
            "VernacExtend",
            "1333b00626244e19099bec7e0de632062c4070a3"
        ],
        [
            "apply Rlt_le_trans with (1 := Hxy).",
            "VernacExtend",
            "7885421736bc16f2fa5827401945d11c5e3e96b2"
        ],
        [
            "apply RRle_abs.",
            "VernacExtend",
            "1333b00626244e19099bec7e0de632062c4070a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabs_gt_inv : forall x y, (x < Rabs y)%R -> (y < -x \\/ x < y)%R.",
            "VernacStartTheoremProof",
            "390b0fdb8158c987fe0d99273be284fd228f0c06"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Rabs.",
            "VernacExtend",
            "32b62f5465b04c4380fa7a8bf154e157fb296719"
        ],
        [
            "case Rcase_abs ; intros Hy Hxy.",
            "VernacExtend",
            "ab6a37b5995a385867c08394143aeeed3de92bb5"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "now rewrite Ropp_involutive.",
            "VernacExtend",
            "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Rmissing.",
            "VernacEndSegment",
            "05e16725e00c69b14ee245ea961cf5064c657fd3"
        ],
        [
            "Section Z2R.",
            "VernacBeginSection",
            "0a86f2de1b061503d3481096fe2fba1296d7deba"
        ],
        [
            "Fixpoint P2R (p : positive) := match p with | xH => 1%R | xO xH => 2%R | xO t => (2 * P2R t)%R | xI xH => 3%R | xI t => (1 + 2 * P2R t)%R end.",
            "VernacFixpoint",
            "bd802e941a34f3f43432f0ed15d88572f6b31c7c"
        ],
        [
            "Definition Z2R n := match n with | Zpos p => P2R p | Zneg p => Ropp (P2R p) | Z0 => 0%R end.",
            "VernacDefinition",
            "a26d96b75df7a0441241f9b18c61607b5511d11d"
        ],
        [
            "Theorem P2R_INR : forall n, P2R n = INR (nat_of_P n).",
            "VernacStartTheoremProof",
            "1ae4c3fa5dc6ff83522b45a9ae29570e602a5f36"
        ],
        [
            "induction n ; simpl ; try ( rewrite IHn ; rewrite <- (mult_INR 2) ; rewrite <- (nat_of_P_mult_morphism 2) ; change (2 * n)%positive with (xO n)).",
            "VernacExtend",
            "48be7124dbd3a1499d9baed16222280da816755a"
        ],
        [
            "rewrite (Rplus_comm 1).",
            "VernacExtend",
            "2acb5f3fac74a8b15590703f6ba42174b5c1731b"
        ],
        [
            "change (nat_of_P (xO n)) with (Pmult_nat n 2).",
            "VernacExtend",
            "d35774211ce4d3f41fb6ca05d3307caf0f50e517"
        ],
        [
            "case n ; intros ; simpl ; try apply refl_equal.",
            "VernacExtend",
            "0edfc1d63768512bfd9fd066372f50447572ff00"
        ],
        [
            "case (Pmult_nat p 4) ; intros ; try apply refl_equal.",
            "VernacExtend",
            "4c08dbba0fff7025ecee849ca36542052a110804"
        ],
        [
            "rewrite Rplus_0_l.",
            "VernacExtend",
            "b29625dd91809e03948728f9a3f640ec69c648c0"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "apply Rplus_comm.",
            "VernacExtend",
            "0a47c60f716db020ba314277a62e5fbde1f9f84a"
        ],
        [
            "case n ; intros ; apply refl_equal.",
            "VernacExtend",
            "9e70c58c0d8add4ba3c6ce6dd7b01def1733f210"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_IZR : forall n, Z2R n = IZR n.",
            "VernacStartTheoremProof",
            "de48e7cc5554772fde8d92f1356edd053410209c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case n ; intros ; unfold Z2R.",
            "VernacExtend",
            "ae248e81ded7871bdb4347c8d24de8fb4fd38ba0"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "rewrite <- positive_nat_Z, <- INR_IZR_INZ.",
            "VernacExtend",
            "3c3ffa9242e39ecfb7bef16e2c2eb774af4e9dbe"
        ],
        [
            "apply P2R_INR.",
            "VernacExtend",
            "4e92eaf532685e0bc0ae96ad05fb2536a67bf2f3"
        ],
        [
            "change (IZR (Zneg p)) with (Ropp (IZR (Zpos p))).",
            "VernacExtend",
            "244db61e4ba058e678d53a729fe0ccdc1f61a16c"
        ],
        [
            "apply Ropp_eq_compat.",
            "VernacExtend",
            "0a7e593df75dda4a02ea72003a8c07176275c9fe"
        ],
        [
            "rewrite <- positive_nat_Z, <- INR_IZR_INZ.",
            "VernacExtend",
            "3c3ffa9242e39ecfb7bef16e2c2eb774af4e9dbe"
        ],
        [
            "apply P2R_INR.",
            "VernacExtend",
            "4e92eaf532685e0bc0ae96ad05fb2536a67bf2f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_opp : forall n, Z2R (-n) = (- Z2R n)%R.",
            "VernacStartTheoremProof",
            "83734349709cd4f6c2b85550f507acb6cb757a38"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "apply Ropp_Ropp_IZR.",
            "VernacExtend",
            "7a6a05bf6dcd3407cbd8d9dce3a8dfcb12f36efa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_plus : forall m n, (Z2R (m + n) = Z2R m + Z2R n)%R.",
            "VernacStartTheoremProof",
            "02d981a3e1805ef837c8740f8402efac61af74a7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "apply plus_IZR.",
            "VernacExtend",
            "f72078b0fe17047bbe2de76cd6699c810e9d3c64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem minus_IZR : forall n m : Z, IZR (n - m) = (IZR n - IZR m)%R.",
            "VernacStartTheoremProof",
            "e1310731bfde54d105231c0b41afaedcac9b9543"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Zminus.",
            "VernacExtend",
            "7085d4231409167767072da1bd24eb73ce98a683"
        ],
        [
            "rewrite plus_IZR.",
            "VernacExtend",
            "a71980692bd855cfdb80782b4f734eba75fada3d"
        ],
        [
            "rewrite Ropp_Ropp_IZR.",
            "VernacExtend",
            "95ba4cc75f2b6b788ec3f7616d9b618a0d3cd184"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_minus : forall m n, (Z2R (m - n) = Z2R m - Z2R n)%R.",
            "VernacStartTheoremProof",
            "8126561a2a309f229de1ead02cd8b66dac34179a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "apply minus_IZR.",
            "VernacExtend",
            "33f8580b5dd8ab052a011d51055ae197f990d426"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_mult : forall m n, (Z2R (m * n) = Z2R m * Z2R n)%R.",
            "VernacStartTheoremProof",
            "71f24ec4ae714aaf6d77dad56a5bee026acda831"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "apply mult_IZR.",
            "VernacExtend",
            "c1306c4ea8316d1e4ab3962490fb9ff6f684c3be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_Z2R : forall m n, (Z2R m <= Z2R n)%R -> (m <= n)%Z.",
            "VernacStartTheoremProof",
            "d057ec1ceded6348992dba0f26c602f4f24800e6"
        ],
        [
            "intros m n.",
            "VernacExtend",
            "18665e11771a439415aeac3f0ced42360e32c961"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "apply le_IZR.",
            "VernacExtend",
            "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_le : forall m n, (m <= n)%Z -> (Z2R m <= Z2R n)%R.",
            "VernacStartTheoremProof",
            "fa18f3e65339d1f3e07c963b00bf6360499d91ac"
        ],
        [
            "intros m n.",
            "VernacExtend",
            "18665e11771a439415aeac3f0ced42360e32c961"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "apply IZR_le.",
            "VernacExtend",
            "ef1f47861efcb38cc5e3fd5c85d7a11ba68e740b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_Z2R : forall m n, (Z2R m < Z2R n)%R -> (m < n)%Z.",
            "VernacStartTheoremProof",
            "5ca7385f322a16b0f3fa5c62b1163d84b0046716"
        ],
        [
            "intros m n.",
            "VernacExtend",
            "18665e11771a439415aeac3f0ced42360e32c961"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "apply lt_IZR.",
            "VernacExtend",
            "165b941162ea1938aa71e78f57835b8df85de779"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_lt : forall m n, (m < n)%Z -> (Z2R m < Z2R n)%R.",
            "VernacStartTheoremProof",
            "582c7cdcd62c1533594b8692f9fe6a362dcfb542"
        ],
        [
            "intros m n.",
            "VernacExtend",
            "18665e11771a439415aeac3f0ced42360e32c961"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "apply IZR_lt.",
            "VernacExtend",
            "7646b2e1f3ff9fb171267b1427f74069601108a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_le_lt : forall m n p, (m <= n < p)%Z -> (Z2R m <= Z2R n < Z2R p)%R.",
            "VernacStartTheoremProof",
            "8736132589bb90557f3c92723a0d0bbf446e3af4"
        ],
        [
            "intros m n p (H1, H2).",
            "VernacExtend",
            "7b4695e7938b477f5217eefd152975e5137bfae6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply Z2R_le.",
            "VernacExtend",
            "58bf5ef017302bba0024780a49c5a9a8c382820b"
        ],
        [
            "now apply Z2R_lt.",
            "VernacExtend",
            "7f5609ab9fcfd964c22b3efe7eaeac75e6c9173c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_lt_Z2R : forall m n p, (Z2R m <= Z2R n < Z2R p)%R -> (m <= n < p)%Z.",
            "VernacStartTheoremProof",
            "188e00ab0021a41080d0a350e30c0d2902085e65"
        ],
        [
            "intros m n p (H1, H2).",
            "VernacExtend",
            "7b4695e7938b477f5217eefd152975e5137bfae6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply le_Z2R.",
            "VernacExtend",
            "63ab87ade823c3b74e0aa8dc3bb93ac707016a0b"
        ],
        [
            "now apply lt_Z2R.",
            "VernacExtend",
            "3d3441902d83a0a528dc90dc22a0d622c1a89905"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_Z2R : forall m n, (Z2R m = Z2R n)%R -> (m = n)%Z.",
            "VernacStartTheoremProof",
            "99e522007c23e682d6295d8965f395c11cbd0876"
        ],
        [
            "intros m n H.",
            "VernacExtend",
            "284eaf42bc214a5a61616eb19b0aa015fc738ee1"
        ],
        [
            "apply eq_IZR.",
            "VernacExtend",
            "ee733026f3770ec7d35ae5daace776ee1795288b"
        ],
        [
            "now rewrite <- 2!Z2R_IZR.",
            "VernacExtend",
            "68742c553438ad5b2a504797a4006ff613978844"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem neq_Z2R : forall m n, (Z2R m <> Z2R n)%R -> (m <> n)%Z.",
            "VernacStartTheoremProof",
            "ed20883043940323cfeeda5e9ff9ac313d9d360c"
        ],
        [
            "intros m n H H'.",
            "VernacExtend",
            "82b6da7aa236157aa7ed483ec5ef26c38067a3f2"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "now apply f_equal.",
            "VernacExtend",
            "2be51066ac0713afbd2686f67010448cf5cd7ac9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_neq : forall m n, (m <> n)%Z -> (Z2R m <> Z2R n)%R.",
            "VernacStartTheoremProof",
            "8d726cd73757f6b8da440b215a042c3515640fd9"
        ],
        [
            "intros m n.",
            "VernacExtend",
            "18665e11771a439415aeac3f0ced42360e32c961"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "apply IZR_neq.",
            "VernacExtend",
            "106565452f16b875fdd447816762b188be25253f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_abs : forall z, Z2R (Zabs z) = Rabs (Z2R z).",
            "VernacStartTheoremProof",
            "b79d06c32009d7264a2e2e418a8585424f731bd5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite Z2R_IZR.",
            "VernacExtend",
            "2e4ffac79156cd3284f913f25a83026c20f92852"
        ],
        [
            "now rewrite Rabs_Zabs.",
            "VernacExtend",
            "c1076e788f01640c2fb958e22e51a97a7b10f19e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Z2R.",
            "VernacEndSegment",
            "b1960b4d718958b65aa96b2661a86d934f817b42"
        ],
        [
            "Section Rcompare.",
            "VernacBeginSection",
            "f223aeac38af9d9762432e046bf64ed94518b46d"
        ],
        [
            "Definition Rcompare x y := match total_order_T x y with | inleft (left _) => Lt | inleft (right _) => Eq | inright _ => Gt end.",
            "VernacDefinition",
            "1b59cc6285b1829a09352d3c452f8ae643283d0b"
        ],
        [
            "Inductive Rcompare_prop (x y : R) : comparison -> Prop := | Rcompare_Lt_ : (x < y)%R -> Rcompare_prop x y Lt | Rcompare_Eq_ : x = y -> Rcompare_prop x y Eq | Rcompare_Gt_ : (y < x)%R -> Rcompare_prop x y Gt.",
            "VernacInductive",
            "83471e427e740eacfe5ab999a180557e2bc28490"
        ],
        [
            "Theorem Rcompare_spec : forall x y, Rcompare_prop x y (Rcompare x y).",
            "VernacStartTheoremProof",
            "830c33bb154b5ca5f7afb9623d4b98f9f48e7013"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Rcompare.",
            "VernacExtend",
            "3a58d342dfaf9f110a323da93ed3a1bcd4a459c5"
        ],
        [
            "now destruct (total_order_T x y) as [[H|H]|H] ; constructor.",
            "VernacExtend",
            "109aee70bdd7429f110120bb690fefbfee10abfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Opaque Rcompare.",
            "VernacSetOpacity",
            "aa0a3cd1d63334017b5c631cfbc4987089493194"
        ],
        [
            "Theorem Rcompare_Lt : forall x y, (x < y)%R -> Rcompare x y = Lt.",
            "VernacStartTheoremProof",
            "a127834a9f6db9ed9e3f212b5be9ed57801f6e8d"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "case Rcompare_spec ; intro H'.",
            "VernacExtend",
            "d9c9538277e3a2f514cf8e893458abce1f2c5836"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "rewrite H' in H.",
            "VernacExtend",
            "15b945a781d83326e1b7ae2f3071e5a9299b1807"
        ],
        [
            "elim (Rlt_irrefl _ H).",
            "VernacExtend",
            "1dc31525bcfe340e9db5cc966b8e45387b451db0"
        ],
        [
            "elim (Rlt_irrefl x).",
            "VernacExtend",
            "d4eccc23e2233d6fdc218756096e1787f4431970"
        ],
        [
            "now apply Rlt_trans with y.",
            "VernacExtend",
            "cb6ff0e8680a6316a6c3863846f6c1ad08949ee9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_Lt_inv : forall x y, Rcompare x y = Lt -> (x < y)%R.",
            "VernacStartTheoremProof",
            "770c34ee2481998d792d8d5faad580824a18993e"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "now case Rcompare_spec.",
            "VernacExtend",
            "1c9865b5916da0a43781a4b1987af1f22f1ebaa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_not_Lt : forall x y, (y <= x)%R -> Rcompare x y <> Lt.",
            "VernacStartTheoremProof",
            "5be8789536819783cf4d9f8ee1f1d726661dea44"
        ],
        [
            "intros x y H1 H2.",
            "VernacExtend",
            "f5d2be11205259f336118ce80c78eee53322b79d"
        ],
        [
            "apply Rle_not_lt with (1 := H1).",
            "VernacExtend",
            "4a8780839c1cbdf082be71baf6785a4932743231"
        ],
        [
            "now apply Rcompare_Lt_inv.",
            "VernacExtend",
            "4d92207a8b0340b76fbd44535cb55c9fae223554"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_not_Lt_inv : forall x y, Rcompare x y <> Lt -> (y <= x)%R.",
            "VernacStartTheoremProof",
            "7a666702cb69bd723c80e06e3e50f871b26df1cd"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "now apply Rcompare_Lt.",
            "VernacExtend",
            "8ed06a1913c52ff18ad6a9e96f7f0239edd6a637"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_Eq : forall x y, x = y -> Rcompare x y = Eq.",
            "VernacStartTheoremProof",
            "a3e502e92b814129ac73f8ba6ed25b5f4e07ae96"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "now case Rcompare_spec ; intro H' ; try elim (Rlt_irrefl _ H').",
            "VernacExtend",
            "4bdff4c9bb46326841234abf52a349538b547568"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_Eq_inv : forall x y, Rcompare x y = Eq -> x = y.",
            "VernacStartTheoremProof",
            "ed159b60e8621e77388819ee919379ef88424d89"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "now case Rcompare_spec.",
            "VernacExtend",
            "1c9865b5916da0a43781a4b1987af1f22f1ebaa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_Gt : forall x y, (y < x)%R -> Rcompare x y = Gt.",
            "VernacStartTheoremProof",
            "cf8238c4306cbe1bd364d43791f24c01cd00b4b8"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "case Rcompare_spec ; intro H'.",
            "VernacExtend",
            "d9c9538277e3a2f514cf8e893458abce1f2c5836"
        ],
        [
            "elim (Rlt_irrefl x).",
            "VernacExtend",
            "d4eccc23e2233d6fdc218756096e1787f4431970"
        ],
        [
            "now apply Rlt_trans with y.",
            "VernacExtend",
            "cb6ff0e8680a6316a6c3863846f6c1ad08949ee9"
        ],
        [
            "rewrite H' in H.",
            "VernacExtend",
            "15b945a781d83326e1b7ae2f3071e5a9299b1807"
        ],
        [
            "elim (Rlt_irrefl _ H).",
            "VernacExtend",
            "1dc31525bcfe340e9db5cc966b8e45387b451db0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_Gt_inv : forall x y, Rcompare x y = Gt -> (y < x)%R.",
            "VernacStartTheoremProof",
            "fdacf116b44def5296c77c313293c02b83044ad0"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "now case Rcompare_spec.",
            "VernacExtend",
            "1c9865b5916da0a43781a4b1987af1f22f1ebaa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_not_Gt : forall x y, (x <= y)%R -> Rcompare x y <> Gt.",
            "VernacStartTheoremProof",
            "87695c08190bcb3ec1b8303ed4b5c0356fcc8f3c"
        ],
        [
            "intros x y H1 H2.",
            "VernacExtend",
            "f5d2be11205259f336118ce80c78eee53322b79d"
        ],
        [
            "apply Rle_not_lt with (1 := H1).",
            "VernacExtend",
            "4a8780839c1cbdf082be71baf6785a4932743231"
        ],
        [
            "now apply Rcompare_Gt_inv.",
            "VernacExtend",
            "534171be1075132d292793cab8f1b660621e603b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_not_Gt_inv : forall x y, Rcompare x y <> Gt -> (x <= y)%R.",
            "VernacStartTheoremProof",
            "639f3f289f2a1b0a9a2fe9c56bae74726d9cab41"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "now apply Rcompare_Gt.",
            "VernacExtend",
            "68f090264ab30c44b2d7cf1487d7cca374d66bfb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_Z2R : forall x y, Rcompare (Z2R x) (Z2R y) = Zcompare x y.",
            "VernacStartTheoremProof",
            "57857f4af17641dc3690bda673d83c41841c11f0"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "case Rcompare_spec ; intros H ; apply sym_eq.",
            "VernacExtend",
            "163516c24305a36d639e9d3537e08bc180f417ad"
        ],
        [
            "apply Zcompare_Lt.",
            "VernacExtend",
            "c0c7e80571797185c85465ffa0cf835e65b0761a"
        ],
        [
            "now apply lt_Z2R.",
            "VernacExtend",
            "3d3441902d83a0a528dc90dc22a0d622c1a89905"
        ],
        [
            "apply Zcompare_Eq.",
            "VernacExtend",
            "64ca9dcf9da2b14a518a3de2247a459dc55c9042"
        ],
        [
            "now apply eq_Z2R.",
            "VernacExtend",
            "0e5dcd3516cda1789fe17433b8e73b3d21fea7d6"
        ],
        [
            "apply Zcompare_Gt.",
            "VernacExtend",
            "c7a3d95d3f7fee73087f55795f34fd8971e9f463"
        ],
        [
            "now apply lt_Z2R.",
            "VernacExtend",
            "3d3441902d83a0a528dc90dc22a0d622c1a89905"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_sym : forall x y, Rcompare x y = CompOpp (Rcompare y x).",
            "VernacStartTheoremProof",
            "605e5a5298dc20071e72c82bfe1c7a53a6e14d88"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "destruct (Rcompare_spec y x) as [H|H|H].",
            "VernacExtend",
            "7f399a868ea0353c1ecf88d79a1e273c7c51b3dd"
        ],
        [
            "now apply Rcompare_Gt.",
            "VernacExtend",
            "68f090264ab30c44b2d7cf1487d7cca374d66bfb"
        ],
        [
            "now apply Rcompare_Eq.",
            "VernacExtend",
            "54a2cc66495312859e168ad5f6904ba269f3ac6f"
        ],
        [
            "now apply Rcompare_Lt.",
            "VernacExtend",
            "8ed06a1913c52ff18ad6a9e96f7f0239edd6a637"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_plus_r : forall z x y, Rcompare (x + z) (y + z) = Rcompare x y.",
            "VernacStartTheoremProof",
            "f21d7c57d3ec93d2ebe8b4a7c80c822b1a9ff9ef"
        ],
        [
            "intros z x y.",
            "VernacExtend",
            "a887e21d77701e1128be4b476ff9dc9cfe9cd3fa"
        ],
        [
            "destruct (Rcompare_spec x y) as [H|H|H].",
            "VernacExtend",
            "6910eb4d0d875a5e301a1cdda5e498bd91cab0ad"
        ],
        [
            "apply Rcompare_Lt.",
            "VernacExtend",
            "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
        ],
        [
            "now apply Rplus_lt_compat_r.",
            "VernacExtend",
            "82b8517a91b5d6c493ed71301bfa528feeb74c47"
        ],
        [
            "apply Rcompare_Eq.",
            "VernacExtend",
            "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "apply Rcompare_Gt.",
            "VernacExtend",
            "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
        ],
        [
            "now apply Rplus_lt_compat_r.",
            "VernacExtend",
            "82b8517a91b5d6c493ed71301bfa528feeb74c47"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_plus_l : forall z x y, Rcompare (z + x) (z + y) = Rcompare x y.",
            "VernacStartTheoremProof",
            "9d7948e9cc3acd51cd47b4e4c53863fc37ea9484"
        ],
        [
            "intros z x y.",
            "VernacExtend",
            "a887e21d77701e1128be4b476ff9dc9cfe9cd3fa"
        ],
        [
            "rewrite 2!(Rplus_comm z).",
            "VernacExtend",
            "15578212c065a7c4fe662f2a245bd69af3ca1b05"
        ],
        [
            "apply Rcompare_plus_r.",
            "VernacExtend",
            "70a8e1deeaa9d9530334aa75c4fbf70475cf74d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_mult_r : forall z x y, (0 < z)%R -> Rcompare (x * z) (y * z) = Rcompare x y.",
            "VernacStartTheoremProof",
            "c3c058edec165291db9c2afc1eea5a16f846faf5"
        ],
        [
            "intros z x y Hz.",
            "VernacExtend",
            "a9c41ac989f7d4a309cb41a11eab96147dbc11bd"
        ],
        [
            "destruct (Rcompare_spec x y) as [H|H|H].",
            "VernacExtend",
            "6910eb4d0d875a5e301a1cdda5e498bd91cab0ad"
        ],
        [
            "apply Rcompare_Lt.",
            "VernacExtend",
            "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
        ],
        [
            "now apply Rmult_lt_compat_r.",
            "VernacExtend",
            "4453db6cea943776585898a2266890c705eb57f1"
        ],
        [
            "apply Rcompare_Eq.",
            "VernacExtend",
            "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "apply Rcompare_Gt.",
            "VernacExtend",
            "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
        ],
        [
            "now apply Rmult_lt_compat_r.",
            "VernacExtend",
            "4453db6cea943776585898a2266890c705eb57f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_mult_l : forall z x y, (0 < z)%R -> Rcompare (z * x) (z * y) = Rcompare x y.",
            "VernacStartTheoremProof",
            "f12d2ca41d524467e36b0b5e8a80fb2288de7c03"
        ],
        [
            "intros z x y.",
            "VernacExtend",
            "a887e21d77701e1128be4b476ff9dc9cfe9cd3fa"
        ],
        [
            "rewrite 2!(Rmult_comm z).",
            "VernacExtend",
            "a208b1f0f561945bfff749219ff490dd82a38548"
        ],
        [
            "apply Rcompare_mult_r.",
            "VernacExtend",
            "ed7a2d6497bb2deb9977555ebb6639a6960fe3d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_middle : forall x d u, Rcompare (x - d) (u - x) = Rcompare x ((d + u) / 2).",
            "VernacStartTheoremProof",
            "507d2e441bfc77b4b3e54060a02b0317a163b06e"
        ],
        [
            "intros x d u.",
            "VernacExtend",
            "e8398f178d3b8ae218c807a9b32301e56bc16665"
        ],
        [
            "rewrite <- (Rcompare_plus_r (- x / 2 - d / 2) x).",
            "VernacExtend",
            "386db40253ab1d9e142a227508ac49c0b7bed033"
        ],
        [
            "rewrite <- (Rcompare_mult_r (/2) (x - d)).",
            "VernacExtend",
            "11646c7669065d9cb8bef2c6b602343b2daffc7e"
        ],
        [
            "field_simplify (x + (- x / 2 - d / 2))%R.",
            "VernacExtend",
            "fef37734c3fd3d465ec17093fd8133b22120689c"
        ],
        [
            "now field_simplify ((d + u) / 2 + (- x / 2 - d / 2))%R.",
            "VernacExtend",
            "5ff1cc8b35090767e714095505d3d868a5a60d4c"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_half_l : forall x y, Rcompare (x / 2) y = Rcompare x (2 * y).",
            "VernacStartTheoremProof",
            "1d98831a0eb31dc5b384991ad179a3cb7b4d8174"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "rewrite <- (Rcompare_mult_r 2%R).",
            "VernacExtend",
            "bf56b3c3ea1a1c2c944276cec2d3dc78aa3dc5d6"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "rewrite Rmult_assoc, Rinv_l, Rmult_1_r.",
            "VernacExtend",
            "f4535f4e34bfdaf905ff90df2b6c3da69dac4a1d"
        ],
        [
            "now rewrite Rmult_comm.",
            "VernacExtend",
            "a4f3186520e8cf5ca72c1ad762f68ac9c7824f80"
        ],
        [
            "now apply (Z2R_neq 2 0).",
            "VernacExtend",
            "7accb9117efd03422c9fbc08a8a7d502161c79c2"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_half_r : forall x y, Rcompare x (y / 2) = Rcompare (2 * x) y.",
            "VernacStartTheoremProof",
            "a1894fbd785521b63daa40041d37f4a7655d6f27"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "rewrite <- (Rcompare_mult_r 2%R).",
            "VernacExtend",
            "bf56b3c3ea1a1c2c944276cec2d3dc78aa3dc5d6"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "rewrite Rmult_assoc, Rinv_l, Rmult_1_r.",
            "VernacExtend",
            "f4535f4e34bfdaf905ff90df2b6c3da69dac4a1d"
        ],
        [
            "now rewrite Rmult_comm.",
            "VernacExtend",
            "a4f3186520e8cf5ca72c1ad762f68ac9c7824f80"
        ],
        [
            "now apply (Z2R_neq 2 0).",
            "VernacExtend",
            "7accb9117efd03422c9fbc08a8a7d502161c79c2"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rcompare_sqr : forall x y, (0 <= x)%R -> (0 <= y)%R -> Rcompare (x * x) (y * y) = Rcompare x y.",
            "VernacStartTheoremProof",
            "d4f44da3fdbb71643162e586aa04aa711ad80570"
        ],
        [
            "intros x y Hx Hy.",
            "VernacExtend",
            "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
        ],
        [
            "destruct (Rcompare_spec x y) as [H|H|H].",
            "VernacExtend",
            "6910eb4d0d875a5e301a1cdda5e498bd91cab0ad"
        ],
        [
            "apply Rcompare_Lt.",
            "VernacExtend",
            "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
        ],
        [
            "now apply Rsqr_incrst_1.",
            "VernacExtend",
            "6b22e155a472825e33b6558cd89d7a10a60c80fe"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "now apply Rcompare_Eq.",
            "VernacExtend",
            "54a2cc66495312859e168ad5f6904ba269f3ac6f"
        ],
        [
            "apply Rcompare_Gt.",
            "VernacExtend",
            "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
        ],
        [
            "now apply Rsqr_incrst_1.",
            "VernacExtend",
            "6b22e155a472825e33b6558cd89d7a10a60c80fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmin_compare : forall x y, Rmin x y = match Rcompare x y with Lt => x | Eq => x | Gt => y end.",
            "VernacStartTheoremProof",
            "628f81e4df48b5b3f8e1fd2a42de90ea13f3adb6"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Rmin.",
            "VernacExtend",
            "ec4de2dbd1c783154b87decb3c93990283dcef6b"
        ],
        [
            "destruct (Rle_dec x y) as [[Hx|Hx]|Hx].",
            "VernacExtend",
            "f5f9ef75c7912759c9d7d770c7591bb2cc61b016"
        ],
        [
            "now rewrite Rcompare_Lt.",
            "VernacExtend",
            "3ef3e24027b987582ee12931a7c7ba307fa48129"
        ],
        [
            "now rewrite Rcompare_Eq.",
            "VernacExtend",
            "748b4211c14883f452b0a50c01d3a09ed3c14aaf"
        ],
        [
            "rewrite Rcompare_Gt.",
            "VernacExtend",
            "6af5b764e76966598fea1215f8858ea8132ad3dd"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "now apply Rnot_le_lt.",
            "VernacExtend",
            "472d95d86d32de5f65bdb99059686dfbade9f294"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Rcompare.",
            "VernacEndSegment",
            "ec05f4022a73627c6d92c47da8e71ba70f5b7819"
        ],
        [
            "Section Rle_bool.",
            "VernacBeginSection",
            "3c2a3838438bc1c2afe1a4988d753e52df4da908"
        ],
        [
            "Definition Rle_bool x y := match Rcompare x y with | Gt => false | _ => true end.",
            "VernacDefinition",
            "07192639484afba4ffbcad0609bdef22f657ffdd"
        ],
        [
            "Inductive Rle_bool_prop (x y : R) : bool -> Prop := | Rle_bool_true_ : (x <= y)%R -> Rle_bool_prop x y true | Rle_bool_false_ : (y < x)%R -> Rle_bool_prop x y false.",
            "VernacInductive",
            "ca9f35f7deeffd9a5f5a6051cc6d65c1f09dbda7"
        ],
        [
            "Theorem Rle_bool_spec : forall x y, Rle_bool_prop x y (Rle_bool x y).",
            "VernacStartTheoremProof",
            "349b93f34d31306e92cd8e58bd9ec87dec9f4503"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Rle_bool.",
            "VernacExtend",
            "c9ba5e92183ba5c801ca36eb93f24678b8302f3a"
        ],
        [
            "case Rcompare_spec ; constructor.",
            "VernacExtend",
            "793f70893f30eacecf21835e287ec9a98f440f67"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_bool_true : forall x y, (x <= y)%R -> Rle_bool x y = true.",
            "VernacStartTheoremProof",
            "a0e4a99835768ad292eb1b02e03a4a535bceb458"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "case Rle_bool_spec ; intros H.",
            "VernacExtend",
            "d73ea0cf28a2aa53642c06b2dffc8e1b295569b3"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "elim (Rlt_irrefl x).",
            "VernacExtend",
            "d4eccc23e2233d6fdc218756096e1787f4431970"
        ],
        [
            "now apply Rle_lt_trans with y.",
            "VernacExtend",
            "8a130a9973b7e01eeedb965a4ce3bce6fffc5870"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_bool_false : forall x y, (y < x)%R -> Rle_bool x y = false.",
            "VernacStartTheoremProof",
            "f7bdde6066cc83c951ad13895d9b250f270f46b9"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "case Rle_bool_spec ; intros H.",
            "VernacExtend",
            "d73ea0cf28a2aa53642c06b2dffc8e1b295569b3"
        ],
        [
            "elim (Rlt_irrefl x).",
            "VernacExtend",
            "d4eccc23e2233d6fdc218756096e1787f4431970"
        ],
        [
            "now apply Rle_lt_trans with y.",
            "VernacExtend",
            "8a130a9973b7e01eeedb965a4ce3bce6fffc5870"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Rle_bool.",
            "VernacEndSegment",
            "97a9a9ed5be04ab237161f67ac9431c0f3b60179"
        ],
        [
            "Section Rlt_bool.",
            "VernacBeginSection",
            "5f01b5485237ad27064b6d40d57bae33e7fa82f8"
        ],
        [
            "Definition Rlt_bool x y := match Rcompare x y with | Lt => true | _ => false end.",
            "VernacDefinition",
            "37b7819a8dfde236fdda996512507469bb5f3d95"
        ],
        [
            "Inductive Rlt_bool_prop (x y : R) : bool -> Prop := | Rlt_bool_true_ : (x < y)%R -> Rlt_bool_prop x y true | Rlt_bool_false_ : (y <= x)%R -> Rlt_bool_prop x y false.",
            "VernacInductive",
            "0f5f9f844df557dcf0a34924827c2e1fbabdbdf2"
        ],
        [
            "Theorem Rlt_bool_spec : forall x y, Rlt_bool_prop x y (Rlt_bool x y).",
            "VernacStartTheoremProof",
            "7c46ca2b2185bc48364d12db480005b07a6f56ed"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Rlt_bool.",
            "VernacExtend",
            "e7a9406ccd04cd9656ceff7f3a4382a33f080003"
        ],
        [
            "case Rcompare_spec ; constructor.",
            "VernacExtend",
            "793f70893f30eacecf21835e287ec9a98f440f67"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem negb_Rlt_bool : forall x y, negb (Rle_bool x y) = Rlt_bool y x.",
            "VernacStartTheoremProof",
            "d506011d2371edb45b005d4b95d4f7320c562aea"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Rlt_bool, Rle_bool.",
            "VernacExtend",
            "d26ce66272290ae1d78d31e008ffe9e559936dca"
        ],
        [
            "rewrite Rcompare_sym.",
            "VernacExtend",
            "256d551cd946d2556ff5000ae0d62882322840d9"
        ],
        [
            "now case Rcompare.",
            "VernacExtend",
            "378dd566f6f8069e0c6b74247a7bcbd95dac48d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem negb_Rle_bool : forall x y, negb (Rlt_bool x y) = Rle_bool y x.",
            "VernacStartTheoremProof",
            "cfe181b7d605f8aaacd7a40888c688a130d6a714"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Rlt_bool, Rle_bool.",
            "VernacExtend",
            "d26ce66272290ae1d78d31e008ffe9e559936dca"
        ],
        [
            "rewrite Rcompare_sym.",
            "VernacExtend",
            "256d551cd946d2556ff5000ae0d62882322840d9"
        ],
        [
            "now case Rcompare.",
            "VernacExtend",
            "378dd566f6f8069e0c6b74247a7bcbd95dac48d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_bool_true : forall x y, (x < y)%R -> Rlt_bool x y = true.",
            "VernacStartTheoremProof",
            "079d953a2fd78573c4cc8e4c6f7298a76c1cdc69"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "rewrite <- negb_Rlt_bool.",
            "VernacExtend",
            "32b7d6b32d603be548419713b6733881a9a515e4"
        ],
        [
            "now rewrite Rle_bool_false.",
            "VernacExtend",
            "c616d259faf363456e218eb3e9db9ced47d09930"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_bool_false : forall x y, (y <= x)%R -> Rlt_bool x y = false.",
            "VernacStartTheoremProof",
            "a6221e242f6ca1e18d002c4205645bb3d3163a5c"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "rewrite <- negb_Rlt_bool.",
            "VernacExtend",
            "32b7d6b32d603be548419713b6733881a9a515e4"
        ],
        [
            "now rewrite Rle_bool_true.",
            "VernacExtend",
            "071e49710b0aa0c91a38f1ec717fb16f7b0c1436"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Rlt_bool.",
            "VernacEndSegment",
            "5aa7dac7741858eaea6bd0414a18255430fac994"
        ],
        [
            "Section Req_bool.",
            "VernacBeginSection",
            "0d4b3c2f734a2123fe9a49dcd27a948afee38f0c"
        ],
        [
            "Definition Req_bool x y := match Rcompare x y with | Eq => true | _ => false end.",
            "VernacDefinition",
            "c1e46e24429a773cd0b1d4558767071ca46aaba7"
        ],
        [
            "Inductive Req_bool_prop (x y : R) : bool -> Prop := | Req_bool_true_ : (x = y)%R -> Req_bool_prop x y true | Req_bool_false_ : (x <> y)%R -> Req_bool_prop x y false.",
            "VernacInductive",
            "a71d8c84ba862a19b74b1d7c85a8b8a0c2633b29"
        ],
        [
            "Theorem Req_bool_spec : forall x y, Req_bool_prop x y (Req_bool x y).",
            "VernacStartTheoremProof",
            "be25b7c9f01d27935219dac05605aa11f8d54eb7"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Req_bool.",
            "VernacExtend",
            "d85d3251ee2acbf6044efc12b2d44872335d52ff"
        ],
        [
            "case Rcompare_spec ; constructor.",
            "VernacExtend",
            "793f70893f30eacecf21835e287ec9a98f440f67"
        ],
        [
            "now apply Rlt_not_eq.",
            "VernacExtend",
            "7c469637fc05542bf9c3c4fab85774b12e6b8f93"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Req_bool_true : forall x y, (x = y)%R -> Req_bool x y = true.",
            "VernacStartTheoremProof",
            "9cf24863f5ee6f055402aaac434b8c8ff0917f7f"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "case Req_bool_spec ; intros H.",
            "VernacExtend",
            "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "exact Hxy.",
            "VernacExtend",
            "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Req_bool_false : forall x y, (x <> y)%R -> Req_bool x y = false.",
            "VernacStartTheoremProof",
            "717d2ff2180b42123c6e56ce26f2a673847881b2"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "case Req_bool_spec ; intros H.",
            "VernacExtend",
            "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
        ],
        [
            "contradict Hxy.",
            "VernacExtend",
            "23b4a28788fcc40bda1d239c3a390fd79ef10ef7"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Req_bool.",
            "VernacEndSegment",
            "b38cc6406916cb8d40d2b762c4ab2e337a31d4fa"
        ],
        [
            "Section Floor_Ceil.",
            "VernacBeginSection",
            "ff1a456a0c7235f0a9ed8d403372b6cd89ef2d6c"
        ],
        [
            "Definition Zfloor (x : R) := (up x - 1)%Z.",
            "VernacDefinition",
            "f4d831081a90225a7ea02f627f5567dabb95d2c0"
        ],
        [
            "Theorem Zfloor_lb : forall x : R, (Z2R (Zfloor x) <= x)%R.",
            "VernacStartTheoremProof",
            "b4c9e8005a0c62fc5daf2ceae26ff07079c572df"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold Zfloor.",
            "VernacExtend",
            "08e6473c8fa3ab0a69d6b3e5e71413de5dd36aa1"
        ],
        [
            "rewrite Z2R_minus.",
            "VernacExtend",
            "75c0e17ece028e1c09696e50b0c135aa8a6471e2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z2R_IZR.",
            "VernacExtend",
            "2dd7eca0d3af78b3f7f06f4b8bcfe256a505fc83"
        ],
        [
            "apply Rplus_le_reg_r with (1 - x)%R.",
            "VernacExtend",
            "060cdc8aacf4d7fcccafbe7cebb3ffd7e24a58c1"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "exact (proj2 (archimed x)).",
            "VernacExtend",
            "f523cb92047fd9357348de2c5dc44658348aca2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zfloor_ub : forall x : R, (x < Z2R (Zfloor x) + 1)%R.",
            "VernacStartTheoremProof",
            "1af5a941f389ee51cdebefa289c46d18925a27a3"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold Zfloor.",
            "VernacExtend",
            "08e6473c8fa3ab0a69d6b3e5e71413de5dd36aa1"
        ],
        [
            "rewrite Z2R_minus.",
            "VernacExtend",
            "75c0e17ece028e1c09696e50b0c135aa8a6471e2"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "rewrite Rplus_assoc.",
            "VernacExtend",
            "f1bd9ff8db9debbc055c2d64a1c07c2da6dd8407"
        ],
        [
            "rewrite Rplus_opp_l, Rplus_0_r.",
            "VernacExtend",
            "d03461aa58b2527ffcb47a559a7ff15d8f476a0d"
        ],
        [
            "rewrite Z2R_IZR.",
            "VernacExtend",
            "2dd7eca0d3af78b3f7f06f4b8bcfe256a505fc83"
        ],
        [
            "exact (proj1 (archimed x)).",
            "VernacExtend",
            "3d6dbd97a5f120d710a3f43fb245a9e1a1ee3928"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zfloor_lub : forall n x, (Z2R n <= x)%R -> (n <= Zfloor x)%Z.",
            "VernacStartTheoremProof",
            "dccfdb8e7c44ff8031426c95f4c75a367dd4a36b"
        ],
        [
            "intros n x Hnx.",
            "VernacExtend",
            "2656e8dc085bcc998088ec4b46a2162cbc370125"
        ],
        [
            "apply Zlt_succ_le.",
            "VernacExtend",
            "c303523f868e2dd2771675d2de37d7328c4e957b"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "apply Rle_lt_trans with (1 := Hnx).",
            "VernacExtend",
            "8c82a7168c3014b43d8e3438d58c724ac4ad68a6"
        ],
        [
            "unfold Zsucc.",
            "VernacExtend",
            "ce48edcc40a7bf1b5f94e63a500e0f3155ce1e54"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "apply Zfloor_ub.",
            "VernacExtend",
            "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zfloor_imp : forall n x, (Z2R n <= x < Z2R (n + 1))%R -> Zfloor x = n.",
            "VernacStartTheoremProof",
            "b21eec2a13f9c7b11aa3851c3cf5755174f1f04d"
        ],
        [
            "intros n x Hnx.",
            "VernacExtend",
            "2656e8dc085bcc998088ec4b46a2162cbc370125"
        ],
        [
            "apply Zle_antisym.",
            "VernacExtend",
            "d5fb169d90b6dbda1fca926c28e78732e286a418"
        ],
        [
            "apply Zlt_succ_le.",
            "VernacExtend",
            "c303523f868e2dd2771675d2de37d7328c4e957b"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "apply Rle_lt_trans with (2 := proj2 Hnx).",
            "VernacExtend",
            "fe4596b364e9ce0fc7b6939510ff34abb7eededd"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "now apply Zfloor_lub.",
            "VernacExtend",
            "21e49a9269b50da476743d3e833aac8408d14ed9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zfloor_Z2R : forall n, Zfloor (Z2R n) = n.",
            "VernacStartTheoremProof",
            "9f316fa115cfcc122a81826dbbd99f8850531647"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Z2R_lt.",
            "VernacExtend",
            "20648688afbdacefe3b6070755cbe6f263ce5093"
        ],
        [
            "apply Zlt_succ.",
            "VernacExtend",
            "f4cf5b932d8c774be510b7802fbeea627fe15261"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zfloor_le : forall x y, (x <= y)%R -> (Zfloor x <= Zfloor y)%Z.",
            "VernacStartTheoremProof",
            "185d90a16a3a66bb36eb030b4d33d3bb12be3c60"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "apply Zfloor_lub.",
            "VernacExtend",
            "2a3f8e59d303f192a648e4eef260195d5e8b9977"
        ],
        [
            "apply Rle_trans with (2 := Hxy).",
            "VernacExtend",
            "10741e2cd960be8243d43e987f87abd2fd3bf2b0"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zceil (x : R) := (- Zfloor (- x))%Z.",
            "VernacDefinition",
            "c36cc2dc5a1a2b7f9274bee8189bbe7ab5372aa4"
        ],
        [
            "Theorem Zceil_ub : forall x : R, (x <= Z2R (Zceil x))%R.",
            "VernacStartTheoremProof",
            "c87d349dd0eea78edee5c9371dad30316f9f2e0a"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "rewrite Z2R_opp.",
            "VernacExtend",
            "f3d51769485a2c167744d3d3fd4fffa672e5e611"
        ],
        [
            "apply Ropp_le_cancel.",
            "VernacExtend",
            "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
        ],
        [
            "rewrite Ropp_involutive.",
            "VernacExtend",
            "ba0ab440a50f656f08837503f0228b68c9acdf87"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zceil_glb : forall n x, (x <= Z2R n)%R -> (Zceil x <= n)%Z.",
            "VernacStartTheoremProof",
            "01928f55d18b9cb209bfce5a00ace3d7c801af11"
        ],
        [
            "intros n x Hnx.",
            "VernacExtend",
            "2656e8dc085bcc998088ec4b46a2162cbc370125"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "apply Zopp_le_cancel.",
            "VernacExtend",
            "e3a890c698c83ebfe9cc00cbe005add0e6162e3a"
        ],
        [
            "rewrite Zopp_involutive.",
            "VernacExtend",
            "7b00d63dc772416460dc62c59515875a36dfefdb"
        ],
        [
            "apply Zfloor_lub.",
            "VernacExtend",
            "2a3f8e59d303f192a648e4eef260195d5e8b9977"
        ],
        [
            "rewrite Z2R_opp.",
            "VernacExtend",
            "f3d51769485a2c167744d3d3fd4fffa672e5e611"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zceil_imp : forall n x, (Z2R (n - 1) < x <= Z2R n)%R -> Zceil x = n.",
            "VernacStartTheoremProof",
            "9779487a3a481725884fde8eac8103e9e2fdcfb8"
        ],
        [
            "intros n x Hnx.",
            "VernacExtend",
            "2656e8dc085bcc998088ec4b46a2162cbc370125"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "rewrite <- (Zopp_involutive n).",
            "VernacExtend",
            "99bb7c8f15622db89e0e33e795c0c69ea4e59a7a"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite Z2R_opp.",
            "VernacExtend",
            "f3d51769485a2c167744d3d3fd4fffa672e5e611"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "rewrite <- (Zopp_involutive 1).",
            "VernacExtend",
            "5f80b2d63a648617d56bf65ad53dae2e6ded7f10"
        ],
        [
            "rewrite <- Zopp_plus_distr.",
            "VernacExtend",
            "0f74890cd13001b6d46ea9010f4d3d762174db90"
        ],
        [
            "rewrite Z2R_opp.",
            "VernacExtend",
            "f3d51769485a2c167744d3d3fd4fffa672e5e611"
        ],
        [
            "now apply Ropp_lt_contravar.",
            "VernacExtend",
            "e78eb591f35b3721103af7436ff32e5846f47e1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zceil_Z2R : forall n, Zceil (Z2R n) = n.",
            "VernacStartTheoremProof",
            "a6892de4554e86e7cd6540388f220d338e2c80ca"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "rewrite <- Z2R_opp, Zfloor_Z2R.",
            "VernacExtend",
            "e91dc0a6dfef8131d11b083b2edb2115a2f854c3"
        ],
        [
            "apply Zopp_involutive.",
            "VernacExtend",
            "2f15c35202593552fbfa9a55396b0e46c1c25da8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zceil_le : forall x y, (x <= y)%R -> (Zceil x <= Zceil y)%Z.",
            "VernacStartTheoremProof",
            "b2a8a7a7addaca16cf537515e6d1475d1f5ed921"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "apply Zceil_glb.",
            "VernacExtend",
            "524f59be3c7aaf779be7bc5579e0b8cbb0c3a327"
        ],
        [
            "apply Rle_trans with (1 := Hxy).",
            "VernacExtend",
            "15320367548a991b5ea122fc234978ee63198cbd"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zceil_floor_neq : forall x : R, (Z2R (Zfloor x) <> x)%R -> (Zceil x = Zfloor x + 1)%Z.",
            "VernacStartTheoremProof",
            "f831b16275aa032e19d4cbcdd3a154d3ada5b69d"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "apply Zceil_imp.",
            "VernacExtend",
            "c9c91122777c8963f3fcab430c53aa15ef0b2dba"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "ring_simplify (Zfloor x + 1 - 1)%Z.",
            "VernacExtend",
            "27502fde3e928f166e3ba1d0f4fbb36f71e64b4b"
        ],
        [
            "apply Rnot_le_lt.",
            "VernacExtend",
            "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "apply Zfloor_ub.",
            "VernacExtend",
            "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Ztrunc x := if Rlt_bool x 0 then Zceil x else Zfloor x.",
            "VernacDefinition",
            "c01c60b944a2c6f6e44090f9ded987e767635918"
        ],
        [
            "Theorem Ztrunc_Z2R : forall n, Ztrunc (Z2R n) = n.",
            "VernacStartTheoremProof",
            "ba8a5ec4259fed9cbb15880facca64aa5b19e370"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "unfold Ztrunc.",
            "VernacExtend",
            "70f2f727e6735746b4eaaea98f3e25177304bf89"
        ],
        [
            "case Rlt_bool_spec ; intro H.",
            "VernacExtend",
            "0967e199a65e31b0d8f2b8fb59c29802eb980903"
        ],
        [
            "apply Zceil_Z2R.",
            "VernacExtend",
            "c8141d4497dc8abfa72f7f0897c24c389f131f72"
        ],
        [
            "apply Zfloor_Z2R.",
            "VernacExtend",
            "58df2bc8985dad2ec76c534580062785230749a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ztrunc_floor : forall x, (0 <= x)%R -> Ztrunc x = Zfloor x.",
            "VernacStartTheoremProof",
            "a3866f624fcdaae8279506fd46281bf9b3d2844b"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold Ztrunc.",
            "VernacExtend",
            "70f2f727e6735746b4eaaea98f3e25177304bf89"
        ],
        [
            "case Rlt_bool_spec ; intro H.",
            "VernacExtend",
            "0967e199a65e31b0d8f2b8fb59c29802eb980903"
        ],
        [
            "elim Rlt_irrefl with x.",
            "VernacExtend",
            "a5e5e499e66aa4da609d36825ce1ae4d01218c6d"
        ],
        [
            "now apply Rlt_le_trans with R0.",
            "VernacExtend",
            "9762221e4da496d52ec8f7c1ecd21dee9b2058dc"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ztrunc_ceil : forall x, (x <= 0)%R -> Ztrunc x = Zceil x.",
            "VernacStartTheoremProof",
            "bc2d598d061152941d6a26ea7200e188fa6f5257"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold Ztrunc.",
            "VernacExtend",
            "70f2f727e6735746b4eaaea98f3e25177304bf89"
        ],
        [
            "case Rlt_bool_spec ; intro H.",
            "VernacExtend",
            "0967e199a65e31b0d8f2b8fb59c29802eb980903"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "rewrite (Rle_antisym _ _ Hx H).",
            "VernacExtend",
            "320ac8a8c7037bd723b6afa110311254bc13d7f7"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "rewrite Zceil_Z2R.",
            "VernacExtend",
            "937fe61e5b6fa4ed55634c84df2f554c39edc46a"
        ],
        [
            "apply Zfloor_Z2R.",
            "VernacExtend",
            "58df2bc8985dad2ec76c534580062785230749a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ztrunc_le : forall x y, (x <= y)%R -> (Ztrunc x <= Ztrunc y)%Z.",
            "VernacStartTheoremProof",
            "16139dc4036f6cd529fd53375cb6fc6f27359ea1"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "unfold Ztrunc at 1.",
            "VernacExtend",
            "54426ecb961e2b9e2de2a52848936e8c3e66b593"
        ],
        [
            "case Rlt_bool_spec ; intro Hx.",
            "VernacExtend",
            "8691b8bdd2c59e4d9756a11009e38c5d43e65dcb"
        ],
        [
            "unfold Ztrunc.",
            "VernacExtend",
            "70f2f727e6735746b4eaaea98f3e25177304bf89"
        ],
        [
            "case Rlt_bool_spec ; intro Hy.",
            "VernacExtend",
            "6e2d35e25e89ec1c138c2554c2569cb4c955daa1"
        ],
        [
            "now apply Zceil_le.",
            "VernacExtend",
            "1db17e1169b75b1250fd3c02d2b7732ff8884a19"
        ],
        [
            "apply Zle_trans with 0%Z.",
            "VernacExtend",
            "7ad01c903906b6789535df1946514d9eb538fe58"
        ],
        [
            "apply Zceil_glb.",
            "VernacExtend",
            "524f59be3c7aaf779be7bc5579e0b8cbb0c3a327"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "now apply Zfloor_lub.",
            "VernacExtend",
            "21e49a9269b50da476743d3e833aac8408d14ed9"
        ],
        [
            "rewrite Ztrunc_floor.",
            "VernacExtend",
            "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
        ],
        [
            "now apply Zfloor_le.",
            "VernacExtend",
            "4cc0f3aa133838b48df9664cf5449b7231dcd8cd"
        ],
        [
            "now apply Rle_trans with x.",
            "VernacExtend",
            "381907d0581fe6251ec6925f400def12cb378dd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ztrunc_opp : forall x, Ztrunc (- x) = Zopp (Ztrunc x).",
            "VernacStartTheoremProof",
            "5ff4e9c0fad41ab333419643852d72104bd36a71"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold Ztrunc at 2.",
            "VernacExtend",
            "077e83a59f4d21e4e5668d6bea03c15188f10a94"
        ],
        [
            "case Rlt_bool_spec ; intros Hx.",
            "VernacExtend",
            "f2259357dbd63e5aade043e3d29403887b4214c2"
        ],
        [
            "rewrite Ztrunc_floor.",
            "VernacExtend",
            "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Zopp_involutive.",
            "VernacExtend",
            "2f15c35202593552fbfa9a55396b0e46c1c25da8"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "rewrite Ztrunc_ceil.",
            "VernacExtend",
            "dd43b167e7750a71eebfb5ede0b3cae5dec4a648"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "now rewrite Ropp_involutive.",
            "VernacExtend",
            "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ztrunc_abs : forall x, Ztrunc (Rabs x) = Zabs (Ztrunc x).",
            "VernacStartTheoremProof",
            "f79022c1a1744776a8ae3ef979d4d8ada21b0e7a"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "rewrite Ztrunc_floor.",
            "VernacExtend",
            "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
        ],
        [
            "2: apply Rabs_pos.",
            "VernacExtend",
            "3f4f2e8e43a7c30ea6bd43ab887d8679bf87bd78"
        ],
        [
            "unfold Ztrunc.",
            "VernacExtend",
            "70f2f727e6735746b4eaaea98f3e25177304bf89"
        ],
        [
            "case Rlt_bool_spec ; intro H.",
            "VernacExtend",
            "0967e199a65e31b0d8f2b8fb59c29802eb980903"
        ],
        [
            "rewrite Rabs_left with (1 := H).",
            "VernacExtend",
            "288e106a3181e38c3bbf04de868e41a1f6df78ad"
        ],
        [
            "rewrite Zabs_non_eq.",
            "VernacExtend",
            "b9de5a35dd4b6f087fccdf75da653f1fdc460ce8"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Zopp_involutive.",
            "VernacExtend",
            "2f15c35202593552fbfa9a55396b0e46c1c25da8"
        ],
        [
            "apply Zceil_glb.",
            "VernacExtend",
            "524f59be3c7aaf779be7bc5579e0b8cbb0c3a327"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "rewrite Rabs_pos_eq with (1 := H).",
            "VernacExtend",
            "194a9d974fc526b710a35ddf20f666f231905b39"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Zabs_eq.",
            "VernacExtend",
            "49010e3d49d17807661610454bf633de5de373d9"
        ],
        [
            "now apply Zfloor_lub.",
            "VernacExtend",
            "21e49a9269b50da476743d3e833aac8408d14ed9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ztrunc_lub : forall n x, (Z2R n <= Rabs x)%R -> (n <= Zabs (Ztrunc x))%Z.",
            "VernacStartTheoremProof",
            "ebfffe46f9b292ff7aa655749a45e17b3be49f3e"
        ],
        [
            "intros n x H.",
            "VernacExtend",
            "4e1a6f8efe71a966f9d08e60be4bedc88255068a"
        ],
        [
            "rewrite <- Ztrunc_abs.",
            "VernacExtend",
            "dabf1ad417cdefd64834b4351f97934f99a2c246"
        ],
        [
            "rewrite Ztrunc_floor.",
            "VernacExtend",
            "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
        ],
        [
            "2: apply Rabs_pos.",
            "VernacExtend",
            "3f4f2e8e43a7c30ea6bd43ab887d8679bf87bd78"
        ],
        [
            "now apply Zfloor_lub.",
            "VernacExtend",
            "21e49a9269b50da476743d3e833aac8408d14ed9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zaway x := if Rlt_bool x 0 then Zfloor x else Zceil x.",
            "VernacDefinition",
            "0537ec6c9537a9fe3fa2655645699f5ac31fce5f"
        ],
        [
            "Theorem Zaway_Z2R : forall n, Zaway (Z2R n) = n.",
            "VernacStartTheoremProof",
            "973963703545ea88d98ca0957a54f1e93c1f6fe9"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "unfold Zaway.",
            "VernacExtend",
            "482575e4bf21cd9670ede1f37d12a4656b4c9cdc"
        ],
        [
            "case Rlt_bool_spec ; intro H.",
            "VernacExtend",
            "0967e199a65e31b0d8f2b8fb59c29802eb980903"
        ],
        [
            "apply Zfloor_Z2R.",
            "VernacExtend",
            "58df2bc8985dad2ec76c534580062785230749a3"
        ],
        [
            "apply Zceil_Z2R.",
            "VernacExtend",
            "c8141d4497dc8abfa72f7f0897c24c389f131f72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zaway_ceil : forall x, (0 <= x)%R -> Zaway x = Zceil x.",
            "VernacStartTheoremProof",
            "98451c5525faeeeb277986a6fdf89e1f903c5c17"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold Zaway.",
            "VernacExtend",
            "482575e4bf21cd9670ede1f37d12a4656b4c9cdc"
        ],
        [
            "case Rlt_bool_spec ; intro H.",
            "VernacExtend",
            "0967e199a65e31b0d8f2b8fb59c29802eb980903"
        ],
        [
            "elim Rlt_irrefl with x.",
            "VernacExtend",
            "a5e5e499e66aa4da609d36825ce1ae4d01218c6d"
        ],
        [
            "now apply Rlt_le_trans with R0.",
            "VernacExtend",
            "9762221e4da496d52ec8f7c1ecd21dee9b2058dc"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zaway_floor : forall x, (x <= 0)%R -> Zaway x = Zfloor x.",
            "VernacStartTheoremProof",
            "1d75cc6e84d0ab5dc9cde328d2a1492fc2bd5b30"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold Zaway.",
            "VernacExtend",
            "482575e4bf21cd9670ede1f37d12a4656b4c9cdc"
        ],
        [
            "case Rlt_bool_spec ; intro H.",
            "VernacExtend",
            "0967e199a65e31b0d8f2b8fb59c29802eb980903"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "rewrite (Rle_antisym _ _ Hx H).",
            "VernacExtend",
            "320ac8a8c7037bd723b6afa110311254bc13d7f7"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "rewrite Zfloor_Z2R.",
            "VernacExtend",
            "76c32ec848cfdb0ff47d7c42d76ad58c824310bd"
        ],
        [
            "apply Zceil_Z2R.",
            "VernacExtend",
            "c8141d4497dc8abfa72f7f0897c24c389f131f72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zaway_le : forall x y, (x <= y)%R -> (Zaway x <= Zaway y)%Z.",
            "VernacStartTheoremProof",
            "b349107b8e057b102c443313879a49d79a10cf67"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "unfold Zaway at 1.",
            "VernacExtend",
            "8022f17826a6668daef67d634ce0a8ca76d5c450"
        ],
        [
            "case Rlt_bool_spec ; intro Hx.",
            "VernacExtend",
            "8691b8bdd2c59e4d9756a11009e38c5d43e65dcb"
        ],
        [
            "unfold Zaway.",
            "VernacExtend",
            "482575e4bf21cd9670ede1f37d12a4656b4c9cdc"
        ],
        [
            "case Rlt_bool_spec ; intro Hy.",
            "VernacExtend",
            "6e2d35e25e89ec1c138c2554c2569cb4c955daa1"
        ],
        [
            "now apply Zfloor_le.",
            "VernacExtend",
            "4cc0f3aa133838b48df9664cf5449b7231dcd8cd"
        ],
        [
            "apply le_Z2R.",
            "VernacExtend",
            "1945b4c25beb86c99a51fb31bc5e89da8f443292"
        ],
        [
            "apply Rle_trans with 0%R.",
            "VernacExtend",
            "d5a3511c1567b70448a4157e0891ac043451db4d"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rle_lt_trans with (2 := Hx).",
            "VernacExtend",
            "6f4ed50de93b15e6078a10a54947a690658815ec"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "apply Rle_trans with (1 := Hy).",
            "VernacExtend",
            "6bbf3f5f64572efb000d622a322675bfd7ee73a1"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "rewrite Zaway_ceil.",
            "VernacExtend",
            "6a7d8754740c8b2ede913b81f0d3d7733ff28623"
        ],
        [
            "now apply Zceil_le.",
            "VernacExtend",
            "1db17e1169b75b1250fd3c02d2b7732ff8884a19"
        ],
        [
            "now apply Rle_trans with x.",
            "VernacExtend",
            "381907d0581fe6251ec6925f400def12cb378dd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zaway_opp : forall x, Zaway (- x) = Zopp (Zaway x).",
            "VernacStartTheoremProof",
            "a7989188cbe404c55d495628248eac4ad1e2ef42"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold Zaway at 2.",
            "VernacExtend",
            "0e0f09366b54a1f5f5f22e0baa222c3ceb734a01"
        ],
        [
            "case Rlt_bool_spec ; intro H.",
            "VernacExtend",
            "0967e199a65e31b0d8f2b8fb59c29802eb980903"
        ],
        [
            "rewrite Zaway_ceil.",
            "VernacExtend",
            "6a7d8754740c8b2ede913b81f0d3d7733ff28623"
        ],
        [
            "unfold Zceil.",
            "VernacExtend",
            "f8d0a58a84f92c1de4ab8daa30b020e932099600"
        ],
        [
            "now rewrite Ropp_involutive.",
            "VernacExtend",
            "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "rewrite Zaway_floor.",
            "VernacExtend",
            "27d32bf8c2bf2a2822441d3d26d7f2504d0db4ae"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Zopp_involutive.",
            "VernacExtend",
            "2f15c35202593552fbfa9a55396b0e46c1c25da8"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "now apply Ropp_le_contravar.",
            "VernacExtend",
            "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zaway_abs : forall x, Zaway (Rabs x) = Zabs (Zaway x).",
            "VernacStartTheoremProof",
            "dffb2b330d629d701ff4edb606bf3bd70957084e"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "rewrite Zaway_ceil.",
            "VernacExtend",
            "6a7d8754740c8b2ede913b81f0d3d7733ff28623"
        ],
        [
            "2: apply Rabs_pos.",
            "VernacExtend",
            "3f4f2e8e43a7c30ea6bd43ab887d8679bf87bd78"
        ],
        [
            "unfold Zaway.",
            "VernacExtend",
            "482575e4bf21cd9670ede1f37d12a4656b4c9cdc"
        ],
        [
            "case Rlt_bool_spec ; intro H.",
            "VernacExtend",
            "0967e199a65e31b0d8f2b8fb59c29802eb980903"
        ],
        [
            "rewrite Rabs_left with (1 := H).",
            "VernacExtend",
            "288e106a3181e38c3bbf04de868e41a1f6df78ad"
        ],
        [
            "rewrite Zabs_non_eq.",
            "VernacExtend",
            "b9de5a35dd4b6f087fccdf75da653f1fdc460ce8"
        ],
        [
            "apply (f_equal (fun v => - Zfloor v)%Z).",
            "VernacExtend",
            "be11dd85745e4176761d379a0d7c1ceac4050d5d"
        ],
        [
            "apply Ropp_involutive.",
            "VernacExtend",
            "5693ee789e165349a2c109e8f1a16d4ccb445cfd"
        ],
        [
            "apply le_Z2R.",
            "VernacExtend",
            "1945b4c25beb86c99a51fb31bc5e89da8f443292"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rle_lt_trans with (2 := H).",
            "VernacExtend",
            "9614cbb69f03b90a25adf5bf07e93263d822c11a"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "rewrite Rabs_pos_eq with (1 := H).",
            "VernacExtend",
            "194a9d974fc526b710a35ddf20f666f231905b39"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Zabs_eq.",
            "VernacExtend",
            "49010e3d49d17807661610454bf633de5de373d9"
        ],
        [
            "apply le_Z2R.",
            "VernacExtend",
            "1945b4c25beb86c99a51fb31bc5e89da8f443292"
        ],
        [
            "apply Rle_trans with (1 := H).",
            "VernacExtend",
            "afdcb615c6a4c5d01b0dcd863ef8e5aeca62d6d8"
        ],
        [
            "apply Zceil_ub.",
            "VernacExtend",
            "31edc0840e36e6b04e75719515ba742855146abc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Floor_Ceil.",
            "VernacEndSegment",
            "f228832b52a563c150045ab5718293368da55704"
        ],
        [
            "Section Zdiv_Rdiv.",
            "VernacBeginSection",
            "a34b4ef5751b8cf35fce9a75b3a5d5fd4558062d"
        ],
        [
            "Theorem Zfloor_div : forall x y, y <> Z0 -> Zfloor (Z2R x / Z2R y) = (x / y)%Z.",
            "VernacStartTheoremProof",
            "abafd1a84a742454a606665b76f95a9cd41f0d23"
        ],
        [
            "intros x y Zy.",
            "VernacExtend",
            "8186b1ccfc2d6cf504785b9bf6c4e1967530c632"
        ],
        [
            "generalize (Z_div_mod_eq_full x y Zy).",
            "VernacExtend",
            "2ecd06701a0b6513e094a3c64a5aab60caf44423"
        ],
        [
            "intros Hx.",
            "VernacExtend",
            "9276b72df3a882c9b4b954c90d9e870c80a906fc"
        ],
        [
            "rewrite Hx at 1.",
            "VernacExtend",
            "c84906977d886bf0a1c4907e799669e9abfd90a4"
        ],
        [
            "assert (Zy': Z2R y <> R0).",
            "VernacExtend",
            "97c53df649c2d0ddadc02f327d35185f7c4990ed"
        ],
        [
            "contradict Zy.",
            "VernacExtend",
            "fa3835c44da7acb42f56ec436d29e52fcfd76545"
        ],
        [
            "now apply eq_Z2R.",
            "VernacExtend",
            "0e5dcd3516cda1789fe17433b8e73b3d21fea7d6"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "rewrite Z2R_plus, Rmult_plus_distr_r, Z2R_mult.",
            "VernacExtend",
            "07c4e8691e065415d790ce33bf6c165a06bff289"
        ],
        [
            "replace (Z2R y * Z2R (x / y) * / Z2R y)%R with (Z2R (x / y)) by now field.",
            "VernacExtend",
            "d336207c8902e2b4e7ee02d6571e8c3ec242b07e"
        ],
        [
            "apply Zfloor_imp.",
            "VernacExtend",
            "9278ce7c32c530a2f8be72314e979fc619d4a028"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "assert (0 <= Z2R (x mod y) * / Z2R y < 1)%R.",
            "VernacExtend",
            "25b368b73c8391faef4ab9a4165e0a3ee905a111"
        ],
        [
            "assert (forall x' y', (0 < y')%Z -> 0 <= Z2R (x' mod y') * / Z2R y' < 1)%R.",
            "VernacExtend",
            "c3ca23b4486afbc4666cac5d6966915662835833"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "intros x y Hy.",
            "VernacExtend",
            "9aceb5b83b96a49d50c37137afc3ee554735fdf3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply (Z2R_le 0).",
            "VernacExtend",
            "792cf72fd89e326cb413fb5d3012c5ce541d5b09"
        ],
        [
            "refine (proj1 (Z_mod_lt _ _ _)).",
            "VernacExtend",
            "75d5173ba78ad2c0af4b1201b6abe1572e46aa80"
        ],
        [
            "now apply Zlt_gt.",
            "VernacExtend",
            "8488e1d01e05a1ee4a4ec88c85ff6fb3be17805c"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0).",
            "VernacExtend",
            "5fe7a71c929f2db40ffef7572e6694713b2d3e81"
        ],
        [
            "apply Rmult_lt_reg_r with (Z2R y).",
            "VernacExtend",
            "809d8627dbc81a73412b7c8504f4f81e747df071"
        ],
        [
            "now apply (Z2R_lt 0).",
            "VernacExtend",
            "5fe7a71c929f2db40ffef7572e6694713b2d3e81"
        ],
        [
            "rewrite Rmult_1_l, Rmult_assoc, Rinv_l, Rmult_1_r.",
            "VernacExtend",
            "0e06e63c5ba635846d2464d0a27aff9490eb656c"
        ],
        [
            "apply Z2R_lt.",
            "VernacExtend",
            "20648688afbdacefe3b6070755cbe6f263ce5093"
        ],
        [
            "eapply Z_mod_lt.",
            "VernacExtend",
            "b1010ebcf8dee908e48c8a878e8c12daca2f14cd"
        ],
        [
            "now apply Zlt_gt.",
            "VernacExtend",
            "8488e1d01e05a1ee4a4ec88c85ff6fb3be17805c"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "now apply (Z2R_lt 0).",
            "VernacExtend",
            "5fe7a71c929f2db40ffef7572e6694713b2d3e81"
        ],
        [
            "destruct (Z_lt_le_dec y 0) as [Hy|Hy].",
            "VernacExtend",
            "448e6293e3b5a211f86d099c39b89bd6b67d7d13"
        ],
        [
            "rewrite <- Rmult_opp_opp.",
            "VernacExtend",
            "3208fa08f903b9c32b9cc0aa4d2889ffbe451a7d"
        ],
        [
            "rewrite Ropp_inv_permute with (1 := Zy').",
            "VernacExtend",
            "2ecbea8d157ea2e5850f247865fbda66d660863d"
        ],
        [
            "rewrite <- 2!Z2R_opp.",
            "VernacExtend",
            "ceb9f37875bd32c7a78cf92001110b9224ba87b0"
        ],
        [
            "rewrite <- Zmod_opp_opp.",
            "VernacExtend",
            "9ac0ae0456dd14df748176b6f41926212b672aab"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "clear -Hy.",
            "VernacExtend",
            "ec6838dec774ad41e41defc852e56297f2e63a8a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "clear -Zy Hy.",
            "VernacExtend",
            "4309a306262bf8cf822a09d25a4969363d08cb87"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "pattern (Z2R (x / y)) at 1 ; rewrite <- Rplus_0_r.",
            "VernacExtend",
            "955ddb4b435d14ef1bb0684edb99537a103f980d"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Zdiv_Rdiv.",
            "VernacEndSegment",
            "19a696862228c2c1b549b1ff0556af6012a57f36"
        ],
        [
            "Section pow.",
            "VernacBeginSection",
            "d67814871b4de7ec1047f541d00a2385174807ee"
        ],
        [
            "Variable r : radix.",
            "VernacAssumption",
            "eb1d66130f8065fd40bbc79359694f4a71f6c382"
        ],
        [
            "Theorem radix_pos : (0 < Z2R r)%R.",
            "VernacStartTheoremProof",
            "25c4ae8fbd05679abee0a79281162d1a835315a0"
        ],
        [
            "destruct r as (v, Hr).",
            "VernacExtend",
            "8867a9ba407381c81969be4882d591731cd892fb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (Z2R_lt 0).",
            "VernacExtend",
            "5d86f7673f53b2461aeeacbee1ca5bf7e694182e"
        ],
        [
            "apply Zlt_le_trans with 2%Z.",
            "VernacExtend",
            "6a959dbb3de0361eabc3cd20a9c08cc82bd8a1ee"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "now apply Zle_bool_imp_le.",
            "VernacExtend",
            "58a939dc5b091786ac14b82b5f01868c4efb5e4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bpow e := match e with | Zpos p => Z2R (Zpower_pos r p) | Zneg p => Rinv (Z2R (Zpower_pos r p)) | Z0 => 1%R end.",
            "VernacDefinition",
            "f74d4a8e0a693f38562134365e8515b003349528"
        ],
        [
            "Theorem Z2R_Zpower_pos : forall n m, Z2R (Zpower_pos n m) = powerRZ (Z2R n) (Zpos m).",
            "VernacStartTheoremProof",
            "31b451ca5cf03a236acbc33ad29b5b15ea21eead"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Zpower_pos_nat.",
            "VernacExtend",
            "5a2378a4e96e76124bc6c809e1a60a907b7a39a1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (nat_of_P m).",
            "VernacExtend",
            "62acdab45947979c4708a53e7d4a11b85f698aa7"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "unfold Zpower_nat.",
            "VernacExtend",
            "f110f189ce74234b42c265622b9a74bbcb7a71f4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z2R_mult.",
            "VernacExtend",
            "9df3e88fb03a8e1b32ba077432430323142e8b66"
        ],
        [
            "apply Rmult_eq_compat_l.",
            "VernacExtend",
            "bd73500ca5d8c6a128502627eccd82ae7c925a31"
        ],
        [
            "exact IHn0.",
            "VernacExtend",
            "6b9189c61ac18333370ed1d79e286ce9a8d260a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_powerRZ : forall e, bpow e = powerRZ (Z2R r) e.",
            "VernacStartTheoremProof",
            "024414dc2bb34b7a19485a8de6ba116076e24f34"
        ],
        [
            "destruct e ; unfold bpow.",
            "VernacExtend",
            "caabcb395aa0a0913404127892885a71786c8b70"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "now rewrite Z2R_Zpower_pos.",
            "VernacExtend",
            "2a0d0bece1c19060f5099c623b117b990048f54c"
        ],
        [
            "now rewrite Z2R_Zpower_pos.",
            "VernacExtend",
            "2a0d0bece1c19060f5099c623b117b990048f54c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_ge_0 : forall e : Z, (0 <= bpow e)%R.",
            "VernacStartTheoremProof",
            "7be021c478e2d4dad06b6602d7c18a96d98de40e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite bpow_powerRZ.",
            "VernacExtend",
            "c6385d356a8e18f037aba25c804cc6540a8611ca"
        ],
        [
            "apply powerRZ_le.",
            "VernacExtend",
            "bd6878f59f74ff7d3f8d6a9eb815613f48c71127"
        ],
        [
            "apply radix_pos.",
            "VernacExtend",
            "0dcd1c467b6b40654e9649f327071230a0eb99a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_gt_0 : forall e : Z, (0 < bpow e)%R.",
            "VernacStartTheoremProof",
            "11a1c67955672047a673729d596ee3805fdfd789"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite bpow_powerRZ.",
            "VernacExtend",
            "c6385d356a8e18f037aba25c804cc6540a8611ca"
        ],
        [
            "apply powerRZ_lt.",
            "VernacExtend",
            "08c53f17a499fe977ebaf03f2f7f1e7999c9ee57"
        ],
        [
            "apply radix_pos.",
            "VernacExtend",
            "0dcd1c467b6b40654e9649f327071230a0eb99a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_plus : forall e1 e2 : Z, (bpow (e1 + e2) = bpow e1 * bpow e2)%R.",
            "VernacStartTheoremProof",
            "c89466530b483a2cc36d40c4dcf622601aaa22fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite bpow_powerRZ.",
            "VernacExtend",
            "b43e3d4af6dec38ce27e8987fa86087648f2d1da"
        ],
        [
            "apply powerRZ_add.",
            "VernacExtend",
            "1573964ad19d14de858ee05f9bae684928827c3f"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply radix_pos.",
            "VernacExtend",
            "0dcd1c467b6b40654e9649f327071230a0eb99a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_1 : bpow 1 = Z2R r.",
            "VernacStartTheoremProof",
            "26bdfff4b6e6d91d0e392af4bb9e01a17c451e34"
        ],
        [
            "unfold bpow, Zpower_pos.",
            "VernacExtend",
            "123fcda1267d6c435cbe966a917e02e4d3ab29e8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Zmult_1_r.",
            "VernacExtend",
            "f6f70bbb1f374ceb32e4d41d5982648e20013849"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_plus1 : forall e : Z, (bpow (e + 1) = Z2R r * bpow e)%R.",
            "VernacStartTheoremProof",
            "1b919cf929a37ff59d69dbc28f83137392c28697"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- bpow_1.",
            "VernacExtend",
            "aa80866e631bf7ea158f86e10c0f7426b4205a4a"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "now rewrite Zplus_comm.",
            "VernacExtend",
            "48305027bb8637a247a0fd42693c7826faad618c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_opp : forall e : Z, (bpow (-e) = /bpow e)%R.",
            "VernacStartTheoremProof",
            "6d147487f97869f3531840ade46d05cd0b2fde88"
        ],
        [
            "intros [|p|p].",
            "VernacExtend",
            "db48a191c2a3a54b8f7e7621c3e396af35857b61"
        ],
        [
            "apply eq_sym, Rinv_1.",
            "VernacExtend",
            "19e1c8176fd1126b20634a64b37c5eb98f96e64d"
        ],
        [
            "now change (-Zpos p)%Z with (Zneg p).",
            "VernacExtend",
            "de434a9a51baea4cac68db4f3c36c36596f7e37c"
        ],
        [
            "change (-Zneg p)%Z with (Zpos p).",
            "VernacExtend",
            "fc2dd62ec6a88321bdd33fa782997a07cd211e2a"
        ],
        [
            "simpl; rewrite Rinv_involutive; trivial.",
            "VernacExtend",
            "3bb9ca03344038b4dae0f0ef83042d2def70a75d"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply (bpow_gt_0 (Zpos p)).",
            "VernacExtend",
            "75f5ab7f1425d30801b97647f4a2753828c1fa3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_Zpower_nat : forall e : nat, Z2R (Zpower_nat r e) = bpow (Z_of_nat e).",
            "VernacStartTheoremProof",
            "b320ac657b96f2ead112b121996e39dca349d0de"
        ],
        [
            "intros [|e].",
            "VernacExtend",
            "eb7e46876d94b6447d078561ed2f6e3b145477ba"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- nat_of_P_o_P_of_succ_nat_eq_succ.",
            "VernacExtend",
            "a53cb1eb306908d0566610b9e79a2a13f34b1013"
        ],
        [
            "rewrite <- Zpower_pos_nat.",
            "VernacExtend",
            "23a60763820e55560ece16665271ab8ace5ab905"
        ],
        [
            "now rewrite <- Zpos_eq_Z_of_nat_o_nat_of_P.",
            "VernacExtend",
            "d45a90a5d2e627ef55a564b3430e75b171acb907"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z2R_Zpower : forall e : Z, (0 <= e)%Z -> Z2R (Zpower r e) = bpow e.",
            "VernacStartTheoremProof",
            "d7dbd27cfc1f34cbc0d9300a694e9360aa72ca00"
        ],
        [
            "intros [|e|e] H.",
            "VernacExtend",
            "7e71d2dd77f021f3127ccdd8e8980d47260e7218"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now elim H.",
            "VernacExtend",
            "25b0f8af2fb84c276497977e57d3240d2a987e06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_lt : forall e1 e2 : Z, (e1 < e2)%Z -> (bpow e1 < bpow e2)%R.",
            "VernacStartTheoremProof",
            "0fa0aa00acd59ff2c36996bd2d5a88c4ad878f51"
        ],
        [
            "intros e1 e2 H.",
            "VernacExtend",
            "802cafb2894f89c55adbd45ea4c6983d77b43dcb"
        ],
        [
            "replace e2 with (e1 + (e2 - e1))%Z by ring.",
            "VernacExtend",
            "aaf682a507251a33767073309ee9086790b935ea"
        ],
        [
            "rewrite <- (Rmult_1_r (bpow e1)).",
            "VernacExtend",
            "f804de8cc62105c7067b2891e0ee5c275fc7f4e5"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_lt_compat_l.",
            "VernacExtend",
            "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "assert (0 < e2 - e1)%Z by omega.",
            "VernacExtend",
            "7d4de587b59db594d41f832a53fda21212236c57"
        ],
        [
            "destruct (e2 - e1)%Z ; try discriminate H0.",
            "VernacExtend",
            "f6e58034682b2f22832c069dc3e73337987a0649"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "rewrite <- Z2R_Zpower by easy.",
            "VernacExtend",
            "bf0cedaee55872e8f24c78287ac76f9ce698ac60"
        ],
        [
            "apply (Z2R_lt 1).",
            "VernacExtend",
            "3cade8fa7221b960ee261dbb03963153aa81e3d6"
        ],
        [
            "now apply Zpower_gt_1.",
            "VernacExtend",
            "2f322142ccdf35a529820d12620777a423fdda00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_bpow : forall e1 e2 : Z, (bpow e1 < bpow e2)%R -> (e1 < e2)%Z.",
            "VernacStartTheoremProof",
            "44e65cfbd8df35bed0bfec68db464256d5edf8a4"
        ],
        [
            "intros e1 e2 H.",
            "VernacExtend",
            "802cafb2894f89c55adbd45ea4c6983d77b43dcb"
        ],
        [
            "apply Zgt_lt.",
            "VernacExtend",
            "8c2d2cee607216b3cb20332d4f5992a17ec7bf04"
        ],
        [
            "apply Znot_le_gt.",
            "VernacExtend",
            "9b1e7a4bcfcec1592cc618c64ae51df5e8df9d1b"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "apply Rlt_not_le with (1 := H).",
            "VernacExtend",
            "789d1d06c9955ba18c2b1fae62edd11f694ec197"
        ],
        [
            "destruct (Zle_lt_or_eq _ _ H').",
            "VernacExtend",
            "b2df6f72b9aaa52712d6812d2aa7dc64097026a0"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "now apply bpow_lt.",
            "VernacExtend",
            "82adfb8fc5acd455f1fc2d9a87a4a912dd47b2a9"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_le : forall e1 e2 : Z, (e1 <= e2)%Z -> (bpow e1 <= bpow e2)%R.",
            "VernacStartTheoremProof",
            "d5171f88a7e495809de02f0a04a4b2cb79ebd77a"
        ],
        [
            "intros e1 e2 H.",
            "VernacExtend",
            "802cafb2894f89c55adbd45ea4c6983d77b43dcb"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "apply Zle_not_gt with (1 := H).",
            "VernacExtend",
            "ace0d8b03731d60cdb81ff90703022425157b3dd"
        ],
        [
            "apply Zlt_gt.",
            "VernacExtend",
            "0c9f5f2fbabcb44c83f236e290499e43cbae87ee"
        ],
        [
            "now apply lt_bpow.",
            "VernacExtend",
            "f1f20c2ed175cdacafeab74db002f8f529135d43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_bpow : forall e1 e2 : Z, (bpow e1 <= bpow e2)%R -> (e1 <= e2)%Z.",
            "VernacStartTheoremProof",
            "35b6bb8118c8932f38157e539953a0286ae3ea03"
        ],
        [
            "intros e1 e2 H.",
            "VernacExtend",
            "802cafb2894f89c55adbd45ea4c6983d77b43dcb"
        ],
        [
            "apply Znot_gt_le.",
            "VernacExtend",
            "6a456f2f3e4f8c27d98bc6ea2a92afbf3ad279d0"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "apply Rle_not_lt with (1 := H).",
            "VernacExtend",
            "f2b9c5d2e023c422f62bdd5566d9dd97f02fed6f"
        ],
        [
            "apply bpow_lt.",
            "VernacExtend",
            "45b51ee535829682305d615af418ef00162d772b"
        ],
        [
            "now apply Zgt_lt.",
            "VernacExtend",
            "722f47ffbb35b026b8fc7f83a8cebac7b5b01f0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_inj : forall e1 e2 : Z, bpow e1 = bpow e2 -> e1 = e2.",
            "VernacStartTheoremProof",
            "49c8db326c0575170246f1986ce7e8181a092b45"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Zle_antisym.",
            "VernacExtend",
            "d5fb169d90b6dbda1fca926c28e78732e286a418"
        ],
        [
            "apply le_bpow.",
            "VernacExtend",
            "926902a02df65b1343b2dab272fc67dc96b5f8eb"
        ],
        [
            "now apply Req_le.",
            "VernacExtend",
            "5d4aa056bac27d316e98423e67b3161b037bd6ce"
        ],
        [
            "apply le_bpow.",
            "VernacExtend",
            "926902a02df65b1343b2dab272fc67dc96b5f8eb"
        ],
        [
            "now apply Req_le.",
            "VernacExtend",
            "5d4aa056bac27d316e98423e67b3161b037bd6ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_exp : forall e : Z, bpow e = exp (Z2R e * ln (Z2R r)).",
            "VernacStartTheoremProof",
            "0a468cbfeac496aa12369cec95702a665e671d66"
        ],
        [
            "assert (forall e, bpow (Zpos e) = exp (Z2R (Zpos e) * ln (Z2R r))).",
            "VernacExtend",
            "c4e834c0c57ed72a60ec7afa121f2e2c535c030d"
        ],
        [
            "intros e.",
            "VernacExtend",
            "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
        ],
        [
            "unfold bpow.",
            "VernacExtend",
            "36bc6c190c9af00882be1e7bf556b2a27b7d02bb"
        ],
        [
            "rewrite Zpower_pos_nat.",
            "VernacExtend",
            "5a2378a4e96e76124bc6c809e1a60a907b7a39a1"
        ],
        [
            "unfold Z2R at 2.",
            "VernacExtend",
            "6f44e857f60ed7126c3a57ab1ee2a2343beeab6a"
        ],
        [
            "rewrite P2R_INR.",
            "VernacExtend",
            "c16b74d873bb49a336f87670ad3e5ef83cba729c"
        ],
        [
            "induction (nat_of_P e).",
            "VernacExtend",
            "a693f2754d62f16f7f46c63fe2d6f1a1e538d790"
        ],
        [
            "rewrite Rmult_0_l.",
            "VernacExtend",
            "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
        ],
        [
            "now rewrite exp_0.",
            "VernacExtend",
            "872ba13fd7b495d621930925ce173921f3d43548"
        ],
        [
            "rewrite Zpower_nat_S.",
            "VernacExtend",
            "ed0f96779d23cb185cca2229c33932e1240e1438"
        ],
        [
            "rewrite S_INR.",
            "VernacExtend",
            "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
        ],
        [
            "rewrite Rmult_plus_distr_r.",
            "VernacExtend",
            "ddbb6f4dc1ffc967497bf9fa73715334cda5e5a0"
        ],
        [
            "rewrite exp_plus.",
            "VernacExtend",
            "6d6e784db73c5ec39c5b67ce974fcd38b73e5738"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "rewrite exp_ln.",
            "VernacExtend",
            "e0d05ba5e54e444d4ee2301090c30aee5255afc4"
        ],
        [
            "rewrite <- IHn.",
            "VernacExtend",
            "3c5a36386bd293ffdd7a599d133f731aebc8cfae"
        ],
        [
            "rewrite <- Z2R_mult.",
            "VernacExtend",
            "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
        ],
        [
            "now rewrite Zmult_comm.",
            "VernacExtend",
            "453e2d7a3c35a70266c2bc23aa15b969f4364a0d"
        ],
        [
            "apply radix_pos.",
            "VernacExtend",
            "0dcd1c467b6b40654e9649f327071230a0eb99a0"
        ],
        [
            "intros [|e|e].",
            "VernacExtend",
            "0089be47c0799d85bb354379fbc38e914a18d36e"
        ],
        [
            "rewrite Rmult_0_l.",
            "VernacExtend",
            "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
        ],
        [
            "now rewrite exp_0.",
            "VernacExtend",
            "872ba13fd7b495d621930925ce173921f3d43548"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold bpow.",
            "VernacExtend",
            "36bc6c190c9af00882be1e7bf556b2a27b7d02bb"
        ],
        [
            "change (Z2R (Zpower_pos r e)) with (bpow (Zpos e)).",
            "VernacExtend",
            "a88fa9f5fc9e44fc8f0db5b9d805a7709896eac3"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite <- exp_Ropp.",
            "VernacExtend",
            "d56423df06fb839b8cea3c4720cbcd7d695d8327"
        ],
        [
            "rewrite <- Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "e7c61948f76e0a8897e51bfab935c33e66508906"
        ],
        [
            "now rewrite <- Z2R_opp.",
            "VernacExtend",
            "d3b562e9349d4c83a12655c70ed13f535b2cb683"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Record ln_beta_prop x := { ln_beta_val :> Z ; _ : (x <> 0)%R -> (bpow (ln_beta_val - 1)%Z <= Rabs x < bpow ln_beta_val)%R }.",
            "VernacInductive",
            "821d4e537310fea66e2b464d2eb4521aea54604b"
        ],
        [
            "Definition ln_beta : forall x : R, ln_beta_prop x.",
            "VernacDefinition",
            "8afadfd39fd8e758f89e8db0d3aae15e7a19dee9"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "set (fact := ln (Z2R r)).",
            "VernacExtend",
            "c3de735ead054327f9342025f7864f7056182cf0"
        ],
        [
            "assert (0 < fact)%R.",
            "VernacExtend",
            "e41b57e9bc1e23a2bca4b44b0ecdd85812a58ba6"
        ],
        [
            "apply exp_lt_inv.",
            "VernacExtend",
            "54122c56a90a857136a1f26dee93cad6533904d0"
        ],
        [
            "rewrite exp_0.",
            "VernacExtend",
            "ee69943fd9d8e21c28cecf6020bad275d0760835"
        ],
        [
            "unfold fact.",
            "VernacExtend",
            "2ef69f4e0f7492e27e2d23d7059bca2d4c63d087"
        ],
        [
            "rewrite exp_ln.",
            "VernacExtend",
            "e0d05ba5e54e444d4ee2301090c30aee5255afc4"
        ],
        [
            "apply (Z2R_lt 1).",
            "VernacExtend",
            "3cade8fa7221b960ee261dbb03963153aa81e3d6"
        ],
        [
            "apply radix_gt_1.",
            "VernacExtend",
            "1fe0c373a207ebec517ee162a6c1eb5c3bbfa7c5"
        ],
        [
            "apply radix_pos.",
            "VernacExtend",
            "0dcd1c467b6b40654e9649f327071230a0eb99a0"
        ],
        [
            "exists (Zfloor (ln (Rabs x) / fact) + 1)%Z.",
            "VernacExtend",
            "dfa32d95000e638add67711cfee29fee2e5107a8"
        ],
        [
            "intros Hx'.",
            "VernacExtend",
            "c8bf15f02f392bdea99572c9f6c46c4de054aea5"
        ],
        [
            "generalize (Rabs_pos_lt _ Hx').",
            "VernacExtend",
            "316c4681c610bf05c87db3b6a9b197c82d7e10c1"
        ],
        [
            "clear Hx'.",
            "VernacExtend",
            "0875f0c7dbe04aede20f6012ae865c8fb0c488ec"
        ],
        [
            "generalize (Rabs x).",
            "VernacExtend",
            "d10c9224a1762bf7037b89c7afa385585fffe4c9"
        ],
        [
            "clear x.",
            "VernacExtend",
            "55ba34b53c4f71a4da16f9a2abf1837110688e06"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "rewrite 2!bpow_exp.",
            "VernacExtend",
            "9d25947b7d66616fbbfc34adac6f28fb56550bfa"
        ],
        [
            "fold fact.",
            "VernacExtend",
            "7c2080567cdd20f54c8ce5dd1974dab4c0f02c34"
        ],
        [
            "pattern x at 2 3 ; replace x with (exp (ln x * / fact * fact)).",
            "VernacExtend",
            "19d2e5bccf9e848bd017aee166a2ccb8b1527fc3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite Z2R_minus.",
            "VernacExtend",
            "75c0e17ece028e1c09696e50b0c135aa8a6471e2"
        ],
        [
            "apply exp_le.",
            "VernacExtend",
            "c474021c163ae1fa914d5a0e276c90623495a739"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "rewrite Rplus_assoc.",
            "VernacExtend",
            "f1bd9ff8db9debbc055c2d64a1c07c2da6dd8407"
        ],
        [
            "rewrite Rplus_opp_r, Rplus_0_r.",
            "VernacExtend",
            "e347882c2b845c4f6ebed9f7cabcd93cff8f4860"
        ],
        [
            "apply Zfloor_lb.",
            "VernacExtend",
            "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
        ],
        [
            "apply exp_increasing.",
            "VernacExtend",
            "4984f45a56637671bd2bd70226d7dc608d8a3bb4"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "apply Zfloor_ub.",
            "VernacExtend",
            "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
        ],
        [
            "rewrite Rinv_l.",
            "VernacExtend",
            "ecdf9c2abd7f5f8afdaa87d40c932567a11fd7b1"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "now apply exp_ln.",
            "VernacExtend",
            "bfe889db4d254ccf54412809115b549c201f4b29"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_lt_bpow : forall e1 e2, (bpow (e1 - 1) < bpow e2)%R -> (e1 <= e2)%Z.",
            "VernacStartTheoremProof",
            "eab543026bdc2b65307a514e1d19e018c7458dfa"
        ],
        [
            "intros e1 e2 He.",
            "VernacExtend",
            "f34fccc77ba75c014af0fcbca480481f30aad82b"
        ],
        [
            "rewrite (Zsucc_pred e1).",
            "VernacExtend",
            "dffde03e8e32933d77a4e16bb86f223c58d40f51"
        ],
        [
            "apply Zlt_le_succ.",
            "VernacExtend",
            "070de595889f014f0a173659377506422eb25080"
        ],
        [
            "now apply lt_bpow.",
            "VernacExtend",
            "f1f20c2ed175cdacafeab74db002f8f529135d43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_unique : forall x e1 e2, (bpow (e1 - 1) <= x < bpow e1)%R -> (bpow (e2 - 1) <= x < bpow e2)%R -> e1 = e2.",
            "VernacStartTheoremProof",
            "2ef8af913534b5e19d2e81d6712942238817b267"
        ],
        [
            "intros x e1 e2 (H1a,H1b) (H2a,H2b).",
            "VernacExtend",
            "5c562b4324394886af18e76fc00c819ee9fffb1e"
        ],
        [
            "apply Zle_antisym ; apply bpow_lt_bpow ; apply Rle_lt_trans with x ; assumption.",
            "VernacExtend",
            "80195a41137777203ded469ef01aeee1f2ce7c6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_unique : forall (x : R) (e : Z), (bpow (e - 1) <= Rabs x < bpow e)%R -> ln_beta x = e :> Z.",
            "VernacStartTheoremProof",
            "66e42a580afeeaec32a129546bebd65b5b2742c5"
        ],
        [
            "intros x e1 He.",
            "VernacExtend",
            "6a51895d9ede863c49d3a63b1a7e67d41bb10583"
        ],
        [
            "destruct (Req_dec x 0) as [Hx|Hx].",
            "VernacExtend",
            "d83dd8360662d9cf2533c82d6f6df4ee188b8ae9"
        ],
        [
            "elim Rle_not_lt with (1 := proj1 He).",
            "VernacExtend",
            "eb6e3b0b1762cd885f1467944e512ede0de02e09"
        ],
        [
            "rewrite Hx, Rabs_R0.",
            "VernacExtend",
            "3ae2496e0f199b4965c9f974f16c5d09f959fed9"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "destruct (ln_beta x) as (e2, Hx2).",
            "VernacExtend",
            "f840271bef67483e044870b6b9b47cda550305ea"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply bpow_unique with (2 := He).",
            "VernacExtend",
            "bf8e3fdf7a4f99a150bdf5b3caf01876dcf9720d"
        ],
        [
            "now apply Hx2.",
            "VernacExtend",
            "6a51a7f70cbb499b866c1498b20ebe0f57164b01"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_opp : forall x, ln_beta (-x) = ln_beta x :> Z.",
            "VernacStartTheoremProof",
            "8ae0b032ebe9162fd214161d80f0d15c0b4924c9"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Req_dec x 0) as [Hx|Hx].",
            "VernacExtend",
            "d83dd8360662d9cf2533c82d6f6df4ee188b8ae9"
        ],
        [
            "now rewrite Hx, Ropp_0.",
            "VernacExtend",
            "70d4d66641a1a55ad9d99b4a43da7687001ee493"
        ],
        [
            "destruct (ln_beta x) as (e, He).",
            "VernacExtend",
            "f661df554abbdd8bdbcf1af24f89bdd44e0743d0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "specialize (He Hx).",
            "VernacExtend",
            "3e114831cf0cdc77e47c1034e6152a15e82edfea"
        ],
        [
            "apply ln_beta_unique.",
            "VernacExtend",
            "79d65859d3098a3d6023e78328916ac1d9f90627"
        ],
        [
            "now rewrite Rabs_Ropp.",
            "VernacExtend",
            "20b628fb90f8e71247184a9caa17c8480951b1d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_abs : forall x, ln_beta (Rabs x) = ln_beta x :> Z.",
            "VernacStartTheoremProof",
            "4afce439554a6c87e59bdb897e93c8edf05b071d"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold Rabs.",
            "VernacExtend",
            "32b62f5465b04c4380fa7a8bf154e157fb296719"
        ],
        [
            "case Rcase_abs ; intros _.",
            "VernacExtend",
            "4bc2d44e16eb96839334934b9b42113acf42af5f"
        ],
        [
            "apply ln_beta_opp.",
            "VernacExtend",
            "acf647f408cf8a059dd8c7c429f68563bdb2cbc3"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_unique_pos : forall (x : R) (e : Z), (bpow (e - 1) <= x < bpow e)%R -> ln_beta x = e :> Z.",
            "VernacStartTheoremProof",
            "db9621151adcb50f6e0d5c3e6014a0bc242c062d"
        ],
        [
            "intros x e1 He1.",
            "VernacExtend",
            "2eb2785189168b33af57759ab1a0e3d3d854778c"
        ],
        [
            "rewrite <- ln_beta_abs.",
            "VernacExtend",
            "9aad19d67f22ac4171063b1a18df84a6b2724182"
        ],
        [
            "apply ln_beta_unique.",
            "VernacExtend",
            "79d65859d3098a3d6023e78328916ac1d9f90627"
        ],
        [
            "rewrite 2!Rabs_pos_eq.",
            "VernacExtend",
            "ce2b3a42d972ffa8c959aebac91148e4e8b0e437"
        ],
        [
            "exact He1.",
            "VernacExtend",
            "a0c84a96dee6465d476b1486bec4641dc86a4595"
        ],
        [
            "apply Rle_trans with (2 := proj1 He1).",
            "VernacExtend",
            "1aeda4eb18e7c954d80d195fa9581bb490da0e47"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_le_abs : forall x y, (x <> 0)%R -> (Rabs x <= Rabs y)%R -> (ln_beta x <= ln_beta y)%Z.",
            "VernacStartTheoremProof",
            "fdeb1fa56ec0e1fef446d676ec369c67869cad25"
        ],
        [
            "intros x y H0x Hxy.",
            "VernacExtend",
            "d2d874468bfc48bf71c62e27db673be305fb649c"
        ],
        [
            "destruct (ln_beta x) as (ex, Hx).",
            "VernacExtend",
            "fb538a8fd5fa5e3af755a73a6c005e3b9fa551bb"
        ],
        [
            "destruct (ln_beta y) as (ey, Hy).",
            "VernacExtend",
            "a02f47e9afe3e44283d2fd97c193f7e7803a72cf"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply bpow_lt_bpow.",
            "VernacExtend",
            "5b208dbd1aa47591491b48ed4e11e80c7e5ca0c1"
        ],
        [
            "specialize (Hx H0x).",
            "VernacExtend",
            "8ea3d41ce6f40eeee737804f0ea12e22a8fb7742"
        ],
        [
            "apply Rle_lt_trans with (1 := proj1 Hx).",
            "VernacExtend",
            "3462ae2a2f9152dcbab13e61aa646b92282d4ad8"
        ],
        [
            "apply Rle_lt_trans with (1 := Hxy).",
            "VernacExtend",
            "bfb6a058e6aa79b608959d9250227b33542c507e"
        ],
        [
            "apply Hy.",
            "VernacExtend",
            "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
        ],
        [
            "intros Hy'.",
            "VernacExtend",
            "31a3fe41197f72196968e89cac33ae870f595243"
        ],
        [
            "apply Rlt_not_le with (1 := Rabs_pos_lt _ H0x).",
            "VernacExtend",
            "4d3e54d706dacea7fcd18fccbc6d8d950a4d7b43"
        ],
        [
            "apply Rle_trans with (1 := Hxy).",
            "VernacExtend",
            "15320367548a991b5ea122fc234978ee63198cbd"
        ],
        [
            "rewrite Hy', Rabs_R0.",
            "VernacExtend",
            "eeba4ae78f3991dd839a488cdc5d40b7073f9211"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_le : forall x y, (0 < x)%R -> (x <= y)%R -> (ln_beta x <= ln_beta y)%Z.",
            "VernacStartTheoremProof",
            "eb23aa37247eeb5290cfe4e834c0998974a9cc43"
        ],
        [
            "intros x y H0x Hxy.",
            "VernacExtend",
            "d2d874468bfc48bf71c62e27db673be305fb649c"
        ],
        [
            "apply ln_beta_le_abs.",
            "VernacExtend",
            "5d91662a86d36a47992ad980cdadb86c0b8e45f6"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "rewrite 2!Rabs_pos_eq.",
            "VernacExtend",
            "ce2b3a42d972ffa8c959aebac91148e4e8b0e437"
        ],
        [
            "exact Hxy.",
            "VernacExtend",
            "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
        ],
        [
            "apply Rle_trans with (2 := Hxy).",
            "VernacExtend",
            "10741e2cd960be8243d43e987f87abd2fd3bf2b0"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ln_beta_lt_pos : forall x y, (0 < y)%R -> (ln_beta x < ln_beta y)%Z -> (x < y)%R.",
            "VernacStartTheoremProof",
            "0909d4107e7c40cf9b4ea67ccaa905c5184bd080"
        ],
        [
            "intros x y Py.",
            "VernacExtend",
            "87c1172b58267f7509f2f43e75c2fac8e6e8f794"
        ],
        [
            "case (Rle_or_lt x 0); intros Px.",
            "VernacExtend",
            "a4d2ab8dfe39121b989a83399b243c9864746026"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now apply Rle_lt_trans with 0%R.",
            "VernacExtend",
            "6659ec6a060d963dd62789a3be1f6d84e01d1ae1"
        ],
        [
            "destruct (ln_beta x) as (ex, Hex).",
            "VernacExtend",
            "0079c5ab8c5024f46c86aa1fa1cac77b59ebcfd8"
        ],
        [
            "destruct (ln_beta y) as (ey, Hey).",
            "VernacExtend",
            "84b318b2d9b0c1af1a6e6c0439303e0630f73577"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "destruct Hex as (_,Hex); [now apply Rgt_not_eq|].",
            "VernacExtend",
            "8eb0bd181e680ef17439d3117faf0ebe04f39ef1"
        ],
        [
            "destruct Hey as (Hey,_); [now apply Rgt_not_eq|].",
            "VernacExtend",
            "9589d900c85b51052bdd732afe94e5354bbc2d93"
        ],
        [
            "rewrite Rabs_right in Hex; [|now apply Rle_ge; apply Rlt_le].",
            "VernacExtend",
            "fb05d6a852c4e7ec7af24b142408af928440f12a"
        ],
        [
            "rewrite Rabs_right in Hey; [|now apply Rle_ge; apply Rlt_le].",
            "VernacExtend",
            "a2a5650fd46cca22123075baa2d73cfd3e03366d"
        ],
        [
            "apply (Rlt_le_trans _ _ _ Hex).",
            "VernacExtend",
            "a0b84fbeee9ba530a7d51df80956dc8e9f3b30ee"
        ],
        [
            "apply Rle_trans with (bpow (ey - 1)); [|exact Hey].",
            "VernacExtend",
            "8b2e7b83860b717b3045d3979afbd8588c2bc9da"
        ],
        [
            "now apply bpow_le; omega.",
            "VernacExtend",
            "626ae804630da62585203c9d3ca739805209c0f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_bpow : forall e, (ln_beta (bpow e) = e + 1 :> Z)%Z.",
            "VernacStartTheoremProof",
            "f7cc619cf022d989ee5dea6b5aa8fd8444c93179"
        ],
        [
            "intros e.",
            "VernacExtend",
            "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
        ],
        [
            "apply ln_beta_unique.",
            "VernacExtend",
            "79d65859d3098a3d6023e78328916ac1d9f90627"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "9b60731d6b608338747f09fec19f24d12baad022"
        ],
        [
            "replace (e + 1 - 1)%Z with e by ring.",
            "VernacExtend",
            "bf8263db9d022a496f353fe9e099adf8063ba7dd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply bpow_lt.",
            "VernacExtend",
            "45b51ee535829682305d615af418ef00162d772b"
        ],
        [
            "apply Zlt_succ.",
            "VernacExtend",
            "f4cf5b932d8c774be510b7802fbeea627fe15261"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_mult_bpow : forall x e, x <> 0%R -> (ln_beta (x * bpow e) = ln_beta x + e :>Z)%Z.",
            "VernacStartTheoremProof",
            "3048bdda6a7a5bd285a89b40e643ad7270483cfc"
        ],
        [
            "intros x e Zx.",
            "VernacExtend",
            "a14eecc1e49d52afb6758fdfcf0037436d9a5653"
        ],
        [
            "destruct (ln_beta x) as (ex, Ex) ; simpl.",
            "VernacExtend",
            "1899981848c7839026ff978332693c4f1791876d"
        ],
        [
            "specialize (Ex Zx).",
            "VernacExtend",
            "60a98592e41f8e51b8b8f13d2a29bc7a3ff55447"
        ],
        [
            "apply ln_beta_unique.",
            "VernacExtend",
            "79d65859d3098a3d6023e78328916ac1d9f90627"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite (Rabs_pos_eq (bpow e)) by apply bpow_ge_0.",
            "VernacExtend",
            "74a54533076326d52006c6b48b0585290a870bce"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "replace (ex + e - 1)%Z with (ex - 1 + e)%Z by ring.",
            "VernacExtend",
            "bdae4bcd54d412d6fab80b80da00dc24dde77e6b"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "apply Ex.",
            "VernacExtend",
            "731a0b1d525e39ed5cef08f414754edbca20bc6e"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "apply Ex.",
            "VernacExtend",
            "731a0b1d525e39ed5cef08f414754edbca20bc6e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_le_bpow : forall x e, x <> 0%R -> (Rabs x < bpow e)%R -> (ln_beta x <= e)%Z.",
            "VernacStartTheoremProof",
            "6e61761ca6c2dad552c4ae98f4ce0b20bec8bc70"
        ],
        [
            "intros x e Zx Hx.",
            "VernacExtend",
            "69c741b58f204e1415d1f9aaf131b322455ebea8"
        ],
        [
            "destruct (ln_beta x) as (ex, Ex) ; simpl.",
            "VernacExtend",
            "1899981848c7839026ff978332693c4f1791876d"
        ],
        [
            "specialize (Ex Zx).",
            "VernacExtend",
            "60a98592e41f8e51b8b8f13d2a29bc7a3ff55447"
        ],
        [
            "apply bpow_lt_bpow.",
            "VernacExtend",
            "5b208dbd1aa47591491b48ed4e11e80c7e5ca0c1"
        ],
        [
            "now apply Rle_lt_trans with (Rabs x).",
            "VernacExtend",
            "10582be5e0432f1bca7ff4d13fe38473faaa4f0c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_gt_bpow : forall x e, (bpow e <= Rabs x)%R -> (e < ln_beta x)%Z.",
            "VernacStartTheoremProof",
            "28c00b9f94631d59fb725d0204b0cc1f351689ac"
        ],
        [
            "intros x e Hx.",
            "VernacExtend",
            "183d993f7f6ed381c7630272430ba030c84b0bb5"
        ],
        [
            "destruct (ln_beta x) as (ex, Ex) ; simpl.",
            "VernacExtend",
            "1899981848c7839026ff978332693c4f1791876d"
        ],
        [
            "apply lt_bpow.",
            "VernacExtend",
            "db8c1ac0cbb941f22b837bffa21b6c78fedc5888"
        ],
        [
            "apply Rle_lt_trans with (1 := Hx).",
            "VernacExtend",
            "db430b518aa17159c7ad33c200e700e4a1e02355"
        ],
        [
            "apply Ex.",
            "VernacExtend",
            "731a0b1d525e39ed5cef08f414754edbca20bc6e"
        ],
        [
            "intros Zx.",
            "VernacExtend",
            "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
        ],
        [
            "apply Rle_not_lt with (1 := Hx).",
            "VernacExtend",
            "7dd563621105450d925cd479033afb35e2b0e522"
        ],
        [
            "rewrite Zx, Rabs_R0.",
            "VernacExtend",
            "bc3ecfffcc859f696fd367fb4a935def06218974"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_ge_bpow : forall x e, (bpow (e - 1) <= Rabs x)%R -> (e <= ln_beta x)%Z.",
            "VernacStartTheoremProof",
            "1ddfa046ee7e62a54ab5289d878eb1c63dbd6911"
        ],
        [
            "intros x e H.",
            "VernacExtend",
            "4a570b77a3b9d2106e97b6d9c5fd4c586fcd274a"
        ],
        [
            "destruct (Rlt_or_le (Rabs x) (bpow e)) as [Hxe|Hxe].",
            "VernacExtend",
            "10dfc8c03d6a28b2eb3b6f1919dc193fd5fd160c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (ln_beta x = e :> Z) as Hln.",
            "VernacExtend",
            "e14ab7fa334c78f72c5cf67c404ac688954f9e6d"
        ],
        [
            "now apply ln_beta_unique; split.",
            "VernacExtend",
            "044ecce7063d852a79f59baa69592bcfb32f78c8"
        ],
        [
            "rewrite Hln.",
            "VernacExtend",
            "bb1b772435cf77c9ad5624a7e417a7cf58508780"
        ],
        [
            "now apply Z.le_refl.",
            "VernacExtend",
            "a8ef7ca7f7ac60eea098ad432e6d9737d356675c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Zlt_le_weak.",
            "VernacExtend",
            "77c804797cd604de1af1fd78f914f426e7c6ce85"
        ],
        [
            "now apply ln_beta_gt_bpow.",
            "VernacExtend",
            "944360694e9de116bfa3c2ce8238224f7332dde8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_ln_beta_gt : forall x, (Rabs x < bpow (ln_beta x))%R.",
            "VernacStartTheoremProof",
            "50c85fb4e6e7435c41cb61b24036c640b5ea6321"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Req_dec x 0) as [Zx|Zx].",
            "VernacExtend",
            "b0fb74435c9a75d48c2d5b5e52e145e2f5a5444e"
        ],
        [
            "rewrite Zx, Rabs_R0.",
            "VernacExtend",
            "bc3ecfffcc859f696fd367fb4a935def06218974"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "destruct (ln_beta x) as (ex, Ex) ; simpl.",
            "VernacExtend",
            "1899981848c7839026ff978332693c4f1791876d"
        ],
        [
            "now apply Ex.",
            "VernacExtend",
            "417bd386a04f52f9bd1a124e302a9f1c5f38bf0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bpow_ln_beta_le : forall x, (x <> 0)%R -> (bpow (ln_beta x-1) <= Rabs x)%R.",
            "VernacStartTheoremProof",
            "8ca80870552195dd11d8dbfe288e1f546b769d87"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "destruct (ln_beta x) as (ex, Ex) ; simpl.",
            "VernacExtend",
            "1899981848c7839026ff978332693c4f1791876d"
        ],
        [
            "now apply Ex.",
            "VernacExtend",
            "417bd386a04f52f9bd1a124e302a9f1c5f38bf0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_le_Zpower : forall m e, m <> Z0 -> (Zabs m < Zpower r e)%Z-> (ln_beta (Z2R m) <= e)%Z.",
            "VernacStartTheoremProof",
            "17de2dfb8e33a8a39afcfddc921bfd9a7f2f559a"
        ],
        [
            "intros m e Zm Hm.",
            "VernacExtend",
            "69b33fab313b4f86b1ecbb5027637e574cc56ef8"
        ],
        [
            "apply ln_beta_le_bpow.",
            "VernacExtend",
            "5ef46fc2fd8dc2ad56a7abb0ceb7e9ab23f60ec8"
        ],
        [
            "exact (Z2R_neq m 0 Zm).",
            "VernacExtend",
            "1420cb9998314b06fcb0d9a9e006afc4f333db32"
        ],
        [
            "destruct (Zle_or_lt 0 e).",
            "VernacExtend",
            "f3fe38f9730ece7c5b89073396c5f96dad133326"
        ],
        [
            "rewrite <- Z2R_abs, <- Z2R_Zpower with (1 := H).",
            "VernacExtend",
            "dbd808e26904ea97720e1505c33a32a8a23409f2"
        ],
        [
            "now apply Z2R_lt.",
            "VernacExtend",
            "7f5609ab9fcfd964c22b3efe7eaeac75e6c9173c"
        ],
        [
            "elim Zm.",
            "VernacExtend",
            "c8d3cfff1e968a262573ef340275840def0ad1d8"
        ],
        [
            "cut (Zabs m < 0)%Z.",
            "VernacExtend",
            "452c5ba0786bffb3fccbbb990c554ac44ef3930c"
        ],
        [
            "now case m.",
            "VernacExtend",
            "1e8ee82e88d7982334d66da1019694ce4849806d"
        ],
        [
            "clear -Hm H.",
            "VernacExtend",
            "bff7e7ef2b2e659e871b53278c1423bfbcb56525"
        ],
        [
            "now destruct e.",
            "VernacExtend",
            "ed4ee06a57371396ad709c3a097605f83eae0ff9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ln_beta_gt_Zpower : forall m e, m <> Z0 -> (Zpower r e <= Zabs m)%Z -> (e < ln_beta (Z2R m))%Z.",
            "VernacStartTheoremProof",
            "e4b6a4443fc7477c67670ad9c93334f32b6b0963"
        ],
        [
            "intros m e Zm Hm.",
            "VernacExtend",
            "69b33fab313b4f86b1ecbb5027637e574cc56ef8"
        ],
        [
            "apply ln_beta_gt_bpow.",
            "VernacExtend",
            "537a4f6c3ecc0c0f3557d18eabf7614d3e3bfee2"
        ],
        [
            "rewrite <- Z2R_abs.",
            "VernacExtend",
            "77629e87057563edf3f2c544c80c7822cbaa734b"
        ],
        [
            "destruct (Zle_or_lt 0 e).",
            "VernacExtend",
            "f3fe38f9730ece7c5b89073396c5f96dad133326"
        ],
        [
            "rewrite <- Z2R_Zpower with (1 := H).",
            "VernacExtend",
            "6f0621e241c0a83a34a11fa06b04f1bf86de1c34"
        ],
        [
            "now apply Z2R_le.",
            "VernacExtend",
            "58bf5ef017302bba0024780a49c5a9a8c382820b"
        ],
        [
            "apply Rle_trans with (bpow 0).",
            "VernacExtend",
            "d5640b143575ec56105644b9f3dbca52950dc311"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "now apply Zlt_le_weak.",
            "VernacExtend",
            "8df137fb70ba9a1f8f0605f13095da8524766c66"
        ],
        [
            "apply (Z2R_le 1).",
            "VernacExtend",
            "0ed9eea66069dc85aaa897c5385949fe4a67943b"
        ],
        [
            "clear -Zm.",
            "VernacExtend",
            "2ace2950bf308917dac7a2b75259707fd65d33b7"
        ],
        [
            "zify ; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ln_beta_mult : forall x y, (x <> 0)%R -> (y <> 0)%R -> (ln_beta x + ln_beta y - 1 <= ln_beta (x * y) <= ln_beta x + ln_beta y)%Z.",
            "VernacStartTheoremProof",
            "d31708681b8a553bd2440822f52e99af4d9f244f"
        ],
        [
            "intros x y Hx Hy.",
            "VernacExtend",
            "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
        ],
        [
            "destruct (ln_beta x) as (ex, Hx2).",
            "VernacExtend",
            "0b07edc96392183795e751b59476fe9f655e301a"
        ],
        [
            "destruct (ln_beta y) as (ey, Hy2).",
            "VernacExtend",
            "53bde70c7d7cf63ad834c3817ab7b0bc02dca4f8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (Hx2 Hx) as (Hx21,Hx22); clear Hx2.",
            "VernacExtend",
            "97bc76506033a611ef0e2640533d1ac3caff2ae8"
        ],
        [
            "destruct (Hy2 Hy) as (Hy21,Hy22); clear Hy2.",
            "VernacExtend",
            "f257df5bfb9e8faf3b09caf15cc8f3410953204c"
        ],
        [
            "assert (Hxy : (bpow (ex + ey - 1 - 1) <= Rabs (x * y))%R).",
            "VernacExtend",
            "42aeda8d8bf30de1507bccbf2095af2c8245461d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "replace (ex + ey -1 -1)%Z with (ex - 1 + (ey - 1))%Z; [|ring].",
            "VernacExtend",
            "75b628e4eb8768ea07e86917491608abe5eee452"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "now apply Rmult_le_compat; try apply bpow_ge_0.",
            "VernacExtend",
            "bf802f0fc18a7ecf9921247469820d1673ac56e5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Hxy2 : (Rabs (x * y) < bpow (ex + ey))%R).",
            "VernacExtend",
            "dcb6ca61457f44bf60fdb3b813b123af4bdc7540"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rmult_le_0_lt_compat; try assumption.",
            "VernacExtend",
            "db2735b8503e4069a7b050b3863b0308ebd88292"
        ],
        [
            "now apply Rle_trans with (bpow (ex - 1)); try apply bpow_ge_0.",
            "VernacExtend",
            "0479573875bea839169dfabb2ae3149b40eb113b"
        ],
        [
            "now apply Rle_trans with (bpow (ey - 1)); try apply bpow_ge_0.",
            "VernacExtend",
            "382dc4150e43c2255721b0ccff27d301e3f7550c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply ln_beta_ge_bpow.",
            "VernacExtend",
            "dc02341e098ea505fc4c9ae962090df870773108"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply ln_beta_le_bpow.",
            "VernacExtend",
            "5ef46fc2fd8dc2ad56a7abb0ceb7e9ab23f60ec8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply Rmult_integral_contrapositive_currified.",
            "VernacExtend",
            "892bece4add20382e80fa3475f14a4e4266beae1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ln_beta_plus : forall x y, (0 < y)%R -> (y <= x)%R -> (ln_beta x <= ln_beta (x + y) <= ln_beta x + 1)%Z.",
            "VernacStartTheoremProof",
            "30de90065d449b54ea1b152155cfc0eb6e447a29"
        ],
        [
            "assert (Hr : (2 <= r)%Z).",
            "VernacExtend",
            "e373c6cb05d335ff9e88cd8ee772855a14253038"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct r as (beta_val,beta_prop).",
            "VernacExtend",
            "e3bd2c26a6f0aadf489de45215741b982c58de69"
        ],
        [
            "now apply Zle_bool_imp_le.",
            "VernacExtend",
            "58a939dc5b091786ac14b82b5f01868c4efb5e4b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros x y Hy Hxy.",
            "VernacExtend",
            "47c10491d158605cf6c4835f87fe490df0a6b352"
        ],
        [
            "assert (Hx : (0 < x)%R) by apply (Rlt_le_trans _ _ _ Hy Hxy).",
            "VernacExtend",
            "6b51ed4f849c5ad65090f060e0057a1a7eb69c15"
        ],
        [
            "destruct (ln_beta x) as (ex,Hex); simpl.",
            "VernacExtend",
            "ac98aa9edde7668e0efd67a83d76f2f9cae82c5d"
        ],
        [
            "destruct Hex as (Hex0,Hex1); [now apply Rgt_not_eq|].",
            "VernacExtend",
            "adf34c0fd960402b6670822dc85d722e4e2390f5"
        ],
        [
            "assert (Haxy : (Rabs (x + y) < bpow (ex + 1))%R).",
            "VernacExtend",
            "73dfe920d91095629a8cf174e6e4f87699bc11d9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite bpow_plus1.",
            "VernacExtend",
            "7c8527badd47d963ff02790f0b5f6022b157460f"
        ],
        [
            "apply Rlt_le_trans with (2 * bpow ex)%R.",
            "VernacExtend",
            "9e98e2f239d80d203da32a6a51702a7a0cfa5596"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "apply Rle_lt_trans with (2 * Rabs x)%R.",
            "VernacExtend",
            "79664a92ac4ef05a669f4253dd68949490f0ad0b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "replace (2 * x)%R with (x + x)%R by ring.",
            "VernacExtend",
            "75ac5b03fc6c14f799e70d518f61989ceb0649ed"
        ],
        [
            "now apply Rplus_le_compat_l.",
            "VernacExtend",
            "83b74ce917a38b4c507ac1ab8d2785aa8d319f4c"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Rmult_lt_compat_l with (2 := Hex1).",
            "VernacExtend",
            "b132e9f31ce012f0993f1c22d813bd8679b9b6f1"
        ],
        [
            "exact Rlt_0_2.",
            "VernacExtend",
            "b28a44a4ff92bff06dfdd851bad8224b270c7e57"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- (Rplus_0_l 0).",
            "VernacExtend",
            "b4f6e30bb97556b68566d133279e496054a7a01a"
        ],
        [
            "now apply Rlt_le, Rplus_lt_compat.",
            "VernacExtend",
            "f6ddeffb562dfd2258a442205c0ba46fd5aff9a8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "now apply bpow_ge_0.",
            "VernacExtend",
            "8d43b785efd875c566a55a0415104968ba2c5db1"
        ],
        [
            "now apply (Z2R_le 2).",
            "VernacExtend",
            "40ba7472356cc3bafca237cad1974a078c7b3642"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Haxy2 : (bpow (ex - 1) <= Rabs (x + y))%R).",
            "VernacExtend",
            "6e37a2b2f413b75a625e2141b88b66226d373fc5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (Rle_trans _ _ _ Hex0).",
            "VernacExtend",
            "3d4f65b1f47a8f91385287a0dd30dbbce8af75f0"
        ],
        [
            "rewrite Rabs_right; [|now apply Rgt_ge].",
            "VernacExtend",
            "04c885e1ad2beaf8f7a5a2cfda2c27b925970b21"
        ],
        [
            "apply Rabs_ge; right.",
            "VernacExtend",
            "34accb61e51ccc7bdd1f8b3e350a261051b38519"
        ],
        [
            "rewrite <- (Rplus_0_r x) at 1.",
            "VernacExtend",
            "13008200fc57b6d9d43b67c499bbb9e63c2de587"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply ln_beta_ge_bpow.",
            "VernacExtend",
            "dc02341e098ea505fc4c9ae962090df870773108"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply ln_beta_le_bpow.",
            "VernacExtend",
            "5ef46fc2fd8dc2ad56a7abb0ceb7e9ab23f60ec8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply tech_Rplus; [apply Rlt_le|].",
            "VernacExtend",
            "aa9f8b6c77fe685a80af09bfd12679ba5a0f20ae"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact Haxy.",
            "VernacExtend",
            "0f3e7933528c261a33b539b866b298dd60cfb5e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ln_beta_minus : forall x y, (0 < y)%R -> (y < x)%R -> (ln_beta (x - y) <= ln_beta x)%Z.",
            "VernacStartTheoremProof",
            "ab474a77202baf0871a9cee50983ab96138cb79e"
        ],
        [
            "intros x y Py Hxy.",
            "VernacExtend",
            "8d0c599f0593e32c72899f5bf52351c7a5607b8b"
        ],
        [
            "assert (Px : (0 < x)%R) by apply (Rlt_trans _ _ _ Py Hxy).",
            "VernacExtend",
            "972dfd2ecaa178e57813a3cd6f37826b78ff7861"
        ],
        [
            "apply ln_beta_le.",
            "VernacExtend",
            "e43580b7286582594a33da026f0809ba6159bbe8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply Rlt_Rminus.",
            "VernacExtend",
            "98fbeb5f7590c6c2524c2eb370f8862917d0d966"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- (Rplus_0_r x) at 2.",
            "VernacExtend",
            "b00dcc97c695805425d1ebe458a16aa216b5348d"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "now apply Ropp_le_contravar; apply Rlt_le.",
            "VernacExtend",
            "b610300bcb3a27fd6427a9b9457b75258cde832e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ln_beta_minus_lb : forall x y, (0 < x)%R -> (0 < y)%R -> (ln_beta y <= ln_beta x - 2)%Z -> (ln_beta x - 1 <= ln_beta (x - y))%Z.",
            "VernacStartTheoremProof",
            "00f6201a6f2445ddcb8953628ad6b3493b948820"
        ],
        [
            "assert (Hbeta : (2 <= r)%Z).",
            "VernacExtend",
            "7b900d2934352be5b192aac6bea935dfe3b3818f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct r as (beta_val,beta_prop).",
            "VernacExtend",
            "e3bd2c26a6f0aadf489de45215741b982c58de69"
        ],
        [
            "now apply Zle_bool_imp_le.",
            "VernacExtend",
            "58a939dc5b091786ac14b82b5f01868c4efb5e4b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros x y Px Py Hln.",
            "VernacExtend",
            "51ed581ead0ba14481738f7541536e0e14722f36"
        ],
        [
            "assert (Oxy : (y < x)%R); [apply ln_beta_lt_pos;[assumption|omega]|].",
            "VernacExtend",
            "5cfab2a677c9163453d87e89fdfbc157c62b559e"
        ],
        [
            "destruct (ln_beta x) as (ex,Hex).",
            "VernacExtend",
            "0079c5ab8c5024f46c86aa1fa1cac77b59ebcfd8"
        ],
        [
            "destruct (ln_beta y) as (ey,Hey).",
            "VernacExtend",
            "84b318b2d9b0c1af1a6e6c0439303e0630f73577"
        ],
        [
            "simpl in Hln |- *.",
            "VernacExtend",
            "fbaf407724d6c40755b602b023d8f2bdca12709d"
        ],
        [
            "destruct Hex as (Hex,_); [now apply Rgt_not_eq|].",
            "VernacExtend",
            "0df07e20f2093e0fa8ef9c88d5729db722b6a7d6"
        ],
        [
            "destruct Hey as (_,Hey); [now apply Rgt_not_eq|].",
            "VernacExtend",
            "c85378b06aefcbefcc02a37635b398078d42b7c3"
        ],
        [
            "assert (Hbx : (bpow (ex - 2) + bpow (ex - 2) <= x)%R).",
            "VernacExtend",
            "cde1505df1196efae8ef8abebf8b99581f8c8c58"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply Rle_trans with (bpow (ex - 1)).",
            "VernacExtend",
            "e4171cb5ae114bb9b441a15de69d3ee94d2991f7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace (ex - 1)%Z with (ex - 2 + 1)%Z by ring.",
            "VernacExtend",
            "d83cc5307ee6e92660256d5af21075b29d80da86"
        ],
        [
            "rewrite bpow_plus1.",
            "VernacExtend",
            "7c8527badd47d963ff02790f0b5f6022b157460f"
        ],
        [
            "apply Rmult_le_compat_r; [now apply bpow_ge_0|].",
            "VernacExtend",
            "4a486c90f003a691d8f6953ba5bb92d8a58fe4a6"
        ],
        [
            "now change 2%R with (Z2R 2); apply Z2R_le.",
            "VernacExtend",
            "0b64d1d2dd589cd9c87c8c016071b5b89cc8a29e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite Rabs_right in Hex; [|apply Rle_ge; apply Rlt_le].",
            "VernacExtend",
            "a372ff79bb52d9dabdef89e89110f09171a30899"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Hby : (y < bpow (ex - 2))%R).",
            "VernacExtend",
            "948653d5b53147ec63d542931615e377cd19b617"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Rlt_le_trans with (bpow ey).",
            "VernacExtend",
            "3c8b25eab76f2baa78f2779bf38652cefdab9133"
        ],
        [
            "now rewrite Rabs_right in Hey; [|apply Rle_ge; apply Rlt_le].",
            "VernacExtend",
            "22c48f93651d718617f8672977e5803f62fe3727"
        ],
        [
            "now apply bpow_le.",
            "VernacExtend",
            "b07fc0e6cc6b5e33c8f24f56e53ed07e1d95cb75"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Hbxy : (bpow (ex - 2) <= x - y)%R).",
            "VernacExtend",
            "7d25ba00e0750d25facbc1419766ed39d3ca063a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Ropp_lt_contravar in Hby.",
            "VernacExtend",
            "76b740d57cad0c9ec3431227ca1d2c860a0b5448"
        ],
        [
            "apply Rlt_le in Hby.",
            "VernacExtend",
            "93b1d8cb9d7972179ba9b372cee3174eec455461"
        ],
        [
            "replace (bpow (ex - 2))%R with (bpow (ex - 2) + bpow (ex - 2) - bpow (ex - 2))%R by ring.",
            "VernacExtend",
            "d20ba838d27b4cdab65259e91e00252d5770fdad"
        ],
        [
            "now apply Rplus_le_compat.",
            "VernacExtend",
            "5026fc76978e94bba1bafa5de57b1568a016e780"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply ln_beta_ge_bpow.",
            "VernacExtend",
            "f60b8da4a6bd424ede261a2939de1decc4c6e014"
        ],
        [
            "replace (ex - 1 - 1)%Z with (ex - 2)%Z by ring.",
            "VernacExtend",
            "1e602a7a6f0c03b17a610ec23d96ac8934c4e09a"
        ],
        [
            "now apply Rabs_ge; right.",
            "VernacExtend",
            "b2c5a4311b6bf0e4bccdf234627981be58a8f22b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ln_beta_div : forall x y : R, (0 < x)%R -> (0 < y)%R -> (ln_beta x - ln_beta y <= ln_beta (x / y) <= ln_beta x - ln_beta y + 1)%Z.",
            "VernacStartTheoremProof",
            "92667329899adca63611ea4ea6da931ad1cd0b82"
        ],
        [
            "intros x y Px Py.",
            "VernacExtend",
            "f3b44dccb23f4c78e9170701010b73124e3f4d3b"
        ],
        [
            "destruct (ln_beta x) as (ex,Hex).",
            "VernacExtend",
            "0079c5ab8c5024f46c86aa1fa1cac77b59ebcfd8"
        ],
        [
            "destruct (ln_beta y) as (ey,Hey).",
            "VernacExtend",
            "84b318b2d9b0c1af1a6e6c0439303e0630f73577"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "rewrite Rabs_right in Hex; [|now apply Rle_ge; apply Rlt_le].",
            "VernacExtend",
            "fb05d6a852c4e7ec7af24b142408af928440f12a"
        ],
        [
            "rewrite Rabs_right in Hey; [|now apply Rle_ge; apply Rlt_le].",
            "VernacExtend",
            "a2a5650fd46cca22123075baa2d73cfd3e03366d"
        ],
        [
            "assert (Heiy : (bpow (- ey) < / y <= bpow (- ey + 1))%R).",
            "VernacExtend",
            "948d9d2867eb5c46a3cec729c20cfd7f882befed"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite bpow_opp.",
            "VernacExtend",
            "3024d5fb06fda2c4f53c69e840b4e7c952a719e1"
        ],
        [
            "apply Rinv_lt_contravar.",
            "VernacExtend",
            "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Rmult_lt_0_compat; [exact Py|].",
            "VernacExtend",
            "43e8dc544a16f712bf3f738db43fc050e54c03d0"
        ],
        [
            "now apply bpow_gt_0.",
            "VernacExtend",
            "f1507fcc1772d7d1e8db79675b7a473a69d8cac0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Hey.",
            "VernacExtend",
            "e938ee0e67294187a39fb64a4eb915ecc5a77238"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace (_ + _)%Z with (- (ey - 1))%Z by ring.",
            "VernacExtend",
            "78a1891804a792ca8698a184027b84bb693f3cce"
        ],
        [
            "rewrite bpow_opp.",
            "VernacExtend",
            "3024d5fb06fda2c4f53c69e840b4e7c952a719e1"
        ],
        [
            "apply Rinv_le; [now apply bpow_gt_0|].",
            "VernacExtend",
            "7580949017a2480ed7fa20b10e4e52821b7d15d3"
        ],
        [
            "apply Hey.",
            "VernacExtend",
            "e938ee0e67294187a39fb64a4eb915ecc5a77238"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply ln_beta_ge_bpow.",
            "VernacExtend",
            "f60b8da4a6bd424ede261a2939de1decc4c6e014"
        ],
        [
            "apply Rabs_ge; right.",
            "VernacExtend",
            "34accb61e51ccc7bdd1f8b3e350a261051b38519"
        ],
        [
            "replace (_ - _)%Z with (ex - 1 - ey)%Z by ring.",
            "VernacExtend",
            "dd086d21349821dcf5df040f1e78a17a0fa5e385"
        ],
        [
            "unfold Zminus at 1; rewrite bpow_plus.",
            "VernacExtend",
            "86bffe2f635996a961bbeb945c2c082098f03fcd"
        ],
        [
            "apply Rmult_le_compat.",
            "VernacExtend",
            "99a65cd1efb8e35313415d4b052731e2b0746daf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply bpow_ge_0.",
            "VernacExtend",
            "8d43b785efd875c566a55a0415104968ba2c5db1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply bpow_ge_0.",
            "VernacExtend",
            "8d43b785efd875c566a55a0415104968ba2c5db1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Hex.",
            "VernacExtend",
            "0626b143f310ba29c3689980df03ba1efdab98c5"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Rlt_le; apply Heiy.",
            "VernacExtend",
            "36d95e4f15fcf78e63db4a522c75dd9f98838a93"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Pxy : (0 < x * / y)%R).",
            "VernacExtend",
            "4b5563556773955ca4cac06b33015f6567083986"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Rmult_lt_0_compat; [exact Px|].",
            "VernacExtend",
            "44f819a89ffb3d0a0039c5e676f60e90ef73ea1d"
        ],
        [
            "now apply Rinv_0_lt_compat.",
            "VernacExtend",
            "58509a7b472652bb7aef39a9b6811672d04772c5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply ln_beta_le_bpow.",
            "VernacExtend",
            "5ef46fc2fd8dc2ad56a7abb0ceb7e9ab23f60ec8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Rabs_right; [|now apply Rle_ge; apply Rlt_le].",
            "VernacExtend",
            "8706cff7c417d323ea1d80ba1695bf8223720149"
        ],
        [
            "replace (_ + 1)%Z with (ex + (- ey + 1))%Z by ring.",
            "VernacExtend",
            "22e1e3a9d99f2d00ca2c306061ad7b5a668ba453"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "apply Rlt_le_trans with (bpow ex * / y)%R.",
            "VernacExtend",
            "968df15b1513ad81afdf0fb28d2b3a81f6a442cb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Rmult_lt_compat_r; [now apply Rinv_0_lt_compat|].",
            "VernacExtend",
            "38632419c264a54ce6ec29547eff54239054d7db"
        ],
        [
            "apply Hex.",
            "VernacExtend",
            "0626b143f310ba29c3689980df03ba1efdab98c5"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Rmult_le_compat_l; [now apply bpow_ge_0|].",
            "VernacExtend",
            "f69ef2b6de2fc8786b9e7602db561df9b683ea13"
        ],
        [
            "apply Heiy.",
            "VernacExtend",
            "ea6aed637c178ebd11c2cdf3dd52bee7cebde635"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ln_beta_sqrt : forall x, (0 < x)%R -> (2 * ln_beta (sqrt x) - 1 <= ln_beta x <= 2 * ln_beta (sqrt x))%Z.",
            "VernacStartTheoremProof",
            "d284861346546225e07972f3ed94cae353d435e2"
        ],
        [
            "intros x Px.",
            "VernacExtend",
            "dce43951acf95e3bdf21f35d66e96c306e50a7ef"
        ],
        [
            "assert (H : (bpow (2 * ln_beta (sqrt x) - 1 - 1) <= Rabs x < bpow (2 * ln_beta (sqrt x)))%R).",
            "VernacExtend",
            "42fc68a658825dd926ebbe7168536709e83c8f20"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Rge_le; rewrite <- (sqrt_def x) at 1; [|now apply Rlt_le]; apply Rle_ge.",
            "VernacExtend",
            "e9d1df54defb9dd0fa251cdc6ba672c5c5e555ef"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "replace (_ - _)%Z with (ln_beta (sqrt x) - 1 + (ln_beta (sqrt x) - 1))%Z by ring.",
            "VernacExtend",
            "387e514f43c916b536e1dad1cc424855e9c600f5"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "assert (H : (bpow (ln_beta (sqrt x) - 1) <= Rabs (sqrt x))%R).",
            "VernacExtend",
            "4398d37aa191116f606a4fed26b014da21ca66ca"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (ln_beta (sqrt x)) as (esx,Hesx); simpl.",
            "VernacExtend",
            "d58de215aaa0e8cf2d274dd57dbab6c08640755c"
        ],
        [
            "apply Hesx.",
            "VernacExtend",
            "d0879a436089954d092334ae54944b54c38564ea"
        ],
        [
            "apply Rgt_not_eq; apply Rlt_gt.",
            "VernacExtend",
            "218c4de1a9d649db1b7581749b1b6db041e78771"
        ],
        [
            "now apply sqrt_lt_R0.",
            "VernacExtend",
            "c6e1277262c6aaa8acb574d7d75e10953268faa4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "now apply Rmult_le_compat; [now apply bpow_ge_0|now apply bpow_ge_0| |].",
            "VernacExtend",
            "08c9d68983fb34658012914326711ae0a613c8a7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- (sqrt_def x) at 1; [|now apply Rlt_le].",
            "VernacExtend",
            "ffa78e8fed7aa5b9748251a83f044f7538cf1d4f"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "change 2%Z with (1 + 1)%Z; rewrite Zmult_plus_distr_l; rewrite Zmult_1_l.",
            "VernacExtend",
            "97ec10ee6db8798b4c1d7e3dff8c8b4d85907e2e"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "assert (H : (Rabs (sqrt x) < bpow (ln_beta (sqrt x)))%R).",
            "VernacExtend",
            "59b734665644506380d7a06ea887dc6bee420d6d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (ln_beta (sqrt x)) as (esx,Hesx); simpl.",
            "VernacExtend",
            "d58de215aaa0e8cf2d274dd57dbab6c08640755c"
        ],
        [
            "apply Hesx.",
            "VernacExtend",
            "d0879a436089954d092334ae54944b54c38564ea"
        ],
        [
            "apply Rgt_not_eq; apply Rlt_gt.",
            "VernacExtend",
            "218c4de1a9d649db1b7581749b1b6db041e78771"
        ],
        [
            "now apply sqrt_lt_R0.",
            "VernacExtend",
            "c6e1277262c6aaa8acb574d7d75e10953268faa4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "now apply Rmult_lt_compat; [now apply Rabs_pos|now apply Rabs_pos| |].",
            "VernacExtend",
            "8e0f65365b9f67c4d3ba2ac4618b68682174699c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply ln_beta_ge_bpow.",
            "VernacExtend",
            "dc02341e098ea505fc4c9ae962090df870773108"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply ln_beta_le_bpow; [now apply Rgt_not_eq|].",
            "VernacExtend",
            "48cdacb13db1a468e1a113908f026aa9411b69be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End pow.",
            "VernacEndSegment",
            "45be359e5633d7be00d210792f56334ad6521f6d"
        ],
        [
            "Section Bool.",
            "VernacBeginSection",
            "30d08a8aa562decad2bc4a46de0445edb78e5d03"
        ],
        [
            "Theorem eqb_sym : forall x y, Bool.eqb x y = Bool.eqb y x.",
            "VernacStartTheoremProof",
            "42900109f5cf943039014358f34536153d5e2f6d"
        ],
        [
            "now intros [|] [|].",
            "VernacExtend",
            "87845541878844681cabb1c007663720e9a44a84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqb_false : forall x y, x = negb y -> Bool.eqb x y = false.",
            "VernacStartTheoremProof",
            "92efa19723db3fe158cafb3d9ccabdb3ccb39621"
        ],
        [
            "now intros [|] [|].",
            "VernacExtend",
            "87845541878844681cabb1c007663720e9a44a84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqb_true : forall x y, x = y -> Bool.eqb x y = true.",
            "VernacStartTheoremProof",
            "376272dbe5f5e47762f5cfad1a35cba8c9ab5dbe"
        ],
        [
            "now intros [|] [|].",
            "VernacExtend",
            "87845541878844681cabb1c007663720e9a44a84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Bool.",
            "VernacEndSegment",
            "682fcf871c551a6f7d64a5406eb2401429023849"
        ],
        [
            "Section cond_Ropp.",
            "VernacBeginSection",
            "b261b692d8f068f9fd9b6e79939a5c3daf21701d"
        ],
        [
            "Definition cond_Ropp (b : bool) m := if b then Ropp m else m.",
            "VernacDefinition",
            "4e96daa6bf3485198f369b6eb60ba150639a9f6e"
        ],
        [
            "Theorem Z2R_cond_Zopp : forall b m, Z2R (cond_Zopp b m) = cond_Ropp b (Z2R m).",
            "VernacStartTheoremProof",
            "f19e554bbd26eae9ee20056eed570a493de3b99c"
        ],
        [
            "intros [|] m.",
            "VernacExtend",
            "e2980d2679a2a59fd801d8d6771d754d302938c4"
        ],
        [
            "apply Z2R_opp.",
            "VernacExtend",
            "9d58b082913d70c5bfc6b276400d01332d38dc06"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem abs_cond_Ropp : forall b m, Rabs (cond_Ropp b m) = Rabs m.",
            "VernacStartTheoremProof",
            "ebc35fc5479da5c13695dea2467b20102887920c"
        ],
        [
            "intros [|] m.",
            "VernacExtend",
            "e2980d2679a2a59fd801d8d6771d754d302938c4"
        ],
        [
            "apply Rabs_Ropp.",
            "VernacExtend",
            "6bc565d85ad2fe81334b09fc92c2be9594263780"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cond_Ropp_Rlt_bool : forall m, cond_Ropp (Rlt_bool m 0) m = Rabs m.",
            "VernacStartTheoremProof",
            "c880a2114cba67691586f4d8b7d59edb163d640f"
        ],
        [
            "intros m.",
            "VernacExtend",
            "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "case Rlt_bool_spec ; intros Hm.",
            "VernacExtend",
            "831ba4df3f5785e6a14179ff9b5787db6ee50b44"
        ],
        [
            "now apply Rabs_left.",
            "VernacExtend",
            "ed592c98d139ffc1c04d688a1c75c6c3400500c6"
        ],
        [
            "now apply Rabs_pos_eq.",
            "VernacExtend",
            "75396bee7c94a0ff0662d73d206e806e73cbff2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cond_Ropp_involutive : forall b x, cond_Ropp b (cond_Ropp b x) = x.",
            "VernacStartTheoremProof",
            "fea062c1e3538ce8b55500700a124c5e4e62d29a"
        ],
        [
            "intros [|] x.",
            "VernacExtend",
            "b72a2b9dc63ffabd9ffe42421d24df9db5657d1b"
        ],
        [
            "apply Ropp_involutive.",
            "VernacExtend",
            "5693ee789e165349a2c109e8f1a16d4ccb445cfd"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cond_Ropp_even_function : forall {A : Type} (f : R -> A), (forall x, f (Ropp x) = f x) -> forall b x, f (cond_Ropp b x) = f x.",
            "VernacStartTheoremProof",
            "969b625ed546230a9ec677cc5aa2da604df8727b"
        ],
        [
            "now intros A f Hf [|] x ; simpl.",
            "VernacExtend",
            "da8eaa74903f55b06540dab659ea0c3272479992"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cond_Ropp_odd_function : forall (f : R -> R), (forall x, f (Ropp x) = Ropp (f x)) -> forall b x, f (cond_Ropp b x) = cond_Ropp b (f x).",
            "VernacStartTheoremProof",
            "dfd1c02f34d1140a31098f3e328d945ceb65ea48"
        ],
        [
            "now intros f Hf [|] x ; simpl.",
            "VernacExtend",
            "6d905e5c76aa2da01f52ff1b958b3da94384ded2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cond_Ropp_inj : forall b x y, cond_Ropp b x = cond_Ropp b y -> x = y.",
            "VernacStartTheoremProof",
            "998e5059bc426ce2e0fa6486a8789b6afe3616d3"
        ],
        [
            "intros b x y H.",
            "VernacExtend",
            "f38aba1a2b9de037efd9b2e518d79fa6f2528815"
        ],
        [
            "rewrite <- (cond_Ropp_involutive b x), H.",
            "VernacExtend",
            "fd551f3e16d626ba9b500e24cc10e5bd72243607"
        ],
        [
            "apply cond_Ropp_involutive.",
            "VernacExtend",
            "9f2110fa2d13d61cabb51018f5b8abf099794d1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cond_Ropp_mult_l : forall b x y, cond_Ropp b (x * y) = (cond_Ropp b x * y)%R.",
            "VernacStartTheoremProof",
            "c5221c5c59dc18008cafec0b213a02d0ffba025f"
        ],
        [
            "intros [|] x y.",
            "VernacExtend",
            "04e1196d9b87c7b85f3cb50f8e3eab6f79f2e819"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "b3ed1ce3d3f87ce3f2410a5fa4d005618296854b"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cond_Ropp_mult_r : forall b x y, cond_Ropp b (x * y) = (x * cond_Ropp b y)%R.",
            "VernacStartTheoremProof",
            "d1cc5769b94e300f3af840274f4c4eb9b06745b0"
        ],
        [
            "intros [|] x y.",
            "VernacExtend",
            "04e1196d9b87c7b85f3cb50f8e3eab6f79f2e819"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Ropp_mult_distr_r_reverse.",
            "VernacExtend",
            "74547dfc2eb0ea2ca9675fb2f67ceac79b9dd82a"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cond_Ropp_plus : forall b x y, cond_Ropp b (x + y) = (cond_Ropp b x + cond_Ropp b y)%R.",
            "VernacStartTheoremProof",
            "ef2639eea40ab811c90a989ff5106277c84fa5c8"
        ],
        [
            "intros [|] x y.",
            "VernacExtend",
            "04e1196d9b87c7b85f3cb50f8e3eab6f79f2e819"
        ],
        [
            "apply Ropp_plus_distr.",
            "VernacExtend",
            "26dd71b82d3d01bc851941f6e688770ccbe73dc0"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End cond_Ropp.",
            "VernacEndSegment",
            "f04fc62177dfb6f463033531ecb006dbbd59764c"
        ],
        [
            "Theorem LPO_min : forall P : nat -> Prop, (forall n, P n \\/ ~ P n) -> {n : nat | P n /\\ forall i, (i < n)%nat -> ~ P i} + {forall n, ~ P n}.",
            "VernacStartTheoremProof",
            "161ae43261db170e8c592155a6ef912b9c38a5e0"
        ],
        [
            "assert (Hi: forall n, (0 < INR n + 1)%R).",
            "VernacExtend",
            "23d798d13633667212d5e40c61421b9ff5a8f539"
        ],
        [
            "intros N.",
            "VernacExtend",
            "118d8cc76afed992d416336eb00759d8eee4e0b4"
        ],
        [
            "rewrite <- S_INR.",
            "VernacExtend",
            "53f7c415e88fc85f922716a557382cfb3dfd8f58"
        ],
        [
            "apply lt_0_INR.",
            "VernacExtend",
            "e7fcaf0e487ae293c1722f1effce446b7c83b651"
        ],
        [
            "apply lt_0_Sn.",
            "VernacExtend",
            "3b7fc375f7db460b98008b419d236f8a4eb151b4"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "set (E y := exists n, (P n /\\ y = / (INR n + 1))%R \\/ (~ P n /\\ y = 0)%R).",
            "VernacExtend",
            "c089d6f762a427a8ae1e574bcffe6ce54beaad3f"
        ],
        [
            "assert (HE: forall n, P n -> E (/ (INR n + 1))%R).",
            "VernacExtend",
            "2b62745a8379e9d93cf880cb835dfbe656e60a80"
        ],
        [
            "intros n Pn.",
            "VernacExtend",
            "4fa758e51102278220fe547b363df053c3e4e5cd"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "assert (BE: is_upper_bound E 1).",
            "VernacExtend",
            "f72a1a7fb64a5b64b881ca45b8144bebdf98af42"
        ],
        [
            "intros x [y [[_ ->]|[_ ->]]].",
            "VernacExtend",
            "affb9d2db34aa315b500110561b5a7bfdd2c9c84"
        ],
        [
            "rewrite <- Rinv_1 at 2.",
            "VernacExtend",
            "c4b5170a2b6b036e63a03990c3cc3d876d107562"
        ],
        [
            "apply Rinv_le.",
            "VernacExtend",
            "df9ed9c0ff0a06fae52364d762a5f467e1897f8b"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "rewrite <- S_INR.",
            "VernacExtend",
            "53f7c415e88fc85f922716a557382cfb3dfd8f58"
        ],
        [
            "apply (le_INR 1), le_n_S, le_0_n.",
            "VernacExtend",
            "f9293b0a4245a7eeb768bf1ca8b02d96e6a20c31"
        ],
        [
            "exact Rle_0_1.",
            "VernacExtend",
            "b3648bb2650e1660cdb0f039145a15b164adab62"
        ],
        [
            "destruct (completeness E) as [l [ub lub]].",
            "VernacExtend",
            "a4a865b3f1a9cd12d41a8fa285cc954606da57ba"
        ],
        [
            "now exists 1%R.",
            "VernacExtend",
            "02d2df65582eea04d618463c4b941aa085a0a85d"
        ],
        [
            "destruct (HP O) as [H0|H0].",
            "VernacExtend",
            "bdcffe433a7242e12d8a5e5ee7d05f1085e7f070"
        ],
        [
            "exists 1%R.",
            "VernacExtend",
            "c7da2fa494524f500fafcdd929c065e9cdf05743"
        ],
        [
            "exists O.",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply (conj H0).",
            "VernacExtend",
            "9be8b87e8ad973fb0bd3ae2c925bd575c7dfdd5a"
        ],
        [
            "rewrite Rplus_0_l.",
            "VernacExtend",
            "b29625dd91809e03948728f9a3f640ec69c648c0"
        ],
        [
            "apply sym_eq, Rinv_1.",
            "VernacExtend",
            "b02a21ac167aa95d319796524d747d14b83507ab"
        ],
        [
            "exists 0%R.",
            "VernacExtend",
            "4946311e79d7b67f6666353bbdee019ff680f9fb"
        ],
        [
            "exists O.",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "destruct (Rle_lt_dec l 0) as [Hl|Hl].",
            "VernacExtend",
            "a3183049a88fc13fb0911436e3cc2cfcd115ae3b"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros n Pn.",
            "VernacExtend",
            "4fa758e51102278220fe547b363df053c3e4e5cd"
        ],
        [
            "apply Rle_not_lt with (1 := Hl).",
            "VernacExtend",
            "a36928a66a3280a81fce9840559157bec866f38a"
        ],
        [
            "apply Rlt_le_trans with (/ (INR n + 1))%R.",
            "VernacExtend",
            "92a29f6ac0c85faf612a960404984025cdb88470"
        ],
        [
            "now apply Rinv_0_lt_compat.",
            "VernacExtend",
            "58509a7b472652bb7aef39a9b6811672d04772c5"
        ],
        [
            "apply ub.",
            "VernacExtend",
            "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
        ],
        [
            "now apply HE.",
            "VernacExtend",
            "b1fa97aae25a011c47242c807ac0ef256b458408"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "set (N := Zabs_nat (up (/l) - 2)).",
            "VernacExtend",
            "31dedd115aeae09b8a70f97539924560d987b230"
        ],
        [
            "exists N.",
            "VernacExtend",
            "3a77aef7937b4644ae655ca246f76b7aa0d197df"
        ],
        [
            "assert (HN: (INR N + 1 = IZR (up (/ l)) - 1)%R).",
            "VernacExtend",
            "eae2e2ae0a2976096fbbba94918244dc1b75c2a4"
        ],
        [
            "unfold N.",
            "VernacExtend",
            "e84969bf3a012f2b02bd8ab89f79f6e0b53e6b71"
        ],
        [
            "rewrite INR_IZR_INZ.",
            "VernacExtend",
            "8058c7a6913f85d26af3a54acc61c387d0a04933"
        ],
        [
            "rewrite inj_Zabs_nat.",
            "VernacExtend",
            "5b77e77f19e43475666c2b5b886817c5b3ee1ad7"
        ],
        [
            "replace (IZR (up (/ l)) - 1)%R with (IZR (up (/ l) - 2) + 1)%R.",
            "VernacExtend",
            "afe9a14d67f41cc7507765671ad063347ac5a535"
        ],
        [
            "apply (f_equal (fun v => IZR v + 1)%R).",
            "VernacExtend",
            "cacfb50576af70c915696b3bbef5137bdfae16da"
        ],
        [
            "apply Zabs_eq.",
            "VernacExtend",
            "49010e3d49d17807661610454bf633de5de373d9"
        ],
        [
            "apply Zle_minus_le_0.",
            "VernacExtend",
            "17de0fc9b8b61e8a1285ec4f7cd279f58ff9d877"
        ],
        [
            "apply (Zlt_le_succ 1).",
            "VernacExtend",
            "68eb7e7d3a3af8168683154cf7a790fcbcd062d3"
        ],
        [
            "apply lt_IZR.",
            "VernacExtend",
            "165b941162ea1938aa71e78f57835b8df85de779"
        ],
        [
            "apply Rle_lt_trans with (/l)%R.",
            "VernacExtend",
            "6ffba27e9cf8d9cdc9f737c828aef3b2d307856a"
        ],
        [
            "apply Rmult_le_reg_r with (1 := Hl).",
            "VernacExtend",
            "221716667b2cb2cc78c31874fdfae06a649bc78a"
        ],
        [
            "rewrite Rmult_1_l, Rinv_l by now apply Rgt_not_eq.",
            "VernacExtend",
            "d73e378846ae44cb4cded4640ba57fd218cd1dde"
        ],
        [
            "apply lub.",
            "VernacExtend",
            "bb3836d35738c90e04ae26708ff1e21fadb7f463"
        ],
        [
            "exact BE.",
            "VernacExtend",
            "8e18d00b2018ea77fca25c869dcbb3f8f98a028b"
        ],
        [
            "apply archimed.",
            "VernacExtend",
            "168f59ccb8dfdb15cb785ccbb9ff2ca9a9ba15b8"
        ],
        [
            "rewrite minus_IZR.",
            "VernacExtend",
            "bf2e9167c2e10c7574eae6aa52f1250be91192aa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (H: forall i, (i < N)%nat -> ~ P i).",
            "VernacExtend",
            "b4a5015303e971cb12925fae33f7eb8c7c489e62"
        ],
        [
            "intros i HiN Pi.",
            "VernacExtend",
            "9734e317f9a5e6ca0020f1155a8e20b43525fb29"
        ],
        [
            "unfold is_upper_bound in ub.",
            "VernacExtend",
            "64e9ca98fc65c4d0b8c5bb76a7947d189e190680"
        ],
        [
            "refine (Rle_not_lt _ _ (ub (/ (INR i + 1))%R _) _).",
            "VernacExtend",
            "ea37516fe917c4453702c4caedba0ebe52f75fd3"
        ],
        [
            "now apply HE.",
            "VernacExtend",
            "b1fa97aae25a011c47242c807ac0ef256b458408"
        ],
        [
            "rewrite <- (Rinv_involutive l) by now apply Rgt_not_eq.",
            "VernacExtend",
            "f0de72f37a712631b9ef3a504b354412d4141f9b"
        ],
        [
            "apply Rinv_1_lt_contravar.",
            "VernacExtend",
            "1b1b2a85feb422cd8c3dc8f95693109857cefaa3"
        ],
        [
            "rewrite <- S_INR.",
            "VernacExtend",
            "53f7c415e88fc85f922716a557382cfb3dfd8f58"
        ],
        [
            "apply (le_INR 1).",
            "VernacExtend",
            "e26720834bbf4113378065f9b1d50b19321d8135"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_0_n.",
            "VernacExtend",
            "a40896a167507cd2cbfab4bf2df8f96a4477cab9"
        ],
        [
            "apply Rlt_le_trans with (INR N + 1)%R.",
            "VernacExtend",
            "4188926f0a31ffb6beb325263609ecb8ba75f2ea"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "now apply lt_INR.",
            "VernacExtend",
            "80443daece0e8d4a5a163db066172a3f2fac201a"
        ],
        [
            "rewrite HN.",
            "VernacExtend",
            "ee539cbb621d104bd5a824ae8614d0ea5e45f11a"
        ],
        [
            "apply Rplus_le_reg_r with (-/l + 1)%R.",
            "VernacExtend",
            "48d55b459cf6e9a3c74a77bf03a1eab10b39c35b"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply archimed.",
            "VernacExtend",
            "168f59ccb8dfdb15cb785ccbb9ff2ca9a9ba15b8"
        ],
        [
            "destruct (HP N) as [PN|PN].",
            "VernacExtend",
            "71c4b3947b425fa2771a6fc2779254caed295716"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "refine (Rle_not_lt _ _ (lub (/ (INR (S N) + 1))%R _) _).",
            "VernacExtend",
            "637bda5f1b1434bf87d5091c7c27593874112ae5"
        ],
        [
            "intros x [y [[Py ->]|[_ ->]]].",
            "VernacExtend",
            "da365c73cca2a1c72f3f181231adc398f1c22435"
        ],
        [
            "destruct (eq_nat_dec y N) as [HyN|HyN].",
            "VernacExtend",
            "6da18ecc7f91087f9c6359360cbef99af12cb09c"
        ],
        [
            "elim PN.",
            "VernacExtend",
            "ddb91e447b43d61b4f6e6c67d07d5be84f783404"
        ],
        [
            "now rewrite <- HyN.",
            "VernacExtend",
            "e656a70d34049ac886281e01e105c919596219db"
        ],
        [
            "apply Rinv_le.",
            "VernacExtend",
            "df9ed9c0ff0a06fae52364d762a5f467e1897f8b"
        ],
        [
            "apply Hi.",
            "VernacExtend",
            "b7959f73b24cea8febda147e5d8d404627f1652f"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "intros Hy.",
            "VernacExtend",
            "dde1f3a11f7e3e65a050aa4d13dc38c854979033"
        ],
        [
            "refine (H _ _ Py).",
            "VernacExtend",
            "23779327047695c0df179ee8d64cf4e813fe9a9a"
        ],
        [
            "apply INR_lt in Hy.",
            "VernacExtend",
            "1816cacf3a7ad735e2a653a9df5922e08193a290"
        ],
        [
            "clear -Hy HyN.",
            "VernacExtend",
            "7d0d318cd88b599748f94fa85114aab521a8b0e1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "now apply Rlt_le, Rinv_0_lt_compat.",
            "VernacExtend",
            "d56a3aab3989da48d160dcfc2962e243a6c1f327"
        ],
        [
            "rewrite S_INR, HN.",
            "VernacExtend",
            "d5b2e54a9e58b5641bfa1c532b5f939b502d18fb"
        ],
        [
            "ring_simplify (IZR (up (/ l)) - 1 + 1)%R.",
            "VernacExtend",
            "fc2dbe907ed2f2d32334f9a96e55be069d5db3ff"
        ],
        [
            "rewrite <- (Rinv_involutive l) at 2 by now apply Rgt_not_eq.",
            "VernacExtend",
            "5e84a03837ed420cb5544b7e01a4bf5441abbeb1"
        ],
        [
            "apply Rinv_1_lt_contravar.",
            "VernacExtend",
            "1b1b2a85feb422cd8c3dc8f95693109857cefaa3"
        ],
        [
            "rewrite <- Rinv_1.",
            "VernacExtend",
            "25f4271863b63e7960d69c1c8df426f168da59be"
        ],
        [
            "apply Rinv_le.",
            "VernacExtend",
            "df9ed9c0ff0a06fae52364d762a5f467e1897f8b"
        ],
        [
            "exact Hl.",
            "VernacExtend",
            "726a6911ca781f5fae08f27dbd5c9838368eca79"
        ],
        [
            "now apply lub.",
            "VernacExtend",
            "2282627626cc3bdc8e8af4a12638be9f5244c07e"
        ],
        [
            "apply archimed.",
            "VernacExtend",
            "168f59ccb8dfdb15cb785ccbb9ff2ca9a9ba15b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem LPO : forall P : nat -> Prop, (forall n, P n \\/ ~ P n) -> {n : nat | P n} + {forall n, ~ P n}.",
            "VernacStartTheoremProof",
            "8570264e8382e1f135531217970ae8c08e2faf68"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "destruct (LPO_min P HP) as [[n [Pn _]]|Pn].",
            "VernacExtend",
            "cc445d744b13351d39cee5edd676bf5bd9726ad3"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now exists n.",
            "VernacExtend",
            "42d718ad51c566098409e9121294b6d4b019afc1"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LPO_Z : forall P : Z -> Prop, (forall n, P n \\/ ~P n) -> {n : Z| P n} + {forall n, ~ P n}.",
            "VernacStartTheoremProof",
            "b4e685c3776c539596973316fa217f494636acd9"
        ],
        [
            "intros P H.",
            "VernacExtend",
            "a464008aad1d3476c9d3e5773e092885602945e4"
        ],
        [
            "destruct (LPO (fun n => P (Z.of_nat n))) as [J|J].",
            "VernacExtend",
            "5a77cb6c2d1de4a07f1b558fbc922f064a7605b3"
        ],
        [
            "intros n; apply H.",
            "VernacExtend",
            "4abe107f1edf449e302483fc286e92c0a86e97c3"
        ],
        [
            "destruct J as (n, Hn).",
            "VernacExtend",
            "3c62243dc8e43f44083900a2def46146fdc175ca"
        ],
        [
            "left; now exists (Z.of_nat n).",
            "VernacExtend",
            "67d527877ad309ed596702d5dff78b8fcb6ee35e"
        ],
        [
            "destruct (LPO (fun n => P (-Z.of_nat n)%Z)) as [K|K].",
            "VernacExtend",
            "dd18bd948010911bdba59541d42816baecda9642"
        ],
        [
            "intros n; apply H.",
            "VernacExtend",
            "4abe107f1edf449e302483fc286e92c0a86e97c3"
        ],
        [
            "destruct K as (n, Hn).",
            "VernacExtend",
            "7d8d516f7e69b429f581815166a1a020eee364f8"
        ],
        [
            "left; now exists (-Z.of_nat n)%Z.",
            "VernacExtend",
            "18487236589d8c12156c7b1a4c46a720eea2f050"
        ],
        [
            "right; intros n; case (Zle_or_lt 0 n); intros M.",
            "VernacExtend",
            "04f8c54a323ad47e2422aa688c41ac4accd790ac"
        ],
        [
            "rewrite <- (Zabs_eq n); trivial.",
            "VernacExtend",
            "ee815a2c9e05b989c2f67a0cbc984616f34219ce"
        ],
        [
            "rewrite <- Zabs2Nat.id_abs.",
            "VernacExtend",
            "43e898f1f5004677c621b44d2b65cf20be33268b"
        ],
        [
            "apply J.",
            "VernacExtend",
            "66921d22fed6050793d8b9f80c9a56408ba407e2"
        ],
        [
            "rewrite <- (Zopp_involutive n).",
            "VernacExtend",
            "99bb7c8f15622db89e0e33e795c0c69ea4e59a7a"
        ],
        [
            "rewrite <- (Z.abs_neq n).",
            "VernacExtend",
            "585487e11d65e8bb28c7aa83599999460cee7356"
        ],
        [
            "rewrite <- Zabs2Nat.id_abs.",
            "VernacExtend",
            "43e898f1f5004677c621b44d2b65cf20be33268b"
        ],
        [
            "apply K.",
            "VernacExtend",
            "d5d9c42e6396f4fdf954b554b0ab1c21c112b876"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac bpow_simplify := repeat match goal with | |- context [(bpow _ _ * bpow _ _)] => rewrite <- bpow_plus | |- context [(?X1 * bpow _ _ * bpow _ _)] => rewrite (Rmult_assoc X1); rewrite <- bpow_plus | |- context [(?X1 * (?X2 * bpow _ _) * bpow _ _)] => rewrite <- (Rmult_assoc X1 X2); rewrite (Rmult_assoc (X1 * X2)); rewrite <- bpow_plus end; repeat match goal with | |- context [(bpow _ ?X)] => progress ring_simplify X end; change (bpow _ 0) with 1; repeat match goal with | |- context [(_ * 1)] => rewrite Rmult_1_r end.",
            "VernacExtend",
            "d64b5eeb0dbb3bac3cd8ce99226fd6dd5055a9a0"
        ]
    ],
    "proofs": [
        {
            "name": "Rle_0_minus",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rge_le.",
                        "VernacExtend",
                        "eae8ed3f063c0c64fc52ba03563e73be950936a6"
                    ]
                },
                {
                    "command": [
                        "apply Rge_minus.",
                        "VernacExtend",
                        "a4511845a3392e6b50fa37e8429010098a62df7d"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_ge.",
                        "VernacExtend",
                        "cfaaed0928a5913dd1c0a45d2536af0f1ea04705"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_eq_Rabs",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs in H.",
                        "VernacExtend",
                        "4412519e8e61187bf26ab028718bac5ef23219d8"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs x) as [_|_].",
                        "VernacExtend",
                        "1f46103d60118efbc9868ae75c17c103408068be"
                    ]
                },
                {
                    "command": [
                        "assert (H' := f_equal Ropp H).",
                        "VernacExtend",
                        "57ef2d6abab2ffe3d89de53e10975f2e169c94e5"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive in H'.",
                        "VernacExtend",
                        "fb49a4b235034cfb63ab3d95f3fa681c01653265"
                    ]
                },
                {
                    "command": [
                        "rewrite H'.",
                        "VernacExtend",
                        "232d4714354910d49fdbf1140eac1d26da075d17"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs y) as [_|_].",
                        "VernacExtend",
                        "95735143ac221302036e8375ad9cfa6b8fc4c32a"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_involutive.",
                        "VernacExtend",
                        "5693ee789e165349a2c109e8f1a16d4ccb445cfd"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "now destruct (Rcase_abs y) as [_|_] ; [right|left].",
                        "VernacExtend",
                        "8596a612c38da99e0a758195d6a34bf44c1cf57b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_minus_le",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros x y Hx Hy.",
                        "VernacExtend",
                        "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs; case (Rcase_abs (x - y)); intros H.",
                        "VernacExtend",
                        "39fa52f79b7d00f4b07e6dc229d5950fde5d375d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with x; ring_simplify; assumption.",
                        "VernacExtend",
                        "dbb50110094bcca074ee18e9f756dac1b0b97dbe"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (-x)%R; ring_simplify.",
                        "VernacExtend",
                        "000d1170eedb8ddd88a57d020ac73ba5fa7e03e0"
                    ]
                },
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rplus_eq_reg_r",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros r r1 r2 H.",
                        "VernacExtend",
                        "7d69b4a5c41c5fd894131fecf3224173010b0c0e"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_reg_l with r.",
                        "VernacExtend",
                        "8a1e4989327befc80e70872c28cbfcd35ad49a11"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!(Rplus_comm r).",
                        "VernacExtend",
                        "c98a82163595e3644c2dd82ca175b5300ea36490"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rplus_lt_reg_l",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "solve [ apply Rplus_lt_reg_l with (1 := H) | apply Rplus_lt_reg_r with (1 := H) ].",
                        "VernacExtend",
                        "618011807c907df4769a41e61eef94faf2ab2ffa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rplus_lt_reg_r",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with r.",
                        "VernacExtend",
                        "b2859e4c3aa97868bb5077a7cbe3aa127a1b83ed"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!(Rplus_comm r).",
                        "VernacExtend",
                        "c98a82163595e3644c2dd82ca175b5300ea36490"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rplus_le_reg_r",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with r.",
                        "VernacExtend",
                        "eafcb9776db331932c962a2902d48f04cb211745"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!(Rplus_comm r).",
                        "VernacExtend",
                        "c98a82163595e3644c2dd82ca175b5300ea36490"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_lt_reg_r",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with r.",
                        "VernacExtend",
                        "951b260ea75ec0e209bdf66ef5030fdc54071be5"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!(Rmult_comm r).",
                        "VernacExtend",
                        "557bf21287e064822cbaab9ac6fdbacad2aa49c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_le_reg_r",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_l with r.",
                        "VernacExtend",
                        "69bdcde7296fea42c305ec364175b946a42b4148"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!(Rmult_comm r).",
                        "VernacExtend",
                        "557bf21287e064822cbaab9ac6fdbacad2aa49c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_lt_compat",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros r1 r2 r3 r4 Pr1 Pr3 H12 H34.",
                        "VernacExtend",
                        "df63838156608b8fc8a09fa2337409512ae87d58"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (r1 * r4)%R.",
                        "VernacExtend",
                        "83577b785bf3d78cffb3f72c909fce8bba7bf2cf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact Pr1.",
                        "VernacExtend",
                        "3eb1a9701b963fb533eb12fd973faad8c0d0971e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "e041593c57ec6470673cc705c01d215d230e0676"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_lt_trans with r3.",
                        "VernacExtend",
                        "e8af61dcb6385cd15224cb2e0fe184e58e6ccb04"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact H12.",
                        "VernacExtend",
                        "b9348fdc21b7bcee6cb44dcec4cedd2c158efd73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_eq_reg_r",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros r r1 r2 H1 H2.",
                        "VernacExtend",
                        "248a501618e63722000384d6d7e286cf5ef20292"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_reg_l with r.",
                        "VernacExtend",
                        "2e9c0ec8c00678b1d33a0cb26d627b7d81a38919"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!(Rmult_comm r).",
                        "VernacExtend",
                        "557bf21287e064822cbaab9ac6fdbacad2aa49c5"
                    ]
                },
                {
                    "command": [
                        "exact H2.",
                        "VernacExtend",
                        "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_minus_distr_r",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros r r1 r2.",
                        "VernacExtend",
                        "252ef0d5658be505901d0cd7aa950bafb354cc5f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 3!(Rmult_comm r).",
                        "VernacExtend",
                        "8844f996084b134a1e21c0b3a3a8957265c5acfd"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_minus_distr_l.",
                        "VernacExtend",
                        "3686ed9fff6bd2ca29f1b13c28d4f683aaa4b945"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_neq_reg_r",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros r1 r2 r3 H1 H2.",
                        "VernacExtend",
                        "7992f70ee4f536fc5511bf5eb8d3d2b575d82a07"
                    ]
                },
                {
                    "command": [
                        "apply H1; rewrite H2; ring.",
                        "VernacExtend",
                        "49a9394ddf4a24119584113853ef563a7e0c823f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_neq_compat_r",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros r1 r2 r3 H H1 H2.",
                        "VernacExtend",
                        "723c95d75c23e44991caafaf10cebb9230687a39"
                    ]
                },
                {
                    "command": [
                        "now apply H1, Rmult_eq_reg_r with r1.",
                        "VernacExtend",
                        "2539204087b1d5cf1d7f5401e6a35a8ef4e741b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_min_distr_r",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros r r1 r2 [Hr|Hr].",
                        "VernacExtend",
                        "7143917cfdbafd3ed577614e23b89e3dae409c98"
                    ]
                },
                {
                    "command": [
                        "unfold Rmin.",
                        "VernacExtend",
                        "ec4de2dbd1c783154b87decb3c93990283dcef6b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_dec r1 r2) as [H1|H1] ; destruct (Rle_dec (r1 * r) (r2 * r)) as [H2|H2] ; try easy.",
                        "VernacExtend",
                        "fd754ea3ddbf5869b8be112c605bbe775f69c93d"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun x => Rmult x r)).",
                        "VernacExtend",
                        "8a78580996684cdb7850fd4bc2665c697ffd4538"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym.",
                        "VernacExtend",
                        "8e9431fb6db6f151160007e68131f4f5cb1c7968"
                    ]
                },
                {
                    "command": [
                        "exact H1.",
                        "VernacExtend",
                        "c03ab82d1e411e1dcd211c59917a4946e039be00"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_r with (1 := Hr).",
                        "VernacExtend",
                        "3e109a7ba703df2da101360d3161db034ebe0c03"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "now apply Rnot_le_lt.",
                        "VernacExtend",
                        "472d95d86d32de5f65bdb99059686dfbade9f294"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym.",
                        "VernacExtend",
                        "8e9431fb6db6f151160007e68131f4f5cb1c7968"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "now apply Rnot_le_lt.",
                        "VernacExtend",
                        "472d95d86d32de5f65bdb99059686dfbade9f294"
                    ]
                },
                {
                    "command": [
                        "exact H2.",
                        "VernacExtend",
                        "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hr.",
                        "VernacExtend",
                        "2f6bc99e9b1c75ed1711fcaabf67f634d72e5a37"
                    ]
                },
                {
                    "command": [
                        "rewrite 3!Rmult_0_r.",
                        "VernacExtend",
                        "ddf2ee157433882ea46d3efd9edca4a5732d545f"
                    ]
                },
                {
                    "command": [
                        "unfold Rmin.",
                        "VernacExtend",
                        "ec4de2dbd1c783154b87decb3c93990283dcef6b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_dec 0 0) as [H0|H0].",
                        "VernacExtend",
                        "145cbf3c3409e84348ff69481bc107ede0b2375a"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_min_distr_l",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros r r1 r2 Hr.",
                        "VernacExtend",
                        "d8343279711521089d8863d4679b07f2d9b025c2"
                    ]
                },
                {
                    "command": [
                        "rewrite 3!(Rmult_comm r).",
                        "VernacExtend",
                        "6933f70934afa1ce738115ade2bdf0bbefc32dca"
                    ]
                },
                {
                    "command": [
                        "now apply Rmult_min_distr_r.",
                        "VernacExtend",
                        "8b65af81b16653f2761a377478934b2908e12d50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_opp",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "apply Rmax_case_strong; intros H.",
                        "VernacExtend",
                        "e14bc0bbd56612d7a80b646e975d2e08154b9003"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmin_left; trivial.",
                        "VernacExtend",
                        "3ea763a178b68b8e8d0101e9cb23afcf8a690109"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmin_right; trivial.",
                        "VernacExtend",
                        "66372d75ab5e2f3141a4f097859e0bde261205f7"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_opp",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "apply Rmin_case_strong; intros H.",
                        "VernacExtend",
                        "93fb2bd112427cb2754262e41dd424158f9f0ffe"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmax_left; trivial.",
                        "VernacExtend",
                        "8a68f8f86033635c553d166d15d910b63813875d"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmax_right; trivial.",
                        "VernacExtend",
                        "163bcf42a5f7777b6bcdf12d7e692945be8c61a0"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp_le",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "intros x y [H|H].",
                        "VernacExtend",
                        "4315d3976cbb4dc1e5aa5788996a1917036adb34"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "now apply exp_increasing.",
                        "VernacExtend",
                        "39e46376b7a9f77b5c8ffc8211425092b5bc112f"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rinv_lt",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "intros x y Hx Hxy.",
                        "VernacExtend",
                        "e2fa962759626d3d2c242c0e1b9e884dd173573f"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_lt_contravar.",
                        "VernacExtend",
                        "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_trans with x.",
                        "VernacExtend",
                        "50cb1795c493c89ad4458298a2db20c67fa2bc3a"
                    ]
                },
                {
                    "command": [
                        "exact Hxy.",
                        "VernacExtend",
                        "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rinv_le",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "intros x y Hx Hxy.",
                        "VernacExtend",
                        "e2fa962759626d3d2c242c0e1b9e884dd173573f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_Rinv.",
                        "VernacExtend",
                        "1c2230e335301795a7c124c6298eabc78161766e"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le_trans with x.",
                        "VernacExtend",
                        "834462f3b6aebf2dfb26dbef0bb0f4b93df468d0"
                    ]
                },
                {
                    "command": [
                        "exact Hxy.",
                        "VernacExtend",
                        "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_ge_0",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt.",
                        "VernacExtend",
                        "71ef64092f0003bcdade22760b25585d0190003b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs x) as [_|H].",
                        "VernacExtend",
                        "258f36b4961901de3739fe4c9a213a2f048a433e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply Rsqrt_positivity.",
                        "VernacExtend",
                        "c089a16cf41c581e86d723b7996d69567c3bf3f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_neg",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "intros x Npx.",
                        "VernacExtend",
                        "76b8a502ca3ef411810120154de6c1cc4dca3fe8"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec x 0) as [Zx|Nzx].",
                        "VernacExtend",
                        "a9fd0c25b4dba2604ee89352bda5eb8b54702c72"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zx.",
                        "VernacExtend",
                        "581c5d76fc2e01443ebc6c7c2af3efff071cc08e"
                    ]
                },
                {
                    "command": [
                        "exact sqrt_0.",
                        "VernacExtend",
                        "a98b160232fb59556fc15457ffff5446b45c6389"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt.",
                        "VernacExtend",
                        "71ef64092f0003bcdade22760b25585d0190003b"
                    ]
                },
                {
                    "command": [
                        "destruct Rcase_abs.",
                        "VernacExtend",
                        "a0a91093170f5b4cf321ee15e7351f7e2c63322b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "casetype False.",
                        "VernacExtend",
                        "d301d3603984ec3bb04cdfbf39cf968367f9e414"
                    ]
                },
                {
                    "command": [
                        "now apply Nzx, Rle_antisym; [|apply Rge_le].",
                        "VernacExtend",
                        "43e92d8577b51b556f7a38dba97c2b96bc4a82f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_le",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "intros x y (Hyx,Hxy).",
                        "VernacExtend",
                        "45656ab73b8541d758b9ef2ecfeea15b0419df30"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs.",
                        "VernacExtend",
                        "32b62f5465b04c4380fa7a8bf154e157fb296719"
                    ]
                },
                {
                    "command": [
                        "case Rcase_abs ; intros Hx.",
                        "VernacExtend",
                        "c8aa219ad299811e7d712de3e13738c0cff0714e"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_cancel.",
                        "VernacExtend",
                        "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive.",
                        "VernacExtend",
                        "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
                    ]
                },
                {
                    "command": [
                        "exact Hxy.",
                        "VernacExtend",
                        "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_le_inv",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (- Rabs x)%R.",
                        "VernacExtend",
                        "eb09ea54da70ad3c896655b4b1405b8cef1be8a8"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_cancel.",
                        "VernacExtend",
                        "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive, <- Rabs_Ropp.",
                        "VernacExtend",
                        "bb7aaa680e04c3e86b186d451ed2c9b617e98566"
                    ]
                },
                {
                    "command": [
                        "apply RRle_abs.",
                        "VernacExtend",
                        "1333b00626244e19099bec7e0de632062c4070a3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Hxy).",
                        "VernacExtend",
                        "10741e2cd960be8243d43e987f87abd2fd3bf2b0"
                    ]
                },
                {
                    "command": [
                        "apply RRle_abs.",
                        "VernacExtend",
                        "1333b00626244e19099bec7e0de632062c4070a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_ge",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "intros x y [Hyx|Hxy].",
                        "VernacExtend",
                        "8f67753e27922b413f98ee4b69cdbca562fe0e86"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (-y)%R.",
                        "VernacExtend",
                        "a3701a8e5e1a3efca79b8d63459761e315dd48d6"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_cancel.",
                        "VernacExtend",
                        "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive.",
                        "VernacExtend",
                        "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Ropp.",
                        "VernacExtend",
                        "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
                    ]
                },
                {
                    "command": [
                        "apply RRle_abs.",
                        "VernacExtend",
                        "1333b00626244e19099bec7e0de632062c4070a3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := Hxy).",
                        "VernacExtend",
                        "15320367548a991b5ea122fc234978ee63198cbd"
                    ]
                },
                {
                    "command": [
                        "apply RRle_abs.",
                        "VernacExtend",
                        "1333b00626244e19099bec7e0de632062c4070a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_ge_inv",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs.",
                        "VernacExtend",
                        "32b62f5465b04c4380fa7a8bf154e157fb296719"
                    ]
                },
                {
                    "command": [
                        "case Rcase_abs ; intros Hy Hxy.",
                        "VernacExtend",
                        "ab6a37b5995a385867c08394143aeeed3de92bb5"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_cancel.",
                        "VernacExtend",
                        "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive.",
                        "VernacExtend",
                        "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_lt",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "intros x y (Hyx,Hxy).",
                        "VernacExtend",
                        "45656ab73b8541d758b9ef2ecfeea15b0419df30"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_def1.",
                        "VernacExtend",
                        "76c03d503eef0a52118850d89e6867745239d04f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_lt_inv",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "now split ; eapply Rabs_def2.",
                        "VernacExtend",
                        "7996800e66ff59bbb2ec9143bbf5573ab64acf90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_gt",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "intros x y [Hyx|Hxy].",
                        "VernacExtend",
                        "8f67753e27922b413f98ee4b69cdbca562fe0e86"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Ropp.",
                        "VernacExtend",
                        "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (Ropp y).",
                        "VernacExtend",
                        "3fc13839abe1049eeaf1dbaef2175ae93bf621d9"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive.",
                        "VernacExtend",
                        "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
                    ]
                },
                {
                    "command": [
                        "apply RRle_abs.",
                        "VernacExtend",
                        "1333b00626244e19099bec7e0de632062c4070a3"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hxy).",
                        "VernacExtend",
                        "7885421736bc16f2fa5827401945d11c5e3e96b2"
                    ]
                },
                {
                    "command": [
                        "apply RRle_abs.",
                        "VernacExtend",
                        "1333b00626244e19099bec7e0de632062c4070a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_gt_inv",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs.",
                        "VernacExtend",
                        "32b62f5465b04c4380fa7a8bf154e157fb296719"
                    ]
                },
                {
                    "command": [
                        "case Rcase_abs ; intros Hy Hxy.",
                        "VernacExtend",
                        "ab6a37b5995a385867c08394143aeeed3de92bb5"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive.",
                        "VernacExtend",
                        "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "P2R_INR",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "induction n ; simpl ; try ( rewrite IHn ; rewrite <- (mult_INR 2) ; rewrite <- (nat_of_P_mult_morphism 2) ; change (2 * n)%positive with (xO n)).",
                        "VernacExtend",
                        "48be7124dbd3a1499d9baed16222280da816755a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm 1).",
                        "VernacExtend",
                        "2acb5f3fac74a8b15590703f6ba42174b5c1731b"
                    ]
                },
                {
                    "command": [
                        "change (nat_of_P (xO n)) with (Pmult_nat n 2).",
                        "VernacExtend",
                        "d35774211ce4d3f41fb6ca05d3307caf0f50e517"
                    ]
                },
                {
                    "command": [
                        "case n ; intros ; simpl ; try apply refl_equal.",
                        "VernacExtend",
                        "0edfc1d63768512bfd9fd066372f50447572ff00"
                    ]
                },
                {
                    "command": [
                        "case (Pmult_nat p 4) ; intros ; try apply refl_equal.",
                        "VernacExtend",
                        "4c08dbba0fff7025ecee849ca36542052a110804"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_l.",
                        "VernacExtend",
                        "b29625dd91809e03948728f9a3f640ec69c648c0"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_comm.",
                        "VernacExtend",
                        "0a47c60f716db020ba314277a62e5fbde1f9f84a"
                    ]
                },
                {
                    "command": [
                        "case n ; intros ; apply refl_equal.",
                        "VernacExtend",
                        "9e70c58c0d8add4ba3c6ce6dd7b01def1733f210"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_IZR",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "case n ; intros ; unfold Z2R.",
                        "VernacExtend",
                        "ae248e81ded7871bdb4347c8d24de8fb4fd38ba0"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "rewrite <- positive_nat_Z, <- INR_IZR_INZ.",
                        "VernacExtend",
                        "3c3ffa9242e39ecfb7bef16e2c2eb774af4e9dbe"
                    ]
                },
                {
                    "command": [
                        "apply P2R_INR.",
                        "VernacExtend",
                        "4e92eaf532685e0bc0ae96ad05fb2536a67bf2f3"
                    ]
                },
                {
                    "command": [
                        "change (IZR (Zneg p)) with (Ropp (IZR (Zpos p))).",
                        "VernacExtend",
                        "244db61e4ba058e678d53a729fe0ccdc1f61a16c"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_eq_compat.",
                        "VernacExtend",
                        "0a7e593df75dda4a02ea72003a8c07176275c9fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- positive_nat_Z, <- INR_IZR_INZ.",
                        "VernacExtend",
                        "3c3ffa9242e39ecfb7bef16e2c2eb774af4e9dbe"
                    ]
                },
                {
                    "command": [
                        "apply P2R_INR.",
                        "VernacExtend",
                        "4e92eaf532685e0bc0ae96ad05fb2536a67bf2f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_opp",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_Ropp_IZR.",
                        "VernacExtend",
                        "7a6a05bf6dcd3407cbd8d9dce3a8dfcb12f36efa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_plus",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "apply plus_IZR.",
                        "VernacExtend",
                        "f72078b0fe17047bbe2de76cd6699c810e9d3c64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_IZR",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Zminus.",
                        "VernacExtend",
                        "7085d4231409167767072da1bd24eb73ce98a683"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_IZR.",
                        "VernacExtend",
                        "a71980692bd855cfdb80782b4f734eba75fada3d"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_Ropp_IZR.",
                        "VernacExtend",
                        "95ba4cc75f2b6b788ec3f7616d9b618a0d3cd184"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_minus",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "apply minus_IZR.",
                        "VernacExtend",
                        "33f8580b5dd8ab052a011d51055ae197f990d426"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_mult",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "apply mult_IZR.",
                        "VernacExtend",
                        "c1306c4ea8316d1e4ab3962490fb9ff6f684c3be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_Z2R",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "intros m n.",
                        "VernacExtend",
                        "18665e11771a439415aeac3f0ced42360e32c961"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "apply le_IZR.",
                        "VernacExtend",
                        "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_le",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "intros m n.",
                        "VernacExtend",
                        "18665e11771a439415aeac3f0ced42360e32c961"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "apply IZR_le.",
                        "VernacExtend",
                        "ef1f47861efcb38cc5e3fd5c85d7a11ba68e740b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_Z2R",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "intros m n.",
                        "VernacExtend",
                        "18665e11771a439415aeac3f0ced42360e32c961"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "apply lt_IZR.",
                        "VernacExtend",
                        "165b941162ea1938aa71e78f57835b8df85de779"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_lt",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "intros m n.",
                        "VernacExtend",
                        "18665e11771a439415aeac3f0ced42360e32c961"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "apply IZR_lt.",
                        "VernacExtend",
                        "7646b2e1f3ff9fb171267b1427f74069601108a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_le_lt",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "intros m n p (H1, H2).",
                        "VernacExtend",
                        "7b4695e7938b477f5217eefd152975e5137bfae6"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply Z2R_le.",
                        "VernacExtend",
                        "58bf5ef017302bba0024780a49c5a9a8c382820b"
                    ]
                },
                {
                    "command": [
                        "now apply Z2R_lt.",
                        "VernacExtend",
                        "7f5609ab9fcfd964c22b3efe7eaeac75e6c9173c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_lt_Z2R",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "intros m n p (H1, H2).",
                        "VernacExtend",
                        "7b4695e7938b477f5217eefd152975e5137bfae6"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply le_Z2R.",
                        "VernacExtend",
                        "63ab87ade823c3b74e0aa8dc3bb93ac707016a0b"
                    ]
                },
                {
                    "command": [
                        "now apply lt_Z2R.",
                        "VernacExtend",
                        "3d3441902d83a0a528dc90dc22a0d622c1a89905"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_Z2R",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "intros m n H.",
                        "VernacExtend",
                        "284eaf42bc214a5a61616eb19b0aa015fc738ee1"
                    ]
                },
                {
                    "command": [
                        "apply eq_IZR.",
                        "VernacExtend",
                        "ee733026f3770ec7d35ae5daace776ee1795288b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- 2!Z2R_IZR.",
                        "VernacExtend",
                        "68742c553438ad5b2a504797a4006ff613978844"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neq_Z2R",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "intros m n H H'.",
                        "VernacExtend",
                        "82b6da7aa236157aa7ed483ec5ef26c38067a3f2"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal.",
                        "VernacExtend",
                        "2be51066ac0713afbd2686f67010448cf5cd7ac9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_neq",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "intros m n.",
                        "VernacExtend",
                        "18665e11771a439415aeac3f0ced42360e32c961"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "apply IZR_neq.",
                        "VernacExtend",
                        "106565452f16b875fdd447816762b188be25253f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_abs",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2e4ffac79156cd3284f913f25a83026c20f92852"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rabs_Zabs.",
                        "VernacExtend",
                        "c1076e788f01640c2fb958e22e51a97a7b10f19e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_spec",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Rcompare.",
                        "VernacExtend",
                        "3a58d342dfaf9f110a323da93ed3a1bcd4a459c5"
                    ]
                },
                {
                    "command": [
                        "now destruct (total_order_T x y) as [[H|H]|H] ; constructor.",
                        "VernacExtend",
                        "109aee70bdd7429f110120bb690fefbfee10abfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_Lt",
            "line_nb": 367,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; intro H'.",
                        "VernacExtend",
                        "d9c9538277e3a2f514cf8e893458abce1f2c5836"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "rewrite H' in H.",
                        "VernacExtend",
                        "15b945a781d83326e1b7ae2f3071e5a9299b1807"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl _ H).",
                        "VernacExtend",
                        "1dc31525bcfe340e9db5cc966b8e45387b451db0"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl x).",
                        "VernacExtend",
                        "d4eccc23e2233d6fdc218756096e1787f4431970"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_trans with y.",
                        "VernacExtend",
                        "cb6ff0e8680a6316a6c3863846f6c1ad08949ee9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_Lt_inv",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "now case Rcompare_spec.",
                        "VernacExtend",
                        "1c9865b5916da0a43781a4b1987af1f22f1ebaa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_not_Lt",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2.",
                        "VernacExtend",
                        "f5d2be11205259f336118ce80c78eee53322b79d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := H1).",
                        "VernacExtend",
                        "4a8780839c1cbdf082be71baf6785a4932743231"
                    ]
                },
                {
                    "command": [
                        "now apply Rcompare_Lt_inv.",
                        "VernacExtend",
                        "4d92207a8b0340b76fbd44535cb55c9fae223554"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_not_Lt_inv",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le.",
                        "VernacExtend",
                        "3c60597e841405b7d257d92c4717e01515b21555"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "now apply Rcompare_Lt.",
                        "VernacExtend",
                        "8ed06a1913c52ff18ad6a9e96f7f0239edd6a637"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_Eq",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "now case Rcompare_spec ; intro H' ; try elim (Rlt_irrefl _ H').",
                        "VernacExtend",
                        "4bdff4c9bb46326841234abf52a349538b547568"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_Eq_inv",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "now case Rcompare_spec.",
                        "VernacExtend",
                        "1c9865b5916da0a43781a4b1987af1f22f1ebaa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_Gt",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; intro H'.",
                        "VernacExtend",
                        "d9c9538277e3a2f514cf8e893458abce1f2c5836"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl x).",
                        "VernacExtend",
                        "d4eccc23e2233d6fdc218756096e1787f4431970"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_trans with y.",
                        "VernacExtend",
                        "cb6ff0e8680a6316a6c3863846f6c1ad08949ee9"
                    ]
                },
                {
                    "command": [
                        "rewrite H' in H.",
                        "VernacExtend",
                        "15b945a781d83326e1b7ae2f3071e5a9299b1807"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl _ H).",
                        "VernacExtend",
                        "1dc31525bcfe340e9db5cc966b8e45387b451db0"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_Gt_inv",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "now case Rcompare_spec.",
                        "VernacExtend",
                        "1c9865b5916da0a43781a4b1987af1f22f1ebaa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_not_Gt",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2.",
                        "VernacExtend",
                        "f5d2be11205259f336118ce80c78eee53322b79d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := H1).",
                        "VernacExtend",
                        "4a8780839c1cbdf082be71baf6785a4932743231"
                    ]
                },
                {
                    "command": [
                        "now apply Rcompare_Gt_inv.",
                        "VernacExtend",
                        "534171be1075132d292793cab8f1b660621e603b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_not_Gt_inv",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le.",
                        "VernacExtend",
                        "3c60597e841405b7d257d92c4717e01515b21555"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "now apply Rcompare_Gt.",
                        "VernacExtend",
                        "68f090264ab30c44b2d7cf1487d7cca374d66bfb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_Z2R",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; intros H ; apply sym_eq.",
                        "VernacExtend",
                        "163516c24305a36d639e9d3537e08bc180f417ad"
                    ]
                },
                {
                    "command": [
                        "apply Zcompare_Lt.",
                        "VernacExtend",
                        "c0c7e80571797185c85465ffa0cf835e65b0761a"
                    ]
                },
                {
                    "command": [
                        "now apply lt_Z2R.",
                        "VernacExtend",
                        "3d3441902d83a0a528dc90dc22a0d622c1a89905"
                    ]
                },
                {
                    "command": [
                        "apply Zcompare_Eq.",
                        "VernacExtend",
                        "64ca9dcf9da2b14a518a3de2247a459dc55c9042"
                    ]
                },
                {
                    "command": [
                        "now apply eq_Z2R.",
                        "VernacExtend",
                        "0e5dcd3516cda1789fe17433b8e73b3d21fea7d6"
                    ]
                },
                {
                    "command": [
                        "apply Zcompare_Gt.",
                        "VernacExtend",
                        "c7a3d95d3f7fee73087f55795f34fd8971e9f463"
                    ]
                },
                {
                    "command": [
                        "now apply lt_Z2R.",
                        "VernacExtend",
                        "3d3441902d83a0a528dc90dc22a0d622c1a89905"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_sym",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcompare_spec y x) as [H|H|H].",
                        "VernacExtend",
                        "7f399a868ea0353c1ecf88d79a1e273c7c51b3dd"
                    ]
                },
                {
                    "command": [
                        "now apply Rcompare_Gt.",
                        "VernacExtend",
                        "68f090264ab30c44b2d7cf1487d7cca374d66bfb"
                    ]
                },
                {
                    "command": [
                        "now apply Rcompare_Eq.",
                        "VernacExtend",
                        "54a2cc66495312859e168ad5f6904ba269f3ac6f"
                    ]
                },
                {
                    "command": [
                        "now apply Rcompare_Lt.",
                        "VernacExtend",
                        "8ed06a1913c52ff18ad6a9e96f7f0239edd6a637"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_plus_r",
            "line_nb": 441,
            "steps": [
                {
                    "command": [
                        "intros z x y.",
                        "VernacExtend",
                        "a887e21d77701e1128be4b476ff9dc9cfe9cd3fa"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcompare_spec x y) as [H|H|H].",
                        "VernacExtend",
                        "6910eb4d0d875a5e301a1cdda5e498bd91cab0ad"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt.",
                        "VernacExtend",
                        "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "82b8517a91b5d6c493ed71301bfa528feeb74c47"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Eq.",
                        "VernacExtend",
                        "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Gt.",
                        "VernacExtend",
                        "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "82b8517a91b5d6c493ed71301bfa528feeb74c47"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_plus_l",
            "line_nb": 451,
            "steps": [
                {
                    "command": [
                        "intros z x y.",
                        "VernacExtend",
                        "a887e21d77701e1128be4b476ff9dc9cfe9cd3fa"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!(Rplus_comm z).",
                        "VernacExtend",
                        "15578212c065a7c4fe662f2a245bd69af3ca1b05"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_plus_r.",
                        "VernacExtend",
                        "70a8e1deeaa9d9530334aa75c4fbf70475cf74d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_mult_r",
            "line_nb": 456,
            "steps": [
                {
                    "command": [
                        "intros z x y Hz.",
                        "VernacExtend",
                        "a9c41ac989f7d4a309cb41a11eab96147dbc11bd"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcompare_spec x y) as [H|H|H].",
                        "VernacExtend",
                        "6910eb4d0d875a5e301a1cdda5e498bd91cab0ad"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt.",
                        "VernacExtend",
                        "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
                    ]
                },
                {
                    "command": [
                        "now apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "4453db6cea943776585898a2266890c705eb57f1"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Eq.",
                        "VernacExtend",
                        "df3dde93e8c1f7bba7c3fd607d9298611dad9ad9"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Gt.",
                        "VernacExtend",
                        "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
                    ]
                },
                {
                    "command": [
                        "now apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "4453db6cea943776585898a2266890c705eb57f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_mult_l",
            "line_nb": 466,
            "steps": [
                {
                    "command": [
                        "intros z x y.",
                        "VernacExtend",
                        "a887e21d77701e1128be4b476ff9dc9cfe9cd3fa"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!(Rmult_comm z).",
                        "VernacExtend",
                        "a208b1f0f561945bfff749219ff490dd82a38548"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_mult_r.",
                        "VernacExtend",
                        "ed7a2d6497bb2deb9977555ebb6639a6960fe3d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_middle",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "intros x d u.",
                        "VernacExtend",
                        "e8398f178d3b8ae218c807a9b32301e56bc16665"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rcompare_plus_r (- x / 2 - d / 2) x).",
                        "VernacExtend",
                        "386db40253ab1d9e142a227508ac49c0b7bed033"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rcompare_mult_r (/2) (x - d)).",
                        "VernacExtend",
                        "11646c7669065d9cb8bef2c6b602343b2daffc7e"
                    ]
                },
                {
                    "command": [
                        "field_simplify (x + (- x / 2 - d / 2))%R.",
                        "VernacExtend",
                        "fef37734c3fd3d465ec17093fd8133b22120689c"
                    ]
                },
                {
                    "command": [
                        "now field_simplify ((d + u) / 2 + (- x / 2 - d / 2))%R.",
                        "VernacExtend",
                        "5ff1cc8b35090767e714095505d3d868a5a60d4c"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_half_r",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rcompare_mult_r 2%R).",
                        "VernacExtend",
                        "bf56b3c3ea1a1c2c944276cec2d3dc78aa3dc5d6"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, Rinv_l, Rmult_1_r.",
                        "VernacExtend",
                        "f4535f4e34bfdaf905ff90df2b6c3da69dac4a1d"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmult_comm.",
                        "VernacExtend",
                        "a4f3186520e8cf5ca72c1ad762f68ac9c7824f80"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_neq 2 0).",
                        "VernacExtend",
                        "7accb9117efd03422c9fbc08a8a7d502161c79c2"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0 2).",
                        "VernacExtend",
                        "d115cb8bbe9692198c1512828eb7171baa80bc9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare_sqr",
            "line_nb": 498,
            "steps": [
                {
                    "command": [
                        "intros x y Hx Hy.",
                        "VernacExtend",
                        "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcompare_spec x y) as [H|H|H].",
                        "VernacExtend",
                        "6910eb4d0d875a5e301a1cdda5e498bd91cab0ad"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Lt.",
                        "VernacExtend",
                        "944cc1b9e653b5b2b4d937dba9a041d7ed09a266"
                    ]
                },
                {
                    "command": [
                        "now apply Rsqr_incrst_1.",
                        "VernacExtend",
                        "6b22e155a472825e33b6558cd89d7a10a60c80fe"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "now apply Rcompare_Eq.",
                        "VernacExtend",
                        "54a2cc66495312859e168ad5f6904ba269f3ac6f"
                    ]
                },
                {
                    "command": [
                        "apply Rcompare_Gt.",
                        "VernacExtend",
                        "2a73148205a346dd0353cda3ab8e620b6ec6b30b"
                    ]
                },
                {
                    "command": [
                        "now apply Rsqr_incrst_1.",
                        "VernacExtend",
                        "6b22e155a472825e33b6558cd89d7a10a60c80fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_compare",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Rmin.",
                        "VernacExtend",
                        "ec4de2dbd1c783154b87decb3c93990283dcef6b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_dec x y) as [[Hx|Hx]|Hx].",
                        "VernacExtend",
                        "f5f9ef75c7912759c9d7d770c7591bb2cc61b016"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rcompare_Lt.",
                        "VernacExtend",
                        "3ef3e24027b987582ee12931a7c7ba307fa48129"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rcompare_Eq.",
                        "VernacExtend",
                        "748b4211c14883f452b0a50c01d3a09ed3c14aaf"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_Gt.",
                        "VernacExtend",
                        "6af5b764e76966598fea1215f8858ea8132ad3dd"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "now apply Rnot_le_lt.",
                        "VernacExtend",
                        "472d95d86d32de5f65bdb99059686dfbade9f294"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_bool_spec",
            "line_nb": 522,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Rle_bool.",
                        "VernacExtend",
                        "c9ba5e92183ba5c801ca36eb93f24678b8302f3a"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; constructor.",
                        "VernacExtend",
                        "793f70893f30eacecf21835e287ec9a98f440f67"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_bool_true",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "case Rle_bool_spec ; intros H.",
                        "VernacExtend",
                        "d73ea0cf28a2aa53642c06b2dffc8e1b295569b3"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl x).",
                        "VernacExtend",
                        "d4eccc23e2233d6fdc218756096e1787f4431970"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_lt_trans with y.",
                        "VernacExtend",
                        "8a130a9973b7e01eeedb965a4ce3bce6fffc5870"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_bool_false",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "case Rle_bool_spec ; intros H.",
                        "VernacExtend",
                        "d73ea0cf28a2aa53642c06b2dffc8e1b295569b3"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl x).",
                        "VernacExtend",
                        "d4eccc23e2233d6fdc218756096e1787f4431970"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_lt_trans with y.",
                        "VernacExtend",
                        "8a130a9973b7e01eeedb965a4ce3bce6fffc5870"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_bool_spec",
            "line_nb": 549,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Rlt_bool.",
                        "VernacExtend",
                        "e7a9406ccd04cd9656ceff7f3a4382a33f080003"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; constructor.",
                        "VernacExtend",
                        "793f70893f30eacecf21835e287ec9a98f440f67"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_Rlt_bool",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Rlt_bool, Rle_bool.",
                        "VernacExtend",
                        "d26ce66272290ae1d78d31e008ffe9e559936dca"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_sym.",
                        "VernacExtend",
                        "256d551cd946d2556ff5000ae0d62882322840d9"
                    ]
                },
                {
                    "command": [
                        "now case Rcompare.",
                        "VernacExtend",
                        "378dd566f6f8069e0c6b74247a7bcbd95dac48d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_Rle_bool",
            "line_nb": 564,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Rlt_bool, Rle_bool.",
                        "VernacExtend",
                        "d26ce66272290ae1d78d31e008ffe9e559936dca"
                    ]
                },
                {
                    "command": [
                        "rewrite Rcompare_sym.",
                        "VernacExtend",
                        "256d551cd946d2556ff5000ae0d62882322840d9"
                    ]
                },
                {
                    "command": [
                        "now case Rcompare.",
                        "VernacExtend",
                        "378dd566f6f8069e0c6b74247a7bcbd95dac48d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_bool_true",
            "line_nb": 570,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- negb_Rlt_bool.",
                        "VernacExtend",
                        "32b7d6b32d603be548419713b6733881a9a515e4"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rle_bool_false.",
                        "VernacExtend",
                        "c616d259faf363456e218eb3e9db9ced47d09930"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_bool_false",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- negb_Rlt_bool.",
                        "VernacExtend",
                        "32b7d6b32d603be548419713b6733881a9a515e4"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rle_bool_true.",
                        "VernacExtend",
                        "071e49710b0aa0c91a38f1ec717fb16f7b0c1436"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Req_bool_spec",
            "line_nb": 584,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Req_bool.",
                        "VernacExtend",
                        "d85d3251ee2acbf6044efc12b2d44872335d52ff"
                    ]
                },
                {
                    "command": [
                        "case Rcompare_spec ; constructor.",
                        "VernacExtend",
                        "793f70893f30eacecf21835e287ec9a98f440f67"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_not_eq.",
                        "VernacExtend",
                        "7c469637fc05542bf9c3c4fab85774b12e6b8f93"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Req_bool_true",
            "line_nb": 592,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "case Req_bool_spec ; intros H.",
                        "VernacExtend",
                        "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "exact Hxy.",
                        "VernacExtend",
                        "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Req_bool_false",
            "line_nb": 599,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "case Req_bool_spec ; intros H.",
                        "VernacExtend",
                        "243b00567aadcbc62f3bd19207ee6e9c90ef4210"
                    ]
                },
                {
                    "command": [
                        "contradict Hxy.",
                        "VernacExtend",
                        "23b4a28788fcc40bda1d239c3a390fd79ef10ef7"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zfloor_lb",
            "line_nb": 609,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold Zfloor.",
                        "VernacExtend",
                        "08e6473c8fa3ab0a69d6b3e5e71413de5dd36aa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_minus.",
                        "VernacExtend",
                        "75c0e17ece028e1c09696e50b0c135aa8a6471e2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2dd7eca0d3af78b3f7f06f4b8bcfe256a505fc83"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_r with (1 - x)%R.",
                        "VernacExtend",
                        "060cdc8aacf4d7fcccafbe7cebb3ffd7e24a58c1"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (archimed x)).",
                        "VernacExtend",
                        "f523cb92047fd9357348de2c5dc44658348aca2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zfloor_ub",
            "line_nb": 619,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold Zfloor.",
                        "VernacExtend",
                        "08e6473c8fa3ab0a69d6b3e5e71413de5dd36aa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_minus.",
                        "VernacExtend",
                        "75c0e17ece028e1c09696e50b0c135aa8a6471e2"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_assoc.",
                        "VernacExtend",
                        "f1bd9ff8db9debbc055c2d64a1c07c2da6dd8407"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_l, Rplus_0_r.",
                        "VernacExtend",
                        "d03461aa58b2527ffcb47a559a7ff15d8f476a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_IZR.",
                        "VernacExtend",
                        "2dd7eca0d3af78b3f7f06f4b8bcfe256a505fc83"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (archimed x)).",
                        "VernacExtend",
                        "3d6dbd97a5f120d710a3f43fb245a9e1a1ee3928"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zfloor_imp",
            "line_nb": 638,
            "steps": [
                {
                    "command": [
                        "intros n x Hnx.",
                        "VernacExtend",
                        "2656e8dc085bcc998088ec4b46a2162cbc370125"
                    ]
                },
                {
                    "command": [
                        "apply Zle_antisym.",
                        "VernacExtend",
                        "d5fb169d90b6dbda1fca926c28e78732e286a418"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_succ_le.",
                        "VernacExtend",
                        "c303523f868e2dd2771675d2de37d7328c4e957b"
                    ]
                },
                {
                    "command": [
                        "apply lt_Z2R.",
                        "VernacExtend",
                        "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := proj2 Hnx).",
                        "VernacExtend",
                        "fe4596b364e9ce0fc7b6939510ff34abb7eededd"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "now apply Zfloor_lub.",
                        "VernacExtend",
                        "21e49a9269b50da476743d3e833aac8408d14ed9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zfloor_Z2R",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_lt.",
                        "VernacExtend",
                        "20648688afbdacefe3b6070755cbe6f263ce5093"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_succ.",
                        "VernacExtend",
                        "f4cf5b932d8c774be510b7802fbeea627fe15261"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zfloor_le",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lub.",
                        "VernacExtend",
                        "2a3f8e59d303f192a648e4eef260195d5e8b9977"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Hxy).",
                        "VernacExtend",
                        "10741e2cd960be8243d43e987f87abd2fd3bf2b0"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zceil_ub",
            "line_nb": 662,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil.",
                        "VernacExtend",
                        "f8d0a58a84f92c1de4ab8daa30b020e932099600"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_opp.",
                        "VernacExtend",
                        "f3d51769485a2c167744d3d3fd4fffa672e5e611"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_cancel.",
                        "VernacExtend",
                        "b5845fa505cf45d1b1826b280ab3b8249238dd4d"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive.",
                        "VernacExtend",
                        "ba0ab440a50f656f08837503f0228b68c9acdf87"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zceil_glb",
            "line_nb": 670,
            "steps": [
                {
                    "command": [
                        "intros n x Hnx.",
                        "VernacExtend",
                        "2656e8dc085bcc998088ec4b46a2162cbc370125"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil.",
                        "VernacExtend",
                        "f8d0a58a84f92c1de4ab8daa30b020e932099600"
                    ]
                },
                {
                    "command": [
                        "apply Zopp_le_cancel.",
                        "VernacExtend",
                        "e3a890c698c83ebfe9cc00cbe005add0e6162e3a"
                    ]
                },
                {
                    "command": [
                        "rewrite Zopp_involutive.",
                        "VernacExtend",
                        "7b00d63dc772416460dc62c59515875a36dfefdb"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lub.",
                        "VernacExtend",
                        "2a3f8e59d303f192a648e4eef260195d5e8b9977"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_opp.",
                        "VernacExtend",
                        "f3d51769485a2c167744d3d3fd4fffa672e5e611"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zceil_imp",
            "line_nb": 679,
            "steps": [
                {
                    "command": [
                        "intros n x Hnx.",
                        "VernacExtend",
                        "2656e8dc085bcc998088ec4b46a2162cbc370125"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil.",
                        "VernacExtend",
                        "f8d0a58a84f92c1de4ab8daa30b020e932099600"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zopp_involutive n).",
                        "VernacExtend",
                        "99bb7c8f15622db89e0e33e795c0c69ea4e59a7a"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_opp.",
                        "VernacExtend",
                        "f3d51769485a2c167744d3d3fd4fffa672e5e611"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zopp_involutive 1).",
                        "VernacExtend",
                        "5f80b2d63a648617d56bf65ad53dae2e6ded7f10"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zopp_plus_distr.",
                        "VernacExtend",
                        "0f74890cd13001b6d46ea9010f4d3d762174db90"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_opp.",
                        "VernacExtend",
                        "f3d51769485a2c167744d3d3fd4fffa672e5e611"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "e78eb591f35b3721103af7436ff32e5846f47e1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zceil_Z2R",
            "line_nb": 693,
            "steps": [
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil.",
                        "VernacExtend",
                        "f8d0a58a84f92c1de4ab8daa30b020e932099600"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_opp, Zfloor_Z2R.",
                        "VernacExtend",
                        "e91dc0a6dfef8131d11b083b2edb2115a2f854c3"
                    ]
                },
                {
                    "command": [
                        "apply Zopp_involutive.",
                        "VernacExtend",
                        "2f15c35202593552fbfa9a55396b0e46c1c25da8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zceil_le",
            "line_nb": 699,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_glb.",
                        "VernacExtend",
                        "524f59be3c7aaf779be7bc5579e0b8cbb0c3a327"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := Hxy).",
                        "VernacExtend",
                        "15320367548a991b5ea122fc234978ee63198cbd"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_ub.",
                        "VernacExtend",
                        "31edc0840e36e6b04e75719515ba742855146abc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zceil_floor_neq",
            "line_nb": 705,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_imp.",
                        "VernacExtend",
                        "c9c91122777c8963f3fcab430c53aa15ef0b2dba"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "ring_simplify (Zfloor x + 1 - 1)%Z.",
                        "VernacExtend",
                        "27502fde3e928f166e3ba1d0f4fbb36f71e64b4b"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_le_lt.",
                        "VernacExtend",
                        "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Hx.",
                        "VernacExtend",
                        "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym.",
                        "VernacExtend",
                        "8e9431fb6db6f151160007e68131f4f5cb1c7968"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_ub.",
                        "VernacExtend",
                        "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztrunc_Z2R",
            "line_nb": 721,
            "steps": [
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "unfold Ztrunc.",
                        "VernacExtend",
                        "70f2f727e6735746b4eaaea98f3e25177304bf89"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro H.",
                        "VernacExtend",
                        "0967e199a65e31b0d8f2b8fb59c29802eb980903"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_Z2R.",
                        "VernacExtend",
                        "c8141d4497dc8abfa72f7f0897c24c389f131f72"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_Z2R.",
                        "VernacExtend",
                        "58df2bc8985dad2ec76c534580062785230749a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztrunc_floor",
            "line_nb": 728,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold Ztrunc.",
                        "VernacExtend",
                        "70f2f727e6735746b4eaaea98f3e25177304bf89"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro H.",
                        "VernacExtend",
                        "0967e199a65e31b0d8f2b8fb59c29802eb980903"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_irrefl with x.",
                        "VernacExtend",
                        "a5e5e499e66aa4da609d36825ce1ae4d01218c6d"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le_trans with R0.",
                        "VernacExtend",
                        "9762221e4da496d52ec8f7c1ecd21dee9b2058dc"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztrunc_ceil",
            "line_nb": 736,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold Ztrunc.",
                        "VernacExtend",
                        "70f2f727e6735746b4eaaea98f3e25177304bf89"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro H.",
                        "VernacExtend",
                        "0967e199a65e31b0d8f2b8fb59c29802eb980903"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rle_antisym _ _ Hx H).",
                        "VernacExtend",
                        "320ac8a8c7037bd723b6afa110311254bc13d7f7"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Zceil_Z2R.",
                        "VernacExtend",
                        "937fe61e5b6fa4ed55634c84df2f554c39edc46a"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_Z2R.",
                        "VernacExtend",
                        "58df2bc8985dad2ec76c534580062785230749a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztrunc_le",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "unfold Ztrunc at 1.",
                        "VernacExtend",
                        "54426ecb961e2b9e2de2a52848936e8c3e66b593"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro Hx.",
                        "VernacExtend",
                        "8691b8bdd2c59e4d9756a11009e38c5d43e65dcb"
                    ]
                },
                {
                    "command": [
                        "unfold Ztrunc.",
                        "VernacExtend",
                        "70f2f727e6735746b4eaaea98f3e25177304bf89"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro Hy.",
                        "VernacExtend",
                        "6e2d35e25e89ec1c138c2554c2569cb4c955daa1"
                    ]
                },
                {
                    "command": [
                        "now apply Zceil_le.",
                        "VernacExtend",
                        "1db17e1169b75b1250fd3c02d2b7732ff8884a19"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with 0%Z.",
                        "VernacExtend",
                        "7ad01c903906b6789535df1946514d9eb538fe58"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_glb.",
                        "VernacExtend",
                        "524f59be3c7aaf779be7bc5579e0b8cbb0c3a327"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "now apply Zfloor_lub.",
                        "VernacExtend",
                        "21e49a9269b50da476743d3e833aac8408d14ed9"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_floor.",
                        "VernacExtend",
                        "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
                    ]
                },
                {
                    "command": [
                        "now apply Zfloor_le.",
                        "VernacExtend",
                        "4cc0f3aa133838b48df9664cf5449b7231dcd8cd"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_trans with x.",
                        "VernacExtend",
                        "381907d0581fe6251ec6925f400def12cb378dd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztrunc_opp",
            "line_nb": 761,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold Ztrunc at 2.",
                        "VernacExtend",
                        "077e83a59f4d21e4e5668d6bea03c15188f10a94"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intros Hx.",
                        "VernacExtend",
                        "f2259357dbd63e5aade043e3d29403887b4214c2"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_floor.",
                        "VernacExtend",
                        "eacc44db66d8d93dfd78f0c8e448580e58066cdb"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply Zopp_involutive.",
                        "VernacExtend",
                        "2f15c35202593552fbfa9a55396b0e46c1c25da8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "rewrite Ztrunc_ceil.",
                        "VernacExtend",
                        "dd43b167e7750a71eebfb5ede0b3cae5dec4a648"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil.",
                        "VernacExtend",
                        "f8d0a58a84f92c1de4ab8daa30b020e932099600"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive.",
                        "VernacExtend",
                        "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zaway_Z2R",
            "line_nb": 802,
            "steps": [
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "unfold Zaway.",
                        "VernacExtend",
                        "482575e4bf21cd9670ede1f37d12a4656b4c9cdc"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro H.",
                        "VernacExtend",
                        "0967e199a65e31b0d8f2b8fb59c29802eb980903"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_Z2R.",
                        "VernacExtend",
                        "58df2bc8985dad2ec76c534580062785230749a3"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_Z2R.",
                        "VernacExtend",
                        "c8141d4497dc8abfa72f7f0897c24c389f131f72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zaway_ceil",
            "line_nb": 809,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold Zaway.",
                        "VernacExtend",
                        "482575e4bf21cd9670ede1f37d12a4656b4c9cdc"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro H.",
                        "VernacExtend",
                        "0967e199a65e31b0d8f2b8fb59c29802eb980903"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_irrefl with x.",
                        "VernacExtend",
                        "a5e5e499e66aa4da609d36825ce1ae4d01218c6d"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le_trans with R0.",
                        "VernacExtend",
                        "9762221e4da496d52ec8f7c1ecd21dee9b2058dc"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zaway_floor",
            "line_nb": 817,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold Zaway.",
                        "VernacExtend",
                        "482575e4bf21cd9670ede1f37d12a4656b4c9cdc"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro H.",
                        "VernacExtend",
                        "0967e199a65e31b0d8f2b8fb59c29802eb980903"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rle_antisym _ _ Hx H).",
                        "VernacExtend",
                        "320ac8a8c7037bd723b6afa110311254bc13d7f7"
                    ]
                },
                {
                    "command": [
                        "change 0%R with (Z2R 0).",
                        "VernacExtend",
                        "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Zfloor_Z2R.",
                        "VernacExtend",
                        "76c32ec848cfdb0ff47d7c42d76ad58c824310bd"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_Z2R.",
                        "VernacExtend",
                        "c8141d4497dc8abfa72f7f0897c24c389f131f72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zaway_le",
            "line_nb": 827,
            "steps": [
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "unfold Zaway at 1.",
                        "VernacExtend",
                        "8022f17826a6668daef67d634ce0a8ca76d5c450"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro Hx.",
                        "VernacExtend",
                        "8691b8bdd2c59e4d9756a11009e38c5d43e65dcb"
                    ]
                },
                {
                    "command": [
                        "unfold Zaway.",
                        "VernacExtend",
                        "482575e4bf21cd9670ede1f37d12a4656b4c9cdc"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro Hy.",
                        "VernacExtend",
                        "6e2d35e25e89ec1c138c2554c2569cb4c955daa1"
                    ]
                },
                {
                    "command": [
                        "now apply Zfloor_le.",
                        "VernacExtend",
                        "4cc0f3aa133838b48df9664cf5449b7231dcd8cd"
                    ]
                },
                {
                    "command": [
                        "apply le_Z2R.",
                        "VernacExtend",
                        "1945b4c25beb86c99a51fb31bc5e89da8f443292"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with 0%R.",
                        "VernacExtend",
                        "d5a3511c1567b70448a4157e0891ac043451db4d"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := Hx).",
                        "VernacExtend",
                        "6f4ed50de93b15e6078a10a54947a690658815ec"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := Hy).",
                        "VernacExtend",
                        "6bbf3f5f64572efb000d622a322675bfd7ee73a1"
                    ]
                },
                {
                    "command": [
                        "apply Zceil_ub.",
                        "VernacExtend",
                        "31edc0840e36e6b04e75719515ba742855146abc"
                    ]
                },
                {
                    "command": [
                        "rewrite Zaway_ceil.",
                        "VernacExtend",
                        "6a7d8754740c8b2ede913b81f0d3d7733ff28623"
                    ]
                },
                {
                    "command": [
                        "now apply Zceil_le.",
                        "VernacExtend",
                        "1db17e1169b75b1250fd3c02d2b7732ff8884a19"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_trans with x.",
                        "VernacExtend",
                        "381907d0581fe6251ec6925f400def12cb378dd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zaway_opp",
            "line_nb": 845,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold Zaway at 2.",
                        "VernacExtend",
                        "0e0f09366b54a1f5f5f22e0baa222c3ceb734a01"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intro H.",
                        "VernacExtend",
                        "0967e199a65e31b0d8f2b8fb59c29802eb980903"
                    ]
                },
                {
                    "command": [
                        "rewrite Zaway_ceil.",
                        "VernacExtend",
                        "6a7d8754740c8b2ede913b81f0d3d7733ff28623"
                    ]
                },
                {
                    "command": [
                        "unfold Zceil.",
                        "VernacExtend",
                        "f8d0a58a84f92c1de4ab8daa30b020e932099600"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive.",
                        "VernacExtend",
                        "42ddda074db05b6b1d1874b4fe3a510ba0168ea0"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_0_gt_lt_contravar.",
                        "VernacExtend",
                        "ecb98ecd6b09bc328efde571a05a97f968602afa"
                    ]
                },
                {
                    "command": [
                        "rewrite Zaway_floor.",
                        "VernacExtend",
                        "27d32bf8c2bf2a2822441d3d26d7f2504d0db4ae"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply Zopp_involutive.",
                        "VernacExtend",
                        "2f15c35202593552fbfa9a55396b0e46c1c25da8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c653793081f7835e5a68c7854f65c1b8e34ca3a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zfloor_div",
            "line_nb": 883,
            "steps": [
                {
                    "command": [
                        "intros x y Zy.",
                        "VernacExtend",
                        "8186b1ccfc2d6cf504785b9bf6c4e1967530c632"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_div_mod_eq_full x y Zy).",
                        "VernacExtend",
                        "2ecd06701a0b6513e094a3c64a5aab60caf44423"
                    ]
                },
                {
                    "command": [
                        "intros Hx.",
                        "VernacExtend",
                        "9276b72df3a882c9b4b954c90d9e870c80a906fc"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx at 1.",
                        "VernacExtend",
                        "c84906977d886bf0a1c4907e799669e9abfd90a4"
                    ]
                },
                {
                    "command": [
                        "assert (Zy': Z2R y <> R0).",
                        "VernacExtend",
                        "97c53df649c2d0ddadc02f327d35185f7c4990ed"
                    ]
                },
                {
                    "command": [
                        "contradict Zy.",
                        "VernacExtend",
                        "fa3835c44da7acb42f56ec436d29e52fcfd76545"
                    ]
                },
                {
                    "command": [
                        "now apply eq_Z2R.",
                        "VernacExtend",
                        "0e5dcd3516cda1789fe17433b8e73b3d21fea7d6"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus, Rmult_plus_distr_r, Z2R_mult.",
                        "VernacExtend",
                        "07c4e8691e065415d790ce33bf6c165a06bff289"
                    ]
                },
                {
                    "command": [
                        "replace (Z2R y * Z2R (x / y) * / Z2R y)%R with (Z2R (x / y)) by now field.",
                        "VernacExtend",
                        "d336207c8902e2b4e7ee02d6571e8c3ec242b07e"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_imp.",
                        "VernacExtend",
                        "9278ce7c32c530a2f8be72314e979fc619d4a028"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= Z2R (x mod y) * / Z2R y < 1)%R.",
                        "VernacExtend",
                        "25b368b73c8391faef4ab9a4165e0a3ee905a111"
                    ]
                },
                {
                    "command": [
                        "assert (forall x' y', (0 < y')%Z -> 0 <= Z2R (x' mod y') * / Z2R y' < 1)%R.",
                        "VernacExtend",
                        "c3ca23b4486afbc4666cac5d6966915662835833"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "intros x y Hy.",
                        "VernacExtend",
                        "9aceb5b83b96a49d50c37137afc3ee554735fdf3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_le 0).",
                        "VernacExtend",
                        "792cf72fd89e326cb413fb5d3012c5ce541d5b09"
                    ]
                },
                {
                    "command": [
                        "refine (proj1 (Z_mod_lt _ _ _)).",
                        "VernacExtend",
                        "75d5173ba78ad2c0af4b1201b6abe1572e46aa80"
                    ]
                },
                {
                    "command": [
                        "now apply Zlt_gt.",
                        "VernacExtend",
                        "8488e1d01e05a1ee4a4ec88c85ff6fb3be17805c"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0).",
                        "VernacExtend",
                        "5fe7a71c929f2db40ffef7572e6694713b2d3e81"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_r with (Z2R y).",
                        "VernacExtend",
                        "809d8627dbc81a73412b7c8504f4f81e747df071"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0).",
                        "VernacExtend",
                        "5fe7a71c929f2db40ffef7572e6694713b2d3e81"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l, Rmult_assoc, Rinv_l, Rmult_1_r.",
                        "VernacExtend",
                        "0e06e63c5ba635846d2464d0a27aff9490eb656c"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_lt.",
                        "VernacExtend",
                        "20648688afbdacefe3b6070755cbe6f263ce5093"
                    ]
                },
                {
                    "command": [
                        "eapply Z_mod_lt.",
                        "VernacExtend",
                        "b1010ebcf8dee908e48c8a878e8c12daca2f14cd"
                    ]
                },
                {
                    "command": [
                        "now apply Zlt_gt.",
                        "VernacExtend",
                        "8488e1d01e05a1ee4a4ec88c85ff6fb3be17805c"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq.",
                        "VernacExtend",
                        "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_lt 0).",
                        "VernacExtend",
                        "5fe7a71c929f2db40ffef7572e6694713b2d3e81"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_lt_le_dec y 0) as [Hy|Hy].",
                        "VernacExtend",
                        "448e6293e3b5a211f86d099c39b89bd6b67d7d13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_opp_opp.",
                        "VernacExtend",
                        "3208fa08f903b9c32b9cc0aa4d2889ffbe451a7d"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_inv_permute with (1 := Zy').",
                        "VernacExtend",
                        "2ecbea8d157ea2e5850f247865fbda66d660863d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2!Z2R_opp.",
                        "VernacExtend",
                        "ceb9f37875bd32c7a78cf92001110b9224ba87b0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zmod_opp_opp.",
                        "VernacExtend",
                        "9ac0ae0456dd14df748176b6f41926212b672aab"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "clear -Hy.",
                        "VernacExtend",
                        "ec6838dec774ad41e41defc852e56297f2e63a8a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "clear -Zy Hy.",
                        "VernacExtend",
                        "4309a306262bf8cf822a09d25a4969363d08cb87"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "pattern (Z2R (x / y)) at 1 ; rewrite <- Rplus_0_r.",
                        "VernacExtend",
                        "955ddb4b435d14ef1bb0684edb99537a103f980d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "radix_pos",
            "line_nb": 937,
            "steps": [
                {
                    "command": [
                        "destruct r as (v, Hr).",
                        "VernacExtend",
                        "8867a9ba407381c81969be4882d591731cd892fb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_lt 0).",
                        "VernacExtend",
                        "5d86f7673f53b2461aeeacbee1ca5bf7e694182e"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_trans with 2%Z.",
                        "VernacExtend",
                        "6a959dbb3de0361eabc3cd20a9c08cc82bd8a1ee"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "now apply Zle_bool_imp_le.",
                        "VernacExtend",
                        "58a939dc5b091786ac14b82b5f01868c4efb5e4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_Zpower_pos",
            "line_nb": 946,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zpower_pos_nat.",
                        "VernacExtend",
                        "5a2378a4e96e76124bc6c809e1a60a907b7a39a1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (nat_of_P m).",
                        "VernacExtend",
                        "62acdab45947979c4708a53e7d4a11b85f698aa7"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "unfold Zpower_nat.",
                        "VernacExtend",
                        "f110f189ce74234b42c265622b9a74bbcb7a71f4"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_mult.",
                        "VernacExtend",
                        "9df3e88fb03a8e1b32ba077432430323142e8b66"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_compat_l.",
                        "VernacExtend",
                        "bd73500ca5d8c6a128502627eccd82ae7c925a31"
                    ]
                },
                {
                    "command": [
                        "exact IHn0.",
                        "VernacExtend",
                        "6b9189c61ac18333370ed1d79e286ce9a8d260a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_powerRZ",
            "line_nb": 958,
            "steps": [
                {
                    "command": [
                        "destruct e ; unfold bpow.",
                        "VernacExtend",
                        "caabcb395aa0a0913404127892885a71786c8b70"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "now rewrite Z2R_Zpower_pos.",
                        "VernacExtend",
                        "2a0d0bece1c19060f5099c623b117b990048f54c"
                    ]
                },
                {
                    "command": [
                        "now rewrite Z2R_Zpower_pos.",
                        "VernacExtend",
                        "2a0d0bece1c19060f5099c623b117b990048f54c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_ge_0",
            "line_nb": 964,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_powerRZ.",
                        "VernacExtend",
                        "c6385d356a8e18f037aba25c804cc6540a8611ca"
                    ]
                },
                {
                    "command": [
                        "apply powerRZ_le.",
                        "VernacExtend",
                        "bd6878f59f74ff7d3f8d6a9eb815613f48c71127"
                    ]
                },
                {
                    "command": [
                        "apply radix_pos.",
                        "VernacExtend",
                        "0dcd1c467b6b40654e9649f327071230a0eb99a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_gt_0",
            "line_nb": 970,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_powerRZ.",
                        "VernacExtend",
                        "c6385d356a8e18f037aba25c804cc6540a8611ca"
                    ]
                },
                {
                    "command": [
                        "apply powerRZ_lt.",
                        "VernacExtend",
                        "08c53f17a499fe977ebaf03f2f7f1e7999c9ee57"
                    ]
                },
                {
                    "command": [
                        "apply radix_pos.",
                        "VernacExtend",
                        "0dcd1c467b6b40654e9649f327071230a0eb99a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_plus",
            "line_nb": 976,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite bpow_powerRZ.",
                        "VernacExtend",
                        "b43e3d4af6dec38ce27e8987fa86087648f2d1da"
                    ]
                },
                {
                    "command": [
                        "apply powerRZ_add.",
                        "VernacExtend",
                        "1573964ad19d14de858ee05f9bae684928827c3f"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq.",
                        "VernacExtend",
                        "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
                    ]
                },
                {
                    "command": [
                        "apply radix_pos.",
                        "VernacExtend",
                        "0dcd1c467b6b40654e9649f327071230a0eb99a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_1",
            "line_nb": 983,
            "steps": [
                {
                    "command": [
                        "unfold bpow, Zpower_pos.",
                        "VernacExtend",
                        "123fcda1267d6c435cbe966a917e02e4d3ab29e8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zmult_1_r.",
                        "VernacExtend",
                        "f6f70bbb1f374ceb32e4d41d5982648e20013849"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_plus1",
            "line_nb": 988,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_1.",
                        "VernacExtend",
                        "aa80866e631bf7ea158f86e10c0f7426b4205a4a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zplus_comm.",
                        "VernacExtend",
                        "48305027bb8637a247a0fd42693c7826faad618c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_opp",
            "line_nb": 994,
            "steps": [
                {
                    "command": [
                        "intros [|p|p].",
                        "VernacExtend",
                        "db48a191c2a3a54b8f7e7621c3e396af35857b61"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, Rinv_1.",
                        "VernacExtend",
                        "19e1c8176fd1126b20634a64b37c5eb98f96e64d"
                    ]
                },
                {
                    "command": [
                        "now change (-Zpos p)%Z with (Zneg p).",
                        "VernacExtend",
                        "de434a9a51baea4cac68db4f3c36c36596f7e37c"
                    ]
                },
                {
                    "command": [
                        "change (-Zneg p)%Z with (Zpos p).",
                        "VernacExtend",
                        "fc2dd62ec6a88321bdd33fa782997a07cd211e2a"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Rinv_involutive; trivial.",
                        "VernacExtend",
                        "3bb9ca03344038b4dae0f0ef83042d2def70a75d"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq.",
                        "VernacExtend",
                        "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
                    ]
                },
                {
                    "command": [
                        "apply (bpow_gt_0 (Zpos p)).",
                        "VernacExtend",
                        "75f5ab7f1425d30801b97647f4a2753828c1fa3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_Zpower_nat",
            "line_nb": 1003,
            "steps": [
                {
                    "command": [
                        "intros [|e].",
                        "VernacExtend",
                        "eb7e46876d94b6447d078561ed2f6e3b145477ba"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nat_of_P_o_P_of_succ_nat_eq_succ.",
                        "VernacExtend",
                        "a53cb1eb306908d0566610b9e79a2a13f34b1013"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zpower_pos_nat.",
                        "VernacExtend",
                        "23a60763820e55560ece16665271ab8ace5ab905"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Zpos_eq_Z_of_nat_o_nat_of_P.",
                        "VernacExtend",
                        "d45a90a5d2e627ef55a564b3430e75b171acb907"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_Zpower",
            "line_nb": 1010,
            "steps": [
                {
                    "command": [
                        "intros [|e|e] H.",
                        "VernacExtend",
                        "7e71d2dd77f021f3127ccdd8e8980d47260e7218"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now elim H.",
                        "VernacExtend",
                        "25b0f8af2fb84c276497977e57d3240d2a987e06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_lt",
            "line_nb": 1016,
            "steps": [
                {
                    "command": [
                        "intros e1 e2 H.",
                        "VernacExtend",
                        "802cafb2894f89c55adbd45ea4c6983d77b43dcb"
                    ]
                },
                {
                    "command": [
                        "replace e2 with (e1 + (e2 - e1))%Z by ring.",
                        "VernacExtend",
                        "aaf682a507251a33767073309ee9086790b935ea"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_1_r (bpow e1)).",
                        "VernacExtend",
                        "f804de8cc62105c7067b2891e0ee5c275fc7f4e5"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "assert (0 < e2 - e1)%Z by omega.",
                        "VernacExtend",
                        "7d4de587b59db594d41f832a53fda21212236c57"
                    ]
                },
                {
                    "command": [
                        "destruct (e2 - e1)%Z ; try discriminate H0.",
                        "VernacExtend",
                        "f6e58034682b2f22832c069dc3e73337987a0649"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower by easy.",
                        "VernacExtend",
                        "bf0cedaee55872e8f24c78287ac76f9ce698ac60"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_lt 1).",
                        "VernacExtend",
                        "3cade8fa7221b960ee261dbb03963153aa81e3d6"
                    ]
                },
                {
                    "command": [
                        "now apply Zpower_gt_1.",
                        "VernacExtend",
                        "2f322142ccdf35a529820d12620777a423fdda00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_bpow",
            "line_nb": 1030,
            "steps": [
                {
                    "command": [
                        "intros e1 e2 H.",
                        "VernacExtend",
                        "802cafb2894f89c55adbd45ea4c6983d77b43dcb"
                    ]
                },
                {
                    "command": [
                        "apply Zgt_lt.",
                        "VernacExtend",
                        "8c2d2cee607216b3cb20332d4f5992a17ec7bf04"
                    ]
                },
                {
                    "command": [
                        "apply Znot_le_gt.",
                        "VernacExtend",
                        "9b1e7a4bcfcec1592cc618c64ae51df5e8df9d1b"
                    ]
                },
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le with (1 := H).",
                        "VernacExtend",
                        "789d1d06c9955ba18c2b1fae62edd11f694ec197"
                    ]
                },
                {
                    "command": [
                        "destruct (Zle_lt_or_eq _ _ H').",
                        "VernacExtend",
                        "b2df6f72b9aaa52712d6812d2aa7dc64097026a0"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_lt.",
                        "VernacExtend",
                        "82adfb8fc5acd455f1fc2d9a87a4a912dd47b2a9"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_le",
            "line_nb": 1042,
            "steps": [
                {
                    "command": [
                        "intros e1 e2 H.",
                        "VernacExtend",
                        "802cafb2894f89c55adbd45ea4c6983d77b43dcb"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le.",
                        "VernacExtend",
                        "3c60597e841405b7d257d92c4717e01515b21555"
                    ]
                },
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "apply Zle_not_gt with (1 := H).",
                        "VernacExtend",
                        "ace0d8b03731d60cdb81ff90703022425157b3dd"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_gt.",
                        "VernacExtend",
                        "0c9f5f2fbabcb44c83f236e290499e43cbae87ee"
                    ]
                },
                {
                    "command": [
                        "now apply lt_bpow.",
                        "VernacExtend",
                        "f1f20c2ed175cdacafeab74db002f8f529135d43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_bpow",
            "line_nb": 1050,
            "steps": [
                {
                    "command": [
                        "intros e1 e2 H.",
                        "VernacExtend",
                        "802cafb2894f89c55adbd45ea4c6983d77b43dcb"
                    ]
                },
                {
                    "command": [
                        "apply Znot_gt_le.",
                        "VernacExtend",
                        "6a456f2f3e4f8c27d98bc6ea2a92afbf3ad279d0"
                    ]
                },
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := H).",
                        "VernacExtend",
                        "f2b9c5d2e023c422f62bdd5566d9dd97f02fed6f"
                    ]
                },
                {
                    "command": [
                        "apply bpow_lt.",
                        "VernacExtend",
                        "45b51ee535829682305d615af418ef00162d772b"
                    ]
                },
                {
                    "command": [
                        "now apply Zgt_lt.",
                        "VernacExtend",
                        "722f47ffbb35b026b8fc7f83a8cebac7b5b01f0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_inj",
            "line_nb": 1058,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Zle_antisym.",
                        "VernacExtend",
                        "d5fb169d90b6dbda1fca926c28e78732e286a418"
                    ]
                },
                {
                    "command": [
                        "apply le_bpow.",
                        "VernacExtend",
                        "926902a02df65b1343b2dab272fc67dc96b5f8eb"
                    ]
                },
                {
                    "command": [
                        "now apply Req_le.",
                        "VernacExtend",
                        "5d4aa056bac27d316e98423e67b3161b037bd6ce"
                    ]
                },
                {
                    "command": [
                        "apply le_bpow.",
                        "VernacExtend",
                        "926902a02df65b1343b2dab272fc67dc96b5f8eb"
                    ]
                },
                {
                    "command": [
                        "now apply Req_le.",
                        "VernacExtend",
                        "5d4aa056bac27d316e98423e67b3161b037bd6ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_exp",
            "line_nb": 1066,
            "steps": [
                {
                    "command": [
                        "assert (forall e, bpow (Zpos e) = exp (Z2R (Zpos e) * ln (Z2R r))).",
                        "VernacExtend",
                        "c4e834c0c57ed72a60ec7afa121f2e2c535c030d"
                    ]
                },
                {
                    "command": [
                        "intros e.",
                        "VernacExtend",
                        "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
                    ]
                },
                {
                    "command": [
                        "unfold bpow.",
                        "VernacExtend",
                        "36bc6c190c9af00882be1e7bf556b2a27b7d02bb"
                    ]
                },
                {
                    "command": [
                        "rewrite Zpower_pos_nat.",
                        "VernacExtend",
                        "5a2378a4e96e76124bc6c809e1a60a907b7a39a1"
                    ]
                },
                {
                    "command": [
                        "unfold Z2R at 2.",
                        "VernacExtend",
                        "6f44e857f60ed7126c3a57ab1ee2a2343beeab6a"
                    ]
                },
                {
                    "command": [
                        "rewrite P2R_INR.",
                        "VernacExtend",
                        "c16b74d873bb49a336f87670ad3e5ef83cba729c"
                    ]
                },
                {
                    "command": [
                        "induction (nat_of_P e).",
                        "VernacExtend",
                        "a693f2754d62f16f7f46c63fe2d6f1a1e538d790"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l.",
                        "VernacExtend",
                        "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
                    ]
                },
                {
                    "command": [
                        "now rewrite exp_0.",
                        "VernacExtend",
                        "872ba13fd7b495d621930925ce173921f3d43548"
                    ]
                },
                {
                    "command": [
                        "rewrite Zpower_nat_S.",
                        "VernacExtend",
                        "ed0f96779d23cb185cca2229c33932e1240e1438"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR.",
                        "VernacExtend",
                        "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_r.",
                        "VernacExtend",
                        "ddbb6f4dc1ffc967497bf9fa73715334cda5e5a0"
                    ]
                },
                {
                    "command": [
                        "rewrite exp_plus.",
                        "VernacExtend",
                        "6d6e784db73c5ec39c5b67ce974fcd38b73e5738"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l.",
                        "VernacExtend",
                        "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
                    ]
                },
                {
                    "command": [
                        "rewrite exp_ln.",
                        "VernacExtend",
                        "e0d05ba5e54e444d4ee2301090c30aee5255afc4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHn.",
                        "VernacExtend",
                        "3c5a36386bd293ffdd7a599d133f731aebc8cfae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_mult.",
                        "VernacExtend",
                        "4bfcef9c6d8659a267de59ca9647b2d107af9b2a"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zmult_comm.",
                        "VernacExtend",
                        "453e2d7a3c35a70266c2bc23aa15b969f4364a0d"
                    ]
                },
                {
                    "command": [
                        "apply radix_pos.",
                        "VernacExtend",
                        "0dcd1c467b6b40654e9649f327071230a0eb99a0"
                    ]
                },
                {
                    "command": [
                        "intros [|e|e].",
                        "VernacExtend",
                        "0089be47c0799d85bb354379fbc38e914a18d36e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l.",
                        "VernacExtend",
                        "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
                    ]
                },
                {
                    "command": [
                        "now rewrite exp_0.",
                        "VernacExtend",
                        "872ba13fd7b495d621930925ce173921f3d43548"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "unfold bpow.",
                        "VernacExtend",
                        "36bc6c190c9af00882be1e7bf556b2a27b7d02bb"
                    ]
                },
                {
                    "command": [
                        "change (Z2R (Zpower_pos r e)) with (bpow (Zpos e)).",
                        "VernacExtend",
                        "a88fa9f5fc9e44fc8f0db5b9d805a7709896eac3"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- exp_Ropp.",
                        "VernacExtend",
                        "d56423df06fb839b8cea3c4720cbcd7d695d8327"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "e7c61948f76e0a8897e51bfab935c33e66508906"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Z2R_opp.",
                        "VernacExtend",
                        "d3b562e9349d4c83a12655c70ed13f535b2cb683"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta",
            "line_nb": 1098,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "set (fact := ln (Z2R r)).",
                        "VernacExtend",
                        "c3de735ead054327f9342025f7864f7056182cf0"
                    ]
                },
                {
                    "command": [
                        "assert (0 < fact)%R.",
                        "VernacExtend",
                        "e41b57e9bc1e23a2bca4b44b0ecdd85812a58ba6"
                    ]
                },
                {
                    "command": [
                        "apply exp_lt_inv.",
                        "VernacExtend",
                        "54122c56a90a857136a1f26dee93cad6533904d0"
                    ]
                },
                {
                    "command": [
                        "rewrite exp_0.",
                        "VernacExtend",
                        "ee69943fd9d8e21c28cecf6020bad275d0760835"
                    ]
                },
                {
                    "command": [
                        "unfold fact.",
                        "VernacExtend",
                        "2ef69f4e0f7492e27e2d23d7059bca2d4c63d087"
                    ]
                },
                {
                    "command": [
                        "rewrite exp_ln.",
                        "VernacExtend",
                        "e0d05ba5e54e444d4ee2301090c30aee5255afc4"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_lt 1).",
                        "VernacExtend",
                        "3cade8fa7221b960ee261dbb03963153aa81e3d6"
                    ]
                },
                {
                    "command": [
                        "apply radix_gt_1.",
                        "VernacExtend",
                        "1fe0c373a207ebec517ee162a6c1eb5c3bbfa7c5"
                    ]
                },
                {
                    "command": [
                        "apply radix_pos.",
                        "VernacExtend",
                        "0dcd1c467b6b40654e9649f327071230a0eb99a0"
                    ]
                },
                {
                    "command": [
                        "exists (Zfloor (ln (Rabs x) / fact) + 1)%Z.",
                        "VernacExtend",
                        "dfa32d95000e638add67711cfee29fee2e5107a8"
                    ]
                },
                {
                    "command": [
                        "intros Hx'.",
                        "VernacExtend",
                        "c8bf15f02f392bdea99572c9f6c46c4de054aea5"
                    ]
                },
                {
                    "command": [
                        "generalize (Rabs_pos_lt _ Hx').",
                        "VernacExtend",
                        "316c4681c610bf05c87db3b6a9b197c82d7e10c1"
                    ]
                },
                {
                    "command": [
                        "clear Hx'.",
                        "VernacExtend",
                        "0875f0c7dbe04aede20f6012ae865c8fb0c488ec"
                    ]
                },
                {
                    "command": [
                        "generalize (Rabs x).",
                        "VernacExtend",
                        "d10c9224a1762bf7037b89c7afa385585fffe4c9"
                    ]
                },
                {
                    "command": [
                        "clear x.",
                        "VernacExtend",
                        "55ba34b53c4f71a4da16f9a2abf1837110688e06"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!bpow_exp.",
                        "VernacExtend",
                        "9d25947b7d66616fbbfc34adac6f28fb56550bfa"
                    ]
                },
                {
                    "command": [
                        "fold fact.",
                        "VernacExtend",
                        "7c2080567cdd20f54c8ce5dd1974dab4c0f02c34"
                    ]
                },
                {
                    "command": [
                        "pattern x at 2 3 ; replace x with (exp (ln x * / fact * fact)).",
                        "VernacExtend",
                        "19d2e5bccf9e848bd017aee166a2ccb8b1527fc3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_minus.",
                        "VernacExtend",
                        "75c0e17ece028e1c09696e50b0c135aa8a6471e2"
                    ]
                },
                {
                    "command": [
                        "apply exp_le.",
                        "VernacExtend",
                        "c474021c163ae1fa914d5a0e276c90623495a739"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_assoc.",
                        "VernacExtend",
                        "f1bd9ff8db9debbc055c2d64a1c07c2da6dd8407"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_r, Rplus_0_r.",
                        "VernacExtend",
                        "e347882c2b845c4f6ebed9f7cabcd93cff8f4860"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_lb.",
                        "VernacExtend",
                        "d4214e2694c0df6f781b41a07d34ed64a1ccfe1d"
                    ]
                },
                {
                    "command": [
                        "apply exp_increasing.",
                        "VernacExtend",
                        "4984f45a56637671bd2bd70226d7dc608d8a3bb4"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "e041593c57ec6470673cc705c01d215d230e0676"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2R_plus.",
                        "VernacExtend",
                        "acce6601b0322c726f9b248c200708805f7120a8"
                    ]
                },
                {
                    "command": [
                        "apply Zfloor_ub.",
                        "VernacExtend",
                        "b2acdd0c25ad7134d5a21e6d1e218ec0ac87b671"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc.",
                        "VernacExtend",
                        "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_l.",
                        "VernacExtend",
                        "ecdf9c2abd7f5f8afdaa87d40c932567a11fd7b1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "now apply exp_ln.",
                        "VernacExtend",
                        "bfe889db4d254ccf54412809115b549c201f4b29"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_lt_bpow",
            "line_nb": 1140,
            "steps": [
                {
                    "command": [
                        "intros e1 e2 He.",
                        "VernacExtend",
                        "f34fccc77ba75c014af0fcbca480481f30aad82b"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zsucc_pred e1).",
                        "VernacExtend",
                        "dffde03e8e32933d77a4e16bb86f223c58d40f51"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_succ.",
                        "VernacExtend",
                        "070de595889f014f0a173659377506422eb25080"
                    ]
                },
                {
                    "command": [
                        "now apply lt_bpow.",
                        "VernacExtend",
                        "f1f20c2ed175cdacafeab74db002f8f529135d43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_unique",
            "line_nb": 1146,
            "steps": [
                {
                    "command": [
                        "intros x e1 e2 (H1a,H1b) (H2a,H2b).",
                        "VernacExtend",
                        "5c562b4324394886af18e76fc00c819ee9fffb1e"
                    ]
                },
                {
                    "command": [
                        "apply Zle_antisym ; apply bpow_lt_bpow ; apply Rle_lt_trans with x ; assumption.",
                        "VernacExtend",
                        "80195a41137777203ded469ef01aeee1f2ce7c6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_unique",
            "line_nb": 1150,
            "steps": [
                {
                    "command": [
                        "intros x e1 He.",
                        "VernacExtend",
                        "6a51895d9ede863c49d3a63b1a7e67d41bb10583"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec x 0) as [Hx|Hx].",
                        "VernacExtend",
                        "d83dd8360662d9cf2533c82d6f6df4ee188b8ae9"
                    ]
                },
                {
                    "command": [
                        "elim Rle_not_lt with (1 := proj1 He).",
                        "VernacExtend",
                        "eb6e3b0b1762cd885f1467944e512ede0de02e09"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx, Rabs_R0.",
                        "VernacExtend",
                        "3ae2496e0f199b4965c9f974f16c5d09f959fed9"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (e2, Hx2).",
                        "VernacExtend",
                        "f840271bef67483e044870b6b9b47cda550305ea"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply bpow_unique with (2 := He).",
                        "VernacExtend",
                        "bf8e3fdf7a4f99a150bdf5b3caf01876dcf9720d"
                    ]
                },
                {
                    "command": [
                        "now apply Hx2.",
                        "VernacExtend",
                        "6a51a7f70cbb499b866c1498b20ebe0f57164b01"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_opp",
            "line_nb": 1161,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec x 0) as [Hx|Hx].",
                        "VernacExtend",
                        "d83dd8360662d9cf2533c82d6f6df4ee188b8ae9"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hx, Ropp_0.",
                        "VernacExtend",
                        "70d4d66641a1a55ad9d99b4a43da7687001ee493"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (e, He).",
                        "VernacExtend",
                        "f661df554abbdd8bdbcf1af24f89bdd44e0743d0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "specialize (He Hx).",
                        "VernacExtend",
                        "3e114831cf0cdc77e47c1034e6152a15e82edfea"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_unique.",
                        "VernacExtend",
                        "79d65859d3098a3d6023e78328916ac1d9f90627"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "20b628fb90f8e71247184a9caa17c8480951b1d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_abs",
            "line_nb": 1171,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs.",
                        "VernacExtend",
                        "32b62f5465b04c4380fa7a8bf154e157fb296719"
                    ]
                },
                {
                    "command": [
                        "case Rcase_abs ; intros _.",
                        "VernacExtend",
                        "4bc2d44e16eb96839334934b9b42113acf42af5f"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_opp.",
                        "VernacExtend",
                        "acf647f408cf8a059dd8c7c429f68563bdb2cbc3"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_unique_pos",
            "line_nb": 1178,
            "steps": [
                {
                    "command": [
                        "intros x e1 He1.",
                        "VernacExtend",
                        "2eb2785189168b33af57759ab1a0e3d3d854778c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ln_beta_abs.",
                        "VernacExtend",
                        "9aad19d67f22ac4171063b1a18df84a6b2724182"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_unique.",
                        "VernacExtend",
                        "79d65859d3098a3d6023e78328916ac1d9f90627"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!Rabs_pos_eq.",
                        "VernacExtend",
                        "ce2b3a42d972ffa8c959aebac91148e4e8b0e437"
                    ]
                },
                {
                    "command": [
                        "exact He1.",
                        "VernacExtend",
                        "a0c84a96dee6465d476b1486bec4641dc86a4595"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := proj1 He1).",
                        "VernacExtend",
                        "1aeda4eb18e7c954d80d195fa9581bb490da0e47"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_le_abs",
            "line_nb": 1188,
            "steps": [
                {
                    "command": [
                        "intros x y H0x Hxy.",
                        "VernacExtend",
                        "d2d874468bfc48bf71c62e27db673be305fb649c"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex, Hx).",
                        "VernacExtend",
                        "fb538a8fd5fa5e3af755a73a6c005e3b9fa551bb"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta y) as (ey, Hy).",
                        "VernacExtend",
                        "a02f47e9afe3e44283d2fd97c193f7e7803a72cf"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply bpow_lt_bpow.",
                        "VernacExtend",
                        "5b208dbd1aa47591491b48ed4e11e80c7e5ca0c1"
                    ]
                },
                {
                    "command": [
                        "specialize (Hx H0x).",
                        "VernacExtend",
                        "8ea3d41ce6f40eeee737804f0ea12e22a8fb7742"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := proj1 Hx).",
                        "VernacExtend",
                        "3462ae2a2f9152dcbab13e61aa646b92282d4ad8"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Hxy).",
                        "VernacExtend",
                        "bfb6a058e6aa79b608959d9250227b33542c507e"
                    ]
                },
                {
                    "command": [
                        "apply Hy.",
                        "VernacExtend",
                        "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
                    ]
                },
                {
                    "command": [
                        "intros Hy'.",
                        "VernacExtend",
                        "31a3fe41197f72196968e89cac33ae870f595243"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le with (1 := Rabs_pos_lt _ H0x).",
                        "VernacExtend",
                        "4d3e54d706dacea7fcd18fccbc6d8d950a4d7b43"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := Hxy).",
                        "VernacExtend",
                        "15320367548a991b5ea122fc234978ee63198cbd"
                    ]
                },
                {
                    "command": [
                        "rewrite Hy', Rabs_R0.",
                        "VernacExtend",
                        "eeba4ae78f3991dd839a488cdc5d40b7073f9211"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_le",
            "line_nb": 1204,
            "steps": [
                {
                    "command": [
                        "intros x y H0x Hxy.",
                        "VernacExtend",
                        "d2d874468bfc48bf71c62e27db673be305fb649c"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_le_abs.",
                        "VernacExtend",
                        "5d91662a86d36a47992ad980cdadb86c0b8e45f6"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!Rabs_pos_eq.",
                        "VernacExtend",
                        "ce2b3a42d972ffa8c959aebac91148e4e8b0e437"
                    ]
                },
                {
                    "command": [
                        "exact Hxy.",
                        "VernacExtend",
                        "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Hxy).",
                        "VernacExtend",
                        "10741e2cd960be8243d43e987f87abd2fd3bf2b0"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_lt_pos",
            "line_nb": 1214,
            "steps": [
                {
                    "command": [
                        "intros x y Py.",
                        "VernacExtend",
                        "87c1172b58267f7509f2f43e75c2fac8e6e8f794"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt x 0); intros Px.",
                        "VernacExtend",
                        "a4d2ab8dfe39121b989a83399b243c9864746026"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_lt_trans with 0%R.",
                        "VernacExtend",
                        "6659ec6a060d963dd62789a3be1f6d84e01d1ae1"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex, Hex).",
                        "VernacExtend",
                        "0079c5ab8c5024f46c86aa1fa1cac77b59ebcfd8"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta y) as (ey, Hey).",
                        "VernacExtend",
                        "84b318b2d9b0c1af1a6e6c0439303e0630f73577"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "destruct Hex as (_,Hex); [now apply Rgt_not_eq|].",
                        "VernacExtend",
                        "8eb0bd181e680ef17439d3117faf0ebe04f39ef1"
                    ]
                },
                {
                    "command": [
                        "destruct Hey as (Hey,_); [now apply Rgt_not_eq|].",
                        "VernacExtend",
                        "9589d900c85b51052bdd732afe94e5354bbc2d93"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right in Hex; [|now apply Rle_ge; apply Rlt_le].",
                        "VernacExtend",
                        "fb05d6a852c4e7ec7af24b142408af928440f12a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right in Hey; [|now apply Rle_ge; apply Rlt_le].",
                        "VernacExtend",
                        "a2a5650fd46cca22123075baa2d73cfd3e03366d"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_le_trans _ _ _ Hex).",
                        "VernacExtend",
                        "a0b84fbeee9ba530a7d51df80956dc8e9f3b30ee"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow (ey - 1)); [|exact Hey].",
                        "VernacExtend",
                        "8b2e7b83860b717b3045d3979afbd8588c2bc9da"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_le; omega.",
                        "VernacExtend",
                        "626ae804630da62585203c9d3ca739805209c0f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_bpow",
            "line_nb": 1231,
            "steps": [
                {
                    "command": [
                        "intros e.",
                        "VernacExtend",
                        "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_unique.",
                        "VernacExtend",
                        "79d65859d3098a3d6023e78328916ac1d9f90627"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right.",
                        "VernacExtend",
                        "9b60731d6b608338747f09fec19f24d12baad022"
                    ]
                },
                {
                    "command": [
                        "replace (e + 1 - 1)%Z with e by ring.",
                        "VernacExtend",
                        "bf8263db9d022a496f353fe9e099adf8063ba7dd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply bpow_lt.",
                        "VernacExtend",
                        "45b51ee535829682305d615af418ef00162d772b"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_succ.",
                        "VernacExtend",
                        "f4cf5b932d8c774be510b7802fbeea627fe15261"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_mult_bpow",
            "line_nb": 1243,
            "steps": [
                {
                    "command": [
                        "intros x e Zx.",
                        "VernacExtend",
                        "a14eecc1e49d52afb6758fdfcf0037436d9a5653"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex, Ex) ; simpl.",
                        "VernacExtend",
                        "1899981848c7839026ff978332693c4f1791876d"
                    ]
                },
                {
                    "command": [
                        "specialize (Ex Zx).",
                        "VernacExtend",
                        "60a98592e41f8e51b8b8f13d2a29bc7a3ff55447"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_unique.",
                        "VernacExtend",
                        "79d65859d3098a3d6023e78328916ac1d9f90627"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_pos_eq (bpow e)) by apply bpow_ge_0.",
                        "VernacExtend",
                        "74a54533076326d52006c6b48b0585290a870bce"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "replace (ex + e - 1)%Z with (ex - 1 + e)%Z by ring.",
                        "VernacExtend",
                        "bdae4bcd54d412d6fab80b80da00dc24dde77e6b"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "apply Ex.",
                        "VernacExtend",
                        "731a0b1d525e39ed5cef08f414754edbca20bc6e"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "e041593c57ec6470673cc705c01d215d230e0676"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "apply Ex.",
                        "VernacExtend",
                        "731a0b1d525e39ed5cef08f414754edbca20bc6e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_le_bpow",
            "line_nb": 1261,
            "steps": [
                {
                    "command": [
                        "intros x e Zx Hx.",
                        "VernacExtend",
                        "69c741b58f204e1415d1f9aaf131b322455ebea8"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex, Ex) ; simpl.",
                        "VernacExtend",
                        "1899981848c7839026ff978332693c4f1791876d"
                    ]
                },
                {
                    "command": [
                        "specialize (Ex Zx).",
                        "VernacExtend",
                        "60a98592e41f8e51b8b8f13d2a29bc7a3ff55447"
                    ]
                },
                {
                    "command": [
                        "apply bpow_lt_bpow.",
                        "VernacExtend",
                        "5b208dbd1aa47591491b48ed4e11e80c7e5ca0c1"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_lt_trans with (Rabs x).",
                        "VernacExtend",
                        "10582be5e0432f1bca7ff4d13fe38473faaa4f0c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_gt_bpow",
            "line_nb": 1268,
            "steps": [
                {
                    "command": [
                        "intros x e Hx.",
                        "VernacExtend",
                        "183d993f7f6ed381c7630272430ba030c84b0bb5"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex, Ex) ; simpl.",
                        "VernacExtend",
                        "1899981848c7839026ff978332693c4f1791876d"
                    ]
                },
                {
                    "command": [
                        "apply lt_bpow.",
                        "VernacExtend",
                        "db8c1ac0cbb941f22b837bffa21b6c78fedc5888"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Hx).",
                        "VernacExtend",
                        "db430b518aa17159c7ad33c200e700e4a1e02355"
                    ]
                },
                {
                    "command": [
                        "apply Ex.",
                        "VernacExtend",
                        "731a0b1d525e39ed5cef08f414754edbca20bc6e"
                    ]
                },
                {
                    "command": [
                        "intros Zx.",
                        "VernacExtend",
                        "4e1b3580e03cb42fe9c1a384ada7876f9def89ed"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := Hx).",
                        "VernacExtend",
                        "7dd563621105450d925cd479033afb35e2b0e522"
                    ]
                },
                {
                    "command": [
                        "rewrite Zx, Rabs_R0.",
                        "VernacExtend",
                        "bc3ecfffcc859f696fd367fb4a935def06218974"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_ge_bpow",
            "line_nb": 1279,
            "steps": [
                {
                    "command": [
                        "intros x e H.",
                        "VernacExtend",
                        "4a570b77a3b9d2106e97b6d9c5fd4c586fcd274a"
                    ]
                },
                {
                    "command": [
                        "destruct (Rlt_or_le (Rabs x) (bpow e)) as [Hxe|Hxe].",
                        "VernacExtend",
                        "10dfc8c03d6a28b2eb3b6f1919dc193fd5fd160c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (ln_beta x = e :> Z) as Hln.",
                        "VernacExtend",
                        "e14ab7fa334c78f72c5cf67c404ac688954f9e6d"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_unique; split.",
                        "VernacExtend",
                        "044ecce7063d852a79f59baa69592bcfb32f78c8"
                    ]
                },
                {
                    "command": [
                        "rewrite Hln.",
                        "VernacExtend",
                        "bb1b772435cf77c9ad5624a7e417a7cf58508780"
                    ]
                },
                {
                    "command": [
                        "now apply Z.le_refl.",
                        "VernacExtend",
                        "a8ef7ca7f7ac60eea098ad432e6d9737d356675c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_weak.",
                        "VernacExtend",
                        "77c804797cd604de1af1fd78f914f426e7c6ce85"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_gt_bpow.",
                        "VernacExtend",
                        "944360694e9de116bfa3c2ce8238224f7332dde8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_ln_beta_gt",
            "line_nb": 1291,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec x 0) as [Zx|Zx].",
                        "VernacExtend",
                        "b0fb74435c9a75d48c2d5b5e52e145e2f5a5444e"
                    ]
                },
                {
                    "command": [
                        "rewrite Zx, Rabs_R0.",
                        "VernacExtend",
                        "bc3ecfffcc859f696fd367fb4a935def06218974"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex, Ex) ; simpl.",
                        "VernacExtend",
                        "1899981848c7839026ff978332693c4f1791876d"
                    ]
                },
                {
                    "command": [
                        "now apply Ex.",
                        "VernacExtend",
                        "417bd386a04f52f9bd1a124e302a9f1c5f38bf0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bpow_ln_beta_le",
            "line_nb": 1299,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex, Ex) ; simpl.",
                        "VernacExtend",
                        "1899981848c7839026ff978332693c4f1791876d"
                    ]
                },
                {
                    "command": [
                        "now apply Ex.",
                        "VernacExtend",
                        "417bd386a04f52f9bd1a124e302a9f1c5f38bf0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_le_Zpower",
            "line_nb": 1304,
            "steps": [
                {
                    "command": [
                        "intros m e Zm Hm.",
                        "VernacExtend",
                        "69b33fab313b4f86b1ecbb5027637e574cc56ef8"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_le_bpow.",
                        "VernacExtend",
                        "5ef46fc2fd8dc2ad56a7abb0ceb7e9ab23f60ec8"
                    ]
                },
                {
                    "command": [
                        "exact (Z2R_neq m 0 Zm).",
                        "VernacExtend",
                        "1420cb9998314b06fcb0d9a9e006afc4f333db32"
                    ]
                },
                {
                    "command": [
                        "destruct (Zle_or_lt 0 e).",
                        "VernacExtend",
                        "f3fe38f9730ece7c5b89073396c5f96dad133326"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_abs, <- Z2R_Zpower with (1 := H).",
                        "VernacExtend",
                        "dbd808e26904ea97720e1505c33a32a8a23409f2"
                    ]
                },
                {
                    "command": [
                        "now apply Z2R_lt.",
                        "VernacExtend",
                        "7f5609ab9fcfd964c22b3efe7eaeac75e6c9173c"
                    ]
                },
                {
                    "command": [
                        "elim Zm.",
                        "VernacExtend",
                        "c8d3cfff1e968a262573ef340275840def0ad1d8"
                    ]
                },
                {
                    "command": [
                        "cut (Zabs m < 0)%Z.",
                        "VernacExtend",
                        "452c5ba0786bffb3fccbbb990c554ac44ef3930c"
                    ]
                },
                {
                    "command": [
                        "now case m.",
                        "VernacExtend",
                        "1e8ee82e88d7982334d66da1019694ce4849806d"
                    ]
                },
                {
                    "command": [
                        "clear -Hm H.",
                        "VernacExtend",
                        "bff7e7ef2b2e659e871b53278c1423bfbcb56525"
                    ]
                },
                {
                    "command": [
                        "now destruct e.",
                        "VernacExtend",
                        "ed4ee06a57371396ad709c3a097605f83eae0ff9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_gt_Zpower",
            "line_nb": 1317,
            "steps": [
                {
                    "command": [
                        "intros m e Zm Hm.",
                        "VernacExtend",
                        "69b33fab313b4f86b1ecbb5027637e574cc56ef8"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_gt_bpow.",
                        "VernacExtend",
                        "537a4f6c3ecc0c0f3557d18eabf7614d3e3bfee2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_abs.",
                        "VernacExtend",
                        "77629e87057563edf3f2c544c80c7822cbaa734b"
                    ]
                },
                {
                    "command": [
                        "destruct (Zle_or_lt 0 e).",
                        "VernacExtend",
                        "f3fe38f9730ece7c5b89073396c5f96dad133326"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2R_Zpower with (1 := H).",
                        "VernacExtend",
                        "6f0621e241c0a83a34a11fa06b04f1bf86de1c34"
                    ]
                },
                {
                    "command": [
                        "now apply Z2R_le.",
                        "VernacExtend",
                        "58bf5ef017302bba0024780a49c5a9a8c382820b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow 0).",
                        "VernacExtend",
                        "d5640b143575ec56105644b9f3dbca52950dc311"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "now apply Zlt_le_weak.",
                        "VernacExtend",
                        "8df137fb70ba9a1f8f0605f13095da8524766c66"
                    ]
                },
                {
                    "command": [
                        "apply (Z2R_le 1).",
                        "VernacExtend",
                        "0ed9eea66069dc85aaa897c5385949fe4a67943b"
                    ]
                },
                {
                    "command": [
                        "clear -Zm.",
                        "VernacExtend",
                        "2ace2950bf308917dac7a2b75259707fd65d33b7"
                    ]
                },
                {
                    "command": [
                        "zify ; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_mult",
            "line_nb": 1331,
            "steps": [
                {
                    "command": [
                        "intros x y Hx Hy.",
                        "VernacExtend",
                        "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex, Hx2).",
                        "VernacExtend",
                        "0b07edc96392183795e751b59476fe9f655e301a"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta y) as (ey, Hy2).",
                        "VernacExtend",
                        "53bde70c7d7cf63ad834c3817ab7b0bc02dca4f8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (Hx2 Hx) as (Hx21,Hx22); clear Hx2.",
                        "VernacExtend",
                        "97bc76506033a611ef0e2640533d1ac3caff2ae8"
                    ]
                },
                {
                    "command": [
                        "destruct (Hy2 Hy) as (Hy21,Hy22); clear Hy2.",
                        "VernacExtend",
                        "f257df5bfb9e8faf3b09caf15cc8f3410953204c"
                    ]
                },
                {
                    "command": [
                        "assert (Hxy : (bpow (ex + ey - 1 - 1) <= Rabs (x * y))%R).",
                        "VernacExtend",
                        "42aeda8d8bf30de1507bccbf2095af2c8245461d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "replace (ex + ey -1 -1)%Z with (ex - 1 + (ey - 1))%Z; [|ring].",
                        "VernacExtend",
                        "75b628e4eb8768ea07e86917491608abe5eee452"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "now apply Rmult_le_compat; try apply bpow_ge_0.",
                        "VernacExtend",
                        "bf802f0fc18a7ecf9921247469820d1673ac56e5"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Hxy2 : (Rabs (x * y) < bpow (ex + ey))%R).",
                        "VernacExtend",
                        "dcb6ca61457f44bf60fdb3b813b123af4bdc7540"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_0_lt_compat; try assumption.",
                        "VernacExtend",
                        "db2735b8503e4069a7b050b3863b0308ebd88292"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_trans with (bpow (ex - 1)); try apply bpow_ge_0.",
                        "VernacExtend",
                        "0479573875bea839169dfabb2ae3149b40eb113b"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_trans with (bpow (ey - 1)); try apply bpow_ge_0.",
                        "VernacExtend",
                        "382dc4150e43c2255721b0ccff27d301e3f7550c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_ge_bpow.",
                        "VernacExtend",
                        "dc02341e098ea505fc4c9ae962090df870773108"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_le_bpow.",
                        "VernacExtend",
                        "5ef46fc2fd8dc2ad56a7abb0ceb7e9ab23f60ec8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply Rmult_integral_contrapositive_currified.",
                        "VernacExtend",
                        "892bece4add20382e80fa3475f14a4e4266beae1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_plus",
            "line_nb": 1363,
            "steps": [
                {
                    "command": [
                        "assert (Hr : (2 <= r)%Z).",
                        "VernacExtend",
                        "e373c6cb05d335ff9e88cd8ee772855a14253038"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct r as (beta_val,beta_prop).",
                        "VernacExtend",
                        "e3bd2c26a6f0aadf489de45215741b982c58de69"
                    ]
                },
                {
                    "command": [
                        "now apply Zle_bool_imp_le.",
                        "VernacExtend",
                        "58a939dc5b091786ac14b82b5f01868c4efb5e4b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros x y Hy Hxy.",
                        "VernacExtend",
                        "47c10491d158605cf6c4835f87fe490df0a6b352"
                    ]
                },
                {
                    "command": [
                        "assert (Hx : (0 < x)%R) by apply (Rlt_le_trans _ _ _ Hy Hxy).",
                        "VernacExtend",
                        "6b51ed4f849c5ad65090f060e0057a1a7eb69c15"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex,Hex); simpl.",
                        "VernacExtend",
                        "ac98aa9edde7668e0efd67a83d76f2f9cae82c5d"
                    ]
                },
                {
                    "command": [
                        "destruct Hex as (Hex0,Hex1); [now apply Rgt_not_eq|].",
                        "VernacExtend",
                        "adf34c0fd960402b6670822dc85d722e4e2390f5"
                    ]
                },
                {
                    "command": [
                        "assert (Haxy : (Rabs (x + y) < bpow (ex + 1))%R).",
                        "VernacExtend",
                        "73dfe920d91095629a8cf174e6e4f87699bc11d9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus1.",
                        "VernacExtend",
                        "7c8527badd47d963ff02790f0b5f6022b157460f"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 * bpow ex)%R.",
                        "VernacExtend",
                        "9e98e2f239d80d203da32a6a51702a7a0cfa5596"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 * Rabs x)%R.",
                        "VernacExtend",
                        "79664a92ac4ef05a669f4253dd68949490f0ad0b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
                    ]
                },
                {
                    "command": [
                        "replace (2 * x)%R with (x + x)%R by ring.",
                        "VernacExtend",
                        "75ac5b03fc6c14f799e70d518f61989ceb0649ed"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "83b74ce917a38b4c507ac1ab8d2785aa8d319f4c"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l with (2 := Hex1).",
                        "VernacExtend",
                        "b132e9f31ce012f0993f1c22d813bd8679b9b6f1"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_2.",
                        "VernacExtend",
                        "b28a44a4ff92bff06dfdd851bad8224b270c7e57"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_0_l 0).",
                        "VernacExtend",
                        "b4f6e30bb97556b68566d133279e496054a7a01a"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le, Rplus_lt_compat.",
                        "VernacExtend",
                        "f6ddeffb562dfd2258a442205c0ba46fd5aff9a8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_ge_0.",
                        "VernacExtend",
                        "8d43b785efd875c566a55a0415104968ba2c5db1"
                    ]
                },
                {
                    "command": [
                        "now apply (Z2R_le 2).",
                        "VernacExtend",
                        "40ba7472356cc3bafca237cad1974a078c7b3642"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Haxy2 : (bpow (ex - 1) <= Rabs (x + y))%R).",
                        "VernacExtend",
                        "6e37a2b2f413b75a625e2141b88b66226d373fc5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (Rle_trans _ _ _ Hex0).",
                        "VernacExtend",
                        "3d4f65b1f47a8f91385287a0dd30dbbce8af75f0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right; [|now apply Rgt_ge].",
                        "VernacExtend",
                        "04c885e1ad2beaf8f7a5a2cfda2c27b925970b21"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_ge; right.",
                        "VernacExtend",
                        "34accb61e51ccc7bdd1f8b3e350a261051b38519"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_0_r x) at 1.",
                        "VernacExtend",
                        "13008200fc57b6d9d43b67c499bbb9e63c2de587"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_ge_bpow.",
                        "VernacExtend",
                        "dc02341e098ea505fc4c9ae962090df870773108"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_le_bpow.",
                        "VernacExtend",
                        "5ef46fc2fd8dc2ad56a7abb0ceb7e9ab23f60ec8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply tech_Rplus; [apply Rlt_le|].",
                        "VernacExtend",
                        "aa9f8b6c77fe685a80af09bfd12679ba5a0f20ae"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact Haxy.",
                        "VernacExtend",
                        "0f3e7933528c261a33b539b866b298dd60cfb5e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_minus",
            "line_nb": 1415,
            "steps": [
                {
                    "command": [
                        "intros x y Py Hxy.",
                        "VernacExtend",
                        "8d0c599f0593e32c72899f5bf52351c7a5607b8b"
                    ]
                },
                {
                    "command": [
                        "assert (Px : (0 < x)%R) by apply (Rlt_trans _ _ _ Py Hxy).",
                        "VernacExtend",
                        "972dfd2ecaa178e57813a3cd6f37826b78ff7861"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_le.",
                        "VernacExtend",
                        "e43580b7286582594a33da026f0809ba6159bbe8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_Rminus.",
                        "VernacExtend",
                        "98fbeb5f7590c6c2524c2eb370f8862917d0d966"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_0_r x) at 2.",
                        "VernacExtend",
                        "b00dcc97c695805425d1ebe458a16aa216b5348d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "now apply Ropp_le_contravar; apply Rlt_le.",
                        "VernacExtend",
                        "b610300bcb3a27fd6427a9b9457b75258cde832e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_minus_lb",
            "line_nb": 1427,
            "steps": [
                {
                    "command": [
                        "assert (Hbeta : (2 <= r)%Z).",
                        "VernacExtend",
                        "7b900d2934352be5b192aac6bea935dfe3b3818f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct r as (beta_val,beta_prop).",
                        "VernacExtend",
                        "e3bd2c26a6f0aadf489de45215741b982c58de69"
                    ]
                },
                {
                    "command": [
                        "now apply Zle_bool_imp_le.",
                        "VernacExtend",
                        "58a939dc5b091786ac14b82b5f01868c4efb5e4b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros x y Px Py Hln.",
                        "VernacExtend",
                        "51ed581ead0ba14481738f7541536e0e14722f36"
                    ]
                },
                {
                    "command": [
                        "assert (Oxy : (y < x)%R); [apply ln_beta_lt_pos;[assumption|omega]|].",
                        "VernacExtend",
                        "5cfab2a677c9163453d87e89fdfbc157c62b559e"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex,Hex).",
                        "VernacExtend",
                        "0079c5ab8c5024f46c86aa1fa1cac77b59ebcfd8"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta y) as (ey,Hey).",
                        "VernacExtend",
                        "84b318b2d9b0c1af1a6e6c0439303e0630f73577"
                    ]
                },
                {
                    "command": [
                        "simpl in Hln |- *.",
                        "VernacExtend",
                        "fbaf407724d6c40755b602b023d8f2bdca12709d"
                    ]
                },
                {
                    "command": [
                        "destruct Hex as (Hex,_); [now apply Rgt_not_eq|].",
                        "VernacExtend",
                        "0df07e20f2093e0fa8ef9c88d5729db722b6a7d6"
                    ]
                },
                {
                    "command": [
                        "destruct Hey as (_,Hey); [now apply Rgt_not_eq|].",
                        "VernacExtend",
                        "c85378b06aefcbefcc02a37635b398078d42b7c3"
                    ]
                },
                {
                    "command": [
                        "assert (Hbx : (bpow (ex - 2) + bpow (ex - 2) <= x)%R).",
                        "VernacExtend",
                        "cde1505df1196efae8ef8abebf8b99581f8c8c58"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow (ex - 1)).",
                        "VernacExtend",
                        "e4171cb5ae114bb9b441a15de69d3ee94d2991f7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace (ex - 1)%Z with (ex - 2 + 1)%Z by ring.",
                        "VernacExtend",
                        "d83cc5307ee6e92660256d5af21075b29d80da86"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus1.",
                        "VernacExtend",
                        "7c8527badd47d963ff02790f0b5f6022b157460f"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r; [now apply bpow_ge_0|].",
                        "VernacExtend",
                        "4a486c90f003a691d8f6953ba5bb92d8a58fe4a6"
                    ]
                },
                {
                    "command": [
                        "now change 2%R with (Z2R 2); apply Z2R_le.",
                        "VernacExtend",
                        "0b64d1d2dd589cd9c87c8c016071b5b89cc8a29e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rabs_right in Hex; [|apply Rle_ge; apply Rlt_le].",
                        "VernacExtend",
                        "a372ff79bb52d9dabdef89e89110f09171a30899"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Hby : (y < bpow (ex - 2))%R).",
                        "VernacExtend",
                        "948653d5b53147ec63d542931615e377cd19b617"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (bpow ey).",
                        "VernacExtend",
                        "3c8b25eab76f2baa78f2779bf38652cefdab9133"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rabs_right in Hey; [|apply Rle_ge; apply Rlt_le].",
                        "VernacExtend",
                        "22c48f93651d718617f8672977e5803f62fe3727"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_le.",
                        "VernacExtend",
                        "b07fc0e6cc6b5e33c8f24f56e53ed07e1d95cb75"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Hbxy : (bpow (ex - 2) <= x - y)%R).",
                        "VernacExtend",
                        "7d25ba00e0750d25facbc1419766ed39d3ca063a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar in Hby.",
                        "VernacExtend",
                        "76b740d57cad0c9ec3431227ca1d2c860a0b5448"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le in Hby.",
                        "VernacExtend",
                        "93b1d8cb9d7972179ba9b372cee3174eec455461"
                    ]
                },
                {
                    "command": [
                        "replace (bpow (ex - 2))%R with (bpow (ex - 2) + bpow (ex - 2) - bpow (ex - 2))%R by ring.",
                        "VernacExtend",
                        "d20ba838d27b4cdab65259e91e00252d5770fdad"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_le_compat.",
                        "VernacExtend",
                        "5026fc76978e94bba1bafa5de57b1568a016e780"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_ge_bpow.",
                        "VernacExtend",
                        "f60b8da4a6bd424ede261a2939de1decc4c6e014"
                    ]
                },
                {
                    "command": [
                        "replace (ex - 1 - 1)%Z with (ex - 2)%Z by ring.",
                        "VernacExtend",
                        "1e602a7a6f0c03b17a610ec23d96ac8934c4e09a"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_ge; right.",
                        "VernacExtend",
                        "b2c5a4311b6bf0e4bccdf234627981be58a8f22b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_div",
            "line_nb": 1469,
            "steps": [
                {
                    "command": [
                        "intros x y Px Py.",
                        "VernacExtend",
                        "f3b44dccb23f4c78e9170701010b73124e3f4d3b"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta x) as (ex,Hex).",
                        "VernacExtend",
                        "0079c5ab8c5024f46c86aa1fa1cac77b59ebcfd8"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta y) as (ey,Hey).",
                        "VernacExtend",
                        "84b318b2d9b0c1af1a6e6c0439303e0630f73577"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right in Hex; [|now apply Rle_ge; apply Rlt_le].",
                        "VernacExtend",
                        "fb05d6a852c4e7ec7af24b142408af928440f12a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right in Hey; [|now apply Rle_ge; apply Rlt_le].",
                        "VernacExtend",
                        "a2a5650fd46cca22123075baa2d73cfd3e03366d"
                    ]
                },
                {
                    "command": [
                        "assert (Heiy : (bpow (- ey) < / y <= bpow (- ey + 1))%R).",
                        "VernacExtend",
                        "948d9d2867eb5c46a3cec729c20cfd7f882befed"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_opp.",
                        "VernacExtend",
                        "3024d5fb06fda2c4f53c69e840b4e7c952a719e1"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_lt_contravar.",
                        "VernacExtend",
                        "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; [exact Py|].",
                        "VernacExtend",
                        "43e8dc544a16f712bf3f738db43fc050e54c03d0"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_gt_0.",
                        "VernacExtend",
                        "f1507fcc1772d7d1e8db79675b7a473a69d8cac0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Hey.",
                        "VernacExtend",
                        "e938ee0e67294187a39fb64a4eb915ecc5a77238"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace (_ + _)%Z with (- (ey - 1))%Z by ring.",
                        "VernacExtend",
                        "78a1891804a792ca8698a184027b84bb693f3cce"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_opp.",
                        "VernacExtend",
                        "3024d5fb06fda2c4f53c69e840b4e7c952a719e1"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_le; [now apply bpow_gt_0|].",
                        "VernacExtend",
                        "7580949017a2480ed7fa20b10e4e52821b7d15d3"
                    ]
                },
                {
                    "command": [
                        "apply Hey.",
                        "VernacExtend",
                        "e938ee0e67294187a39fb64a4eb915ecc5a77238"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_ge_bpow.",
                        "VernacExtend",
                        "f60b8da4a6bd424ede261a2939de1decc4c6e014"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_ge; right.",
                        "VernacExtend",
                        "34accb61e51ccc7bdd1f8b3e350a261051b38519"
                    ]
                },
                {
                    "command": [
                        "replace (_ - _)%Z with (ex - 1 - ey)%Z by ring.",
                        "VernacExtend",
                        "dd086d21349821dcf5df040f1e78a17a0fa5e385"
                    ]
                },
                {
                    "command": [
                        "unfold Zminus at 1; rewrite bpow_plus.",
                        "VernacExtend",
                        "86bffe2f635996a961bbeb945c2c082098f03fcd"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat.",
                        "VernacExtend",
                        "99a65cd1efb8e35313415d4b052731e2b0746daf"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_ge_0.",
                        "VernacExtend",
                        "8d43b785efd875c566a55a0415104968ba2c5db1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_ge_0.",
                        "VernacExtend",
                        "8d43b785efd875c566a55a0415104968ba2c5db1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Hex.",
                        "VernacExtend",
                        "0626b143f310ba29c3689980df03ba1efdab98c5"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; apply Heiy.",
                        "VernacExtend",
                        "36d95e4f15fcf78e63db4a522c75dd9f98838a93"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Pxy : (0 < x * / y)%R).",
                        "VernacExtend",
                        "4b5563556773955ca4cac06b33015f6567083986"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; [exact Px|].",
                        "VernacExtend",
                        "44f819a89ffb3d0a0039c5e676f60e90ef73ea1d"
                    ]
                },
                {
                    "command": [
                        "now apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "58509a7b472652bb7aef39a9b6811672d04772c5"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply ln_beta_le_bpow.",
                        "VernacExtend",
                        "5ef46fc2fd8dc2ad56a7abb0ceb7e9ab23f60ec8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right; [|now apply Rle_ge; apply Rlt_le].",
                        "VernacExtend",
                        "8706cff7c417d323ea1d80ba1695bf8223720149"
                    ]
                },
                {
                    "command": [
                        "replace (_ + 1)%Z with (ex + (- ey + 1))%Z by ring.",
                        "VernacExtend",
                        "22e1e3a9d99f2d00ca2c306061ad7b5a668ba453"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (bpow ex * / y)%R.",
                        "VernacExtend",
                        "968df15b1513ad81afdf0fb28d2b3a81f6a442cb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r; [now apply Rinv_0_lt_compat|].",
                        "VernacExtend",
                        "38632419c264a54ce6ec29547eff54239054d7db"
                    ]
                },
                {
                    "command": [
                        "apply Hex.",
                        "VernacExtend",
                        "0626b143f310ba29c3689980df03ba1efdab98c5"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l; [now apply bpow_ge_0|].",
                        "VernacExtend",
                        "f69ef2b6de2fc8786b9e7602db561df9b683ea13"
                    ]
                },
                {
                    "command": [
                        "apply Heiy.",
                        "VernacExtend",
                        "ea6aed637c178ebd11c2cdf3dd52bee7cebde635"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ln_beta_sqrt",
            "line_nb": 1534,
            "steps": [
                {
                    "command": [
                        "intros x Px.",
                        "VernacExtend",
                        "dce43951acf95e3bdf21f35d66e96c306e50a7ef"
                    ]
                },
                {
                    "command": [
                        "assert (H : (bpow (2 * ln_beta (sqrt x) - 1 - 1) <= Rabs x < bpow (2 * ln_beta (sqrt x)))%R).",
                        "VernacExtend",
                        "42fc68a658825dd926ebbe7168536709e83c8f20"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Rge_le; rewrite <- (sqrt_def x) at 1; [|now apply Rlt_le]; apply Rle_ge.",
                        "VernacExtend",
                        "e9d1df54defb9dd0fa251cdc6ba672c5c5e555ef"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "replace (_ - _)%Z with (ln_beta (sqrt x) - 1 + (ln_beta (sqrt x) - 1))%Z by ring.",
                        "VernacExtend",
                        "387e514f43c916b536e1dad1cc424855e9c600f5"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "assert (H : (bpow (ln_beta (sqrt x) - 1) <= Rabs (sqrt x))%R).",
                        "VernacExtend",
                        "4398d37aa191116f606a4fed26b014da21ca66ca"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta (sqrt x)) as (esx,Hesx); simpl.",
                        "VernacExtend",
                        "d58de215aaa0e8cf2d274dd57dbab6c08640755c"
                    ]
                },
                {
                    "command": [
                        "apply Hesx.",
                        "VernacExtend",
                        "d0879a436089954d092334ae54944b54c38564ea"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq; apply Rlt_gt.",
                        "VernacExtend",
                        "218c4de1a9d649db1b7581749b1b6db041e78771"
                    ]
                },
                {
                    "command": [
                        "now apply sqrt_lt_R0.",
                        "VernacExtend",
                        "c6e1277262c6aaa8acb574d7d75e10953268faa4"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "now apply Rmult_le_compat; [now apply bpow_ge_0|now apply bpow_ge_0| |].",
                        "VernacExtend",
                        "08c9d68983fb34658012914326711ae0a613c8a7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sqrt_def x) at 1; [|now apply Rlt_le].",
                        "VernacExtend",
                        "ffa78e8fed7aa5b9748251a83f044f7538cf1d4f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "change 2%Z with (1 + 1)%Z; rewrite Zmult_plus_distr_l; rewrite Zmult_1_l.",
                        "VernacExtend",
                        "97ec10ee6db8798b4c1d7e3dff8c8b4d85907e2e"
                    ]
                },
                {
                    "command": [
                        "rewrite bpow_plus.",
                        "VernacExtend",
                        "a66bde7144b19ede4a139295758f63aab8dcbea6"
                    ]
                },
                {
                    "command": [
                        "assert (H : (Rabs (sqrt x) < bpow (ln_beta (sqrt x)))%R).",
                        "VernacExtend",
                        "59b734665644506380d7a06ea887dc6bee420d6d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta (sqrt x)) as (esx,Hesx); simpl.",
                        "VernacExtend",
                        "d58de215aaa0e8cf2d274dd57dbab6c08640755c"
                    ]
                },
                {
                    "command": [
                        "apply Hesx.",
                        "VernacExtend",
                        "d0879a436089954d092334ae54944b54c38564ea"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq; apply Rlt_gt.",
                        "VernacExtend",
                        "218c4de1a9d649db1b7581749b1b6db041e78771"
                    ]
                },
                {
                    "command": [
                        "now apply sqrt_lt_R0.",
                        "VernacExtend",
                        "c6e1277262c6aaa8acb574d7d75e10953268faa4"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "now apply Rmult_lt_compat; [now apply Rabs_pos|now apply Rabs_pos| |].",
                        "VernacExtend",
                        "8e0f65365b9f67c4d3ba2ac4618b68682174699c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_ge_bpow.",
                        "VernacExtend",
                        "dc02341e098ea505fc4c9ae962090df870773108"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_le_bpow; [now apply Rgt_not_eq|].",
                        "VernacExtend",
                        "48cdacb13db1a468e1a113908f026aa9411b69be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_sym",
            "line_nb": 1574,
            "steps": [
                {
                    "command": [
                        "now intros [|] [|].",
                        "VernacExtend",
                        "87845541878844681cabb1c007663720e9a44a84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_false",
            "line_nb": 1577,
            "steps": [
                {
                    "command": [
                        "now intros [|] [|].",
                        "VernacExtend",
                        "87845541878844681cabb1c007663720e9a44a84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_true",
            "line_nb": 1580,
            "steps": [
                {
                    "command": [
                        "now intros [|] [|].",
                        "VernacExtend",
                        "87845541878844681cabb1c007663720e9a44a84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z2R_cond_Zopp",
            "line_nb": 1586,
            "steps": [
                {
                    "command": [
                        "intros [|] m.",
                        "VernacExtend",
                        "e2980d2679a2a59fd801d8d6771d754d302938c4"
                    ]
                },
                {
                    "command": [
                        "apply Z2R_opp.",
                        "VernacExtend",
                        "9d58b082913d70c5bfc6b276400d01332d38dc06"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abs_cond_Ropp",
            "line_nb": 1591,
            "steps": [
                {
                    "command": [
                        "intros [|] m.",
                        "VernacExtend",
                        "e2980d2679a2a59fd801d8d6771d754d302938c4"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_Ropp.",
                        "VernacExtend",
                        "6bc565d85ad2fe81334b09fc92c2be9594263780"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_Ropp_Rlt_bool",
            "line_nb": 1596,
            "steps": [
                {
                    "command": [
                        "intros m.",
                        "VernacExtend",
                        "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "case Rlt_bool_spec ; intros Hm.",
                        "VernacExtend",
                        "831ba4df3f5785e6a14179ff9b5787db6ee50b44"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_left.",
                        "VernacExtend",
                        "ed592c98d139ffc1c04d688a1c75c6c3400500c6"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_pos_eq.",
                        "VernacExtend",
                        "75396bee7c94a0ff0662d73d206e806e73cbff2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_Ropp_involutive",
            "line_nb": 1603,
            "steps": [
                {
                    "command": [
                        "intros [|] x.",
                        "VernacExtend",
                        "b72a2b9dc63ffabd9ffe42421d24df9db5657d1b"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_involutive.",
                        "VernacExtend",
                        "5693ee789e165349a2c109e8f1a16d4ccb445cfd"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_Ropp_even_function",
            "line_nb": 1608,
            "steps": [
                {
                    "command": [
                        "now intros A f Hf [|] x ; simpl.",
                        "VernacExtend",
                        "da8eaa74903f55b06540dab659ea0c3272479992"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_Ropp_odd_function",
            "line_nb": 1611,
            "steps": [
                {
                    "command": [
                        "now intros f Hf [|] x ; simpl.",
                        "VernacExtend",
                        "6d905e5c76aa2da01f52ff1b958b3da94384ded2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_Ropp_inj",
            "line_nb": 1614,
            "steps": [
                {
                    "command": [
                        "intros b x y H.",
                        "VernacExtend",
                        "f38aba1a2b9de037efd9b2e518d79fa6f2528815"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (cond_Ropp_involutive b x), H.",
                        "VernacExtend",
                        "fd551f3e16d626ba9b500e24cc10e5bd72243607"
                    ]
                },
                {
                    "command": [
                        "apply cond_Ropp_involutive.",
                        "VernacExtend",
                        "9f2110fa2d13d61cabb51018f5b8abf099794d1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_Ropp_mult_l",
            "line_nb": 1619,
            "steps": [
                {
                    "command": [
                        "intros [|] x y.",
                        "VernacExtend",
                        "04e1196d9b87c7b85f3cb50f8e3eab6f79f2e819"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "b3ed1ce3d3f87ce3f2410a5fa4d005618296854b"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_Ropp_mult_r",
            "line_nb": 1625,
            "steps": [
                {
                    "command": [
                        "intros [|] x y.",
                        "VernacExtend",
                        "04e1196d9b87c7b85f3cb50f8e3eab6f79f2e819"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_mult_distr_r_reverse.",
                        "VernacExtend",
                        "74547dfc2eb0ea2ca9675fb2f67ceac79b9dd82a"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LPO_min",
            "line_nb": 1637,
            "steps": [
                {
                    "command": [
                        "assert (Hi: forall n, (0 < INR n + 1)%R).",
                        "VernacExtend",
                        "23d798d13633667212d5e40c61421b9ff5a8f539"
                    ]
                },
                {
                    "command": [
                        "intros N.",
                        "VernacExtend",
                        "118d8cc76afed992d416336eb00759d8eee4e0b4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- S_INR.",
                        "VernacExtend",
                        "53f7c415e88fc85f922716a557382cfb3dfd8f58"
                    ]
                },
                {
                    "command": [
                        "apply lt_0_INR.",
                        "VernacExtend",
                        "e7fcaf0e487ae293c1722f1effce446b7c83b651"
                    ]
                },
                {
                    "command": [
                        "apply lt_0_Sn.",
                        "VernacExtend",
                        "3b7fc375f7db460b98008b419d236f8a4eb151b4"
                    ]
                },
                {
                    "command": [
                        "intros P HP.",
                        "VernacExtend",
                        "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
                    ]
                },
                {
                    "command": [
                        "set (E y := exists n, (P n /\\ y = / (INR n + 1))%R \\/ (~ P n /\\ y = 0)%R).",
                        "VernacExtend",
                        "c089d6f762a427a8ae1e574bcffe6ce54beaad3f"
                    ]
                },
                {
                    "command": [
                        "assert (HE: forall n, P n -> E (/ (INR n + 1))%R).",
                        "VernacExtend",
                        "2b62745a8379e9d93cf880cb835dfbe656e60a80"
                    ]
                },
                {
                    "command": [
                        "intros n Pn.",
                        "VernacExtend",
                        "4fa758e51102278220fe547b363df053c3e4e5cd"
                    ]
                },
                {
                    "command": [
                        "exists n.",
                        "VernacExtend",
                        "a97204a252e0d9b7444ffed9b38570a756391511"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "assert (BE: is_upper_bound E 1).",
                        "VernacExtend",
                        "f72a1a7fb64a5b64b881ca45b8144bebdf98af42"
                    ]
                },
                {
                    "command": [
                        "intros x [y [[_ ->]|[_ ->]]].",
                        "VernacExtend",
                        "affb9d2db34aa315b500110561b5a7bfdd2c9c84"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_1 at 2.",
                        "VernacExtend",
                        "c4b5170a2b6b036e63a03990c3cc3d876d107562"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_le.",
                        "VernacExtend",
                        "df9ed9c0ff0a06fae52364d762a5f467e1897f8b"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_1.",
                        "VernacExtend",
                        "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- S_INR.",
                        "VernacExtend",
                        "53f7c415e88fc85f922716a557382cfb3dfd8f58"
                    ]
                },
                {
                    "command": [
                        "apply (le_INR 1), le_n_S, le_0_n.",
                        "VernacExtend",
                        "f9293b0a4245a7eeb768bf1ca8b02d96e6a20c31"
                    ]
                },
                {
                    "command": [
                        "exact Rle_0_1.",
                        "VernacExtend",
                        "b3648bb2650e1660cdb0f039145a15b164adab62"
                    ]
                },
                {
                    "command": [
                        "destruct (completeness E) as [l [ub lub]].",
                        "VernacExtend",
                        "a4a865b3f1a9cd12d41a8fa285cc954606da57ba"
                    ]
                },
                {
                    "command": [
                        "now exists 1%R.",
                        "VernacExtend",
                        "02d2df65582eea04d618463c4b941aa085a0a85d"
                    ]
                },
                {
                    "command": [
                        "destruct (HP O) as [H0|H0].",
                        "VernacExtend",
                        "bdcffe433a7242e12d8a5e5ee7d05f1085e7f070"
                    ]
                },
                {
                    "command": [
                        "exists 1%R.",
                        "VernacExtend",
                        "c7da2fa494524f500fafcdd929c065e9cdf05743"
                    ]
                },
                {
                    "command": [
                        "exists O.",
                        "VernacExtend",
                        "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply (conj H0).",
                        "VernacExtend",
                        "9be8b87e8ad973fb0bd3ae2c925bd575c7dfdd5a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_l.",
                        "VernacExtend",
                        "b29625dd91809e03948728f9a3f640ec69c648c0"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, Rinv_1.",
                        "VernacExtend",
                        "b02a21ac167aa95d319796524d747d14b83507ab"
                    ]
                },
                {
                    "command": [
                        "exists 0%R.",
                        "VernacExtend",
                        "4946311e79d7b67f6666353bbdee019ff680f9fb"
                    ]
                },
                {
                    "command": [
                        "exists O.",
                        "VernacExtend",
                        "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_lt_dec l 0) as [Hl|Hl].",
                        "VernacExtend",
                        "a3183049a88fc13fb0911436e3cc2cfcd115ae3b"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intros n Pn.",
                        "VernacExtend",
                        "4fa758e51102278220fe547b363df053c3e4e5cd"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := Hl).",
                        "VernacExtend",
                        "a36928a66a3280a81fce9840559157bec866f38a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (/ (INR n + 1))%R.",
                        "VernacExtend",
                        "92a29f6ac0c85faf612a960404984025cdb88470"
                    ]
                },
                {
                    "command": [
                        "now apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "58509a7b472652bb7aef39a9b6811672d04772c5"
                    ]
                },
                {
                    "command": [
                        "apply ub.",
                        "VernacExtend",
                        "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
                    ]
                },
                {
                    "command": [
                        "now apply HE.",
                        "VernacExtend",
                        "b1fa97aae25a011c47242c807ac0ef256b458408"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "set (N := Zabs_nat (up (/l) - 2)).",
                        "VernacExtend",
                        "31dedd115aeae09b8a70f97539924560d987b230"
                    ]
                },
                {
                    "command": [
                        "exists N.",
                        "VernacExtend",
                        "3a77aef7937b4644ae655ca246f76b7aa0d197df"
                    ]
                },
                {
                    "command": [
                        "assert (HN: (INR N + 1 = IZR (up (/ l)) - 1)%R).",
                        "VernacExtend",
                        "eae2e2ae0a2976096fbbba94918244dc1b75c2a4"
                    ]
                },
                {
                    "command": [
                        "unfold N.",
                        "VernacExtend",
                        "e84969bf3a012f2b02bd8ab89f79f6e0b53e6b71"
                    ]
                },
                {
                    "command": [
                        "rewrite INR_IZR_INZ.",
                        "VernacExtend",
                        "8058c7a6913f85d26af3a54acc61c387d0a04933"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_Zabs_nat.",
                        "VernacExtend",
                        "5b77e77f19e43475666c2b5b886817c5b3ee1ad7"
                    ]
                },
                {
                    "command": [
                        "replace (IZR (up (/ l)) - 1)%R with (IZR (up (/ l) - 2) + 1)%R.",
                        "VernacExtend",
                        "afe9a14d67f41cc7507765671ad063347ac5a535"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun v => IZR v + 1)%R).",
                        "VernacExtend",
                        "cacfb50576af70c915696b3bbef5137bdfae16da"
                    ]
                },
                {
                    "command": [
                        "apply Zabs_eq.",
                        "VernacExtend",
                        "49010e3d49d17807661610454bf633de5de373d9"
                    ]
                },
                {
                    "command": [
                        "apply Zle_minus_le_0.",
                        "VernacExtend",
                        "17de0fc9b8b61e8a1285ec4f7cd279f58ff9d877"
                    ]
                },
                {
                    "command": [
                        "apply (Zlt_le_succ 1).",
                        "VernacExtend",
                        "68eb7e7d3a3af8168683154cf7a790fcbcd062d3"
                    ]
                },
                {
                    "command": [
                        "apply lt_IZR.",
                        "VernacExtend",
                        "165b941162ea1938aa71e78f57835b8df85de779"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (/l)%R.",
                        "VernacExtend",
                        "6ffba27e9cf8d9cdc9f737c828aef3b2d307856a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_r with (1 := Hl).",
                        "VernacExtend",
                        "221716667b2cb2cc78c31874fdfae06a649bc78a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l, Rinv_l by now apply Rgt_not_eq.",
                        "VernacExtend",
                        "d73e378846ae44cb4cded4640ba57fd218cd1dde"
                    ]
                },
                {
                    "command": [
                        "apply lub.",
                        "VernacExtend",
                        "bb3836d35738c90e04ae26708ff1e21fadb7f463"
                    ]
                },
                {
                    "command": [
                        "exact BE.",
                        "VernacExtend",
                        "8e18d00b2018ea77fca25c869dcbb3f8f98a028b"
                    ]
                },
                {
                    "command": [
                        "apply archimed.",
                        "VernacExtend",
                        "168f59ccb8dfdb15cb785ccbb9ff2ca9a9ba15b8"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_IZR.",
                        "VernacExtend",
                        "bf2e9167c2e10c7574eae6aa52f1250be91192aa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "assert (H: forall i, (i < N)%nat -> ~ P i).",
                        "VernacExtend",
                        "b4a5015303e971cb12925fae33f7eb8c7c489e62"
                    ]
                },
                {
                    "command": [
                        "intros i HiN Pi.",
                        "VernacExtend",
                        "9734e317f9a5e6ca0020f1155a8e20b43525fb29"
                    ]
                },
                {
                    "command": [
                        "unfold is_upper_bound in ub.",
                        "VernacExtend",
                        "64e9ca98fc65c4d0b8c5bb76a7947d189e190680"
                    ]
                },
                {
                    "command": [
                        "refine (Rle_not_lt _ _ (ub (/ (INR i + 1))%R _) _).",
                        "VernacExtend",
                        "ea37516fe917c4453702c4caedba0ebe52f75fd3"
                    ]
                },
                {
                    "command": [
                        "now apply HE.",
                        "VernacExtend",
                        "b1fa97aae25a011c47242c807ac0ef256b458408"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rinv_involutive l) by now apply Rgt_not_eq.",
                        "VernacExtend",
                        "f0de72f37a712631b9ef3a504b354412d4141f9b"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_1_lt_contravar.",
                        "VernacExtend",
                        "1b1b2a85feb422cd8c3dc8f95693109857cefaa3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- S_INR.",
                        "VernacExtend",
                        "53f7c415e88fc85f922716a557382cfb3dfd8f58"
                    ]
                },
                {
                    "command": [
                        "apply (le_INR 1).",
                        "VernacExtend",
                        "e26720834bbf4113378065f9b1d50b19321d8135"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply le_0_n.",
                        "VernacExtend",
                        "a40896a167507cd2cbfab4bf2df8f96a4477cab9"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (INR N + 1)%R.",
                        "VernacExtend",
                        "4188926f0a31ffb6beb325263609ecb8ba75f2ea"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "now apply lt_INR.",
                        "VernacExtend",
                        "80443daece0e8d4a5a163db066172a3f2fac201a"
                    ]
                },
                {
                    "command": [
                        "rewrite HN.",
                        "VernacExtend",
                        "ee539cbb621d104bd5a824ae8614d0ea5e45f11a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_r with (-/l + 1)%R.",
                        "VernacExtend",
                        "48d55b459cf6e9a3c74a77bf03a1eab10b39c35b"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "apply archimed.",
                        "VernacExtend",
                        "168f59ccb8dfdb15cb785ccbb9ff2ca9a9ba15b8"
                    ]
                },
                {
                    "command": [
                        "destruct (HP N) as [PN|PN].",
                        "VernacExtend",
                        "71c4b3947b425fa2771a6fc2779254caed295716"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "refine (Rle_not_lt _ _ (lub (/ (INR (S N) + 1))%R _) _).",
                        "VernacExtend",
                        "637bda5f1b1434bf87d5091c7c27593874112ae5"
                    ]
                },
                {
                    "command": [
                        "intros x [y [[Py ->]|[_ ->]]].",
                        "VernacExtend",
                        "da365c73cca2a1c72f3f181231adc398f1c22435"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_nat_dec y N) as [HyN|HyN].",
                        "VernacExtend",
                        "6da18ecc7f91087f9c6359360cbef99af12cb09c"
                    ]
                },
                {
                    "command": [
                        "elim PN.",
                        "VernacExtend",
                        "ddb91e447b43d61b4f6e6c67d07d5be84f783404"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- HyN.",
                        "VernacExtend",
                        "e656a70d34049ac886281e01e105c919596219db"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_le.",
                        "VernacExtend",
                        "df9ed9c0ff0a06fae52364d762a5f467e1897f8b"
                    ]
                },
                {
                    "command": [
                        "apply Hi.",
                        "VernacExtend",
                        "b7959f73b24cea8febda147e5d8d404627f1652f"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le.",
                        "VernacExtend",
                        "3c60597e841405b7d257d92c4717e01515b21555"
                    ]
                },
                {
                    "command": [
                        "intros Hy.",
                        "VernacExtend",
                        "dde1f3a11f7e3e65a050aa4d13dc38c854979033"
                    ]
                },
                {
                    "command": [
                        "refine (H _ _ Py).",
                        "VernacExtend",
                        "23779327047695c0df179ee8d64cf4e813fe9a9a"
                    ]
                },
                {
                    "command": [
                        "apply INR_lt in Hy.",
                        "VernacExtend",
                        "1816cacf3a7ad735e2a653a9df5922e08193a290"
                    ]
                },
                {
                    "command": [
                        "clear -Hy HyN.",
                        "VernacExtend",
                        "7d0d318cd88b599748f94fa85114aab521a8b0e1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le, Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d56a3aab3989da48d160dcfc2962e243a6c1f327"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR, HN.",
                        "VernacExtend",
                        "d5b2e54a9e58b5641bfa1c532b5f939b502d18fb"
                    ]
                },
                {
                    "command": [
                        "ring_simplify (IZR (up (/ l)) - 1 + 1)%R.",
                        "VernacExtend",
                        "fc2dbe907ed2f2d32334f9a96e55be069d5db3ff"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rinv_involutive l) at 2 by now apply Rgt_not_eq.",
                        "VernacExtend",
                        "5e84a03837ed420cb5544b7e01a4bf5441abbeb1"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_1_lt_contravar.",
                        "VernacExtend",
                        "1b1b2a85feb422cd8c3dc8f95693109857cefaa3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_1.",
                        "VernacExtend",
                        "25f4271863b63e7960d69c1c8df426f168da59be"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_le.",
                        "VernacExtend",
                        "df9ed9c0ff0a06fae52364d762a5f467e1897f8b"
                    ]
                },
                {
                    "command": [
                        "exact Hl.",
                        "VernacExtend",
                        "726a6911ca781f5fae08f27dbd5c9838368eca79"
                    ]
                },
                {
                    "command": [
                        "now apply lub.",
                        "VernacExtend",
                        "2282627626cc3bdc8e8af4a12638be9f5244c07e"
                    ]
                },
                {
                    "command": [
                        "apply archimed.",
                        "VernacExtend",
                        "168f59ccb8dfdb15cb785ccbb9ff2ca9a9ba15b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LPO",
            "line_nb": 1747,
            "steps": [
                {
                    "command": [
                        "intros P HP.",
                        "VernacExtend",
                        "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
                    ]
                },
                {
                    "command": [
                        "destruct (LPO_min P HP) as [[n [Pn _]]|Pn].",
                        "VernacExtend",
                        "cc445d744b13351d39cee5edd676bf5bd9726ad3"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now exists n.",
                        "VernacExtend",
                        "42d718ad51c566098409e9121294b6d4b019afc1"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LPO_Z",
            "line_nb": 1754,
            "steps": [
                {
                    "command": [
                        "intros P H.",
                        "VernacExtend",
                        "a464008aad1d3476c9d3e5773e092885602945e4"
                    ]
                },
                {
                    "command": [
                        "destruct (LPO (fun n => P (Z.of_nat n))) as [J|J].",
                        "VernacExtend",
                        "5a77cb6c2d1de4a07f1b558fbc922f064a7605b3"
                    ]
                },
                {
                    "command": [
                        "intros n; apply H.",
                        "VernacExtend",
                        "4abe107f1edf449e302483fc286e92c0a86e97c3"
                    ]
                },
                {
                    "command": [
                        "destruct J as (n, Hn).",
                        "VernacExtend",
                        "3c62243dc8e43f44083900a2def46146fdc175ca"
                    ]
                },
                {
                    "command": [
                        "left; now exists (Z.of_nat n).",
                        "VernacExtend",
                        "67d527877ad309ed596702d5dff78b8fcb6ee35e"
                    ]
                },
                {
                    "command": [
                        "destruct (LPO (fun n => P (-Z.of_nat n)%Z)) as [K|K].",
                        "VernacExtend",
                        "dd18bd948010911bdba59541d42816baecda9642"
                    ]
                },
                {
                    "command": [
                        "intros n; apply H.",
                        "VernacExtend",
                        "4abe107f1edf449e302483fc286e92c0a86e97c3"
                    ]
                },
                {
                    "command": [
                        "destruct K as (n, Hn).",
                        "VernacExtend",
                        "7d8d516f7e69b429f581815166a1a020eee364f8"
                    ]
                },
                {
                    "command": [
                        "left; now exists (-Z.of_nat n)%Z.",
                        "VernacExtend",
                        "18487236589d8c12156c7b1a4c46a720eea2f050"
                    ]
                },
                {
                    "command": [
                        "right; intros n; case (Zle_or_lt 0 n); intros M.",
                        "VernacExtend",
                        "04f8c54a323ad47e2422aa688c41ac4accd790ac"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zabs_eq n); trivial.",
                        "VernacExtend",
                        "ee815a2c9e05b989c2f67a0cbc984616f34219ce"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zabs2Nat.id_abs.",
                        "VernacExtend",
                        "43e898f1f5004677c621b44d2b65cf20be33268b"
                    ]
                },
                {
                    "command": [
                        "apply J.",
                        "VernacExtend",
                        "66921d22fed6050793d8b9f80c9a56408ba407e2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zopp_involutive n).",
                        "VernacExtend",
                        "99bb7c8f15622db89e0e33e795c0c69ea4e59a7a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z.abs_neq n).",
                        "VernacExtend",
                        "585487e11d65e8bb28c7aa83599999460cee7356"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zabs2Nat.id_abs.",
                        "VernacExtend",
                        "43e898f1f5004677c621b44d2b65cf20be33268b"
                    ]
                },
                {
                    "command": [
                        "apply K.",
                        "VernacExtend",
                        "d5d9c42e6396f4fdf954b554b0ab1c21c112b876"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}