{
    "filename": "compcert/flocq/Core/Fcore_FLT.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Fcore_Raux.",
            "VernacRequire",
            "6a49ff899e4733a5492282770f91634f4e2bce84"
        ],
        [
            "Require Import Fcore_defs.",
            "VernacRequire",
            "a5831df34cd1384c0e8566554919e69e523ebc02"
        ],
        [
            "Require Import Fcore_rnd.",
            "VernacRequire",
            "e56b94f747b869d666d08e61f9804bdee8d2613c"
        ],
        [
            "Require Import Fcore_generic_fmt.",
            "VernacRequire",
            "cb86ef6ed7d243b0910cb42e7367eddef0ead8b4"
        ],
        [
            "Require Import Fcore_float_prop.",
            "VernacRequire",
            "cb1b82d62c5b9c01c03fb8d695d9166849c8babe"
        ],
        [
            "Require Import Fcore_FLX.",
            "VernacRequire",
            "e9b5d5048d054f0cf551c782f104dea9bdd189e7"
        ],
        [
            "Require Import Fcore_FIX.",
            "VernacRequire",
            "2f95f1cca49659b602de09dd84b8bb19ef3228f0"
        ],
        [
            "Require Import Fcore_ulp.",
            "VernacRequire",
            "a2773216dd151304931c9408d58e4ed4a9223717"
        ],
        [
            "Require Import Fcore_rnd_ne.",
            "VernacRequire",
            "d925cf7a65144bc37c6097e7c0a05f35130208c8"
        ],
        [
            "Section RND_FLT.",
            "VernacBeginSection",
            "64aff8ba2c9c04486857da8e7d8af5449d68c49b"
        ],
        [
            "Variable beta : radix.",
            "VernacAssumption",
            "5414570a6751198892ee4a13f107deb4c633e62b"
        ],
        [
            "Notation bpow e := (bpow beta e).",
            "VernacSyntacticDefinition",
            "c796e278ffd17ea9674b52f8e94413782272a594"
        ],
        [
            "Variable emin prec : Z.",
            "VernacAssumption",
            "3ccc0e6889e5cd3c3d9e4dafff4f8ba78f15de33"
        ],
        [
            "Context { prec_gt_0_ : Prec_gt_0 prec }.",
            "VernacContext",
            "c8404f16109f008297dc64925b18a48ad609d64a"
        ],
        [
            "Definition FLT_format (x : R) := exists f : float beta, x = F2R f /\\ (Zabs (Fnum f) < Zpower beta prec)%Z /\\ (emin <= Fexp f)%Z.",
            "VernacDefinition",
            "d5f986d4e3a1d5d53fcdad880700aceeebff9148"
        ],
        [
            "Definition FLT_exp e := Zmax (e - prec) emin.",
            "VernacDefinition",
            "5f963a7ae39a455cf645af60c22f089c5508cb86"
        ],
        [
            "Global Instance FLT_exp_valid : Valid_exp FLT_exp.",
            "VernacInstance",
            "2f956e1867a6abee20f6257947ab084832e5cceb"
        ],
        [
            "intros k.",
            "VernacExtend",
            "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
        ],
        [
            "unfold FLT_exp.",
            "VernacExtend",
            "d4f3b9f7d52d234d511b90934a943354be18194a"
        ],
        [
            "generalize (prec_gt_0 prec).",
            "VernacExtend",
            "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
        ],
        [
            "repeat split ; intros ; zify ; omega.",
            "VernacExtend",
            "32ff1d66c43cc3cbed3c4b153fc64bdd1e9ab9d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_FLT : forall x, FLT_format x -> generic_format beta FLT_exp x.",
            "VernacStartTheoremProof",
            "dc48f15f4fb2cf6a87801363d65743687e9815f1"
        ],
        [
            "clear prec_gt_0_.",
            "VernacExtend",
            "3963d4e0856344bc562f698c9637e717e6065a05"
        ],
        [
            "intros x ((mx, ex), (H1, (H2, H3))).",
            "VernacExtend",
            "09c14fb48eccfc1d7f5572e5ea499cf85e801cd0"
        ],
        [
            "simpl in H2, H3.",
            "VernacExtend",
            "c63d067fb03c343170e7dbdacd2295c830007759"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "intros Zmx.",
            "VernacExtend",
            "65b0d5317d541dc8bb1252b908d52869a9a8d17c"
        ],
        [
            "unfold canonic_exp, FLT_exp.",
            "VernacExtend",
            "ba83afafe19bdf8ad526af63819ff6444a6995f6"
        ],
        [
            "rewrite ln_beta_F2R with (1 := Zmx).",
            "VernacExtend",
            "d4ba64514eba329abcd79a5d2687b6e4f1c1f1f5"
        ],
        [
            "apply Zmax_lub with (2 := H3).",
            "VernacExtend",
            "3aba6b1c22acc813fd142a925dc451c8b3a939c6"
        ],
        [
            "apply Zplus_le_reg_r with (prec - ex)%Z.",
            "VernacExtend",
            "62eab448004f26d763f8590dde97c10ab83da2be"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "now apply ln_beta_le_Zpower.",
            "VernacExtend",
            "741fbe9e95dca88a72be4dba8edcec304781b184"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FLT_format_generic : forall x, generic_format beta FLT_exp x -> FLT_format x.",
            "VernacStartTheoremProof",
            "23084a482d9aed74d360306cf7bc07bd0da0e5f4"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold generic_format.",
            "VernacExtend",
            "a62257dc9b3d0326e5266d774af361152364eac7"
        ],
        [
            "set (ex := canonic_exp beta FLT_exp x).",
            "VernacExtend",
            "cf8f58fa97e93929ba6b540eddd923da7bb440e5"
        ],
        [
            "set (mx := Ztrunc (scaled_mantissa beta FLT_exp x)).",
            "VernacExtend",
            "8d1866f0276c5b11dd5071a3ad9eeb47cce7baa8"
        ],
        [
            "intros Hx.",
            "VernacExtend",
            "9276b72df3a882c9b4b954c90d9e870c80a906fc"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "eexists ; repeat split ; simpl.",
            "VernacExtend",
            "8afff556de8dda2fc48bc3b01a26b6539ccaafbb"
        ],
        [
            "apply lt_Z2R.",
            "VernacExtend",
            "c0e615fac753553d0eac3dc2ae4d76c109cb9e3e"
        ],
        [
            "rewrite Z2R_Zpower.",
            "VernacExtend",
            "0e8cafd25f951e5aef33961dec1cfc55c1c015cd"
        ],
        [
            "2: now apply Zlt_le_weak.",
            "VernacExtend",
            "32df481aae0af3dc5265287195974b751026895e"
        ],
        [
            "apply Rmult_lt_reg_r with (bpow ex).",
            "VernacExtend",
            "16dd97d8a3979bbfea5c361ef7792ee3b6f24b6d"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "change (F2R (Float beta (Zabs mx) ex) < bpow (prec + ex))%R.",
            "VernacExtend",
            "3067aa05f4866f736b1952bbcfc65ed5db349386"
        ],
        [
            "rewrite F2R_Zabs.",
            "VernacExtend",
            "66f910e5a29dea24936afff0b12cbc4a00a79405"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "destruct (Req_dec x 0) as [Hx0|Hx0].",
            "VernacExtend",
            "69fdcf6bda96f2d635c402e78b2df2a462d6ee11"
        ],
        [
            "rewrite Hx0, Rabs_R0.",
            "VernacExtend",
            "fe606b27198a03390fe26d9216c96f63dbd792a8"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "unfold canonic_exp in ex.",
            "VernacExtend",
            "57045ff2a899cd4a628e63d69dd4143b5f42286c"
        ],
        [
            "destruct (ln_beta beta x) as (ex', He).",
            "VernacExtend",
            "1fb899219b945e14419cc6784e9a707e442a6c12"
        ],
        [
            "simpl in ex.",
            "VernacExtend",
            "4b3759e9b1c18a35bf0982c6572cb110c9c67177"
        ],
        [
            "specialize (He Hx0).",
            "VernacExtend",
            "34ae926afddf55aee6fc8873d4bece74881edf1a"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 He).",
            "VernacExtend",
            "b8d729dae78e3c2af25d2a4b3a8a1555957d7e91"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "cut (ex' - prec <= ex)%Z.",
            "VernacExtend",
            "1ba5c102007f4c8491f264c9300be8553bd26f2f"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold ex, FLT_exp.",
            "VernacExtend",
            "dcbf5bb0150135cb564abd2e9276f6a9cef9ba47"
        ],
        [
            "apply Zle_max_l.",
            "VernacExtend",
            "6915d7f86eef8e3b4797486745a8a40aeb4c990b"
        ],
        [
            "apply Zle_max_r.",
            "VernacExtend",
            "0b9837a5cbbd686132a86542bd0f995c6eace10f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FLT_format_bpow : forall e, (emin <= e)%Z -> generic_format beta FLT_exp (bpow e).",
            "VernacStartTheoremProof",
            "3c3bbc0082199931878811a19722d982ab4309cd"
        ],
        [
            "intros e He.",
            "VernacExtend",
            "933455ac9e50417dcc771605432cd330296b74b2"
        ],
        [
            "apply generic_format_bpow; unfold FLT_exp.",
            "VernacExtend",
            "2f29fb0329cce314c5f3419e05efcb438d319ea9"
        ],
        [
            "apply Z.max_case; try assumption.",
            "VernacExtend",
            "2599cdf7139ac2f9d40857bd489a07befd291837"
        ],
        [
            "unfold Prec_gt_0 in prec_gt_0_; omega.",
            "VernacExtend",
            "f80efae134a681e2c3bf9b10ac69a3e9d2d67408"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FLT_format_satisfies_any : satisfies_any FLT_format.",
            "VernacStartTheoremProof",
            "444fd43eb27ec3088aafd9baf70756ba8858a2bc"
        ],
        [
            "refine (satisfies_any_eq _ _ _ (generic_format_satisfies_any beta FLT_exp)).",
            "VernacExtend",
            "46339b12d92daa560877d864fcb5295f009b9c6d"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply FLT_format_generic.",
            "VernacExtend",
            "bbd9eacd2879247b186437ef3abe4ff21b8036ac"
        ],
        [
            "apply generic_format_FLT.",
            "VernacExtend",
            "555f10b505d8f1b986407a7320ce6fa79605c566"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_exp_FLT_FLX : forall x, (bpow (emin + prec - 1) <= Rabs x)%R -> canonic_exp beta FLT_exp x = canonic_exp beta (FLX_exp prec) x.",
            "VernacStartTheoremProof",
            "b51dee3c8745a893f1fadb7242921c97dd1f29ec"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "assert (Hx0: x <> 0%R).",
            "VernacExtend",
            "e075ed41f89b0eb917a504060cf49d3baf404e3c"
        ],
        [
            "intros H1; rewrite H1, Rabs_R0 in Hx.",
            "VernacExtend",
            "15414872f6b916951eda092caaadd0c26293b2e7"
        ],
        [
            "contradict Hx; apply Rlt_not_le, bpow_gt_0.",
            "VernacExtend",
            "3cf85acfa0552d324b1d2ebcd7758bf46170b68b"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "apply Zmax_left.",
            "VernacExtend",
            "047b3f1da293fdbe57aa68ec46baa89cd3de8ade"
        ],
        [
            "destruct (ln_beta beta x) as (ex, He).",
            "VernacExtend",
            "c9e86093c3be8ec240600e91efe15e45185c4d0b"
        ],
        [
            "unfold FLX_exp.",
            "VernacExtend",
            "71070950ec4cced4c2013495eecfd09baee01732"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "specialize (He Hx0).",
            "VernacExtend",
            "34ae926afddf55aee6fc8873d4bece74881edf1a"
        ],
        [
            "cut (emin + prec - 1 < ex)%Z.",
            "VernacExtend",
            "62bafcf6d99d3b9720e021eb4ff84428168e5c6d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply (lt_bpow beta).",
            "VernacExtend",
            "39756c21a1c38c15bfdc1abca446efcd43b5bc05"
        ],
        [
            "apply Rle_lt_trans with (1 := Hx).",
            "VernacExtend",
            "db430b518aa17159c7ad33c200e700e4a1e02355"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_FLT_FLX : forall x : R, (bpow (emin + prec - 1) <= Rabs x)%R -> generic_format beta (FLX_exp prec) x -> generic_format beta FLT_exp x.",
            "VernacStartTheoremProof",
            "bbd4c555ad6fc3ea975332bf4c8e6bd5b76d1e37"
        ],
        [
            "intros x Hx H.",
            "VernacExtend",
            "3010a4964b13a8a36a4887ebdb7abf6656f632bb"
        ],
        [
            "destruct (Req_dec x 0) as [Hx0|Hx0].",
            "VernacExtend",
            "69fdcf6bda96f2d635c402e78b2df2a462d6ee11"
        ],
        [
            "rewrite Hx0.",
            "VernacExtend",
            "26e3dbf6fcf10fd77c6bbf7908df4cc84be5da3d"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "unfold generic_format, scaled_mantissa.",
            "VernacExtend",
            "5dd3f7c8b737397d5f7a50337d30185eb9353de9"
        ],
        [
            "now rewrite canonic_exp_FLT_FLX.",
            "VernacExtend",
            "925222702097c1d1efcff13cbd3f0447ef45587c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_FLX_FLT : forall x : R, generic_format beta FLT_exp x -> generic_format beta (FLX_exp prec) x.",
            "VernacStartTheoremProof",
            "e412436cb3d3390eb7281b1b61e9c581967e0114"
        ],
        [
            "clear prec_gt_0_.",
            "VernacExtend",
            "3963d4e0856344bc562f698c9637e717e6065a05"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold generic_format in Hx; rewrite Hx.",
            "VernacExtend",
            "9335e59583782ec7a023aa5c2202d0fcd3eca3c1"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "unfold canonic_exp, FLX_exp, FLT_exp.",
            "VernacExtend",
            "2ba00809b45c85d75525ab57667e8ffb5865affd"
        ],
        [
            "apply Zle_max_l.",
            "VernacExtend",
            "6915d7f86eef8e3b4797486745a8a40aeb4c990b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_FLT_FLX : forall rnd x, (bpow (emin + prec - 1) <= Rabs x)%R -> round beta FLT_exp rnd x = round beta (FLX_exp prec) rnd x.",
            "VernacStartTheoremProof",
            "80cfc3896282f1e70a3014acc0b6ef8db3ac77e7"
        ],
        [
            "intros rnd x Hx.",
            "VernacExtend",
            "56b0e2698c7e59864c5a49dea2f4c8a26bbce304"
        ],
        [
            "unfold round, scaled_mantissa.",
            "VernacExtend",
            "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
        ],
        [
            "rewrite canonic_exp_FLT_FLX ; trivial.",
            "VernacExtend",
            "7f4447dabf10210bc969405323ea8e62b2c878b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem canonic_exp_FLT_FIX : forall x, x <> 0%R -> (Rabs x < bpow (emin + prec))%R -> canonic_exp beta FLT_exp x = canonic_exp beta (FIX_exp emin) x.",
            "VernacStartTheoremProof",
            "e0ad6af07cce8ad89cb46c0617c53fd7bd5499fb"
        ],
        [
            "intros x Hx0 Hx.",
            "VernacExtend",
            "7a59ad291592cb87db1b5c663e3e55e4b88e20e2"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "apply Zmax_right.",
            "VernacExtend",
            "f4aefe95201b42f83381a2e2177b4727ad91e94e"
        ],
        [
            "unfold FIX_exp.",
            "VernacExtend",
            "11893cac09eeedea57b9a5ca669d069a2f389617"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Hex).",
            "VernacExtend",
            "21921c4b6ef8de5f8e2c767fee1f9565dd6a946e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cut (ex - 1 < emin + prec)%Z.",
            "VernacExtend",
            "4c07b2f95f3fe81a4174d9ececef67ca07641805"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply (lt_bpow beta).",
            "VernacExtend",
            "39756c21a1c38c15bfdc1abca446efcd43b5bc05"
        ],
        [
            "apply Rle_lt_trans with (2 := Hx).",
            "VernacExtend",
            "6f4ed50de93b15e6078a10a54947a690658815ec"
        ],
        [
            "now apply Hex.",
            "VernacExtend",
            "953e0df17067823fa7d29ec029d76f6ac631b255"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_FIX_FLT : forall x : R, generic_format beta FLT_exp x -> generic_format beta (FIX_exp emin) x.",
            "VernacStartTheoremProof",
            "f17d1c0b813846a17f61095c26d7d19b1abc07cf"
        ],
        [
            "clear prec_gt_0_.",
            "VernacExtend",
            "3963d4e0856344bc562f698c9637e717e6065a05"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "apply generic_format_F2R.",
            "VernacExtend",
            "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "apply Zle_max_r.",
            "VernacExtend",
            "0b9837a5cbbd686132a86542bd0f995c6eace10f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generic_format_FLT_FIX : forall x : R, (Rabs x <= bpow (emin + prec))%R -> generic_format beta (FIX_exp emin) x -> generic_format beta FLT_exp x.",
            "VernacStartTheoremProof",
            "2fa525d7d7669497a066e4e5f9f2d217c85586ba"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "apply generic_inclusion_le...",
            "VernacExtend",
            "e765475bef49d72b8042ddd95e81d9711e3261e0"
        ],
        [
            "intros e He.",
            "VernacExtend",
            "933455ac9e50417dcc771605432cd330296b74b2"
        ],
        [
            "unfold FIX_exp.",
            "VernacExtend",
            "11893cac09eeedea57b9a5ca669d069a2f389617"
        ],
        [
            "apply Zmax_lub.",
            "VernacExtend",
            "396ed70d46a5f06cb690cbad94525d641684bf9c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_FLT_small: forall x, (Rabs x < bpow (emin+prec))%R -> ulp beta FLT_exp x = bpow emin.",
            "VernacStartTheoremProof",
            "44b1b1df5896341ab99a09072c991b009620a1b0"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold ulp; case Req_bool_spec; intros Hx2.",
            "VernacExtend",
            "772f83ec8f95949a0482834cbc832acfb3e280ab"
        ],
        [
            "case (negligible_exp_spec FLT_exp).",
            "VernacExtend",
            "df0c33ad59cc7dd9c689992d608d941626a0be83"
        ],
        [
            "intros T; specialize (T (emin-1)%Z); contradict T.",
            "VernacExtend",
            "43877f2fc5a115e4d3bed88d1122043dda6976d2"
        ],
        [
            "apply Zle_not_lt; unfold FLT_exp.",
            "VernacExtend",
            "d4cf1bfd04e5eb4817686c5e10ee6521d446c22f"
        ],
        [
            "apply Zle_trans with (2:=Z.le_max_r _ _); omega.",
            "VernacExtend",
            "799f55859f260ba31d07c51137748d635e51caf7"
        ],
        [
            "assert (V:FLT_exp emin = emin).",
            "VernacExtend",
            "78a5d4f566c998c165bc53dcdaefbce66b391608"
        ],
        [
            "unfold FLT_exp; apply Z.max_r.",
            "VernacExtend",
            "90cf256f4bab74c7a069cd08799aa5e6b60b4842"
        ],
        [
            "unfold Prec_gt_0 in prec_gt_0_; omega.",
            "VernacExtend",
            "f80efae134a681e2c3bf9b10ac69a3e9d2d67408"
        ],
        [
            "intros n H2; rewrite <-V.",
            "VernacExtend",
            "3c68b9ef511612c816ef465bea2d28ca5dff6260"
        ],
        [
            "apply f_equal, fexp_negligible_exp_eq...",
            "VernacExtend",
            "d6726aa5330ef193dc296c0aa4d4f4db48a49bda"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply f_equal; unfold canonic_exp, FLT_exp.",
            "VernacExtend",
            "c53a30e631cfdf110ca03befe68a722031f0bccc"
        ],
        [
            "apply Z.max_r.",
            "VernacExtend",
            "4809f70dd4e432503f09e9f56a9df527753b3f3d"
        ],
        [
            "assert (ln_beta beta x-1 < emin+prec)%Z;[idtac|omega].",
            "VernacExtend",
            "982dfc286ce091c4db0bc01781bb5a36e5a7d462"
        ],
        [
            "destruct (ln_beta beta x) as (e,He); simpl.",
            "VernacExtend",
            "a77119bf270c9ca756e41a97e3305b575f82dce7"
        ],
        [
            "apply lt_bpow with beta.",
            "VernacExtend",
            "8b691f5c9c4b728daf6b23cc71cb0efd1b7f2669"
        ],
        [
            "apply Rle_lt_trans with (2:=Hx).",
            "VernacExtend",
            "6f4ed50de93b15e6078a10a54947a690658815ec"
        ],
        [
            "now apply He.",
            "VernacExtend",
            "bc5a7f8e7b2610109d0f75edbd9562c779d335b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_FLT_le : forall x, (bpow (emin + prec - 1) <= Rabs x)%R -> (ulp beta FLT_exp x <= Rabs x * bpow (1 - prec))%R.",
            "VernacStartTheoremProof",
            "544c45dab5054d2d38702e7ea8abd9fa968e2fb4"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "assert (Zx : (x <> 0)%R).",
            "VernacExtend",
            "24ffc80be4d6e92df9a42c6677fd1187cbd948ce"
        ],
        [
            "intros Z; contradict Hx; apply Rgt_not_le, Rlt_gt.",
            "VernacExtend",
            "7d15485953b4a9d573d43451c118bab042655eb8"
        ],
        [
            "rewrite Z, Rabs_R0; apply bpow_gt_0.",
            "VernacExtend",
            "5e247399bf7e211be959d0c938d825a57ddaea41"
        ],
        [
            "rewrite ulp_neq_0 with (1 := Zx).",
            "VernacExtend",
            "4395a345835b84011044ca13ba6264788276437b"
        ],
        [
            "unfold canonic_exp, FLT_exp.",
            "VernacExtend",
            "ba83afafe19bdf8ad526af63819ff6444a6995f6"
        ],
        [
            "destruct (ln_beta beta x) as (e,He).",
            "VernacExtend",
            "b8b3fd0885671b68d791e7b7a2c74b1cce1c51ed"
        ],
        [
            "apply Rle_trans with (bpow (e-1)*bpow (1-prec))%R.",
            "VernacExtend",
            "26970f651050f68b4ff176f50a6af774adcf1764"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "right; apply f_equal.",
            "VernacExtend",
            "a4891a8d4470eb2c2febe52831f6d7de87ee5aff"
        ],
        [
            "replace (e - 1 + (1 - prec))%Z with (e - prec)%Z by ring.",
            "VernacExtend",
            "24b52948b104bc035c1c1eebd79c76b72b0d0551"
        ],
        [
            "apply Z.max_l.",
            "VernacExtend",
            "397548bdbbbf16dcf812c7c6271d50f8519ff7bc"
        ],
        [
            "assert (emin+prec-1 < e)%Z; try omega.",
            "VernacExtend",
            "8abfacd882bfd2f00c87335df30d59b50ae10823"
        ],
        [
            "apply lt_bpow with beta.",
            "VernacExtend",
            "8b691f5c9c4b728daf6b23cc71cb0efd1b7f2669"
        ],
        [
            "apply Rle_lt_trans with (1:=Hx).",
            "VernacExtend",
            "db430b518aa17159c7ad33c200e700e4a1e02355"
        ],
        [
            "now apply He.",
            "VernacExtend",
            "bc5a7f8e7b2610109d0f75edbd9562c779d335b7"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply bpow_ge_0.",
            "VernacExtend",
            "21ebde0be0a631dfd60f8ca27e963cec55b52605"
        ],
        [
            "now apply He.",
            "VernacExtend",
            "bc5a7f8e7b2610109d0f75edbd9562c779d335b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulp_FLT_gt : forall x, (Rabs x * bpow (-prec) < ulp beta FLT_exp x)%R.",
            "VernacStartTheoremProof",
            "5643870fb2cf593ce637f52a5063fbb933f7f671"
        ],
        [
            "intros x; case (Req_dec x 0); intros Hx.",
            "VernacExtend",
            "b01b31f3067e36eb7c57288e30f0e31b7ca4a963"
        ],
        [
            "rewrite Hx, ulp_FLT_small, Rabs_R0, Rmult_0_l; try apply bpow_gt_0.",
            "VernacExtend",
            "95ae1237520472ada4179bbb3400704dcd90a753"
        ],
        [
            "rewrite Rabs_R0; apply bpow_gt_0.",
            "VernacExtend",
            "68aad375fd5c4b598574a0663b3ffe5208e08c82"
        ],
        [
            "rewrite ulp_neq_0; try exact Hx.",
            "VernacExtend",
            "f238c81f86fee33e6c3f8758edc44e684a536368"
        ],
        [
            "unfold canonic_exp, FLT_exp.",
            "VernacExtend",
            "ba83afafe19bdf8ad526af63819ff6444a6995f6"
        ],
        [
            "apply Rlt_le_trans with (bpow (ln_beta beta x)*bpow (-prec))%R.",
            "VernacExtend",
            "8c0cf4719d2881a56cf9f2403f88344f2f394ad6"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "now apply bpow_ln_beta_gt.",
            "VernacExtend",
            "75ad0f5554f34119193fb8aa126f1daa0e4d25bc"
        ],
        [
            "rewrite <- bpow_plus.",
            "VernacExtend",
            "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
        ],
        [
            "apply bpow_le.",
            "VernacExtend",
            "9264f19c0062a0a711efc832825406a995342e90"
        ],
        [
            "apply Z.le_max_l.",
            "VernacExtend",
            "8e1e3b091d8ceba9cc377d96e8b784dc483851da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance FLT_exp_monotone : Monotone_exp FLT_exp.",
            "VernacInstance",
            "8571e371e7f4b087da962c5575ae2f01dbf03bfc"
        ],
        [
            "intros ex ey.",
            "VernacExtend",
            "7d51edb189ea7a0af83090d038107c8985dcaf1f"
        ],
        [
            "unfold FLT_exp.",
            "VernacExtend",
            "d4f3b9f7d52d234d511b90934a943354be18194a"
        ],
        [
            "zify ; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis NE_prop : Zeven beta = false \\/ (1 < prec)%Z.",
            "VernacAssumption",
            "dee3745f533e1e833e20ccebfdafd65d93280559"
        ],
        [
            "Global Instance exists_NE_FLT : Exists_NE beta FLT_exp.",
            "VernacInstance",
            "581bcb98666daec88927a59b1f24f5cfcb6def62"
        ],
        [
            "destruct NE_prop as [H|H].",
            "VernacExtend",
            "5770cb2840596659e7312e724aa4d3d133cb418e"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros e.",
            "VernacExtend",
            "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
        ],
        [
            "unfold FLT_exp.",
            "VernacExtend",
            "d4f3b9f7d52d234d511b90934a943354be18194a"
        ],
        [
            "destruct (Zmax_spec (e - prec) emin) as [(H1,H2)|(H1,H2)] ; rewrite H2 ; clear H2.",
            "VernacExtend",
            "cebe8729dd1465953cb84b4a425e4178f3deef3e"
        ],
        [
            "generalize (Zmax_spec (e + 1 - prec) emin).",
            "VernacExtend",
            "56bf8cc229f20180e58bd03c0fb735fcb297fda7"
        ],
        [
            "generalize (Zmax_spec (e - prec + 1 - prec) emin).",
            "VernacExtend",
            "bcbaf34baacdec3a3f7858050e13d4bee6a879a6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "generalize (Zmax_spec (e + 1 - prec) emin).",
            "VernacExtend",
            "56bf8cc229f20180e58bd03c0fb735fcb297fda7"
        ],
        [
            "generalize (Zmax_spec (emin + 1 - prec) emin).",
            "VernacExtend",
            "97f6e28c08a2bb3061f4f95182de907dad772a77"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RND_FLT.",
            "VernacEndSegment",
            "e02756b85b427f91c836b6a0387ca2cdf7a386f7"
        ]
    ],
    "proofs": [
        {
            "name": "FLT_exp_valid",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros k.",
                        "VernacExtend",
                        "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
                    ]
                },
                {
                    "command": [
                        "unfold FLT_exp.",
                        "VernacExtend",
                        "d4f3b9f7d52d234d511b90934a943354be18194a"
                    ]
                },
                {
                    "command": [
                        "generalize (prec_gt_0 prec).",
                        "VernacExtend",
                        "f827b434a598a8eb871cd50fd31ccf4bfded79d5"
                    ]
                },
                {
                    "command": [
                        "repeat split ; intros ; zify ; omega.",
                        "VernacExtend",
                        "32ff1d66c43cc3cbed3c4b153fc64bdd1e9ab9d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_FLT",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "clear prec_gt_0_.",
                        "VernacExtend",
                        "3963d4e0856344bc562f698c9637e717e6065a05"
                    ]
                },
                {
                    "command": [
                        "intros x ((mx, ex), (H1, (H2, H3))).",
                        "VernacExtend",
                        "09c14fb48eccfc1d7f5572e5ea499cf85e801cd0"
                    ]
                },
                {
                    "command": [
                        "simpl in H2, H3.",
                        "VernacExtend",
                        "c63d067fb03c343170e7dbdacd2295c830007759"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_F2R.",
                        "VernacExtend",
                        "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
                    ]
                },
                {
                    "command": [
                        "intros Zmx.",
                        "VernacExtend",
                        "65b0d5317d541dc8bb1252b908d52869a9a8d17c"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp, FLT_exp.",
                        "VernacExtend",
                        "ba83afafe19bdf8ad526af63819ff6444a6995f6"
                    ]
                },
                {
                    "command": [
                        "rewrite ln_beta_F2R with (1 := Zmx).",
                        "VernacExtend",
                        "d4ba64514eba329abcd79a5d2687b6e4f1c1f1f5"
                    ]
                },
                {
                    "command": [
                        "apply Zmax_lub with (2 := H3).",
                        "VernacExtend",
                        "3aba6b1c22acc813fd142a925dc451c8b3a939c6"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_le_reg_r with (prec - ex)%Z.",
                        "VernacExtend",
                        "62eab448004f26d763f8590dde97c10ab83da2be"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "now apply ln_beta_le_Zpower.",
                        "VernacExtend",
                        "741fbe9e95dca88a72be4dba8edcec304781b184"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FLT_format_bpow",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros e He.",
                        "VernacExtend",
                        "933455ac9e50417dcc771605432cd330296b74b2"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_bpow; unfold FLT_exp.",
                        "VernacExtend",
                        "2f29fb0329cce314c5f3419e05efcb438d319ea9"
                    ]
                },
                {
                    "command": [
                        "apply Z.max_case; try assumption.",
                        "VernacExtend",
                        "2599cdf7139ac2f9d40857bd489a07befd291837"
                    ]
                },
                {
                    "command": [
                        "unfold Prec_gt_0 in prec_gt_0_; omega.",
                        "VernacExtend",
                        "f80efae134a681e2c3bf9b10ac69a3e9d2d67408"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FLT_format_satisfies_any",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "refine (satisfies_any_eq _ _ _ (generic_format_satisfies_any beta FLT_exp)).",
                        "VernacExtend",
                        "46339b12d92daa560877d864fcb5295f009b9c6d"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply FLT_format_generic.",
                        "VernacExtend",
                        "bbd9eacd2879247b186437ef3abe4ff21b8036ac"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_FLT.",
                        "VernacExtend",
                        "555f10b505d8f1b986407a7320ce6fa79605c566"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_exp_FLT_FLX",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "assert (Hx0: x <> 0%R).",
                        "VernacExtend",
                        "e075ed41f89b0eb917a504060cf49d3baf404e3c"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1, Rabs_R0 in Hx.",
                        "VernacExtend",
                        "15414872f6b916951eda092caaadd0c26293b2e7"
                    ]
                },
                {
                    "command": [
                        "contradict Hx; apply Rlt_not_le, bpow_gt_0.",
                        "VernacExtend",
                        "3cf85acfa0552d324b1d2ebcd7758bf46170b68b"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "apply Zmax_left.",
                        "VernacExtend",
                        "047b3f1da293fdbe57aa68ec46baa89cd3de8ade"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex, He).",
                        "VernacExtend",
                        "c9e86093c3be8ec240600e91efe15e45185c4d0b"
                    ]
                },
                {
                    "command": [
                        "unfold FLX_exp.",
                        "VernacExtend",
                        "71070950ec4cced4c2013495eecfd09baee01732"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "specialize (He Hx0).",
                        "VernacExtend",
                        "34ae926afddf55aee6fc8873d4bece74881edf1a"
                    ]
                },
                {
                    "command": [
                        "cut (emin + prec - 1 < ex)%Z.",
                        "VernacExtend",
                        "62bafcf6d99d3b9720e021eb4ff84428168e5c6d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply (lt_bpow beta).",
                        "VernacExtend",
                        "39756c21a1c38c15bfdc1abca446efcd43b5bc05"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Hx).",
                        "VernacExtend",
                        "db430b518aa17159c7ad33c200e700e4a1e02355"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_FLT_FLX",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros x Hx H.",
                        "VernacExtend",
                        "3010a4964b13a8a36a4887ebdb7abf6656f632bb"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec x 0) as [Hx0|Hx0].",
                        "VernacExtend",
                        "69fdcf6bda96f2d635c402e78b2df2a462d6ee11"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx0.",
                        "VernacExtend",
                        "26e3dbf6fcf10fd77c6bbf7908df4cc84be5da3d"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_0.",
                        "VernacExtend",
                        "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format, scaled_mantissa.",
                        "VernacExtend",
                        "5dd3f7c8b737397d5f7a50337d30185eb9353de9"
                    ]
                },
                {
                    "command": [
                        "now rewrite canonic_exp_FLT_FLX.",
                        "VernacExtend",
                        "925222702097c1d1efcff13cbd3f0447ef45587c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_FLX_FLT",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "clear prec_gt_0_.",
                        "VernacExtend",
                        "3963d4e0856344bc562f698c9637e717e6065a05"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format in Hx; rewrite Hx.",
                        "VernacExtend",
                        "9335e59583782ec7a023aa5c2202d0fcd3eca3c1"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_F2R.",
                        "VernacExtend",
                        "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx.",
                        "VernacExtend",
                        "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp, FLX_exp, FLT_exp.",
                        "VernacExtend",
                        "2ba00809b45c85d75525ab57667e8ffb5865affd"
                    ]
                },
                {
                    "command": [
                        "apply Zle_max_l.",
                        "VernacExtend",
                        "6915d7f86eef8e3b4797486745a8a40aeb4c990b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_FLT_FLX",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros rnd x Hx.",
                        "VernacExtend",
                        "56b0e2698c7e59864c5a49dea2f4c8a26bbce304"
                    ]
                },
                {
                    "command": [
                        "unfold round, scaled_mantissa.",
                        "VernacExtend",
                        "7469ad7d3b9aede0c8a3252000b6eff5c30abc4e"
                    ]
                },
                {
                    "command": [
                        "rewrite canonic_exp_FLT_FLX ; trivial.",
                        "VernacExtend",
                        "7f4447dabf10210bc969405323ea8e62b2c878b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canonic_exp_FLT_FIX",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros x Hx0 Hx.",
                        "VernacExtend",
                        "7a59ad291592cb87db1b5c663e3e55e4b88e20e2"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp.",
                        "VernacExtend",
                        "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
                    ]
                },
                {
                    "command": [
                        "apply Zmax_right.",
                        "VernacExtend",
                        "f4aefe95201b42f83381a2e2177b4727ad91e94e"
                    ]
                },
                {
                    "command": [
                        "unfold FIX_exp.",
                        "VernacExtend",
                        "11893cac09eeedea57b9a5ca669d069a2f389617"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (ex, Hex).",
                        "VernacExtend",
                        "21921c4b6ef8de5f8e2c767fee1f9565dd6a946e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cut (ex - 1 < emin + prec)%Z.",
                        "VernacExtend",
                        "4c07b2f95f3fe81a4174d9ececef67ca07641805"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply (lt_bpow beta).",
                        "VernacExtend",
                        "39756c21a1c38c15bfdc1abca446efcd43b5bc05"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := Hx).",
                        "VernacExtend",
                        "6f4ed50de93b15e6078a10a54947a690658815ec"
                    ]
                },
                {
                    "command": [
                        "now apply Hex.",
                        "VernacExtend",
                        "953e0df17067823fa7d29ec029d76f6ac631b255"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generic_format_FIX_FLT",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "clear prec_gt_0_.",
                        "VernacExtend",
                        "3963d4e0856344bc562f698c9637e717e6065a05"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_F2R.",
                        "VernacExtend",
                        "3bbdbef5cecd8cd7887cb9d4ed37843b2dc31e75"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx.",
                        "VernacExtend",
                        "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
                    ]
                },
                {
                    "command": [
                        "apply Zle_max_r.",
                        "VernacExtend",
                        "0b9837a5cbbd686132a86542bd0f995c6eace10f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_FLT_le",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "assert (Zx : (x <> 0)%R).",
                        "VernacExtend",
                        "24ffc80be4d6e92df9a42c6677fd1187cbd948ce"
                    ]
                },
                {
                    "command": [
                        "intros Z; contradict Hx; apply Rgt_not_le, Rlt_gt.",
                        "VernacExtend",
                        "7d15485953b4a9d573d43451c118bab042655eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite Z, Rabs_R0; apply bpow_gt_0.",
                        "VernacExtend",
                        "5e247399bf7e211be959d0c938d825a57ddaea41"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0 with (1 := Zx).",
                        "VernacExtend",
                        "4395a345835b84011044ca13ba6264788276437b"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp, FLT_exp.",
                        "VernacExtend",
                        "ba83afafe19bdf8ad526af63819ff6444a6995f6"
                    ]
                },
                {
                    "command": [
                        "destruct (ln_beta beta x) as (e,He).",
                        "VernacExtend",
                        "b8b3fd0885671b68d791e7b7a2c74b1cce1c51ed"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (bpow (e-1)*bpow (1-prec))%R.",
                        "VernacExtend",
                        "26970f651050f68b4ff176f50a6af774adcf1764"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "right; apply f_equal.",
                        "VernacExtend",
                        "a4891a8d4470eb2c2febe52831f6d7de87ee5aff"
                    ]
                },
                {
                    "command": [
                        "replace (e - 1 + (1 - prec))%Z with (e - prec)%Z by ring.",
                        "VernacExtend",
                        "24b52948b104bc035c1c1eebd79c76b72b0d0551"
                    ]
                },
                {
                    "command": [
                        "apply Z.max_l.",
                        "VernacExtend",
                        "397548bdbbbf16dcf812c7c6271d50f8519ff7bc"
                    ]
                },
                {
                    "command": [
                        "assert (emin+prec-1 < e)%Z; try omega.",
                        "VernacExtend",
                        "8abfacd882bfd2f00c87335df30d59b50ae10823"
                    ]
                },
                {
                    "command": [
                        "apply lt_bpow with beta.",
                        "VernacExtend",
                        "8b691f5c9c4b728daf6b23cc71cb0efd1b7f2669"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1:=Hx).",
                        "VernacExtend",
                        "db430b518aa17159c7ad33c200e700e4a1e02355"
                    ]
                },
                {
                    "command": [
                        "now apply He.",
                        "VernacExtend",
                        "bc5a7f8e7b2610109d0f75edbd9562c779d335b7"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply bpow_ge_0.",
                        "VernacExtend",
                        "21ebde0be0a631dfd60f8ca27e963cec55b52605"
                    ]
                },
                {
                    "command": [
                        "now apply He.",
                        "VernacExtend",
                        "bc5a7f8e7b2610109d0f75edbd9562c779d335b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulp_FLT_gt",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "intros x; case (Req_dec x 0); intros Hx.",
                        "VernacExtend",
                        "b01b31f3067e36eb7c57288e30f0e31b7ca4a963"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx, ulp_FLT_small, Rabs_R0, Rmult_0_l; try apply bpow_gt_0.",
                        "VernacExtend",
                        "95ae1237520472ada4179bbb3400704dcd90a753"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_R0; apply bpow_gt_0.",
                        "VernacExtend",
                        "68aad375fd5c4b598574a0663b3ffe5208e08c82"
                    ]
                },
                {
                    "command": [
                        "rewrite ulp_neq_0; try exact Hx.",
                        "VernacExtend",
                        "f238c81f86fee33e6c3f8758edc44e684a536368"
                    ]
                },
                {
                    "command": [
                        "unfold canonic_exp, FLT_exp.",
                        "VernacExtend",
                        "ba83afafe19bdf8ad526af63819ff6444a6995f6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (bpow (ln_beta beta x)*bpow (-prec))%R.",
                        "VernacExtend",
                        "8c0cf4719d2881a56cf9f2403f88344f2f394ad6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "e041593c57ec6470673cc705c01d215d230e0676"
                    ]
                },
                {
                    "command": [
                        "apply bpow_gt_0.",
                        "VernacExtend",
                        "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
                    ]
                },
                {
                    "command": [
                        "now apply bpow_ln_beta_gt.",
                        "VernacExtend",
                        "75ad0f5554f34119193fb8aa126f1daa0e4d25bc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bpow_plus.",
                        "VernacExtend",
                        "9ebeb3f5611fe78274a1e2e0131c7f7ed66e1cfc"
                    ]
                },
                {
                    "command": [
                        "apply bpow_le.",
                        "VernacExtend",
                        "9264f19c0062a0a711efc832825406a995342e90"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_max_l.",
                        "VernacExtend",
                        "8e1e3b091d8ceba9cc377d96e8b784dc483851da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FLT_exp_monotone",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros ex ey.",
                        "VernacExtend",
                        "7d51edb189ea7a0af83090d038107c8985dcaf1f"
                    ]
                },
                {
                    "command": [
                        "unfold FLT_exp.",
                        "VernacExtend",
                        "d4f3b9f7d52d234d511b90934a943354be18194a"
                    ]
                },
                {
                    "command": [
                        "zify ; omega.",
                        "VernacExtend",
                        "5fb0df05710c307ca01829a575fcf81498a16c8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_NE_FLT",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "destruct NE_prop as [H|H].",
                        "VernacExtend",
                        "5770cb2840596659e7312e724aa4d3d133cb418e"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intros e.",
                        "VernacExtend",
                        "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
                    ]
                },
                {
                    "command": [
                        "unfold FLT_exp.",
                        "VernacExtend",
                        "d4f3b9f7d52d234d511b90934a943354be18194a"
                    ]
                },
                {
                    "command": [
                        "destruct (Zmax_spec (e - prec) emin) as [(H1,H2)|(H1,H2)] ; rewrite H2 ; clear H2.",
                        "VernacExtend",
                        "cebe8729dd1465953cb84b4a425e4178f3deef3e"
                    ]
                },
                {
                    "command": [
                        "generalize (Zmax_spec (e + 1 - prec) emin).",
                        "VernacExtend",
                        "56bf8cc229f20180e58bd03c0fb735fcb297fda7"
                    ]
                },
                {
                    "command": [
                        "generalize (Zmax_spec (e - prec + 1 - prec) emin).",
                        "VernacExtend",
                        "bcbaf34baacdec3a3f7858050e13d4bee6a879a6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "generalize (Zmax_spec (e + 1 - prec) emin).",
                        "VernacExtend",
                        "56bf8cc229f20180e58bd03c0fb735fcb297fda7"
                    ]
                },
                {
                    "command": [
                        "generalize (Zmax_spec (emin + 1 - prec) emin).",
                        "VernacExtend",
                        "97f6e28c08a2bb3061f4f95182de907dad772a77"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}