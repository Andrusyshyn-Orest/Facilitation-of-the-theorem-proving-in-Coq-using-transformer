{
    "filename": "compcert/flocq/Core/Fcore_rnd_ne.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Fcore_Raux.",
            "VernacRequire",
            "6a49ff899e4733a5492282770f91634f4e2bce84"
        ],
        [
            "Require Import Fcore_defs.",
            "VernacRequire",
            "a5831df34cd1384c0e8566554919e69e523ebc02"
        ],
        [
            "Require Import Fcore_rnd.",
            "VernacRequire",
            "e56b94f747b869d666d08e61f9804bdee8d2613c"
        ],
        [
            "Require Import Fcore_generic_fmt.",
            "VernacRequire",
            "cb86ef6ed7d243b0910cb42e7367eddef0ead8b4"
        ],
        [
            "Require Import Fcore_float_prop.",
            "VernacRequire",
            "cb1b82d62c5b9c01c03fb8d695d9166849c8babe"
        ],
        [
            "Require Import Fcore_ulp.",
            "VernacRequire",
            "a2773216dd151304931c9408d58e4ed4a9223717"
        ],
        [
            "Notation ZnearestE := (Znearest (fun x => negb (Zeven x))).",
            "VernacSyntacticDefinition",
            "614ef063be1a89f05311782c83e1c26dc16a9dee"
        ],
        [
            "Section Fcore_rnd_NE.",
            "VernacBeginSection",
            "c4998bf96cff74c2212d1794374d8cf5c8592839"
        ],
        [
            "Variable beta : radix.",
            "VernacAssumption",
            "5414570a6751198892ee4a13f107deb4c633e62b"
        ],
        [
            "Notation bpow e := (bpow beta e).",
            "VernacSyntacticDefinition",
            "c796e278ffd17ea9674b52f8e94413782272a594"
        ],
        [
            "Variable fexp : Z -> Z.",
            "VernacAssumption",
            "c9cf8938d8929b51922f4ec187aafa959003e732"
        ],
        [
            "Context { valid_exp : Valid_exp fexp }.",
            "VernacContext",
            "ee7e72f13eb494c423b2621bcb97f515165b66dc"
        ],
        [
            "Notation format := (generic_format beta fexp).",
            "VernacSyntacticDefinition",
            "8b86a2eae51a580a8d20d872218c8ad0ed495025"
        ],
        [
            "Notation canonic := (canonic beta fexp).",
            "VernacSyntacticDefinition",
            "59771e26db0c017b6c1b1cb35cb90133eea72133"
        ],
        [
            "Definition NE_prop (_ : R) f := exists g : float beta, f = F2R g /\\ canonic g /\\ Zeven (Fnum g) = true.",
            "VernacDefinition",
            "f6440f4a89bbec64053d8026f429f35d0434f046"
        ],
        [
            "Definition Rnd_NE_pt := Rnd_NG_pt format NE_prop.",
            "VernacDefinition",
            "fb9f9338f602018d1a3f4f62cc5d42d3907054a7"
        ],
        [
            "Definition DN_UP_parity_pos_prop := forall x xd xu, (0 < x)%R -> ~ format x -> canonic xd -> canonic xu -> F2R xd = round beta fexp Zfloor x -> F2R xu = round beta fexp Zceil x -> Zeven (Fnum xu) = negb (Zeven (Fnum xd)).",
            "VernacDefinition",
            "279f1502254f813df47727004335a64e70bdc128"
        ],
        [
            "Definition DN_UP_parity_prop := forall x xd xu, ~ format x -> canonic xd -> canonic xu -> F2R xd = round beta fexp Zfloor x -> F2R xu = round beta fexp Zceil x -> Zeven (Fnum xu) = negb (Zeven (Fnum xd)).",
            "VernacDefinition",
            "ab75c0663f0d12c40e82db57d6992214e0f008d3"
        ],
        [
            "Lemma DN_UP_parity_aux : DN_UP_parity_pos_prop -> DN_UP_parity_prop.",
            "VernacStartTheoremProof",
            "6b894795d37897a6bfc2247e620f7944f7e493a3"
        ],
        [
            "intros Hpos x xd xu Hfx Hd Hu Hxd Hxu.",
            "VernacExtend",
            "406996f436436fc33c373df2862496c782501297"
        ],
        [
            "destruct (total_order_T 0 x) as [[Hx|Hx]|Hx].",
            "VernacExtend",
            "1424ea1738586101e1849d9926c086d7a09fcc09"
        ],
        [
            "exact (Hpos x xd xu Hx Hfx Hd Hu Hxd Hxu).",
            "VernacExtend",
            "a01ea12729af6a67b17f0213c56eb85426a7570e"
        ],
        [
            "elim Hfx.",
            "VernacExtend",
            "d24ccfc59b1572e83e2363d6705c0af027a5f221"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "assert (Hx': (0 < -x)%R).",
            "VernacExtend",
            "a776e00c844f4224720b474cfb28872d5202c1d8"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "now rewrite Ropp_involutive, Ropp_0.",
            "VernacExtend",
            "da70967da346627da132dd3c5d482482aa9287dc"
        ],
        [
            "destruct xd as (md, ed).",
            "VernacExtend",
            "a9a818c6f1c70c2088e8053033678fd3abe586d4"
        ],
        [
            "destruct xu as (mu, eu).",
            "VernacExtend",
            "147ad00336b89a02d2af6d70a2b78f643a2897e3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- (Bool.negb_involutive (Zeven mu)).",
            "VernacExtend",
            "57b5b4f877cfc29062b06039f620f7d8b7d17320"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "rewrite <- (Zeven_opp mu), <- (Zeven_opp md).",
            "VernacExtend",
            "8ca64c279dbef0ab05a6b6e48448a1879ebab4ed"
        ],
        [
            "change (Zeven (Fnum (Float beta (-md) ed)) = negb (Zeven (Fnum (Float beta (-mu) eu)))).",
            "VernacExtend",
            "86a4eadb0f760fc5dd53a23b93401faf1af76c01"
        ],
        [
            "apply (Hpos (-x)%R _ _ Hx').",
            "VernacExtend",
            "9e227e406631d1e97e5f184b4b61e47be24dc8b7"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Hfx.",
            "VernacExtend",
            "0bac3501bbf18d129364e2cd3542de1ad4bac227"
        ],
        [
            "rewrite <- Ropp_involutive.",
            "VernacExtend",
            "4ee9a59bfaf834def46b370d487ed40fd11fa074"
        ],
        [
            "now apply generic_format_opp.",
            "VernacExtend",
            "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
        ],
        [
            "now apply canonic_opp.",
            "VernacExtend",
            "ee282820a596fb1c9bda98e046c60238bf4f68ea"
        ],
        [
            "now apply canonic_opp.",
            "VernacExtend",
            "ee282820a596fb1c9bda98e046c60238bf4f68ea"
        ],
        [
            "rewrite round_DN_opp, F2R_Zopp.",
            "VernacExtend",
            "9b23ea4d81c94eceb57f8665cc452c5fdeac879b"
        ],
        [
            "now apply f_equal.",
            "VernacExtend",
            "2be51066ac0713afbd2686f67010448cf5cd7ac9"
        ],
        [
            "rewrite round_UP_opp, F2R_Zopp.",
            "VernacExtend",
            "002e02bf5364586d8446fbd1357a1317bfd29f06"
        ],
        [
            "now apply f_equal.",
            "VernacExtend",
            "2be51066ac0713afbd2686f67010448cf5cd7ac9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class Exists_NE := exists_NE : Zeven beta = false \\/ forall e, ((fexp e < e)%Z -> (fexp (e + 1) < e)%Z) /\\ ((e <= fexp e)%Z -> fexp (fexp e + 1) = fexp e).",
            "VernacInductive",
            "16afc3217eeecd1846db8a84cd13c539196d6e70"
        ],
        [
            "Context { exists_NE_ : Exists_NE }.",
            "VernacContext",
            "6a46b0d8d244fd37df4bb3ebf6570d2569ae908b"
        ],
        [
            "Theorem DN_UP_parity_generic_pos : DN_UP_parity_pos_prop.",
            "VernacStartTheoremProof",
            "73b2d55e2e257781cf50d03d641708fdb7f2185a"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x xd xu H0x Hfx Hd Hu Hxd Hxu.",
            "VernacExtend",
            "bae893b7afc70cff5e439eeb84b89945cac155f1"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Hexa).",
            "VernacExtend",
            "1b313a35f65e3573b6a8a7efc11dfd72fb67b29b"
        ],
        [
            "specialize (Hexa (Rgt_not_eq _ _ H0x)).",
            "VernacExtend",
            "fff4ede4714b59aa8a24eb3a8094f6a2e551977e"
        ],
        [
            "generalize Hexa.",
            "VernacExtend",
            "1fbf90979a3c2ff8bc7a470c4b2e66475113e929"
        ],
        [
            "intros Hex.",
            "VernacExtend",
            "b47dae9c5fb5b156cf23320a194067e3e9c7cd7e"
        ],
        [
            "rewrite (Rabs_pos_eq _ (Rlt_le _ _ H0x)) in Hex.",
            "VernacExtend",
            "e4afe5caa35aca941f32f5b5c257decd057c27bd"
        ],
        [
            "destruct (Zle_or_lt ex (fexp ex)) as [Hxe|Hxe].",
            "VernacExtend",
            "6e6aedfb823b74079b98314811ecde675bfa640b"
        ],
        [
            "assert (Hd3 : Fnum xd = Z0).",
            "VernacExtend",
            "ce4fbed8cd1bffe8379c16917efde11e4b0ea2b4"
        ],
        [
            "apply F2R_eq_0_reg with beta (Fexp xd).",
            "VernacExtend",
            "baec1ccdcb35f9c46bb882f882c477c3bdb55756"
        ],
        [
            "change (F2R xd = R0).",
            "VernacExtend",
            "974d508073056f6fafcffd9bb1fc3548dd846e21"
        ],
        [
            "rewrite Hxd.",
            "VernacExtend",
            "f49650c89d1e9ec1911cad85d517434f8f98df2c"
        ],
        [
            "apply round_DN_small_pos with (1 := Hex) (2 := Hxe).",
            "VernacExtend",
            "a8dbc7a278c138865ab916beb88f2f17abf9216a"
        ],
        [
            "assert (Hu3 : xu = Float beta (1 * Zpower beta (fexp ex - fexp (fexp ex + 1))) (fexp (fexp ex + 1))).",
            "VernacExtend",
            "944ed3110afac8fdcfcf1942b34b57289f600e13"
        ],
        [
            "apply canonic_unicity with (1 := Hu).",
            "VernacExtend",
            "42f70e70df025234f375b818bffae58c94f64876"
        ],
        [
            "apply (f_equal fexp).",
            "VernacExtend",
            "f40028f9502b41bafc803163c189f61ef324b731"
        ],
        [
            "rewrite <- F2R_change_exp.",
            "VernacExtend",
            "6c4b506b9fbb8dfebb2c7ba7314667cd8348c177"
        ],
        [
            "now rewrite F2R_bpow, ln_beta_bpow.",
            "VernacExtend",
            "7e034513ed7b1bc8aeb59160f991671090a0b9cc"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "rewrite <- F2R_change_exp.",
            "VernacExtend",
            "6c4b506b9fbb8dfebb2c7ba7314667cd8348c177"
        ],
        [
            "rewrite F2R_bpow.",
            "VernacExtend",
            "1a4cfe10f0862954d9a9f895712a0180a5a8d49e"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "rewrite Hxu.",
            "VernacExtend",
            "822860848b60943cb7d2886c3e7c550a3b36e63f"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply round_UP_small_pos with (1 := Hex) (2 := Hxe).",
            "VernacExtend",
            "50ad022a88e9c2c442b50fa093ad5076059316bc"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "rewrite Hd3, Hu3.",
            "VernacExtend",
            "25e1384543af108eb95e23295536afcdc434049c"
        ],
        [
            "rewrite Zmult_1_l.",
            "VernacExtend",
            "0c423dfec549ae03a2bd5fd8b0e9a3eb07bee261"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct exists_NE_ as [H|H].",
            "VernacExtend",
            "53b28c0ac376bdbb12bc6a394795e42975b7a9e4"
        ],
        [
            "apply Zeven_Zpower_odd with (2 := H).",
            "VernacExtend",
            "b55d064e51b704393691bfa3d8a0f095b33b3339"
        ],
        [
            "apply Zle_minus_le_0.",
            "VernacExtend",
            "17de0fc9b8b61e8a1285ec4f7cd279f58ff9d877"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "rewrite (proj2 (H ex)).",
            "VernacExtend",
            "8339517d5d5f6a48d92b4d654f2143cff2421ea7"
        ],
        [
            "now rewrite Zminus_diag.",
            "VernacExtend",
            "d304898fc176a58951f34dcc4d3de22fb5634ec7"
        ],
        [
            "exact Hxe.",
            "VernacExtend",
            "56a0a4ed2f21c742ae9c1aed5d404a3a92b5101c"
        ],
        [
            "assert (Hd4: (bpow (ex - 1) <= Rabs (F2R xd) < bpow ex)%R).",
            "VernacExtend",
            "44e87db77561bf5fd1a659ffb974c55c00576a7f"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "rewrite Hxd.",
            "VernacExtend",
            "f49650c89d1e9ec1911cad85d517434f8f98df2c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (round_DN_pt beta fexp x).",
            "VernacExtend",
            "6e96adc12340c6ff55f6ed257d671cceb87cd90f"
        ],
        [
            "apply generic_format_bpow.",
            "VernacExtend",
            "2af66cea358ca19a1ce7ae8db9c4199157b1884b"
        ],
        [
            "ring_simplify (ex - 1 + 1)%Z.",
            "VernacExtend",
            "e15e6d08a1d7441e056146afec4dcbc55577b581"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Hex.",
            "VernacExtend",
            "0626b143f310ba29c3689980df03ba1efdab98c5"
        ],
        [
            "apply Rle_lt_trans with (2 := proj2 Hex).",
            "VernacExtend",
            "460ad974761f43eba1c3d0c02692674f2fca6970"
        ],
        [
            "apply (round_DN_pt beta fexp x).",
            "VernacExtend",
            "6e96adc12340c6ff55f6ed257d671cceb87cd90f"
        ],
        [
            "rewrite Hxd.",
            "VernacExtend",
            "f49650c89d1e9ec1911cad85d517434f8f98df2c"
        ],
        [
            "apply (round_DN_pt beta fexp x).",
            "VernacExtend",
            "6e96adc12340c6ff55f6ed257d671cceb87cd90f"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "assert (Hxe2 : (fexp (ex + 1) <= ex)%Z) by now apply valid_exp.",
            "VernacExtend",
            "e7e3eb98ca6f408a91867ab7d9b11c8f0f33469c"
        ],
        [
            "assert (Hud: (F2R xu = F2R xd + ulp beta fexp x)%R).",
            "VernacExtend",
            "45c21a2126e6c0899b2418a3ec083e8f5195dfdb"
        ],
        [
            "rewrite Hxu, Hxd.",
            "VernacExtend",
            "e35c8c357a180356ac4cdac01a2facc120e4a944"
        ],
        [
            "now apply round_UP_DN_ulp.",
            "VernacExtend",
            "4f0ff57c986c1d60b8c59234ca3ca3c5cc9750f4"
        ],
        [
            "destruct (total_order_T (bpow ex) (F2R xu)) as [[Hu2|Hu2]|Hu2].",
            "VernacExtend",
            "c9c128e8a8e4223272698abe05124747fcdca3ee"
        ],
        [
            "elim (Rlt_not_le _ _ Hu2).",
            "VernacExtend",
            "c1295ba7e314deca4c734e998c06be7506c34310"
        ],
        [
            "rewrite Hxu.",
            "VernacExtend",
            "822860848b60943cb7d2886c3e7c550a3b36e63f"
        ],
        [
            "apply round_bounded_large_pos...",
            "VernacExtend",
            "6b28924c9a09966f99dc468d1925327fdd784bbd"
        ],
        [
            "assert (Hu3: xu = Float beta (1 * Zpower beta (ex - fexp (ex + 1))) (fexp (ex + 1))).",
            "VernacExtend",
            "b0453cacd2638fc9d2904a04fb3d53fe9bd66fa0"
        ],
        [
            "apply canonic_unicity with (1 := Hu).",
            "VernacExtend",
            "42f70e70df025234f375b818bffae58c94f64876"
        ],
        [
            "apply (f_equal fexp).",
            "VernacExtend",
            "f40028f9502b41bafc803163c189f61ef324b731"
        ],
        [
            "rewrite <- F2R_change_exp.",
            "VernacExtend",
            "6c4b506b9fbb8dfebb2c7ba7314667cd8348c177"
        ],
        [
            "now rewrite F2R_bpow, ln_beta_bpow.",
            "VernacExtend",
            "7e034513ed7b1bc8aeb59160f991671090a0b9cc"
        ],
        [
            "now apply valid_exp.",
            "VernacExtend",
            "5859065e98ff5c98abcb51c1a8ae40ca10c878ed"
        ],
        [
            "rewrite <- Hu2.",
            "VernacExtend",
            "b63e9260f6451d9d1429867aa072f8581665ac50"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "rewrite <- F2R_change_exp.",
            "VernacExtend",
            "6c4b506b9fbb8dfebb2c7ba7314667cd8348c177"
        ],
        [
            "apply F2R_bpow.",
            "VernacExtend",
            "e729a16040ca91242ce5d010639655979d0cdd29"
        ],
        [
            "exact Hxe2.",
            "VernacExtend",
            "e752446f083adb9b3de11061e9ecdce9f324bc64"
        ],
        [
            "assert (Hd3: xd = Float beta (Zpower beta (ex - fexp ex) - 1) (fexp ex)).",
            "VernacExtend",
            "c582c88f373afdf61b3e710b8dcae1f621408357"
        ],
        [
            "assert (H: F2R xd = F2R (Float beta (Zpower beta (ex - fexp ex) - 1) (fexp ex))).",
            "VernacExtend",
            "b5884fd5b8bb2b50a112beeadd9de8c574896090"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z2R_minus.",
            "VernacExtend",
            "75c0e17ece028e1c09696e50b0c135aa8a6471e2"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "rewrite Rmult_plus_distr_r.",
            "VernacExtend",
            "ddbb6f4dc1ffc967497bf9fa73715334cda5e5a0"
        ],
        [
            "rewrite Z2R_Zpower, <- bpow_plus.",
            "VernacExtend",
            "8abbdfacba1eb72343060406726f4d1a1497af91"
        ],
        [
            "ring_simplify (ex - fexp ex + fexp ex)%Z.",
            "VernacExtend",
            "48d9634257fde3dc9c135d10043879fa312ede86"
        ],
        [
            "rewrite Hu2, Hud.",
            "VernacExtend",
            "ccc6e4ac724d57292568890054c1d1ce52ad7f14"
        ],
        [
            "rewrite ulp_neq_0;[idtac|now apply Rgt_not_eq].",
            "VernacExtend",
            "927a7fcfe90c7c39185e20ce632d2f6d4cfc7c3b"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "rewrite ln_beta_unique with beta x ex.",
            "VernacExtend",
            "de28d923ba03a6f76d15d2026998761316d26cf9"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "exact Hex.",
            "VernacExtend",
            "e0ee9de7cc2fcb930bb369f96acabead1395690e"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Zle_minus_le_0.",
            "VernacExtend",
            "17de0fc9b8b61e8a1285ec4f7cd279f58ff9d877"
        ],
        [
            "now apply Zlt_le_weak.",
            "VernacExtend",
            "8df137fb70ba9a1f8f0605f13095da8524766c66"
        ],
        [
            "apply canonic_unicity with (1 := Hd) (3 := H).",
            "VernacExtend",
            "fec803011d2c952ef1fc4365a85a9b3167b3216a"
        ],
        [
            "apply (f_equal fexp).",
            "VernacExtend",
            "f40028f9502b41bafc803163c189f61ef324b731"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "now apply ln_beta_unique.",
            "VernacExtend",
            "25016c394b96bdc6b7bd9805037fdb04b1e0ffba"
        ],
        [
            "rewrite Hd3, Hu3.",
            "VernacExtend",
            "25e1384543af108eb95e23295536afcdc434049c"
        ],
        [
            "unfold Fnum.",
            "VernacExtend",
            "1520aa3364ba9d5816b4b78802d72c0e3e764f7b"
        ],
        [
            "rewrite Zeven_mult.",
            "VernacExtend",
            "286fb8a84d5bae6a537c5cc1637ccb283083cd1e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Zminus at 2.",
            "VernacExtend",
            "3b399d6684e940e6f9b8d183864ee606be1cdff0"
        ],
        [
            "rewrite Zeven_plus.",
            "VernacExtend",
            "eeb0ce5bfbcdc5ec50bab699364ca261e08595a5"
        ],
        [
            "rewrite eqb_sym.",
            "VernacExtend",
            "4d8b1cded5764f59d17285513c692877af1d2759"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (negb (Zeven (beta ^ (ex - fexp ex)))).",
            "VernacExtend",
            "a3cd973dc369c4815648ffa7d6929b8dab224e1d"
        ],
        [
            "rewrite Bool.negb_involutive.",
            "VernacExtend",
            "da1efc84b3f93b723ae08463756226fd45a45b9d"
        ],
        [
            "rewrite (Zeven_Zpower beta (ex - fexp ex)).",
            "VernacExtend",
            "fa9908dbecab5a9894260fe6a29b0240e31812f6"
        ],
        [
            "2: omega.",
            "VernacExtend",
            "d479151185a43f07b17d29025d6b6de4845088dc"
        ],
        [
            "destruct exists_NE_.",
            "VernacExtend",
            "1622872a15d9ba3ba086ca9fff5ba98cadb53b80"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply Zeven_Zpower_odd with (2 := H).",
            "VernacExtend",
            "b55d064e51b704393691bfa3d8a0f095b33b3339"
        ],
        [
            "now apply Zle_minus_le_0.",
            "VernacExtend",
            "17c2cb27e85ea36789b13d90d3bf4957b04c6bb0"
        ],
        [
            "apply Zeven_Zpower.",
            "VernacExtend",
            "f389b7c601866926ce151dc72a29a6fb0d1a35ac"
        ],
        [
            "specialize (H ex).",
            "VernacExtend",
            "338d84680e65096d598839c860d1ea61fdb7632f"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "revert Hud.",
            "VernacExtend",
            "6ffb94c9acab1d200be5ef6fd75c77916bb92e0f"
        ],
        [
            "rewrite ulp_neq_0;[idtac|now apply Rgt_not_eq].",
            "VernacExtend",
            "927a7fcfe90c7c39185e20ce632d2f6d4cfc7c3b"
        ],
        [
            "unfold F2R.",
            "VernacExtend",
            "01074792470ba071b62f8438b8d9b8c922ca2998"
        ],
        [
            "rewrite Hd, Hu.",
            "VernacExtend",
            "dd932b7783be8c0d6791566a43c526dbc3a8d54a"
        ],
        [
            "unfold canonic_exp.",
            "VernacExtend",
            "993fc99c30cdbd2e74bd71e0fd5e49f000dffb04"
        ],
        [
            "rewrite ln_beta_unique with beta (F2R xu) ex.",
            "VernacExtend",
            "e9fee2ccec542e6bba3908eb06acb30638e3171a"
        ],
        [
            "rewrite ln_beta_unique with (1 := Hd4).",
            "VernacExtend",
            "2bc638b169e0793396eec4d698edaa880d7e20df"
        ],
        [
            "rewrite ln_beta_unique with (1 := Hexa).",
            "VernacExtend",
            "e21be61202b3319670ee8b76713f6c8bec8a44e7"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "replace (Fnum xu) with (Fnum xd + 1)%Z.",
            "VernacExtend",
            "3570724daa79d389e9fbcdff2a2609f45a3e28b4"
        ],
        [
            "rewrite Zeven_plus.",
            "VernacExtend",
            "eeb0ce5bfbcdc5ec50bab699364ca261e08595a5"
        ],
        [
            "now apply eqb_sym.",
            "VernacExtend",
            "7437b04a9a549a313b9580b25c569f9da60779af"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply eq_Z2R.",
            "VernacExtend",
            "ed31ca6bb4f2f5fc3c01443fad366367db69b7ed"
        ],
        [
            "rewrite Z2R_plus.",
            "VernacExtend",
            "acce6601b0322c726f9b248c200708805f7120a8"
        ],
        [
            "apply Rmult_eq_reg_r with (bpow (fexp ex)).",
            "VernacExtend",
            "52c659fc2ec057b4d40c0fee1744811759b627e2"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "489e84e15a0f0c3833f18764e3ff39e15bc66da3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (1 := proj1 Hex).",
            "VernacExtend",
            "d14d8ec6048f16059ab2c4d15d718a209b5d0bde"
        ],
        [
            "rewrite Hxu.",
            "VernacExtend",
            "822860848b60943cb7d2886c3e7c550a3b36e63f"
        ],
        [
            "apply (round_UP_pt beta fexp x).",
            "VernacExtend",
            "afbca80c904e52b7a144731e8074c4e9a598722a"
        ],
        [
            "exact Hu2.",
            "VernacExtend",
            "8c00c19fc897ff806a127b66b6148cae2c395fef"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rlt_le_trans with (1 := H0x).",
            "VernacExtend",
            "89c6990276b1811200ccb0cd261b1d5cb8c2faee"
        ],
        [
            "rewrite Hxu.",
            "VernacExtend",
            "822860848b60943cb7d2886c3e7c550a3b36e63f"
        ],
        [
            "apply (round_UP_pt beta fexp x).",
            "VernacExtend",
            "afbca80c904e52b7a144731e8074c4e9a598722a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem DN_UP_parity_generic : DN_UP_parity_prop.",
            "VernacStartTheoremProof",
            "09ea8e6cb6c3a566e1cc17000f65f5ed7a5e7e95"
        ],
        [
            "apply DN_UP_parity_aux.",
            "VernacExtend",
            "4dac1e308d4fad8a5603e024c04212c25cfcb5d3"
        ],
        [
            "apply DN_UP_parity_generic_pos.",
            "VernacExtend",
            "ec260dc564c3cb651975730e43bf952294ddbb9a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rnd_NE_pt_total : round_pred_total Rnd_NE_pt.",
            "VernacStartTheoremProof",
            "b0d4c096bc631fa8efab6fa9dda88ee8646c1b35"
        ],
        [
            "apply satisfies_any_imp_NG.",
            "VernacExtend",
            "b8d084aaba5ee20f31d37cb0259349de7930d09a"
        ],
        [
            "now apply generic_format_satisfies_any.",
            "VernacExtend",
            "87ed33de02f1c442f32bf004fde9ff462a917735"
        ],
        [
            "intros x d u Hf Hd Hu.",
            "VernacExtend",
            "3cdc4529aa6d2f8be6adf8f1a67fbea9edd2afb8"
        ],
        [
            "generalize (proj1 Hd).",
            "VernacExtend",
            "ffee7ecd5d4bc1c90cc2bcd73ab53b97d8ba08e1"
        ],
        [
            "unfold generic_format.",
            "VernacExtend",
            "a62257dc9b3d0326e5266d774af361152364eac7"
        ],
        [
            "set (ed := canonic_exp beta fexp d).",
            "VernacExtend",
            "7d4a294fd119a1d9b3d5ce5fc5699c96a9bb7205"
        ],
        [
            "set (md := Ztrunc (scaled_mantissa beta fexp d)).",
            "VernacExtend",
            "167ccc3bdcda0f428d3cd1467ce4249db0999ec4"
        ],
        [
            "intros Hd1.",
            "VernacExtend",
            "d3950cbf06b1d32474fe952177c921ed1348c7fa"
        ],
        [
            "case_eq (Zeven md) ; [ intros He | intros Ho ].",
            "VernacExtend",
            "23157f44ef348973200f7b9cd982ff33ad4705a9"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists (Float beta md ed).",
            "VernacExtend",
            "4a4664a82cd669312f817f1d372b000210aa7001"
        ],
        [
            "unfold Fcore_generic_fmt.canonic.",
            "VernacExtend",
            "5d06125055567fa5fda93feeb04046165136180c"
        ],
        [
            "rewrite <- Hd1.",
            "VernacExtend",
            "5a671b93bd7b63a875b678f43d41029d74d2073a"
        ],
        [
            "now repeat split.",
            "VernacExtend",
            "c72cd3622e1d20acc435e373d27c5276d1d324dc"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "generalize (proj1 Hu).",
            "VernacExtend",
            "9572653a3cc5ba518d5a16aa28599e4c889c6c3a"
        ],
        [
            "unfold generic_format.",
            "VernacExtend",
            "a62257dc9b3d0326e5266d774af361152364eac7"
        ],
        [
            "set (eu := canonic_exp beta fexp u).",
            "VernacExtend",
            "1fcf589e289ba86bf9bef52b7cde4a0503676754"
        ],
        [
            "set (mu := Ztrunc (scaled_mantissa beta fexp u)).",
            "VernacExtend",
            "e68530466ffa35473ecf7e20c6b67733ae93950a"
        ],
        [
            "intros Hu1.",
            "VernacExtend",
            "421f806413e5fe88f6c66bcebabd6a399284f58e"
        ],
        [
            "rewrite Hu1.",
            "VernacExtend",
            "b241a7300f4e4314fb2f3af67b7785daf765223c"
        ],
        [
            "eexists ; repeat split.",
            "VernacExtend",
            "c0251e7951458e245f775300676c2bcc22dbb1c6"
        ],
        [
            "unfold Fcore_generic_fmt.canonic.",
            "VernacExtend",
            "5d06125055567fa5fda93feeb04046165136180c"
        ],
        [
            "now rewrite <- Hu1.",
            "VernacExtend",
            "b2a4cf0b21d6306971fe99aef2414617b50a4374"
        ],
        [
            "rewrite (DN_UP_parity_generic x (Float beta md ed) (Float beta mu eu)).",
            "VernacExtend",
            "f586d39597dfe081f71b0a72c106f85d80ea5705"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Ho.",
            "VernacExtend",
            "86ac24b55b591405a3c0fee4740893654a59402c"
        ],
        [
            "exact Hf.",
            "VernacExtend",
            "e25e6849230bea1fb4d4eb83c79000be517c04a9"
        ],
        [
            "unfold Fcore_generic_fmt.canonic.",
            "VernacExtend",
            "5d06125055567fa5fda93feeb04046165136180c"
        ],
        [
            "now rewrite <- Hd1.",
            "VernacExtend",
            "4f6e337359a85b9b4c7678ebe69fbdb4515e070b"
        ],
        [
            "unfold Fcore_generic_fmt.canonic.",
            "VernacExtend",
            "5d06125055567fa5fda93feeb04046165136180c"
        ],
        [
            "now rewrite <- Hu1.",
            "VernacExtend",
            "b2a4cf0b21d6306971fe99aef2414617b50a4374"
        ],
        [
            "rewrite <- Hd1.",
            "VernacExtend",
            "5a671b93bd7b63a875b678f43d41029d74d2073a"
        ],
        [
            "apply Rnd_DN_pt_unicity with (1 := Hd).",
            "VernacExtend",
            "a2ec2461d5e844abb0a758cc70a11d90c8643537"
        ],
        [
            "now apply round_DN_pt.",
            "VernacExtend",
            "6510a9823447c9276f352893446580c47e73e896"
        ],
        [
            "rewrite <- Hu1.",
            "VernacExtend",
            "7f424de3c273ea77fe3a0b592298601857d0421c"
        ],
        [
            "apply Rnd_UP_pt_unicity with (1 := Hu).",
            "VernacExtend",
            "b6d25297a341d07e7007ec5b4b720beb1374a55c"
        ],
        [
            "now apply round_UP_pt.",
            "VernacExtend",
            "5d2cbd68b7b815a8c1e2a718d26431f0ff1e35c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rnd_NE_pt_monotone : round_pred_monotone Rnd_NE_pt.",
            "VernacStartTheoremProof",
            "ec34f67335048e5532bb329924507b29b38d496e"
        ],
        [
            "apply Rnd_NG_pt_monotone.",
            "VernacExtend",
            "320df116c0ee00c96c8e8971e0eedb621c439b6c"
        ],
        [
            "intros x d u Hd Hdn Hu Hun (cd, (Hd1, Hd2)) (cu, (Hu1, Hu2)).",
            "VernacExtend",
            "14ce6445a88d886d6489a9204ceffb26e8af9fbb"
        ],
        [
            "destruct (Req_dec x d) as [Hx|Hx].",
            "VernacExtend",
            "27b98bc39166fbf6adf56b91d2a25ed09f31f867"
        ],
        [
            "rewrite <- Hx.",
            "VernacExtend",
            "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Rnd_UP_pt_idempotent with (1 := Hu).",
            "VernacExtend",
            "eb3a978b90c9cf69fa0c0d97ac843409e0aa1246"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "rewrite (DN_UP_parity_aux DN_UP_parity_generic_pos x cd cu) in Hu2 ; try easy.",
            "VernacExtend",
            "a3e39cacd51efde8bb51d1423c51c5b05e25189a"
        ],
        [
            "now rewrite (proj2 Hd2) in Hu2.",
            "VernacExtend",
            "2e6d8bf4f664b34bfa24a675556c966ef8df7e26"
        ],
        [
            "intros Hf.",
            "VernacExtend",
            "0a34d3f570a7fa7521ff666decd218fe609c954f"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "now apply Rnd_DN_pt_idempotent with (1 := Hd).",
            "VernacExtend",
            "ec02a88029b2a727844848aada4f71e2752b2ab2"
        ],
        [
            "rewrite <- Hd1.",
            "VernacExtend",
            "5a671b93bd7b63a875b678f43d41029d74d2073a"
        ],
        [
            "apply Rnd_DN_pt_unicity with (1 := Hd).",
            "VernacExtend",
            "a2ec2461d5e844abb0a758cc70a11d90c8643537"
        ],
        [
            "now apply round_DN_pt.",
            "VernacExtend",
            "6510a9823447c9276f352893446580c47e73e896"
        ],
        [
            "rewrite <- Hu1.",
            "VernacExtend",
            "7f424de3c273ea77fe3a0b592298601857d0421c"
        ],
        [
            "apply Rnd_UP_pt_unicity with (1 := Hu).",
            "VernacExtend",
            "b6d25297a341d07e7007ec5b4b720beb1374a55c"
        ],
        [
            "now apply round_UP_pt.",
            "VernacExtend",
            "5d2cbd68b7b815a8c1e2a718d26431f0ff1e35c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rnd_NE_pt_round : round_pred Rnd_NE_pt.",
            "VernacStartTheoremProof",
            "1755eb0ef5a5822a9b201ab8882ef1f8329fb26f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rnd_NE_pt_total.",
            "VernacExtend",
            "fc43e2fe13dfb4ea18f1ffb05e54dd9755c6cc32"
        ],
        [
            "apply Rnd_NE_pt_monotone.",
            "VernacExtend",
            "f4f7ea8134509470323923c43ec6b52076f8f455"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_NE_pt_pos : forall x, (0 < x)%R -> Rnd_NE_pt x (round beta fexp ZnearestE x).",
            "VernacStartTheoremProof",
            "0b8ee899bc5d02bcb7bc3863e1a927e778e8e45d"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply round_N_pt.",
            "VernacExtend",
            "13fb42a7b2f37117e0935112a6bc96ec1ba5fa9c"
        ],
        [
            "unfold NE_prop.",
            "VernacExtend",
            "c025488eeb6a04a4791734be525d99552e142a69"
        ],
        [
            "set (mx := scaled_mantissa beta fexp x).",
            "VernacExtend",
            "52c1feb7b6e5a95dbd9ff270c94f42c57035f55c"
        ],
        [
            "set (xr := round beta fexp ZnearestE x).",
            "VernacExtend",
            "28b9bacaf000704a7d83c3e4a7d2065f0207c32b"
        ],
        [
            "destruct (Req_dec (mx - Z2R (Zfloor mx)) (/2)) as [Hm|Hm].",
            "VernacExtend",
            "d9d2e5361c164bc9c93114d68bfc66c912f43c99"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (Float beta (Ztrunc (scaled_mantissa beta fexp xr)) (canonic_exp beta fexp xr)).",
            "VernacExtend",
            "b01e3e6a908762aa80fd1b55fe69bd1a370cd04e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply round_N_pt...",
            "VernacExtend",
            "c4c42da2940b36dc7a6871ff18871f46c58efbb0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Fcore_generic_fmt.canonic.",
            "VernacExtend",
            "5d06125055567fa5fda93feeb04046165136180c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply round_N_pt...",
            "VernacExtend",
            "c4c42da2940b36dc7a6871ff18871f46c58efbb0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold xr, round, Znearest.",
            "VernacExtend",
            "f3e352cf21965f96f89cd8e16d6c3bb08919295d"
        ],
        [
            "fold mx.",
            "VernacExtend",
            "9d1c7c8d752e6753e4d83412636f178f9bc04816"
        ],
        [
            "rewrite Hm.",
            "VernacExtend",
            "a83613f2496ce8bb382bfee229040b06b8d1ef3c"
        ],
        [
            "rewrite Rcompare_Eq.",
            "VernacExtend",
            "908eb644f4489dc9bfd3757c906ed729025ad3c1"
        ],
        [
            "2: apply refl_equal.",
            "VernacExtend",
            "8c372e2f6cbcd04683701942a5ed90d543cc8b3b"
        ],
        [
            "case_eq (Zeven (Zfloor mx)) ; intros Hmx.",
            "VernacExtend",
            "0e167b15970e1ffe19c0dfbaafeced19e88568f7"
        ],
        [
            "change (Zeven (Ztrunc (scaled_mantissa beta fexp (round beta fexp Zfloor x))) = true).",
            "VernacExtend",
            "23b8a3c4e3150e3ad524f24ba77734e4a895b447"
        ],
        [
            "destruct (Rle_or_lt (round beta fexp Zfloor x) 0) as [Hr|Hr].",
            "VernacExtend",
            "5f64dbe20f760af15de59b49173f35d946b0e108"
        ],
        [
            "rewrite (Rle_antisym _ _ Hr).",
            "VernacExtend",
            "f4a5b9ce121bc17f1b7dfadb211b0bbdef22dc6d"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite Rmult_0_l.",
            "VernacExtend",
            "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
        ],
        [
            "change 0%R with (Z2R 0).",
            "VernacExtend",
            "0aca30e4eaa8ab73d6cf1051499c94fbbfc180f6"
        ],
        [
            "now rewrite (Ztrunc_Z2R 0).",
            "VernacExtend",
            "f26b44e040450d0a90eedf4037f5fb6850e72e8a"
        ],
        [
            "rewrite <- (round_0 beta fexp Zfloor).",
            "VernacExtend",
            "6c0b2bcfb6ac64fb40b4fc2ed547d877f5032e6f"
        ],
        [
            "apply round_le...",
            "VernacExtend",
            "51053993cc4ba694cc876f6a3af8469bbfde4b50"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "rewrite scaled_mantissa_DN...",
            "VernacExtend",
            "6392ad7ba33680b8b6a60f0226650352f2fa32cb"
        ],
        [
            "now rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d27986c7f3c113e4c1cfe86d8597084c9806942"
        ],
        [
            "change (Zeven (Ztrunc (scaled_mantissa beta fexp (round beta fexp Zceil x))) = true).",
            "VernacExtend",
            "31b446ba7207748bbe87a34e799dc133dc312578"
        ],
        [
            "destruct (ln_beta beta x) as (ex, Hex).",
            "VernacExtend",
            "21921c4b6ef8de5f8e2c767fee1f9565dd6a946e"
        ],
        [
            "specialize (Hex (Rgt_not_eq _ _ Hx)).",
            "VernacExtend",
            "32abedc89c1bc6c4ce8ffe91ee839810ce8bee32"
        ],
        [
            "rewrite (Rabs_pos_eq _ (Rlt_le _ _ Hx)) in Hex.",
            "VernacExtend",
            "3aad4fc7ef05dd4bf487611a1bcfbc31c1005a73"
        ],
        [
            "destruct (Z_lt_le_dec (fexp ex) ex) as [He|He].",
            "VernacExtend",
            "74976e04cdd9741134b388cee53c5407fad6fc9e"
        ],
        [
            "assert (Hu := round_bounded_large_pos _ _ Zceil _ _ He Hex).",
            "VernacExtend",
            "b0828a07afa8508278620babd392fa030bb65dd5"
        ],
        [
            "assert (Hfc: Zceil mx = (Zfloor mx + 1)%Z).",
            "VernacExtend",
            "2d0fb0f8f9473f2fe3bfa58415ed5a2f3eeda507"
        ],
        [
            "apply Zceil_floor_neq.",
            "VernacExtend",
            "02a89f502141b8b193de47d8c63b87b1a0083708"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite H in Hm.",
            "VernacExtend",
            "e2f59c01a8288b494cfaf9ac03b733f390720b7c"
        ],
        [
            "unfold Rminus in Hm.",
            "VernacExtend",
            "b79cfcf786d5adae1a0f0d55e979fc46be9ea0e9"
        ],
        [
            "rewrite Rplus_opp_r in Hm.",
            "VernacExtend",
            "83a2a7fdd6cf7812197d913049fb5dccf89dae6c"
        ],
        [
            "elim (Rlt_irrefl 0).",
            "VernacExtend",
            "8f1f232dcf06ac70c217f54d4c5ff71211967d65"
        ],
        [
            "rewrite Hm at 2.",
            "VernacExtend",
            "22af6d6a79018d00d6ae2d3c7687b48c833aa023"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "now apply (Z2R_lt 0 2).",
            "VernacExtend",
            "d115cb8bbe9692198c1512828eb7171baa80bc9e"
        ],
        [
            "destruct (proj2 Hu) as [Hu'|Hu'].",
            "VernacExtend",
            "048619fc9b43e9b5f31b0ad2ab9ac01e41f70f4f"
        ],
        [
            "unfold scaled_mantissa.",
            "VernacExtend",
            "dfa9f34cb89bdf420880d9412ca7126938d16f0a"
        ],
        [
            "rewrite canonic_exp_fexp_pos with (1 := conj (proj1 Hu) Hu').",
            "VernacExtend",
            "8144a9776942e59ecf6eae5df775dd8af3d29808"
        ],
        [
            "unfold round, F2R.",
            "VernacExtend",
            "f7df1e666cb069edfb380cdf26ce3a214adbfa27"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite canonic_exp_fexp_pos with (1 := Hex).",
            "VernacExtend",
            "51450464c0dd5e6378f5b8611b1c8456cc5c8522"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_r, Rmult_1_r.",
            "VernacExtend",
            "d22582b85c489a47adda69f7972f01c491afc3e8"
        ],
        [
            "rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
        ],
        [
            "fold mx.",
            "VernacExtend",
            "9d1c7c8d752e6753e4d83412636f178f9bc04816"
        ],
        [
            "rewrite Hfc.",
            "VernacExtend",
            "270a64769f73fe3277de8744fc41d60cf5fa14ed"
        ],
        [
            "now rewrite Zeven_plus, Hmx.",
            "VernacExtend",
            "382e837e576a401f8ab8e0828f32f4cf5f481738"
        ],
        [
            "rewrite Hu'.",
            "VernacExtend",
            "b088e68294d36f5ea2083251ffc2f47970f95b75"
        ],
        [
            "unfold scaled_mantissa, canonic_exp.",
            "VernacExtend",
            "b2045b552f5c61d5709df8bcdec224f4f528774a"
        ],
        [
            "rewrite ln_beta_bpow.",
            "VernacExtend",
            "562ed7a7f197615f8fb2cc276e6bc8e10357a919"
        ],
        [
            "rewrite <- bpow_plus, <- Z2R_Zpower.",
            "VernacExtend",
            "c2864b5ed5307e8b55621479c1cdb9d1bc2c3ce0"
        ],
        [
            "rewrite Ztrunc_Z2R.",
            "VernacExtend",
            "5d88ff3ba444a5e6845eb9bf9b6605e2ebc143e5"
        ],
        [
            "case_eq (Zeven beta) ; intros Hr.",
            "VernacExtend",
            "059b6a9e2ce7209303dfeb637887e3c196f54db3"
        ],
        [
            "destruct exists_NE_ as [Hs|Hs].",
            "VernacExtend",
            "129ea07d16b42a637cefd21afa1c5ad5a0f45074"
        ],
        [
            "now rewrite Hs in Hr.",
            "VernacExtend",
            "3ee3c651e538bc58a080a7e1a03b647860d5dbf4"
        ],
        [
            "destruct (Hs ex) as (H,_).",
            "VernacExtend",
            "327949304628efcd843100877dd65d5afb59def3"
        ],
        [
            "rewrite Zeven_Zpower.",
            "VernacExtend",
            "09d74de1df7262c3ea6e82a0b488771342df5296"
        ],
        [
            "exact Hr.",
            "VernacExtend",
            "1e548b1a16aa9c635ac09e08252a043420452c27"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (Zeven (Zfloor mx) = true).",
            "VernacExtend",
            "7de22236621181cebea04ce24d4306c4f3ff6bd2"
        ],
        [
            "2: now rewrite H in Hmx.",
            "VernacExtend",
            "885ebb6832f0fae39b86286b5edc2d1bebb2cb4f"
        ],
        [
            "replace (Zfloor mx) with (Zceil mx + -1)%Z by omega.",
            "VernacExtend",
            "c39c34531e857dea8c4450eed6136b11431cbcc7"
        ],
        [
            "rewrite Zeven_plus.",
            "VernacExtend",
            "eeb0ce5bfbcdc5ec50bab699364ca261e08595a5"
        ],
        [
            "apply eqb_true.",
            "VernacExtend",
            "3166e9b7d3e8c26b8d8ccdf607140d0d602598fa"
        ],
        [
            "unfold mx.",
            "VernacExtend",
            "f38c410a9e3cd67e97daa15534056fa489252a56"
        ],
        [
            "replace (Zceil (scaled_mantissa beta fexp x)) with (Zpower beta (ex - fexp ex)).",
            "VernacExtend",
            "b32359a868506a5671b5d9491c3e0a79f8ab5604"
        ],
        [
            "rewrite Zeven_Zpower_odd with (2 := Hr).",
            "VernacExtend",
            "182822287ec04d81a2705dd5963cba3b7077228c"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply eq_Z2R.",
            "VernacExtend",
            "ed31ca6bb4f2f5fc3c01443fad366367db69b7ed"
        ],
        [
            "rewrite Z2R_Zpower.",
            "VernacExtend",
            "0e8cafd25f951e5aef33961dec1cfc55c1c015cd"
        ],
        [
            "2: omega.",
            "VernacExtend",
            "d479151185a43f07b17d29025d6b6de4845088dc"
        ],
        [
            "apply Rmult_eq_reg_r with (bpow (fexp ex)).",
            "VernacExtend",
            "52c659fc2ec057b4d40c0fee1744811759b627e2"
        ],
        [
            "unfold Zminus.",
            "VernacExtend",
            "7085d4231409167767072da1bd24eb73ce98a683"
        ],
        [
            "rewrite bpow_plus.",
            "VernacExtend",
            "a66bde7144b19ede4a139295758f63aab8dcbea6"
        ],
        [
            "rewrite Rmult_assoc, <- bpow_plus, Zplus_opp_l, Rmult_1_r.",
            "VernacExtend",
            "35a8cfd482467e4565d64b013146bb920ea46fb4"
        ],
        [
            "pattern (fexp ex) ; rewrite <- canonic_exp_fexp_pos with (1 := Hex).",
            "VernacExtend",
            "a55b355daf5b9c2185efbc985a7817cd82fc0120"
        ],
        [
            "now apply sym_eq.",
            "VernacExtend",
            "fef6d39327ad6dbcb8bd592a66f35c86d0ac26ba"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "generalize (proj1 (valid_exp ex) He).",
            "VernacExtend",
            "2dba1ebf988ee66bb41180f64338861c1f0312d0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (Zeven (Zfloor mx) = true).",
            "VernacExtend",
            "7de22236621181cebea04ce24d4306c4f3ff6bd2"
        ],
        [
            "2: now rewrite H in Hmx.",
            "VernacExtend",
            "885ebb6832f0fae39b86286b5edc2d1bebb2cb4f"
        ],
        [
            "unfold mx, scaled_mantissa.",
            "VernacExtend",
            "742965ca7f19f369787722d17994e813679cb984"
        ],
        [
            "rewrite canonic_exp_fexp_pos with (1 := Hex).",
            "VernacExtend",
            "51450464c0dd5e6378f5b8611b1c8456cc5c8522"
        ],
        [
            "now rewrite mantissa_DN_small_pos.",
            "VernacExtend",
            "8b3afd1553c3ad1f6ff029f88fb6247def3b56ba"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros g Hg.",
            "VernacExtend",
            "a19e190760c5ecb84b3f0f8610473255d14ceefd"
        ],
        [
            "destruct (Req_dec x g) as [Hxg|Hxg].",
            "VernacExtend",
            "d34bcd5a8aa95ac4050e8b752c10cf5c312545ec"
        ],
        [
            "rewrite <- Hxg.",
            "VernacExtend",
            "a5920f8cce92eb94975d65b9324a30c45bf1427c"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply round_generic...",
            "VernacExtend",
            "44537c9bd6bbe98a69c9d38bb5bf2943db0475ff"
        ],
        [
            "rewrite Hxg.",
            "VernacExtend",
            "c813beb5e2ca01c6fa1bc51cb63d7b5a20aa1660"
        ],
        [
            "apply Hg.",
            "VernacExtend",
            "01c1d3461bd6fa059f36624dcd703fe73a0894a8"
        ],
        [
            "set (d := round beta fexp Zfloor x).",
            "VernacExtend",
            "f38fc386d065e9fc4888548d4ea25105b4b898aa"
        ],
        [
            "set (u := round beta fexp Zceil x).",
            "VernacExtend",
            "7522bf6169907d046b7e37dc16976c1a53ab0adf"
        ],
        [
            "apply Rnd_N_pt_unicity with (d := d) (u := u) (4 := Hg).",
            "VernacExtend",
            "b3eae42961bf7d55abfadc1f865a9c86bfcbf338"
        ],
        [
            "now apply round_DN_pt.",
            "VernacExtend",
            "6510a9823447c9276f352893446580c47e73e896"
        ],
        [
            "now apply round_UP_pt.",
            "VernacExtend",
            "5d2cbd68b7b815a8c1e2a718d26431f0ff1e35c6"
        ],
        [
            "2: now apply round_N_pt.",
            "VernacExtend",
            "ef1035b0eedd1709b8f43a335efc6c7e377ab6bc"
        ],
        [
            "rewrite <- (scaled_mantissa_mult_bpow beta fexp x).",
            "VernacExtend",
            "b70ce70c7793da5a0ab4743dcf1c6b1340aa8511"
        ],
        [
            "unfold d, u, round, F2R.",
            "VernacExtend",
            "5c0f4362d7565147ecec498fc727f487d411fa5d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold mx.",
            "VernacExtend",
            "9d1c7c8d752e6753e4d83412636f178f9bc04816"
        ],
        [
            "rewrite <- 2!Rmult_minus_distr_r.",
            "VernacExtend",
            "644e2b11edfd05ca579b869a9abaf9f6e36b4229"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Rmult_eq_reg_r in H.",
            "VernacExtend",
            "0b0d907b4ef212189d65ef36e500eae807469196"
        ],
        [
            "apply Hm.",
            "VernacExtend",
            "4945492c05b96129bcb747a3f727831b55a19496"
        ],
        [
            "apply Rcompare_Eq_inv.",
            "VernacExtend",
            "6e661ffffe0f1ea93fb8694c736ffd7aa1b52a56"
        ],
        [
            "rewrite Rcompare_floor_ceil_mid.",
            "VernacExtend",
            "5162baf3503f28f740b59e5faf39778bf47ab2c9"
        ],
        [
            "now apply Rcompare_Eq.",
            "VernacExtend",
            "54a2cc66495312859e168ad5f6904ba269f3ac6f"
        ],
        [
            "contradict Hxg.",
            "VernacExtend",
            "effc30e0891ff32aaa28040ab25c18b17cde38d6"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Rnd_N_pt_idempotent with (1 := Hg).",
            "VernacExtend",
            "96d179bc2436fb2cc10c5e6a54c03e78f24a8736"
        ],
        [
            "rewrite <- (scaled_mantissa_mult_bpow beta fexp x).",
            "VernacExtend",
            "b70ce70c7793da5a0ab4743dcf1c6b1340aa8511"
        ],
        [
            "fold mx.",
            "VernacExtend",
            "9d1c7c8d752e6753e4d83412636f178f9bc04816"
        ],
        [
            "rewrite <- Hxg.",
            "VernacExtend",
            "a5920f8cce92eb94975d65b9324a30c45bf1427c"
        ],
        [
            "change (Z2R (Zfloor mx) * bpow (canonic_exp beta fexp x))%R with d.",
            "VernacExtend",
            "9c5efaa8c1a81dc2e5f81aa3b8feb642e80d7c9e"
        ],
        [
            "now eapply round_DN_pt.",
            "VernacExtend",
            "1345da7868630ea66371d5d26c7a6dbe2fb76eb3"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply bpow_gt_0.",
            "VernacExtend",
            "51431cbce9a44d56b4b1857315ff3c6ca3c98e7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_NE_opp : forall x, round beta fexp ZnearestE (-x) = (- round beta fexp ZnearestE x)%R.",
            "VernacStartTheoremProof",
            "58a9f2c2b4923ab847fb5383ac49b6134e251d0c"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold round.",
            "VernacExtend",
            "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite scaled_mantissa_opp, canonic_exp_opp.",
            "VernacExtend",
            "fdc51b02eb5f867b58e719b5e976571d5682744f"
        ],
        [
            "rewrite Znearest_opp.",
            "VernacExtend",
            "350c75d1f4325109ea758b936da66b03e76bbc75"
        ],
        [
            "rewrite <- F2R_Zopp.",
            "VernacExtend",
            "fee744a8cf0293b57e4bea5c81b22afef33baeb7"
        ],
        [
            "apply (f_equal (fun v => F2R (Float beta (-v) _))).",
            "VernacExtend",
            "02f27a921bb45dbb46c3c8f0b44867a42659536b"
        ],
        [
            "set (m := scaled_mantissa beta fexp x).",
            "VernacExtend",
            "98421f2b0ccbed34d88fa5d7200dec0219270662"
        ],
        [
            "unfold Znearest.",
            "VernacExtend",
            "c6481393d02b9e0a0e8669a35ef29881ad118b89"
        ],
        [
            "case Rcompare ; trivial.",
            "VernacExtend",
            "b011cfd7a2ef210a1bc1482563ff68286221bdab"
        ],
        [
            "apply (f_equal (fun (b : bool) => if b then Zceil m else Zfloor m)).",
            "VernacExtend",
            "ed4373b60bf3d137eeb356dd7312cc207193ee70"
        ],
        [
            "rewrite Bool.negb_involutive.",
            "VernacExtend",
            "da1efc84b3f93b723ae08463756226fd45a45b9d"
        ],
        [
            "rewrite Zeven_opp.",
            "VernacExtend",
            "dc99bb7da3f69e92a5bc9359960f28212b4647b5"
        ],
        [
            "rewrite Zeven_plus.",
            "VernacExtend",
            "eeb0ce5bfbcdc5ec50bab699364ca261e08595a5"
        ],
        [
            "now rewrite eqb_sym.",
            "VernacExtend",
            "518831a96ae40eb35702398fec87a050c1dd7e58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma round_NE_abs: forall x : R, round beta fexp ZnearestE (Rabs x) = Rabs (round beta fexp ZnearestE x).",
            "VernacStartTheoremProof",
            "69081ec0f235a1dc7570f2116dfb9ec957253ec3"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "unfold Rabs at 2.",
            "VernacExtend",
            "0354e25fdb84183a0daa6b591371c4f1db040f3a"
        ],
        [
            "destruct (Rcase_abs x) as [Hx|Hx].",
            "VernacExtend",
            "46050b72b19634f867951da323e8f2bfd81f6e9d"
        ],
        [
            "rewrite round_NE_opp.",
            "VernacExtend",
            "a6611aff9db13481c6dc586ee15868bd4d834317"
        ],
        [
            "apply Rabs_left1.",
            "VernacExtend",
            "c7a513c7a52a5538ff8ca334a86949b1d00e34bd"
        ],
        [
            "rewrite <- (round_0 beta fexp ZnearestE).",
            "VernacExtend",
            "bbf9188dbad62f41a75125f29f28e9e9171d44d9"
        ],
        [
            "apply round_le...",
            "VernacExtend",
            "51053993cc4ba694cc876f6a3af8469bbfde4b50"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Rabs_pos_eq.",
            "VernacExtend",
            "84ed980db60aa71de2fd237885e8f143313c5575"
        ],
        [
            "rewrite <- (round_0 beta fexp ZnearestE).",
            "VernacExtend",
            "bbf9188dbad62f41a75125f29f28e9e9171d44d9"
        ],
        [
            "apply round_le...",
            "VernacExtend",
            "51053993cc4ba694cc876f6a3af8469bbfde4b50"
        ],
        [
            "now apply Rge_le.",
            "VernacExtend",
            "a9d375e1f97c153d1fcc15fabbf40ef83aa1533a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem round_NE_pt : forall x, Rnd_NE_pt x (round beta fexp ZnearestE x).",
            "VernacStartTheoremProof",
            "6efc70ce1190cd7a8e854b8a28d2a007003cd9ad"
        ],
        [
            "Proof with auto with typeclass_instances.",
            "VernacProof",
            "c16343efcd37779057959eb30e1ff5afec0a83eb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (total_order_T x 0) as [[Hx|Hx]|Hx].",
            "VernacExtend",
            "ede0cc349df7b17043690d1f6a6c849ac0414020"
        ],
        [
            "apply Rnd_NG_pt_sym.",
            "VernacExtend",
            "b368fb4a6d342bd31b4f6ca4dc31d15bd36caa96"
        ],
        [
            "apply generic_format_opp.",
            "VernacExtend",
            "62be59b59957b39ddc7a6a91ae10b7eda813132a"
        ],
        [
            "unfold NE_prop.",
            "VernacExtend",
            "c025488eeb6a04a4791734be525d99552e142a69"
        ],
        [
            "intros _ f ((mg,eg),(H1,(H2,H3))).",
            "VernacExtend",
            "2a60de7f0d2ecd2e43abcacdd92af7d8d09663e5"
        ],
        [
            "exists (Float beta (- mg) eg).",
            "VernacExtend",
            "fedaf13346f2544a18fa07bee12e68dc474216f9"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "now rewrite F2R_Zopp.",
            "VernacExtend",
            "79e484fd342a4cf71e3bd16cb3d0196991c429f7"
        ],
        [
            "now apply canonic_opp.",
            "VernacExtend",
            "ee282820a596fb1c9bda98e046c60238bf4f68ea"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Zeven_opp.",
            "VernacExtend",
            "67ccc544e32ea12c308342776769fb150e16edb4"
        ],
        [
            "rewrite <- round_NE_opp.",
            "VernacExtend",
            "92904173a03dd09d3141ea91bda31cb833ec0c68"
        ],
        [
            "apply round_NE_pt_pos.",
            "VernacExtend",
            "eaa599102f434c90de4598fb634c5f2347eeb731"
        ],
        [
            "now apply Ropp_0_gt_lt_contravar.",
            "VernacExtend",
            "ecb98ecd6b09bc328efde571a05a97f968602afa"
        ],
        [
            "rewrite Hx, round_0...",
            "VernacExtend",
            "2812e147924da54ba966c5efe832484a33eb854b"
        ],
        [
            "apply Rnd_NG_pt_refl.",
            "VernacExtend",
            "1f5f02278d93b6f96e720115ab571fca7b4dc0ae"
        ],
        [
            "apply generic_format_0.",
            "VernacExtend",
            "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
        ],
        [
            "now apply round_NE_pt_pos.",
            "VernacExtend",
            "49ec51adef71fc152cd7a3392332954a6ebb7955"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fcore_rnd_NE.",
            "VernacEndSegment",
            "cca6ef6b5d31fab081f80bb7323b037e76f120bc"
        ],
        [
            "Notation rndNE := ZnearestE (only parsing).",
            "VernacSyntacticDefinition",
            "4bffa6c5992dbc452e808bbf90dc05d242158807"
        ]
    ],
    "proofs": [
        {
            "name": "DN_UP_parity_aux",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros Hpos x xd xu Hfx Hd Hu Hxd Hxu.",
                        "VernacExtend",
                        "406996f436436fc33c373df2862496c782501297"
                    ]
                },
                {
                    "command": [
                        "destruct (total_order_T 0 x) as [[Hx|Hx]|Hx].",
                        "VernacExtend",
                        "1424ea1738586101e1849d9926c086d7a09fcc09"
                    ]
                },
                {
                    "command": [
                        "exact (Hpos x xd xu Hx Hfx Hd Hu Hxd Hxu).",
                        "VernacExtend",
                        "a01ea12729af6a67b17f0213c56eb85426a7570e"
                    ]
                },
                {
                    "command": [
                        "elim Hfx.",
                        "VernacExtend",
                        "d24ccfc59b1572e83e2363d6705c0af027a5f221"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx.",
                        "VernacExtend",
                        "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
                    ]
                },
                {
                    "command": [
                        "apply generic_format_0.",
                        "VernacExtend",
                        "dc3c4afb013f89f69b2f0e71216d8926d296b3bd"
                    ]
                },
                {
                    "command": [
                        "assert (Hx': (0 < -x)%R).",
                        "VernacExtend",
                        "a776e00c844f4224720b474cfb28872d5202c1d8"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ropp_involutive, Ropp_0.",
                        "VernacExtend",
                        "da70967da346627da132dd3c5d482482aa9287dc"
                    ]
                },
                {
                    "command": [
                        "destruct xd as (md, ed).",
                        "VernacExtend",
                        "a9a818c6f1c70c2088e8053033678fd3abe586d4"
                    ]
                },
                {
                    "command": [
                        "destruct xu as (mu, eu).",
                        "VernacExtend",
                        "147ad00336b89a02d2af6d70a2b78f643a2897e3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Bool.negb_involutive (Zeven mu)).",
                        "VernacExtend",
                        "57b5b4f877cfc29062b06039f620f7d8b7d17320"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zeven_opp mu), <- (Zeven_opp md).",
                        "VernacExtend",
                        "8ca64c279dbef0ab05a6b6e48448a1879ebab4ed"
                    ]
                },
                {
                    "command": [
                        "change (Zeven (Fnum (Float beta (-md) ed)) = negb (Zeven (Fnum (Float beta (-mu) eu)))).",
                        "VernacExtend",
                        "86a4eadb0f760fc5dd53a23b93401faf1af76c01"
                    ]
                },
                {
                    "command": [
                        "apply (Hpos (-x)%R _ _ Hx').",
                        "VernacExtend",
                        "9e227e406631d1e97e5f184b4b61e47be24dc8b7"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Hfx.",
                        "VernacExtend",
                        "0bac3501bbf18d129364e2cd3542de1ad4bac227"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_involutive.",
                        "VernacExtend",
                        "4ee9a59bfaf834def46b370d487ed40fd11fa074"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_opp.",
                        "VernacExtend",
                        "9854a3077e0909e22e2b3e762d2cc1450d4abf80"
                    ]
                },
                {
                    "command": [
                        "now apply canonic_opp.",
                        "VernacExtend",
                        "ee282820a596fb1c9bda98e046c60238bf4f68ea"
                    ]
                },
                {
                    "command": [
                        "now apply canonic_opp.",
                        "VernacExtend",
                        "ee282820a596fb1c9bda98e046c60238bf4f68ea"
                    ]
                },
                {
                    "command": [
                        "rewrite round_DN_opp, F2R_Zopp.",
                        "VernacExtend",
                        "9b23ea4d81c94eceb57f8665cc452c5fdeac879b"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal.",
                        "VernacExtend",
                        "2be51066ac0713afbd2686f67010448cf5cd7ac9"
                    ]
                },
                {
                    "command": [
                        "rewrite round_UP_opp, F2R_Zopp.",
                        "VernacExtend",
                        "002e02bf5364586d8446fbd1357a1317bfd29f06"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal.",
                        "VernacExtend",
                        "2be51066ac0713afbd2686f67010448cf5cd7ac9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "DN_UP_parity_generic",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "apply DN_UP_parity_aux.",
                        "VernacExtend",
                        "4dac1e308d4fad8a5603e024c04212c25cfcb5d3"
                    ]
                },
                {
                    "command": [
                        "apply DN_UP_parity_generic_pos.",
                        "VernacExtend",
                        "ec260dc564c3cb651975730e43bf952294ddbb9a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rnd_NE_pt_total",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "apply satisfies_any_imp_NG.",
                        "VernacExtend",
                        "b8d084aaba5ee20f31d37cb0259349de7930d09a"
                    ]
                },
                {
                    "command": [
                        "now apply generic_format_satisfies_any.",
                        "VernacExtend",
                        "87ed33de02f1c442f32bf004fde9ff462a917735"
                    ]
                },
                {
                    "command": [
                        "intros x d u Hf Hd Hu.",
                        "VernacExtend",
                        "3cdc4529aa6d2f8be6adf8f1a67fbea9edd2afb8"
                    ]
                },
                {
                    "command": [
                        "generalize (proj1 Hd).",
                        "VernacExtend",
                        "ffee7ecd5d4bc1c90cc2bcd73ab53b97d8ba08e1"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format.",
                        "VernacExtend",
                        "a62257dc9b3d0326e5266d774af361152364eac7"
                    ]
                },
                {
                    "command": [
                        "set (ed := canonic_exp beta fexp d).",
                        "VernacExtend",
                        "7d4a294fd119a1d9b3d5ce5fc5699c96a9bb7205"
                    ]
                },
                {
                    "command": [
                        "set (md := Ztrunc (scaled_mantissa beta fexp d)).",
                        "VernacExtend",
                        "167ccc3bdcda0f428d3cd1467ce4249db0999ec4"
                    ]
                },
                {
                    "command": [
                        "intros Hd1.",
                        "VernacExtend",
                        "d3950cbf06b1d32474fe952177c921ed1348c7fa"
                    ]
                },
                {
                    "command": [
                        "case_eq (Zeven md) ; [ intros He | intros Ho ].",
                        "VernacExtend",
                        "23157f44ef348973200f7b9cd982ff33ad4705a9"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists (Float beta md ed).",
                        "VernacExtend",
                        "4a4664a82cd669312f817f1d372b000210aa7001"
                    ]
                },
                {
                    "command": [
                        "unfold Fcore_generic_fmt.canonic.",
                        "VernacExtend",
                        "5d06125055567fa5fda93feeb04046165136180c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hd1.",
                        "VernacExtend",
                        "5a671b93bd7b63a875b678f43d41029d74d2073a"
                    ]
                },
                {
                    "command": [
                        "now repeat split.",
                        "VernacExtend",
                        "c72cd3622e1d20acc435e373d27c5276d1d324dc"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "generalize (proj1 Hu).",
                        "VernacExtend",
                        "9572653a3cc5ba518d5a16aa28599e4c889c6c3a"
                    ]
                },
                {
                    "command": [
                        "unfold generic_format.",
                        "VernacExtend",
                        "a62257dc9b3d0326e5266d774af361152364eac7"
                    ]
                },
                {
                    "command": [
                        "set (eu := canonic_exp beta fexp u).",
                        "VernacExtend",
                        "1fcf589e289ba86bf9bef52b7cde4a0503676754"
                    ]
                },
                {
                    "command": [
                        "set (mu := Ztrunc (scaled_mantissa beta fexp u)).",
                        "VernacExtend",
                        "e68530466ffa35473ecf7e20c6b67733ae93950a"
                    ]
                },
                {
                    "command": [
                        "intros Hu1.",
                        "VernacExtend",
                        "421f806413e5fe88f6c66bcebabd6a399284f58e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hu1.",
                        "VernacExtend",
                        "b241a7300f4e4314fb2f3af67b7785daf765223c"
                    ]
                },
                {
                    "command": [
                        "eexists ; repeat split.",
                        "VernacExtend",
                        "c0251e7951458e245f775300676c2bcc22dbb1c6"
                    ]
                },
                {
                    "command": [
                        "unfold Fcore_generic_fmt.canonic.",
                        "VernacExtend",
                        "5d06125055567fa5fda93feeb04046165136180c"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Hu1.",
                        "VernacExtend",
                        "b2a4cf0b21d6306971fe99aef2414617b50a4374"
                    ]
                },
                {
                    "command": [
                        "rewrite (DN_UP_parity_generic x (Float beta md ed) (Float beta mu eu)).",
                        "VernacExtend",
                        "f586d39597dfe081f71b0a72c106f85d80ea5705"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ho.",
                        "VernacExtend",
                        "86ac24b55b591405a3c0fee4740893654a59402c"
                    ]
                },
                {
                    "command": [
                        "exact Hf.",
                        "VernacExtend",
                        "e25e6849230bea1fb4d4eb83c79000be517c04a9"
                    ]
                },
                {
                    "command": [
                        "unfold Fcore_generic_fmt.canonic.",
                        "VernacExtend",
                        "5d06125055567fa5fda93feeb04046165136180c"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Hd1.",
                        "VernacExtend",
                        "4f6e337359a85b9b4c7678ebe69fbdb4515e070b"
                    ]
                },
                {
                    "command": [
                        "unfold Fcore_generic_fmt.canonic.",
                        "VernacExtend",
                        "5d06125055567fa5fda93feeb04046165136180c"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Hu1.",
                        "VernacExtend",
                        "b2a4cf0b21d6306971fe99aef2414617b50a4374"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hd1.",
                        "VernacExtend",
                        "5a671b93bd7b63a875b678f43d41029d74d2073a"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_DN_pt_unicity with (1 := Hd).",
                        "VernacExtend",
                        "a2ec2461d5e844abb0a758cc70a11d90c8643537"
                    ]
                },
                {
                    "command": [
                        "now apply round_DN_pt.",
                        "VernacExtend",
                        "6510a9823447c9276f352893446580c47e73e896"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hu1.",
                        "VernacExtend",
                        "7f424de3c273ea77fe3a0b592298601857d0421c"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_UP_pt_unicity with (1 := Hu).",
                        "VernacExtend",
                        "b6d25297a341d07e7007ec5b4b720beb1374a55c"
                    ]
                },
                {
                    "command": [
                        "now apply round_UP_pt.",
                        "VernacExtend",
                        "5d2cbd68b7b815a8c1e2a718d26431f0ff1e35c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rnd_NE_pt_monotone",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "apply Rnd_NG_pt_monotone.",
                        "VernacExtend",
                        "320df116c0ee00c96c8e8971e0eedb621c439b6c"
                    ]
                },
                {
                    "command": [
                        "intros x d u Hd Hdn Hu Hun (cd, (Hd1, Hd2)) (cu, (Hu1, Hu2)).",
                        "VernacExtend",
                        "14ce6445a88d886d6489a9204ceffb26e8af9fbb"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec x d) as [Hx|Hx].",
                        "VernacExtend",
                        "27b98bc39166fbf6adf56b91d2a25ed09f31f867"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx.",
                        "VernacExtend",
                        "13b1fe1d3642dcaed8a4fc1155087caafd1bfc1e"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_UP_pt_idempotent with (1 := Hu).",
                        "VernacExtend",
                        "eb3a978b90c9cf69fa0c0d97ac843409e0aa1246"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "086fbf2e7628a02e1fc1ade44d17fcceedd5ab1d"
                    ]
                },
                {
                    "command": [
                        "apply Hd.",
                        "VernacExtend",
                        "b2c76316200582fcad9318af1ed397a8dea483e3"
                    ]
                },
                {
                    "command": [
                        "rewrite (DN_UP_parity_aux DN_UP_parity_generic_pos x cd cu) in Hu2 ; try easy.",
                        "VernacExtend",
                        "a3e39cacd51efde8bb51d1423c51c5b05e25189a"
                    ]
                },
                {
                    "command": [
                        "now rewrite (proj2 Hd2) in Hu2.",
                        "VernacExtend",
                        "2e6d8bf4f664b34bfa24a675556c966ef8df7e26"
                    ]
                },
                {
                    "command": [
                        "intros Hf.",
                        "VernacExtend",
                        "0a34d3f570a7fa7521ff666decd218fe609c954f"
                    ]
                },
                {
                    "command": [
                        "apply Hx.",
                        "VernacExtend",
                        "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "now apply Rnd_DN_pt_idempotent with (1 := Hd).",
                        "VernacExtend",
                        "ec02a88029b2a727844848aada4f71e2752b2ab2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hd1.",
                        "VernacExtend",
                        "5a671b93bd7b63a875b678f43d41029d74d2073a"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_DN_pt_unicity with (1 := Hd).",
                        "VernacExtend",
                        "a2ec2461d5e844abb0a758cc70a11d90c8643537"
                    ]
                },
                {
                    "command": [
                        "now apply round_DN_pt.",
                        "VernacExtend",
                        "6510a9823447c9276f352893446580c47e73e896"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hu1.",
                        "VernacExtend",
                        "7f424de3c273ea77fe3a0b592298601857d0421c"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_UP_pt_unicity with (1 := Hu).",
                        "VernacExtend",
                        "b6d25297a341d07e7007ec5b4b720beb1374a55c"
                    ]
                },
                {
                    "command": [
                        "now apply round_UP_pt.",
                        "VernacExtend",
                        "5d2cbd68b7b815a8c1e2a718d26431f0ff1e35c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rnd_NE_pt_round",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_NE_pt_total.",
                        "VernacExtend",
                        "fc43e2fe13dfb4ea18f1ffb05e54dd9755c6cc32"
                    ]
                },
                {
                    "command": [
                        "apply Rnd_NE_pt_monotone.",
                        "VernacExtend",
                        "f4f7ea8134509470323923c43ec6b52076f8f455"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "round_NE_opp",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold round.",
                        "VernacExtend",
                        "f3d1b03811d5ac6ab6c3f71cfc7300bcd9d60887"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite scaled_mantissa_opp, canonic_exp_opp.",
                        "VernacExtend",
                        "fdc51b02eb5f867b58e719b5e976571d5682744f"
                    ]
                },
                {
                    "command": [
                        "rewrite Znearest_opp.",
                        "VernacExtend",
                        "350c75d1f4325109ea758b936da66b03e76bbc75"
                    ]
                },
                {
                    "command": [
                        "rewrite <- F2R_Zopp.",
                        "VernacExtend",
                        "fee744a8cf0293b57e4bea5c81b22afef33baeb7"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun v => F2R (Float beta (-v) _))).",
                        "VernacExtend",
                        "02f27a921bb45dbb46c3c8f0b44867a42659536b"
                    ]
                },
                {
                    "command": [
                        "set (m := scaled_mantissa beta fexp x).",
                        "VernacExtend",
                        "98421f2b0ccbed34d88fa5d7200dec0219270662"
                    ]
                },
                {
                    "command": [
                        "unfold Znearest.",
                        "VernacExtend",
                        "c6481393d02b9e0a0e8669a35ef29881ad118b89"
                    ]
                },
                {
                    "command": [
                        "case Rcompare ; trivial.",
                        "VernacExtend",
                        "b011cfd7a2ef210a1bc1482563ff68286221bdab"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun (b : bool) => if b then Zceil m else Zfloor m)).",
                        "VernacExtend",
                        "ed4373b60bf3d137eeb356dd7312cc207193ee70"
                    ]
                },
                {
                    "command": [
                        "rewrite Bool.negb_involutive.",
                        "VernacExtend",
                        "da1efc84b3f93b723ae08463756226fd45a45b9d"
                    ]
                },
                {
                    "command": [
                        "rewrite Zeven_opp.",
                        "VernacExtend",
                        "dc99bb7da3f69e92a5bc9359960f28212b4647b5"
                    ]
                },
                {
                    "command": [
                        "rewrite Zeven_plus.",
                        "VernacExtend",
                        "eeb0ce5bfbcdc5ec50bab699364ca261e08595a5"
                    ]
                },
                {
                    "command": [
                        "now rewrite eqb_sym.",
                        "VernacExtend",
                        "518831a96ae40eb35702398fec87a050c1dd7e58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}