{
    "filename": "compcert/common/Memdata.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Coqlib.",
            "VernacRequire",
            "bbbe15041aca3a03300067f7acd445b462d537cc"
        ],
        [
            "Require Archi.",
            "VernacRequire",
            "019739e08394793e2d196b9db729424cb460d119"
        ],
        [
            "Require Import AST.",
            "VernacRequire",
            "d103ecb096c06f34167fba01dd861491b0d5e84e"
        ],
        [
            "Require Import Integers.",
            "VernacRequire",
            "688f068e3335df7950b569ef75a5e993414c9874"
        ],
        [
            "Require Import Floats.",
            "VernacRequire",
            "b9c4a965f888465bf3445941d179c7194c314789"
        ],
        [
            "Require Import Values.",
            "VernacRequire",
            "f69762569c40def2ecf819f8117763d2ee924d2a"
        ],
        [
            "Definition size_chunk (chunk: memory_chunk) : Z := match chunk with | Mint8signed => 1 | Mint8unsigned => 1 | Mint16signed => 2 | Mint16unsigned => 2 | Mint32 => 4 | Mint64 => 8 | Mfloat32 => 4 | Mfloat64 => 8 | Many32 => 4 | Many64 => 8 end.",
            "VernacDefinition",
            "27c7011c2ee3d8f0692bcbb85eb08dee842cccd6"
        ],
        [
            "Lemma size_chunk_pos: forall chunk, size_chunk chunk > 0.",
            "VernacStartTheoremProof",
            "6e44afb6d35634e66a8a4430749f1611237586d7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct chunk; simpl; omega.",
            "VernacExtend",
            "ebed44f52952bad146726e6a116c089f8befb883"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition size_chunk_nat (chunk: memory_chunk) : nat := nat_of_Z(size_chunk chunk).",
            "VernacDefinition",
            "76033bcdf40162683ead57cd9dc1456be9aad454"
        ],
        [
            "Lemma size_chunk_conv: forall chunk, size_chunk chunk = Z.of_nat (size_chunk_nat chunk).",
            "VernacStartTheoremProof",
            "4f4ff5a4f8c0ae12e07cc09a0a3ff2c2eb65824d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct chunk; reflexivity.",
            "VernacExtend",
            "fe38edc7803c0f3e7d5efe5b8e39fb119a65f827"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_chunk_nat_pos: forall chunk, exists n, size_chunk_nat chunk = S n.",
            "VernacStartTheoremProof",
            "0b9853e64453cd376a6d6cbef1182496b028a09f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (size_chunk_pos chunk).",
            "VernacExtend",
            "996ba49eae835362623228883dba1cf2131cba29"
        ],
        [
            "rewrite size_chunk_conv.",
            "VernacExtend",
            "e08e3036070cd4dd62b9e98e3710f956e4b0d953"
        ],
        [
            "destruct (size_chunk_nat chunk).",
            "VernacExtend",
            "b12c3f05aa5210e99e04c7d900123faae56bae3b"
        ],
        [
            "simpl; intros; omegaContradiction.",
            "VernacExtend",
            "f22c922b4888eeab94f0801745cb52edbe8ceb35"
        ],
        [
            "intros; exists n; auto.",
            "VernacExtend",
            "f36edf56a8fa69d31c1cc763fa8808aa52f6f675"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_chunk_Mptr: size_chunk Mptr = if Archi.ptr64 then 8 else 4.",
            "VernacStartTheoremProof",
            "05521a783855c745531f220ecb780bdc217ae97c"
        ],
        [
            "unfold Mptr; destruct Archi.ptr64; auto.",
            "VernacExtend",
            "a57636dda02d43ae23a599dc551d29372b6fab28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition align_chunk (chunk: memory_chunk) : Z := match chunk with | Mint8signed => 1 | Mint8unsigned => 1 | Mint16signed => 2 | Mint16unsigned => 2 | Mint32 => 4 | Mint64 => 8 | Mfloat32 => 4 | Mfloat64 => 4 | Many32 => 4 | Many64 => 4 end.",
            "VernacDefinition",
            "412fc633c5d7c2baf1635f3b430454e6c773b960"
        ],
        [
            "Lemma align_chunk_pos: forall chunk, align_chunk chunk > 0.",
            "VernacStartTheoremProof",
            "5fa6e8e759d4f69263e43a87dfd3455c91beb188"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct chunk; simpl; omega.",
            "VernacExtend",
            "ebed44f52952bad146726e6a116c089f8befb883"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma align_chunk_Mptr: align_chunk Mptr = if Archi.ptr64 then 8 else 4.",
            "VernacStartTheoremProof",
            "e19b9000476ccddaa7c752d2b018500988889b01"
        ],
        [
            "unfold Mptr; destruct Archi.ptr64; auto.",
            "VernacExtend",
            "a57636dda02d43ae23a599dc551d29372b6fab28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma align_size_chunk_divides: forall chunk, (align_chunk chunk | size_chunk chunk).",
            "VernacStartTheoremProof",
            "5f052ea093cad370e16590afa9de541c901826c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct chunk; simpl; try apply Z.divide_refl; exists 2; auto.",
            "VernacExtend",
            "30719d9410a51b6d8716443badd78e18334c003a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma align_le_divides: forall chunk1 chunk2, align_chunk chunk1 <= align_chunk chunk2 -> (align_chunk chunk1 | align_chunk chunk2).",
            "VernacStartTheoremProof",
            "2d8ef1a5098fc5aa0487f7944c5cec69f90f9570"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct chunk1; destruct chunk2; simpl in *; solve [ omegaContradiction | apply Z.divide_refl | exists 2; reflexivity | exists 4; reflexivity | exists 8; reflexivity ].",
            "VernacExtend",
            "c6d8f01c9081debf5907d97b2f960bd7bc674d50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive quantity : Type := Q32 | Q64.",
            "VernacInductive",
            "f6f09694501c89d51adffb533810419d927dda9f"
        ],
        [
            "Definition quantity_eq (q1 q2: quantity) : {q1 = q2} + {q1 <> q2}.",
            "VernacDefinition",
            "84f3b47d28e30f1920dc5e64bd27218805b350f2"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Opaque quantity_eq.",
            "VernacSetOpacity",
            "a6955553276a1fd8c1a0b6b695c61b44d4c2643e"
        ],
        [
            "Definition size_quantity_nat (q: quantity) := match q with Q32 => 4%nat | Q64 => 8%nat end.",
            "VernacDefinition",
            "0b7c8f9406ca015e360df76cc7853ecca5eddf5b"
        ],
        [
            "Lemma size_quantity_nat_pos: forall q, exists n, size_quantity_nat q = S n.",
            "VernacStartTheoremProof",
            "d9c622bf0402cec077e34099ee93b531dd305e88"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct q; [exists 3%nat | exists 7%nat]; auto.",
            "VernacExtend",
            "30f861a5ab809005e993e1e86b32da33ec6d52c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive memval: Type := | Undef: memval | Byte: byte -> memval | Fragment: val -> quantity -> nat -> memval.",
            "VernacInductive",
            "9f973d85e23e726c99a62267fb189976ac5c64df"
        ],
        [
            "Fixpoint bytes_of_int (n: nat) (x: Z) {struct n}: list byte := match n with | O => nil | S m => Byte.repr x :: bytes_of_int m (x / 256) end.",
            "VernacFixpoint",
            "22267d3c5d6a669f6d5f7369cb5b2f0655c05deb"
        ],
        [
            "Fixpoint int_of_bytes (l: list byte): Z := match l with | nil => 0 | b :: l' => Byte.unsigned b + int_of_bytes l' * 256 end.",
            "VernacFixpoint",
            "8724b780e3b389437bf78d71ffbc47e0578f7d1a"
        ],
        [
            "Definition rev_if_be (l: list byte) : list byte := if Archi.big_endian then List.rev l else l.",
            "VernacDefinition",
            "dd50252f61869e738a2f5f70a457c106146efe5d"
        ],
        [
            "Definition encode_int (sz: nat) (x: Z) : list byte := rev_if_be (bytes_of_int sz x).",
            "VernacDefinition",
            "1af2cc7827c1278d633c66851e8812a4170851a9"
        ],
        [
            "Definition decode_int (b: list byte) : Z := int_of_bytes (rev_if_be b).",
            "VernacDefinition",
            "81a099579d3b31a180748168c1cd0664148289f0"
        ],
        [
            "Lemma length_bytes_of_int: forall n x, length (bytes_of_int n x) = n.",
            "VernacStartTheoremProof",
            "e3304ba2c1b7a02cd4b4567be190bec276a4e038"
        ],
        [
            "induction n; simpl; intros.",
            "VernacExtend",
            "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rev_if_be_length: forall l, length (rev_if_be l) = length l.",
            "VernacStartTheoremProof",
            "c0e5bf91a5d8334ec6102cbb55f43194f633b4eb"
        ],
        [
            "intros; unfold rev_if_be; destruct Archi.big_endian.",
            "VernacExtend",
            "129cf99fc11f36417d419f76811908e5da393519"
        ],
        [
            "apply List.rev_length.",
            "VernacExtend",
            "e56a550bc5f23be1d08036d32e4e8302f596240e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_int_length: forall sz x, length(encode_int sz x) = sz.",
            "VernacStartTheoremProof",
            "3828dacf6c1c99cf5b5ccb138179c333fef70514"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold encode_int.",
            "VernacExtend",
            "4c2f4bce3087cf8d1b30b36515877fbfc752ed9c"
        ],
        [
            "rewrite rev_if_be_length.",
            "VernacExtend",
            "b08855e63b1baa555a5cf8f079d37aec73e2ac13"
        ],
        [
            "apply length_bytes_of_int.",
            "VernacExtend",
            "0e9a2f7b8240e08840f23265648634388dec6eb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_of_bytes_of_int: forall n x, int_of_bytes (bytes_of_int n x) = x mod (two_p (Z.of_nat n * 8)).",
            "VernacStartTheoremProof",
            "6c0f09c39d1a272bccb61457b02e5728ab2b2929"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Zmod_1_r.",
            "VernacExtend",
            "514ca001a7e743bc03af0d30b3e55d30fcee1a57"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Opaque Byte.wordsize.",
            "VernacSetOpacity",
            "e0887d22458cf7e5f369209751f0acf377948d52"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (Z.succ (Z.of_nat n) * 8) with (Z.of_nat n * 8 + 8) by omega.",
            "VernacExtend",
            "c5ac9145b3f48e006a9ef541de3a8d54a28ecd48"
        ],
        [
            "rewrite two_p_is_exp; try omega.",
            "VernacExtend",
            "eb631028665c5902b8092f1b0f1dacb222e6479f"
        ],
        [
            "rewrite Zmod_recombine.",
            "VernacExtend",
            "7ba1029b8ad09ec86687e24ed4fd30aa6e2f7f45"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "rewrite Z.add_comm.",
            "VernacExtend",
            "cb1af9408ed4e4ab13bf29109365368cad89a879"
        ],
        [
            "change (Byte.unsigned (Byte.repr x)) with (Byte.Z_mod_modulus x).",
            "VernacExtend",
            "56bddb8172170c671085b32ab8173f099bac61d2"
        ],
        [
            "rewrite Byte.Z_mod_modulus_eq.",
            "VernacExtend",
            "421790a9b1b7eec9896dbc1ac774e47a824f6c7b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply two_p_gt_ZERO.",
            "VernacExtend",
            "9690045ae69e536e22b7db6c37ee985732e7c4b7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rev_if_be_involutive: forall l, rev_if_be (rev_if_be l) = l.",
            "VernacStartTheoremProof",
            "3278a58e63c821d2c59ee1565563550c5d2ee544"
        ],
        [
            "intros; unfold rev_if_be; destruct Archi.big_endian.",
            "VernacExtend",
            "129cf99fc11f36417d419f76811908e5da393519"
        ],
        [
            "apply List.rev_involutive.",
            "VernacExtend",
            "13b335fcf838dcfe68ea41b66dfb6ef594bf4c78"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_encode_int: forall n x, decode_int (encode_int n x) = x mod (two_p (Z.of_nat n * 8)).",
            "VernacStartTheoremProof",
            "9fd86b1bc15e68f427a6d31f4d20df26ad463e60"
        ],
        [
            "unfold decode_int, encode_int; intros.",
            "VernacExtend",
            "e9c593b3eece699b7c2eb3ff0b78ef3db869fc53"
        ],
        [
            "rewrite rev_if_be_involutive.",
            "VernacExtend",
            "815612ced08396065ef7bff8144d8e1ee5f58632"
        ],
        [
            "apply int_of_bytes_of_int.",
            "VernacExtend",
            "f78d9270b17e9de3a819c429dbc6c0ca057aeaf6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_encode_int_1: forall x, Int.repr (decode_int (encode_int 1 (Int.unsigned x))) = Int.zero_ext 8 x.",
            "VernacStartTheoremProof",
            "0a48410f83c1c6faccdc4aaa21b3f7b5badd28e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite decode_encode_int.",
            "VernacExtend",
            "86ac88db2768cc1cef49be905f77c2add12cc12d"
        ],
        [
            "rewrite <- (Int.repr_unsigned (Int.zero_ext 8 x)).",
            "VernacExtend",
            "286eda53a551d386a1471e6baf32e0f8ae30591e"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Int.zero_ext_mod.",
            "VernacExtend",
            "b85737893fce8d6953180a79323e060fa20c1201"
        ],
        [
            "compute.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_encode_int_2: forall x, Int.repr (decode_int (encode_int 2 (Int.unsigned x))) = Int.zero_ext 16 x.",
            "VernacStartTheoremProof",
            "2d6bc78a2fcddba76c390cb531c5c2cd7fd738c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite decode_encode_int.",
            "VernacExtend",
            "86ac88db2768cc1cef49be905f77c2add12cc12d"
        ],
        [
            "rewrite <- (Int.repr_unsigned (Int.zero_ext 16 x)).",
            "VernacExtend",
            "1eff83ac2dd5da76176e6b0c509b2aa2dfa93519"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Int.zero_ext_mod.",
            "VernacExtend",
            "b85737893fce8d6953180a79323e060fa20c1201"
        ],
        [
            "compute; intuition congruence.",
            "VernacExtend",
            "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_encode_int_4: forall x, Int.repr (decode_int (encode_int 4 (Int.unsigned x))) = x.",
            "VernacStartTheoremProof",
            "472a5f6b2202d2846afefd9f5a9295359a8e2708"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite decode_encode_int.",
            "VernacExtend",
            "86ac88db2768cc1cef49be905f77c2add12cc12d"
        ],
        [
            "transitivity (Int.repr (Int.unsigned x)).",
            "VernacExtend",
            "75f558ca7f6a69a6fb920fb7a06bd21df3420f44"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply Zmod_small.",
            "VernacExtend",
            "439f7572e12963e1685c905bb39e49700a5d1e32"
        ],
        [
            "apply Int.unsigned_range.",
            "VernacExtend",
            "7ccf4bc2134d305adc6d1166907640a13f05cd8f"
        ],
        [
            "apply Int.repr_unsigned.",
            "VernacExtend",
            "b3d43aae5f6f402bb1c3d022281cbe34cf2ae2f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_encode_int_8: forall x, Int64.repr (decode_int (encode_int 8 (Int64.unsigned x))) = x.",
            "VernacStartTheoremProof",
            "3a1a014fdffc0575a4199cb11b88b0d91930bdfd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite decode_encode_int.",
            "VernacExtend",
            "86ac88db2768cc1cef49be905f77c2add12cc12d"
        ],
        [
            "transitivity (Int64.repr (Int64.unsigned x)).",
            "VernacExtend",
            "a58b28610573e774faf4bbd1c5c61f802963c24c"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply Zmod_small.",
            "VernacExtend",
            "439f7572e12963e1685c905bb39e49700a5d1e32"
        ],
        [
            "apply Int64.unsigned_range.",
            "VernacExtend",
            "8e8982a5c7f5f106ccaf8e2d86b747e29a861c08"
        ],
        [
            "apply Int64.repr_unsigned.",
            "VernacExtend",
            "155848270129eed13138aa7b4b60ec49b2ae866f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bytes_of_int_mod: forall n x y, Int.eqmod (two_p (Z.of_nat n * 8)) x y -> bytes_of_int n x = bytes_of_int n y.",
            "VernacStartTheoremProof",
            "233dbe5c864448331c1efad8aa441d124361398e"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "intros; simpl; auto.",
            "VernacExtend",
            "bb993ce5970cef2c88f7bd735f72830b79b9dc0c"
        ],
        [
            "intros until y.",
            "VernacExtend",
            "d1d10153f927031bceccac11dd74d452de2e238a"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "replace (Z.succ (Z.of_nat n) * 8) with (Z.of_nat n * 8 + 8) by omega.",
            "VernacExtend",
            "c5ac9145b3f48e006a9ef541de3a8d54a28ecd48"
        ],
        [
            "rewrite two_p_is_exp; try omega.",
            "VernacExtend",
            "eb631028665c5902b8092f1b0f1dacb222e6479f"
        ],
        [
            "intro EQM.",
            "VernacExtend",
            "8663e074720a873945ed9c7c5b7cbb602d8918cf"
        ],
        [
            "simpl; decEq.",
            "VernacExtend",
            "a857428c7a9bd4d1a4f8ed48b07c4cd3a6b39035"
        ],
        [
            "apply Byte.eqm_samerepr.",
            "VernacExtend",
            "3e8153607310abb30bb9e31dc249e7ed3d4cbe4c"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "eapply Int.eqmod_divides; eauto.",
            "VernacExtend",
            "ddeb612e6ed15e113361d75ec766a980a79d3612"
        ],
        [
            "apply Z.divide_factor_r.",
            "VernacExtend",
            "706012ddfb6c3760cc11e8e0e553b80865c20439"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "destruct EQM as [k EQ].",
            "VernacExtend",
            "acce29f2b9a1fb76dfe6d216d0de7a4cc07ee71c"
        ],
        [
            "exists k.",
            "VernacExtend",
            "5bd085ef2f3e8bbd4bde88ae4ddb2fb4c72df1a9"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite <- Z_div_plus_full_l.",
            "VernacExtend",
            "98bb67792de44cb3a8fa813b5cf28ef5f90a82fc"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "change (two_p 8) with 256.",
            "VernacExtend",
            "8e4a2e0d40c707a864051b1f29f65a607b08d7f3"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_int_8_mod: forall x y, Int.eqmod (two_p 8) x y -> encode_int 1%nat x = encode_int 1%nat y.",
            "VernacStartTheoremProof",
            "405f13832d7a46c81dff604515e250f6153d5c62"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold encode_int.",
            "VernacExtend",
            "4c2f4bce3087cf8d1b30b36515877fbfc752ed9c"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply bytes_of_int_mod.",
            "VernacExtend",
            "1de7e4c49dbe057e685348587d08f2a1a5b634d1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_int_16_mod: forall x y, Int.eqmod (two_p 16) x y -> encode_int 2%nat x = encode_int 2%nat y.",
            "VernacStartTheoremProof",
            "b607e2d91afeb0732055a2ad4361f9cc0a223e67"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold encode_int.",
            "VernacExtend",
            "4c2f4bce3087cf8d1b30b36515877fbfc752ed9c"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply bytes_of_int_mod.",
            "VernacExtend",
            "1de7e4c49dbe057e685348587d08f2a1a5b634d1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition inj_bytes (bl: list byte) : list memval := List.map Byte bl.",
            "VernacDefinition",
            "a2b09ea33898df80406039c2c341b308129f0b74"
        ],
        [
            "Fixpoint proj_bytes (vl: list memval) : option (list byte) := match vl with | nil => Some nil | Byte b :: vl' => match proj_bytes vl' with None => None | Some bl => Some(b :: bl) end | _ => None end.",
            "VernacFixpoint",
            "8e413ec6a03e6a1c6ae6dacf7f79cfb17de8f628"
        ],
        [
            "Remark length_inj_bytes: forall bl, length (inj_bytes bl) = length bl.",
            "VernacStartTheoremProof",
            "21c72c855fd8f353c80967352799e51e8a5bd457"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply List.map_length.",
            "VernacExtend",
            "f01623fd41ceca6e3686758aeb940c7fd19df354"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark proj_inj_bytes: forall bl, proj_bytes (inj_bytes bl) = Some bl.",
            "VernacStartTheoremProof",
            "752879e23b7b2c31beb4ab9d8afb9b6073cef8c8"
        ],
        [
            "induction bl; simpl.",
            "VernacExtend",
            "be322c86f95474e0271d90807910c5fcb24c135f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite IHbl.",
            "VernacExtend",
            "37ca798092de68e54a07766eebdb0f106c573d79"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_proj_bytes: forall cl bl, proj_bytes cl = Some bl -> cl = inj_bytes bl.",
            "VernacStartTheoremProof",
            "19a9c0f0e25e6fd720b0ec1394acae0badb60fca"
        ],
        [
            "induction cl; simpl; intros.",
            "VernacExtend",
            "2d7d6fa55824b92e76ddb12e0d79f15d8dae1919"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
        ],
        [
            "destruct a; try congruence.",
            "VernacExtend",
            "d106cad63c7ecf246997d358e08c12ecf180f640"
        ],
        [
            "destruct (proj_bytes cl); inv H.",
            "VernacExtend",
            "c43fcef74d10fdec711e533f1c3a8676091c1f02"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint inj_value_rec (n: nat) (v: val) (q: quantity) {struct n}: list memval := match n with | O => nil | S m => Fragment v q m :: inj_value_rec m v q end.",
            "VernacFixpoint",
            "3d883fbec1bd074583659544a9ce87ac96e8e280"
        ],
        [
            "Definition inj_value (q: quantity) (v: val): list memval := inj_value_rec (size_quantity_nat q) v q.",
            "VernacDefinition",
            "bbc1419c142268ac854292f229e2fef25bb58040"
        ],
        [
            "Fixpoint check_value (n: nat) (v: val) (q: quantity) (vl: list memval) {struct n} : bool := match n, vl with | O, nil => true | S m, Fragment v' q' m' :: vl' => Val.eq v v' && quantity_eq q q' && Nat.eqb m m' && check_value m v q vl' | _, _ => false end.",
            "VernacFixpoint",
            "e58b08346ceb2f18fc463ce337f3ffdc74709b2b"
        ],
        [
            "Definition proj_value (q: quantity) (vl: list memval) : val := match vl with | Fragment v q' n :: vl' => if check_value (size_quantity_nat q) v q vl then v else Vundef | _ => Vundef end.",
            "VernacDefinition",
            "9103f5f9848f8a38f868aebb22a47dee6f6f407a"
        ],
        [
            "Definition encode_val (chunk: memory_chunk) (v: val) : list memval := match v, chunk with | Vint n, (Mint8signed | Mint8unsigned) => inj_bytes (encode_int 1%nat (Int.unsigned n)) | Vint n, (Mint16signed | Mint16unsigned) => inj_bytes (encode_int 2%nat (Int.unsigned n)) | Vint n, Mint32 => inj_bytes (encode_int 4%nat (Int.unsigned n)) | Vptr b ofs, Mint32 => if Archi.ptr64 then list_repeat 4%nat Undef else inj_value Q32 v | Vlong n, Mint64 => inj_bytes (encode_int 8%nat (Int64.unsigned n)) | Vptr b ofs, Mint64 => if Archi.ptr64 then inj_value Q64 v else list_repeat 8%nat Undef | Vsingle n, Mfloat32 => inj_bytes (encode_int 4%nat (Int.unsigned (Float32.to_bits n))) | Vfloat n, Mfloat64 => inj_bytes (encode_int 8%nat (Int64.unsigned (Float.to_bits n))) | _, Many32 => inj_value Q32 v | _, Many64 => inj_value Q64 v | _, _ => list_repeat (size_chunk_nat chunk) Undef end.",
            "VernacDefinition",
            "4c96e72764ecf7a972ea63781d3461c04452756f"
        ],
        [
            "Definition decode_val (chunk: memory_chunk) (vl: list memval) : val := match proj_bytes vl with | Some bl => match chunk with | Mint8signed => Vint(Int.sign_ext 8 (Int.repr (decode_int bl))) | Mint8unsigned => Vint(Int.zero_ext 8 (Int.repr (decode_int bl))) | Mint16signed => Vint(Int.sign_ext 16 (Int.repr (decode_int bl))) | Mint16unsigned => Vint(Int.zero_ext 16 (Int.repr (decode_int bl))) | Mint32 => Vint(Int.repr(decode_int bl)) | Mint64 => Vlong(Int64.repr(decode_int bl)) | Mfloat32 => Vsingle(Float32.of_bits (Int.repr (decode_int bl))) | Mfloat64 => Vfloat(Float.of_bits (Int64.repr (decode_int bl))) | Many32 => Vundef | Many64 => Vundef end | None => match chunk with | Mint32 => if Archi.ptr64 then Vundef else Val.load_result chunk (proj_value Q32 vl) | Many32 => Val.load_result chunk (proj_value Q32 vl) | Mint64 => if Archi.ptr64 then Val.load_result chunk (proj_value Q64 vl) else Vundef | Many64 => Val.load_result chunk (proj_value Q64 vl) | _ => Vundef end end.",
            "VernacDefinition",
            "a08b908d423026e233883193c1ae56fbb71771d7"
        ],
        [
            "Ltac solve_encode_val_length := match goal with | [ |- length (inj_bytes _) = _ ] => rewrite length_inj_bytes; solve_encode_val_length | [ |- length (encode_int _ _) = _ ] => apply encode_int_length | [ |- length (if ?x then _ else _) = _ ] => destruct x eqn:?; solve_encode_val_length | _ => reflexivity end.",
            "VernacExtend",
            "26b84dd0f31b5a1b8c574b0316156b9873fd233b"
        ],
        [
            "Lemma encode_val_length: forall chunk v, length(encode_val chunk v) = size_chunk_nat chunk.",
            "VernacStartTheoremProof",
            "a82ce8d9c9fcae4a1aa24fcf1b563a087a8a987b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct v; simpl; destruct chunk; solve_encode_val_length.",
            "VernacExtend",
            "4e793c5e6271d6adb619c0ac01b8e4b4f3a92e91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma check_inj_value: forall v q n, check_value n v q (inj_value_rec n v q) = true.",
            "VernacStartTheoremProof",
            "4238be07f8bac42d4f2033ee527ac00176ee8f15"
        ],
        [
            "induction n; simpl.",
            "VernacExtend",
            "1f285429454cbe9bad08c3e1d2fa969e99890bea"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold proj_sumbool.",
            "VernacExtend",
            "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "rewrite <- beq_nat_refl.",
            "VernacExtend",
            "6483e653b28875693c3c92037ba92da24c711ae3"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_inj_value: forall q v, proj_value q (inj_value q v) = v.",
            "VernacStartTheoremProof",
            "6cf672f0f25a17fef160179003e86fe666d89d20"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold proj_value, inj_value.",
            "VernacExtend",
            "06c1b701269ae9d69a204c84e198c4dd9897fa45"
        ],
        [
            "destruct (size_quantity_nat_pos q) as [n EQ].",
            "VernacExtend",
            "7f4189df8c889f8f011f86700e26a530c84e39de"
        ],
        [
            "rewrite EQ at 1.",
            "VernacExtend",
            "d30c0f183bed28dfff6beec035dd298ab5bfaad3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite check_inj_value.",
            "VernacExtend",
            "9b7cd3bd100e031c9d0ff3cbecdf94a847e98702"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark in_inj_value: forall mv v q, In mv (inj_value q v) -> exists n, mv = Fragment v q n.",
            "VernacStartTheoremProof",
            "948692dd7d9eec41e7563c192c7eab60eb5e9a7a"
        ],
        [
            "Local Transparent inj_value.",
            "VernacSetOpacity",
            "f25b58f0f6a0602141c5425378a73f1276f41f09"
        ],
        [
            "unfold inj_value; intros until q.",
            "VernacExtend",
            "f5edcc2cc6a45c10621eb1ff618da598f37f89c4"
        ],
        [
            "generalize (size_quantity_nat q).",
            "VernacExtend",
            "994613cc38f7fd01424b3d218428a836ecb01c58"
        ],
        [
            "induction n; simpl; intros.",
            "VernacExtend",
            "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "exists n; auto.",
            "VernacExtend",
            "5a9adc9df6bd2f2c6c339260376aab0275aec66d"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_inj_value_mismatch: forall q1 q2 v, q1 <> q2 -> proj_value q1 (inj_value q2 v) = Vundef.",
            "VernacStartTheoremProof",
            "b2746dab26d969c56f6e9a5844bf29757981c590"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold proj_value.",
            "VernacExtend",
            "97b7d05b29cbf6194e88297fde1d5ffbb1fde2eb"
        ],
        [
            "destruct (inj_value q2 v) eqn:V.",
            "VernacExtend",
            "d9426c3f0aa81c867086075a0a5b6030fd104a78"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct m; auto.",
            "VernacExtend",
            "a8b5a8c4be5c2b48bdc511e0732df482c9073b97"
        ],
        [
            "destruct (in_inj_value (Fragment v0 q n) v q2) as [n' EQ].",
            "VernacExtend",
            "4b1977970d30a956d67e5c65eee964f1f6f3a6f4"
        ],
        [
            "rewrite V; auto with coqlib.",
            "VernacExtend",
            "b66efac4d090f29169cc5fbf66d14d271245af10"
        ],
        [
            "inv EQ.",
            "VernacExtend",
            "7a279753e02407950a37d5a89440a2736f87b6db"
        ],
        [
            "destruct (size_quantity_nat_pos q1) as [p EQ1]; rewrite EQ1; simpl.",
            "VernacExtend",
            "b1f51b9e56235454d520244130928d02a1408dd9"
        ],
        [
            "unfold proj_sumbool.",
            "VernacExtend",
            "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "rewrite dec_eq_false by congruence.",
            "VernacExtend",
            "3a543ba3ef36fe52ac68364e315a639884229739"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition decode_encode_val (v1: val) (chunk1 chunk2: memory_chunk) (v2: val) : Prop := match v1, chunk1, chunk2 with | Vundef, _, _ => v2 = Vundef | Vint n, Mint8signed, Mint8signed => v2 = Vint(Int.sign_ext 8 n) | Vint n, Mint8unsigned, Mint8signed => v2 = Vint(Int.sign_ext 8 n) | Vint n, Mint8signed, Mint8unsigned => v2 = Vint(Int.zero_ext 8 n) | Vint n, Mint8unsigned, Mint8unsigned => v2 = Vint(Int.zero_ext 8 n) | Vint n, Mint16signed, Mint16signed => v2 = Vint(Int.sign_ext 16 n) | Vint n, Mint16unsigned, Mint16signed => v2 = Vint(Int.sign_ext 16 n) | Vint n, Mint16signed, Mint16unsigned => v2 = Vint(Int.zero_ext 16 n) | Vint n, Mint16unsigned, Mint16unsigned => v2 = Vint(Int.zero_ext 16 n) | Vint n, Mint32, Mint32 => v2 = Vint n | Vint n, Many32, Many32 => v2 = Vint n | Vint n, Mint32, Mfloat32 => v2 = Vsingle(Float32.of_bits n) | Vint n, Many64, Many64 => v2 = Vint n | Vint n, (Mint64 | Mfloat32 | Mfloat64 | Many64), _ => v2 = Vundef | Vint n, _, _ => True | Vptr b ofs, (Mint32 | Many32), (Mint32 | Many32) => v2 = if Archi.ptr64 then Vundef else Vptr b ofs | Vptr b ofs, Mint64, (Mint64 | Many64) => v2 = if Archi.ptr64 then Vptr b ofs else Vundef | Vptr b ofs, Many64, Many64 => v2 = Vptr b ofs | Vptr b ofs, Many64, Mint64 => v2 = if Archi.ptr64 then Vptr b ofs else Vundef | Vptr b ofs, _, _ => v2 = Vundef | Vlong n, Mint64, Mint64 => v2 = Vlong n | Vlong n, Mint64, Mfloat64 => v2 = Vfloat(Float.of_bits n) | Vlong n, Many64, Many64 => v2 = Vlong n | Vlong n, (Mint8signed|Mint8unsigned|Mint16signed|Mint16unsigned|Mint32|Mfloat32|Mfloat64|Many32), _ => v2 = Vundef | Vlong n, _, _ => True | Vfloat f, Mfloat64, Mfloat64 => v2 = Vfloat f | Vfloat f, Mfloat64, Mint64 => v2 = Vlong(Float.to_bits f) | Vfloat f, Many64, Many64 => v2 = Vfloat f | Vfloat f, (Mint8signed|Mint8unsigned|Mint16signed|Mint16unsigned|Mint32|Mfloat32|Mint64|Many32), _ => v2 = Vundef | Vfloat f, _, _ => True | Vsingle f, Mfloat32, Mfloat32 => v2 = Vsingle f | Vsingle f, Mfloat32, Mint32 => v2 = Vint(Float32.to_bits f) | Vsingle f, Many32, Many32 => v2 = Vsingle f | Vsingle f, Many64, Many64 => v2 = Vsingle f | Vsingle f, (Mint8signed|Mint8unsigned|Mint16signed|Mint16unsigned|Mint32|Mint64|Mfloat64|Many64), _ => v2 = Vundef | Vsingle f, _, _ => True end.",
            "VernacDefinition",
            "0a705bdd32f528da9b95a4b763cd298742e4147e"
        ],
        [
            "Remark decode_val_undef: forall bl chunk, decode_val chunk (Undef :: bl) = Vundef.",
            "VernacStartTheoremProof",
            "f1f95d8cf49786c83dbadd55537727cc85aac846"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold decode_val.",
            "VernacExtend",
            "10dec25d4dfd228a146df62531c0fff86fbbb0a9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct chunk, Archi.ptr64; auto.",
            "VernacExtend",
            "43d50736a98ed4132286b2bc7601da776a8b43c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark proj_bytes_inj_value: forall q v, proj_bytes (inj_value q v) = None.",
            "VernacStartTheoremProof",
            "ca2c19a0d2d3ba5138011cea2bd24bf35176490e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct q; reflexivity.",
            "VernacExtend",
            "25e0a5ecdf987e26806d82e5c860d580c166ab58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac solve_decode_encode_val_general := exact I || reflexivity || match goal with | |- context [ if Archi.ptr64 then _ else _ ] => destruct Archi.ptr64 eqn:? | |- context [ proj_bytes (inj_bytes _) ] => rewrite proj_inj_bytes | |- context [ proj_bytes (inj_value _ _) ] => rewrite proj_bytes_inj_value | |- context [ proj_value _ (inj_value _ _) ] => rewrite ?proj_inj_value, ?proj_inj_value_mismatch by congruence | |- context [ Int.repr(decode_int (encode_int 1 (Int.unsigned _))) ] => rewrite decode_encode_int_1 | |- context [ Int.repr(decode_int (encode_int 2 (Int.unsigned _))) ] => rewrite decode_encode_int_2 | |- context [ Int.repr(decode_int (encode_int 4 (Int.unsigned _))) ] => rewrite decode_encode_int_4 | |- context [ Int64.repr(decode_int (encode_int 8 (Int64.unsigned _))) ] => rewrite decode_encode_int_8 | |- Vint (Int.sign_ext _ (Int.sign_ext _ _)) = Vint _ => f_equal; apply Int.sign_ext_idem; omega | |- Vint (Int.zero_ext _ (Int.zero_ext _ _)) = Vint _ => f_equal; apply Int.zero_ext_idem; omega | |- Vint (Int.sign_ext _ (Int.zero_ext _ _)) = Vint _ => f_equal; apply Int.sign_ext_zero_ext; omega end.",
            "VernacExtend",
            "d2ef4b20adced4e9a92792b18c814938743b414a"
        ],
        [
            "Lemma decode_encode_val_general: forall v chunk1 chunk2, decode_encode_val v chunk1 chunk2 (decode_val chunk2 (encode_val chunk1 v)).",
            "VernacStartTheoremProof",
            "eaa2b60ee37bca1c416ad541d8cec5f9418b6c67"
        ],
        [
            "Opaque inj_value.",
            "VernacSetOpacity",
            "5a2a02256b760fad48d4acbe4f0c56d296320d61"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct v; destruct chunk1 eqn:C1; try (apply decode_val_undef); destruct chunk2 eqn:C2; unfold decode_encode_val, decode_val, encode_val, Val.load_result; repeat solve_decode_encode_val_general.",
            "VernacExtend",
            "0a4a1848f06b464425831f8f433e0e4838bb0bbb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Float.of_to_bits; auto.",
            "VernacExtend",
            "5e7ccf2d2778f076716492951137cfe71e71b002"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Float32.of_to_bits; auto.",
            "VernacExtend",
            "6d5ce71e5993c64ad9bbece969a18bb925a0ef92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_encode_val_similar: forall v1 chunk1 chunk2 v2, type_of_chunk chunk1 = type_of_chunk chunk2 -> size_chunk chunk1 = size_chunk chunk2 -> decode_encode_val v1 chunk1 chunk2 v2 -> v2 = Val.load_result chunk2 v1.",
            "VernacStartTheoremProof",
            "57409f72ee333c352c266df5e4ee72aeb0954cfa"
        ],
        [
            "intros until v2; intros TY SZ DE.",
            "VernacExtend",
            "8d1c0a72c803807f3c2902aa1763b8de1f1f6812"
        ],
        [
            "destruct chunk1; destruct chunk2; simpl in TY; try discriminate; simpl in SZ; try omegaContradiction; destruct v1; auto.",
            "VernacExtend",
            "c447ad11c147586b239ae453a6f3b2432eb0675d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_val_type: forall chunk cl, Val.has_type (decode_val chunk cl) (type_of_chunk chunk).",
            "VernacStartTheoremProof",
            "2555026114f3d70b64bd0b487dd1f7ad04aaa8be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold decode_val.",
            "VernacExtend",
            "10dec25d4dfd228a146df62531c0fff86fbbb0a9"
        ],
        [
            "destruct (proj_bytes cl).",
            "VernacExtend",
            "37e6460b401d0f1dbddc8bf7496f01f25bd7fc69"
        ],
        [
            "destruct chunk; simpl; auto.",
            "VernacExtend",
            "653a53ba059c27ce9db27a1483d5e027308774a4"
        ],
        [
            "Local Opaque Val.load_result.",
            "VernacSetOpacity",
            "136cc7ec616e869e41b67195745cddca13221c13"
        ],
        [
            "destruct chunk; simpl; (exact I || apply Val.load_result_type || destruct Archi.ptr64; (exact I || apply Val.load_result_type)).",
            "VernacExtend",
            "e6dfa67593a7ee357ba9f22587479a4fbcb9787a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_val_int8_signed_unsigned: forall v, encode_val Mint8signed v = encode_val Mint8unsigned v.",
            "VernacStartTheoremProof",
            "c3215eb1f96f4e2a4083b27afc216854e63f85de"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct v; simpl; auto.",
            "VernacExtend",
            "e0983a21ce967d56e72934fc217986c85bcd413e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_val_int16_signed_unsigned: forall v, encode_val Mint16signed v = encode_val Mint16unsigned v.",
            "VernacStartTheoremProof",
            "476a551cc58ceeb85184337d71c66aa8b2e32988"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct v; simpl; auto.",
            "VernacExtend",
            "e0983a21ce967d56e72934fc217986c85bcd413e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_val_int8_zero_ext: forall n, encode_val Mint8unsigned (Vint (Int.zero_ext 8 n)) = encode_val Mint8unsigned (Vint n).",
            "VernacStartTheoremProof",
            "91de63598b05a44f70ac9c0381bc53e8be54111e"
        ],
        [
            "intros; unfold encode_val.",
            "VernacExtend",
            "f4e9bba8042d12596505a95042ea67c9a5f116b1"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply encode_int_8_mod.",
            "VernacExtend",
            "ff75323b319745322593c38682ebc23464bfe0c5"
        ],
        [
            "apply Int.eqmod_zero_ext.",
            "VernacExtend",
            "356081e05d35efb6fff95186242f95335bac06d4"
        ],
        [
            "compute; intuition congruence.",
            "VernacExtend",
            "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_val_int8_sign_ext: forall n, encode_val Mint8signed (Vint (Int.sign_ext 8 n)) = encode_val Mint8signed (Vint n).",
            "VernacStartTheoremProof",
            "ce7d8c983a238a15e769d69e22d17cebae8b1f79"
        ],
        [
            "intros; unfold encode_val.",
            "VernacExtend",
            "f4e9bba8042d12596505a95042ea67c9a5f116b1"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply encode_int_8_mod.",
            "VernacExtend",
            "ff75323b319745322593c38682ebc23464bfe0c5"
        ],
        [
            "apply Int.eqmod_sign_ext'.",
            "VernacExtend",
            "de5f4672b3e0529032800ea045d35a03982d2fa4"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_val_int16_zero_ext: forall n, encode_val Mint16unsigned (Vint (Int.zero_ext 16 n)) = encode_val Mint16unsigned (Vint n).",
            "VernacStartTheoremProof",
            "e6907ddefee88dc3b4d6d87c36a6e46e822d99e7"
        ],
        [
            "intros; unfold encode_val.",
            "VernacExtend",
            "f4e9bba8042d12596505a95042ea67c9a5f116b1"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply encode_int_16_mod.",
            "VernacExtend",
            "1144c653ab3a13f43203687616e9a772a5ad50c6"
        ],
        [
            "apply Int.eqmod_zero_ext.",
            "VernacExtend",
            "356081e05d35efb6fff95186242f95335bac06d4"
        ],
        [
            "compute; intuition congruence.",
            "VernacExtend",
            "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_val_int16_sign_ext: forall n, encode_val Mint16signed (Vint (Int.sign_ext 16 n)) = encode_val Mint16signed (Vint n).",
            "VernacStartTheoremProof",
            "e61af2d97a89974cbff506b08f9a778d73a94b7f"
        ],
        [
            "intros; unfold encode_val.",
            "VernacExtend",
            "f4e9bba8042d12596505a95042ea67c9a5f116b1"
        ],
        [
            "decEq.",
            "VernacExtend",
            "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
        ],
        [
            "apply encode_int_16_mod.",
            "VernacExtend",
            "1144c653ab3a13f43203687616e9a772a5ad50c6"
        ],
        [
            "apply Int.eqmod_sign_ext'.",
            "VernacExtend",
            "de5f4672b3e0529032800ea045d35a03982d2fa4"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_val_cast: forall chunk l, let v := decode_val chunk l in match chunk with | Mint8signed => v = Val.sign_ext 8 v | Mint8unsigned => v = Val.zero_ext 8 v | Mint16signed => v = Val.sign_ext 16 v | Mint16unsigned => v = Val.zero_ext 16 v | _ => True end.",
            "VernacStartTheoremProof",
            "95825f664713471e9624d6adfc468aa03983d911"
        ],
        [
            "unfold decode_val; intros; destruct chunk; auto; destruct (proj_bytes l); auto.",
            "VernacExtend",
            "7a63c5133e441f525f151d70ec6e90ca6176e773"
        ],
        [
            "unfold Val.sign_ext.",
            "VernacExtend",
            "9a95148240ec40ffa1f3915b483f4f0c0502c052"
        ],
        [
            "rewrite Int.sign_ext_idem; auto.",
            "VernacExtend",
            "053353dc30e167308a15af312716168d92bf5fe1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Val.zero_ext.",
            "VernacExtend",
            "99c9ee2d792e18c16e2291281af963f9d1d1ea17"
        ],
        [
            "rewrite Int.zero_ext_idem; auto.",
            "VernacExtend",
            "23c5ae262c37f3ea7d5e72cbf16116955b9da8a3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Val.sign_ext.",
            "VernacExtend",
            "9a95148240ec40ffa1f3915b483f4f0c0502c052"
        ],
        [
            "rewrite Int.sign_ext_idem; auto.",
            "VernacExtend",
            "053353dc30e167308a15af312716168d92bf5fe1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Val.zero_ext.",
            "VernacExtend",
            "99c9ee2d792e18c16e2291281af963f9d1d1ea17"
        ],
        [
            "rewrite Int.zero_ext_idem; auto.",
            "VernacExtend",
            "23c5ae262c37f3ea7d5e72cbf16116955b9da8a3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition quantity_chunk (chunk: memory_chunk) := match chunk with | Mint64 | Mfloat64 | Many64 => Q64 | _ => Q32 end.",
            "VernacDefinition",
            "d91ea20e2823904929ce991c54a4fd1db6c90cc0"
        ],
        [
            "Inductive shape_encoding (chunk: memory_chunk) (v: val): list memval -> Prop := | shape_encoding_f: forall q i mvl, (chunk = Mint32 \\/ chunk = Many32 \\/ chunk = Mint64 \\/ chunk = Many64) -> q = quantity_chunk chunk -> S i = size_quantity_nat q -> (forall mv, In mv mvl -> exists j, mv = Fragment v q j /\\ S j <> size_quantity_nat q) -> shape_encoding chunk v (Fragment v q i :: mvl) | shape_encoding_b: forall b mvl, match v with Vint _ => True | Vlong _ => True | Vfloat _ => True | Vsingle _ => True | _ => False end -> (forall mv, In mv mvl -> exists b', mv = Byte b') -> shape_encoding chunk v (Byte b :: mvl) | shape_encoding_u: forall mvl, (forall mv, In mv mvl -> mv = Undef) -> shape_encoding chunk v (Undef :: mvl).",
            "VernacInductive",
            "45ec72e9c1010e544af63f4f1586d13c320e9d55"
        ],
        [
            "Lemma encode_val_shape: forall chunk v, shape_encoding chunk v (encode_val chunk v).",
            "VernacStartTheoremProof",
            "07f2c594d54e4fd4aa251638b214060588a4773d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (size_chunk_nat_pos chunk) as [sz EQ].",
            "VernacExtend",
            "5680c30848555ca59a1010ef61a9c653f27526b7"
        ],
        [
            "assert (A: forall mv q n, (n < size_quantity_nat q)%nat -> In mv (inj_value_rec n v q) -> exists j, mv = Fragment v q j /\\ S j <> size_quantity_nat q).",
            "VernacExtend",
            "b2169e9a38adcc4098172abe7bdf7da81c2e0464"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction n; simpl; intros.",
            "VernacExtend",
            "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "exists n; split; auto.",
            "VernacExtend",
            "8088a5ed3183b59358afca45b5253562ca08b7fa"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply IHn; auto.",
            "VernacExtend",
            "ea2509b5476810b5c177bf63d6cf7c6e91937a23"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (B: forall q, q = quantity_chunk chunk -> (chunk = Mint32 \\/ chunk = Many32 \\/ chunk = Mint64 \\/ chunk = Many64) -> shape_encoding chunk v (inj_value q v)).",
            "VernacExtend",
            "8ad2712ebc861b7f99c820eae63e26493c00a1ba"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "Local Transparent inj_value.",
            "VernacSetOpacity",
            "f25b58f0f6a0602141c5425378a73f1276f41f09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold inj_value.",
            "VernacExtend",
            "5cb78e291e4286787390c016d326fccde4c134eb"
        ],
        [
            "destruct (size_quantity_nat_pos q) as [sz' EQ'].",
            "VernacExtend",
            "f90aded14233140eedb03eef288db36cc1ba909e"
        ],
        [
            "rewrite EQ'.",
            "VernacExtend",
            "f94177c55d4b7619a1dcdc1e008c80cfd7337dd1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "intros; eapply A; eauto.",
            "VernacExtend",
            "abe50c996cff530b6f71b3cbb0deb21deaa267ad"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (C: forall bl, match v with Vint _ => True | Vlong _ => True | Vfloat _ => True | Vsingle _ => True | _ => False end -> length (inj_bytes bl) = size_chunk_nat chunk -> shape_encoding chunk v (inj_bytes bl)).",
            "VernacExtend",
            "bc5562c48c1460d22f427d1b0262b7804a823802"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct bl as [|b1 bl].",
            "VernacExtend",
            "27f860aef9041f1c876c4ed291cb27a1cf33237f"
        ],
        [
            "simpl in H0; congruence.",
            "VernacExtend",
            "59360427bc5f1950e19ed082c2faac61e705123a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "unfold inj_bytes; intros.",
            "VernacExtend",
            "15914fca4bd5df66e505f3b2b1b40dc966fd91a4"
        ],
        [
            "exploit list_in_map_inv; eauto.",
            "VernacExtend",
            "235c0bd1949d253ef4954ae1790ac9b7759ffe85"
        ],
        [
            "intros (b & P & Q); exists b; auto.",
            "VernacExtend",
            "807b5a309a7598d7a18b960c35a30f74ea0cee1a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (D: shape_encoding chunk v (list_repeat (size_chunk_nat chunk) Undef)).",
            "VernacExtend",
            "b7cc93421ab0fbcbf4bc7ac1e2721a7ab5c35868"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite EQ; simpl; constructor; auto.",
            "VernacExtend",
            "2d0c871f88ede4897c587679b915afa40fa92a26"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply in_list_repeat; eauto.",
            "VernacExtend",
            "08c0bfcfb33662e8de8c2f164d590ee1f9ec5674"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "generalize (encode_val_length chunk v).",
            "VernacExtend",
            "f390aa2263e225c835cb9d13dfe5ab415bb666b2"
        ],
        [
            "intros LEN.",
            "VernacExtend",
            "4e64d9b9f6839af6e0bcee213344796b509c4b98"
        ],
        [
            "unfold encode_val; unfold encode_val in LEN; destruct v; destruct chunk; (apply B || apply C || apply D || (destruct Archi.ptr64; (apply B || apply D))); auto.",
            "VernacExtend",
            "317e1c150cb58dc89b27543dcff1d8dd05ecae89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive shape_decoding (chunk: memory_chunk): list memval -> val -> Prop := | shape_decoding_f: forall v q i mvl, (chunk = Mint32 \\/ chunk = Many32 \\/ chunk = Mint64 \\/ chunk = Many64) -> q = quantity_chunk chunk -> S i = size_quantity_nat q -> (forall mv, In mv mvl -> exists j, mv = Fragment v q j /\\ S j <> size_quantity_nat q) -> shape_decoding chunk (Fragment v q i :: mvl) (Val.load_result chunk v) | shape_decoding_b: forall b mvl v, match v with Vint _ => True | Vlong _ => True | Vfloat _ => True | Vsingle _ => True | _ => False end -> (forall mv, In mv mvl -> exists b', mv = Byte b') -> shape_decoding chunk (Byte b :: mvl) v | shape_decoding_u: forall mvl, shape_decoding chunk mvl Vundef.",
            "VernacInductive",
            "37363039e4a0e66d2de9c872f24f43644e3c103f"
        ],
        [
            "Lemma decode_val_shape: forall chunk mv1 mvl, shape_decoding chunk (mv1 :: mvl) (decode_val chunk (mv1 :: mvl)).",
            "VernacStartTheoremProof",
            "d9c228887b0ac79e54192737f23e26ae424d9341"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (A: forall mv mvs bs, proj_bytes mvs = Some bs -> In mv mvs -> exists b, mv = Byte b).",
            "VernacExtend",
            "58b6e0511e38c853fa69aab1e022cf77c128b0e3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction mvs; simpl; intros.",
            "VernacExtend",
            "6101f3a8ed404f58137b5f2d6de4e709430d3f61"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "destruct a; try discriminate.",
            "VernacExtend",
            "fde6b0aa5849f5ce2cd41eb99544a829f1038d46"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "exists i; auto.",
            "VernacExtend",
            "06b83cb51650711770bc1e0786f279124247af80"
        ],
        [
            "destruct (proj_bytes mvs); try discriminate.",
            "VernacExtend",
            "b00f7fe99007c783fe3b23807c2b703e66eec6d6"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (B: forall v q mv n mvs, check_value n v q mvs = true -> In mv mvs -> (n < size_quantity_nat q)%nat -> exists j, mv = Fragment v q j /\\ S j <> size_quantity_nat q).",
            "VernacExtend",
            "d59ab986c40f4a35634be7dc8355cc69df67872c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction n; destruct mvs; simpl; intros; try discriminate.",
            "VernacExtend",
            "a03e061b01695d320f9b382b408fa73d44f21b41"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "destruct m; try discriminate.",
            "VernacExtend",
            "d372b5ca03d638f2bbf3e1f77cee419959bc3c24"
        ],
        [
            "InvBooleans.",
            "VernacExtend",
            "2a6e1bb1be0f04ca24c3e441e9db23c18612c002"
        ],
        [
            "apply beq_nat_true in H4.",
            "VernacExtend",
            "51a3e2d5bc66978ce7e419ee7506f43392401aee"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "subst mv.",
            "VernacExtend",
            "61a3c7e15d208e3102da0ff3d4d18b9db214d770"
        ],
        [
            "exists n0; split; auto.",
            "VernacExtend",
            "a903b0be36521c3f9732c283b55da1e122d18a90"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "eapply IHn; eauto.",
            "VernacExtend",
            "d9908376f41a48355fc89af086f965ebf5b7c128"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (U: forall mvs, shape_decoding chunk mvs (Val.load_result chunk Vundef)).",
            "VernacExtend",
            "29d432392b56aa98efd9993fb88d1e899ae81015"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (Val.load_result chunk Vundef) with Vundef.",
            "VernacExtend",
            "a748c5f70133a20febb1e75a52499fc96c214df8"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct chunk; auto.",
            "VernacExtend",
            "234fe38ab87ab00a7e392aa676ac592093a01f58"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (C: forall q, size_quantity_nat q = size_chunk_nat chunk -> (chunk = Mint32 \\/ chunk = Many32 \\/ chunk = Mint64 \\/ chunk = Many64) -> shape_decoding chunk (mv1 :: mvl) (Val.load_result chunk (proj_value q (mv1 :: mvl)))).",
            "VernacExtend",
            "7ad4ecc338367f1b07d693a447e82b59889b1ae6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold proj_value.",
            "VernacExtend",
            "97b7d05b29cbf6194e88297fde1d5ffbb1fde2eb"
        ],
        [
            "destruct mv1; auto.",
            "VernacExtend",
            "1d25232616cf56e2ce987dd7c3ca70ff1b7416ad"
        ],
        [
            "destruct (size_quantity_nat_pos q) as [sz EQ].",
            "VernacExtend",
            "6f01c98e8b643ed74cf3fba92b835aef7dfd9d05"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold proj_sumbool.",
            "VernacExtend",
            "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
        ],
        [
            "rewrite dec_eq_true.",
            "VernacExtend",
            "28b046c22f8f69c0651cbac642dd4f2013af7847"
        ],
        [
            "destruct (quantity_eq q q0); auto.",
            "VernacExtend",
            "f05abc53d5da570dbe5c5e9c0cfb132b8e612778"
        ],
        [
            "destruct (Nat.eqb sz n) eqn:EQN; auto.",
            "VernacExtend",
            "1fbf17417f531a346579609a41dfc213bf1f8c0f"
        ],
        [
            "destruct (check_value sz v q mvl) eqn:CHECK; auto.",
            "VernacExtend",
            "e178fd249df6770aa131e97e7e424e75dd25c29f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply beq_nat_true in EQN.",
            "VernacExtend",
            "8c69f78e56b0128decfc33482514aedae1aa92f8"
        ],
        [
            "subst n q0.",
            "VernacExtend",
            "f9e65f8923a8a79f89a983c5199eb9ed48e38d07"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct H0 as [E|[E|[E|E]]]; subst chunk; destruct q; auto || discriminate.",
            "VernacExtend",
            "cf2d351a164394b6963e6ab81798bb58e353af35"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply B; eauto.",
            "VernacExtend",
            "d9a38a805243b6cca1437a840d4607a6f6e68574"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold decode_val.",
            "VernacExtend",
            "10dec25d4dfd228a146df62531c0fff86fbbb0a9"
        ],
        [
            "destruct (proj_bytes (mv1 :: mvl)) as [bl|] eqn:PB.",
            "VernacExtend",
            "ed40e4586ee85b08bc3ea7bfa4873af8f5c2db6c"
        ],
        [
            "exploit (A mv1); eauto with coqlib.",
            "VernacExtend",
            "e9b079ed94d91684760da9f892ed1d29d8636103"
        ],
        [
            "intros [b1 EQ1]; subst mv1.",
            "VernacExtend",
            "85e082701d8162f439508ff18d36cdcbb6f00d46"
        ],
        [
            "destruct chunk; (apply shape_decoding_u || apply shape_decoding_b); eauto with coqlib.",
            "VernacExtend",
            "9baff6d248b1b4d50334aba7b34aa591992e3a0c"
        ],
        [
            "destruct chunk, Archi.ptr64; (apply shape_decoding_u || apply C); auto.",
            "VernacExtend",
            "15e25b447205d56d44c23021915449585ea035b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive memval_inject (f: meminj): memval -> memval -> Prop := | memval_inject_byte: forall n, memval_inject f (Byte n) (Byte n) | memval_inject_frag: forall v1 v2 q n, Val.inject f v1 v2 -> memval_inject f (Fragment v1 q n) (Fragment v2 q n) | memval_inject_undef: forall mv, memval_inject f Undef mv.",
            "VernacInductive",
            "d9a4805cd4656750ddc2bf248791386c006d2662"
        ],
        [
            "Lemma memval_inject_incr: forall f f' v1 v2, memval_inject f v1 v2 -> inject_incr f f' -> memval_inject f' v1 v2.",
            "VernacStartTheoremProof",
            "ee9b38a07cc9ab259738eeed797c3c9f80b2920e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H; econstructor.",
            "VernacExtend",
            "a32a18d7f0553d67a3b37edb905de7607aa73b58"
        ],
        [
            "eapply val_inject_incr; eauto.",
            "VernacExtend",
            "09721b804a24e0b21aa401ce8f82b8aa409bc73d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_bytes_inject: forall f vl vl', list_forall2 (memval_inject f) vl vl' -> forall bl, proj_bytes vl = Some bl -> proj_bytes vl' = Some bl.",
            "VernacStartTheoremProof",
            "32a709e353e7c71e57b0f4b13bd205af170c89e7"
        ],
        [
            "induction 1; simpl.",
            "VernacExtend",
            "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "inv H; try congruence.",
            "VernacExtend",
            "8f252f0504f5741a47af2e3623a5c5cfeff24a7c"
        ],
        [
            "destruct (proj_bytes al); intros.",
            "VernacExtend",
            "b1a351fa4844830c97e5c48361061c5338626e0f"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "rewrite (IHlist_forall2 l); auto.",
            "VernacExtend",
            "5a74a2e0fc3730dd639f47b0698c21554bb99233"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma check_value_inject: forall f vl vl', list_forall2 (memval_inject f) vl vl' -> forall v v' q n, check_value n v q vl = true -> Val.inject f v v' -> v <> Vundef -> check_value n v' q vl' = true.",
            "VernacStartTheoremProof",
            "11ffe63749617ba250f0a1bff11066b60f717db1"
        ],
        [
            "induction 1; intros; destruct n; simpl in *; auto.",
            "VernacExtend",
            "4d7856d4968ec61482a9916d236235b6608b78c7"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
        ],
        [
            "InvBooleans.",
            "VernacExtend",
            "2a6e1bb1be0f04ca24c3e441e9db23c18612c002"
        ],
        [
            "assert (n = n0) by (apply beq_nat_true; auto).",
            "VernacExtend",
            "975e0ff072ea36a6c0f927609ae167353774fc4e"
        ],
        [
            "subst v1 q0 n0.",
            "VernacExtend",
            "c82e43b26db8233851ea1c27009d7f4ceb2e928b"
        ],
        [
            "replace v2 with v'.",
            "VernacExtend",
            "e00793ffdaa3716974021428ba049f821d8857a2"
        ],
        [
            "unfold proj_sumbool; rewrite ! dec_eq_true.",
            "VernacExtend",
            "fc22dba1553f6b171a4991ad79b904c85e9ce98f"
        ],
        [
            "rewrite <- beq_nat_refl.",
            "VernacExtend",
            "6483e653b28875693c3c92037ba92da24c711ae3"
        ],
        [
            "simpl; eauto.",
            "VernacExtend",
            "4ce65de88075efadc9056201dfbe2495f09587e9"
        ],
        [
            "inv H2; try discriminate; inv H4; congruence.",
            "VernacExtend",
            "9a76bc4ebf98d7567ef4c67eaa70ef205fe20a8d"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_value_inject: forall f q vl1 vl2, list_forall2 (memval_inject f) vl1 vl2 -> Val.inject f (proj_value q vl1) (proj_value q vl2).",
            "VernacStartTheoremProof",
            "5013bd5a641ca5c7f34992f3d77de143c63a805c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold proj_value.",
            "VernacExtend",
            "97b7d05b29cbf6194e88297fde1d5ffbb1fde2eb"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inversion H0; subst; auto.",
            "VernacExtend",
            "4b0184c50af1478593e298baa23aefdebab0f3c7"
        ],
        [
            "destruct (check_value (size_quantity_nat q) v1 q (Fragment v1 q0 n :: al)) eqn:B; auto.",
            "VernacExtend",
            "7ca3efc9e68044504ac3bf2cbbd02df8e9e3df47"
        ],
        [
            "destruct (Val.eq v1 Vundef).",
            "VernacExtend",
            "90d88f42bbfc44420df92e6ff1884012e33dc2b7"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "erewrite check_value_inject by eauto.",
            "VernacExtend",
            "8f9627d06664ae770787a793d2155df2a5616133"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_bytes_not_inject: forall f vl vl', list_forall2 (memval_inject f) vl vl' -> proj_bytes vl = None -> proj_bytes vl' <> None -> In Undef vl.",
            "VernacStartTheoremProof",
            "451ee6e141c5bce57d742b6a9d033f4da38cdf28"
        ],
        [
            "induction 1; simpl; intros.",
            "VernacExtend",
            "34c415c4beb6a44207941dd3a1249a87d73af3a3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "inv H; try congruence.",
            "VernacExtend",
            "8f252f0504f5741a47af2e3623a5c5cfeff24a7c"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply IHlist_forall2.",
            "VernacExtend",
            "8e8cbe9a1265d03bc1d588f1cfa9661e7120a304"
        ],
        [
            "destruct (proj_bytes al); congruence.",
            "VernacExtend",
            "59f8e5c746810eddcb5136cb8d005c9bc39df196"
        ],
        [
            "destruct (proj_bytes bl); congruence.",
            "VernacExtend",
            "33bb1556873dd255620558506a6227e5cad46289"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma check_value_undef: forall n q v vl, In Undef vl -> check_value n v q vl = false.",
            "VernacStartTheoremProof",
            "90350581d283b5ac9dc52ece8932189de7299669"
        ],
        [
            "induction n; intros; simpl.",
            "VernacExtend",
            "f27a2774667ef3bddfddc5ec776ca116504c7463"
        ],
        [
            "destruct vl.",
            "VernacExtend",
            "4960e0c881663ef3ca1c004c0b52fc200dff7e94"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct vl.",
            "VernacExtend",
            "4960e0c881663ef3ca1c004c0b52fc200dff7e94"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct m; auto.",
            "VernacExtend",
            "a8b5a8c4be5c2b48bdc511e0732df482c9073b97"
        ],
        [
            "simpl in H; destruct H.",
            "VernacExtend",
            "38eef4331a212505c35fb3217ab7baa59eb700da"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "rewrite IHn; auto.",
            "VernacExtend",
            "317b9a54627f8cc619b6611fa844d1b3ef42be9a"
        ],
        [
            "apply andb_false_r.",
            "VernacExtend",
            "96acabd8a60f7c2e82c0ec27c34e893436485a16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_value_undef: forall q vl, In Undef vl -> proj_value q vl = Vundef.",
            "VernacStartTheoremProof",
            "7de395e189ddcf178140aad72f9de88276803513"
        ],
        [
            "intros; unfold proj_value.",
            "VernacExtend",
            "e91ab8850928a1b450c2a1c5a0dd45f35c82c04e"
        ],
        [
            "destruct vl; auto.",
            "VernacExtend",
            "5e0d7b7ee7cb863a572a97c855ca63efe95a2110"
        ],
        [
            "destruct m; auto.",
            "VernacExtend",
            "a8b5a8c4be5c2b48bdc511e0732df482c9073b97"
        ],
        [
            "rewrite check_value_undef.",
            "VernacExtend",
            "a5c8fc4bcf11f5c3d07cf203ceefb0fe8c68be0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem decode_val_inject: forall f vl1 vl2 chunk, list_forall2 (memval_inject f) vl1 vl2 -> Val.inject f (decode_val chunk vl1) (decode_val chunk vl2).",
            "VernacStartTheoremProof",
            "7cdfb7cc480f9a5203218d67e73ef8b32c26587a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold decode_val.",
            "VernacExtend",
            "10dec25d4dfd228a146df62531c0fff86fbbb0a9"
        ],
        [
            "destruct (proj_bytes vl1) as [bl1|] eqn:PB1.",
            "VernacExtend",
            "ba217322ec43b346ac88e67064c34d8f58307fb5"
        ],
        [
            "exploit proj_bytes_inject; eauto.",
            "VernacExtend",
            "91d187d86ee7a431d823b23252087b8b5bc0f89b"
        ],
        [
            "intros PB2.",
            "VernacExtend",
            "85761cd1b87a7b4fbb6f2d17b141ab92e3cd0cb6"
        ],
        [
            "rewrite PB2.",
            "VernacExtend",
            "899fda8836f42d44a6ad082e56ee49a320f1a3d1"
        ],
        [
            "destruct chunk; constructor.",
            "VernacExtend",
            "c3cd437fc864650e0c93a49ef831437ca0584572"
        ],
        [
            "assert (A: forall q fn, Val.inject f (Val.load_result chunk (proj_value q vl1)) (match proj_bytes vl2 with | Some bl => fn bl | None => Val.load_result chunk (proj_value q vl2) end)).",
            "VernacExtend",
            "aa8d7182b75e16798bf706c18c449b5b01e4d2e1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (proj_bytes vl2) as [bl2|] eqn:PB2.",
            "VernacExtend",
            "e936dc4f6c421f334c95cb5c3df56486382a5ea8"
        ],
        [
            "rewrite proj_value_undef.",
            "VernacExtend",
            "053a7861c7a22a575967a223ab15143712a284c1"
        ],
        [
            "destruct chunk; auto.",
            "VernacExtend",
            "234fe38ab87ab00a7e392aa676ac592093a01f58"
        ],
        [
            "eapply proj_bytes_not_inject; eauto.",
            "VernacExtend",
            "dcde079fb8b607be8c4da99709ed5dd659fcc098"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply Val.load_result_inject.",
            "VernacExtend",
            "344f83eab7a4efeed8bf79337751a6aeb4cdf096"
        ],
        [
            "apply proj_value_inject; auto.",
            "VernacExtend",
            "8ff19e92e224de82997c81caa76c6ef787c12771"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct chunk; destruct Archi.ptr64; auto.",
            "VernacExtend",
            "d7a7d5ca613604da20a70bd5f8caf8ce2ebcc3de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_bytes_inject: forall f bl, list_forall2 (memval_inject f) (inj_bytes bl) (inj_bytes bl).",
            "VernacStartTheoremProof",
            "06c1a086e0983fcd3d00056af136ff289e718061"
        ],
        [
            "induction bl; constructor; auto.",
            "VernacExtend",
            "b47a4f7b347db4b07a22e6026a7062ba74240ad3"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repeat_Undef_inject_any: forall f vl, list_forall2 (memval_inject f) (list_repeat (length vl) Undef) vl.",
            "VernacStartTheoremProof",
            "762604b59fc07cb5225038e656d25c2033339559"
        ],
        [
            "induction vl; simpl; constructor; auto.",
            "VernacExtend",
            "21ecdc1eed0d7b8ca02ab52ab59e5d671e060071"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repeat_Undef_inject_encode_val: forall f chunk v, list_forall2 (memval_inject f) (list_repeat (size_chunk_nat chunk) Undef) (encode_val chunk v).",
            "VernacStartTheoremProof",
            "2605a4992cd710fd5dc7c87f42fa899adb2ff324"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (encode_val_length chunk v).",
            "VernacExtend",
            "45c9f2e79cd2ae32ad402fc8d6aad73d3c918ad0"
        ],
        [
            "apply repeat_Undef_inject_any.",
            "VernacExtend",
            "e5f381742a46218e7932eee9006b63b92fc653aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repeat_Undef_inject_self: forall f n, list_forall2 (memval_inject f) (list_repeat n Undef) (list_repeat n Undef).",
            "VernacStartTheoremProof",
            "fa30294982ca7f13071701b51070c275fa6f6f57"
        ],
        [
            "induction n; simpl; constructor; auto.",
            "VernacExtend",
            "486446ffaae1e8bee48d924ad85ccf314a91e73c"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_value_inject: forall f v1 v2 q, Val.inject f v1 v2 -> list_forall2 (memval_inject f) (inj_value q v1) (inj_value q v2).",
            "VernacStartTheoremProof",
            "8b70ae7819ee661a5ddec308a869dd0a4f3ebafa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Local Transparent inj_value.",
            "VernacSetOpacity",
            "f25b58f0f6a0602141c5425378a73f1276f41f09"
        ],
        [
            "unfold inj_value.",
            "VernacExtend",
            "5cb78e291e4286787390c016d326fccde4c134eb"
        ],
        [
            "generalize (size_quantity_nat q).",
            "VernacExtend",
            "994613cc38f7fd01424b3d218428a836ecb01c58"
        ],
        [
            "induction n; simpl; constructor; auto.",
            "VernacExtend",
            "486446ffaae1e8bee48d924ad85ccf314a91e73c"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem encode_val_inject: forall f v1 v2 chunk, Val.inject f v1 v2 -> list_forall2 (memval_inject f) (encode_val chunk v1) (encode_val chunk v2).",
            "VernacStartTheoremProof",
            "3b55bfcfbcfac621e63dd9221875ddfb26826c27"
        ],
        [
            "Local Opaque list_repeat.",
            "VernacSetOpacity",
            "7df1720f2bad66ada62dfb68117b999a2b553ff8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; subst; simpl; destruct chunk; auto using inj_bytes_inject, inj_value_inject, repeat_Undef_inject_self, repeat_Undef_inject_encode_val.",
            "VernacExtend",
            "bb3c6f4912085fb2849615cda04e0543b0013338"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Archi.ptr64; auto using inj_value_inject, repeat_Undef_inject_self.",
            "VernacExtend",
            "ba1223b1d1bef816ddb7e91eba8a9b56b074829a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Archi.ptr64; auto using inj_value_inject, repeat_Undef_inject_self.",
            "VernacExtend",
            "ba1223b1d1bef816ddb7e91eba8a9b56b074829a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold encode_val.",
            "VernacExtend",
            "96609d6f62941199fb9aa6b6ef635128c2dcc0d8"
        ],
        [
            "destruct v2; apply inj_value_inject; auto.",
            "VernacExtend",
            "1856519316e7f8ce227d899fa3b3f4af02eb803a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold encode_val.",
            "VernacExtend",
            "96609d6f62941199fb9aa6b6ef635128c2dcc0d8"
        ],
        [
            "destruct v2; apply inj_value_inject; auto.",
            "VernacExtend",
            "1856519316e7f8ce227d899fa3b3f4af02eb803a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition memval_lessdef: memval -> memval -> Prop := memval_inject inject_id.",
            "VernacDefinition",
            "189c94a4f636f5a572d8b67f9331d6a139b61069"
        ],
        [
            "Lemma memval_lessdef_refl: forall mv, memval_lessdef mv mv.",
            "VernacStartTheoremProof",
            "f6e485ed8bd2262355b02f9fc3531f3f11fb685e"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "destruct mv; econstructor.",
            "VernacExtend",
            "73fa4230a0af64dc03f04a8195183e51b06186a0"
        ],
        [
            "apply val_inject_id.",
            "VernacExtend",
            "8f9aaca259b9fee4c64ee0ef5ab5a4df19b49be5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memval_inject_compose: forall f f' v1 v2 v3, memval_inject f v1 v2 -> memval_inject f' v2 v3 -> memval_inject (compose_meminj f f') v1 v3.",
            "VernacStartTheoremProof",
            "4dec682c91875a4f3c42c47e0dad38355e5919b0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "eapply val_inject_compose; eauto.",
            "VernacExtend",
            "431386584de39faf1b8bb5901fc429eec9acbb41"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_of_bytes_append: forall l2 l1, int_of_bytes (l1 ++ l2) = int_of_bytes l1 + int_of_bytes l2 * two_p (Z.of_nat (length l1) * 8).",
            "VernacStartTheoremProof",
            "edf04d2f1fbce9a474b293ddca7a953032d43fe2"
        ],
        [
            "induction l1; simpl int_of_bytes; intros.",
            "VernacExtend",
            "e2a768e0e225d20a6e3f2d984a8ca62ab62ef916"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "simpl length.",
            "VernacExtend",
            "cab663a1b923ec4538f37af4b3dac18c303feac5"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "replace (Z.succ (Z.of_nat (length l1)) * 8) with (Z.of_nat (length l1) * 8 + 8) by omega.",
            "VernacExtend",
            "49451cbb3f8a9c5c58183d3c1cf8708da015edde"
        ],
        [
            "rewrite two_p_is_exp.",
            "VernacExtend",
            "d09063950058d6baf7fd7bf47cb00fb06e0be132"
        ],
        [
            "change (two_p 8) with 256.",
            "VernacExtend",
            "8e4a2e0d40c707a864051b1f29f65a607b08d7f3"
        ],
        [
            "rewrite IHl1.",
            "VernacExtend",
            "ff982e15bacd402f06c6809dc374790cc3fb6db2"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_of_bytes_range: forall l, 0 <= int_of_bytes l < two_p (Z.of_nat (length l) * 8).",
            "VernacStartTheoremProof",
            "460beb5f19ff8d998c23b1ac3f50aa82b14f0c84"
        ],
        [
            "induction l; intros.",
            "VernacExtend",
            "f3f6b28c6822ad560a06f008ea0a5aa487d0e8e3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "simpl length.",
            "VernacExtend",
            "cab663a1b923ec4538f37af4b3dac18c303feac5"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "replace (Z.succ (Z.of_nat (length l)) * 8) with (Z.of_nat (length l) * 8 + 8) by omega.",
            "VernacExtend",
            "c8a9434c3f5181d8aa2d7b171820a6c1140749e9"
        ],
        [
            "rewrite two_p_is_exp.",
            "VernacExtend",
            "d09063950058d6baf7fd7bf47cb00fb06e0be132"
        ],
        [
            "change (two_p 8) with 256.",
            "VernacExtend",
            "8e4a2e0d40c707a864051b1f29f65a607b08d7f3"
        ],
        [
            "simpl int_of_bytes.",
            "VernacExtend",
            "89052208561f491339e1d85067732ca3e40103d4"
        ],
        [
            "generalize (Byte.unsigned_range a).",
            "VernacExtend",
            "1edf421345b5334fdeb934b1f8e854f9a80acb37"
        ],
        [
            "change Byte.modulus with 256.",
            "VernacExtend",
            "fe110831a670a83b679fb93964498353b8ea06d6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_proj_bytes: forall l b, proj_bytes l = Some b -> length b = length l.",
            "VernacStartTheoremProof",
            "2436f4b8ded89758150684d7a38c8db1261619d7"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
        ],
        [
            "destruct a; try discriminate.",
            "VernacExtend",
            "fde6b0aa5849f5ce2cd41eb99544a829f1038d46"
        ],
        [
            "destruct (proj_bytes l) eqn:E; inv H.",
            "VernacExtend",
            "459a08037ec01cf7787ccaa12c6c3ac6bb3d158e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_bytes_append: forall l2 l1, proj_bytes (l1 ++ l2) = match proj_bytes l1, proj_bytes l2 with | Some b1, Some b2 => Some (b1 ++ b2) | _, _ => None end.",
            "VernacStartTheoremProof",
            "c0cf3f9217e858aef46e473881a83bb68772a39f"
        ],
        [
            "induction l1; simpl.",
            "VernacExtend",
            "0211f0dbe6de9e94f437ec4c78563553f73c3598"
        ],
        [
            "destruct (proj_bytes l2); auto.",
            "VernacExtend",
            "24a23ff2d639d9285c7c9771f40170c560224085"
        ],
        [
            "destruct a; auto.",
            "VernacExtend",
            "7f3d8b3039d2691d4be2748b78f9d8a9a90a4b44"
        ],
        [
            "rewrite IHl1.",
            "VernacExtend",
            "ff982e15bacd402f06c6809dc374790cc3fb6db2"
        ],
        [
            "destruct (proj_bytes l1); auto.",
            "VernacExtend",
            "3fb2e05f93fc4f2568853e5d8b110ffedb2979ef"
        ],
        [
            "destruct (proj_bytes l2); auto.",
            "VernacExtend",
            "24a23ff2d639d9285c7c9771f40170c560224085"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_val_int64: forall l1 l2, length l1 = 4%nat -> length l2 = 4%nat -> Archi.ptr64 = false -> Val.lessdef (decode_val Mint64 (l1 ++ l2)) (Val.longofwords (decode_val Mint32 (if Archi.big_endian then l1 else l2)) (decode_val Mint32 (if Archi.big_endian then l2 else l1))).",
            "VernacStartTheoremProof",
            "b7bb02a5227e721d269c2a24adf65cb5e59f4c8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold decode_val.",
            "VernacExtend",
            "10dec25d4dfd228a146df62531c0fff86fbbb0a9"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite proj_bytes_append.",
            "VernacExtend",
            "e9e38a25ac88f2ab3c7c38da5eef7ca025018ee8"
        ],
        [
            "destruct (proj_bytes l1) as [b1|] eqn:B1; destruct (proj_bytes l2) as [b2|] eqn:B2; auto.",
            "VernacExtend",
            "f981e87cf968250b4f7c56dac52011d00c533bae"
        ],
        [
            "exploit length_proj_bytes.",
            "VernacExtend",
            "7f7b979ce633c0ac30566ba010a864c825791091"
        ],
        [
            "eexact B1.",
            "VernacExtend",
            "319f989dd06fbf66dfd3624fa87953bf5bc5028c"
        ],
        [
            "rewrite H; intro L1.",
            "VernacExtend",
            "b2fd413d2a2d7b29ab3a219fd4ed5bd50c9fa714"
        ],
        [
            "exploit length_proj_bytes.",
            "VernacExtend",
            "7f7b979ce633c0ac30566ba010a864c825791091"
        ],
        [
            "eexact B2.",
            "VernacExtend",
            "846f65ccba9eb313d914e4dcc4e63755de8053e8"
        ],
        [
            "rewrite H0; intro L2.",
            "VernacExtend",
            "0a61a4946e5650e6f5364c87104f923854a46e31"
        ],
        [
            "assert (UR: forall l, length l = 4%nat -> Int.unsigned (Int.repr (int_of_bytes l)) = int_of_bytes l).",
            "VernacExtend",
            "0747974515c10929cda5b48424701bff6b450c41"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Int.unsigned_repr.",
            "VernacExtend",
            "b0c00ecd942fa1ef71014281b42a72ea79884f32"
        ],
        [
            "generalize (int_of_bytes_range l).",
            "VernacExtend",
            "070975989a60b2b35df0adfb40ee02b2f71882be"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "change (two_p (Z.of_nat 4 * 8)) with (Int.max_unsigned + 1).",
            "VernacExtend",
            "636c0baaaf70b98efaa106c27b589004e43068bb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Val.lessdef_same.",
            "VernacExtend",
            "f26d241c98c370341c0dcb21d6ad8f8a17a30315"
        ],
        [
            "unfold decode_int, rev_if_be.",
            "VernacExtend",
            "9d45a61b1ff0e41706ee3468932d1696aa4f344a"
        ],
        [
            "destruct Archi.big_endian; rewrite B1; rewrite B2.",
            "VernacExtend",
            "d557b37a5b88371a9eaffcb5ad65e03adaaad0b5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- (rev_length b1) in L1.",
            "VernacExtend",
            "8dd34881aacfc881dfa2a45d1172bc82e4946e8a"
        ],
        [
            "rewrite <- (rev_length b2) in L2.",
            "VernacExtend",
            "61ce0a643fdf6d77e2f7f9d5f1ca1c09c5a8e724"
        ],
        [
            "rewrite rev_app_distr.",
            "VernacExtend",
            "e106d87b1c2c7509fe64f9ad912ba27f152081c3"
        ],
        [
            "set (b1' := rev b1) in *; set (b2' := rev b2) in *.",
            "VernacExtend",
            "c954c0bb8b03586a227bd2500118a8f1642554b1"
        ],
        [
            "unfold Val.longofwords.",
            "VernacExtend",
            "dc6b79a408058b18e921d8efdd329c14bfa78699"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int64.ofwords_add.",
            "VernacExtend",
            "a0b3f20382aa569a0abdf29cea0590af87817357"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite !UR by auto.",
            "VernacExtend",
            "8e2829ff74ecd25a64c4d06a35168d85f82b59f5"
        ],
        [
            "rewrite int_of_bytes_append.",
            "VernacExtend",
            "85b547231f98df43228f8d411cb43a347c2243bb"
        ],
        [
            "rewrite L2.",
            "VernacExtend",
            "976198600d4e3a868ba5251c8dffee31de80af8a"
        ],
        [
            "change (Z.of_nat 4 * 8) with 32.",
            "VernacExtend",
            "2c379e9a40ee98284f06ea9526bb2fc44d78fdb8"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold Val.longofwords.",
            "VernacExtend",
            "dc6b79a408058b18e921d8efdd329c14bfa78699"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int64.ofwords_add.",
            "VernacExtend",
            "a0b3f20382aa569a0abdf29cea0590af87817357"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite !UR by auto.",
            "VernacExtend",
            "8e2829ff74ecd25a64c4d06a35168d85f82b59f5"
        ],
        [
            "rewrite int_of_bytes_append.",
            "VernacExtend",
            "85b547231f98df43228f8d411cb43a347c2243bb"
        ],
        [
            "rewrite L1.",
            "VernacExtend",
            "dd200678607c348c87d1db503a56d01f408edb5a"
        ],
        [
            "change (Z.of_nat 4 * 8) with 32.",
            "VernacExtend",
            "2c379e9a40ee98284f06ea9526bb2fc44d78fdb8"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bytes_of_int_append: forall n2 x2 n1 x1, 0 <= x1 < two_p (Z.of_nat n1 * 8) -> bytes_of_int (n1 + n2) (x1 + x2 * two_p (Z.of_nat n1 * 8)) = bytes_of_int n1 x1 ++ bytes_of_int n2 x2.",
            "VernacStartTheoremProof",
            "793e3bf1c76eb63713327f93503dcadda9d98b8a"
        ],
        [
            "induction n1; intros.",
            "VernacExtend",
            "110e1e640061b819fca7654c467aea3c129c1de5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (E: two_p (Z.of_nat (S n1) * 8) = two_p (Z.of_nat n1 * 8) * 256).",
            "VernacExtend",
            "9bcffc7512277641312df63a1cf2139c43de15bc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "change 256 with (two_p 8).",
            "VernacExtend",
            "5f8c567e2a3be4e99fd307165c4b27478ee55a51"
        ],
        [
            "rewrite <- two_p_is_exp.",
            "VernacExtend",
            "3e5dd28ca80a1938686082ddc0a22c4345d87d29"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite E in *.",
            "VernacExtend",
            "0fff7cf83349447fdfc59ccd484864978beb4750"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply Byte.eqm_samerepr.",
            "VernacExtend",
            "3e8153607310abb30bb9e31dc249e7ed3d4cbe4c"
        ],
        [
            "exists (x2 * two_p (Z.of_nat n1 * 8)).",
            "VernacExtend",
            "8afe2c584d9875684b0d35dbac6a73e4dc6ee42b"
        ],
        [
            "change Byte.modulus with 256.",
            "VernacExtend",
            "fe110831a670a83b679fb93964498353b8ea06d6"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite Z.mul_assoc.",
            "VernacExtend",
            "4a67867891309fe681dbff2ccbc22a88426adca1"
        ],
        [
            "rewrite Z_div_plus.",
            "VernacExtend",
            "1179fce0b01146bf75e2aa81288f834497b3a7c7"
        ],
        [
            "apply IHn1.",
            "VernacExtend",
            "6696dca661b714d745f1692095c9e6855bcd0b97"
        ],
        [
            "apply Zdiv_interval_1.",
            "VernacExtend",
            "249bb7e54e7cf9bc477279682f71f9d1da915d4d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply two_p_gt_ZERO; omega.",
            "VernacExtend",
            "8f34bbf65f7cc242f0b3064d493088fa943ee5c0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bytes_of_int64: forall i, bytes_of_int 8 (Int64.unsigned i) = bytes_of_int 4 (Int.unsigned (Int64.loword i)) ++ bytes_of_int 4 (Int.unsigned (Int64.hiword i)).",
            "VernacStartTheoremProof",
            "d40703668d01c24e28a06dc1e72de576f73f9be6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (bytes_of_int (4 + 4) (Int64.unsigned (Int64.ofwords (Int64.hiword i) (Int64.loword i)))).",
            "VernacExtend",
            "8fd962b2e00ebe9a3e9f9fd6ab96b6f058963b45"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Int64.ofwords_recompose.",
            "VernacExtend",
            "ad5957d90b6cef88079a2fe9788c28e4507ca947"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Int64.ofwords_add'.",
            "VernacExtend",
            "f6fac40b6198a642e65f612684eb73ef0ecd4c2f"
        ],
        [
            "change 32 with (Z.of_nat 4 * 8).",
            "VernacExtend",
            "1674247932c7406ef0316939fdf82906251d3a5d"
        ],
        [
            "rewrite Z.add_comm.",
            "VernacExtend",
            "cb1af9408ed4e4ab13bf29109365368cad89a879"
        ],
        [
            "apply bytes_of_int_append.",
            "VernacExtend",
            "780e0ebcf8743d5dd6c617d2520ceb407a749a55"
        ],
        [
            "apply Int.unsigned_range.",
            "VernacExtend",
            "7ccf4bc2134d305adc6d1166907640a13f05cd8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma encode_val_int64: forall v, Archi.ptr64 = false -> encode_val Mint64 v = encode_val Mint32 (if Archi.big_endian then Val.hiword v else Val.loword v) ++ encode_val Mint32 (if Archi.big_endian then Val.loword v else Val.hiword v).",
            "VernacStartTheoremProof",
            "54ec8dfacab0a70bbb00857ff5d274530a83c66c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold encode_val.",
            "VernacExtend",
            "96609d6f62941199fb9aa6b6ef635128c2dcc0d8"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "destruct v; destruct Archi.big_endian eqn:BI; try reflexivity; unfold Val.loword, Val.hiword, encode_val.",
            "VernacExtend",
            "b6ca7b9c96ac03b33f953ffb5ddde44584ae6349"
        ],
        [
            "unfold inj_bytes.",
            "VernacExtend",
            "1a75f96dd061ec020a28e14cf3581c75b7bfe986"
        ],
        [
            "rewrite <- map_app.",
            "VernacExtend",
            "d3f9a2ab47f4ac5688b6653482faafbec82eb5fb"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold encode_int, rev_if_be.",
            "VernacExtend",
            "4cf2717ea5a4f4a9db253fa742fe856cc9044c92"
        ],
        [
            "rewrite BI.",
            "VernacExtend",
            "76b1400205bf0b401c0638aa088712462f869484"
        ],
        [
            "rewrite <- rev_app_distr.",
            "VernacExtend",
            "0011c2b25b76c4845bfb4d202fff0d10f8c9a6cf"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply bytes_of_int64.",
            "VernacExtend",
            "259a365e25f2424ab988e0288bedf9fdc454d5ff"
        ],
        [
            "unfold inj_bytes.",
            "VernacExtend",
            "1a75f96dd061ec020a28e14cf3581c75b7bfe986"
        ],
        [
            "rewrite <- map_app.",
            "VernacExtend",
            "d3f9a2ab47f4ac5688b6653482faafbec82eb5fb"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold encode_int, rev_if_be.",
            "VernacExtend",
            "4cf2717ea5a4f4a9db253fa742fe856cc9044c92"
        ],
        [
            "rewrite BI.",
            "VernacExtend",
            "76b1400205bf0b401c0638aa088712462f869484"
        ],
        [
            "apply bytes_of_int64.",
            "VernacExtend",
            "259a365e25f2424ab988e0288bedf9fdc454d5ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "size_chunk_pos",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct chunk; simpl; omega.",
                        "VernacExtend",
                        "ebed44f52952bad146726e6a116c089f8befb883"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_chunk_conv",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct chunk; reflexivity.",
                        "VernacExtend",
                        "fe38edc7803c0f3e7d5efe5b8e39fb119a65f827"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_chunk_nat_pos",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (size_chunk_pos chunk).",
                        "VernacExtend",
                        "996ba49eae835362623228883dba1cf2131cba29"
                    ]
                },
                {
                    "command": [
                        "rewrite size_chunk_conv.",
                        "VernacExtend",
                        "e08e3036070cd4dd62b9e98e3710f956e4b0d953"
                    ]
                },
                {
                    "command": [
                        "destruct (size_chunk_nat chunk).",
                        "VernacExtend",
                        "b12c3f05aa5210e99e04c7d900123faae56bae3b"
                    ]
                },
                {
                    "command": [
                        "simpl; intros; omegaContradiction.",
                        "VernacExtend",
                        "f22c922b4888eeab94f0801745cb52edbe8ceb35"
                    ]
                },
                {
                    "command": [
                        "intros; exists n; auto.",
                        "VernacExtend",
                        "f36edf56a8fa69d31c1cc763fa8808aa52f6f675"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_chunk_Mptr",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "unfold Mptr; destruct Archi.ptr64; auto.",
                        "VernacExtend",
                        "a57636dda02d43ae23a599dc551d29372b6fab28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_chunk_pos",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct chunk; simpl; omega.",
                        "VernacExtend",
                        "ebed44f52952bad146726e6a116c089f8befb883"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_chunk_Mptr",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "unfold Mptr; destruct Archi.ptr64; auto.",
                        "VernacExtend",
                        "a57636dda02d43ae23a599dc551d29372b6fab28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_size_chunk_divides",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct chunk; simpl; try apply Z.divide_refl; exists 2; auto.",
                        "VernacExtend",
                        "30719d9410a51b6d8716443badd78e18334c003a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "align_le_divides",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct chunk1; destruct chunk2; simpl in *; solve [ omegaContradiction | apply Z.divide_refl | exists 2; reflexivity | exists 4; reflexivity | exists 8; reflexivity ].",
                        "VernacExtend",
                        "c6d8f01c9081debf5907d97b2f960bd7bc674d50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quantity_eq",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "size_quantity_nat_pos",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct q; [exists 3%nat | exists 7%nat]; auto.",
                        "VernacExtend",
                        "30f861a5ab809005e993e1e86b32da33ec6d52c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_bytes_of_int",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; intros.",
                        "VernacExtend",
                        "f4638561e18037d1d0dd2a07d3cbcf68a41a03a8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_if_be_length",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros; unfold rev_if_be; destruct Archi.big_endian.",
                        "VernacExtend",
                        "129cf99fc11f36417d419f76811908e5da393519"
                    ]
                },
                {
                    "command": [
                        "apply List.rev_length.",
                        "VernacExtend",
                        "e56a550bc5f23be1d08036d32e4e8302f596240e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_int_length",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold encode_int.",
                        "VernacExtend",
                        "4c2f4bce3087cf8d1b30b36515877fbfc752ed9c"
                    ]
                },
                {
                    "command": [
                        "rewrite rev_if_be_length.",
                        "VernacExtend",
                        "b08855e63b1baa555a5cf8f079d37aec73e2ac13"
                    ]
                },
                {
                    "command": [
                        "apply length_bytes_of_int.",
                        "VernacExtend",
                        "0e9a2f7b8240e08840f23265648634388dec6eb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_if_be_involutive",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros; unfold rev_if_be; destruct Archi.big_endian.",
                        "VernacExtend",
                        "129cf99fc11f36417d419f76811908e5da393519"
                    ]
                },
                {
                    "command": [
                        "apply List.rev_involutive.",
                        "VernacExtend",
                        "13b335fcf838dcfe68ea41b66dfb6ef594bf4c78"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_encode_int",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "unfold decode_int, encode_int; intros.",
                        "VernacExtend",
                        "e9c593b3eece699b7c2eb3ff0b78ef3db869fc53"
                    ]
                },
                {
                    "command": [
                        "rewrite rev_if_be_involutive.",
                        "VernacExtend",
                        "815612ced08396065ef7bff8144d8e1ee5f58632"
                    ]
                },
                {
                    "command": [
                        "apply int_of_bytes_of_int.",
                        "VernacExtend",
                        "f78d9270b17e9de3a819c429dbc6c0ca057aeaf6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_encode_int_1",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite decode_encode_int.",
                        "VernacExtend",
                        "86ac88db2768cc1cef49be905f77c2add12cc12d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_unsigned (Int.zero_ext 8 x)).",
                        "VernacExtend",
                        "286eda53a551d386a1471e6baf32e0f8ae30591e"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Int.zero_ext_mod.",
                        "VernacExtend",
                        "b85737893fce8d6953180a79323e060fa20c1201"
                    ]
                },
                {
                    "command": [
                        "compute.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_encode_int_2",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite decode_encode_int.",
                        "VernacExtend",
                        "86ac88db2768cc1cef49be905f77c2add12cc12d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_unsigned (Int.zero_ext 16 x)).",
                        "VernacExtend",
                        "1eff83ac2dd5da76176e6b0c509b2aa2dfa93519"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Int.zero_ext_mod.",
                        "VernacExtend",
                        "b85737893fce8d6953180a79323e060fa20c1201"
                    ]
                },
                {
                    "command": [
                        "compute; intuition congruence.",
                        "VernacExtend",
                        "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_encode_int_4",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite decode_encode_int.",
                        "VernacExtend",
                        "86ac88db2768cc1cef49be905f77c2add12cc12d"
                    ]
                },
                {
                    "command": [
                        "transitivity (Int.repr (Int.unsigned x)).",
                        "VernacExtend",
                        "75f558ca7f6a69a6fb920fb7a06bd21df3420f44"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small.",
                        "VernacExtend",
                        "439f7572e12963e1685c905bb39e49700a5d1e32"
                    ]
                },
                {
                    "command": [
                        "apply Int.unsigned_range.",
                        "VernacExtend",
                        "7ccf4bc2134d305adc6d1166907640a13f05cd8f"
                    ]
                },
                {
                    "command": [
                        "apply Int.repr_unsigned.",
                        "VernacExtend",
                        "b3d43aae5f6f402bb1c3d022281cbe34cf2ae2f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_encode_int_8",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite decode_encode_int.",
                        "VernacExtend",
                        "86ac88db2768cc1cef49be905f77c2add12cc12d"
                    ]
                },
                {
                    "command": [
                        "transitivity (Int64.repr (Int64.unsigned x)).",
                        "VernacExtend",
                        "a58b28610573e774faf4bbd1c5c61f802963c24c"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small.",
                        "VernacExtend",
                        "439f7572e12963e1685c905bb39e49700a5d1e32"
                    ]
                },
                {
                    "command": [
                        "apply Int64.unsigned_range.",
                        "VernacExtend",
                        "8e8982a5c7f5f106ccaf8e2d86b747e29a861c08"
                    ]
                },
                {
                    "command": [
                        "apply Int64.repr_unsigned.",
                        "VernacExtend",
                        "155848270129eed13138aa7b4b60ec49b2ae866f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bytes_of_int_mod",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "intros; simpl; auto.",
                        "VernacExtend",
                        "bb993ce5970cef2c88f7bd735f72830b79b9dc0c"
                    ]
                },
                {
                    "command": [
                        "intros until y.",
                        "VernacExtend",
                        "d1d10153f927031bceccac11dd74d452de2e238a"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ.",
                        "VernacExtend",
                        "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
                    ]
                },
                {
                    "command": [
                        "replace (Z.succ (Z.of_nat n) * 8) with (Z.of_nat n * 8 + 8) by omega.",
                        "VernacExtend",
                        "c5ac9145b3f48e006a9ef541de3a8d54a28ecd48"
                    ]
                },
                {
                    "command": [
                        "rewrite two_p_is_exp; try omega.",
                        "VernacExtend",
                        "eb631028665c5902b8092f1b0f1dacb222e6479f"
                    ]
                },
                {
                    "command": [
                        "intro EQM.",
                        "VernacExtend",
                        "8663e074720a873945ed9c7c5b7cbb602d8918cf"
                    ]
                },
                {
                    "command": [
                        "simpl; decEq.",
                        "VernacExtend",
                        "a857428c7a9bd4d1a4f8ed48b07c4cd3a6b39035"
                    ]
                },
                {
                    "command": [
                        "apply Byte.eqm_samerepr.",
                        "VernacExtend",
                        "3e8153607310abb30bb9e31dc249e7ed3d4cbe4c"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "eapply Int.eqmod_divides; eauto.",
                        "VernacExtend",
                        "ddeb612e6ed15e113361d75ec766a980a79d3612"
                    ]
                },
                {
                    "command": [
                        "apply Z.divide_factor_r.",
                        "VernacExtend",
                        "706012ddfb6c3760cc11e8e0e553b80865c20439"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "destruct EQM as [k EQ].",
                        "VernacExtend",
                        "acce29f2b9a1fb76dfe6d216d0de7a4cc07ee71c"
                    ]
                },
                {
                    "command": [
                        "exists k.",
                        "VernacExtend",
                        "5bd085ef2f3e8bbd4bde88ae4ddb2fb4c72df1a9"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z_div_plus_full_l.",
                        "VernacExtend",
                        "98bb67792de44cb3a8fa813b5cf28ef5f90a82fc"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "change (two_p 8) with 256.",
                        "VernacExtend",
                        "8e4a2e0d40c707a864051b1f29f65a607b08d7f3"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_int_8_mod",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold encode_int.",
                        "VernacExtend",
                        "4c2f4bce3087cf8d1b30b36515877fbfc752ed9c"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply bytes_of_int_mod.",
                        "VernacExtend",
                        "1de7e4c49dbe057e685348587d08f2a1a5b634d1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_int_16_mod",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold encode_int.",
                        "VernacExtend",
                        "4c2f4bce3087cf8d1b30b36515877fbfc752ed9c"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply bytes_of_int_mod.",
                        "VernacExtend",
                        "1de7e4c49dbe057e685348587d08f2a1a5b634d1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_inj_bytes",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply List.map_length.",
                        "VernacExtend",
                        "f01623fd41ceca6e3686758aeb940c7fd19df354"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_inj_bytes",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "induction bl; simpl.",
                        "VernacExtend",
                        "be322c86f95474e0271d90807910c5fcb24c135f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite IHbl.",
                        "VernacExtend",
                        "37ca798092de68e54a07766eebdb0f106c573d79"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_proj_bytes",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "induction cl; simpl; intros.",
                        "VernacExtend",
                        "2d7d6fa55824b92e76ddb12e0d79f15d8dae1919"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
                    ]
                },
                {
                    "command": [
                        "destruct a; try congruence.",
                        "VernacExtend",
                        "d106cad63c7ecf246997d358e08c12ecf180f640"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes cl); inv H.",
                        "VernacExtend",
                        "c43fcef74d10fdec711e533f1c3a8676091c1f02"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_val_length",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct v; simpl; destruct chunk; solve_encode_val_length.",
                        "VernacExtend",
                        "4e793c5e6271d6adb619c0ac01b8e4b4f3a92e91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "check_inj_value",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "induction n; simpl.",
                        "VernacExtend",
                        "1f285429454cbe9bad08c3e1d2fa969e99890bea"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool.",
                        "VernacExtend",
                        "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "rewrite <- beq_nat_refl.",
                        "VernacExtend",
                        "6483e653b28875693c3c92037ba92da24c711ae3"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_inj_value",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold proj_value, inj_value.",
                        "VernacExtend",
                        "06c1b701269ae9d69a204c84e198c4dd9897fa45"
                    ]
                },
                {
                    "command": [
                        "destruct (size_quantity_nat_pos q) as [n EQ].",
                        "VernacExtend",
                        "7f4189df8c889f8f011f86700e26a530c84e39de"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ at 1.",
                        "VernacExtend",
                        "d30c0f183bed28dfff6beec035dd298ab5bfaad3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite check_inj_value.",
                        "VernacExtend",
                        "9b7cd3bd100e031c9d0ff3cbecdf94a847e98702"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_inj_value_mismatch",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold proj_value.",
                        "VernacExtend",
                        "97b7d05b29cbf6194e88297fde1d5ffbb1fde2eb"
                    ]
                },
                {
                    "command": [
                        "destruct (inj_value q2 v) eqn:V.",
                        "VernacExtend",
                        "d9426c3f0aa81c867086075a0a5b6030fd104a78"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct m; auto.",
                        "VernacExtend",
                        "a8b5a8c4be5c2b48bdc511e0732df482c9073b97"
                    ]
                },
                {
                    "command": [
                        "destruct (in_inj_value (Fragment v0 q n) v q2) as [n' EQ].",
                        "VernacExtend",
                        "4b1977970d30a956d67e5c65eee964f1f6f3a6f4"
                    ]
                },
                {
                    "command": [
                        "rewrite V; auto with coqlib.",
                        "VernacExtend",
                        "b66efac4d090f29169cc5fbf66d14d271245af10"
                    ]
                },
                {
                    "command": [
                        "inv EQ.",
                        "VernacExtend",
                        "7a279753e02407950a37d5a89440a2736f87b6db"
                    ]
                },
                {
                    "command": [
                        "destruct (size_quantity_nat_pos q1) as [p EQ1]; rewrite EQ1; simpl.",
                        "VernacExtend",
                        "b1f51b9e56235454d520244130928d02a1408dd9"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool.",
                        "VernacExtend",
                        "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_false by congruence.",
                        "VernacExtend",
                        "3a543ba3ef36fe52ac68364e315a639884229739"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_val_undef",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold decode_val.",
                        "VernacExtend",
                        "10dec25d4dfd228a146df62531c0fff86fbbb0a9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct chunk, Archi.ptr64; auto.",
                        "VernacExtend",
                        "43d50736a98ed4132286b2bc7601da776a8b43c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_bytes_inj_value",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct q; reflexivity.",
                        "VernacExtend",
                        "25e0a5ecdf987e26806d82e5c860d580c166ab58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_encode_val_similar",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intros until v2; intros TY SZ DE.",
                        "VernacExtend",
                        "8d1c0a72c803807f3c2902aa1763b8de1f1f6812"
                    ]
                },
                {
                    "command": [
                        "destruct chunk1; destruct chunk2; simpl in TY; try discriminate; simpl in SZ; try omegaContradiction; destruct v1; auto.",
                        "VernacExtend",
                        "c447ad11c147586b239ae453a6f3b2432eb0675d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_val_int8_signed_unsigned",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct v; simpl; auto.",
                        "VernacExtend",
                        "e0983a21ce967d56e72934fc217986c85bcd413e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_val_int16_signed_unsigned",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct v; simpl; auto.",
                        "VernacExtend",
                        "e0983a21ce967d56e72934fc217986c85bcd413e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_val_int8_zero_ext",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros; unfold encode_val.",
                        "VernacExtend",
                        "f4e9bba8042d12596505a95042ea67c9a5f116b1"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply encode_int_8_mod.",
                        "VernacExtend",
                        "ff75323b319745322593c38682ebc23464bfe0c5"
                    ]
                },
                {
                    "command": [
                        "apply Int.eqmod_zero_ext.",
                        "VernacExtend",
                        "356081e05d35efb6fff95186242f95335bac06d4"
                    ]
                },
                {
                    "command": [
                        "compute; intuition congruence.",
                        "VernacExtend",
                        "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_val_int8_sign_ext",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "intros; unfold encode_val.",
                        "VernacExtend",
                        "f4e9bba8042d12596505a95042ea67c9a5f116b1"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply encode_int_8_mod.",
                        "VernacExtend",
                        "ff75323b319745322593c38682ebc23464bfe0c5"
                    ]
                },
                {
                    "command": [
                        "apply Int.eqmod_sign_ext'.",
                        "VernacExtend",
                        "de5f4672b3e0529032800ea045d35a03982d2fa4"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_val_int16_zero_ext",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "intros; unfold encode_val.",
                        "VernacExtend",
                        "f4e9bba8042d12596505a95042ea67c9a5f116b1"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply encode_int_16_mod.",
                        "VernacExtend",
                        "1144c653ab3a13f43203687616e9a772a5ad50c6"
                    ]
                },
                {
                    "command": [
                        "apply Int.eqmod_zero_ext.",
                        "VernacExtend",
                        "356081e05d35efb6fff95186242f95335bac06d4"
                    ]
                },
                {
                    "command": [
                        "compute; intuition congruence.",
                        "VernacExtend",
                        "b1e4ec174532a4bdd5fe31fcded6521ccfff32fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_val_int16_sign_ext",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "intros; unfold encode_val.",
                        "VernacExtend",
                        "f4e9bba8042d12596505a95042ea67c9a5f116b1"
                    ]
                },
                {
                    "command": [
                        "decEq.",
                        "VernacExtend",
                        "d63fd87e305bec0bb61e895f0b3f59d7fe522213"
                    ]
                },
                {
                    "command": [
                        "apply encode_int_16_mod.",
                        "VernacExtend",
                        "1144c653ab3a13f43203687616e9a772a5ad50c6"
                    ]
                },
                {
                    "command": [
                        "apply Int.eqmod_sign_ext'.",
                        "VernacExtend",
                        "de5f4672b3e0529032800ea045d35a03982d2fa4"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_val_cast",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "unfold decode_val; intros; destruct chunk; auto; destruct (proj_bytes l); auto.",
                        "VernacExtend",
                        "7a63c5133e441f525f151d70ec6e90ca6176e773"
                    ]
                },
                {
                    "command": [
                        "unfold Val.sign_ext.",
                        "VernacExtend",
                        "9a95148240ec40ffa1f3915b483f4f0c0502c052"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.sign_ext_idem; auto.",
                        "VernacExtend",
                        "053353dc30e167308a15af312716168d92bf5fe1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold Val.zero_ext.",
                        "VernacExtend",
                        "99c9ee2d792e18c16e2291281af963f9d1d1ea17"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.zero_ext_idem; auto.",
                        "VernacExtend",
                        "23c5ae262c37f3ea7d5e72cbf16116955b9da8a3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold Val.sign_ext.",
                        "VernacExtend",
                        "9a95148240ec40ffa1f3915b483f4f0c0502c052"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.sign_ext_idem; auto.",
                        "VernacExtend",
                        "053353dc30e167308a15af312716168d92bf5fe1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold Val.zero_ext.",
                        "VernacExtend",
                        "99c9ee2d792e18c16e2291281af963f9d1d1ea17"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.zero_ext_idem; auto.",
                        "VernacExtend",
                        "23c5ae262c37f3ea7d5e72cbf16116955b9da8a3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_val_shape",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (A: forall mv mvs bs, proj_bytes mvs = Some bs -> In mv mvs -> exists b, mv = Byte b).",
                        "VernacExtend",
                        "58b6e0511e38c853fa69aab1e022cf77c128b0e3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction mvs; simpl; intros.",
                        "VernacExtend",
                        "6101f3a8ed404f58137b5f2d6de4e709430d3f61"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "destruct a; try discriminate.",
                        "VernacExtend",
                        "fde6b0aa5849f5ce2cd41eb99544a829f1038d46"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "exists i; auto.",
                        "VernacExtend",
                        "06b83cb51650711770bc1e0786f279124247af80"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes mvs); try discriminate.",
                        "VernacExtend",
                        "b00f7fe99007c783fe3b23807c2b703e66eec6d6"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (B: forall v q mv n mvs, check_value n v q mvs = true -> In mv mvs -> (n < size_quantity_nat q)%nat -> exists j, mv = Fragment v q j /\\ S j <> size_quantity_nat q).",
                        "VernacExtend",
                        "d59ab986c40f4a35634be7dc8355cc69df67872c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction n; destruct mvs; simpl; intros; try discriminate.",
                        "VernacExtend",
                        "a03e061b01695d320f9b382b408fa73d44f21b41"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "destruct m; try discriminate.",
                        "VernacExtend",
                        "d372b5ca03d638f2bbf3e1f77cee419959bc3c24"
                    ]
                },
                {
                    "command": [
                        "InvBooleans.",
                        "VernacExtend",
                        "2a6e1bb1be0f04ca24c3e441e9db23c18612c002"
                    ]
                },
                {
                    "command": [
                        "apply beq_nat_true in H4.",
                        "VernacExtend",
                        "51a3e2d5bc66978ce7e419ee7506f43392401aee"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "subst mv.",
                        "VernacExtend",
                        "61a3c7e15d208e3102da0ff3d4d18b9db214d770"
                    ]
                },
                {
                    "command": [
                        "exists n0; split; auto.",
                        "VernacExtend",
                        "a903b0be36521c3f9732c283b55da1e122d18a90"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "eapply IHn; eauto.",
                        "VernacExtend",
                        "d9908376f41a48355fc89af086f965ebf5b7c128"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (U: forall mvs, shape_decoding chunk mvs (Val.load_result chunk Vundef)).",
                        "VernacExtend",
                        "29d432392b56aa98efd9993fb88d1e899ae81015"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (Val.load_result chunk Vundef) with Vundef.",
                        "VernacExtend",
                        "a748c5f70133a20febb1e75a52499fc96c214df8"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct chunk; auto.",
                        "VernacExtend",
                        "234fe38ab87ab00a7e392aa676ac592093a01f58"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (C: forall q, size_quantity_nat q = size_chunk_nat chunk -> (chunk = Mint32 \\/ chunk = Many32 \\/ chunk = Mint64 \\/ chunk = Many64) -> shape_decoding chunk (mv1 :: mvl) (Val.load_result chunk (proj_value q (mv1 :: mvl)))).",
                        "VernacExtend",
                        "7ad4ecc338367f1b07d693a447e82b59889b1ae6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold proj_value.",
                        "VernacExtend",
                        "97b7d05b29cbf6194e88297fde1d5ffbb1fde2eb"
                    ]
                },
                {
                    "command": [
                        "destruct mv1; auto.",
                        "VernacExtend",
                        "1d25232616cf56e2ce987dd7c3ca70ff1b7416ad"
                    ]
                },
                {
                    "command": [
                        "destruct (size_quantity_nat_pos q) as [sz EQ].",
                        "VernacExtend",
                        "6f01c98e8b643ed74cf3fba92b835aef7dfd9d05"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool.",
                        "VernacExtend",
                        "9486e2b04f32f63b41268a30bc0b2a9032f4c304"
                    ]
                },
                {
                    "command": [
                        "rewrite dec_eq_true.",
                        "VernacExtend",
                        "28b046c22f8f69c0651cbac642dd4f2013af7847"
                    ]
                },
                {
                    "command": [
                        "destruct (quantity_eq q q0); auto.",
                        "VernacExtend",
                        "f05abc53d5da570dbe5c5e9c0cfb132b8e612778"
                    ]
                },
                {
                    "command": [
                        "destruct (Nat.eqb sz n) eqn:EQN; auto.",
                        "VernacExtend",
                        "1fbf17417f531a346579609a41dfc213bf1f8c0f"
                    ]
                },
                {
                    "command": [
                        "destruct (check_value sz v q mvl) eqn:CHECK; auto.",
                        "VernacExtend",
                        "e178fd249df6770aa131e97e7e424e75dd25c29f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply beq_nat_true in EQN.",
                        "VernacExtend",
                        "8c69f78e56b0128decfc33482514aedae1aa92f8"
                    ]
                },
                {
                    "command": [
                        "subst n q0.",
                        "VernacExtend",
                        "f9e65f8923a8a79f89a983c5199eb9ed48e38d07"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [E|[E|[E|E]]]; subst chunk; destruct q; auto || discriminate.",
                        "VernacExtend",
                        "cf2d351a164394b6963e6ab81798bb58e353af35"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply B; eauto.",
                        "VernacExtend",
                        "d9a38a805243b6cca1437a840d4607a6f6e68574"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold decode_val.",
                        "VernacExtend",
                        "10dec25d4dfd228a146df62531c0fff86fbbb0a9"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes (mv1 :: mvl)) as [bl|] eqn:PB.",
                        "VernacExtend",
                        "ed40e4586ee85b08bc3ea7bfa4873af8f5c2db6c"
                    ]
                },
                {
                    "command": [
                        "exploit (A mv1); eauto with coqlib.",
                        "VernacExtend",
                        "e9b079ed94d91684760da9f892ed1d29d8636103"
                    ]
                },
                {
                    "command": [
                        "intros [b1 EQ1]; subst mv1.",
                        "VernacExtend",
                        "85e082701d8162f439508ff18d36cdcbb6f00d46"
                    ]
                },
                {
                    "command": [
                        "destruct chunk; (apply shape_decoding_u || apply shape_decoding_b); eauto with coqlib.",
                        "VernacExtend",
                        "9baff6d248b1b4d50334aba7b34aa591992e3a0c"
                    ]
                },
                {
                    "command": [
                        "destruct chunk, Archi.ptr64; (apply shape_decoding_u || apply C); auto.",
                        "VernacExtend",
                        "15e25b447205d56d44c23021915449585ea035b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memval_inject_incr",
            "line_nb": 456,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H; econstructor.",
                        "VernacExtend",
                        "a32a18d7f0553d67a3b37edb905de7607aa73b58"
                    ]
                },
                {
                    "command": [
                        "eapply val_inject_incr; eauto.",
                        "VernacExtend",
                        "09721b804a24e0b21aa401ce8f82b8aa409bc73d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_bytes_inject",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl.",
                        "VernacExtend",
                        "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "inv H; try congruence.",
                        "VernacExtend",
                        "8f252f0504f5741a47af2e3623a5c5cfeff24a7c"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes al); intros.",
                        "VernacExtend",
                        "b1a351fa4844830c97e5c48361061c5338626e0f"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHlist_forall2 l); auto.",
                        "VernacExtend",
                        "5a74a2e0fc3730dd639f47b0698c21554bb99233"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "check_value_inject",
            "line_nb": 470,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; destruct n; simpl in *; auto.",
                        "VernacExtend",
                        "4d7856d4968ec61482a9916d236235b6608b78c7"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
                    ]
                },
                {
                    "command": [
                        "InvBooleans.",
                        "VernacExtend",
                        "2a6e1bb1be0f04ca24c3e441e9db23c18612c002"
                    ]
                },
                {
                    "command": [
                        "assert (n = n0) by (apply beq_nat_true; auto).",
                        "VernacExtend",
                        "975e0ff072ea36a6c0f927609ae167353774fc4e"
                    ]
                },
                {
                    "command": [
                        "subst v1 q0 n0.",
                        "VernacExtend",
                        "c82e43b26db8233851ea1c27009d7f4ceb2e928b"
                    ]
                },
                {
                    "command": [
                        "replace v2 with v'.",
                        "VernacExtend",
                        "e00793ffdaa3716974021428ba049f821d8857a2"
                    ]
                },
                {
                    "command": [
                        "unfold proj_sumbool; rewrite ! dec_eq_true.",
                        "VernacExtend",
                        "fc22dba1553f6b171a4991ad79b904c85e9ce98f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- beq_nat_refl.",
                        "VernacExtend",
                        "6483e653b28875693c3c92037ba92da24c711ae3"
                    ]
                },
                {
                    "command": [
                        "simpl; eauto.",
                        "VernacExtend",
                        "4ce65de88075efadc9056201dfbe2495f09587e9"
                    ]
                },
                {
                    "command": [
                        "inv H2; try discriminate; inv H4; congruence.",
                        "VernacExtend",
                        "9a76bc4ebf98d7567ef4c67eaa70ef205fe20a8d"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_value_inject",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold proj_value.",
                        "VernacExtend",
                        "97b7d05b29cbf6194e88297fde1d5ffbb1fde2eb"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst.",
                        "VernacExtend",
                        "123ebc73101dcac5781200440a60232218464ea1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst; auto.",
                        "VernacExtend",
                        "4b0184c50af1478593e298baa23aefdebab0f3c7"
                    ]
                },
                {
                    "command": [
                        "destruct (check_value (size_quantity_nat q) v1 q (Fragment v1 q0 n :: al)) eqn:B; auto.",
                        "VernacExtend",
                        "7ca3efc9e68044504ac3bf2cbbd02df8e9e3df47"
                    ]
                },
                {
                    "command": [
                        "destruct (Val.eq v1 Vundef).",
                        "VernacExtend",
                        "90d88f42bbfc44420df92e6ff1884012e33dc2b7"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "erewrite check_value_inject by eauto.",
                        "VernacExtend",
                        "8f9627d06664ae770787a793d2155df2a5616133"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_bytes_not_inject",
            "line_nb": 495,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl; intros.",
                        "VernacExtend",
                        "34c415c4beb6a44207941dd3a1249a87d73af3a3"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "inv H; try congruence.",
                        "VernacExtend",
                        "8f252f0504f5741a47af2e3623a5c5cfeff24a7c"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply IHlist_forall2.",
                        "VernacExtend",
                        "8e8cbe9a1265d03bc1d588f1cfa9661e7120a304"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes al); congruence.",
                        "VernacExtend",
                        "59f8e5c746810eddcb5136cb8d005c9bc39df196"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes bl); congruence.",
                        "VernacExtend",
                        "33bb1556873dd255620558506a6227e5cad46289"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "check_value_undef",
            "line_nb": 505,
            "steps": [
                {
                    "command": [
                        "induction n; intros; simpl.",
                        "VernacExtend",
                        "f27a2774667ef3bddfddc5ec776ca116504c7463"
                    ]
                },
                {
                    "command": [
                        "destruct vl.",
                        "VernacExtend",
                        "4960e0c881663ef3ca1c004c0b52fc200dff7e94"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct vl.",
                        "VernacExtend",
                        "4960e0c881663ef3ca1c004c0b52fc200dff7e94"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct m; auto.",
                        "VernacExtend",
                        "a8b5a8c4be5c2b48bdc511e0732df482c9073b97"
                    ]
                },
                {
                    "command": [
                        "simpl in H; destruct H.",
                        "VernacExtend",
                        "38eef4331a212505c35fb3217ab7baa59eb700da"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; auto.",
                        "VernacExtend",
                        "317b9a54627f8cc619b6611fa844d1b3ef42be9a"
                    ]
                },
                {
                    "command": [
                        "apply andb_false_r.",
                        "VernacExtend",
                        "96acabd8a60f7c2e82c0ec27c34e893436485a16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_value_undef",
            "line_nb": 518,
            "steps": [
                {
                    "command": [
                        "intros; unfold proj_value.",
                        "VernacExtend",
                        "e91ab8850928a1b450c2a1c5a0dd45f35c82c04e"
                    ]
                },
                {
                    "command": [
                        "destruct vl; auto.",
                        "VernacExtend",
                        "5e0d7b7ee7cb863a572a97c855ca63efe95a2110"
                    ]
                },
                {
                    "command": [
                        "destruct m; auto.",
                        "VernacExtend",
                        "a8b5a8c4be5c2b48bdc511e0732df482c9073b97"
                    ]
                },
                {
                    "command": [
                        "rewrite check_value_undef.",
                        "VernacExtend",
                        "a5c8fc4bcf11f5c3d07cf203ceefb0fe8c68be0b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_val_inject",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold decode_val.",
                        "VernacExtend",
                        "10dec25d4dfd228a146df62531c0fff86fbbb0a9"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes vl1) as [bl1|] eqn:PB1.",
                        "VernacExtend",
                        "ba217322ec43b346ac88e67064c34d8f58307fb5"
                    ]
                },
                {
                    "command": [
                        "exploit proj_bytes_inject; eauto.",
                        "VernacExtend",
                        "91d187d86ee7a431d823b23252087b8b5bc0f89b"
                    ]
                },
                {
                    "command": [
                        "intros PB2.",
                        "VernacExtend",
                        "85761cd1b87a7b4fbb6f2d17b141ab92e3cd0cb6"
                    ]
                },
                {
                    "command": [
                        "rewrite PB2.",
                        "VernacExtend",
                        "899fda8836f42d44a6ad082e56ee49a320f1a3d1"
                    ]
                },
                {
                    "command": [
                        "destruct chunk; constructor.",
                        "VernacExtend",
                        "c3cd437fc864650e0c93a49ef831437ca0584572"
                    ]
                },
                {
                    "command": [
                        "assert (A: forall q fn, Val.inject f (Val.load_result chunk (proj_value q vl1)) (match proj_bytes vl2 with | Some bl => fn bl | None => Val.load_result chunk (proj_value q vl2) end)).",
                        "VernacExtend",
                        "aa8d7182b75e16798bf706c18c449b5b01e4d2e1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes vl2) as [bl2|] eqn:PB2.",
                        "VernacExtend",
                        "e936dc4f6c421f334c95cb5c3df56486382a5ea8"
                    ]
                },
                {
                    "command": [
                        "rewrite proj_value_undef.",
                        "VernacExtend",
                        "053a7861c7a22a575967a223ab15143712a284c1"
                    ]
                },
                {
                    "command": [
                        "destruct chunk; auto.",
                        "VernacExtend",
                        "234fe38ab87ab00a7e392aa676ac592093a01f58"
                    ]
                },
                {
                    "command": [
                        "eapply proj_bytes_not_inject; eauto.",
                        "VernacExtend",
                        "dcde079fb8b607be8c4da99709ed5dd659fcc098"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "apply Val.load_result_inject.",
                        "VernacExtend",
                        "344f83eab7a4efeed8bf79337751a6aeb4cdf096"
                    ]
                },
                {
                    "command": [
                        "apply proj_value_inject; auto.",
                        "VernacExtend",
                        "8ff19e92e224de82997c81caa76c6ef787c12771"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct chunk; destruct Archi.ptr64; auto.",
                        "VernacExtend",
                        "d7a7d5ca613604da20a70bd5f8caf8ce2ebcc3de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_bytes_inject",
            "line_nb": 547,
            "steps": [
                {
                    "command": [
                        "induction bl; constructor; auto.",
                        "VernacExtend",
                        "b47a4f7b347db4b07a22e6026a7062ba74240ad3"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repeat_Undef_inject_any",
            "line_nb": 551,
            "steps": [
                {
                    "command": [
                        "induction vl; simpl; constructor; auto.",
                        "VernacExtend",
                        "21ecdc1eed0d7b8ca02ab52ab59e5d671e060071"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repeat_Undef_inject_encode_val",
            "line_nb": 555,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (encode_val_length chunk v).",
                        "VernacExtend",
                        "45c9f2e79cd2ae32ad402fc8d6aad73d3c918ad0"
                    ]
                },
                {
                    "command": [
                        "apply repeat_Undef_inject_any.",
                        "VernacExtend",
                        "e5f381742a46218e7932eee9006b63b92fc653aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repeat_Undef_inject_self",
            "line_nb": 560,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; constructor; auto.",
                        "VernacExtend",
                        "486446ffaae1e8bee48d924ad85ccf314a91e73c"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memval_lessdef_refl",
            "line_nb": 588,
            "steps": [
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "destruct mv; econstructor.",
                        "VernacExtend",
                        "73fa4230a0af64dc03f04a8195183e51b06186a0"
                    ]
                },
                {
                    "command": [
                        "apply val_inject_id.",
                        "VernacExtend",
                        "8f9aaca259b9fee4c64ee0ef5ab5a4df19b49be5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memval_inject_compose",
            "line_nb": 594,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "econstructor.",
                        "VernacExtend",
                        "57e0061dc596e77c9d30460f8165a53e99efafc2"
                    ]
                },
                {
                    "command": [
                        "eapply val_inject_compose; eauto.",
                        "VernacExtend",
                        "431386584de39faf1b8bb5901fc429eec9acbb41"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_of_bytes_append",
            "line_nb": 604,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl int_of_bytes; intros.",
                        "VernacExtend",
                        "e2a768e0e225d20a6e3f2d984a8ca62ab62ef916"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "simpl length.",
                        "VernacExtend",
                        "cab663a1b923ec4538f37af4b3dac18c303feac5"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ.",
                        "VernacExtend",
                        "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
                    ]
                },
                {
                    "command": [
                        "replace (Z.succ (Z.of_nat (length l1)) * 8) with (Z.of_nat (length l1) * 8 + 8) by omega.",
                        "VernacExtend",
                        "49451cbb3f8a9c5c58183d3c1cf8708da015edde"
                    ]
                },
                {
                    "command": [
                        "rewrite two_p_is_exp.",
                        "VernacExtend",
                        "d09063950058d6baf7fd7bf47cb00fb06e0be132"
                    ]
                },
                {
                    "command": [
                        "change (two_p 8) with 256.",
                        "VernacExtend",
                        "8e4a2e0d40c707a864051b1f29f65a607b08d7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1.",
                        "VernacExtend",
                        "ff982e15bacd402f06c6809dc374790cc3fb6db2"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_of_bytes_range",
            "line_nb": 618,
            "steps": [
                {
                    "command": [
                        "induction l; intros.",
                        "VernacExtend",
                        "f3f6b28c6822ad560a06f008ea0a5aa487d0e8e3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "simpl length.",
                        "VernacExtend",
                        "cab663a1b923ec4538f37af4b3dac18c303feac5"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ.",
                        "VernacExtend",
                        "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
                    ]
                },
                {
                    "command": [
                        "replace (Z.succ (Z.of_nat (length l)) * 8) with (Z.of_nat (length l) * 8 + 8) by omega.",
                        "VernacExtend",
                        "c8a9434c3f5181d8aa2d7b171820a6c1140749e9"
                    ]
                },
                {
                    "command": [
                        "rewrite two_p_is_exp.",
                        "VernacExtend",
                        "d09063950058d6baf7fd7bf47cb00fb06e0be132"
                    ]
                },
                {
                    "command": [
                        "change (two_p 8) with 256.",
                        "VernacExtend",
                        "8e4a2e0d40c707a864051b1f29f65a607b08d7f3"
                    ]
                },
                {
                    "command": [
                        "simpl int_of_bytes.",
                        "VernacExtend",
                        "89052208561f491339e1d85067732ca3e40103d4"
                    ]
                },
                {
                    "command": [
                        "generalize (Byte.unsigned_range a).",
                        "VernacExtend",
                        "1edf421345b5334fdeb934b1f8e854f9a80acb37"
                    ]
                },
                {
                    "command": [
                        "change Byte.modulus with 256.",
                        "VernacExtend",
                        "fe110831a670a83b679fb93964498353b8ea06d6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_proj_bytes",
            "line_nb": 634,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "64b5b263c28e9ead2d374e2c075c79c61f085ebe"
                    ]
                },
                {
                    "command": [
                        "destruct a; try discriminate.",
                        "VernacExtend",
                        "fde6b0aa5849f5ce2cd41eb99544a829f1038d46"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes l) eqn:E; inv H.",
                        "VernacExtend",
                        "459a08037ec01cf7787ccaa12c6c3ac6bb3d158e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_bytes_append",
            "line_nb": 643,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl.",
                        "VernacExtend",
                        "0211f0dbe6de9e94f437ec4c78563553f73c3598"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes l2); auto.",
                        "VernacExtend",
                        "24a23ff2d639d9285c7c9771f40170c560224085"
                    ]
                },
                {
                    "command": [
                        "destruct a; auto.",
                        "VernacExtend",
                        "7f3d8b3039d2691d4be2748b78f9d8a9a90a4b44"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1.",
                        "VernacExtend",
                        "ff982e15bacd402f06c6809dc374790cc3fb6db2"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes l1); auto.",
                        "VernacExtend",
                        "3fb2e05f93fc4f2568853e5d8b110ffedb2979ef"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes l2); auto.",
                        "VernacExtend",
                        "24a23ff2d639d9285c7c9771f40170c560224085"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bytes_of_int_append",
            "line_nb": 698,
            "steps": [
                {
                    "command": [
                        "induction n1; intros.",
                        "VernacExtend",
                        "110e1e640061b819fca7654c467aea3c129c1de5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (E: two_p (Z.of_nat (S n1) * 8) = two_p (Z.of_nat n1 * 8) * 256).",
                        "VernacExtend",
                        "9bcffc7512277641312df63a1cf2139c43de15bc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ.",
                        "VernacExtend",
                        "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
                    ]
                },
                {
                    "command": [
                        "change 256 with (two_p 8).",
                        "VernacExtend",
                        "5f8c567e2a3be4e99fd307165c4b27478ee55a51"
                    ]
                },
                {
                    "command": [
                        "rewrite <- two_p_is_exp.",
                        "VernacExtend",
                        "3e5dd28ca80a1938686082ddc0a22c4345d87d29"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite E in *.",
                        "VernacExtend",
                        "0fff7cf83349447fdfc59ccd484864978beb4750"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply Byte.eqm_samerepr.",
                        "VernacExtend",
                        "3e8153607310abb30bb9e31dc249e7ed3d4cbe4c"
                    ]
                },
                {
                    "command": [
                        "exists (x2 * two_p (Z.of_nat n1 * 8)).",
                        "VernacExtend",
                        "8afe2c584d9875684b0d35dbac6a73e4dc6ee42b"
                    ]
                },
                {
                    "command": [
                        "change Byte.modulus with 256.",
                        "VernacExtend",
                        "fe110831a670a83b679fb93964498353b8ea06d6"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_assoc.",
                        "VernacExtend",
                        "4a67867891309fe681dbff2ccbc22a88426adca1"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_div_plus.",
                        "VernacExtend",
                        "1179fce0b01146bf75e2aa81288f834497b3a7c7"
                    ]
                },
                {
                    "command": [
                        "apply IHn1.",
                        "VernacExtend",
                        "6696dca661b714d745f1692095c9e6855bcd0b97"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv_interval_1.",
                        "VernacExtend",
                        "249bb7e54e7cf9bc477279682f71f9d1da915d4d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply two_p_gt_ZERO; omega.",
                        "VernacExtend",
                        "8f34bbf65f7cc242f0b3064d493088fa943ee5c0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bytes_of_int64",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (bytes_of_int (4 + 4) (Int64.unsigned (Int64.ofwords (Int64.hiword i) (Int64.loword i)))).",
                        "VernacExtend",
                        "8fd962b2e00ebe9a3e9f9fd6ab96b6f058963b45"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.ofwords_recompose.",
                        "VernacExtend",
                        "ad5957d90b6cef88079a2fe9788c28e4507ca947"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.ofwords_add'.",
                        "VernacExtend",
                        "f6fac40b6198a642e65f612684eb73ef0ecd4c2f"
                    ]
                },
                {
                    "command": [
                        "change 32 with (Z.of_nat 4 * 8).",
                        "VernacExtend",
                        "1674247932c7406ef0316939fdf82906251d3a5d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_comm.",
                        "VernacExtend",
                        "cb1af9408ed4e4ab13bf29109365368cad89a879"
                    ]
                },
                {
                    "command": [
                        "apply bytes_of_int_append.",
                        "VernacExtend",
                        "780e0ebcf8743d5dd6c617d2520ceb407a749a55"
                    ]
                },
                {
                    "command": [
                        "apply Int.unsigned_range.",
                        "VernacExtend",
                        "7ccf4bc2134d305adc6d1166907640a13f05cd8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_val_int64",
            "line_nb": 745,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold encode_val.",
                        "VernacExtend",
                        "96609d6f62941199fb9aa6b6ef635128c2dcc0d8"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "destruct v; destruct Archi.big_endian eqn:BI; try reflexivity; unfold Val.loword, Val.hiword, encode_val.",
                        "VernacExtend",
                        "b6ca7b9c96ac03b33f953ffb5ddde44584ae6349"
                    ]
                },
                {
                    "command": [
                        "unfold inj_bytes.",
                        "VernacExtend",
                        "1a75f96dd061ec020a28e14cf3581c75b7bfe986"
                    ]
                },
                {
                    "command": [
                        "rewrite <- map_app.",
                        "VernacExtend",
                        "d3f9a2ab47f4ac5688b6653482faafbec82eb5fb"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold encode_int, rev_if_be.",
                        "VernacExtend",
                        "4cf2717ea5a4f4a9db253fa742fe856cc9044c92"
                    ]
                },
                {
                    "command": [
                        "rewrite BI.",
                        "VernacExtend",
                        "76b1400205bf0b401c0638aa088712462f869484"
                    ]
                },
                {
                    "command": [
                        "rewrite <- rev_app_distr.",
                        "VernacExtend",
                        "0011c2b25b76c4845bfb4d202fff0d10f8c9a6cf"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply bytes_of_int64.",
                        "VernacExtend",
                        "259a365e25f2424ab988e0288bedf9fdc454d5ff"
                    ]
                },
                {
                    "command": [
                        "unfold inj_bytes.",
                        "VernacExtend",
                        "1a75f96dd061ec020a28e14cf3581c75b7bfe986"
                    ]
                },
                {
                    "command": [
                        "rewrite <- map_app.",
                        "VernacExtend",
                        "d3f9a2ab47f4ac5688b6653482faafbec82eb5fb"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold encode_int, rev_if_be.",
                        "VernacExtend",
                        "4cf2717ea5a4f4a9db253fa742fe856cc9044c92"
                    ]
                },
                {
                    "command": [
                        "rewrite BI.",
                        "VernacExtend",
                        "76b1400205bf0b401c0638aa088712462f869484"
                    ]
                },
                {
                    "command": [
                        "apply bytes_of_int64.",
                        "VernacExtend",
                        "259a365e25f2424ab988e0288bedf9fdc454d5ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}