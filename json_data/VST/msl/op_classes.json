{
    "filename": "msl/op_classes.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.Extensionality.",
            "VernacRequire",
            "d43c56d815451e20eca5a50b2225b539844939c0"
        ],
        [
            "Require Import VST.msl.sepalg.",
            "VernacRequire",
            "b78005af0b326275ac24eaf70d32d2c944f2f772"
        ],
        [
            "Require Import VST.msl.ageable.",
            "VernacRequire",
            "33d8c1c5989baea87e4dc899987238c793a0bf7c"
        ],
        [
            "Require Import VST.msl.age_sepalg.",
            "VernacRequire",
            "cad836ec3483402ad7abb5247547b85aa23022fb"
        ],
        [
            "Require Import VST.msl.base.",
            "VernacRequire",
            "072f05eeaee48c6fa1aa483ac927301379bb7e30"
        ],
        [
            "Require Import VST.msl.predicates_hered.",
            "VernacRequire",
            "f8fb55649a0aabfc25cf8f10558688e329a108e8"
        ],
        [
            "Require Import VST.msl.predicates_sl.",
            "VernacRequire",
            "d96f7bad66a31afa2572e7e28b261d63c487ae76"
        ],
        [
            "Require Import VST.msl.subtypes.",
            "VernacRequire",
            "893bd874613ccc19e80a7c5fc92eb3ea88a8b1ae"
        ],
        [
            "Require Import VST.msl.subtypes_sl.",
            "VernacRequire",
            "fc6c359704ad1e11e63dffbbbcf5b32511336435"
        ],
        [
            "Require Import VST.msl.predicates_rec.",
            "VernacRequire",
            "aa5eaa655be01a3b1c63b73b86255252219ffa91"
        ],
        [
            "Class StarOp A := { starOp : A -> A -> A }.",
            "VernacInductive",
            "bdd6a1a87a873a014b73007d9f433725ea2a70b2"
        ],
        [
            "Instance baseStarOp {A}{agA: ageable A}{JA: Join A}{PA: Perm_alg A}{AgeA: Age_alg A} : StarOp (pred A) := {| starOp := sepcon |}.",
            "VernacInstance",
            "b9cf03c41145b3d30aa7c54c509f2f4516b903fa"
        ],
        [
            "Instance funStarOp (B: Type)(A: Type)(StarA: StarOp A) : StarOp (B -> A) := {| starOp := fun (P Q : B -> A) (b : B) => starOp (P b) (Q b) |}.",
            "VernacInstance",
            "96860d56af89ae1b41c2643106b74eb29ae39e61"
        ],
        [
            "Notation \"P '*' Q\" := (starOp P Q) : pred.",
            "VernacNotation",
            "5b547f10cc12d625731fb99dc25a32d7dd451609"
        ],
        [
            "Class DerivesOp A := { derivesOp : A -> A -> Prop }.",
            "VernacInductive",
            "26e2fb728d6875651949b796754c68696c580d40"
        ],
        [
            "Instance baseDerivesOp {A}{agA: ageable A} : DerivesOp (pred A) := {| derivesOp := @derives A agA|}.",
            "VernacInstance",
            "6dd35ecaf18d00e7291b8f9931a3b2ce2c304432"
        ],
        [
            "Instance funDerivesOp (B: Type)(A: Type)(DerivesA: DerivesOp A) : DerivesOp (B -> A) := {| derivesOp := fun (P Q : B -> A) => forall b, derivesOp (P b) (Q b) |}.",
            "VernacInstance",
            "9cfe0b500b562e21fe6774a0afbe5b9e459178d6"
        ],
        [
            "Notation \"P '|--' Q\" := (derivesOp P%pred Q%pred).",
            "VernacNotation",
            "d820ca6c75ab894070474906d10c57122ed7de04"
        ],
        [
            "Class WandOp A := { wandOp : A -> A -> A }.",
            "VernacInductive",
            "518324f0cdd3d6d62e72a935a44b88926fe6fd7d"
        ],
        [
            "Instance baseWandOp {A}{agA: ageable A}{JA: Join A}{PA: Perm_alg A}{AgeA: Age_alg A} : WandOp (pred A) := {| wandOp := wand |}.",
            "VernacInstance",
            "073b53047cf07010ae58e1c5ec5fb3bf43fcfdf8"
        ],
        [
            "Instance funWandOp (B: Type)(A: Type)(WandA: WandOp A) : WandOp (B -> A) := {| wandOp := fun (P Q : B -> A) (b : B) => wandOp (P b) (Q b) |}.",
            "VernacInstance",
            "a4bd0cd84cb6b5614725a0236e5da2c137515623"
        ],
        [
            "Notation \"P '-*' Q\" := (wandOp P Q) : pred.",
            "VernacNotation",
            "11d900e4b693de63fa197c7c079c3d5af665debb"
        ],
        [
            "Class EmpOp A := { Emp: A}.",
            "VernacInductive",
            "2f1e78875eaff220a9b5c2d375c0f73e7b2769a7"
        ],
        [
            "Instance baseEmpOp {A}{agA: ageable A}{JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{AgeA: Age_alg A} : EmpOp (pred A) := {| Emp := @emp A JA PA SA agA AgeA |}.",
            "VernacInstance",
            "f0714ac152df2bc47aa0ea2cce982183b6bfd55c"
        ],
        [
            "Instance funEmpOp (B: Type)(A: Type)(EmpA: EmpOp A) : EmpOp (B -> A) := {| Emp := fun (b : B) => Emp |}.",
            "VernacInstance",
            "ce93f0ace7e2da1d5000680133fd6c8499f47a0e"
        ],
        [
            "Section Test.",
            "VernacBeginSection",
            "7312dc3febac5f4f4f34b969a6193df7ca6d72da"
        ],
        [
            "Variable environ: Type.",
            "VernacAssumption",
            "97dc99436bbcc25053ca94aef6565b30c8984e49"
        ],
        [
            "Variables (rmap : Type) (Join_rmap: Join rmap) (Perm_rmap: @Perm_alg rmap Join_rmap) (Sep_rmap: @Sep_alg rmap Join_rmap) (Canc_rmap: @Canc_alg rmap Join_rmap) (Disj_rmap: @Disj_alg rmap Join_rmap) (ag_rmap: ageable rmap) (Age_rmap: @Age_alg rmap Join_rmap ag_rmap).",
            "VernacAssumption",
            "07818c9a6f8392c115e83f81ca6284250a1832f9"
        ],
        [
            "Existing Instance Join_rmap.",
            "VernacDeclareInstances",
            "f1085d9c76bcee1a3d8f6132a962ef35923cec25"
        ],
        [
            "Existing Instance Perm_rmap.",
            "VernacDeclareInstances",
            "5b16e56c98d881c2bfb8488f2cff5184a8885bf6"
        ],
        [
            "Existing Instance Sep_rmap.",
            "VernacDeclareInstances",
            "38257c6177b20e6335a217f2ccbe2c3e7f7551df"
        ],
        [
            "Existing Instance Canc_rmap.",
            "VernacDeclareInstances",
            "cc237f0e8fcf01fd3190b87a4ba7d300ff8b4d04"
        ],
        [
            "Existing Instance Disj_rmap.",
            "VernacDeclareInstances",
            "bbec1796c84bb1043063e6ed476ffd070d8e12e9"
        ],
        [
            "Existing Instance ag_rmap.",
            "VernacDeclareInstances",
            "8f589271598f258423dcdf17849cb9c8f1705292"
        ],
        [
            "Existing Instance Age_rmap.",
            "VernacDeclareInstances",
            "faadef0f83e0ca306dd36d3529aa9094713cfac7"
        ],
        [
            "Lemma test1: forall (P : environ -> pred rmap) (Q: pred rmap), P * Emp |-- P.",
            "VernacStartTheoremProof",
            "b0a63c0ec4590adc09695126c9fceea49cc5c74d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "simpl; rewrite sepcon_emp.",
            "VernacExtend",
            "509151159282bef7406af69ed445028bdefb7b7e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Test.",
            "VernacEndSegment",
            "5ef36602e05b1405a9de93a2ffeb72f5cdc86267"
        ]
    ],
    "proofs": [
        {
            "name": "test1",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite sepcon_emp.",
                        "VernacExtend",
                        "509151159282bef7406af69ed445028bdefb7b7e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}