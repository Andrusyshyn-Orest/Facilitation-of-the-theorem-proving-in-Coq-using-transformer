{
    "filename": "msl/Coqlib2.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import compcert.lib.Coqlib.",
            "VernacRequire",
            "0e8012a6c0062230df0c959370d96e0e84eae6bb"
        ],
        [
            "Require Import VST.msl.base.",
            "VernacRequire",
            "072f05eeaee48c6fa1aa483ac927301379bb7e30"
        ],
        [
            "Require Export VST.msl.Extensionality.",
            "VernacRequire",
            "856376dbeb3f50103cb1650571d23da9db902600"
        ],
        [
            "Hint Extern 1 (@eq _ _ _) => exact (proof_irr _ _) : extensionality.",
            "VernacHints",
            "569621d59b09876fea505ba9f730633053f02ec5"
        ],
        [
            "Hint Extern 2 (eq _ _) => apply exist_ext : extensionality.",
            "VernacHints",
            "2bda1b75d2a08fda753ecd83bb4c52b0bdbd0d1f"
        ],
        [
            "Hint Extern 2 (@eq _ (@existT _ _ _ _) (@existT _ _ _ _)) => apply existT_ext : extensionality.",
            "VernacHints",
            "d6e3cbb3c346309e3eb1919776c574139087a438"
        ],
        [
            "Tactic Notation \"forget\" constr(X) \"as\" ident(y) := set (y:=X) in *; clearbody y.",
            "VernacExtend",
            "a17d5f73cdc708281553e59afb00199cc08ef927"
        ],
        [
            "Ltac proof_irr := match goal with H: ?A, H' : ?A |- _ => generalize (proof_irr H H'); intro; subst H' end.",
            "VernacExtend",
            "2ffd40fd665d8888fc7ebbb7eef944f4dd9de411"
        ],
        [
            "Ltac inversion2 H1 H2 := rewrite H1 in H2; symmetry in H2; inv H2.",
            "VernacExtend",
            "48afccd54f7f3364e567ee6f687ad09e228d35b9"
        ],
        [
            "Ltac invT H := match type of H with | existT _ ?a ?b = existT _ ?a ?c => generalize (inj_pair2 _ _ a b c H); clear H; intro H; invT H | existT _ _ _ = existT _ _ _ => let HH := fresh in (injection H; intros _ HH; invT HH; invT H) | _ => inv H end.",
            "VernacExtend",
            "46db317555cb8bee4731210a4d077ea86974961b"
        ],
        [
            "Ltac invSome := match goal with | H: match ?A with Some _ => _ | None => None end = Some _ |- _ => let Hx := fresh in (revert H; case_eq A; [intros ? H Hx | intros H Hx]; inv Hx) | H: match ?A with Some _ => _ | None => False end |- _ => (revert H; case_eq A; [intros ? H ? | intros; contradiction]) | H: match ?A return _ with Some _ => _ | None => _ end eq_refl = Some _ |- _ => let Hx := fresh in (revert H; generalize (eq_refl A); pattern A at 1 3; destruct A; [ intros Hx H | intros ? H; discriminate H]) end.",
            "VernacExtend",
            "3b867f9fbc0add5aa60e0b66b59ae48007acb892"
        ],
        [
            "Ltac split3 := split; [|split].",
            "VernacExtend",
            "73141eec575371fae7be5edd334daba998e00e04"
        ],
        [
            "Lemma if_true: forall (A: Prop) (E: {A}+{~A}) (T: Type) (B C: T), A -> (if E then B else C) = B.",
            "VernacStartTheoremProof",
            "36bf86f717f10bfd4ca9a49db2a4e172d13edcd5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct E; auto.",
            "VernacExtend",
            "b6aefff988ff931796367be679098def877a45b6"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma if_false: forall (A: Prop) (E: {A}+{~A}) (T: Type) (B C: T), ~A -> (if E then B else C) = C.",
            "VernacStartTheoremProof",
            "b53e59a4faad0f6a0ad55bd00525ad9660ae9de4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct E; auto.",
            "VernacExtend",
            "b6aefff988ff931796367be679098def877a45b6"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac spec H := match type of H with ?a -> _ => let H1 := fresh in (assert (H1: a); [|generalize (H H1); clear H H1; intro H]) end.",
            "VernacExtend",
            "a0c36cef4a8bbaa168a3c27a7ec28da1e989787e"
        ],
        [
            "Lemma f_equal_Some: forall A (x y: A), x=y -> Some x = Some y.",
            "VernacStartTheoremProof",
            "62feca1099f13c15dc1363ded120921b55c1f8e4"
        ],
        [
            "intros; f_equal; auto.",
            "VernacExtend",
            "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma f_equal_prod: forall A B (x1 x2: A) (y1 y2: B), x1=x2 -> y1=y2 -> (x1,y1) = (x2,y2).",
            "VernacStartTheoremProof",
            "020c003ff4e765d5fe51c2c2c6e10b7b1cad5ed6"
        ],
        [
            "intros; f_equal; auto.",
            "VernacExtend",
            "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve f_equal_Some f_equal_prod.",
            "VernacHints",
            "fde018cb28f1c2413b93ce3db2ab7041150f70b2"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Lemma list_norepet_append_inv: forall (A : Set) (l1 l2 : list A), list_norepet (l1 ++ l2) -> list_norepet l1 /\\ list_norepet l2 /\\ list_disjoint l1 l2.",
            "VernacStartTheoremProof",
            "e512fb10d31ae9bf15bc87e88714db1b254986ea"
        ],
        [
            "induction l1; simpl; intros.",
            "VernacExtend",
            "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "do 3 intro.",
            "VernacExtend",
            "177de6f66fcc47b0b56e5a6eca140fd577ebdd59"
        ],
        [
            "contradiction H0.",
            "VernacExtend",
            "198cc5fe08678df71b7d70ff1acc682532bbeeca"
        ],
        [
            "inversion H; clear H; subst.",
            "VernacExtend",
            "a36bd190e11a8fd6825e4b7a1eb236029aaadb63"
        ],
        [
            "destruct (IHl1 l2 H3) as [? [? ?]].",
            "VernacExtend",
            "558537d7d1a80f652d3e87bb4df2a817be8860d9"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "contradiction H2.",
            "VernacExtend",
            "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "do 4 intro.",
            "VernacExtend",
            "f9fb059d7761e4197e62492b83edb74ab62c074d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl in H4.",
            "VernacExtend",
            "31358c428a532f17f4c3cd16100d65b9f5ba8243"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "contradiction H2.",
            "VernacExtend",
            "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold list_disjoint in H1.",
            "VernacExtend",
            "06a00f05e0b3a947fcb33beef6e99e25eab4d7a2"
        ],
        [
            "contradiction (H1 y y H4 H5); auto.",
            "VernacExtend",
            "9ef260b4e4498ba1e5ee17ea9241360076fa4a94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Ltac simple_if_tac := match goal with |- context [if ?A then _ else _] => lazymatch type of A with | bool => destruct A | sumbool _ _ => fail \"Use if_tac instead of simple_if_tac, since your expression \"A\" has type sumbool\" | ?t => fail \"Use simple_if_tac only for bool; your expression\"A\" has type\" t end end.",
            "VernacExtend",
            "4d0c1e717f24a831412bb1d8b77f5cf56b9890aa"
        ],
        [
            "Tactic Notation \"if_tac\" := match goal with |- context [if ?a then _ else _] => lazymatch type of a with | sumbool _ _ =>destruct a as [?H | ?H] | bool => fail \"Use simple_if_tac instead of if_tac, since your expression\"a\" has type bool\" | ?t => fail \"Use if_tac only for sumbool; your expression\"a\" has type\" t end end.",
            "VernacExtend",
            "25fb361ff0590795eb39d7052fac5ba5401a472b"
        ],
        [
            "Tactic Notation \"if_tac\" simple_intropattern(H) := match goal with |- context [if ?a then _ else _] => lazymatch type of a with | sumbool _ _ =>destruct a as H | bool => fail \"Use simple_if_tac instead of if_tac, since your expression\"a\" has type bool\" | ?t => fail \"Use if_tac only for sumbool; your expression\"a\" has type\" t end end.",
            "VernacExtend",
            "bac9e15601f685df16252d66d4b8e494e5befbba"
        ],
        [
            "Tactic Notation \"if_tac\" \"in\" hyp(H0) := match type of H0 with context [if ?a then _ else _] => lazymatch type of a with | sumbool _ _ =>destruct a as [?H | ?H] | bool => fail \"Use simple_if_tac instead of if_tac, since your expression\"a\" has type bool\" | ?t => fail \"Use if_tac only for sumbool; your expression\"a\" has type\" t end end.",
            "VernacExtend",
            "eca084d3982b710261582aa6ed8e368854072aa3"
        ],
        [
            "Tactic Notation \"if_tac\" simple_intropattern(H) \"in\" hyp(H1) := match type of H1 with context [if ?a then _ else _] => lazymatch type of a with | sumbool _ _ =>destruct a as H | bool => fail \"Use simple_if_tac instead of if_tac, since your expression\"a\" has type bool\" | ?t => fail \"Use if_tac only for sumbool; your expression\"a\" has type\" t end end.",
            "VernacExtend",
            "09b5a8d7faec070620682ca8c860334748a90b3a"
        ],
        [
            "Lemma predicate_max: forall (F: nat -> Prop) (Fdec: forall n, {F n}+{~ F n}) n, F 0%nat -> ~ F n -> exists i, F i /\\ (i<n)%nat /\\ ~ F (S i).",
            "VernacStartTheoremProof",
            "4613cc08471670b513439bd6ef4929d76d53c017"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall m, (m <= n)%nat -> (forall k, (k<m)%nat -> F k) \\/ (exists i, F i /\\ (i<m)%nat /\\ ~ F (S i))).",
            "VernacExtend",
            "c92cb59320bf2ee37345c4c7d294ec0caf99a5f9"
        ],
        [
            "induction m.",
            "VernacExtend",
            "6f6279e892ad221278939a9b429a59edaeeb1676"
        ],
        [
            "left; intros.",
            "VernacExtend",
            "b5751f94cb3ce2abf22f8d1d41cfda058e125ad8"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (m<=n)%nat; try omega.",
            "VernacExtend",
            "353807e01fccb82449c243d345782918ff1e277d"
        ],
        [
            "destruct (IHm H2).",
            "VernacExtend",
            "20f6434146aefc0188ee3db59e1de1c6cbcc35d7"
        ],
        [
            "assert (m < n \\/ m = n)%nat; try omega.",
            "VernacExtend",
            "3bbe69768df9846cb5f721f5d8cdb054efcef043"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "destruct (Fdec m) as [?H|?H].",
            "VernacExtend",
            "d4264e288613843a4402ac3c9d6b12952cee124e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (k < m \\/ k = m)%nat; try omega.",
            "VernacExtend",
            "af393d45160ee0a91f9a3198ceecc3c15a461ca6"
        ],
        [
            "destruct H7.",
            "VernacExtend",
            "f6b4c745a19e0b13add33f75bb62e394f2c83618"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "subst k; auto.",
            "VernacExtend",
            "3180ad9ad9be7306c41a31d2b590e5d9a7996276"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists (Peano.pred m).",
            "VernacExtend",
            "08febbf9b137b58f8bf869c9f00a1e7705d387dd"
        ],
        [
            "destruct m.",
            "VernacExtend",
            "8d29a39ed817a734f6646f7b42c80e41363356d4"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "replace (Peano.pred (S m)) with m; try omega.",
            "VernacExtend",
            "c59cf01b264c718c5664a15c80f3238fd08acce0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H3; try omega.",
            "VernacExtend",
            "0448cccba7fe04552866774b69c20ccaf238f1c9"
        ],
        [
            "split; try omega.",
            "VernacExtend",
            "66cc1464539fc71f7b2247524d7ac01ac9c55514"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "subst m.",
            "VernacExtend",
            "9ba78b8037512180a4349842defa7f5fabdd6010"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "exists n; repeat split; auto; try omega.",
            "VernacExtend",
            "a04a0fdbd1cedf5d7e93ac78251c9cec4feae68d"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "destruct H3 as [i H4].",
            "VernacExtend",
            "b2fad830971984183dbb78bece61256f9397c1f5"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "exists i; repeat split; auto; omega.",
            "VernacExtend",
            "93d01e69ad3b6c3164b5e18bcb243d38869b05e6"
        ],
        [
            "assert (n <= n)%nat; try omega.",
            "VernacExtend",
            "1e156c0c613bf600cfbb311adf8b74285b1cfeb3"
        ],
        [
            "destruct (H1 _ H2).",
            "VernacExtend",
            "55339bffb9271b3615f6c9aace72c7e868f4b627"
        ],
        [
            "destruct n; try contradiction.",
            "VernacExtend",
            "18b0be4ec5d9b9b7049e1364382d2092ae3a1b93"
        ],
        [
            "exists n; repeat split; auto; try omega.",
            "VernacExtend",
            "a04a0fdbd1cedf5d7e93ac78251c9cec4feae68d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumbool_dec_iff: forall A B, {A} + {~A} -> (A <-> B) -> {B} + {~B}.",
            "VernacStartTheoremProof",
            "a68a8e26bb9473faa6481764ed68b1fe07668a10"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumbool_dec_and: forall A B, {A} + {~A} -> {B} + {~B} -> {A /\\ B} + {~(A /\\ B)}.",
            "VernacStartTheoremProof",
            "ce0d0eb15b2e105e46a4f969ea3352e31dd96584"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H, H0.",
            "VernacExtend",
            "8db9e1441c64ed20802e4526963172d1abdaee94"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left; tauto.",
            "VernacExtend",
            "99cf396ceda153cfe54d4ffc331731b6e34d93de"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; tauto.",
            "VernacExtend",
            "f7f18b4142d2b02dc8442ecf477f61d1dbec39ce"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; tauto.",
            "VernacExtend",
            "f7f18b4142d2b02dc8442ecf477f61d1dbec39ce"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; tauto.",
            "VernacExtend",
            "f7f18b4142d2b02dc8442ecf477f61d1dbec39ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumbool_dec_or: forall A B, {A} + {~A} -> {B} + {~B} -> {A \\/ B} + {~(A \\/ B)}.",
            "VernacStartTheoremProof",
            "f928ac25f066dfca6a10e4d7a7d9a2352cf42896"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H, H0.",
            "VernacExtend",
            "8db9e1441c64ed20802e4526963172d1abdaee94"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; tauto.",
            "VernacExtend",
            "f7f18b4142d2b02dc8442ecf477f61d1dbec39ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac super_pattern t x := let t0 := fresh \"t\" in set (t0 := t); pattern x in t0; cbv beta in (type of t0); subst t0.",
            "VernacExtend",
            "a50908ec3777d1a453f2acb39517153c0708c416"
        ],
        [
            "Ltac super_pattern_in_func t x := let t0 := fresh \"t\" in let a := fresh \"a\" in match type of t with | ?type_of_t => evar (t0 : type_of_t) end; assert (t = t0) as _; [ extensionality a; cbv beta; match goal with | |- ?left = _ => super_pattern left x end; match goal with | |- ?left _ = _ => super_pattern left a end; match goal with | |- ?left _ _ = _ => instantiate (1 := fun a => left a x) in (Value of t0) end; reflexivity | change t with t0; subst t0 ].",
            "VernacExtend",
            "b07cd358fcc71695c164418230ee40bade54dbef"
        ],
        [
            "Ltac build_func_abs_right := match goal with | |- @eq ?typ_expr (_ ?arg) ?expr => match type of arg with | ?typ_arg => super_pattern expr arg; match goal with | |- @eq typ_expr _ (?func arg) => exact (@eq_refl typ_expr ((ltac:(clear arg; intros arg; let res := eval cbv beta in (func arg) in exact res): (typ_arg -> typ_expr)) arg) ) end end end.",
            "VernacExtend",
            "0717cbf1e755716bd553f3b81d1d5de3b76bc1a0"
        ]
    ],
    "proofs": [
        {
            "name": "if_true",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct E; auto.",
                        "VernacExtend",
                        "b6aefff988ff931796367be679098def877a45b6"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_false",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct E; auto.",
                        "VernacExtend",
                        "b6aefff988ff931796367be679098def877a45b6"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "f_equal_Some",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros; f_equal; auto.",
                        "VernacExtend",
                        "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "f_equal_prod",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros; f_equal; auto.",
                        "VernacExtend",
                        "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_norepet_append_inv",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl; intros.",
                        "VernacExtend",
                        "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "do 3 intro.",
                        "VernacExtend",
                        "177de6f66fcc47b0b56e5a6eca140fd577ebdd59"
                    ]
                },
                {
                    "command": [
                        "contradiction H0.",
                        "VernacExtend",
                        "198cc5fe08678df71b7d70ff1acc682532bbeeca"
                    ]
                },
                {
                    "command": [
                        "inversion H; clear H; subst.",
                        "VernacExtend",
                        "a36bd190e11a8fd6825e4b7a1eb236029aaadb63"
                    ]
                },
                {
                    "command": [
                        "destruct (IHl1 l2 H3) as [? [? ?]].",
                        "VernacExtend",
                        "558537d7d1a80f652d3e87bb4df2a817be8860d9"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "constructor 2.",
                        "VernacExtend",
                        "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "contradiction H2.",
                        "VernacExtend",
                        "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "do 4 intro.",
                        "VernacExtend",
                        "f9fb059d7761e4197e62492b83edb74ab62c074d"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "simpl in H4.",
                        "VernacExtend",
                        "31358c428a532f17f4c3cd16100d65b9f5ba8243"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "contradiction H2.",
                        "VernacExtend",
                        "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold list_disjoint in H1.",
                        "VernacExtend",
                        "06a00f05e0b3a947fcb33beef6e99e25eab4d7a2"
                    ]
                },
                {
                    "command": [
                        "contradiction (H1 y y H4 H5); auto.",
                        "VernacExtend",
                        "9ef260b4e4498ba1e5ee17ea9241360076fa4a94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predicate_max",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall m, (m <= n)%nat -> (forall k, (k<m)%nat -> F k) \\/ (exists i, F i /\\ (i<m)%nat /\\ ~ F (S i))).",
                        "VernacExtend",
                        "c92cb59320bf2ee37345c4c7d294ec0caf99a5f9"
                    ]
                },
                {
                    "command": [
                        "induction m.",
                        "VernacExtend",
                        "6f6279e892ad221278939a9b429a59edaeeb1676"
                    ]
                },
                {
                    "command": [
                        "left; intros.",
                        "VernacExtend",
                        "b5751f94cb3ce2abf22f8d1d41cfda058e125ad8"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (m<=n)%nat; try omega.",
                        "VernacExtend",
                        "353807e01fccb82449c243d345782918ff1e277d"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm H2).",
                        "VernacExtend",
                        "20f6434146aefc0188ee3db59e1de1c6cbcc35d7"
                    ]
                },
                {
                    "command": [
                        "assert (m < n \\/ m = n)%nat; try omega.",
                        "VernacExtend",
                        "3bbe69768df9846cb5f721f5d8cdb054efcef043"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "destruct (Fdec m) as [?H|?H].",
                        "VernacExtend",
                        "d4264e288613843a4402ac3c9d6b12952cee124e"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (k < m \\/ k = m)%nat; try omega.",
                        "VernacExtend",
                        "af393d45160ee0a91f9a3198ceecc3c15a461ca6"
                    ]
                },
                {
                    "command": [
                        "destruct H7.",
                        "VernacExtend",
                        "f6b4c745a19e0b13add33f75bb62e394f2c83618"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "subst k; auto.",
                        "VernacExtend",
                        "3180ad9ad9be7306c41a31d2b590e5d9a7996276"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists (Peano.pred m).",
                        "VernacExtend",
                        "08febbf9b137b58f8bf869c9f00a1e7705d387dd"
                    ]
                },
                {
                    "command": [
                        "destruct m.",
                        "VernacExtend",
                        "8d29a39ed817a734f6646f7b42c80e41363356d4"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "replace (Peano.pred (S m)) with m; try omega.",
                        "VernacExtend",
                        "c59cf01b264c718c5664a15c80f3238fd08acce0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply H3; try omega.",
                        "VernacExtend",
                        "0448cccba7fe04552866774b69c20ccaf238f1c9"
                    ]
                },
                {
                    "command": [
                        "split; try omega.",
                        "VernacExtend",
                        "66cc1464539fc71f7b2247524d7ac01ac9c55514"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "subst m.",
                        "VernacExtend",
                        "9ba78b8037512180a4349842defa7f5fabdd6010"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "exists n; repeat split; auto; try omega.",
                        "VernacExtend",
                        "a04a0fdbd1cedf5d7e93ac78251c9cec4feae68d"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as [i H4].",
                        "VernacExtend",
                        "b2fad830971984183dbb78bece61256f9397c1f5"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "exists i; repeat split; auto; omega.",
                        "VernacExtend",
                        "93d01e69ad3b6c3164b5e18bcb243d38869b05e6"
                    ]
                },
                {
                    "command": [
                        "assert (n <= n)%nat; try omega.",
                        "VernacExtend",
                        "1e156c0c613bf600cfbb311adf8b74285b1cfeb3"
                    ]
                },
                {
                    "command": [
                        "destruct (H1 _ H2).",
                        "VernacExtend",
                        "55339bffb9271b3615f6c9aace72c7e868f4b627"
                    ]
                },
                {
                    "command": [
                        "destruct n; try contradiction.",
                        "VernacExtend",
                        "18b0be4ec5d9b9b7049e1364382d2092ae3a1b93"
                    ]
                },
                {
                    "command": [
                        "exists n; repeat split; auto; try omega.",
                        "VernacExtend",
                        "a04a0fdbd1cedf5d7e93ac78251c9cec4feae68d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumbool_dec_iff",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumbool_dec_and",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H, H0.",
                        "VernacExtend",
                        "8db9e1441c64ed20802e4526963172d1abdaee94"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left; tauto.",
                        "VernacExtend",
                        "99cf396ceda153cfe54d4ffc331731b6e34d93de"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; tauto.",
                        "VernacExtend",
                        "f7f18b4142d2b02dc8442ecf477f61d1dbec39ce"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; tauto.",
                        "VernacExtend",
                        "f7f18b4142d2b02dc8442ecf477f61d1dbec39ce"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; tauto.",
                        "VernacExtend",
                        "f7f18b4142d2b02dc8442ecf477f61d1dbec39ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumbool_dec_or",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H, H0.",
                        "VernacExtend",
                        "8db9e1441c64ed20802e4526963172d1abdaee94"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; tauto.",
                        "VernacExtend",
                        "f7f18b4142d2b02dc8442ecf477f61d1dbec39ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}