{
    "filename": "msl/boolean_alg.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.base.",
            "VernacRequire",
            "072f05eeaee48c6fa1aa483ac927301379bb7e30"
        ],
        [
            "Require Import VST.msl.eq_dec.",
            "VernacRequire",
            "954e87ce1521f6a3c361de55e2bde6182289034c"
        ],
        [
            "Require Import VST.msl.sepalg.",
            "VernacRequire",
            "b78005af0b326275ac24eaf70d32d2c944f2f772"
        ],
        [
            "Require Import GenericMinMax.",
            "VernacRequire",
            "1b5c909813fba152218bbbcdfb34153ef1b5cfba"
        ],
        [
            "Module Type BOOLEAN_ALGEBRA.",
            "VernacDeclareModuleType",
            "f19b7007dc2112ff39828c1c83941951d05cf19f"
        ],
        [
            "Parameters (t:Type) (Ord : t -> t -> Prop) (top bot : t) (lub glb : t -> t -> t) (comp : t -> t).",
            "VernacAssumption",
            "9a45d5a46c3e61ef4cc1cbf0bfbd77c20999f747"
        ],
        [
            "Delimit Scope ba with ba.",
            "VernacDelimiters",
            "2379917d221e8d12d77b0a1419673421ea7c34a3"
        ],
        [
            "Open Scope ba.",
            "VernacOpenCloseScope",
            "f1e03d35f729ef4678c6880a737d0d4dbd2ca9fb"
        ],
        [
            "Notation \"x <= y\" := (Ord x y) (at level 70, no associativity) : ba.",
            "VernacNotation",
            "b6a7cb60a6343daeac387dcf2dda466ece6e02a8"
        ],
        [
            "Axiom ord_refl : forall x, x <= x.",
            "VernacAssumption",
            "029f78565881437cd8cb6eccaaa97b4be779b41c"
        ],
        [
            "Axiom ord_trans : forall x y z, x <= y -> y <= z -> x <= z.",
            "VernacAssumption",
            "fd1d8db57eccd297d1ef4ab99d48090982b496fb"
        ],
        [
            "Axiom ord_antisym : forall x y, x <= y -> y <= x -> x = y.",
            "VernacAssumption",
            "5443ea1e021645702d949f77c4b86dec4ba0504e"
        ],
        [
            "Axiom lub_upper1 : forall x y, x <= (lub x y).",
            "VernacAssumption",
            "6430f202ce286efd930ad9b9b356585565682e37"
        ],
        [
            "Axiom lub_upper2 : forall x y, y <= (lub x y).",
            "VernacAssumption",
            "50b594713068444a4a4e2544a42473a40b7d3b4a"
        ],
        [
            "Axiom lub_least : forall x y z, x <= z -> y <= z -> (lub x y) <= z.",
            "VernacAssumption",
            "ca937812a1a92bc0c1ef34cde7b30d95adabc479"
        ],
        [
            "Axiom glb_lower1 : forall x y, (glb x y) <= x.",
            "VernacAssumption",
            "87c25e13185dcf0696c2382c042ff5443da864ac"
        ],
        [
            "Axiom glb_lower2 : forall x y, (glb x y) <= y.",
            "VernacAssumption",
            "d5cc879b8d2cc03037f9703b520c78262c77eefe"
        ],
        [
            "Axiom glb_greatest : forall x y z, z <= x -> z <= y -> z <= (glb x y).",
            "VernacAssumption",
            "2195aeb81ba7d685c330e0989464cb3703de36bb"
        ],
        [
            "Axiom top_correct : forall x, x <= top.",
            "VernacAssumption",
            "7a90f1914dca2f38da400c16b77da1a5c4dbdecd"
        ],
        [
            "Axiom bot_correct : forall x, bot <= x.",
            "VernacAssumption",
            "7d367ddb253062e828bead122fc42605d00d9804"
        ],
        [
            "Axiom distrib1 : forall x y z, glb x (lub y z) = lub (glb x y) (glb x z).",
            "VernacAssumption",
            "e47a81cbb99ef3c9c0138f3d5f9f91d2a9f263cf"
        ],
        [
            "Axiom comp1 : forall x, lub x (comp x) = top.",
            "VernacAssumption",
            "bdb184f1af02a51482bc9eea60a5512d747abea0"
        ],
        [
            "Axiom comp2 : forall x, glb x (comp x) = bot.",
            "VernacAssumption",
            "c6680d555ad5f5db78803b65f9655d6cb16dc22f"
        ],
        [
            "Axiom nontrivial : top <> bot.",
            "VernacAssumption",
            "4e550986cb478a95a8586777b038da84b1d4b504"
        ],
        [
            "Hint Resolve ord_refl ord_antisym lub_upper1 lub_upper2 lub_least glb_lower1 glb_lower2 glb_greatest top_correct bot_correct ord_trans : ba.",
            "VernacHints",
            "bc7e11c820dc9b3060ceb20e6f351ca252a399fa"
        ],
        [
            "End BOOLEAN_ALGEBRA.",
            "VernacEndSegment",
            "2e3d62c29081a05e61c59ec08358096e72b390d4"
        ],
        [
            "Module Type BA_FACTS.",
            "VernacDeclareModuleType",
            "3c33f240e60452fbb3a0873e07869e1c39913e80"
        ],
        [
            "Include BOOLEAN_ALGEBRA.",
            "VernacInclude",
            "622557dbc931c0acf1520776f42f95c3b2657a3f"
        ],
        [
            "Axiom ord_spec1 : forall x y, x <= y <-> x = glb x y.",
            "VernacAssumption",
            "64008fc8f709bf18cf3ee39fedd55b4b2ba96f32"
        ],
        [
            "Axiom ord_spec2 : forall x y, x <= y <-> lub x y = y.",
            "VernacAssumption",
            "0e1f5fcdd50691bc4826f51c47dcb11b7b989635"
        ],
        [
            "Axiom lub_idem : forall x, (lub x x) = x.",
            "VernacAssumption",
            "14db729298f6f9a40970bc8f7fa13f20ad498b0e"
        ],
        [
            "Axiom lub_commute : forall x y, lub x y = lub y x.",
            "VernacAssumption",
            "f9d9b4b7104eed321a1b34e16fa1bedd03cb61e7"
        ],
        [
            "Axiom lub_bot : forall x, lub x bot = x.",
            "VernacAssumption",
            "1af0fdeacd3150c90993ea2393ec523a1b002140"
        ],
        [
            "Axiom lub_top : forall x, lub x top = top.",
            "VernacAssumption",
            "ed76897cf0f6274efad813026a0d04674ab7d0ec"
        ],
        [
            "Axiom lub_absorb : forall x y, lub x (glb x y) = x.",
            "VernacAssumption",
            "b6a9ab9eea2c46b45e38a40197278c999d31083a"
        ],
        [
            "Axiom lub_assoc : forall x y z, lub (lub x y) z = lub x (lub y z).",
            "VernacAssumption",
            "ecd6635b6c3213181224fd9513c438b3c09da94a"
        ],
        [
            "Axiom glb_idem : forall x, glb x x = x.",
            "VernacAssumption",
            "b0cfd1fb307712c93560520a9e8e207951831bd5"
        ],
        [
            "Axiom glb_commute : forall x y, glb x y = glb y x.",
            "VernacAssumption",
            "5b38a9a9ffa4f18afa208004dc7b4d229e482d20"
        ],
        [
            "Axiom glb_bot : forall x, glb x bot = bot.",
            "VernacAssumption",
            "bd1d4a7a2f5d567b2930b024aa32d5f6665e6610"
        ],
        [
            "Axiom glb_top : forall x, glb x top = x.",
            "VernacAssumption",
            "b54c9f6ee973235c728b0baf237a56ced5d131ae"
        ],
        [
            "Axiom glb_absorb : forall x y, glb x (lub x y) = x.",
            "VernacAssumption",
            "e4f80caa8d8b95841aa0a70cbde5fcb4917d6ad4"
        ],
        [
            "Axiom glb_assoc : forall x y z, glb (glb x y) z = glb x (glb y z).",
            "VernacAssumption",
            "5136c6f2aab193ec58d342a10976f94f43731490"
        ],
        [
            "Axiom distrib2 : forall x y z, lub x (glb y z) = glb (lub x y) (lub x z).",
            "VernacAssumption",
            "6b53dc98b7c994a2ba4193dc3336364b8b8f9a79"
        ],
        [
            "Axiom distrib_spec : forall x y1 y2, lub x y1 = lub x y2 -> glb x y1 = glb x y2 -> y1 = y2.",
            "VernacAssumption",
            "51c3cdca6263698d3a50b1ec79c299e295a12814"
        ],
        [
            "Axiom demorgan1 : forall x y, comp (lub x y) = glb (comp x) (comp y).",
            "VernacAssumption",
            "e1f5c8c4198575e69f76df690cf2419b7def883e"
        ],
        [
            "Axiom demorgan2 : forall x y, comp (glb x y) = lub (comp x) (comp y).",
            "VernacAssumption",
            "03165bb2af8aebc77e7046b4480eaeb39d8586af"
        ],
        [
            "Axiom comp_inv : forall x, comp (comp x) = x.",
            "VernacAssumption",
            "5f2690dad107017610f77d1ec87333ac05a4f902"
        ],
        [
            "Instance Join_ba: Join t := fun x y z : t => glb x y = bot /\\ lub x y = z.",
            "VernacInstance",
            "96524dde1dec48bf9b12f69c84fd87ee8e8131d1"
        ],
        [
            "Axiom pa: Perm_alg t.",
            "VernacAssumption",
            "9f47793ffd5674b6c6b60fbb0803a360be8c5c2f"
        ],
        [
            "Existing Instance pa.",
            "VernacDeclareInstances",
            "a82862bd36e06bbd9de954014433d7e81e8054ae"
        ],
        [
            "Axiom sa : Sep_alg t.",
            "VernacAssumption",
            "76a38ba4365a19eb0b1cf5c91be7781818e31212"
        ],
        [
            "Existing Instance sa.",
            "VernacDeclareInstances",
            "f7706cbb627a38d7cfd49527e4fdb33eedfebc42"
        ],
        [
            "Axiom ca : Canc_alg t.",
            "VernacAssumption",
            "b0923ba24e5d9125d6969cffc15afb34063812d7"
        ],
        [
            "Existing Instance ca.",
            "VernacDeclareInstances",
            "7346ca81dd2dc0ed3529958e6d55fba9c1a4dc7c"
        ],
        [
            "Axiom singa : Sing_alg t.",
            "VernacAssumption",
            "8ad4c05dc5151ade79b20151d8dd07433a15bdbc"
        ],
        [
            "Existing Instance singa.",
            "VernacDeclareInstances",
            "4e0594639ad4aeb4155ff68fc3d5cefc19aae018"
        ],
        [
            "Axiom da : Disj_alg t.",
            "VernacAssumption",
            "13c26911ca4c87cea528770220e293707ed83a71"
        ],
        [
            "Existing Instance da.",
            "VernacDeclareInstances",
            "12e6c9127c708aa5f1a3579035fb7c0cf905abf1"
        ],
        [
            "End BA_FACTS.",
            "VernacEndSegment",
            "153d5552174cab0994a560b5bffe24c8d0b44a55"
        ],
        [
            "Class heightable (A : Type) : Type := Heightable { height : A -> nat; is_height_zero : forall a : A, {height a = 0} + {height a <> 0} }.",
            "VernacInductive",
            "4c7b1f86130f5e17298e5a7d45fcbbc78840202c"
        ],
        [
            "Arguments Heightable [A] _ _.",
            "VernacArguments",
            "916e5dabe2c6c38865b3681bec8af66768236b3e"
        ],
        [
            "Definition is_height_zero_spec {A : Type} (height : A -> nat) : Type := forall a : A, {height a = 0} + {height a <> 0}.",
            "VernacDefinition",
            "9a19518b8cd36d80ffcea68888e1bada84cb708c"
        ],
        [
            "Definition list_height {A} `{heightable A} (LA : list A) : nat := fold_right max 0 (map height LA).",
            "VernacDefinition",
            "63d31d57ebd856b155279d77fd1785ad50953530"
        ],
        [
            "Fixpoint list_is_height_zero_bool {A} `{heightable A} (L : list A) : bool := match L with | nil => true | a :: L' => if is_height_zero a then list_is_height_zero_bool L' else false end.",
            "VernacFixpoint",
            "da5d03f95518e1192f8f67ab306108c94b386b87"
        ],
        [
            "Instance list_heightable {A} `{heightable A} : heightable (list A).",
            "VernacInstance",
            "fd8419b5b1782833fb92eac83ad1e94ed0118681"
        ],
        [
            "apply Heightable with list_height.",
            "VernacExtend",
            "c6766043daaf17a82e98be8b2ad6ed011fd78713"
        ],
        [
            "induction a.",
            "VernacExtend",
            "cd3414465e628a01405035e1db2372571dd4d2a6"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "unfold list_height in *.",
            "VernacExtend",
            "e62f6d518d240f88f0b62bfbad6e4aa20e8dbc7a"
        ],
        [
            "case (is_height_zero a).",
            "VernacExtend",
            "93755976acd002906cf6e8dcd0f25835a8f9f19b"
        ],
        [
            "destruct IHa.",
            "VernacExtend",
            "e2e6ad2be0398464edaa1cc5818721674fd2277b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite e, e0.",
            "VernacExtend",
            "52771ba2197b1feff78a52e78a14cccd372c3754"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply n.",
            "VernacExtend",
            "ed7192228e57856197020582fd87949160a69557"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite e in H0.",
            "VernacExtend",
            "668bc25fa6349d62b5143e2344195feb426a98ee"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply n.",
            "VernacExtend",
            "ed7192228e57856197020582fd87949160a69557"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "icase (height a).",
            "VernacExtend",
            "103a61ca06a3f3bd7ed33d1bd4e7efdf3b51d4de"
        ],
        [
            "icase (fold_right max 0 (map height a0)).",
            "VernacExtend",
            "c789e835919194ae6fc0fa9c133f21b253388891"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Class decomposible (A : Type) : Type := Decomposible { decompose : A -> (A * A) }.",
            "VernacInductive",
            "f0735fd93f1d7e2a1cc8a33bce3cc26257b4782b"
        ],
        [
            "Arguments Decomposible [A] _.",
            "VernacArguments",
            "53f39d4be970c998e110acb42b72a6c64d625f76"
        ],
        [
            "Class roundableLeft (A : Type) : Type := RoundableLeft { roundL : nat -> A -> option A }.",
            "VernacInductive",
            "167f0c8e9e9982164c3461534d0657f4a8f2cfaa"
        ],
        [
            "Arguments RoundableLeft [A] _.",
            "VernacArguments",
            "db74f63c24a7d1376dbc35c8ca692e507c8d9a9a"
        ],
        [
            "Class roundableRight (A : Type) : Type := RoundableRight { roundR : nat -> A -> option A }.",
            "VernacInductive",
            "daa25a8e3a2526b85645cb50c33806f45c5d4618"
        ],
        [
            "Arguments RoundableRight [A] _.",
            "VernacArguments",
            "a570c45c8bc16564564d3df67ed71da2f4c4a38d"
        ],
        [
            "Class avgable (A : Type) : Type := Avgable { avg : nat -> A -> A -> option A }.",
            "VernacInductive",
            "afd55b0867d27a3cdedfaa9c57b843b68e362491"
        ],
        [
            "Arguments Avgable [A] _.",
            "VernacArguments",
            "7359e93ac44f687909fb8ed58895718c07395f30"
        ],
        [
            "Module Type SHARE_MODEL.",
            "VernacDeclareModuleType",
            "fc5709df7bc702435d0ddc439821b90b88bc45bc"
        ],
        [
            "Include BA_FACTS.",
            "VernacInclude",
            "231ada8c36b6670bd6b11dd2f0199eb317d436c4"
        ],
        [
            "Parameter EqDec_share: EqDec t.",
            "VernacAssumption",
            "7853c0259443e944af00d4af69f804c3bc518fb7"
        ],
        [
            "Existing Instance EqDec_share.",
            "VernacDeclareInstances",
            "2096dc01460ab3bce3494622aa6209e8d3b400c9"
        ],
        [
            "Parameter split : t -> t * t.",
            "VernacAssumption",
            "3f571c9a1873eb77bdb611bce50632280a56cdb3"
        ],
        [
            "Axiom split_disjoint : forall x1 x2 x, split x = (x1, x2) -> glb x1 x2 = bot.",
            "VernacAssumption",
            "b65fc2ce98e7544629fed22c43cc93566eaebfb5"
        ],
        [
            "Axiom split_together : forall x1 x2 x, split x = (x1, x2) -> lub x1 x2 = x.",
            "VernacAssumption",
            "91730b12ebda696e92fa670ffebcb209609b635e"
        ],
        [
            "Axiom split_nontrivial : forall x1 x2 x, split x = (x1, x2) -> (x1 = bot \\/ x2 = bot) -> x = bot.",
            "VernacAssumption",
            "dbb7938f142cb1fd84f8cdf9cf6ca75de29d2d7a"
        ],
        [
            "Parameter isTokenFactory : t -> nat -> Prop.",
            "VernacAssumption",
            "e02585929a049c9392776b8778934f92f1b4df03"
        ],
        [
            "Parameter isToken : t -> nat -> Prop.",
            "VernacAssumption",
            "a0db7863a5dc221e3f32b5a57723571001039da3"
        ],
        [
            "Parameter create_token : nat -> t -> (t*t).",
            "VernacAssumption",
            "c8be8d344a0e6ca2dafda63e583865efd28567b8"
        ],
        [
            "Axiom create_token_correct : forall fac fac' tok x n, create_token n fac = (fac',tok) -> isTokenFactory fac x -> isTokenFactory fac' (n+x) /\\ isToken tok n /\\ join fac' tok fac.",
            "VernacAssumption",
            "9a59c73a35dc3a1769ac642c42669ab63317fe26"
        ],
        [
            "Axiom absorbToken : forall fac fac' tok x n, isTokenFactory fac' (n+x) -> isToken tok n -> join fac' tok fac -> isTokenFactory fac x.",
            "VernacAssumption",
            "a03c65bf487ecfa3861cbd4c7a7a849bb80b7110"
        ],
        [
            "Axiom mergeToken : forall tok1 n1 tok2 n2 tok', isToken tok1 n1 -> isToken tok2 n2 -> join tok1 tok2 tok' -> isToken tok' (n1+n2).",
            "VernacAssumption",
            "f1f0b0681c07560720fc3e1394b5af8b710fb24b"
        ],
        [
            "Parameter split_token : nat -> t -> t*t.",
            "VernacAssumption",
            "a213ea2c430d2cdd8d0e7a9ea3a746c534486531"
        ],
        [
            "Axiom split_token_correct : forall n1 n2 tok tok1 tok2, isToken tok (n1+n2) -> split_token n1 tok = (tok1,tok2) -> isToken tok1 n1 /\\ isToken tok2 n2 /\\ join tok1 tok2 tok.",
            "VernacAssumption",
            "5d22b9904ffe7cef763d4d8d60f4097c5559de5f"
        ],
        [
            "Axiom factoryOverlap : forall f1 f2 n1 n2, isTokenFactory f1 n1 -> isTokenFactory f2 n2 -> glb f1 f2 <> bot.",
            "VernacAssumption",
            "cb98a8690da03bc5b0dd1b5aa9b29e962d402845"
        ],
        [
            "Axiom fullFactory : forall x, isTokenFactory x 0 <-> x = top.",
            "VernacAssumption",
            "1a7a9ebcb5e7289b424610975073510204e87eab"
        ],
        [
            "Axiom identityToken : forall x, isToken x 0 <-> x = bot.",
            "VernacAssumption",
            "5ec56debc5cfef09aaa0a40be2c8ce302a284da8"
        ],
        [
            "Axiom nonidentityToken : forall x n, (n > 0)%nat -> isToken x n -> x <> bot.",
            "VernacAssumption",
            "9910dfc2b2a8900c1fefb63b7ed0637458161413"
        ],
        [
            "Axiom nonidentityFactory : forall x n, isTokenFactory x n -> x <> bot.",
            "VernacAssumption",
            "04758441279f8abc452d663eb56e5fab9ee545be"
        ],
        [
            "Parameter rel : t -> t -> t.",
            "VernacAssumption",
            "8cf32e5275953bb3c968b19b8be83e81d787ecce"
        ],
        [
            "Axiom rel_inj_l : forall a x y, a <> bot -> rel a x = rel a y -> x = y.",
            "VernacAssumption",
            "b13538666cc64d85b472452ca07fda86ea7f7321"
        ],
        [
            "Axiom rel_inj_r : forall a b x, x <> bot -> rel a x = rel b x -> a = b.",
            "VernacAssumption",
            "7380be9320f55ae8b573810bef3750d1b4035e87"
        ],
        [
            "Axiom rel_assoc : forall x y z, rel x (rel y z) = rel (rel x y) z.",
            "VernacAssumption",
            "d26e2d2ad928ff1ceea5ae9b1b094d849a03cc42"
        ],
        [
            "Axiom rel_preserves_glb : forall a x y, rel a (glb x y) = glb (rel a x) (rel a y).",
            "VernacAssumption",
            "ee9cc098cc65b9199cd73ca99dedad177056d929"
        ],
        [
            "Axiom rel_preserves_lub : forall a x y, rel a (lub x y) = lub (rel a x) (rel a y).",
            "VernacAssumption",
            "54f8f830f39eb0cb8df6d422bff248749d93865d"
        ],
        [
            "Axiom rel_bot1 : forall a, rel a bot = bot.",
            "VernacAssumption",
            "79ddc1c239f40d4d1db96ee25863ed6f9310612f"
        ],
        [
            "Axiom rel_bot2 : forall x, rel bot x = bot.",
            "VernacAssumption",
            "81bb0c5a89cf9c3327d98fa9249cdab8eead9b77"
        ],
        [
            "Axiom rel_top1 : forall a, rel a top = a.",
            "VernacAssumption",
            "085a433461b347c9982d631782f7976c96f82647"
        ],
        [
            "Axiom rel_top2 : forall x, rel top x = x.",
            "VernacAssumption",
            "f0dfff7c4d42ca1b430fb2d862ede58e1eba255a"
        ],
        [
            "Parameter unrel: t -> t -> t.",
            "VernacAssumption",
            "dc6348d3e62a91397017ec2725b0d9a35a03a14c"
        ],
        [
            "Definition Lsh : t := fst (split top).",
            "VernacDefinition",
            "9375fa347fb3828b223e5e1984cfdfef9640b609"
        ],
        [
            "Definition Rsh : t := snd (split top).",
            "VernacDefinition",
            "e4146d3f306e39b5aec4795f0eb491b16e57108f"
        ],
        [
            "Definition splice (a b: t) : t := lub (rel Lsh a) (rel Rsh b).",
            "VernacDefinition",
            "079e1475e6b52ed91f79354958d746044580f9bc"
        ],
        [
            "Axiom unrel_rel: forall x sh, nonidentity x -> unrel x (rel x sh) = sh.",
            "VernacAssumption",
            "03adfbfca018961e24edf8c6ac47726eeda68906"
        ],
        [
            "Axiom unrel_splice_L: forall a b, unrel Lsh (splice a b) = a.",
            "VernacAssumption",
            "32061069c1ed1dda8c67e58fce76fc32d41eecdb"
        ],
        [
            "Axiom unrel_splice_R: forall a b, unrel Rsh (splice a b) = b.",
            "VernacAssumption",
            "da3340c95ff6adaf6eb281d9525fb71e3120a22c"
        ],
        [
            "Axiom contains_Lsh_e: forall sh, join_sub Lsh sh -> unrel Lsh sh = top.",
            "VernacAssumption",
            "0af17e0d9d6f34a0b687b8acda2b9213cae8a77e"
        ],
        [
            "Axiom contains_Rsh_e: forall sh, join_sub Rsh sh -> unrel Rsh sh = top.",
            "VernacAssumption",
            "1cc553e98100e334ca52253ed40f88095f0722d5"
        ],
        [
            "Axiom unrel_disjoint: forall a a', a <> bot -> glb a a' = bot -> unrel a a' = bot.",
            "VernacAssumption",
            "4f5cac3583c708688592e254cfc93b13ecfd0d59"
        ],
        [
            "Axiom unrel_lub: forall a b1 b2, unrel a (lub b1 b2) = lub (unrel a b1) (unrel a b2).",
            "VernacAssumption",
            "bc84e49fec2944a20ae91bb9b5e4bdef24fa342d"
        ],
        [
            "Axiom unrel_glb: forall a b1 b2, unrel a (glb b1 b2) = glb (unrel a b1) (unrel a b2).",
            "VernacAssumption",
            "ebc4c36ed28742770e34f0e9bea99c39b4ef3b94"
        ],
        [
            "Axiom unrel_join: forall x a b c, join a b c -> join (unrel x a) (unrel x b) (unrel x c).",
            "VernacAssumption",
            "81b75dfd1ea3abe991e8869d2f554ae487e235de"
        ],
        [
            "Axiom unrel_top: forall a, unrel a top = top.",
            "VernacAssumption",
            "f9326c493b847ada1c4c773a70308eae42a8899a"
        ],
        [
            "Axiom unrel_bot: forall a, unrel a bot = bot.",
            "VernacAssumption",
            "4d23a41b8f824701dd8a0e6d9dc2aa23e808b650"
        ],
        [
            "Axiom top_unrel: forall a, unrel top a = a.",
            "VernacAssumption",
            "ad7bf2d74a819cd03b6156dff376abe8fbf44265"
        ],
        [
            "Axiom bot_unrel: forall a, unrel bot a = a.",
            "VernacAssumption",
            "01d7db15c4b9eb0eb96ad451748bfbde500b5528"
        ],
        [
            "Parameter tree_height : t -> nat.",
            "VernacAssumption",
            "ae0a3ebec7b42d0121d1efaf76105351528359fc"
        ],
        [
            "Parameter tree_height_zero : forall t, {tree_height t = 0} + {tree_height t <> 0}.",
            "VernacAssumption",
            "b144eea9cf5bfe2c3f21ccfd1127d3febec0f536"
        ],
        [
            "Instance tree_heightable : heightable t := Heightable tree_height tree_height_zero.",
            "VernacInstance",
            "773f0ba01e3327e0899aad66737c5b87c508acde"
        ],
        [
            "Parameter tree_round_left : nat -> t -> option t.",
            "VernacAssumption",
            "81cb1c50c3b7038d7a3e8799d73ae5eec881fb6e"
        ],
        [
            "Instance roundableL_tree : roundableLeft t := RoundableLeft tree_round_left.",
            "VernacInstance",
            "e89a0d9ef4caff6b646ca43d593f4dbed2562356"
        ],
        [
            "Parameter tree_round_right : nat -> t -> option t.",
            "VernacAssumption",
            "1663457d9660d93320ff42ee537100f7092914ba"
        ],
        [
            "Instance roundableR_tree : roundableRight t := RoundableRight tree_round_right.",
            "VernacInstance",
            "e9a55e2e829fadfa50b48b71fe2ae75fd9201e58"
        ],
        [
            "Parameter tree_avg : nat -> t -> t -> option t.",
            "VernacAssumption",
            "45b9a0ef4d87a4e6c493afbae6052ea231a88e93"
        ],
        [
            "Instance avgable_tree : avgable t := Avgable tree_avg.",
            "VernacInstance",
            "142f9b52a2a9ede70c2ddd934f51e0a06afb483b"
        ],
        [
            "Parameter countBLeafCT : nat -> t -> nat.",
            "VernacAssumption",
            "8a0f925706b5d34739f447962536c6272bf6ccf6"
        ],
        [
            "Parameter share_metric : nat -> t -> nat.",
            "VernacAssumption",
            "71a9afa2969c3d49bdc73e65aa5d3dc393e181d9"
        ],
        [
            "Parameter tree_decompose : t -> (t * t).",
            "VernacAssumption",
            "45457e1b02568840afd11b13ca894a21f440bade"
        ],
        [
            "Instance decompose_tree : decomposible t := Decomposible tree_decompose.",
            "VernacInstance",
            "0471901f71fe524ae1e0e5d39e4b9705786fa562"
        ],
        [
            "Parameter recompose : (t * t) -> t.",
            "VernacAssumption",
            "889ae910004134186bd4bd86d66cbb5eb333bc82"
        ],
        [
            "Parameter power : nat -> nat -> nat.",
            "VernacAssumption",
            "b3ff216c51c91225b7aef3ec1f1380bf07fd6b73"
        ],
        [
            "Parameter add : t -> t -> option t.",
            "VernacAssumption",
            "4ddc7648dbf6e045c6cf7330bcaac4d824378c55"
        ],
        [
            "Parameter sub : t -> t -> option t.",
            "VernacAssumption",
            "ae1ba5474c395a590fcf16eff91d89e08c1a4f44"
        ],
        [
            "Axiom leq_dec : forall (x y : t), {x <= y} + {~ (x <= y)}.",
            "VernacAssumption",
            "339807e6136a4c85dd3bedf71d3b66cc58326798"
        ],
        [
            "Axiom height_top : height top = 0.",
            "VernacAssumption",
            "d10f5a60a105f1f846d374f83cecfa8baa46d2bf"
        ],
        [
            "Axiom height_bot : height bot = 0.",
            "VernacAssumption",
            "00ccb3840069b9238edfc8fbbec2f4d938a628a3"
        ],
        [
            "Axiom height_zero_eq: forall t, height t = 0 -> {t = top} + {t = bot}.",
            "VernacAssumption",
            "3347a6e4783e115f5f29f0066e1a9b7e97457eef"
        ],
        [
            "Axiom decompose_height : forall n t1 t2 t3, height t1 = S n -> decompose t1 = (t2, t3) -> (height t2 <= n)%nat /\\ (height t3 <= n)%nat.",
            "VernacAssumption",
            "92c99389e543626bab52db716278d6f8c3270295"
        ],
        [
            "Axiom decompose_recompose: forall t, decompose (recompose t) = t.",
            "VernacAssumption",
            "94512ed72703383f64b646c100086382f0b60e23"
        ],
        [
            "Axiom recompose_decompose: forall t, recompose (decompose t) = t.",
            "VernacAssumption",
            "55df330d42da42b2735b917f2b4863e9178d637f"
        ],
        [
            "Axiom decompose_join: forall t1 t11 t12 t2 t21 t22 t3 t31 t32, decompose t1 = (t11, t12) -> decompose t2 = (t21, t22) -> decompose t3 = (t31, t32) -> (join t1 t2 t3 <-> (join t11 t21 t31 /\\ join t12 t22 t32)).",
            "VernacAssumption",
            "2b95451b45a4de86bb0db6cd2a6c3c7573415321"
        ],
        [
            "Axiom decompose_glb: forall t1 t11 t12 t2 t21 t22 t3 t31 t32, decompose t1 = (t11,t12) -> decompose t2 = (t21,t22) -> decompose t3 = (t31,t32) -> (glb t1 t2 = t3 <-> (glb t11 t21 = t31 /\\ glb t12 t22 = t32)).",
            "VernacAssumption",
            "a194436e6b8f77a08c8ab3cca431869c3f5e93ac"
        ],
        [
            "Axiom decompose_lub: forall t1 t11 t12 t2 t21 t22 t3 t31 t32, decompose t1 = (t11,t12) -> decompose t2 = (t21,t22) -> decompose t3 = (t31,t32) -> (lub t1 t2 = t3 <-> (lub t11 t21 = t31 /\\ lub t12 t22 = t32)).",
            "VernacAssumption",
            "5f98c858b7cc90f68e7271b7cc1a30e93a6ae016"
        ],
        [
            "Axiom add_join : forall t1 t2 t3, add t1 t2 = Some t3 <-> join t1 t2 t3.",
            "VernacAssumption",
            "623c9d449d4d1f0b2ef11ef68452f50bff0e5c10"
        ],
        [
            "Axiom sub_join : forall t1 t2 t3, sub t1 t2 = Some t3 <-> join t2 t3 t1.",
            "VernacAssumption",
            "3df94d080f013873346b2bc226b20150de785b63"
        ],
        [
            "Axiom decompose_share_height_no_increase: forall sh sh' sh'' , decompose sh = (sh',sh'')-> (height sh' <= height sh /\\ height sh'' <= height sh)%nat.",
            "VernacAssumption",
            "a1ba2ff7fe8ba88d334c374e8f9af7d3cde75e7f"
        ],
        [
            "Axiom decompose_height_le: forall n s s1 s2, decompose s = (s1,s2) -> (height s <= S n)%nat -> (height s1 <= n)%nat /\\ (height s2 <= n)%nat.",
            "VernacAssumption",
            "c4a27a01f97582bd3e1f65dd28da3c3ab8ef6602"
        ],
        [
            "Axiom decompose_le: forall s1 s2 s11 s12 s21 s22, s1 <= s2 -> decompose s1 = (s11,s12) -> decompose s2 = (s21,s22) -> s11 <= s21 /\\ s12 <= s22.",
            "VernacAssumption",
            "a84f4dcc8ccbf91b10309eecfcc5e7867cb7754c"
        ],
        [
            "Axiom decompose_diff: forall s1 s2 s11 s12 s21 s22, s1 <> s2 -> decompose s1 = (s11,s12) -> decompose s2 = (s21,s22) -> s11 <> s21 \\/ s12 <> s22.",
            "VernacAssumption",
            "ea372267c7428555e1befebbe3cf3e2f0f240d2b"
        ],
        [
            "Axiom tree_round_left_join : forall n t1 t2 t3 t1' t2' t3', join t1 t2 t3 -> roundL n t1 = Some t1' -> roundL n t2 = Some t2' -> roundL n t3 = Some t3' -> join t1' t2' t3'.",
            "VernacAssumption",
            "b3bd30dc662a228750d3aaa3e6798a7cfd5d234e"
        ],
        [
            "Axiom tree_round_left_identity : forall n t, height t < n -> roundL n t = Some t.",
            "VernacAssumption",
            "085ce469d51e5b9402cb37c3635a0864e71408e2"
        ],
        [
            "Axiom tree_round_left_None : forall n t, n < height t -> roundL n t = None.",
            "VernacAssumption",
            "8f8f459986271d675aa1351e7bf6c35ac76bf02e"
        ],
        [
            "Axiom tree_round_left_decrease : forall n t, S n = height t -> exists t', roundL (S n) t = Some t' /\\ (height t' <= n)%nat.",
            "VernacAssumption",
            "3fb80327db6cf118e07a81644be91ec8a8a89909"
        ],
        [
            "Axiom tree_round_left_Some : forall n t, (height t <= S n)%nat -> exists t', roundL (S n) t = Some t'.",
            "VernacAssumption",
            "ebc00a390a9fd4d4e39fe18ce011d53a5b879ce1"
        ],
        [
            "Axiom tree_round_left_height_compare : forall t t' n, roundL n t = Some t' -> (height t' < n)%nat.",
            "VernacAssumption",
            "e0217411cb0b4d9abc584e1ffee8a1686fb21a04"
        ],
        [
            "Axiom tree_round_left_zero: forall t, roundL 0 t = None.",
            "VernacAssumption",
            "84c69e24c060bf576e95e4e7829c978839f26d6f"
        ],
        [
            "Axiom tree_round_right_join : forall n t1 t2 t3 t1' t2' t3', join t1 t2 t3 -> roundR n t1 = Some t1' -> roundR n t2 = Some t2' -> roundR n t3 = Some t3' -> join t1' t2' t3'.",
            "VernacAssumption",
            "5db43345ee0201649c36cc91ec161d562ab7626b"
        ],
        [
            "Axiom tree_round_right_identity : forall n t, height t < n -> roundR n t = Some t.",
            "VernacAssumption",
            "872938cc5b859c6ddf5f5c43e167c34424f72121"
        ],
        [
            "Axiom tree_round_right_None : forall n t, n < height t -> roundR n t = None.",
            "VernacAssumption",
            "7e13d7ee28b1dbc1ee8bff1a8581ea33f719bdd6"
        ],
        [
            "Axiom tree_round_right_decrease : forall n t, S n = height t -> exists t', roundR (S n) t = Some t' /\\ (height t' <= n)%nat.",
            "VernacAssumption",
            "16ee150a57ac7703bc1d558dd2f17d968185adb7"
        ],
        [
            "Axiom tree_round_right_Some : forall n t, (height t <= S n)%nat -> exists t', roundR (S n) t = Some t'.",
            "VernacAssumption",
            "98aedab6e310d0a8038ecbccaef10b434adcb4a7"
        ],
        [
            "Axiom tree_round_right_height_compare : forall t t' n, roundR n t = Some t' -> (height t' < n)%nat.",
            "VernacAssumption",
            "c296db167826ed2ba4a3a39beecb7dc0cb81d2e3"
        ],
        [
            "Axiom tree_round_right_zero: forall t, roundR 0 t = None.",
            "VernacAssumption",
            "2e55466ae43e0504cfe9cf0ebb0ce2e008f83d8f"
        ],
        [
            "Axiom tree_avg_identity : forall n t, height t < n -> avg n t t = Some t.",
            "VernacAssumption",
            "d44aade485f3bc7b5fcf7f5a5b9e3fcdb5c23071"
        ],
        [
            "Axiom tree_avg_None : forall n t1 t2, (n <= max (height t1) (height t2))%nat -> avg n t1 t2 = None.",
            "VernacAssumption",
            "202dd547fcd2bbd8066878c3aae499b27757179c"
        ],
        [
            "Axiom tree_avg_round2avg : forall n t1 t2 t3, roundL n t3 = Some t1 -> roundR n t3 = Some t2 -> avg n t1 t2 = Some t3.",
            "VernacAssumption",
            "c4ad26d3d10a62277280b2524a7fcde8b9b16354"
        ],
        [
            "Axiom tree_avg_avg2round : forall n t1 t2 t3, avg n t1 t2 = Some t3 -> roundL n t3 = Some t1 /\\ roundR n t3 = Some t2.",
            "VernacAssumption",
            "6f41f721f561cbe55542be133b1c3acf13d9aaea"
        ],
        [
            "Axiom tree_avg_join : forall n t11 t12 t13 t21 t22 t23 t31 t32 t33, avg n t11 t12 = Some t13 -> avg n t21 t22 = Some t23 -> avg n t31 t32 = Some t33 -> join t11 t21 t31 -> join t12 t22 t32 -> join t13 t23 t33.",
            "VernacAssumption",
            "61ffa324de0f8401befe885dbebf77f36e7fcad6"
        ],
        [
            "Axiom tree_avg_ex: forall n t1 t2, height t1 < n -> height t2 < n -> exists t3, avg n t1 t2 = Some t3.",
            "VernacAssumption",
            "7fae73ab4a67bbae31b3dc7430727694567834fe"
        ],
        [
            "Axiom avg_share_correct: forall n s, (height s <= S n)%nat -> exists s', exists s'', roundL (S n) s = Some s' /\\ roundR (S n) s = Some s'' /\\ avg (S n) s' s'' = Some s.",
            "VernacAssumption",
            "f58001800902fb1bb8c7e680c23f49a2d7664adf"
        ],
        [
            "Axiom countBLeafCT_decompose : forall n s s1 s2, decompose s = (s1,s2) -> countBLeafCT (S n) s = countBLeafCT n s1 + countBLeafCT n s2.",
            "VernacAssumption",
            "e173e01fd534c33580e43784401d6c355c81c956"
        ],
        [
            "Axiom countBLeafCT_le : forall n s1 s2, s1 <= s2 -> (countBLeafCT n s1 <= countBLeafCT n s2)%nat.",
            "VernacAssumption",
            "a6adbbcf7bb8f359b1a37525aa670316cec369be"
        ],
        [
            "Axiom countBLeafCT_lt : forall n s1 s2, s1 <= s2 -> s1 <> s2 -> (height s2 <= n)%nat -> countBLeafCT n s1 < countBLeafCT n s2.",
            "VernacAssumption",
            "d466685290c546bf1478d11cbd567a468f0ecb01"
        ],
        [
            "Axiom countBLeafCT_limit: forall n s, (countBLeafCT n s <= power 2 n)%nat.",
            "VernacAssumption",
            "1f341c3724768102566379ad3ef3af4a96b43906"
        ],
        [
            "Axiom countBLeafCT_bot: forall n, countBLeafCT n bot = 0.",
            "VernacAssumption",
            "598a42abcfbb9d56f1397c815497f13acfb55f18"
        ],
        [
            "Axiom countBLeafCT_top: forall n, countBLeafCT n top = power 2 n.",
            "VernacAssumption",
            "cc9ba4adb00f691df8bb5e07168f63615866e97e"
        ],
        [
            "Axiom countBLeafCT_positive : forall s n, (height s <= n)%nat -> bot <> s -> 0 < countBLeafCT n s.",
            "VernacAssumption",
            "8670a474b1e75f0af946146a4b29ca83377d2689"
        ],
        [
            "Axiom countBLeafCT_mono_le: forall n1 n2 s, (n1 <= n2)%nat -> (countBLeafCT n1 s <= countBLeafCT n2 s)%nat .",
            "VernacAssumption",
            "c20983e1f18714891de2f2dab81f0337a0cb72d6"
        ],
        [
            "Axiom countBLeafCT_mono_diff: forall n1 n2 s1 s2, (n1 <= n2)%nat -> s1 <= s2 -> (countBLeafCT n1 s2 - countBLeafCT n1 s1 <= countBLeafCT n2 s2 - countBLeafCT n2 s1)%nat.",
            "VernacAssumption",
            "b3d74cf3aeac815ac4dbc958cae2f3c57e72972c"
        ],
        [
            "Axiom countBLeafCT_mono_lt: forall n1 n2 s, n1 < n2 -> 0 < countBLeafCT n1 s -> countBLeafCT n1 s < countBLeafCT n2 s .",
            "VernacAssumption",
            "5df1e516542e91a8987bafe19b72df76684f331a"
        ],
        [
            "Axiom countBLeafCT_join_le: forall n s1 s2 s3, join s1 s2 s3 -> (countBLeafCT n s1 + countBLeafCT n s2 <= countBLeafCT n s3)%nat.",
            "VernacAssumption",
            "07d3cd88ae02c9d66ad2a107d134699d0fbedeed"
        ],
        [
            "Axiom countBLeafCT_join_eq: forall n s1 s2 s3, join s1 s2 s3 -> (height s1 <= n)%nat -> (height s2 <= n)%nat -> countBLeafCT n s1 + countBLeafCT n s2 = countBLeafCT n s3.",
            "VernacAssumption",
            "d47ef02ca3647e0d86233f01c6a73cfe3f6e7eb5"
        ],
        [
            "Axiom share_metric_nerr : forall s n, height s < n -> 0 < share_metric n s.",
            "VernacAssumption",
            "08da338572a69e4811a1f05f431fc650be3ef4d0"
        ],
        [
            "Axiom share_metric_err : forall s n, (n <= height s)%nat -> share_metric n s = 0.",
            "VernacAssumption",
            "04e6ec229485f242190aeea42cf665a8c2e65839"
        ],
        [
            "Axiom share_metric_height_monotonic : forall s n1 n2, (n1 <= n2)%nat -> (share_metric n1 s <= share_metric n2 s)%nat.",
            "VernacAssumption",
            "6fd5102b1b80956b054795768deead0273bb0bb5"
        ],
        [
            "Axiom share_metric_lub : forall s s' n, ~(s'<=s) -> 0 < share_metric n s -> 0 < share_metric n (lub s s') -> share_metric n s < share_metric n (lub s s').",
            "VernacAssumption",
            "d7f4fc73e5e43ef1f35f4ff08715a9f1e02231b5"
        ],
        [
            "Axiom share_metric_glb : forall s s' n, ~(s<=s') -> 0 < share_metric n s -> 0 < share_metric n (glb s s') -> share_metric n (glb s s') < share_metric n s.",
            "VernacAssumption",
            "cc9d724da7af1dc17f291700aad787b66263f4ef"
        ],
        [
            "Axiom share_metric_dif_monotonic: forall s1 s2 n n0, s1<=s2 -> (n<=n0)%nat -> height s1 < n -> height s2 < n -> (share_metric n s2 - share_metric n s1 <= share_metric n0 s2 - share_metric n0 s1)%nat.",
            "VernacAssumption",
            "0441d60d3f8aef6b934e5eb1e75f6e7c7b702c22"
        ],
        [
            "Axiom tree_height_lub_limit: forall n s1 s2, (height s1 <= n)%nat -> (height s2 <= n)%nat -> (height (lub s1 s2) <= n)%nat.",
            "VernacAssumption",
            "e97556a17833a6e5cabc99b5a5b90bf1e89142d3"
        ],
        [
            "Axiom tree_height_glb_limit: forall n s1 s2, (height s1 <= n)%nat -> (height s2 <= n)%nat -> (height (glb s1 s2) <= n)%nat.",
            "VernacAssumption",
            "9cc98133f81a123b22e99971d20833a748a19bab"
        ],
        [
            "Axiom height_lub1 : forall s1 s2, (height s1<= height s2)%nat-> (height (lub s1 s2) <= height s2)%nat.",
            "VernacAssumption",
            "1514d84abfd754ae639b0bb9091726bfea5b1714"
        ],
        [
            "Axiom height_glb1 : forall s1 s2, (height s1<= height s2)%nat-> (height (glb s1 s2) <= height s2)%nat.",
            "VernacAssumption",
            "e4bc9d4bde8f889965f10251872e2629a49ed3d0"
        ],
        [
            "Axiom height_comp: forall s, height (comp s)= height s.",
            "VernacAssumption",
            "439f90fbb041e5cdd7daa1f521de9a5def1f887f"
        ],
        [
            "Axiom decompose_height_zero: forall s sL sR, decompose s = (sL,sR) -> height s = 0 -> sL = s /\\ sR = s.",
            "VernacAssumption",
            "9e8c16169b6dcecd39b4cb8e103580f3b5eb36bf"
        ],
        [
            "Axiom decompose_equal: forall a b aL aR bL bR, decompose a = (aL,aR) -> decompose b = (bL,bR) -> (a = b <-> aL = bL /\\ aR = bR).",
            "VernacAssumption",
            "089aa8f124ce2bc95292c0f6d3f6b6b8f3314723"
        ],
        [
            "Axiom decompose_nonzero: forall sL sR s, decompose s = (sL,sR) -> (s <> bot <-> sL <> bot \\/ sR <> bot).",
            "VernacAssumption",
            "4e9eece7a4c6f8ed17d0c5406889aef55f250f78"
        ],
        [
            "Axiom tree_avg_equal: forall sL sR sL' sR' s n, avg n sL sR = Some s -> avg n sL' sR' = Some s -> sL = sL' /\\ sR = sR'.",
            "VernacAssumption",
            "2cc7da0faa876a0cd388284d852c29d41cd74790"
        ],
        [
            "Axiom tree_avg_zero: forall sL sR s n, avg n sL sR = Some s -> (s = bot <-> sL = bot /\\ sR = bot).",
            "VernacAssumption",
            "4ac4ba5abd3aaff6708f25247e7ab7420ef0f00c"
        ],
        [
            "Axiom tree_avg_nonzero: forall sL sR s n, avg n sL sR = Some s -> (s <> bot <-> sL <> bot \\/ sR <> bot).",
            "VernacAssumption",
            "add73ea601abd1f4b135ab2fb29b41bc920be181"
        ],
        [
            "Axiom tree_avg_bound: forall sL sR s n, avg n sL sR = Some s -> (height s <= n)%nat.",
            "VernacAssumption",
            "5d70947b57991b05e4b1a5691960d3e39a23af54"
        ],
        [
            "Axiom Lsh_recompose: Lsh = recompose (top, bot).",
            "VernacAssumption",
            "b30de7ae59af0a31a5be51cbb9b2f584357cc248"
        ],
        [
            "Axiom Rsh_recompose: Rsh = recompose (bot,top).",
            "VernacAssumption",
            "2ad5cff868c950a9207f3861a61198bd76fab030"
        ],
        [
            "Axiom decompose_Rsh: forall sh, unrel Rsh sh = snd (decompose sh).",
            "VernacAssumption",
            "3068b107fca5179af25b00ef3436062436a0d603"
        ],
        [
            "Axiom decompose_Lsh: forall sh, unrel Lsh sh = fst (decompose sh).",
            "VernacAssumption",
            "4a46c32cd84bcfac6f49ae1aa2512766a8787473"
        ],
        [
            "Axiom rel_Lsh: forall sh, rel Lsh sh = recompose (sh,bot).",
            "VernacAssumption",
            "322c7614f5ad3298f110412d4bc8f50b6d7d86d6"
        ],
        [
            "Axiom rel_Rsh: forall sh, rel Rsh sh = recompose (bot,sh).",
            "VernacAssumption",
            "b56bb2d8079b4147ac85bc11ef34450ee255be75"
        ],
        [
            "Axiom lub_rel_recompose: forall sh1 sh2, lub (rel Lsh sh1) (rel Rsh sh2) = recompose (sh1,sh2).",
            "VernacAssumption",
            "8ccd16298da20239c61ad56e6ba98a8c598bb418"
        ],
        [
            "End SHARE_MODEL.",
            "VernacEndSegment",
            "2ae3e6332718ff0d0b4e28aa19f415fed6d149f5"
        ],
        [
            "Module BA_Facts (BA:BOOLEAN_ALGEBRA) <: BA_FACTS.",
            "VernacDefineModule",
            "f5dad9cce1c04bc23d4a7548723a3f850d146a56"
        ],
        [
            "Include BA.",
            "VernacInclude",
            "8747799e4a23b117418cd09351aa86e3cf0cb43b"
        ],
        [
            "Lemma ord_spec1 : forall x y, x <= y <-> x = glb x y.",
            "VernacStartTheoremProof",
            "3f6c26c033df5a1f219ac37535056acf58d33c2f"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "rewrite H; auto with ba.",
            "VernacExtend",
            "8c6c70a48d17516f63afcf233136788a9886213e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ord_spec2 : forall x y, x <= y <-> lub x y = y.",
            "VernacStartTheoremProof",
            "38515e4f2b2f6c73b999daf02ea1ebe151b84082"
        ],
        [
            "intros; split; intros.",
            "VernacExtend",
            "c2ba330b9c2c5e22fd554cd9ccb5c9ade0d6123e"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "rewrite <- H; auto with ba.",
            "VernacExtend",
            "15b837d4e15884169653d0d110ad8582ad915902"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lub_idem : forall x, lub x x = x.",
            "VernacStartTheoremProof",
            "058205dc35490e2c3d3ef53d78357fec235fda66"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma glb_idem : forall x, glb x x = x.",
            "VernacStartTheoremProof",
            "1d69a2742f7989f3555be4accbde90667e6b2aa9"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lub_commute : forall x y, lub x y = lub y x.",
            "VernacStartTheoremProof",
            "f4794f6b3afd6967479169fbdb698cc9515c58a7"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma glb_commute : forall x y, glb x y = glb y x.",
            "VernacStartTheoremProof",
            "40fa9e1d0e2393a955e46b03f1663260bb67c09c"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lub_absorb : forall x y, lub x (glb x y) = x.",
            "VernacStartTheoremProof",
            "bed1befd9c2e34fc3e1e9e7afe43e807bc6e0a47"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma glb_absorb : forall x y, glb x (lub x y) = x.",
            "VernacStartTheoremProof",
            "0954db6eeea3f0e48e718e2a552b51ad7bf3cf2f"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lub_assoc : forall x y z, lub (lub x y) z = lub x (lub y z).",
            "VernacStartTheoremProof",
            "e1a045be02dc29ef34d251f781a4a5e70187c5eb"
        ],
        [
            "intros; apply ord_antisym; eauto with ba.",
            "VernacExtend",
            "c58fda7d2be2a9e9302b481dc5c0a17a0ad93fbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma glb_assoc : forall x y z, glb (glb x y) z = glb x (glb y z).",
            "VernacStartTheoremProof",
            "dc16915eca881bfab4063fa8bebfed6e5cd1e437"
        ],
        [
            "intros; apply ord_antisym; eauto with ba.",
            "VernacExtend",
            "c58fda7d2be2a9e9302b481dc5c0a17a0ad93fbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma glb_bot : forall x, glb x bot = bot.",
            "VernacStartTheoremProof",
            "c99c836094e8010fb7b483d1b0839b90f8e32dcf"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lub_top : forall x, lub x top = top.",
            "VernacStartTheoremProof",
            "6aac2d299ec4167d6fc7aab97d331895e8923e79"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lub_bot : forall x, lub x bot = x.",
            "VernacStartTheoremProof",
            "c39a5a07f2e53d9dc3d2bb376a15ba86dc0b4728"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma glb_top : forall x, glb x top = x.",
            "VernacStartTheoremProof",
            "138aa0e3398f82a762c9ba81a9068a52ed2b1d3f"
        ],
        [
            "auto with ba.",
            "VernacExtend",
            "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distrib2 : forall x y z, lub x (glb y z) = glb (lub x y) (lub x z).",
            "VernacStartTheoremProof",
            "fd5706131760cb41f11f36f956f169938714446d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply ord_antisym.",
            "VernacExtend",
            "73580188c8bc86e36a3f0a42a2ae63f021ef4184"
        ],
        [
            "apply lub_least.",
            "VernacExtend",
            "ef8a22ea29190f2b22d85c9ac65c041b9154e253"
        ],
        [
            "rewrite distrib1.",
            "VernacExtend",
            "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "rewrite glb_absorb.",
            "VernacExtend",
            "fcf502d078a05bf113b30891436b9173b9e4e839"
        ],
        [
            "apply lub_upper1.",
            "VernacExtend",
            "60b4e9aa7cf076fbc12f50387fa9fc2e0ce5fe3d"
        ],
        [
            "apply glb_greatest.",
            "VernacExtend",
            "5345d190dfcebd8477cbd23b5680059eb7ca2084"
        ],
        [
            "apply ord_trans with y.",
            "VernacExtend",
            "b7489d5bfef1c17dacd54cea7213c1a4dfa1ad8d"
        ],
        [
            "apply glb_lower1.",
            "VernacExtend",
            "abe71fffbc64bac870a08ce5ace77f7b46ee7b26"
        ],
        [
            "apply lub_upper2.",
            "VernacExtend",
            "719c134a5ab6901ae588bda202544d5c526c245a"
        ],
        [
            "apply ord_trans with z.",
            "VernacExtend",
            "fc1276fb03be149e5fb6933e45b063e75bb60d43"
        ],
        [
            "apply glb_lower2.",
            "VernacExtend",
            "eec43869733b6bd6c1147d7619eaeac64edb95a2"
        ],
        [
            "apply lub_upper2.",
            "VernacExtend",
            "719c134a5ab6901ae588bda202544d5c526c245a"
        ],
        [
            "rewrite distrib1.",
            "VernacExtend",
            "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
        ],
        [
            "apply lub_least.",
            "VernacExtend",
            "ef8a22ea29190f2b22d85c9ac65c041b9154e253"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "rewrite glb_absorb.",
            "VernacExtend",
            "fcf502d078a05bf113b30891436b9173b9e4e839"
        ],
        [
            "apply lub_upper1.",
            "VernacExtend",
            "60b4e9aa7cf076fbc12f50387fa9fc2e0ce5fe3d"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "rewrite distrib1.",
            "VernacExtend",
            "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
        ],
        [
            "apply lub_least.",
            "VernacExtend",
            "ef8a22ea29190f2b22d85c9ac65c041b9154e253"
        ],
        [
            "apply ord_trans with x.",
            "VernacExtend",
            "a7139d6410eb1bdf199d65ffa40a12bd0f12b209"
        ],
        [
            "apply glb_lower2.",
            "VernacExtend",
            "eec43869733b6bd6c1147d7619eaeac64edb95a2"
        ],
        [
            "apply lub_upper1.",
            "VernacExtend",
            "60b4e9aa7cf076fbc12f50387fa9fc2e0ce5fe3d"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "apply lub_upper2.",
            "VernacExtend",
            "719c134a5ab6901ae588bda202544d5c526c245a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distrib_spec : forall x y1 y2, lub x y1 = lub x y2 -> glb x y1 = glb x y2 -> y1 = y2.",
            "VernacStartTheoremProof",
            "66e23c3e22a2af05b89b2a15b084216dbf7802e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (lub_absorb y2 x).",
            "VernacExtend",
            "7f5d238111316da0607a6ce7fe54c8814b031cb5"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite distrib2.",
            "VernacExtend",
            "32b45b89e4b12cf930149f7e51442efa1995b8c0"
        ],
        [
            "rewrite lub_commute.",
            "VernacExtend",
            "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite (lub_commute x y1).",
            "VernacExtend",
            "3759c2c07449ec50084593172bd4d503f967b312"
        ],
        [
            "rewrite (lub_commute y2 y1).",
            "VernacExtend",
            "bb59b77b357c1a59c4d99873316fd65e90a0b5b9"
        ],
        [
            "rewrite <- distrib2.",
            "VernacExtend",
            "1a2f2cb3c57a3bc20b882b602f8c0f664ef70ed0"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "rewrite lub_absorb.",
            "VernacExtend",
            "a19bf7fd99d274ddf7c7f356bac0eddb79c7a6ec"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_inv : forall x, comp (comp x) = x.",
            "VernacStartTheoremProof",
            "083c4571bb843702a4d18650032b5a46dec2cd35"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "apply distrib_spec with (comp x).",
            "VernacExtend",
            "0ae2e7be0ef3aa22d46eb79135655465da3b12ce"
        ],
        [
            "rewrite comp1.",
            "VernacExtend",
            "038c4a07dd8a463e3722946a32d6bd565239a68b"
        ],
        [
            "rewrite lub_commute.",
            "VernacExtend",
            "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
        ],
        [
            "rewrite comp1.",
            "VernacExtend",
            "038c4a07dd8a463e3722946a32d6bd565239a68b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite comp2.",
            "VernacExtend",
            "741d8836b219ce289bee8338157ec007849bd04b"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "rewrite comp2.",
            "VernacExtend",
            "741d8836b219ce289bee8338157ec007849bd04b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma demorgan1 : forall x y, comp (lub x y) = glb (comp x) (comp y).",
            "VernacStartTheoremProof",
            "2eeab81fc17a9bf9fe43854c748ec7b929508737"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply distrib_spec with (lub x y).",
            "VernacExtend",
            "2364825939b3f4150d5edcc45b8f0368cb4e03a4"
        ],
        [
            "rewrite comp1.",
            "VernacExtend",
            "038c4a07dd8a463e3722946a32d6bd565239a68b"
        ],
        [
            "rewrite distrib2.",
            "VernacExtend",
            "32b45b89e4b12cf930149f7e51442efa1995b8c0"
        ],
        [
            "rewrite (lub_assoc x y (comp y)).",
            "VernacExtend",
            "a8f6f8f390f176917b87181ff88488eed81872de"
        ],
        [
            "rewrite comp1.",
            "VernacExtend",
            "038c4a07dd8a463e3722946a32d6bd565239a68b"
        ],
        [
            "rewrite lub_top.",
            "VernacExtend",
            "5b314f42e73eb3c0dee157a05af90351812d775f"
        ],
        [
            "rewrite glb_top.",
            "VernacExtend",
            "eeb42f4a6bdfd228c4be9a2cc654359c7339a28b"
        ],
        [
            "rewrite (lub_commute x y).",
            "VernacExtend",
            "edb200fc1fea5fe27b18342cd8b740da55d7f9b2"
        ],
        [
            "rewrite lub_assoc.",
            "VernacExtend",
            "6fb003596d9d872d195d383b3f23ac2a2a2f5f1a"
        ],
        [
            "rewrite comp1.",
            "VernacExtend",
            "038c4a07dd8a463e3722946a32d6bd565239a68b"
        ],
        [
            "rewrite lub_top.",
            "VernacExtend",
            "5b314f42e73eb3c0dee157a05af90351812d775f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite comp2.",
            "VernacExtend",
            "741d8836b219ce289bee8338157ec007849bd04b"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "rewrite distrib1.",
            "VernacExtend",
            "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
        ],
        [
            "rewrite (glb_commute (comp x) (comp y)).",
            "VernacExtend",
            "23a01a186e589faf5ec053195edb313a95eb3752"
        ],
        [
            "rewrite glb_assoc.",
            "VernacExtend",
            "3fde6022003f4830c8b8e15e693e56f6695285d9"
        ],
        [
            "rewrite (glb_commute (comp x) x).",
            "VernacExtend",
            "47ac492846c3f11b22be41a3cc0cfd9835d82300"
        ],
        [
            "rewrite comp2.",
            "VernacExtend",
            "741d8836b219ce289bee8338157ec007849bd04b"
        ],
        [
            "rewrite glb_bot.",
            "VernacExtend",
            "38cb8b135187eca898aaebf9f330369f95b96cf4"
        ],
        [
            "rewrite lub_commute.",
            "VernacExtend",
            "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
        ],
        [
            "rewrite lub_bot.",
            "VernacExtend",
            "c8786c53dcf7aa6e5e4d5e6cc1c0f4b981f990f4"
        ],
        [
            "rewrite (glb_commute (comp y) (comp x)).",
            "VernacExtend",
            "25a2a438a8a002782ce14afc0b49f7878ef97bb4"
        ],
        [
            "rewrite glb_assoc.",
            "VernacExtend",
            "3fde6022003f4830c8b8e15e693e56f6695285d9"
        ],
        [
            "rewrite (glb_commute (comp y) y).",
            "VernacExtend",
            "a6c7c8416fd378a60fc17ff56e955c3c7dd7c51d"
        ],
        [
            "rewrite comp2.",
            "VernacExtend",
            "741d8836b219ce289bee8338157ec007849bd04b"
        ],
        [
            "rewrite glb_bot.",
            "VernacExtend",
            "38cb8b135187eca898aaebf9f330369f95b96cf4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma demorgan2 : forall x y, comp (glb x y) = lub (comp x) (comp y).",
            "VernacStartTheoremProof",
            "766416977e1c0c7380f2dbd0dfdd1aa6d737dd7b"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply distrib_spec with (glb x y).",
            "VernacExtend",
            "cebeda6311777e0e8f191ce6c3125b50e2077165"
        ],
        [
            "rewrite comp1.",
            "VernacExtend",
            "038c4a07dd8a463e3722946a32d6bd565239a68b"
        ],
        [
            "rewrite lub_commute.",
            "VernacExtend",
            "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
        ],
        [
            "rewrite distrib2.",
            "VernacExtend",
            "32b45b89e4b12cf930149f7e51442efa1995b8c0"
        ],
        [
            "rewrite (lub_commute (comp x) (comp y)).",
            "VernacExtend",
            "1a13074285f7d285f75f583ba9267f55f6116774"
        ],
        [
            "rewrite lub_assoc.",
            "VernacExtend",
            "6fb003596d9d872d195d383b3f23ac2a2a2f5f1a"
        ],
        [
            "rewrite (lub_commute (comp x) x).",
            "VernacExtend",
            "3baf8591bd417fbd3246d3fadaeea9cbedc31a6c"
        ],
        [
            "rewrite comp1.",
            "VernacExtend",
            "038c4a07dd8a463e3722946a32d6bd565239a68b"
        ],
        [
            "rewrite lub_top.",
            "VernacExtend",
            "5b314f42e73eb3c0dee157a05af90351812d775f"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "rewrite glb_top.",
            "VernacExtend",
            "eeb42f4a6bdfd228c4be9a2cc654359c7339a28b"
        ],
        [
            "rewrite (lub_commute (comp y) (comp x)).",
            "VernacExtend",
            "6ba1a51bae0dabc10ca7cbab5931c0ff497dedbb"
        ],
        [
            "rewrite lub_assoc.",
            "VernacExtend",
            "6fb003596d9d872d195d383b3f23ac2a2a2f5f1a"
        ],
        [
            "rewrite (lub_commute (comp y) y).",
            "VernacExtend",
            "3334bcf302cdd3f62160bfdfe1539dd68629f7b7"
        ],
        [
            "rewrite comp1.",
            "VernacExtend",
            "038c4a07dd8a463e3722946a32d6bd565239a68b"
        ],
        [
            "rewrite lub_top.",
            "VernacExtend",
            "5b314f42e73eb3c0dee157a05af90351812d775f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite comp2.",
            "VernacExtend",
            "741d8836b219ce289bee8338157ec007849bd04b"
        ],
        [
            "rewrite distrib1.",
            "VernacExtend",
            "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
        ],
        [
            "rewrite (glb_commute x y).",
            "VernacExtend",
            "3a7fd8a3624d4d723020184269264e16dc87b28b"
        ],
        [
            "rewrite glb_assoc.",
            "VernacExtend",
            "3fde6022003f4830c8b8e15e693e56f6695285d9"
        ],
        [
            "rewrite comp2.",
            "VernacExtend",
            "741d8836b219ce289bee8338157ec007849bd04b"
        ],
        [
            "rewrite glb_bot.",
            "VernacExtend",
            "38cb8b135187eca898aaebf9f330369f95b96cf4"
        ],
        [
            "rewrite lub_commute.",
            "VernacExtend",
            "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
        ],
        [
            "rewrite lub_bot.",
            "VernacExtend",
            "c8786c53dcf7aa6e5e4d5e6cc1c0f4b981f990f4"
        ],
        [
            "rewrite (glb_commute y x).",
            "VernacExtend",
            "7557284fc0b32d03ff3ea5644abc1fdb4292ae84"
        ],
        [
            "rewrite glb_assoc.",
            "VernacExtend",
            "3fde6022003f4830c8b8e15e693e56f6695285d9"
        ],
        [
            "rewrite comp2.",
            "VernacExtend",
            "741d8836b219ce289bee8338157ec007849bd04b"
        ],
        [
            "rewrite glb_bot.",
            "VernacExtend",
            "38cb8b135187eca898aaebf9f330369f95b96cf4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Join_ba: Join t := fun x y z : t => glb x y = bot /\\ lub x y = z.",
            "VernacInstance",
            "96524dde1dec48bf9b12f69c84fd87ee8e8131d1"
        ],
        [
            "Instance pa: Perm_alg t.",
            "VernacInstance",
            "cd5d1c5acbf6bcae5436eeecd3a90dbbb6c3e973"
        ],
        [
            "constructor; simpl; intros.",
            "VernacExtend",
            "dcd76c351204acf8d4b7d76eea612fabf67729fc"
        ],
        [
            "hnf in *.",
            "VernacExtend",
            "2b83f930e16edf1e74901190007d847b58b5d93a"
        ],
        [
            "destruct H; destruct H0; subst; auto.",
            "VernacExtend",
            "6434d22ff1aae79667e7a8ee2e95aed7ae1481cb"
        ],
        [
            "repeat intro; hnf in *; subst; auto.",
            "VernacExtend",
            "1f35055dc2539f5f5ebd7f6f30f4210a0ca5e7d2"
        ],
        [
            "hnf in *.",
            "VernacExtend",
            "2b83f930e16edf1e74901190007d847b58b5d93a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exists (lub b c); intuition; hnf in *.",
            "VernacExtend",
            "848c1d709339ef3adc32ed60888ef6fe262bdfe8"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite <- H2 in H.",
            "VernacExtend",
            "24741113b5340eec261a213cd2301abccefba5c4"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply ord_antisym.",
            "VernacExtend",
            "73580188c8bc86e36a3f0a42a2ae63f021ef4184"
        ],
        [
            "eauto with ba.",
            "VernacExtend",
            "fda606bb4441bd1c30b29f251fc99671330b667d"
        ],
        [
            "rewrite H; auto with ba.",
            "VernacExtend",
            "8c6c70a48d17516f63afcf233136788a9886213e"
        ],
        [
            "cut (glb a c = bot); intros.",
            "VernacExtend",
            "c8935594a91604ae3444210456973085840b66c2"
        ],
        [
            "rewrite distrib1.",
            "VernacExtend",
            "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite lub_commute; rewrite lub_bot; auto.",
            "VernacExtend",
            "28a33da559f042a24261726b3afee9f2027e4985"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply ord_antisym; rewrite lub_assoc; auto with ba.",
            "VernacExtend",
            "baf65e43aec56dad6224d40c9c5deb9b12208f00"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite glb_commute in H |- *.",
            "VernacExtend",
            "d9b9d0d06965e06684f8d0a6130515ab7f444f24"
        ],
        [
            "rewrite distrib1 in H.",
            "VernacExtend",
            "398a5de29d934fec10ca9334f7d8545431156adc"
        ],
        [
            "generalize (lub_upper1 (glb c a) (glb c b)); intro.",
            "VernacExtend",
            "0fdd6d26f56eafd02883ec6aff7218377999246e"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "apply ord_antisym; auto.",
            "VernacExtend",
            "2966248006ac7c57a503ddef2a709d0f8dbdbd02"
        ],
        [
            "apply bot_correct.",
            "VernacExtend",
            "6ab8dbf4c3b7f22412d027cb468e577ad6d3e1eb"
        ],
        [
            "hnf in *.",
            "VernacExtend",
            "2b83f930e16edf1e74901190007d847b58b5d93a"
        ],
        [
            "rewrite glb_commute.",
            "VernacExtend",
            "bb4c622c49b9220b28be788a8847088215d049dd"
        ],
        [
            "rewrite lub_commute.",
            "VernacExtend",
            "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "hnf in *.",
            "VernacExtend",
            "2b83f930e16edf1e74901190007d847b58b5d93a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "rewrite (lub_commute b) in H2.",
            "VernacExtend",
            "7de3ad40c07988b080e604daf81686bb177bf8fa"
        ],
        [
            "rewrite lub_commute in H2.",
            "VernacExtend",
            "a83fd4c32fc29503b0e1514e3e0cab22ccb21284"
        ],
        [
            "rewrite <- lub_assoc in H2.",
            "VernacExtend",
            "8029de1366153cf9d48b0972c104c2bd378fa3bf"
        ],
        [
            "apply ord_spec2 in H2.",
            "VernacExtend",
            "95d67b5460c0763a45d139f372f75c1dbc99e7d2"
        ],
        [
            "rewrite lub_commute; apply ord_spec2.",
            "VernacExtend",
            "c65b7fb04e8446d9acba0417e89e9172070b8cba"
        ],
        [
            "apply ord_trans with (lub a' b'); auto.",
            "VernacExtend",
            "cd91f8a27da9b960781719ed62984cd158cc9db2"
        ],
        [
            "apply ord_spec2.",
            "VernacExtend",
            "a13d30a82512443dc45f0695d83090b0cc654403"
        ],
        [
            "rewrite (lub_commute b').",
            "VernacExtend",
            "c19062d4aec398df658e7f1dbc09f18421def7c4"
        ],
        [
            "rewrite lub_assoc.",
            "VernacExtend",
            "6fb003596d9d872d195d383b3f23ac2a2a2f5f1a"
        ],
        [
            "rewrite lub_idem; auto.",
            "VernacExtend",
            "77e7adb4a8a7999d605456f26888ae8ea7286b2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance sa: Sep_alg t.",
            "VernacInstance",
            "2c7d91cf5c18d081c01f86cedeeb1af3cfc4e4b1"
        ],
        [
            "apply mkSep with (fun _ => bot).",
            "VernacExtend",
            "6397fbdda9ccc89e545bf78623c23b2504aefaac"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold unit_for.",
            "VernacExtend",
            "abcbb02c798d41dd3ff7cf08f71f6ce628757859"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite glb_commute; apply glb_bot.",
            "VernacExtend",
            "b9e634f842d1a0dc9c17767c071641cd060738ad"
        ],
        [
            "rewrite lub_commute; apply lub_bot.",
            "VernacExtend",
            "fa083001d15506628989f6cc82fbbf718de9f399"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Instance singa: Sing_alg t.",
            "VernacInstance",
            "632fc3175b69f08d8aab653e7168eebb79670695"
        ],
        [
            "apply (mkSing bot).",
            "VernacExtend",
            "f1a557dd56823945214433b8448b8131def85834"
        ],
        [
            "unfold core; intros; simpl.",
            "VernacExtend",
            "9bcd0c8c3618d230f75b9e1128b634dbaf0fc07d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Instance ca: Canc_alg t.",
            "VernacInstance",
            "9b5651fc41ac05a6dd77660beae4ae74f5f3d3ab"
        ],
        [
            "repeat intro.",
            "VernacExtend",
            "b1b5d9b3004bf4634299c208df98406e88278608"
        ],
        [
            "hnf in *.",
            "VernacExtend",
            "2b83f930e16edf1e74901190007d847b58b5d93a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply distrib_spec with b.",
            "VernacExtend",
            "bee240dfa934d715072637ca55eb2e2fdaf6a1de"
        ],
        [
            "rewrite lub_commute; rewrite H2.",
            "VernacExtend",
            "592e91b929abf99536e6a2a1584bde3c9201e6b2"
        ],
        [
            "rewrite lub_commute; rewrite H3.",
            "VernacExtend",
            "e92608390b55eea138bc42cc3e3dc6e096887d54"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite glb_commute; rewrite H1.",
            "VernacExtend",
            "0cb14f71a6c29ed013411476aac7dd6af4970301"
        ],
        [
            "rewrite glb_commute; rewrite H.",
            "VernacExtend",
            "de1f73bb9f47c387fac2bc1288b9e2dc80f9349a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance da: Disj_alg t.",
            "VernacInstance",
            "5cfdbfd26ea21bef51d81ab5ad38ba81b5b093a8"
        ],
        [
            "repeat intro.",
            "VernacExtend",
            "b1b5d9b3004bf4634299c208df98406e88278608"
        ],
        [
            "destruct H, H0.",
            "VernacExtend",
            "8db9e1441c64ed20802e4526963172d1abdaee94"
        ],
        [
            "rewrite lub_idem in H1; subst.",
            "VernacExtend",
            "4bd2e1174caac9e74b5a371b50f989a60081c40e"
        ],
        [
            "rewrite glb_idem in H; subst.",
            "VernacExtend",
            "53dd538bb14187da0940394e940e75f48bbef962"
        ],
        [
            "rewrite lub_commute, lub_bot; auto.",
            "VernacExtend",
            "b74c85b35990c76c396f00e654210a081dd377be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BA_Facts.",
            "VernacEndSegment",
            "af675da4f10ae0e504e494a316c8ec73c67626e5"
        ]
    ],
    "proofs": [
        {
            "name": "list_heightable",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "apply Heightable with list_height.",
                        "VernacExtend",
                        "c6766043daaf17a82e98be8b2ad6ed011fd78713"
                    ]
                },
                {
                    "command": [
                        "induction a.",
                        "VernacExtend",
                        "cd3414465e628a01405035e1db2372571dd4d2a6"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "unfold list_height in *.",
                        "VernacExtend",
                        "e62f6d518d240f88f0b62bfbad6e4aa20e8dbc7a"
                    ]
                },
                {
                    "command": [
                        "case (is_height_zero a).",
                        "VernacExtend",
                        "93755976acd002906cf6e8dcd0f25835a8f9f19b"
                    ]
                },
                {
                    "command": [
                        "destruct IHa.",
                        "VernacExtend",
                        "e2e6ad2be0398464edaa1cc5818721674fd2277b"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite e, e0.",
                        "VernacExtend",
                        "52771ba2197b1feff78a52e78a14cccd372c3754"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply n.",
                        "VernacExtend",
                        "ed7192228e57856197020582fd87949160a69557"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "rewrite e in H0.",
                        "VernacExtend",
                        "668bc25fa6349d62b5143e2344195feb426a98ee"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply n.",
                        "VernacExtend",
                        "ed7192228e57856197020582fd87949160a69557"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "icase (height a).",
                        "VernacExtend",
                        "103a61ca06a3f3bd7ed33d1bd4e7efdf3b51d4de"
                    ]
                },
                {
                    "command": [
                        "icase (fold_right max 0 (map height a0)).",
                        "VernacExtend",
                        "c789e835919194ae6fc0fa9c133f21b253388891"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "ord_spec1",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto with ba.",
                        "VernacExtend",
                        "8c6c70a48d17516f63afcf233136788a9886213e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ord_spec2",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "intros; split; intros.",
                        "VernacExtend",
                        "c2ba330b9c2c5e22fd554cd9ccb5c9ade0d6123e"
                    ]
                },
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; auto with ba.",
                        "VernacExtend",
                        "15b837d4e15884169653d0d110ad8582ad915902"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lub_idem",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "glb_idem",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lub_commute",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "glb_commute",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lub_absorb",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "glb_absorb",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lub_assoc",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intros; apply ord_antisym; eauto with ba.",
                        "VernacExtend",
                        "c58fda7d2be2a9e9302b481dc5c0a17a0ad93fbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "glb_assoc",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intros; apply ord_antisym; eauto with ba.",
                        "VernacExtend",
                        "c58fda7d2be2a9e9302b481dc5c0a17a0ad93fbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "glb_bot",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lub_top",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lub_bot",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "glb_top",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "auto with ba.",
                        "VernacExtend",
                        "e17b662368b07ed94bcd6ae6c886e20db737a5ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distrib2",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply ord_antisym.",
                        "VernacExtend",
                        "73580188c8bc86e36a3f0a42a2ae63f021ef4184"
                    ]
                },
                {
                    "command": [
                        "apply lub_least.",
                        "VernacExtend",
                        "ef8a22ea29190f2b22d85c9ac65c041b9154e253"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib1.",
                        "VernacExtend",
                        "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_absorb.",
                        "VernacExtend",
                        "fcf502d078a05bf113b30891436b9173b9e4e839"
                    ]
                },
                {
                    "command": [
                        "apply lub_upper1.",
                        "VernacExtend",
                        "60b4e9aa7cf076fbc12f50387fa9fc2e0ce5fe3d"
                    ]
                },
                {
                    "command": [
                        "apply glb_greatest.",
                        "VernacExtend",
                        "5345d190dfcebd8477cbd23b5680059eb7ca2084"
                    ]
                },
                {
                    "command": [
                        "apply ord_trans with y.",
                        "VernacExtend",
                        "b7489d5bfef1c17dacd54cea7213c1a4dfa1ad8d"
                    ]
                },
                {
                    "command": [
                        "apply glb_lower1.",
                        "VernacExtend",
                        "abe71fffbc64bac870a08ce5ace77f7b46ee7b26"
                    ]
                },
                {
                    "command": [
                        "apply lub_upper2.",
                        "VernacExtend",
                        "719c134a5ab6901ae588bda202544d5c526c245a"
                    ]
                },
                {
                    "command": [
                        "apply ord_trans with z.",
                        "VernacExtend",
                        "fc1276fb03be149e5fb6933e45b063e75bb60d43"
                    ]
                },
                {
                    "command": [
                        "apply glb_lower2.",
                        "VernacExtend",
                        "eec43869733b6bd6c1147d7619eaeac64edb95a2"
                    ]
                },
                {
                    "command": [
                        "apply lub_upper2.",
                        "VernacExtend",
                        "719c134a5ab6901ae588bda202544d5c526c245a"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib1.",
                        "VernacExtend",
                        "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
                    ]
                },
                {
                    "command": [
                        "apply lub_least.",
                        "VernacExtend",
                        "ef8a22ea29190f2b22d85c9ac65c041b9154e253"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_absorb.",
                        "VernacExtend",
                        "fcf502d078a05bf113b30891436b9173b9e4e839"
                    ]
                },
                {
                    "command": [
                        "apply lub_upper1.",
                        "VernacExtend",
                        "60b4e9aa7cf076fbc12f50387fa9fc2e0ce5fe3d"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib1.",
                        "VernacExtend",
                        "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
                    ]
                },
                {
                    "command": [
                        "apply lub_least.",
                        "VernacExtend",
                        "ef8a22ea29190f2b22d85c9ac65c041b9154e253"
                    ]
                },
                {
                    "command": [
                        "apply ord_trans with x.",
                        "VernacExtend",
                        "a7139d6410eb1bdf199d65ffa40a12bd0f12b209"
                    ]
                },
                {
                    "command": [
                        "apply glb_lower2.",
                        "VernacExtend",
                        "eec43869733b6bd6c1147d7619eaeac64edb95a2"
                    ]
                },
                {
                    "command": [
                        "apply lub_upper1.",
                        "VernacExtend",
                        "60b4e9aa7cf076fbc12f50387fa9fc2e0ce5fe3d"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "apply lub_upper2.",
                        "VernacExtend",
                        "719c134a5ab6901ae588bda202544d5c526c245a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distrib_spec",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (lub_absorb y2 x).",
                        "VernacExtend",
                        "7f5d238111316da0607a6ce7fe54c8814b031cb5"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib2.",
                        "VernacExtend",
                        "32b45b89e4b12cf930149f7e51442efa1995b8c0"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute.",
                        "VernacExtend",
                        "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_commute x y1).",
                        "VernacExtend",
                        "3759c2c07449ec50084593172bd4d503f967b312"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_commute y2 y1).",
                        "VernacExtend",
                        "bb59b77b357c1a59c4d99873316fd65e90a0b5b9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- distrib2.",
                        "VernacExtend",
                        "1a2f2cb3c57a3bc20b882b602f8c0f664ef70ed0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_absorb.",
                        "VernacExtend",
                        "a19bf7fd99d274ddf7c7f356bac0eddb79c7a6ec"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_inv",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "apply distrib_spec with (comp x).",
                        "VernacExtend",
                        "0ae2e7be0ef3aa22d46eb79135655465da3b12ce"
                    ]
                },
                {
                    "command": [
                        "rewrite comp1.",
                        "VernacExtend",
                        "038c4a07dd8a463e3722946a32d6bd565239a68b"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute.",
                        "VernacExtend",
                        "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
                    ]
                },
                {
                    "command": [
                        "rewrite comp1.",
                        "VernacExtend",
                        "038c4a07dd8a463e3722946a32d6bd565239a68b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite comp2.",
                        "VernacExtend",
                        "741d8836b219ce289bee8338157ec007849bd04b"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "rewrite comp2.",
                        "VernacExtend",
                        "741d8836b219ce289bee8338157ec007849bd04b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "demorgan1",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "apply distrib_spec with (lub x y).",
                        "VernacExtend",
                        "2364825939b3f4150d5edcc45b8f0368cb4e03a4"
                    ]
                },
                {
                    "command": [
                        "rewrite comp1.",
                        "VernacExtend",
                        "038c4a07dd8a463e3722946a32d6bd565239a68b"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib2.",
                        "VernacExtend",
                        "32b45b89e4b12cf930149f7e51442efa1995b8c0"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_assoc x y (comp y)).",
                        "VernacExtend",
                        "a8f6f8f390f176917b87181ff88488eed81872de"
                    ]
                },
                {
                    "command": [
                        "rewrite comp1.",
                        "VernacExtend",
                        "038c4a07dd8a463e3722946a32d6bd565239a68b"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_top.",
                        "VernacExtend",
                        "5b314f42e73eb3c0dee157a05af90351812d775f"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_top.",
                        "VernacExtend",
                        "eeb42f4a6bdfd228c4be9a2cc654359c7339a28b"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_commute x y).",
                        "VernacExtend",
                        "edb200fc1fea5fe27b18342cd8b740da55d7f9b2"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_assoc.",
                        "VernacExtend",
                        "6fb003596d9d872d195d383b3f23ac2a2a2f5f1a"
                    ]
                },
                {
                    "command": [
                        "rewrite comp1.",
                        "VernacExtend",
                        "038c4a07dd8a463e3722946a32d6bd565239a68b"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_top.",
                        "VernacExtend",
                        "5b314f42e73eb3c0dee157a05af90351812d775f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite comp2.",
                        "VernacExtend",
                        "741d8836b219ce289bee8338157ec007849bd04b"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib1.",
                        "VernacExtend",
                        "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
                    ]
                },
                {
                    "command": [
                        "rewrite (glb_commute (comp x) (comp y)).",
                        "VernacExtend",
                        "23a01a186e589faf5ec053195edb313a95eb3752"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_assoc.",
                        "VernacExtend",
                        "3fde6022003f4830c8b8e15e693e56f6695285d9"
                    ]
                },
                {
                    "command": [
                        "rewrite (glb_commute (comp x) x).",
                        "VernacExtend",
                        "47ac492846c3f11b22be41a3cc0cfd9835d82300"
                    ]
                },
                {
                    "command": [
                        "rewrite comp2.",
                        "VernacExtend",
                        "741d8836b219ce289bee8338157ec007849bd04b"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_bot.",
                        "VernacExtend",
                        "38cb8b135187eca898aaebf9f330369f95b96cf4"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute.",
                        "VernacExtend",
                        "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_bot.",
                        "VernacExtend",
                        "c8786c53dcf7aa6e5e4d5e6cc1c0f4b981f990f4"
                    ]
                },
                {
                    "command": [
                        "rewrite (glb_commute (comp y) (comp x)).",
                        "VernacExtend",
                        "25a2a438a8a002782ce14afc0b49f7878ef97bb4"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_assoc.",
                        "VernacExtend",
                        "3fde6022003f4830c8b8e15e693e56f6695285d9"
                    ]
                },
                {
                    "command": [
                        "rewrite (glb_commute (comp y) y).",
                        "VernacExtend",
                        "a6c7c8416fd378a60fc17ff56e955c3c7dd7c51d"
                    ]
                },
                {
                    "command": [
                        "rewrite comp2.",
                        "VernacExtend",
                        "741d8836b219ce289bee8338157ec007849bd04b"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_bot.",
                        "VernacExtend",
                        "38cb8b135187eca898aaebf9f330369f95b96cf4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "demorgan2",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "apply distrib_spec with (glb x y).",
                        "VernacExtend",
                        "cebeda6311777e0e8f191ce6c3125b50e2077165"
                    ]
                },
                {
                    "command": [
                        "rewrite comp1.",
                        "VernacExtend",
                        "038c4a07dd8a463e3722946a32d6bd565239a68b"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute.",
                        "VernacExtend",
                        "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib2.",
                        "VernacExtend",
                        "32b45b89e4b12cf930149f7e51442efa1995b8c0"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_commute (comp x) (comp y)).",
                        "VernacExtend",
                        "1a13074285f7d285f75f583ba9267f55f6116774"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_assoc.",
                        "VernacExtend",
                        "6fb003596d9d872d195d383b3f23ac2a2a2f5f1a"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_commute (comp x) x).",
                        "VernacExtend",
                        "3baf8591bd417fbd3246d3fadaeea9cbedc31a6c"
                    ]
                },
                {
                    "command": [
                        "rewrite comp1.",
                        "VernacExtend",
                        "038c4a07dd8a463e3722946a32d6bd565239a68b"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_top.",
                        "VernacExtend",
                        "5b314f42e73eb3c0dee157a05af90351812d775f"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_top.",
                        "VernacExtend",
                        "eeb42f4a6bdfd228c4be9a2cc654359c7339a28b"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_commute (comp y) (comp x)).",
                        "VernacExtend",
                        "6ba1a51bae0dabc10ca7cbab5931c0ff497dedbb"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_assoc.",
                        "VernacExtend",
                        "6fb003596d9d872d195d383b3f23ac2a2a2f5f1a"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_commute (comp y) y).",
                        "VernacExtend",
                        "3334bcf302cdd3f62160bfdfe1539dd68629f7b7"
                    ]
                },
                {
                    "command": [
                        "rewrite comp1.",
                        "VernacExtend",
                        "038c4a07dd8a463e3722946a32d6bd565239a68b"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_top.",
                        "VernacExtend",
                        "5b314f42e73eb3c0dee157a05af90351812d775f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite comp2.",
                        "VernacExtend",
                        "741d8836b219ce289bee8338157ec007849bd04b"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib1.",
                        "VernacExtend",
                        "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
                    ]
                },
                {
                    "command": [
                        "rewrite (glb_commute x y).",
                        "VernacExtend",
                        "3a7fd8a3624d4d723020184269264e16dc87b28b"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_assoc.",
                        "VernacExtend",
                        "3fde6022003f4830c8b8e15e693e56f6695285d9"
                    ]
                },
                {
                    "command": [
                        "rewrite comp2.",
                        "VernacExtend",
                        "741d8836b219ce289bee8338157ec007849bd04b"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_bot.",
                        "VernacExtend",
                        "38cb8b135187eca898aaebf9f330369f95b96cf4"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute.",
                        "VernacExtend",
                        "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_bot.",
                        "VernacExtend",
                        "c8786c53dcf7aa6e5e4d5e6cc1c0f4b981f990f4"
                    ]
                },
                {
                    "command": [
                        "rewrite (glb_commute y x).",
                        "VernacExtend",
                        "7557284fc0b32d03ff3ea5644abc1fdb4292ae84"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_assoc.",
                        "VernacExtend",
                        "3fde6022003f4830c8b8e15e693e56f6695285d9"
                    ]
                },
                {
                    "command": [
                        "rewrite comp2.",
                        "VernacExtend",
                        "741d8836b219ce289bee8338157ec007849bd04b"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_bot.",
                        "VernacExtend",
                        "38cb8b135187eca898aaebf9f330369f95b96cf4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pa",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "constructor; simpl; intros.",
                        "VernacExtend",
                        "dcd76c351204acf8d4b7d76eea612fabf67729fc"
                    ]
                },
                {
                    "command": [
                        "hnf in *.",
                        "VernacExtend",
                        "2b83f930e16edf1e74901190007d847b58b5d93a"
                    ]
                },
                {
                    "command": [
                        "destruct H; destruct H0; subst; auto.",
                        "VernacExtend",
                        "6434d22ff1aae79667e7a8ee2e95aed7ae1481cb"
                    ]
                },
                {
                    "command": [
                        "repeat intro; hnf in *; subst; auto.",
                        "VernacExtend",
                        "1f35055dc2539f5f5ebd7f6f30f4210a0ca5e7d2"
                    ]
                },
                {
                    "command": [
                        "hnf in *.",
                        "VernacExtend",
                        "2b83f930e16edf1e74901190007d847b58b5d93a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "exists (lub b c); intuition; hnf in *.",
                        "VernacExtend",
                        "848c1d709339ef3adc32ed60888ef6fe262bdfe8"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2 in H.",
                        "VernacExtend",
                        "24741113b5340eec261a213cd2301abccefba5c4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "apply ord_antisym.",
                        "VernacExtend",
                        "73580188c8bc86e36a3f0a42a2ae63f021ef4184"
                    ]
                },
                {
                    "command": [
                        "eauto with ba.",
                        "VernacExtend",
                        "fda606bb4441bd1c30b29f251fc99671330b667d"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto with ba.",
                        "VernacExtend",
                        "8c6c70a48d17516f63afcf233136788a9886213e"
                    ]
                },
                {
                    "command": [
                        "cut (glb a c = bot); intros.",
                        "VernacExtend",
                        "c8935594a91604ae3444210456973085840b66c2"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib1.",
                        "VernacExtend",
                        "7725acef05a9aeeb4ab7f3b008905f729a4a5660"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute; rewrite lub_bot; auto.",
                        "VernacExtend",
                        "28a33da559f042a24261726b3afee9f2027e4985"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply ord_antisym; rewrite lub_assoc; auto with ba.",
                        "VernacExtend",
                        "baf65e43aec56dad6224d40c9c5deb9b12208f00"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute in H |- *.",
                        "VernacExtend",
                        "d9b9d0d06965e06684f8d0a6130515ab7f444f24"
                    ]
                },
                {
                    "command": [
                        "rewrite distrib1 in H.",
                        "VernacExtend",
                        "398a5de29d934fec10ca9334f7d8545431156adc"
                    ]
                },
                {
                    "command": [
                        "generalize (lub_upper1 (glb c a) (glb c b)); intro.",
                        "VernacExtend",
                        "0fdd6d26f56eafd02883ec6aff7218377999246e"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "apply ord_antisym; auto.",
                        "VernacExtend",
                        "2966248006ac7c57a503ddef2a709d0f8dbdbd02"
                    ]
                },
                {
                    "command": [
                        "apply bot_correct.",
                        "VernacExtend",
                        "6ab8dbf4c3b7f22412d027cb468e577ad6d3e1eb"
                    ]
                },
                {
                    "command": [
                        "hnf in *.",
                        "VernacExtend",
                        "2b83f930e16edf1e74901190007d847b58b5d93a"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute.",
                        "VernacExtend",
                        "bb4c622c49b9220b28be788a8847088215d049dd"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute.",
                        "VernacExtend",
                        "0a05d65a403f58c7c4a10bc9f8a3fd339cc1cfbc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "hnf in *.",
                        "VernacExtend",
                        "2b83f930e16edf1e74901190007d847b58b5d93a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_commute b) in H2.",
                        "VernacExtend",
                        "7de3ad40c07988b080e604daf81686bb177bf8fa"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute in H2.",
                        "VernacExtend",
                        "a83fd4c32fc29503b0e1514e3e0cab22ccb21284"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lub_assoc in H2.",
                        "VernacExtend",
                        "8029de1366153cf9d48b0972c104c2bd378fa3bf"
                    ]
                },
                {
                    "command": [
                        "apply ord_spec2 in H2.",
                        "VernacExtend",
                        "95d67b5460c0763a45d139f372f75c1dbc99e7d2"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute; apply ord_spec2.",
                        "VernacExtend",
                        "c65b7fb04e8446d9acba0417e89e9172070b8cba"
                    ]
                },
                {
                    "command": [
                        "apply ord_trans with (lub a' b'); auto.",
                        "VernacExtend",
                        "cd91f8a27da9b960781719ed62984cd158cc9db2"
                    ]
                },
                {
                    "command": [
                        "apply ord_spec2.",
                        "VernacExtend",
                        "a13d30a82512443dc45f0695d83090b0cc654403"
                    ]
                },
                {
                    "command": [
                        "rewrite (lub_commute b').",
                        "VernacExtend",
                        "c19062d4aec398df658e7f1dbc09f18421def7c4"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_assoc.",
                        "VernacExtend",
                        "6fb003596d9d872d195d383b3f23ac2a2a2f5f1a"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_idem; auto.",
                        "VernacExtend",
                        "77e7adb4a8a7999d605456f26888ae8ea7286b2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sa",
            "line_nb": 453,
            "steps": [
                {
                    "command": [
                        "apply mkSep with (fun _ => bot).",
                        "VernacExtend",
                        "6397fbdda9ccc89e545bf78623c23b2504aefaac"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold unit_for.",
                        "VernacExtend",
                        "abcbb02c798d41dd3ff7cf08f71f6ce628757859"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute; apply glb_bot.",
                        "VernacExtend",
                        "b9e634f842d1a0dc9c17767c071641cd060738ad"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute; apply lub_bot.",
                        "VernacExtend",
                        "fa083001d15506628989f6cc82fbbf718de9f399"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "singa",
            "line_nb": 463,
            "steps": [
                {
                    "command": [
                        "apply (mkSing bot).",
                        "VernacExtend",
                        "f1a557dd56823945214433b8448b8131def85834"
                    ]
                },
                {
                    "command": [
                        "unfold core; intros; simpl.",
                        "VernacExtend",
                        "9bcd0c8c3618d230f75b9e1128b634dbaf0fc07d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "ca",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "repeat intro.",
                        "VernacExtend",
                        "b1b5d9b3004bf4634299c208df98406e88278608"
                    ]
                },
                {
                    "command": [
                        "hnf in *.",
                        "VernacExtend",
                        "2b83f930e16edf1e74901190007d847b58b5d93a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply distrib_spec with b.",
                        "VernacExtend",
                        "bee240dfa934d715072637ca55eb2e2fdaf6a1de"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute; rewrite H2.",
                        "VernacExtend",
                        "592e91b929abf99536e6a2a1584bde3c9201e6b2"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute; rewrite H3.",
                        "VernacExtend",
                        "e92608390b55eea138bc42cc3e3dc6e096887d54"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute; rewrite H1.",
                        "VernacExtend",
                        "0cb14f71a6c29ed013411476aac7dd6af4970301"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_commute; rewrite H.",
                        "VernacExtend",
                        "de1f73bb9f47c387fac2bc1288b9e2dc80f9349a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "da",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "repeat intro.",
                        "VernacExtend",
                        "b1b5d9b3004bf4634299c208df98406e88278608"
                    ]
                },
                {
                    "command": [
                        "destruct H, H0.",
                        "VernacExtend",
                        "8db9e1441c64ed20802e4526963172d1abdaee94"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_idem in H1; subst.",
                        "VernacExtend",
                        "4bd2e1174caac9e74b5a371b50f989a60081c40e"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_idem in H; subst.",
                        "VernacExtend",
                        "53dd538bb14187da0940394e940e75f48bbef962"
                    ]
                },
                {
                    "command": [
                        "rewrite lub_commute, lub_bot; auto.",
                        "VernacExtend",
                        "b74c85b35990c76c396f00e654210a081dd377be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}