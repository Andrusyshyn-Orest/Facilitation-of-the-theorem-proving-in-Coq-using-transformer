{
    "filename": "msl/knot_unique.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.base.",
            "VernacRequire",
            "072f05eeaee48c6fa1aa483ac927301379bb7e30"
        ],
        [
            "Require Import VST.msl.ageable.",
            "VernacRequire",
            "33d8c1c5989baea87e4dc899987238c793a0bf7c"
        ],
        [
            "Require Import VST.msl.knot.",
            "VernacRequire",
            "a0d53ff29d72692fab3a81f229292b7a2645e2fa"
        ],
        [
            "Require Import VST.msl.knot_lemmas.",
            "VernacRequire",
            "8105d1a5c20a47fa4ed810781c1721a2568e807e"
        ],
        [
            "Require Import VST.msl.functors.",
            "VernacRequire",
            "878243cd727adfaa48d431eb63e0b7f05e6f5f22"
        ],
        [
            "Import CovariantFunctor.",
            "VernacImport",
            "bd00f6ed17c26ae3c6ffdeeb701d469653ec1d7c"
        ],
        [
            "Import CovariantFunctorLemmas.",
            "VernacImport",
            "4361f0716312ba629a50ab44f671bb29a023296d"
        ],
        [
            "Import CovariantFunctorGenerator.",
            "VernacImport",
            "e1b42275e23b71a3095ba441290c357b7b6b4c1a"
        ],
        [
            "Local Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "7386604700c7eb05ef0ae2947828bc909568dab7"
        ],
        [
            "Definition map_pair {A B C D} (f:A -> B) (g:C -> D) (x:A * C) : B * D := (f (fst x), g (snd x)).",
            "VernacDefinition",
            "5773fa28eabb307f3808a7fd17d7dc9c175c6e46"
        ],
        [
            "Module Type ISOMORPHIC_KNOTS.",
            "VernacDeclareModuleType",
            "fa97ce65295a09efa7c1f1407e6e7b36c85f52e9"
        ],
        [
            "Declare Module TF : TY_FUNCTOR.",
            "VernacDeclareModule",
            "544a0aeaac6066fc8898f7dd7e0656a04ebc7772"
        ],
        [
            "Declare Module K1 : KNOT with Module TF := TF.",
            "VernacDeclareModule",
            "2b48adea67f63fbb0d2eb81130716cc44407bcc1"
        ],
        [
            "Declare Module K2 : KNOT with Module TF := TF.",
            "VernacDeclareModule",
            "2465482281de75c60cb33d86875721a23048c4a5"
        ],
        [
            "Import TF.",
            "VernacImport",
            "4311acf968566c8ed9fb306dc51845334fdd95c1"
        ],
        [
            "Parameter f : K1.knot -> K2.knot.",
            "VernacAssumption",
            "ce894112c3719a0dea3e0d37a7f046427468843b"
        ],
        [
            "Parameter g : K2.knot -> K1.knot.",
            "VernacAssumption",
            "25c3191aa19df266eb56deed77b9560db22172c1"
        ],
        [
            "Definition fF : F K1.predicate -> F K2.predicate := fmap F (fun p : K1.knot * other -> K1.TF.T => p oo map_pair g (@id other)).",
            "VernacDefinition",
            "0f105d6a7ca12fad84cdf88c15edab4e96ed9bb1"
        ],
        [
            "Definition gF : F K2.predicate -> F K1.predicate := fmap F (fun p : K2.knot * other -> K2.TF.T => p oo map_pair f (@id other)).",
            "VernacDefinition",
            "78c8a4ed26841364f513e4cb7b63d67be535f819"
        ],
        [
            "Axiom iso1 : f oo g = id K2.knot.",
            "VernacAssumption",
            "1659b96889a073f61ab6f020def2a831637f465b"
        ],
        [
            "Axiom iso2 : g oo f = id K1.knot.",
            "VernacAssumption",
            "5974eb15b2da64141e56e837f81805f8fa357ee4"
        ],
        [
            "Axiom f_squash : forall n F1, f (K1.squash (n, F1)) = K2.squash (n, fF F1).",
            "VernacAssumption",
            "56699d558757eb06cd927143b90468b6fca644ed"
        ],
        [
            "Axiom g_squash : forall n F2, g (K2.squash (n, F2)) = K1.squash (n, gF F2).",
            "VernacAssumption",
            "ef75f694990939e2c774a5bee51ab653baca304c"
        ],
        [
            "Axiom f_unsquash : forall k1 U1, U1 = K1.unsquash k1 -> K2.unsquash (f k1) = (fst U1, fF (snd U1)).",
            "VernacAssumption",
            "83cbb0d99e7ff64d003e04328b78c77c1aa7f97d"
        ],
        [
            "Axiom g_unsquash : forall k2 U2, U2 = K2.unsquash k2 -> K1.unsquash (g k2) = (fst U2, gF (snd U2)).",
            "VernacAssumption",
            "1e1054ecb42ce2cdab9af0e3d130d823de2682e7"
        ],
        [
            "End ISOMORPHIC_KNOTS.",
            "VernacEndSegment",
            "b14bc5e355e63b05a4f0e561cb22f15837609bcc"
        ],
        [
            "Module Unique_Knot (TF' : TY_FUNCTOR) (K1' : KNOT with Module TF := TF') (K2' : KNOT with Module TF := TF') : ISOMORPHIC_KNOTS with Module TF := TF' with Module K1 := K1' with Module K2 := K2'.",
            "VernacDefineModule",
            "32902bcba14e4e4ad8c76b55d96ea611db5b2f24"
        ],
        [
            "Module TF := TF'.",
            "VernacDefineModule",
            "00142627d3c405914ccb5b7992c5afe6ccabce48"
        ],
        [
            "Import TF.",
            "VernacImport",
            "4311acf968566c8ed9fb306dc51845334fdd95c1"
        ],
        [
            "Module K1 := K1'.",
            "VernacDefineModule",
            "50a6b4fc12e6bb6af89c8bd9e4fad5c0f9046663"
        ],
        [
            "Module K2 := K2'.",
            "VernacDefineModule",
            "747ee6761b8b5b4e7b19e48fda18a30fe5b578e7"
        ],
        [
            "Module K1L := Knot_Lemmas K1.",
            "VernacDefineModule",
            "5a627cc2f9b6f3d7780d81d7746938fdcc402f28"
        ],
        [
            "Module K2L := Knot_Lemmas K2.",
            "VernacDefineModule",
            "e4410a425068764f84ba95cf3cee3a6c26cef678"
        ],
        [
            "Section Common.",
            "VernacBeginSection",
            "ef3ccd3af2390c3973f4ff8327498952f6ee986f"
        ],
        [
            "Variable f : K1.knot -> K2.knot.",
            "VernacAssumption",
            "7e9f82fdf893c79fcfa0ea3a002272cd3ecc6161"
        ],
        [
            "Variable g : K2.knot -> K1.knot.",
            "VernacAssumption",
            "4341c38f698c92c45e96d8c1bdf4e2295c29e8b3"
        ],
        [
            "Definition f_pred' (p1 : K1.predicate) : K2.predicate := p1 oo map_pair g (@id other).",
            "VernacDefinition",
            "94003cf53d7bb193ce220d8231b2a0f1d3fc5b16"
        ],
        [
            "Definition g_pred' (p2 : K2.predicate) : K1.predicate := p2 oo map_pair f (@id other).",
            "VernacDefinition",
            "bbec387853dfcc3dfefa5cd2ffe2ffa65444e682"
        ],
        [
            "Variable f_level : forall k, level k = level (f k).",
            "VernacAssumption",
            "96f1f15a062dd26a86d3e42b83d267d8b3a954f4"
        ],
        [
            "Variable g_level : forall k, level k = level (g k).",
            "VernacAssumption",
            "8720a8ab6e9bb9d0ef10029b26314458cbd432b6"
        ],
        [
            "Lemma f_pred'_approx: forall n, f_pred' oo K1.approx n = K2.approx n oo f_pred'.",
            "VernacStartTheoremProof",
            "a35685f679aac3cc28c092adb4fcb3644aece534"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality P1 k2.",
            "VernacExtend",
            "31e05d06371fe8abb88eb73d578572cb4ad2cf47"
        ],
        [
            "destruct k2; unfold f_pred', compose; simpl.",
            "VernacExtend",
            "7374ab13a19cc654e6455b80d2d5ef3b48285647"
        ],
        [
            "unfold K1'.approx, K2'.approx; simpl.",
            "VernacExtend",
            "4f2b82deefdb0e3c2d18441b2ab40352f389935a"
        ],
        [
            "rewrite g_level; simpl; auto.",
            "VernacExtend",
            "6347503ec75a3c274fe58eaf0ce11ce68090c465"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma g_pred'_approx : forall n, g_pred' oo K2.approx n = K1.approx n oo g_pred'.",
            "VernacStartTheoremProof",
            "4da7562ac0835bf327c514b8b0fafae1f27b7b89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality P k1.",
            "VernacExtend",
            "0387d54a103eabda0e24b0bb55b5a849bf525535"
        ],
        [
            "destruct k1; unfold g_pred', compose; simpl.",
            "VernacExtend",
            "d7cba7257abed6f8a4a3de479125ddb053f9c737"
        ],
        [
            "unfold K1'.approx, K2'.approx; simpl.",
            "VernacExtend",
            "4f2b82deefdb0e3c2d18441b2ab40352f389935a"
        ],
        [
            "rewrite f_level; simpl; auto.",
            "VernacExtend",
            "2547726578f4c507dcad9fc6099c319cce25d982"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition f_F' : TF.F K1.predicate -> TF.F K2.predicate := fmap F f_pred'.",
            "VernacDefinition",
            "a8e1f14f43fd6b02051d62f752802e47aaab99c7"
        ],
        [
            "Definition g_F' : TF.F K2.predicate -> TF.F K1.predicate := fmap F g_pred'.",
            "VernacDefinition",
            "c68381de99ca6da54313efa3c0a9d06499621e5b"
        ],
        [
            "End Common.",
            "VernacEndSegment",
            "aee08bd639cbf0373b21d6f7c96b12f9ec0fe056"
        ],
        [
            "Section Z.",
            "VernacBeginSection",
            "21cbf279372dddc1e90a2bca44676e4ea0685d50"
        ],
        [
            "Definition fZ_pred (p2 : K2.predicate) : K1.predicate := fun k1 => T_bot.",
            "VernacDefinition",
            "e63e293b7e5d3f5cf366689c9c2dd273b1f828f1"
        ],
        [
            "Definition gZ_pred (p1 : K1.predicate) : K2.predicate := fun k2 => T_bot.",
            "VernacDefinition",
            "5b8bb826b3dbe05130f393e23c509ceb3377eff2"
        ],
        [
            "Definition fF_Z : TF.F K1.predicate -> TF.F K2.predicate := fmap F gZ_pred.",
            "VernacDefinition",
            "491404652265f87b880aabc0c3c7c6f8f623e723"
        ],
        [
            "Definition gF_Z : TF.F K2.predicate -> TF.F K1.predicate := fmap F fZ_pred.",
            "VernacDefinition",
            "f813554cfc251a5f8ac19859a4202dc56ad5a944"
        ],
        [
            "Definition f_Z (k1 : K1.knot) : K2.knot := match K1.unsquash k1 with (n, F_p1) => K2.squash (n, fF_Z F_p1) end.",
            "VernacDefinition",
            "ab3a04fabf132ec6998dfe4935dd560d7856af73"
        ],
        [
            "Definition g_Z (k2 : K2.knot) : K1.knot := match K2.unsquash k2 with (n, F_p2) => K1.squash (n, gF_Z F_p2) end.",
            "VernacDefinition",
            "a490b76b909f38dc15dab47eb0b8861f79345568"
        ],
        [
            "Lemma predZ_iso1: fZ_pred oo K2.approx 0 oo gZ_pred = K1.approx 0.",
            "VernacStartTheoremProof",
            "36a5e986b8cddd00bcd2e08b864aae3c3e821a4e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality p k.",
            "VernacExtend",
            "c279e4dd070e1f398d1330776c39345ee755dbb7"
        ],
        [
            "unfold compose, gZ_pred, fZ_pred, K1'.approx in *.",
            "VernacExtend",
            "18cece123ee0939913b02ef243e9504d609841d4"
        ],
        [
            "destruct k; simpl; auto.",
            "VernacExtend",
            "22221ec2842f7bf8384caac4e4ac38fb4bc62b89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma predZ_iso2: gZ_pred oo K1.approx 0 oo fZ_pred = K2.approx 0.",
            "VernacStartTheoremProof",
            "d6779a499492a1b28f981d9ddb5aa8e564fcbb78"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality p k.",
            "VernacExtend",
            "c279e4dd070e1f398d1330776c39345ee755dbb7"
        ],
        [
            "unfold compose, gZ_pred, fZ_pred, K2'.approx in *.",
            "VernacExtend",
            "df33fb94cad62837540d562de308c9a756609d4e"
        ],
        [
            "destruct k; simpl; auto.",
            "VernacExtend",
            "22221ec2842f7bf8384caac4e4ac38fb4bc62b89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iso1_Z : forall k, level k <= 0 -> (g_Z oo f_Z) k = k.",
            "VernacStartTheoremProof",
            "7d7e1697f38578fa2425fa114c594debaa705017"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold compose, g_Z, f_Z.",
            "VernacExtend",
            "4e275e345659ad487dd9ade94f9969dc8f3390e4"
        ],
        [
            "remember (K1.unsquash k) as unsq_k.",
            "VernacExtend",
            "5908a95b60afa4649e4668be304acaf1aa96ea90"
        ],
        [
            "destruct unsq_k as [n0 Fp].",
            "VernacExtend",
            "cfa97abc0382c415c271e724436f396901f99738"
        ],
        [
            "rewrite K2.unsquash_squash.",
            "VernacExtend",
            "36e60afc4fb808568297cd0cbb2c6ea589df002c"
        ],
        [
            "rewrite K1.knot_level in H.",
            "VernacExtend",
            "d49070f7430019125ae5e6191fcfa90092cc1012"
        ],
        [
            "rewrite <- Hequnsq_k in H.",
            "VernacExtend",
            "22f40105559db5d89fae9031c22550eb6f312cf8"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "replace (fmap F (K2.approx n0) (fF_Z Fp)) with ((fmap F (K2.approx n0) oo (fmap F gZ_pred)) Fp) by trivial.",
            "VernacExtend",
            "335b768e1ccbff8265c537bf6ac5b78cc10ca277"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "replace (gF_Z (fmap F (K2.approx n0 oo gZ_pred) Fp)) with ((fmap F fZ_pred oo fmap F (K2.approx n0 oo gZ_pred)) Fp) by trivial.",
            "VernacExtend",
            "256e2a4178f3cc5ae41565420b26ed089802b290"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "assert (n0 = 0) by omega.",
            "VernacExtend",
            "0c2a75346f03a783b6db6107ff10a828b099756e"
        ],
        [
            "clear H; subst n0.",
            "VernacExtend",
            "2943d817943340a67059d52425087851089b5793"
        ],
        [
            "symmetry in Hequnsq_k.",
            "VernacExtend",
            "b77e1cc8ddb7cc8a0dd92d6fc07c02769546690d"
        ],
        [
            "rewrite predZ_iso1; trivial.",
            "VernacExtend",
            "e03165a002ea6e56caf329fa15a5262222dfa4f0"
        ],
        [
            "rewrite <- (K1L.unsquash_approx Hequnsq_k).",
            "VernacExtend",
            "d9491727807c33c0248fb22d41f2b4567661a110"
        ],
        [
            "rewrite <- Hequnsq_k.",
            "VernacExtend",
            "b3681207670a461bf7ec85b40f7ff3cad200aa0e"
        ],
        [
            "rewrite K1.squash_unsquash.",
            "VernacExtend",
            "9210dfc16ee30510a6ca96a57f054d3f32119c24"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iso2_Z : forall k, level k <= 0 -> (f_Z oo g_Z) k = k.",
            "VernacStartTheoremProof",
            "53192249e8bfcd2e0aa3da63ace02f1d71cda490"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold compose, g_Z, f_Z.",
            "VernacExtend",
            "4e275e345659ad487dd9ade94f9969dc8f3390e4"
        ],
        [
            "remember (K2.unsquash k) as unsq_k.",
            "VernacExtend",
            "3dad248db5c147a30b7bb57f3eb0a53b2933457a"
        ],
        [
            "destruct unsq_k as [n0 Fp].",
            "VernacExtend",
            "cfa97abc0382c415c271e724436f396901f99738"
        ],
        [
            "rewrite K1.unsquash_squash.",
            "VernacExtend",
            "b9620529abdfd8c405ce9376ae8a687b65db26c7"
        ],
        [
            "rewrite K2.knot_level in H.",
            "VernacExtend",
            "de5a06d47443f7f815247b5d12bb16297d9d743f"
        ],
        [
            "replace (fmap F (K1.approx n0) (gF_Z Fp)) with ((fmap F (K1.approx n0) oo (fmap F fZ_pred)) Fp) by trivial.",
            "VernacExtend",
            "848ca9ea39d06eb7606a1b6c16687410f08b8dd2"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "replace (fF_Z (fmap F (K1.approx n0 oo fZ_pred) Fp)) with ((fmap F gZ_pred oo fmap F (K1.approx n0 oo fZ_pred)) Fp) by trivial.",
            "VernacExtend",
            "a3101036be0b3de7bb3c62ccbe1f411adaa8edd2"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "symmetry in Hequnsq_k.",
            "VernacExtend",
            "b77e1cc8ddb7cc8a0dd92d6fc07c02769546690d"
        ],
        [
            "assert (n0 = 0).",
            "VernacExtend",
            "5b8f7d902a86049084c558160891e036d58572bc"
        ],
        [
            "destruct (K2'.unsquash k); inv Hequnsq_k.",
            "VernacExtend",
            "7238f250f0aac645f54af4765d998c5ffd23a1d8"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "subst n0.",
            "VernacExtend",
            "a616ceb75d5b854d48413c6079f1eb2971805dce"
        ],
        [
            "rewrite predZ_iso2; trivial.",
            "VernacExtend",
            "f1331a6c7fdfaeb16e2c0aab9e5ad60ef5cd6f0d"
        ],
        [
            "rewrite <- (K2L.unsquash_approx Hequnsq_k).",
            "VernacExtend",
            "ccede1605a4664202284cefbcd63f727b189304d"
        ],
        [
            "rewrite <- Hequnsq_k.",
            "VernacExtend",
            "b3681207670a461bf7ec85b40f7ff3cad200aa0e"
        ],
        [
            "rewrite K2.squash_unsquash.",
            "VernacExtend",
            "fd7af8c129c505c2d54802eb2c46567c5cefcfc9"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma f_level_Z: forall k, level k = level (f_Z k).",
            "VernacStartTheoremProof",
            "1085d9f9ab3c239f2207f4cc46c1495b3fc63f04"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold f_Z.",
            "VernacExtend",
            "99f6ccbd653bbacdddd1246313d82e65b9945a08"
        ],
        [
            "rewrite K1.knot_level, K2.knot_level.",
            "VernacExtend",
            "810aa90e6fbfe412509c05f448e16342a54e6747"
        ],
        [
            "remember (K1.unsquash k) as uk.",
            "VernacExtend",
            "1cf4bac615ec41183b15faa7dfa5ee35eb8d75f0"
        ],
        [
            "destruct uk.",
            "VernacExtend",
            "f7123b9ea093cc2be5f0bd399d751fbc9e0cb2eb"
        ],
        [
            "rewrite K2.unsquash_squash.",
            "VernacExtend",
            "36e60afc4fb808568297cd0cbb2c6ea589df002c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma g_level_Z: forall k, level k = level (g_Z k).",
            "VernacStartTheoremProof",
            "6d4c2d692ac9a1535b8f435016d01cc440917f2e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold g_Z.",
            "VernacExtend",
            "b3d436ac5be4b779d475c0643f364a654471d837"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite K1.knot_level, K2.knot_level.",
            "VernacExtend",
            "810aa90e6fbfe412509c05f448e16342a54e6747"
        ],
        [
            "remember (K2.unsquash k) as uk.",
            "VernacExtend",
            "fa675c362f1646cbfa8d25aff49d8718e882748b"
        ],
        [
            "destruct uk.",
            "VernacExtend",
            "f7123b9ea093cc2be5f0bd399d751fbc9e0cb2eb"
        ],
        [
            "rewrite K1.unsquash_squash.",
            "VernacExtend",
            "b9620529abdfd8c405ce9376ae8a687b65db26c7"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fZ_unsquash : forall k1, level k1 <= 0 -> forall U1, U1 = K1.unsquash k1 -> K2.unsquash (f_Z k1) = (fst U1, fF_Z (snd U1)).",
            "VernacStartTheoremProof",
            "0a0d81c281a937777de860854d18d45134db4a55"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fF_Z, f_Z.",
            "VernacExtend",
            "59c43b427d430b5f37ac454f0a22987a1b173f9c"
        ],
        [
            "destruct U1 as [n F1].",
            "VernacExtend",
            "32e6ff5c29943122f7c01b087456e8ac7695fe19"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite K2.unsquash_squash.",
            "VernacExtend",
            "36e60afc4fb808568297cd0cbb2c6ea589df002c"
        ],
        [
            "replace (fmap F (K2.approx n) (fF_Z F1)) with ((fmap F (K2.approx n) oo fmap F gZ_pred) F1) by trivial.",
            "VernacExtend",
            "48864be356714ffac3dac1862f5b8e3221374d29"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "assert (K2'.approx n oo gZ_pred = gZ_pred).",
            "VernacExtend",
            "f3508a744c0bb5d980c0967f8e742361da240f19"
        ],
        [
            "extensionality P1 k2.",
            "VernacExtend",
            "31e05d06371fe8abb88eb73d578572cb4ad2cf47"
        ],
        [
            "destruct k2.",
            "VernacExtend",
            "f082fc8f5b8f35f8eb355ee65076a465da986fd2"
        ],
        [
            "unfold gZ_pred, compose, K2'.approx; simpl.",
            "VernacExtend",
            "ac2b3f41bedcf40e4b29ad8221be85b948156cda"
        ],
        [
            "destruct (le_gt_dec n (level k)); auto.",
            "VernacExtend",
            "403253d7b15520b870d3c59ce334296005ca41b5"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Z.",
            "VernacEndSegment",
            "17823143a690d1674801e6893efb2936cec5d32d"
        ],
        [
            "Section Sn.",
            "VernacBeginSection",
            "3433c6bfaccd9eb41a753ec5b08f5fc5b2e71bf2"
        ],
        [
            "Variable f : K1.knot -> K2.knot.",
            "VernacAssumption",
            "7e9f82fdf893c79fcfa0ea3a002272cd3ecc6161"
        ],
        [
            "Variable g : K2.knot -> K1.knot.",
            "VernacAssumption",
            "4341c38f698c92c45e96d8c1bdf4e2295c29e8b3"
        ],
        [
            "Definition f_Sn (k1 : K1.knot) : K2.knot := match K1.unsquash k1 with (n, F_p1) => K2.squash (n, f_F' g F_p1) end.",
            "VernacDefinition",
            "c8e8186bee2f4c15cbe98955e315353849bba3f1"
        ],
        [
            "Definition g_Sn (k2 : K2.knot) : K1.knot := match K2.unsquash k2 with (n, F_p2) => K1.squash (n, g_F' f F_p2) end.",
            "VernacDefinition",
            "b7bd075b0d5fe6bc4b1992524a5812fd9c27ce1f"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Variable iso1 : forall k, level k <= n -> (g oo f) k = k.",
            "VernacAssumption",
            "22b616737fb7187493176ed8d20ddb80d2a1b9c3"
        ],
        [
            "Variable iso2 : forall k, level k <= n -> (f oo g) k = k.",
            "VernacAssumption",
            "402fe5169c371600a47d35c990374736281b72f3"
        ],
        [
            "Lemma f_inj : forall ka kb, level ka <= n -> level kb <= n -> f ka = f kb -> ka = kb.",
            "VernacStartTheoremProof",
            "46195230908ac6240a049206298e464e3bfc7fd2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((g oo f) ka = (g oo f) kb) by (unfold compose; rewrite H1; trivial).",
            "VernacExtend",
            "77db37dc99362c1e8b335d6c87242d87f56f13eb"
        ],
        [
            "do 2 rewrite iso1 in H2; trivial.",
            "VernacExtend",
            "0bd7938ee13742bec10e3e80c486460dddd578e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma g_inj : forall ka kb, level ka <= n -> level kb <= n -> g ka = g kb -> ka = kb.",
            "VernacStartTheoremProof",
            "66dccb4a025164d183f71600bfa04e9b681e85f3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((f oo g) ka = (f oo g) kb) by (unfold compose; rewrite H1; trivial).",
            "VernacExtend",
            "2413e838ae452a7d73b848361d05e218386f8922"
        ],
        [
            "do 2 rewrite iso2 in H2; trivial.",
            "VernacExtend",
            "30862e3b15860a17428e6f868282754674e99936"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma f_surj : forall k2, level k2 <= n -> exists k1, f k1 = k2.",
            "VernacStartTheoremProof",
            "631e5486c306d3b49d9f8c866aa37de1d6d23063"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (g k2).",
            "VernacExtend",
            "87bc98eb61d75367c272fed9ed885ae8bb61ddee"
        ],
        [
            "rewrite <- iso2; trivial.",
            "VernacExtend",
            "ca02cc3f340d551efaf6daa20e4aecfb6d99408c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma g_surj : forall k1, level k1 <= n -> exists k2, g k2 = k1.",
            "VernacStartTheoremProof",
            "6eff35af507a701b9f3bb6be8e9f31e59bbd657a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (f k1).",
            "VernacExtend",
            "29ce24aeb7a164739e8cc75fb35ec623c05a9d6a"
        ],
        [
            "rewrite <- iso1; trivial.",
            "VernacExtend",
            "5e873e91f3346bf90e59e13ab09254e9170becfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable f_level: forall k, level k = level (f k).",
            "VernacAssumption",
            "96f1f15a062dd26a86d3e42b83d267d8b3a954f4"
        ],
        [
            "Variable g_level: forall k, level k = level (g k).",
            "VernacAssumption",
            "8720a8ab6e9bb9d0ef10029b26314458cbd432b6"
        ],
        [
            "Lemma predn_iso1: forall m, m <= (n+1) -> g_pred' f oo K2.approx m oo f_pred' g = K1.approx m.",
            "VernacStartTheoremProof",
            "d4d387209c8e137c6849e2eacf967985dc9808bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality p k.",
            "VernacExtend",
            "c279e4dd070e1f398d1330776c39345ee755dbb7"
        ],
        [
            "unfold g_pred', f_pred', compose in *.",
            "VernacExtend",
            "265abf71a48b8c8d7431530cc6a2631b4e8e5d5f"
        ],
        [
            "destruct k.",
            "VernacExtend",
            "276a2174e55489a07c8e0fd8db1630e98ae9c376"
        ],
        [
            "unfold K2'.approx, map_pair, id; simpl.",
            "VernacExtend",
            "d2cb034e9901fe65d8ad6fea1d0885cd48e193ae"
        ],
        [
            "unfold K1'.approx; simpl.",
            "VernacExtend",
            "3a9fbcd0652e01b6797f7a6f7bbc1984d672950b"
        ],
        [
            "rewrite <- f_level.",
            "VernacExtend",
            "5a404df08f5a39663b444ac414ac8ad53c194c3a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (le_gt_dec m (level k)); auto.",
            "VernacExtend",
            "3be4346e48067bb0e097e8488423f9e7ac7f642d"
        ],
        [
            "rewrite iso1; auto.",
            "VernacExtend",
            "487a6c19832688925d2a9522b253edd47f6451a0"
        ],
        [
            "simpl; omega.",
            "VernacExtend",
            "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma predn_iso2: forall m, m <= (n+1) -> f_pred' g oo K1.approx m oo g_pred' f = K2.approx m.",
            "VernacStartTheoremProof",
            "85d096daae3928a4e99fe1f7ba267b3478d97db0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality p k.",
            "VernacExtend",
            "c279e4dd070e1f398d1330776c39345ee755dbb7"
        ],
        [
            "unfold g_pred', f_pred', compose in *.",
            "VernacExtend",
            "265abf71a48b8c8d7431530cc6a2631b4e8e5d5f"
        ],
        [
            "destruct k.",
            "VernacExtend",
            "276a2174e55489a07c8e0fd8db1630e98ae9c376"
        ],
        [
            "unfold K1'.approx, map_pair, id; simpl.",
            "VernacExtend",
            "46bed6ed7e4927b6c7a42cc1a6118073d2cd67b5"
        ],
        [
            "unfold K2'.approx; simpl.",
            "VernacExtend",
            "dafba348352aa86f886a5ef1c35b98f6d825c2ca"
        ],
        [
            "rewrite <- g_level.",
            "VernacExtend",
            "675560ef9a237b89198d32a0f1a637adc8596149"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (le_gt_dec m (level k)); auto.",
            "VernacExtend",
            "3be4346e48067bb0e097e8488423f9e7ac7f642d"
        ],
        [
            "rewrite iso2; auto.",
            "VernacExtend",
            "6b2b15dfdd28b6a77e43fca081284e7dc284a054"
        ],
        [
            "simpl; omega.",
            "VernacExtend",
            "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iso1_Sn : forall k, level k <= n + 1 -> (g_Sn oo f_Sn) k = k.",
            "VernacStartTheoremProof",
            "bf2a023ecd8d8da3c355a1690ac4a0f3c718c5b0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold compose, g_Sn, f_Sn.",
            "VernacExtend",
            "b083ef36b3b4747484aced0432f1b5dd4a2019ff"
        ],
        [
            "remember (K1.unsquash k) as unsq_k.",
            "VernacExtend",
            "5908a95b60afa4649e4668be304acaf1aa96ea90"
        ],
        [
            "destruct unsq_k as [n0 Fp].",
            "VernacExtend",
            "cfa97abc0382c415c271e724436f396901f99738"
        ],
        [
            "rewrite K2.unsquash_squash.",
            "VernacExtend",
            "36e60afc4fb808568297cd0cbb2c6ea589df002c"
        ],
        [
            "rewrite K1.knot_level in H.",
            "VernacExtend",
            "d49070f7430019125ae5e6191fcfa90092cc1012"
        ],
        [
            "rewrite <- Hequnsq_k in H.",
            "VernacExtend",
            "22f40105559db5d89fae9031c22550eb6f312cf8"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "replace (fmap F (K2.approx n0) (f_F' g Fp)) with ((fmap F (K2.approx n0) oo (fmap F (f_pred' g))) Fp) by trivial.",
            "VernacExtend",
            "20e56c163e8cc99cffa3babe9a34c1350c6a4391"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "replace (g_F' f (fmap F (K2.approx n0 oo f_pred' g) Fp)) with ((fmap F (g_pred' f) oo fmap F (K2.approx n0 oo f_pred' g)) Fp) by trivial.",
            "VernacExtend",
            "0594cd5fe03d6b472491604253f89571bd6654db"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "symmetry in Hequnsq_k.",
            "VernacExtend",
            "b77e1cc8ddb7cc8a0dd92d6fc07c02769546690d"
        ],
        [
            "rewrite predn_iso1; trivial.",
            "VernacExtend",
            "81ab397e2695419e2f797522229d61caf65854f4"
        ],
        [
            "rewrite <- (K1L.unsquash_approx Hequnsq_k).",
            "VernacExtend",
            "d9491727807c33c0248fb22d41f2b4567661a110"
        ],
        [
            "rewrite <- Hequnsq_k.",
            "VernacExtend",
            "b3681207670a461bf7ec85b40f7ff3cad200aa0e"
        ],
        [
            "rewrite K1.squash_unsquash.",
            "VernacExtend",
            "9210dfc16ee30510a6ca96a57f054d3f32119c24"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iso2_Sn : forall k, level k <= n + 1 -> (f_Sn oo g_Sn) k = k.",
            "VernacStartTheoremProof",
            "e5406cb25d4b5d428358aef45f5ee19cf64b372c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold compose, g_Sn, f_Sn.",
            "VernacExtend",
            "b083ef36b3b4747484aced0432f1b5dd4a2019ff"
        ],
        [
            "remember (K2.unsquash k) as unsq_k.",
            "VernacExtend",
            "3dad248db5c147a30b7bb57f3eb0a53b2933457a"
        ],
        [
            "destruct unsq_k as [n0 Fp].",
            "VernacExtend",
            "cfa97abc0382c415c271e724436f396901f99738"
        ],
        [
            "rewrite K1.unsquash_squash.",
            "VernacExtend",
            "b9620529abdfd8c405ce9376ae8a687b65db26c7"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite K2.knot_level in H.",
            "VernacExtend",
            "de5a06d47443f7f815247b5d12bb16297d9d743f"
        ],
        [
            "rewrite <- Hequnsq_k in H.",
            "VernacExtend",
            "22f40105559db5d89fae9031c22550eb6f312cf8"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "replace (fmap F (K1.approx n0) (g_F' f Fp)) with ((fmap F (K1.approx n0) oo (fmap F (g_pred' f))) Fp) by trivial.",
            "VernacExtend",
            "a266438d0635631e8fdc73de1730c54a2f947c5e"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "replace (f_F' g (fmap F (K1.approx n0 oo g_pred' f) Fp)) with ((fmap F (f_pred' g) oo fmap F (K1.approx n0 oo g_pred' f)) Fp) by trivial.",
            "VernacExtend",
            "caa47edef37c8ca8f92940be720e4348e8681609"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "symmetry in Hequnsq_k.",
            "VernacExtend",
            "b77e1cc8ddb7cc8a0dd92d6fc07c02769546690d"
        ],
        [
            "rewrite predn_iso2; trivial.",
            "VernacExtend",
            "58b13f8158798f7c8eea60adb3adc9dbdd27728c"
        ],
        [
            "rewrite <- (K2L.unsquash_approx Hequnsq_k).",
            "VernacExtend",
            "ccede1605a4664202284cefbcd63f727b189304d"
        ],
        [
            "rewrite <- Hequnsq_k.",
            "VernacExtend",
            "b3681207670a461bf7ec85b40f7ff3cad200aa0e"
        ],
        [
            "rewrite K2.squash_unsquash.",
            "VernacExtend",
            "fd7af8c129c505c2d54802eb2c46567c5cefcfc9"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma f_level_Sn: forall k, level k = level (f_Sn k).",
            "VernacStartTheoremProof",
            "dfed48985a3a1d8838cf71831b9aae499803124c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold f_Sn.",
            "VernacExtend",
            "11635717e26bcfb81d01d7a74ec1beba3317987b"
        ],
        [
            "rewrite K1.knot_level, K2.knot_level.",
            "VernacExtend",
            "810aa90e6fbfe412509c05f448e16342a54e6747"
        ],
        [
            "remember (K1.unsquash k) as uk.",
            "VernacExtend",
            "1cf4bac615ec41183b15faa7dfa5ee35eb8d75f0"
        ],
        [
            "destruct uk.",
            "VernacExtend",
            "f7123b9ea093cc2be5f0bd399d751fbc9e0cb2eb"
        ],
        [
            "rewrite K2.unsquash_squash.",
            "VernacExtend",
            "36e60afc4fb808568297cd0cbb2c6ea589df002c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma g_level_Sn: forall k, level k = level (g_Sn k).",
            "VernacStartTheoremProof",
            "a37547132809a22f27532f66f1c30ecd85a570b6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold g_Sn.",
            "VernacExtend",
            "14d6f4306cb12c8b78843ab9948176acb1d368e5"
        ],
        [
            "rewrite K1.knot_level, K2.knot_level.",
            "VernacExtend",
            "810aa90e6fbfe412509c05f448e16342a54e6747"
        ],
        [
            "remember (K2.unsquash k) as uk.",
            "VernacExtend",
            "fa675c362f1646cbfa8d25aff49d8718e882748b"
        ],
        [
            "destruct uk.",
            "VernacExtend",
            "f7123b9ea093cc2be5f0bd399d751fbc9e0cb2eb"
        ],
        [
            "rewrite K1.unsquash_squash.",
            "VernacExtend",
            "b9620529abdfd8c405ce9376ae8a687b65db26c7"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable fn_unsquash : forall k1, level k1 <= n -> forall U1, U1 = K1.unsquash k1 -> K2.unsquash (f k1) = (fst U1, f_F' g (snd U1)).",
            "VernacAssumption",
            "42c6edf930957ea51ab4c977b39a07336ad706e7"
        ],
        [
            "Lemma Fn_iso2 : forall m, m <= n + 1 -> g_F' f oo f_F' g oo fmap F (K1.approx m) = fmap F (K1.approx m).",
            "VernacStartTheoremProof",
            "dca0ce218612831054e64965bd2f41294c19ca8c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold g_F', f_F'.",
            "VernacExtend",
            "30c4294d4de74ed9ddf2febc43819cda36e78029"
        ],
        [
            "do 2 rewrite fmap_comp.",
            "VernacExtend",
            "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
        ],
        [
            "replace (g_pred' f oo f_pred' g oo K1.approx m) with (K1.approx m); trivial.",
            "VernacExtend",
            "c1327165ebf5fd92f46ac476e6b1cdc716deff61"
        ],
        [
            "rewrite f_pred'_approx; trivial.",
            "VernacExtend",
            "8a690f8e0d4e0b292d964c4cfffa2db3eee3f880"
        ],
        [
            "rewrite predn_iso1; trivial.",
            "VernacExtend",
            "81ab397e2695419e2f797522229d61caf65854f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gn_unsquash : forall k2, level k2 <= n -> forall U2, U2 = K2.unsquash k2 -> K1.unsquash (g k2) = (fst U2, g_F' f (snd U2)).",
            "VernacStartTheoremProof",
            "01fad74a5f16d0400828da8f300e2dd32c73d44e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct U2 as [m F2].",
            "VernacExtend",
            "41823d11ba368fec76bd901032d5cc05033401ea"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize (fn_unsquash (g k2)); intro.",
            "VernacExtend",
            "af074c4ea975f691cec3c258c974b77e2afceadd"
        ],
        [
            "rewrite <- g_level in H1.",
            "VernacExtend",
            "aae7699704d6ada58d0e0689d1e51dfbd91973bc"
        ],
        [
            "remember (g k2) as k1.",
            "VernacExtend",
            "6ea35da136652abb8a6190714c94f79a2a7d62b2"
        ],
        [
            "specialize ( H1 H (K1.unsquash k1)).",
            "VernacExtend",
            "6e02ae981ddf0c3bb56b81676b760442a5975529"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "assert (f k1 = (f oo g) k2) by (unfold compose; congruence).",
            "VernacExtend",
            "bb7e1c891f4a652f01edbb3bdc4448c732a53cc3"
        ],
        [
            "rewrite iso2 in H2; trivial.",
            "VernacExtend",
            "96adc012ca7402a31e5bed5d33c35dc453a054f3"
        ],
        [
            "rewrite H2 in H1.",
            "VernacExtend",
            "dcb7a323484c05dcc42cd7ac9b61b0b20729d4c5"
        ],
        [
            "rewrite <- H0 in H1.",
            "VernacExtend",
            "4fd96e44cebf12ed54f04eab25bf9cc759759cbd"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "apply injective_projections; simpl; trivial.",
            "VernacExtend",
            "e10223db827615a376383ac52b707910a744cc07"
        ],
        [
            "remember (K1.unsquash k1) as U1.",
            "VernacExtend",
            "b6488616cab0aa74476478abe12af7e27cc0d8f8"
        ],
        [
            "replace (g_F' f (f_F' g (snd U1))) with ((g_F' f oo f_F' g) (snd U1)) by trivial.",
            "VernacExtend",
            "d88a84d97aa1661ef2e0c367569ba0cef8fcd0e5"
        ],
        [
            "destruct U1 as [m' F1].",
            "VernacExtend",
            "d833221e327fbe5066973d4530f8a5ae0022fba9"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "subst m'.",
            "VernacExtend",
            "9d802df24f716ad892031bcb0e44244435522c66"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "symmetry in HeqU1.",
            "VernacExtend",
            "98e718bdf862ed4fcaf0cfc6fc41c523119dd7b4"
        ],
        [
            "generalize (K1L.unsquash_approx HeqU1); intro.",
            "VernacExtend",
            "4bc1a85b50a63374f5322608b43d1da028f1883f"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "replace ((g_F' f oo f_F' g) (fmap F (K1'.approx m) F1)) with ((g_F' f oo f_F' g oo fmap F (K1.approx m)) F1) by trivial.",
            "VernacExtend",
            "00e3b92fda2937147a5dece0fdc1fd488487d7c3"
        ],
        [
            "rewrite Fn_iso2.",
            "VernacExtend",
            "b6e38cf8b67b4a912bd4a8667a617cde207d803c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite K2.knot_level in H.",
            "VernacExtend",
            "de5a06d47443f7f815247b5d12bb16297d9d743f"
        ],
        [
            "rewrite <- H0 in H.",
            "VernacExtend",
            "a6c391ea2ef389fc353ff5fa2171f50bd2b9da41"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gn_squash : forall m F2, m <= n -> g (K2.squash (m, F2)) = K1.squash (m, g_F' f F2).",
            "VernacStartTheoremProof",
            "3d2fb1f392ab4830c0911bedffca8116253173ca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (K1L.unsquash_inj).",
            "VernacExtend",
            "aeb03866270b49e526cf555a04c84c4d821c2657"
        ],
        [
            "assert (level (K2.squash (m , F2)) <= n) by (simpl; rewrite K2.knot_level; rewrite K2.unsquash_squash; simpl; trivial).",
            "VernacExtend",
            "55a96b94d82be1235ee4d91586cbccad302a7365"
        ],
        [
            "rewrite (gn_unsquash (K2'.squash (m, F2)) H0 (K2.unsquash (K2'.squash (m, F2)))); trivial.",
            "VernacExtend",
            "a7df9af3dad0398f5a92647f6b010cd3338d271c"
        ],
        [
            "rewrite K1.unsquash_squash.",
            "VernacExtend",
            "b9620529abdfd8c405ce9376ae8a687b65db26c7"
        ],
        [
            "rewrite K2.unsquash_squash.",
            "VernacExtend",
            "36e60afc4fb808568297cd0cbb2c6ea589df002c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (g_F' f (fmap F (K2'.approx m) F2)) with ((fmap F (g_pred' f) oo (fmap F (K2.approx m))) F2) by trivial.",
            "VernacExtend",
            "dea890209a70e582b766f83d10a7c33f94cdf1f7"
        ],
        [
            "replace (m, fmap F (K1'.approx m) (g_F' f F2)) with (m, (fmap F (K1.approx m) oo fmap F (g_pred' f)) F2) by trivial.",
            "VernacExtend",
            "8d62e787a79420d4a465fc05fa27fbebe25edb7d"
        ],
        [
            "do 2 rewrite fmap_comp.",
            "VernacExtend",
            "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
        ],
        [
            "apply injective_projections; simpl; trivial.",
            "VernacExtend",
            "e10223db827615a376383ac52b707910a744cc07"
        ],
        [
            "rewrite g_pred'_approx; trivial.",
            "VernacExtend",
            "a8b254c7732320c1a0f423e959c91b53ff985d27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fSn_unsquash : forall k1, level k1 <= n + 1 -> forall U1, U1 = K1.unsquash k1 -> K2.unsquash (f_Sn k1) = (fst U1, f_F' (g_Sn) (snd U1)).",
            "VernacStartTheoremProof",
            "557cc17719576bdabf242fee97b82da97f74f771"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold f_Sn.",
            "VernacExtend",
            "11635717e26bcfb81d01d7a74ec1beba3317987b"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "destruct U1 as [m F1].",
            "VernacExtend",
            "67408773b850b0639a59cddb1e9728d198277705"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite K2.unsquash_squash.",
            "VernacExtend",
            "36e60afc4fb808568297cd0cbb2c6ea589df002c"
        ],
        [
            "apply injective_projections; simpl; trivial.",
            "VernacExtend",
            "e10223db827615a376383ac52b707910a744cc07"
        ],
        [
            "unfold f_F'.",
            "VernacExtend",
            "5759e171ffbb12cd2b5f11f0b7e82d90a48e43ec"
        ],
        [
            "replace (fmap F (K2'.approx m) (fmap F (f_pred' g) F1)) with ((fmap F (K2.approx m) oo fmap F (f_pred' g)) F1) by trivial.",
            "VernacExtend",
            "1161b51ff8aa17ddb8058041d969133a0b93ae95"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite K1.knot_level in H.",
            "VernacExtend",
            "d49070f7430019125ae5e6191fcfa90092cc1012"
        ],
        [
            "rewrite <- H0 in H.",
            "VernacExtend",
            "a6c391ea2ef389fc353ff5fa2171f50bd2b9da41"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "symmetry in H0.",
            "VernacExtend",
            "6a4628a15502c5c72b4290e332e792b1559a4eae"
        ],
        [
            "generalize (K1L.unsquash_approx H0); intro.",
            "VernacExtend",
            "4e2fc20d24714f80bf7ce1fab04f51dfad051964"
        ],
        [
            "pattern F1 at 2.",
            "VernacExtend",
            "dd7fd939ac95ef58e9a3d52071af45319574ff73"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "replace (fmap F (f_pred' g_Sn) (fmap F (K1'.approx m) F1)) with ((fmap F (f_pred' g_Sn) oo fmap F (K1.approx m)) F1) by trivial.",
            "VernacExtend",
            "46e114d127f9db0c8ac395b43f9e6c9aa81c0dd1"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "assert (K2'.approx m oo f_pred' g = f_pred' g_Sn oo K1.approx m); try congruence.",
            "VernacExtend",
            "5e04ce5110138a14e31531bc94cac24eca6bdcfc"
        ],
        [
            "extensionality p1 k2.",
            "VernacExtend",
            "5ae41c009083c70c7a03be91400f7f0b40438027"
        ],
        [
            "destruct k2.",
            "VernacExtend",
            "f082fc8f5b8f35f8eb355ee65076a465da986fd2"
        ],
        [
            "simpl; unfold f_pred', compose, K1.approx, K2.approx, g_Sn; simpl.",
            "VernacExtend",
            "71fc586a59e0f53c80cb5c96ede7a3e931618e8c"
        ],
        [
            "rewrite K1.knot_level, K2'.knot_level; unfold g_Sn; simpl.",
            "VernacExtend",
            "fafd2ba87591d85fe4716cd39f53c9f159ea3f2f"
        ],
        [
            "unfold map_pair; simpl.",
            "VernacExtend",
            "d4e23ce0401957df85af5811828e6ddf9e8c8220"
        ],
        [
            "remember (K2.unsquash k) as uk2.",
            "VernacExtend",
            "9428eadd483cc9a02d88e8e20c1cedb9d68db331"
        ],
        [
            "destruct uk2 as [m' F2].",
            "VernacExtend",
            "52238bf5ab57b71bd59557ec5b99ca8916d07225"
        ],
        [
            "rewrite K1.unsquash_squash.",
            "VernacExtend",
            "b9620529abdfd8c405ce9376ae8a687b65db26c7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (le_gt_dec m m'); auto.",
            "VernacExtend",
            "3eeb99733579e874e8f0372b263f05d3d7ea6421"
        ],
        [
            "unfold id.",
            "VernacExtend",
            "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
        ],
        [
            "rewrite <- gn_squash in *; [ | omega ].",
            "VernacExtend",
            "f617844b6e5e44afeac49d6f20540a0a6115b7bc"
        ],
        [
            "rewrite Hequk2.",
            "VernacExtend",
            "ce086172ff7f6b564d5107cef8864613db4d87b2"
        ],
        [
            "rewrite K2.squash_unsquash; trivial.",
            "VernacExtend",
            "bc0351195e9e3580ccb07432f4bc964cd0f0b48e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gn_gSn_eq_n : forall k, level k <= n -> g k = g_Sn k.",
            "VernacStartTheoremProof",
            "e4ffba2f281bbb196ea8db4801239aa3577e8390"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold g_Sn.",
            "VernacExtend",
            "14d6f4306cb12c8b78843ab9948176acb1d368e5"
        ],
        [
            "remember (K2.unsquash k) as usqk.",
            "VernacExtend",
            "058f422c72a5c03603925b45c449b12e11f2e62a"
        ],
        [
            "destruct usqk.",
            "VernacExtend",
            "1ce1e26c2cd24433605642125e0704e85527452f"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite K2.knot_level in H.",
            "VernacExtend",
            "de5a06d47443f7f815247b5d12bb16297d9d743f"
        ],
        [
            "rewrite <- Hequsqk in H.",
            "VernacExtend",
            "8dbaf19cd92206933fda63827da0728922f29197"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite <- gn_squash; try omega.",
            "VernacExtend",
            "7c0846640949f4e586f32be1d820139c4f64c00d"
        ],
        [
            "rewrite Hequsqk.",
            "VernacExtend",
            "faff4ad2f1804b06afee3f6658daaa5149ffa639"
        ],
        [
            "rewrite K2.squash_unsquash.",
            "VernacExtend",
            "fd7af8c129c505c2d54802eb2c46567c5cefcfc9"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sn.",
            "VernacEndSegment",
            "67f393a8a5db215c81141b08ea52200e35e2020c"
        ],
        [
            "Section FG.",
            "VernacBeginSection",
            "4b8a1b6fe20a524740ed11192ff4efe1fdbff252"
        ],
        [
            "Fixpoint fg (n : nat) {struct n} : ((K1.knot -> K2.knot) * (K2.knot -> K1.knot)) := match n with | 0 => (f_Z, g_Z) | S n => match fg n with (fn, gn) => (f_Sn gn, g_Sn fn) end end.",
            "VernacFixpoint",
            "a5ae169a5f21c586b04f9fe221fdf354cdc6982e"
        ],
        [
            "Lemma fg_level_fst : forall n k, level k = level (fst (fg n) k).",
            "VernacStartTheoremProof",
            "a75ad004e7eb044c2c706bfe6f25ae044c70b510"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "apply f_level_Z.",
            "VernacExtend",
            "75be2b759b6c1cce8c3e900dfe73271c2fbdab35"
        ],
        [
            "unfold fg.",
            "VernacExtend",
            "907bb006cac063581e49994d99643f5f562eea7f"
        ],
        [
            "fold fg.",
            "VernacExtend",
            "1c430e2acf42f4290ee5cb3c67eb98e012484e6c"
        ],
        [
            "destruct (fg n).",
            "VernacExtend",
            "06c17fde548b198cf5a1e271adab511062280ae9"
        ],
        [
            "apply f_level_Sn.",
            "VernacExtend",
            "55b3f335f7fa7e7a799e9eaab065cdc82c4e2893"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fg_level_snd : forall n k, level k = level (snd (fg n) k).",
            "VernacStartTheoremProof",
            "27877d468ba723d65db944a5d5cee88a4baef93a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "apply g_level_Z.",
            "VernacExtend",
            "45c8d910d10ddbb59b646a259c8f3512dedbc962"
        ],
        [
            "unfold fg.",
            "VernacExtend",
            "907bb006cac063581e49994d99643f5f562eea7f"
        ],
        [
            "fold fg.",
            "VernacExtend",
            "1c430e2acf42f4290ee5cb3c67eb98e012484e6c"
        ],
        [
            "destruct (fg n).",
            "VernacExtend",
            "06c17fde548b198cf5a1e271adab511062280ae9"
        ],
        [
            "apply g_level_Sn.",
            "VernacExtend",
            "42363c38d79fcc4996824484fcc07a8b66ca9c23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fg_id : forall n k, level k <= n -> (fst (fg n) oo snd (fg n)) k = k.",
            "VernacStartTheoremProof",
            "e8850f798c7bf6f68b291fd1ebd06e34ab8a59fc"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "unfold fg.",
            "VernacExtend",
            "907bb006cac063581e49994d99643f5f562eea7f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite iso2_Z; trivial.",
            "VernacExtend",
            "c939786b33b10df6c364f5740e069cdc28c4aa88"
        ],
        [
            "unfold fg.",
            "VernacExtend",
            "907bb006cac063581e49994d99643f5f562eea7f"
        ],
        [
            "fold fg.",
            "VernacExtend",
            "1c430e2acf42f4290ee5cb3c67eb98e012484e6c"
        ],
        [
            "remember (fg n) as fgn.",
            "VernacExtend",
            "834e305595362533a7f604b26a7a64610406c5f3"
        ],
        [
            "destruct fgn as [fn gn].",
            "VernacExtend",
            "7af205278021be453427472abd3c8f5a3877d777"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (iso2_Sn fn gn n); trivial; try omega.",
            "VernacExtend",
            "b4ceb43147dd6efe2f8ab1df1d3e98c07e3f766c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "unfold fg in Heqfgn.",
            "VernacExtend",
            "a1d40307e8afa63826080eb68d91fa79170ab810"
        ],
        [
            "inversion Heqfgn.",
            "VernacExtend",
            "01397eef90bde6a6453b80dc85dfd9247aad1669"
        ],
        [
            "apply g_level_Z.",
            "VernacExtend",
            "45c8d910d10ddbb59b646a259c8f3512dedbc962"
        ],
        [
            "unfold fg in Heqfgn.",
            "VernacExtend",
            "a1d40307e8afa63826080eb68d91fa79170ab810"
        ],
        [
            "fold fg in Heqfgn.",
            "VernacExtend",
            "c6fe4faff7bb45a8e9c79782524956f76d9406bc"
        ],
        [
            "destruct (fg n).",
            "VernacExtend",
            "06c17fde548b198cf5a1e271adab511062280ae9"
        ],
        [
            "inversion Heqfgn.",
            "VernacExtend",
            "01397eef90bde6a6453b80dc85dfd9247aad1669"
        ],
        [
            "apply g_level_Sn.",
            "VernacExtend",
            "42363c38d79fcc4996824484fcc07a8b66ca9c23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gf_id : forall n k, level k <= n -> (snd (fg n) oo fst (fg n)) k = k.",
            "VernacStartTheoremProof",
            "4de6da03758d871d6fa0807e41c1750673c54477"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "unfold fg.",
            "VernacExtend",
            "907bb006cac063581e49994d99643f5f562eea7f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite iso1_Z; trivial.",
            "VernacExtend",
            "b211b250523f497ebeec2c8cd0af7ffc75278b0c"
        ],
        [
            "unfold fg.",
            "VernacExtend",
            "907bb006cac063581e49994d99643f5f562eea7f"
        ],
        [
            "fold fg.",
            "VernacExtend",
            "1c430e2acf42f4290ee5cb3c67eb98e012484e6c"
        ],
        [
            "remember (fg n) as fgn.",
            "VernacExtend",
            "834e305595362533a7f604b26a7a64610406c5f3"
        ],
        [
            "destruct fgn as [fn gn].",
            "VernacExtend",
            "7af205278021be453427472abd3c8f5a3877d777"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (iso1_Sn fn gn n); trivial; try omega.",
            "VernacExtend",
            "edb732ae0d3f21c040435cdfb058cf03094de28b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "unfold fg in Heqfgn.",
            "VernacExtend",
            "a1d40307e8afa63826080eb68d91fa79170ab810"
        ],
        [
            "inversion Heqfgn.",
            "VernacExtend",
            "01397eef90bde6a6453b80dc85dfd9247aad1669"
        ],
        [
            "apply f_level_Z.",
            "VernacExtend",
            "75be2b759b6c1cce8c3e900dfe73271c2fbdab35"
        ],
        [
            "unfold fg in Heqfgn.",
            "VernacExtend",
            "a1d40307e8afa63826080eb68d91fa79170ab810"
        ],
        [
            "fold fg in Heqfgn.",
            "VernacExtend",
            "c6fe4faff7bb45a8e9c79782524956f76d9406bc"
        ],
        [
            "destruct (fg n).",
            "VernacExtend",
            "06c17fde548b198cf5a1e271adab511062280ae9"
        ],
        [
            "inversion Heqfgn.",
            "VernacExtend",
            "01397eef90bde6a6453b80dc85dfd9247aad1669"
        ],
        [
            "apply f_level_Sn.",
            "VernacExtend",
            "55b3f335f7fa7e7a799e9eaab065cdc82c4e2893"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fg_fst_unsquash: forall n k, level k <= n -> forall U1, U1 = K1.unsquash k -> K2.unsquash (fst (fg n) k) = (fst U1, f_F' (snd (fg n)) (snd U1)).",
            "VernacStartTheoremProof",
            "ffea35b8469de28dad0213d4e53bc860edef39ff"
        ],
        [
            "induction n; unfold fg; fold fg; simpl; intros.",
            "VernacExtend",
            "47915c4ef3cadec3a9ce26403f8f8f0d12db1418"
        ],
        [
            "rewrite (fZ_unsquash k H U1 H0).",
            "VernacExtend",
            "ebcbe06172edd954b2b5a4ec08dbd4e48c1d7722"
        ],
        [
            "apply injective_projections; simpl; trivial.",
            "VernacExtend",
            "e10223db827615a376383ac52b707910a744cc07"
        ],
        [
            "unfold f_F', fF_Z.",
            "VernacExtend",
            "18f9363ede3b94ef31975da71a3330b8adc25a84"
        ],
        [
            "destruct U1 as [m F1].",
            "VernacExtend",
            "67408773b850b0639a59cddb1e9728d198277705"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in H; rewrite K1.knot_level in H.",
            "VernacExtend",
            "f6bb376316f2a46de4e6c49469e105373fbe7209"
        ],
        [
            "rewrite <- H0 in H.",
            "VernacExtend",
            "a6c391ea2ef389fc353ff5fa2171f50bd2b9da41"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (m = 0) by omega.",
            "VernacExtend",
            "60e21109a211af0c982ad4fcba9c2aee2723aaaf"
        ],
        [
            "subst m.",
            "VernacExtend",
            "9ba78b8037512180a4349842defa7f5fabdd6010"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "symmetry in H0.",
            "VernacExtend",
            "6a4628a15502c5c72b4290e332e792b1559a4eae"
        ],
        [
            "generalize (K1L.unsquash_approx H0); intro.",
            "VernacExtend",
            "4e2fc20d24714f80bf7ce1fab04f51dfad051964"
        ],
        [
            "pattern F1 at 2.",
            "VernacExtend",
            "dd7fd939ac95ef58e9a3d52071af45319574ff73"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "replace (fmap F (f_pred' g_Z) (fmap F (K1'.approx 0) F1)) with ((fmap F (f_pred' g_Z) oo fmap F (K1.approx 0)) F1) by trivial.",
            "VernacExtend",
            "963d699ba60f3d360c65c0b0d34acc6a6b0ad0fc"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "replace (f_pred' g_Z oo K1'.approx 0) with gZ_pred; trivial.",
            "VernacExtend",
            "45f0e55d22948e39b0fdd8673d6a1b5e10206a04"
        ],
        [
            "remember (fg n) as fgn.",
            "VernacExtend",
            "834e305595362533a7f604b26a7a64610406c5f3"
        ],
        [
            "destruct fgn as [fn gn].",
            "VernacExtend",
            "7af205278021be453427472abd3c8f5a3877d777"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "replace gn with (snd (fg n)) by (rewrite <- Heqfgn; trivial).",
            "VernacExtend",
            "50d5cfd3dbd56f4e0ed44c211261e847cf917aed"
        ],
        [
            "generalize (fSn_unsquash (fst (fg n)) (snd (fg n)) n (gf_id n) (fg_id n) (fg_level_fst n) (fg_level_snd n)); intro.",
            "VernacExtend",
            "810a761a27742ecb4919a573b45037fdc5715d3b"
        ],
        [
            "rewrite <- Heqfgn in H1.",
            "VernacExtend",
            "58e7396bb67d40887a18c075a0cfd254be803fa0"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "replace (n + 1) with (S n) in H1 by omega.",
            "VernacExtend",
            "2174076ac0a22d344c03da23819daace7708f10c"
        ],
        [
            "specialize ( H1 IHn k H U1 H0).",
            "VernacExtend",
            "30f871d0bbbbe72373db259c92a01b3ac4ce8692"
        ],
        [
            "rewrite <- Heqfgn.",
            "VernacExtend",
            "2ef0241e1029a8f252f80fd53f5e9748cc85d341"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fg_fg_eq: forall n k2, level k2 < n -> snd (fg (level k2)) k2 = snd (fg n) k2.",
            "VernacStartTheoremProof",
            "e32666624f00fe9e00e6752c2ef77a20a69b7cf7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists m, level k2 + m = n).",
            "VernacExtend",
            "29a2ccfae8b85011ffb083333f0be8b4f0460300"
        ],
        [
            "remember (level k2) as m.",
            "VernacExtend",
            "44658dc821d0f240132cd2d46140c4d4a215c2c7"
        ],
        [
            "clear -H.",
            "VernacExtend",
            "0feb8621f12176e9894f4f3ff86ecf0003739aed"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "assert (m = n \\/ m < n) by omega.",
            "VernacExtend",
            "f842e71e2de3a38d9422a676a115c27b446871bc"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (IHn H) as [m0 ?].",
            "VernacExtend",
            "7785280d22c6556b7f34f324c919adc7654278dc"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "exists (m0 + 1).",
            "VernacExtend",
            "12d0656ff21d75fd5f876908f759ec814e0e88b9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct H0 as [m ?].",
            "VernacExtend",
            "7852d64e2102d6f4f674a249a22c3cac6bce880c"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "revert m H0.",
            "VernacExtend",
            "8613834a9e0628a20c0e4608cb354a678df5c460"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "replace (level k2) with 0 by omega; trivial.",
            "VernacExtend",
            "1b54614a2a23b8af0998b0b3c24a8b24bd68a3f8"
        ],
        [
            "destruct m.",
            "VernacExtend",
            "8d29a39ed817a734f6646f7b42c80e41363356d4"
        ],
        [
            "replace (level k2 + 0) with (level k2) in H0 by trivial.",
            "VernacExtend",
            "03829312c3fc631c1c49eb889811b45005d625f8"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "specialize ( IHn m).",
            "VernacExtend",
            "6e7ea0584ea73b260a29ea0185dbbfdbe9a429e7"
        ],
        [
            "rewrite IHn; try omega.",
            "VernacExtend",
            "5fadc3e2826b90495ed1b30d2dedfc86bd60240a"
        ],
        [
            "unfold fg; fold fg.",
            "VernacExtend",
            "b83526d4f85b9cb88f99eb315df3295407a1fd5e"
        ],
        [
            "remember (fg n) as fgn.",
            "VernacExtend",
            "834e305595362533a7f604b26a7a64610406c5f3"
        ],
        [
            "destruct fgn as [fn gn].",
            "VernacExtend",
            "7af205278021be453427472abd3c8f5a3877d777"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize (gn_gSn_eq_n (fst (fg n)) (snd (fg n)) n (gf_id n) (fg_id n) (fg_level_fst n) (fg_level_snd n) (fg_fst_unsquash n)); intro.",
            "VernacExtend",
            "37c0aafec0a114d203eb66e27806036954e678f3"
        ],
        [
            "rewrite <- Heqfgn in H.",
            "VernacExtend",
            "844b042f1c91ffd825d114f0e079d8fa4e6420c2"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FG.",
            "VernacEndSegment",
            "687ab5da51c67e14f820c9064a7b7342e0d62137"
        ],
        [
            "Definition f (k : K1.knot) : K2.knot := fst (fg (level k)) k.",
            "VernacDefinition",
            "686e69a74a0d87e9e2f1138f16a85283986e2a7b"
        ],
        [
            "Definition g (k : K2.knot) : K1.knot := snd (fg (level k)) k.",
            "VernacDefinition",
            "736d36c82ded422bf872fca3f2bd8d1b59bad728"
        ],
        [
            "Definition fF : TF.F K1.predicate -> TF.F K2.predicate := f_F' g.",
            "VernacDefinition",
            "53aed4cfeed96a12fd27b32adaae1cbded18b408"
        ],
        [
            "Definition gF : TF.F K2.predicate -> TF.F K1.predicate := g_F' f.",
            "VernacDefinition",
            "bb8919a8779f79e50d56f37e87cd19d501e72774"
        ],
        [
            "Lemma iso1 : f oo g = id K2.knot.",
            "VernacStartTheoremProof",
            "6901c59739821913d44e4cbc99809bb7a3072d9c"
        ],
        [
            "extensionality k.",
            "VernacExtend",
            "3d0435f326186ec7f64a04595b4266d139fac42d"
        ],
        [
            "unfold id.",
            "VernacExtend",
            "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
        ],
        [
            "unfold compose, f, g.",
            "VernacExtend",
            "ea6b4c5811e3caa002a50077eaec2a7f666236ef"
        ],
        [
            "rewrite <- fg_level_snd.",
            "VernacExtend",
            "84d47119f2ff9036f52d8757c49abdc8f3b0145f"
        ],
        [
            "remember (level k) as n.",
            "VernacExtend",
            "001b3da097bff581244c27f2068e3bac6a96ef03"
        ],
        [
            "replace (fst (fg n) (snd (fg n) k)) with ((fst (fg n) oo snd (fg n)) k) by trivial.",
            "VernacExtend",
            "e9847bbefc59ea481d5b9c1df7eb7c429bbe8038"
        ],
        [
            "rewrite fg_id; trivial; omega.",
            "VernacExtend",
            "98f08501bccd0934169681a0539c25a04fa34427"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iso2 : g oo f = id K1.knot.",
            "VernacStartTheoremProof",
            "b512f2ec2c825c4217a7b9a396797fa269550624"
        ],
        [
            "extensionality k.",
            "VernacExtend",
            "3d0435f326186ec7f64a04595b4266d139fac42d"
        ],
        [
            "unfold id.",
            "VernacExtend",
            "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
        ],
        [
            "unfold compose, f, g.",
            "VernacExtend",
            "ea6b4c5811e3caa002a50077eaec2a7f666236ef"
        ],
        [
            "rewrite <- fg_level_fst.",
            "VernacExtend",
            "fcbaab7766bdcd932f11ad31b0d9706ebb4fcae3"
        ],
        [
            "remember (level k) as n.",
            "VernacExtend",
            "001b3da097bff581244c27f2068e3bac6a96ef03"
        ],
        [
            "replace (snd (fg n) (fst (fg n) k)) with ((snd (fg n) oo fst (fg n)) k) by trivial.",
            "VernacExtend",
            "c6988d680d8fa4926c17a6108d897ba16d5ec7de"
        ],
        [
            "rewrite gf_id; trivial; omega.",
            "VernacExtend",
            "05181d8033f9f39b0ed1803662fe26bd00a71f94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fpred_gpred : f_pred' g oo g_pred' f = id (K2.predicate).",
            "VernacStartTheoremProof",
            "3ee4903e2d1160557b2d07e41355847b1965ae5c"
        ],
        [
            "extensionality P2 k2.",
            "VernacExtend",
            "8a07b4f77efcfa9a3f3fb36bdfd246bbd363fd6f"
        ],
        [
            "unfold id.",
            "VernacExtend",
            "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
        ],
        [
            "unfold g_pred', f_pred', map_pair, compose; simpl.",
            "VernacExtend",
            "79d8f4365ba8b8e50ab0b0ad227254f79368bb64"
        ],
        [
            "destruct k2; simpl.",
            "VernacExtend",
            "d409ffaefb82f8d909693df1bd34208647daea22"
        ],
        [
            "replace (f (g k)) with ((f oo g) k) by trivial.",
            "VernacExtend",
            "8ee07a162b7ba12da9ae7346fcffc7e5d1a8eb7b"
        ],
        [
            "rewrite iso1.",
            "VernacExtend",
            "dbd82dbb61ebca9a1724b37386a903087500bf03"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gpred_fpred : g_pred' f oo f_pred' g = id (K1.predicate).",
            "VernacStartTheoremProof",
            "a16a6fd9b5fd59f8f5e078bc4e8d29e2026c6645"
        ],
        [
            "extensionality P1 k1.",
            "VernacExtend",
            "a098ae85ffe0a09322833d96c66dfc92c4ab420e"
        ],
        [
            "unfold id.",
            "VernacExtend",
            "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
        ],
        [
            "unfold g_pred', f_pred', compose.",
            "VernacExtend",
            "afa6feea09b1df508a6a7c58b895db18144faefa"
        ],
        [
            "unfold map_pair; simpl.",
            "VernacExtend",
            "d4e23ce0401957df85af5811828e6ddf9e8c8220"
        ],
        [
            "destruct k1; simpl.",
            "VernacExtend",
            "ecc88822be0daa0c8e9f6e2e8a0125c6aeaae9fb"
        ],
        [
            "replace (g (f k)) with ((g oo f) k) by trivial.",
            "VernacExtend",
            "a5f5fc5e3eb6f76c49fc6d2b9968a0b7cea1bc90"
        ],
        [
            "rewrite iso2.",
            "VernacExtend",
            "b44e894795fd31db9e2b35f4a17a6252c8d71ddb"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fiso1 : fF oo gF = id (F K2.predicate).",
            "VernacStartTheoremProof",
            "04c4366f495dea246725c21cbbe459a50fd0f818"
        ],
        [
            "extensionality F2.",
            "VernacExtend",
            "4663fa2d301b2d996be916cbf10e5ec1f46539fe"
        ],
        [
            "unfold id.",
            "VernacExtend",
            "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
        ],
        [
            "unfold fF, gF, f_F', g_F'.",
            "VernacExtend",
            "ecd701b0d74f92e9a8707d9607f8b18f91217188"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "rewrite fpred_gpred.",
            "VernacExtend",
            "c25fadac3ee23b4fd434f81b9563bcf3211327c6"
        ],
        [
            "rewrite fmap_id.",
            "VernacExtend",
            "a9e0c3265b704148750f798598b45a92b851ab66"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fiso2 : gF oo fF = id (F K1.predicate).",
            "VernacStartTheoremProof",
            "5dd0b32bbdfd042cbc9f98a958a550eabd3fc69b"
        ],
        [
            "extensionality F1.",
            "VernacExtend",
            "5e2572607c38f565b595253c01549bc340bbe7fd"
        ],
        [
            "unfold id.",
            "VernacExtend",
            "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
        ],
        [
            "unfold fF, gF, f_F', g_F'.",
            "VernacExtend",
            "ecd701b0d74f92e9a8707d9607f8b18f91217188"
        ],
        [
            "rewrite fmap_comp.",
            "VernacExtend",
            "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
        ],
        [
            "rewrite gpred_fpred.",
            "VernacExtend",
            "c801743f9e53228a2bc05dc0cf9e28bfa61f5ad1"
        ],
        [
            "rewrite fmap_id.",
            "VernacExtend",
            "a9e0c3265b704148750f798598b45a92b851ab66"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma f_level : forall k, level k = level (f k).",
            "VernacStartTheoremProof",
            "b62d609cb8a879ae8e6fb2fa253379be7e9cf261"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold f.",
            "VernacExtend",
            "54a386f4161710b69df4a2025df24a14e842ecf2"
        ],
        [
            "rewrite <- (fg_level_fst (level k)).",
            "VernacExtend",
            "5f4ee4c8232c96a45bea2b20ee2ec7c4949734af"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma g_level : forall k, level k = level (g k).",
            "VernacStartTheoremProof",
            "35593518cab6d83bbf9cccdbf243bba5b50f3eaf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold g.",
            "VernacExtend",
            "fd78415b188602b878d030c2cbc915af33ab1e1d"
        ],
        [
            "rewrite <- (fg_level_snd (level k)).",
            "VernacExtend",
            "1425c92b5476c368648a591fc91adbcbe98d5c5e"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma f_unsquash : forall k1 U1, U1 = K1.unsquash k1 -> K2.unsquash (f k1) = (fst U1, fF (snd U1)).",
            "VernacStartTheoremProof",
            "76f2b5814b583eb4e5fd9b0e70fc58633a047c88"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct U1 as [n F1].",
            "VernacExtend",
            "32e6ff5c29943122f7c01b087456e8ac7695fe19"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold f; simpl; rewrite K1.knot_level.",
            "VernacExtend",
            "2549ea21bfcff2c39b702d58cfe2ba331dca5218"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (level k1 <= n) by (rewrite K1.knot_level; rewrite <- H; trivial).",
            "VernacExtend",
            "18c51ef7335f61d516d002cdfbf009ba91c04086"
        ],
        [
            "rewrite (fg_fst_unsquash n k1 H0 (n, F1)); trivial.",
            "VernacExtend",
            "252746b424b213d952497b366ca9d8cd6299b18d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply injective_projections; simpl; trivial.",
            "VernacExtend",
            "e10223db827615a376383ac52b707910a744cc07"
        ],
        [
            "unfold fF.",
            "VernacExtend",
            "99a9e7627a11467d17cc32472beccf8e3e15db6f"
        ],
        [
            "symmetry in H.",
            "VernacExtend",
            "5ef7cf40d6f1a8a9f9fae5220b667eef42ea5534"
        ],
        [
            "generalize (K1L.unsquash_approx H); intro.",
            "VernacExtend",
            "24c2e7fa7d2499957a7c6a74683a5871c4fc6043"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "unfold f_F'.",
            "VernacExtend",
            "5759e171ffbb12cd2b5f11f0b7e82d90a48e43ec"
        ],
        [
            "replace (fmap F (f_pred' (snd (fg n))) (fmap F (K1'.approx n) F1)) with ((fmap F (f_pred' (snd (fg n))) oo fmap F (K1.approx n)) F1) by trivial.",
            "VernacExtend",
            "e3f2c17d553bafe65a99a5bbf52fe2f3ef91ed8b"
        ],
        [
            "replace (fmap F (f_pred' g) (fmap F (K1'.approx n) F1)) with ((fmap F (f_pred' g) oo fmap F (K1.approx n)) F1) by trivial.",
            "VernacExtend",
            "80e048f0d44653ff44dcfb2516dfe6056da4ebc4"
        ],
        [
            "do 2 rewrite fmap_comp.",
            "VernacExtend",
            "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
        ],
        [
            "replace (f_pred' (snd (fg n)) oo K1.approx n) with (f_pred' g oo K1'.approx n); trivial.",
            "VernacExtend",
            "872ca72f8e97d93708749fb7e10e7d12c1747632"
        ],
        [
            "extensionality P1 k2.",
            "VernacExtend",
            "31e05d06371fe8abb88eb73d578572cb4ad2cf47"
        ],
        [
            "unfold f_pred', compose.",
            "VernacExtend",
            "2cec95832115e83faeb99391cc7c80dbf92f2197"
        ],
        [
            "unfold K1.approx.",
            "VernacExtend",
            "0444c8aa540ccabfed368469c8f396a0c1741e71"
        ],
        [
            "unfold map_pair; destruct k2; simpl.",
            "VernacExtend",
            "3065bd8282f66dfd696b5e3f11eab2b0838e02c3"
        ],
        [
            "rewrite <- fg_level_snd.",
            "VernacExtend",
            "84d47119f2ff9036f52d8757c49abdc8f3b0145f"
        ],
        [
            "rewrite <- g_level.",
            "VernacExtend",
            "675560ef9a237b89198d32a0f1a637adc8596149"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (le_gt_dec n (level k)); auto.",
            "VernacExtend",
            "403253d7b15520b870d3c59ce334296005ca41b5"
        ],
        [
            "unfold g.",
            "VernacExtend",
            "fd78415b188602b878d030c2cbc915af33ab1e1d"
        ],
        [
            "red in g0.",
            "VernacExtend",
            "f8d0479e9e06f30beda4aff1b3871822099b3147"
        ],
        [
            "rewrite (fg_fg_eq n k g0).",
            "VernacExtend",
            "93efd7496b61eb66156264d784bf2303406a587a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma g_unsquash : forall k2 U2, U2 = K2.unsquash k2 -> K1.unsquash (g k2) = (fst U2, gF (snd U2)).",
            "VernacStartTheoremProof",
            "183009ca3b3662a644c8234ad47566aebe897ef8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct U2 as [n F2].",
            "VernacExtend",
            "2b98fe5915a3bcfda1bf62bde2682836916fa0be"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize (f_unsquash (g k2)); intro.",
            "VernacExtend",
            "4c629c7a466508d82d1d0739ed11cfe0c7b1bf93"
        ],
        [
            "remember (g k2) as k1.",
            "VernacExtend",
            "6ea35da136652abb8a6190714c94f79a2a7d62b2"
        ],
        [
            "specialize ( H0 (K1.unsquash k1)).",
            "VernacExtend",
            "f23731b24c19c9dd54da91cfd7e9388770e199c7"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "assert (f k1 = (f oo g) k2) by (unfold compose; congruence).",
            "VernacExtend",
            "bb7e1c891f4a652f01edbb3bdc4448c732a53cc3"
        ],
        [
            "rewrite iso1 in H1.",
            "VernacExtend",
            "0f0b7ff99375f289455049dbec5d55be06e45f2a"
        ],
        [
            "unfold id in H1.",
            "VernacExtend",
            "498a8c67ec4b643a39ae0c3b059432bd25e0e7b0"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "rewrite <- H in H0.",
            "VernacExtend",
            "044ef0a64c068347d38112a9feb1635f78270f85"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "remember (K1.unsquash k1) as U1.",
            "VernacExtend",
            "b6488616cab0aa74476478abe12af7e27cc0d8f8"
        ],
        [
            "replace (gF (fF (snd U1))) with ((gF oo fF) (snd U1)) by trivial.",
            "VernacExtend",
            "8ac77597c6f422ab9656b0f54b433738d43b4eba"
        ],
        [
            "rewrite Fiso2.",
            "VernacExtend",
            "49f141585d861bdccb7905cc239264fd0f8f2181"
        ],
        [
            "unfold id.",
            "VernacExtend",
            "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
        ],
        [
            "destruct U1.",
            "VernacExtend",
            "6b7f91e62eda988bba8186668a11de60798f8245"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fF_approx : forall n, fF oo (fmap F (K1.approx n)) = (fmap F (K2.approx n)) oo fF.",
            "VernacStartTheoremProof",
            "703ed1d346a2613979d516af1a78908b163c48ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fF, f_F'.",
            "VernacExtend",
            "11bf8ceac1205e3a46941fe37b0f0ab1c6f9c15e"
        ],
        [
            "do 2 rewrite fmap_comp.",
            "VernacExtend",
            "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
        ],
        [
            "rewrite f_pred'_approx.",
            "VernacExtend",
            "f078cf8495d089b8af5ea43d060492904fb4b9d0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply g_level.",
            "VernacExtend",
            "08d01fcd5b26cd1344b4c5854f6449a0199fbb42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gF_approx : forall n, gF oo (fmap F (K2.approx n)) = (fmap F (K1.approx n)) oo gF.",
            "VernacStartTheoremProof",
            "defa9da478234839133010f09e7b5beb98dc865a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold gF, g_F'.",
            "VernacExtend",
            "cf61b1e6b83d600b2821906b50dcc2575674722d"
        ],
        [
            "do 2 rewrite fmap_comp.",
            "VernacExtend",
            "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
        ],
        [
            "rewrite g_pred'_approx.",
            "VernacExtend",
            "15db2c99a924728725d927e999b976e9e0d48ef4"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply f_level.",
            "VernacExtend",
            "f080dddaa10ddee3a6e6a89baaf4c62ff56d2d72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma f_squash : forall n F1, f (K1.squash (n, F1)) = K2.squash (n, fF F1).",
            "VernacStartTheoremProof",
            "b94b4949b70ac8ea47535b5d1471deee6efc81c6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (K2L.unsquash_inj).",
            "VernacExtend",
            "795c652db674159e28fcd6862c0118dbd696261c"
        ],
        [
            "rewrite (f_unsquash (K1'.squash (n, F1)) (K1.unsquash (K1'.squash (n, F1)))); trivial.",
            "VernacExtend",
            "fecf38c22605374f5a543eeefcb990fee20daca1"
        ],
        [
            "rewrite K1.unsquash_squash.",
            "VernacExtend",
            "b9620529abdfd8c405ce9376ae8a687b65db26c7"
        ],
        [
            "rewrite K2.unsquash_squash.",
            "VernacExtend",
            "36e60afc4fb808568297cd0cbb2c6ea589df002c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (fF (fmap F (K1'.approx n) F1)) with ((fF oo (fmap F (K1.approx n))) F1) by trivial.",
            "VernacExtend",
            "56931bd45b145b7a1c82de1bf8fcdc98e0d4df32"
        ],
        [
            "rewrite fF_approx.",
            "VernacExtend",
            "a235187367bdb711f5227f5885b5bb6a1dcdbfd4"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma g_squash : forall n F2, g (K2.squash (n, F2)) = K1.squash (n, gF F2).",
            "VernacStartTheoremProof",
            "14ac2ea8652f43ed807c90a75af637b0a4aefa86"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (K1L.unsquash_inj).",
            "VernacExtend",
            "aeb03866270b49e526cf555a04c84c4d821c2657"
        ],
        [
            "rewrite (g_unsquash (K2'.squash (n, F2)) (K2.unsquash (K2'.squash (n, F2)))); trivial.",
            "VernacExtend",
            "57c278beae6978551e841882cad877225a13d295"
        ],
        [
            "rewrite K1.unsquash_squash.",
            "VernacExtend",
            "b9620529abdfd8c405ce9376ae8a687b65db26c7"
        ],
        [
            "rewrite K2.unsquash_squash.",
            "VernacExtend",
            "36e60afc4fb808568297cd0cbb2c6ea589df002c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (gF (fmap F (K2'.approx n) F2)) with ((gF oo (fmap F (K2.approx n))) F2) by trivial.",
            "VernacExtend",
            "57f2af458f145df8fc36e25b3c339bfb5d9a58a0"
        ],
        [
            "rewrite gF_approx.",
            "VernacExtend",
            "efc5380d544923da35282dff06ae6d54e15ff3ac"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Unique_Knot.",
            "VernacEndSegment",
            "c97fb32defacffb5d4d58cf1b4995535bb7552e7"
        ]
    ],
    "proofs": [
        {
            "name": "f_pred'_approx",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality P1 k2.",
                        "VernacExtend",
                        "31e05d06371fe8abb88eb73d578572cb4ad2cf47"
                    ]
                },
                {
                    "command": [
                        "destruct k2; unfold f_pred', compose; simpl.",
                        "VernacExtend",
                        "7374ab13a19cc654e6455b80d2d5ef3b48285647"
                    ]
                },
                {
                    "command": [
                        "unfold K1'.approx, K2'.approx; simpl.",
                        "VernacExtend",
                        "4f2b82deefdb0e3c2d18441b2ab40352f389935a"
                    ]
                },
                {
                    "command": [
                        "rewrite g_level; simpl; auto.",
                        "VernacExtend",
                        "6347503ec75a3c274fe58eaf0ce11ce68090c465"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g_pred'_approx",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality P k1.",
                        "VernacExtend",
                        "0387d54a103eabda0e24b0bb55b5a849bf525535"
                    ]
                },
                {
                    "command": [
                        "destruct k1; unfold g_pred', compose; simpl.",
                        "VernacExtend",
                        "d7cba7257abed6f8a4a3de479125ddb053f9c737"
                    ]
                },
                {
                    "command": [
                        "unfold K1'.approx, K2'.approx; simpl.",
                        "VernacExtend",
                        "4f2b82deefdb0e3c2d18441b2ab40352f389935a"
                    ]
                },
                {
                    "command": [
                        "rewrite f_level; simpl; auto.",
                        "VernacExtend",
                        "2547726578f4c507dcad9fc6099c319cce25d982"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predZ_iso1",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality p k.",
                        "VernacExtend",
                        "c279e4dd070e1f398d1330776c39345ee755dbb7"
                    ]
                },
                {
                    "command": [
                        "unfold compose, gZ_pred, fZ_pred, K1'.approx in *.",
                        "VernacExtend",
                        "18cece123ee0939913b02ef243e9504d609841d4"
                    ]
                },
                {
                    "command": [
                        "destruct k; simpl; auto.",
                        "VernacExtend",
                        "22221ec2842f7bf8384caac4e4ac38fb4bc62b89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predZ_iso2",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality p k.",
                        "VernacExtend",
                        "c279e4dd070e1f398d1330776c39345ee755dbb7"
                    ]
                },
                {
                    "command": [
                        "unfold compose, gZ_pred, fZ_pred, K2'.approx in *.",
                        "VernacExtend",
                        "df33fb94cad62837540d562de308c9a756609d4e"
                    ]
                },
                {
                    "command": [
                        "destruct k; simpl; auto.",
                        "VernacExtend",
                        "22221ec2842f7bf8384caac4e4ac38fb4bc62b89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iso1_Z",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold compose, g_Z, f_Z.",
                        "VernacExtend",
                        "4e275e345659ad487dd9ade94f9969dc8f3390e4"
                    ]
                },
                {
                    "command": [
                        "remember (K1.unsquash k) as unsq_k.",
                        "VernacExtend",
                        "5908a95b60afa4649e4668be304acaf1aa96ea90"
                    ]
                },
                {
                    "command": [
                        "destruct unsq_k as [n0 Fp].",
                        "VernacExtend",
                        "cfa97abc0382c415c271e724436f396901f99738"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.unsquash_squash.",
                        "VernacExtend",
                        "36e60afc4fb808568297cd0cbb2c6ea589df002c"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.knot_level in H.",
                        "VernacExtend",
                        "d49070f7430019125ae5e6191fcfa90092cc1012"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hequnsq_k in H.",
                        "VernacExtend",
                        "22f40105559db5d89fae9031c22550eb6f312cf8"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (K2.approx n0) (fF_Z Fp)) with ((fmap F (K2.approx n0) oo (fmap F gZ_pred)) Fp) by trivial.",
                        "VernacExtend",
                        "335b768e1ccbff8265c537bf6ac5b78cc10ca277"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "replace (gF_Z (fmap F (K2.approx n0 oo gZ_pred) Fp)) with ((fmap F fZ_pred oo fmap F (K2.approx n0 oo gZ_pred)) Fp) by trivial.",
                        "VernacExtend",
                        "256e2a4178f3cc5ae41565420b26ed089802b290"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "assert (n0 = 0) by omega.",
                        "VernacExtend",
                        "0c2a75346f03a783b6db6107ff10a828b099756e"
                    ]
                },
                {
                    "command": [
                        "clear H; subst n0.",
                        "VernacExtend",
                        "2943d817943340a67059d52425087851089b5793"
                    ]
                },
                {
                    "command": [
                        "symmetry in Hequnsq_k.",
                        "VernacExtend",
                        "b77e1cc8ddb7cc8a0dd92d6fc07c02769546690d"
                    ]
                },
                {
                    "command": [
                        "rewrite predZ_iso1; trivial.",
                        "VernacExtend",
                        "e03165a002ea6e56caf329fa15a5262222dfa4f0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (K1L.unsquash_approx Hequnsq_k).",
                        "VernacExtend",
                        "d9491727807c33c0248fb22d41f2b4567661a110"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hequnsq_k.",
                        "VernacExtend",
                        "b3681207670a461bf7ec85b40f7ff3cad200aa0e"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.squash_unsquash.",
                        "VernacExtend",
                        "9210dfc16ee30510a6ca96a57f054d3f32119c24"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iso2_Z",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold compose, g_Z, f_Z.",
                        "VernacExtend",
                        "4e275e345659ad487dd9ade94f9969dc8f3390e4"
                    ]
                },
                {
                    "command": [
                        "remember (K2.unsquash k) as unsq_k.",
                        "VernacExtend",
                        "3dad248db5c147a30b7bb57f3eb0a53b2933457a"
                    ]
                },
                {
                    "command": [
                        "destruct unsq_k as [n0 Fp].",
                        "VernacExtend",
                        "cfa97abc0382c415c271e724436f396901f99738"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.unsquash_squash.",
                        "VernacExtend",
                        "b9620529abdfd8c405ce9376ae8a687b65db26c7"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.knot_level in H.",
                        "VernacExtend",
                        "de5a06d47443f7f815247b5d12bb16297d9d743f"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (K1.approx n0) (gF_Z Fp)) with ((fmap F (K1.approx n0) oo (fmap F fZ_pred)) Fp) by trivial.",
                        "VernacExtend",
                        "848ca9ea39d06eb7606a1b6c16687410f08b8dd2"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "replace (fF_Z (fmap F (K1.approx n0 oo fZ_pred) Fp)) with ((fmap F gZ_pred oo fmap F (K1.approx n0 oo fZ_pred)) Fp) by trivial.",
                        "VernacExtend",
                        "a3101036be0b3de7bb3c62ccbe1f411adaa8edd2"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "symmetry in Hequnsq_k.",
                        "VernacExtend",
                        "b77e1cc8ddb7cc8a0dd92d6fc07c02769546690d"
                    ]
                },
                {
                    "command": [
                        "assert (n0 = 0).",
                        "VernacExtend",
                        "5b8f7d902a86049084c558160891e036d58572bc"
                    ]
                },
                {
                    "command": [
                        "destruct (K2'.unsquash k); inv Hequnsq_k.",
                        "VernacExtend",
                        "7238f250f0aac645f54af4765d998c5ffd23a1d8"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "subst n0.",
                        "VernacExtend",
                        "a616ceb75d5b854d48413c6079f1eb2971805dce"
                    ]
                },
                {
                    "command": [
                        "rewrite predZ_iso2; trivial.",
                        "VernacExtend",
                        "f1331a6c7fdfaeb16e2c0aab9e5ad60ef5cd6f0d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (K2L.unsquash_approx Hequnsq_k).",
                        "VernacExtend",
                        "ccede1605a4664202284cefbcd63f727b189304d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hequnsq_k.",
                        "VernacExtend",
                        "b3681207670a461bf7ec85b40f7ff3cad200aa0e"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.squash_unsquash.",
                        "VernacExtend",
                        "fd7af8c129c505c2d54802eb2c46567c5cefcfc9"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "f_level_Z",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold f_Z.",
                        "VernacExtend",
                        "99f6ccbd653bbacdddd1246313d82e65b9945a08"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.knot_level, K2.knot_level.",
                        "VernacExtend",
                        "810aa90e6fbfe412509c05f448e16342a54e6747"
                    ]
                },
                {
                    "command": [
                        "remember (K1.unsquash k) as uk.",
                        "VernacExtend",
                        "1cf4bac615ec41183b15faa7dfa5ee35eb8d75f0"
                    ]
                },
                {
                    "command": [
                        "destruct uk.",
                        "VernacExtend",
                        "f7123b9ea093cc2be5f0bd399d751fbc9e0cb2eb"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.unsquash_squash.",
                        "VernacExtend",
                        "36e60afc4fb808568297cd0cbb2c6ea589df002c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g_level_Z",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold g_Z.",
                        "VernacExtend",
                        "b3d436ac5be4b779d475c0643f364a654471d837"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.knot_level, K2.knot_level.",
                        "VernacExtend",
                        "810aa90e6fbfe412509c05f448e16342a54e6747"
                    ]
                },
                {
                    "command": [
                        "remember (K2.unsquash k) as uk.",
                        "VernacExtend",
                        "fa675c362f1646cbfa8d25aff49d8718e882748b"
                    ]
                },
                {
                    "command": [
                        "destruct uk.",
                        "VernacExtend",
                        "f7123b9ea093cc2be5f0bd399d751fbc9e0cb2eb"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.unsquash_squash.",
                        "VernacExtend",
                        "b9620529abdfd8c405ce9376ae8a687b65db26c7"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fZ_unsquash",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fF_Z, f_Z.",
                        "VernacExtend",
                        "59c43b427d430b5f37ac454f0a22987a1b173f9c"
                    ]
                },
                {
                    "command": [
                        "destruct U1 as [n F1].",
                        "VernacExtend",
                        "32e6ff5c29943122f7c01b087456e8ac7695fe19"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.unsquash_squash.",
                        "VernacExtend",
                        "36e60afc4fb808568297cd0cbb2c6ea589df002c"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (K2.approx n) (fF_Z F1)) with ((fmap F (K2.approx n) oo fmap F gZ_pred) F1) by trivial.",
                        "VernacExtend",
                        "48864be356714ffac3dac1862f5b8e3221374d29"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "assert (K2'.approx n oo gZ_pred = gZ_pred).",
                        "VernacExtend",
                        "f3508a744c0bb5d980c0967f8e742361da240f19"
                    ]
                },
                {
                    "command": [
                        "extensionality P1 k2.",
                        "VernacExtend",
                        "31e05d06371fe8abb88eb73d578572cb4ad2cf47"
                    ]
                },
                {
                    "command": [
                        "destruct k2.",
                        "VernacExtend",
                        "f082fc8f5b8f35f8eb355ee65076a465da986fd2"
                    ]
                },
                {
                    "command": [
                        "unfold gZ_pred, compose, K2'.approx; simpl.",
                        "VernacExtend",
                        "ac2b3f41bedcf40e4b29ad8221be85b948156cda"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec n (level k)); auto.",
                        "VernacExtend",
                        "403253d7b15520b870d3c59ce334296005ca41b5"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "f_inj",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((g oo f) ka = (g oo f) kb) by (unfold compose; rewrite H1; trivial).",
                        "VernacExtend",
                        "77db37dc99362c1e8b335d6c87242d87f56f13eb"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite iso1 in H2; trivial.",
                        "VernacExtend",
                        "0bd7938ee13742bec10e3e80c486460dddd578e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g_inj",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((f oo g) ka = (f oo g) kb) by (unfold compose; rewrite H1; trivial).",
                        "VernacExtend",
                        "2413e838ae452a7d73b848361d05e218386f8922"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite iso2 in H2; trivial.",
                        "VernacExtend",
                        "30862e3b15860a17428e6f868282754674e99936"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "f_surj",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (g k2).",
                        "VernacExtend",
                        "87bc98eb61d75367c272fed9ed885ae8bb61ddee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- iso2; trivial.",
                        "VernacExtend",
                        "ca02cc3f340d551efaf6daa20e4aecfb6d99408c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g_surj",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (f k1).",
                        "VernacExtend",
                        "29ce24aeb7a164739e8cc75fb35ec623c05a9d6a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- iso1; trivial.",
                        "VernacExtend",
                        "5e873e91f3346bf90e59e13ab09254e9170becfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predn_iso1",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality p k.",
                        "VernacExtend",
                        "c279e4dd070e1f398d1330776c39345ee755dbb7"
                    ]
                },
                {
                    "command": [
                        "unfold g_pred', f_pred', compose in *.",
                        "VernacExtend",
                        "265abf71a48b8c8d7431530cc6a2631b4e8e5d5f"
                    ]
                },
                {
                    "command": [
                        "destruct k.",
                        "VernacExtend",
                        "276a2174e55489a07c8e0fd8db1630e98ae9c376"
                    ]
                },
                {
                    "command": [
                        "unfold K2'.approx, map_pair, id; simpl.",
                        "VernacExtend",
                        "d2cb034e9901fe65d8ad6fea1d0885cd48e193ae"
                    ]
                },
                {
                    "command": [
                        "unfold K1'.approx; simpl.",
                        "VernacExtend",
                        "3a9fbcd0652e01b6797f7a6f7bbc1984d672950b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- f_level.",
                        "VernacExtend",
                        "5a404df08f5a39663b444ac414ac8ad53c194c3a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec m (level k)); auto.",
                        "VernacExtend",
                        "3be4346e48067bb0e097e8488423f9e7ac7f642d"
                    ]
                },
                {
                    "command": [
                        "rewrite iso1; auto.",
                        "VernacExtend",
                        "487a6c19832688925d2a9522b253edd47f6451a0"
                    ]
                },
                {
                    "command": [
                        "simpl; omega.",
                        "VernacExtend",
                        "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predn_iso2",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality p k.",
                        "VernacExtend",
                        "c279e4dd070e1f398d1330776c39345ee755dbb7"
                    ]
                },
                {
                    "command": [
                        "unfold g_pred', f_pred', compose in *.",
                        "VernacExtend",
                        "265abf71a48b8c8d7431530cc6a2631b4e8e5d5f"
                    ]
                },
                {
                    "command": [
                        "destruct k.",
                        "VernacExtend",
                        "276a2174e55489a07c8e0fd8db1630e98ae9c376"
                    ]
                },
                {
                    "command": [
                        "unfold K1'.approx, map_pair, id; simpl.",
                        "VernacExtend",
                        "46bed6ed7e4927b6c7a42cc1a6118073d2cd67b5"
                    ]
                },
                {
                    "command": [
                        "unfold K2'.approx; simpl.",
                        "VernacExtend",
                        "dafba348352aa86f886a5ef1c35b98f6d825c2ca"
                    ]
                },
                {
                    "command": [
                        "rewrite <- g_level.",
                        "VernacExtend",
                        "675560ef9a237b89198d32a0f1a637adc8596149"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec m (level k)); auto.",
                        "VernacExtend",
                        "3be4346e48067bb0e097e8488423f9e7ac7f642d"
                    ]
                },
                {
                    "command": [
                        "rewrite iso2; auto.",
                        "VernacExtend",
                        "6b2b15dfdd28b6a77e43fca081284e7dc284a054"
                    ]
                },
                {
                    "command": [
                        "simpl; omega.",
                        "VernacExtend",
                        "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iso1_Sn",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold compose, g_Sn, f_Sn.",
                        "VernacExtend",
                        "b083ef36b3b4747484aced0432f1b5dd4a2019ff"
                    ]
                },
                {
                    "command": [
                        "remember (K1.unsquash k) as unsq_k.",
                        "VernacExtend",
                        "5908a95b60afa4649e4668be304acaf1aa96ea90"
                    ]
                },
                {
                    "command": [
                        "destruct unsq_k as [n0 Fp].",
                        "VernacExtend",
                        "cfa97abc0382c415c271e724436f396901f99738"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.unsquash_squash.",
                        "VernacExtend",
                        "36e60afc4fb808568297cd0cbb2c6ea589df002c"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.knot_level in H.",
                        "VernacExtend",
                        "d49070f7430019125ae5e6191fcfa90092cc1012"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hequnsq_k in H.",
                        "VernacExtend",
                        "22f40105559db5d89fae9031c22550eb6f312cf8"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (K2.approx n0) (f_F' g Fp)) with ((fmap F (K2.approx n0) oo (fmap F (f_pred' g))) Fp) by trivial.",
                        "VernacExtend",
                        "20e56c163e8cc99cffa3babe9a34c1350c6a4391"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "replace (g_F' f (fmap F (K2.approx n0 oo f_pred' g) Fp)) with ((fmap F (g_pred' f) oo fmap F (K2.approx n0 oo f_pred' g)) Fp) by trivial.",
                        "VernacExtend",
                        "0594cd5fe03d6b472491604253f89571bd6654db"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "symmetry in Hequnsq_k.",
                        "VernacExtend",
                        "b77e1cc8ddb7cc8a0dd92d6fc07c02769546690d"
                    ]
                },
                {
                    "command": [
                        "rewrite predn_iso1; trivial.",
                        "VernacExtend",
                        "81ab397e2695419e2f797522229d61caf65854f4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (K1L.unsquash_approx Hequnsq_k).",
                        "VernacExtend",
                        "d9491727807c33c0248fb22d41f2b4567661a110"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hequnsq_k.",
                        "VernacExtend",
                        "b3681207670a461bf7ec85b40f7ff3cad200aa0e"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.squash_unsquash.",
                        "VernacExtend",
                        "9210dfc16ee30510a6ca96a57f054d3f32119c24"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iso2_Sn",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold compose, g_Sn, f_Sn.",
                        "VernacExtend",
                        "b083ef36b3b4747484aced0432f1b5dd4a2019ff"
                    ]
                },
                {
                    "command": [
                        "remember (K2.unsquash k) as unsq_k.",
                        "VernacExtend",
                        "3dad248db5c147a30b7bb57f3eb0a53b2933457a"
                    ]
                },
                {
                    "command": [
                        "destruct unsq_k as [n0 Fp].",
                        "VernacExtend",
                        "cfa97abc0382c415c271e724436f396901f99738"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.unsquash_squash.",
                        "VernacExtend",
                        "b9620529abdfd8c405ce9376ae8a687b65db26c7"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.knot_level in H.",
                        "VernacExtend",
                        "de5a06d47443f7f815247b5d12bb16297d9d743f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hequnsq_k in H.",
                        "VernacExtend",
                        "22f40105559db5d89fae9031c22550eb6f312cf8"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (K1.approx n0) (g_F' f Fp)) with ((fmap F (K1.approx n0) oo (fmap F (g_pred' f))) Fp) by trivial.",
                        "VernacExtend",
                        "a266438d0635631e8fdc73de1730c54a2f947c5e"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "replace (f_F' g (fmap F (K1.approx n0 oo g_pred' f) Fp)) with ((fmap F (f_pred' g) oo fmap F (K1.approx n0 oo g_pred' f)) Fp) by trivial.",
                        "VernacExtend",
                        "caa47edef37c8ca8f92940be720e4348e8681609"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "symmetry in Hequnsq_k.",
                        "VernacExtend",
                        "b77e1cc8ddb7cc8a0dd92d6fc07c02769546690d"
                    ]
                },
                {
                    "command": [
                        "rewrite predn_iso2; trivial.",
                        "VernacExtend",
                        "58b13f8158798f7c8eea60adb3adc9dbdd27728c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (K2L.unsquash_approx Hequnsq_k).",
                        "VernacExtend",
                        "ccede1605a4664202284cefbcd63f727b189304d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hequnsq_k.",
                        "VernacExtend",
                        "b3681207670a461bf7ec85b40f7ff3cad200aa0e"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.squash_unsquash.",
                        "VernacExtend",
                        "fd7af8c129c505c2d54802eb2c46567c5cefcfc9"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "f_level_Sn",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold f_Sn.",
                        "VernacExtend",
                        "11635717e26bcfb81d01d7a74ec1beba3317987b"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.knot_level, K2.knot_level.",
                        "VernacExtend",
                        "810aa90e6fbfe412509c05f448e16342a54e6747"
                    ]
                },
                {
                    "command": [
                        "remember (K1.unsquash k) as uk.",
                        "VernacExtend",
                        "1cf4bac615ec41183b15faa7dfa5ee35eb8d75f0"
                    ]
                },
                {
                    "command": [
                        "destruct uk.",
                        "VernacExtend",
                        "f7123b9ea093cc2be5f0bd399d751fbc9e0cb2eb"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.unsquash_squash.",
                        "VernacExtend",
                        "36e60afc4fb808568297cd0cbb2c6ea589df002c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g_level_Sn",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold g_Sn.",
                        "VernacExtend",
                        "14d6f4306cb12c8b78843ab9948176acb1d368e5"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.knot_level, K2.knot_level.",
                        "VernacExtend",
                        "810aa90e6fbfe412509c05f448e16342a54e6747"
                    ]
                },
                {
                    "command": [
                        "remember (K2.unsquash k) as uk.",
                        "VernacExtend",
                        "fa675c362f1646cbfa8d25aff49d8718e882748b"
                    ]
                },
                {
                    "command": [
                        "destruct uk.",
                        "VernacExtend",
                        "f7123b9ea093cc2be5f0bd399d751fbc9e0cb2eb"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.unsquash_squash.",
                        "VernacExtend",
                        "b9620529abdfd8c405ce9376ae8a687b65db26c7"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fn_iso2",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold g_F', f_F'.",
                        "VernacExtend",
                        "30c4294d4de74ed9ddf2febc43819cda36e78029"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite fmap_comp.",
                        "VernacExtend",
                        "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
                    ]
                },
                {
                    "command": [
                        "replace (g_pred' f oo f_pred' g oo K1.approx m) with (K1.approx m); trivial.",
                        "VernacExtend",
                        "c1327165ebf5fd92f46ac476e6b1cdc716deff61"
                    ]
                },
                {
                    "command": [
                        "rewrite f_pred'_approx; trivial.",
                        "VernacExtend",
                        "8a690f8e0d4e0b292d964c4cfffa2db3eee3f880"
                    ]
                },
                {
                    "command": [
                        "rewrite predn_iso1; trivial.",
                        "VernacExtend",
                        "81ab397e2695419e2f797522229d61caf65854f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gn_unsquash",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct U2 as [m F2].",
                        "VernacExtend",
                        "41823d11ba368fec76bd901032d5cc05033401ea"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize (fn_unsquash (g k2)); intro.",
                        "VernacExtend",
                        "af074c4ea975f691cec3c258c974b77e2afceadd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- g_level in H1.",
                        "VernacExtend",
                        "aae7699704d6ada58d0e0689d1e51dfbd91973bc"
                    ]
                },
                {
                    "command": [
                        "remember (g k2) as k1.",
                        "VernacExtend",
                        "6ea35da136652abb8a6190714c94f79a2a7d62b2"
                    ]
                },
                {
                    "command": [
                        "specialize ( H1 H (K1.unsquash k1)).",
                        "VernacExtend",
                        "6e02ae981ddf0c3bb56b81676b760442a5975529"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "assert (f k1 = (f oo g) k2) by (unfold compose; congruence).",
                        "VernacExtend",
                        "bb7e1c891f4a652f01edbb3bdc4448c732a53cc3"
                    ]
                },
                {
                    "command": [
                        "rewrite iso2 in H2; trivial.",
                        "VernacExtend",
                        "96adc012ca7402a31e5bed5d33c35dc453a054f3"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H1.",
                        "VernacExtend",
                        "dcb7a323484c05dcc42cd7ac9b61b0b20729d4c5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0 in H1.",
                        "VernacExtend",
                        "4fd96e44cebf12ed54f04eab25bf9cc759759cbd"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections; simpl; trivial.",
                        "VernacExtend",
                        "e10223db827615a376383ac52b707910a744cc07"
                    ]
                },
                {
                    "command": [
                        "remember (K1.unsquash k1) as U1.",
                        "VernacExtend",
                        "b6488616cab0aa74476478abe12af7e27cc0d8f8"
                    ]
                },
                {
                    "command": [
                        "replace (g_F' f (f_F' g (snd U1))) with ((g_F' f oo f_F' g) (snd U1)) by trivial.",
                        "VernacExtend",
                        "d88a84d97aa1661ef2e0c367569ba0cef8fcd0e5"
                    ]
                },
                {
                    "command": [
                        "destruct U1 as [m' F1].",
                        "VernacExtend",
                        "d833221e327fbe5066973d4530f8a5ae0022fba9"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "subst m'.",
                        "VernacExtend",
                        "9d802df24f716ad892031bcb0e44244435522c66"
                    ]
                },
                {
                    "command": [
                        "clear H1.",
                        "VernacExtend",
                        "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
                    ]
                },
                {
                    "command": [
                        "symmetry in HeqU1.",
                        "VernacExtend",
                        "98e718bdf862ed4fcaf0cfc6fc41c523119dd7b4"
                    ]
                },
                {
                    "command": [
                        "generalize (K1L.unsquash_approx HeqU1); intro.",
                        "VernacExtend",
                        "4bc1a85b50a63374f5322608b43d1da028f1883f"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "replace ((g_F' f oo f_F' g) (fmap F (K1'.approx m) F1)) with ((g_F' f oo f_F' g oo fmap F (K1.approx m)) F1) by trivial.",
                        "VernacExtend",
                        "00e3b92fda2937147a5dece0fdc1fd488487d7c3"
                    ]
                },
                {
                    "command": [
                        "rewrite Fn_iso2.",
                        "VernacExtend",
                        "b6e38cf8b67b4a912bd4a8667a617cde207d803c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.knot_level in H.",
                        "VernacExtend",
                        "de5a06d47443f7f815247b5d12bb16297d9d743f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0 in H.",
                        "VernacExtend",
                        "a6c391ea2ef389fc353ff5fa2171f50bd2b9da41"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gn_squash",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (K1L.unsquash_inj).",
                        "VernacExtend",
                        "aeb03866270b49e526cf555a04c84c4d821c2657"
                    ]
                },
                {
                    "command": [
                        "assert (level (K2.squash (m , F2)) <= n) by (simpl; rewrite K2.knot_level; rewrite K2.unsquash_squash; simpl; trivial).",
                        "VernacExtend",
                        "55a96b94d82be1235ee4d91586cbccad302a7365"
                    ]
                },
                {
                    "command": [
                        "rewrite (gn_unsquash (K2'.squash (m, F2)) H0 (K2.unsquash (K2'.squash (m, F2)))); trivial.",
                        "VernacExtend",
                        "a7df9af3dad0398f5a92647f6b010cd3338d271c"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.unsquash_squash.",
                        "VernacExtend",
                        "b9620529abdfd8c405ce9376ae8a687b65db26c7"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.unsquash_squash.",
                        "VernacExtend",
                        "36e60afc4fb808568297cd0cbb2c6ea589df002c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (g_F' f (fmap F (K2'.approx m) F2)) with ((fmap F (g_pred' f) oo (fmap F (K2.approx m))) F2) by trivial.",
                        "VernacExtend",
                        "dea890209a70e582b766f83d10a7c33f94cdf1f7"
                    ]
                },
                {
                    "command": [
                        "replace (m, fmap F (K1'.approx m) (g_F' f F2)) with (m, (fmap F (K1.approx m) oo fmap F (g_pred' f)) F2) by trivial.",
                        "VernacExtend",
                        "8d62e787a79420d4a465fc05fa27fbebe25edb7d"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite fmap_comp.",
                        "VernacExtend",
                        "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections; simpl; trivial.",
                        "VernacExtend",
                        "e10223db827615a376383ac52b707910a744cc07"
                    ]
                },
                {
                    "command": [
                        "rewrite g_pred'_approx; trivial.",
                        "VernacExtend",
                        "a8b254c7732320c1a0f423e959c91b53ff985d27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fSn_unsquash",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold f_Sn.",
                        "VernacExtend",
                        "11635717e26bcfb81d01d7a74ec1beba3317987b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "destruct U1 as [m F1].",
                        "VernacExtend",
                        "67408773b850b0639a59cddb1e9728d198277705"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.unsquash_squash.",
                        "VernacExtend",
                        "36e60afc4fb808568297cd0cbb2c6ea589df002c"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections; simpl; trivial.",
                        "VernacExtend",
                        "e10223db827615a376383ac52b707910a744cc07"
                    ]
                },
                {
                    "command": [
                        "unfold f_F'.",
                        "VernacExtend",
                        "5759e171ffbb12cd2b5f11f0b7e82d90a48e43ec"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (K2'.approx m) (fmap F (f_pred' g) F1)) with ((fmap F (K2.approx m) oo fmap F (f_pred' g)) F1) by trivial.",
                        "VernacExtend",
                        "1161b51ff8aa17ddb8058041d969133a0b93ae95"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.knot_level in H.",
                        "VernacExtend",
                        "d49070f7430019125ae5e6191fcfa90092cc1012"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0 in H.",
                        "VernacExtend",
                        "a6c391ea2ef389fc353ff5fa2171f50bd2b9da41"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "symmetry in H0.",
                        "VernacExtend",
                        "6a4628a15502c5c72b4290e332e792b1559a4eae"
                    ]
                },
                {
                    "command": [
                        "generalize (K1L.unsquash_approx H0); intro.",
                        "VernacExtend",
                        "4e2fc20d24714f80bf7ce1fab04f51dfad051964"
                    ]
                },
                {
                    "command": [
                        "pattern F1 at 2.",
                        "VernacExtend",
                        "dd7fd939ac95ef58e9a3d52071af45319574ff73"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (f_pred' g_Sn) (fmap F (K1'.approx m) F1)) with ((fmap F (f_pred' g_Sn) oo fmap F (K1.approx m)) F1) by trivial.",
                        "VernacExtend",
                        "46e114d127f9db0c8ac395b43f9e6c9aa81c0dd1"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "assert (K2'.approx m oo f_pred' g = f_pred' g_Sn oo K1.approx m); try congruence.",
                        "VernacExtend",
                        "5e04ce5110138a14e31531bc94cac24eca6bdcfc"
                    ]
                },
                {
                    "command": [
                        "extensionality p1 k2.",
                        "VernacExtend",
                        "5ae41c009083c70c7a03be91400f7f0b40438027"
                    ]
                },
                {
                    "command": [
                        "destruct k2.",
                        "VernacExtend",
                        "f082fc8f5b8f35f8eb355ee65076a465da986fd2"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold f_pred', compose, K1.approx, K2.approx, g_Sn; simpl.",
                        "VernacExtend",
                        "71fc586a59e0f53c80cb5c96ede7a3e931618e8c"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.knot_level, K2'.knot_level; unfold g_Sn; simpl.",
                        "VernacExtend",
                        "fafd2ba87591d85fe4716cd39f53c9f159ea3f2f"
                    ]
                },
                {
                    "command": [
                        "unfold map_pair; simpl.",
                        "VernacExtend",
                        "d4e23ce0401957df85af5811828e6ddf9e8c8220"
                    ]
                },
                {
                    "command": [
                        "remember (K2.unsquash k) as uk2.",
                        "VernacExtend",
                        "9428eadd483cc9a02d88e8e20c1cedb9d68db331"
                    ]
                },
                {
                    "command": [
                        "destruct uk2 as [m' F2].",
                        "VernacExtend",
                        "52238bf5ab57b71bd59557ec5b99ca8916d07225"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.unsquash_squash.",
                        "VernacExtend",
                        "b9620529abdfd8c405ce9376ae8a687b65db26c7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec m m'); auto.",
                        "VernacExtend",
                        "3eeb99733579e874e8f0372b263f05d3d7ea6421"
                    ]
                },
                {
                    "command": [
                        "unfold id.",
                        "VernacExtend",
                        "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- gn_squash in *; [ | omega ].",
                        "VernacExtend",
                        "f617844b6e5e44afeac49d6f20540a0a6115b7bc"
                    ]
                },
                {
                    "command": [
                        "rewrite Hequk2.",
                        "VernacExtend",
                        "ce086172ff7f6b564d5107cef8864613db4d87b2"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.squash_unsquash; trivial.",
                        "VernacExtend",
                        "bc0351195e9e3580ccb07432f4bc964cd0f0b48e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gn_gSn_eq_n",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold g_Sn.",
                        "VernacExtend",
                        "14d6f4306cb12c8b78843ab9948176acb1d368e5"
                    ]
                },
                {
                    "command": [
                        "remember (K2.unsquash k) as usqk.",
                        "VernacExtend",
                        "058f422c72a5c03603925b45c449b12e11f2e62a"
                    ]
                },
                {
                    "command": [
                        "destruct usqk.",
                        "VernacExtend",
                        "1ce1e26c2cd24433605642125e0704e85527452f"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.knot_level in H.",
                        "VernacExtend",
                        "de5a06d47443f7f815247b5d12bb16297d9d743f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hequsqk in H.",
                        "VernacExtend",
                        "8dbaf19cd92206933fda63827da0728922f29197"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- gn_squash; try omega.",
                        "VernacExtend",
                        "7c0846640949f4e586f32be1d820139c4f64c00d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hequsqk.",
                        "VernacExtend",
                        "faff4ad2f1804b06afee3f6658daaa5149ffa639"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.squash_unsquash.",
                        "VernacExtend",
                        "fd7af8c129c505c2d54802eb2c46567c5cefcfc9"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fg_level_fst",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "apply f_level_Z.",
                        "VernacExtend",
                        "75be2b759b6c1cce8c3e900dfe73271c2fbdab35"
                    ]
                },
                {
                    "command": [
                        "unfold fg.",
                        "VernacExtend",
                        "907bb006cac063581e49994d99643f5f562eea7f"
                    ]
                },
                {
                    "command": [
                        "fold fg.",
                        "VernacExtend",
                        "1c430e2acf42f4290ee5cb3c67eb98e012484e6c"
                    ]
                },
                {
                    "command": [
                        "destruct (fg n).",
                        "VernacExtend",
                        "06c17fde548b198cf5a1e271adab511062280ae9"
                    ]
                },
                {
                    "command": [
                        "apply f_level_Sn.",
                        "VernacExtend",
                        "55b3f335f7fa7e7a799e9eaab065cdc82c4e2893"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fg_level_snd",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "apply g_level_Z.",
                        "VernacExtend",
                        "45c8d910d10ddbb59b646a259c8f3512dedbc962"
                    ]
                },
                {
                    "command": [
                        "unfold fg.",
                        "VernacExtend",
                        "907bb006cac063581e49994d99643f5f562eea7f"
                    ]
                },
                {
                    "command": [
                        "fold fg.",
                        "VernacExtend",
                        "1c430e2acf42f4290ee5cb3c67eb98e012484e6c"
                    ]
                },
                {
                    "command": [
                        "destruct (fg n).",
                        "VernacExtend",
                        "06c17fde548b198cf5a1e271adab511062280ae9"
                    ]
                },
                {
                    "command": [
                        "apply g_level_Sn.",
                        "VernacExtend",
                        "42363c38d79fcc4996824484fcc07a8b66ca9c23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fg_id",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "unfold fg.",
                        "VernacExtend",
                        "907bb006cac063581e49994d99643f5f562eea7f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite iso2_Z; trivial.",
                        "VernacExtend",
                        "c939786b33b10df6c364f5740e069cdc28c4aa88"
                    ]
                },
                {
                    "command": [
                        "unfold fg.",
                        "VernacExtend",
                        "907bb006cac063581e49994d99643f5f562eea7f"
                    ]
                },
                {
                    "command": [
                        "fold fg.",
                        "VernacExtend",
                        "1c430e2acf42f4290ee5cb3c67eb98e012484e6c"
                    ]
                },
                {
                    "command": [
                        "remember (fg n) as fgn.",
                        "VernacExtend",
                        "834e305595362533a7f604b26a7a64610406c5f3"
                    ]
                },
                {
                    "command": [
                        "destruct fgn as [fn gn].",
                        "VernacExtend",
                        "7af205278021be453427472abd3c8f5a3877d777"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (iso2_Sn fn gn n); trivial; try omega.",
                        "VernacExtend",
                        "b4ceb43147dd6efe2f8ab1df1d3e98c07e3f766c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "unfold fg in Heqfgn.",
                        "VernacExtend",
                        "a1d40307e8afa63826080eb68d91fa79170ab810"
                    ]
                },
                {
                    "command": [
                        "inversion Heqfgn.",
                        "VernacExtend",
                        "01397eef90bde6a6453b80dc85dfd9247aad1669"
                    ]
                },
                {
                    "command": [
                        "apply g_level_Z.",
                        "VernacExtend",
                        "45c8d910d10ddbb59b646a259c8f3512dedbc962"
                    ]
                },
                {
                    "command": [
                        "unfold fg in Heqfgn.",
                        "VernacExtend",
                        "a1d40307e8afa63826080eb68d91fa79170ab810"
                    ]
                },
                {
                    "command": [
                        "fold fg in Heqfgn.",
                        "VernacExtend",
                        "c6fe4faff7bb45a8e9c79782524956f76d9406bc"
                    ]
                },
                {
                    "command": [
                        "destruct (fg n).",
                        "VernacExtend",
                        "06c17fde548b198cf5a1e271adab511062280ae9"
                    ]
                },
                {
                    "command": [
                        "inversion Heqfgn.",
                        "VernacExtend",
                        "01397eef90bde6a6453b80dc85dfd9247aad1669"
                    ]
                },
                {
                    "command": [
                        "apply g_level_Sn.",
                        "VernacExtend",
                        "42363c38d79fcc4996824484fcc07a8b66ca9c23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gf_id",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "unfold fg.",
                        "VernacExtend",
                        "907bb006cac063581e49994d99643f5f562eea7f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite iso1_Z; trivial.",
                        "VernacExtend",
                        "b211b250523f497ebeec2c8cd0af7ffc75278b0c"
                    ]
                },
                {
                    "command": [
                        "unfold fg.",
                        "VernacExtend",
                        "907bb006cac063581e49994d99643f5f562eea7f"
                    ]
                },
                {
                    "command": [
                        "fold fg.",
                        "VernacExtend",
                        "1c430e2acf42f4290ee5cb3c67eb98e012484e6c"
                    ]
                },
                {
                    "command": [
                        "remember (fg n) as fgn.",
                        "VernacExtend",
                        "834e305595362533a7f604b26a7a64610406c5f3"
                    ]
                },
                {
                    "command": [
                        "destruct fgn as [fn gn].",
                        "VernacExtend",
                        "7af205278021be453427472abd3c8f5a3877d777"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (iso1_Sn fn gn n); trivial; try omega.",
                        "VernacExtend",
                        "edb732ae0d3f21c040435cdfb058cf03094de28b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "unfold fg in Heqfgn.",
                        "VernacExtend",
                        "a1d40307e8afa63826080eb68d91fa79170ab810"
                    ]
                },
                {
                    "command": [
                        "inversion Heqfgn.",
                        "VernacExtend",
                        "01397eef90bde6a6453b80dc85dfd9247aad1669"
                    ]
                },
                {
                    "command": [
                        "apply f_level_Z.",
                        "VernacExtend",
                        "75be2b759b6c1cce8c3e900dfe73271c2fbdab35"
                    ]
                },
                {
                    "command": [
                        "unfold fg in Heqfgn.",
                        "VernacExtend",
                        "a1d40307e8afa63826080eb68d91fa79170ab810"
                    ]
                },
                {
                    "command": [
                        "fold fg in Heqfgn.",
                        "VernacExtend",
                        "c6fe4faff7bb45a8e9c79782524956f76d9406bc"
                    ]
                },
                {
                    "command": [
                        "destruct (fg n).",
                        "VernacExtend",
                        "06c17fde548b198cf5a1e271adab511062280ae9"
                    ]
                },
                {
                    "command": [
                        "inversion Heqfgn.",
                        "VernacExtend",
                        "01397eef90bde6a6453b80dc85dfd9247aad1669"
                    ]
                },
                {
                    "command": [
                        "apply f_level_Sn.",
                        "VernacExtend",
                        "55b3f335f7fa7e7a799e9eaab065cdc82c4e2893"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fg_fst_unsquash",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "induction n; unfold fg; fold fg; simpl; intros.",
                        "VernacExtend",
                        "47915c4ef3cadec3a9ce26403f8f8f0d12db1418"
                    ]
                },
                {
                    "command": [
                        "rewrite (fZ_unsquash k H U1 H0).",
                        "VernacExtend",
                        "ebcbe06172edd954b2b5a4ec08dbd4e48c1d7722"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections; simpl; trivial.",
                        "VernacExtend",
                        "e10223db827615a376383ac52b707910a744cc07"
                    ]
                },
                {
                    "command": [
                        "unfold f_F', fF_Z.",
                        "VernacExtend",
                        "18f9363ede3b94ef31975da71a3330b8adc25a84"
                    ]
                },
                {
                    "command": [
                        "destruct U1 as [m F1].",
                        "VernacExtend",
                        "67408773b850b0639a59cddb1e9728d198277705"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in H; rewrite K1.knot_level in H.",
                        "VernacExtend",
                        "f6bb376316f2a46de4e6c49469e105373fbe7209"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0 in H.",
                        "VernacExtend",
                        "a6c391ea2ef389fc353ff5fa2171f50bd2b9da41"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assert (m = 0) by omega.",
                        "VernacExtend",
                        "60e21109a211af0c982ad4fcba9c2aee2723aaaf"
                    ]
                },
                {
                    "command": [
                        "subst m.",
                        "VernacExtend",
                        "9ba78b8037512180a4349842defa7f5fabdd6010"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "symmetry in H0.",
                        "VernacExtend",
                        "6a4628a15502c5c72b4290e332e792b1559a4eae"
                    ]
                },
                {
                    "command": [
                        "generalize (K1L.unsquash_approx H0); intro.",
                        "VernacExtend",
                        "4e2fc20d24714f80bf7ce1fab04f51dfad051964"
                    ]
                },
                {
                    "command": [
                        "pattern F1 at 2.",
                        "VernacExtend",
                        "dd7fd939ac95ef58e9a3d52071af45319574ff73"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (f_pred' g_Z) (fmap F (K1'.approx 0) F1)) with ((fmap F (f_pred' g_Z) oo fmap F (K1.approx 0)) F1) by trivial.",
                        "VernacExtend",
                        "963d699ba60f3d360c65c0b0d34acc6a6b0ad0fc"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "replace (f_pred' g_Z oo K1'.approx 0) with gZ_pred; trivial.",
                        "VernacExtend",
                        "45f0e55d22948e39b0fdd8673d6a1b5e10206a04"
                    ]
                },
                {
                    "command": [
                        "remember (fg n) as fgn.",
                        "VernacExtend",
                        "834e305595362533a7f604b26a7a64610406c5f3"
                    ]
                },
                {
                    "command": [
                        "destruct fgn as [fn gn].",
                        "VernacExtend",
                        "7af205278021be453427472abd3c8f5a3877d777"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "replace gn with (snd (fg n)) by (rewrite <- Heqfgn; trivial).",
                        "VernacExtend",
                        "50d5cfd3dbd56f4e0ed44c211261e847cf917aed"
                    ]
                },
                {
                    "command": [
                        "generalize (fSn_unsquash (fst (fg n)) (snd (fg n)) n (gf_id n) (fg_id n) (fg_level_fst n) (fg_level_snd n)); intro.",
                        "VernacExtend",
                        "810a761a27742ecb4919a573b45037fdc5715d3b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heqfgn in H1.",
                        "VernacExtend",
                        "58e7396bb67d40887a18c075a0cfd254be803fa0"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "replace (n + 1) with (S n) in H1 by omega.",
                        "VernacExtend",
                        "2174076ac0a22d344c03da23819daace7708f10c"
                    ]
                },
                {
                    "command": [
                        "specialize ( H1 IHn k H U1 H0).",
                        "VernacExtend",
                        "30f871d0bbbbe72373db259c92a01b3ac4ce8692"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heqfgn.",
                        "VernacExtend",
                        "2ef0241e1029a8f252f80fd53f5e9748cc85d341"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fg_fg_eq",
            "line_nb": 482,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (exists m, level k2 + m = n).",
                        "VernacExtend",
                        "29a2ccfae8b85011ffb083333f0be8b4f0460300"
                    ]
                },
                {
                    "command": [
                        "remember (level k2) as m.",
                        "VernacExtend",
                        "44658dc821d0f240132cd2d46140c4d4a215c2c7"
                    ]
                },
                {
                    "command": [
                        "clear -H.",
                        "VernacExtend",
                        "0feb8621f12176e9894f4f3ff86ecf0003739aed"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "assert (m = n \\/ m < n) by omega.",
                        "VernacExtend",
                        "f842e71e2de3a38d9422a676a115c27b446871bc"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (IHn H) as [m0 ?].",
                        "VernacExtend",
                        "7785280d22c6556b7f34f324c919adc7654278dc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "exists (m0 + 1).",
                        "VernacExtend",
                        "12d0656ff21d75fd5f876908f759ec814e0e88b9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [m ?].",
                        "VernacExtend",
                        "7852d64e2102d6f4f674a249a22c3cac6bce880c"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "revert m H0.",
                        "VernacExtend",
                        "8613834a9e0628a20c0e4608cb354a678df5c460"
                    ]
                },
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "replace (level k2) with 0 by omega; trivial.",
                        "VernacExtend",
                        "1b54614a2a23b8af0998b0b3c24a8b24bd68a3f8"
                    ]
                },
                {
                    "command": [
                        "destruct m.",
                        "VernacExtend",
                        "8d29a39ed817a734f6646f7b42c80e41363356d4"
                    ]
                },
                {
                    "command": [
                        "replace (level k2 + 0) with (level k2) in H0 by trivial.",
                        "VernacExtend",
                        "03829312c3fc631c1c49eb889811b45005d625f8"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "specialize ( IHn m).",
                        "VernacExtend",
                        "6e7ea0584ea73b260a29ea0185dbbfdbe9a429e7"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; try omega.",
                        "VernacExtend",
                        "5fadc3e2826b90495ed1b30d2dedfc86bd60240a"
                    ]
                },
                {
                    "command": [
                        "unfold fg; fold fg.",
                        "VernacExtend",
                        "b83526d4f85b9cb88f99eb315df3295407a1fd5e"
                    ]
                },
                {
                    "command": [
                        "remember (fg n) as fgn.",
                        "VernacExtend",
                        "834e305595362533a7f604b26a7a64610406c5f3"
                    ]
                },
                {
                    "command": [
                        "destruct fgn as [fn gn].",
                        "VernacExtend",
                        "7af205278021be453427472abd3c8f5a3877d777"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize (gn_gSn_eq_n (fst (fg n)) (snd (fg n)) n (gf_id n) (fg_id n) (fg_level_fst n) (fg_level_snd n) (fg_fst_unsquash n)); intro.",
                        "VernacExtend",
                        "37c0aafec0a114d203eb66e27806036954e678f3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heqfgn in H.",
                        "VernacExtend",
                        "844b042f1c91ffd825d114f0e079d8fa4e6420c2"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iso1",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "extensionality k.",
                        "VernacExtend",
                        "3d0435f326186ec7f64a04595b4266d139fac42d"
                    ]
                },
                {
                    "command": [
                        "unfold id.",
                        "VernacExtend",
                        "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
                    ]
                },
                {
                    "command": [
                        "unfold compose, f, g.",
                        "VernacExtend",
                        "ea6b4c5811e3caa002a50077eaec2a7f666236ef"
                    ]
                },
                {
                    "command": [
                        "rewrite <- fg_level_snd.",
                        "VernacExtend",
                        "84d47119f2ff9036f52d8757c49abdc8f3b0145f"
                    ]
                },
                {
                    "command": [
                        "remember (level k) as n.",
                        "VernacExtend",
                        "001b3da097bff581244c27f2068e3bac6a96ef03"
                    ]
                },
                {
                    "command": [
                        "replace (fst (fg n) (snd (fg n) k)) with ((fst (fg n) oo snd (fg n)) k) by trivial.",
                        "VernacExtend",
                        "e9847bbefc59ea481d5b9c1df7eb7c429bbe8038"
                    ]
                },
                {
                    "command": [
                        "rewrite fg_id; trivial; omega.",
                        "VernacExtend",
                        "98f08501bccd0934169681a0539c25a04fa34427"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iso2",
            "line_nb": 535,
            "steps": [
                {
                    "command": [
                        "extensionality k.",
                        "VernacExtend",
                        "3d0435f326186ec7f64a04595b4266d139fac42d"
                    ]
                },
                {
                    "command": [
                        "unfold id.",
                        "VernacExtend",
                        "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
                    ]
                },
                {
                    "command": [
                        "unfold compose, f, g.",
                        "VernacExtend",
                        "ea6b4c5811e3caa002a50077eaec2a7f666236ef"
                    ]
                },
                {
                    "command": [
                        "rewrite <- fg_level_fst.",
                        "VernacExtend",
                        "fcbaab7766bdcd932f11ad31b0d9706ebb4fcae3"
                    ]
                },
                {
                    "command": [
                        "remember (level k) as n.",
                        "VernacExtend",
                        "001b3da097bff581244c27f2068e3bac6a96ef03"
                    ]
                },
                {
                    "command": [
                        "replace (snd (fg n) (fst (fg n) k)) with ((snd (fg n) oo fst (fg n)) k) by trivial.",
                        "VernacExtend",
                        "c6988d680d8fa4926c17a6108d897ba16d5ec7de"
                    ]
                },
                {
                    "command": [
                        "rewrite gf_id; trivial; omega.",
                        "VernacExtend",
                        "05181d8033f9f39b0ed1803662fe26bd00a71f94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fpred_gpred",
            "line_nb": 544,
            "steps": [
                {
                    "command": [
                        "extensionality P2 k2.",
                        "VernacExtend",
                        "8a07b4f77efcfa9a3f3fb36bdfd246bbd363fd6f"
                    ]
                },
                {
                    "command": [
                        "unfold id.",
                        "VernacExtend",
                        "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
                    ]
                },
                {
                    "command": [
                        "unfold g_pred', f_pred', map_pair, compose; simpl.",
                        "VernacExtend",
                        "79d8f4365ba8b8e50ab0b0ad227254f79368bb64"
                    ]
                },
                {
                    "command": [
                        "destruct k2; simpl.",
                        "VernacExtend",
                        "d409ffaefb82f8d909693df1bd34208647daea22"
                    ]
                },
                {
                    "command": [
                        "replace (f (g k)) with ((f oo g) k) by trivial.",
                        "VernacExtend",
                        "8ee07a162b7ba12da9ae7346fcffc7e5d1a8eb7b"
                    ]
                },
                {
                    "command": [
                        "rewrite iso1.",
                        "VernacExtend",
                        "dbd82dbb61ebca9a1724b37386a903087500bf03"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gpred_fpred",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "extensionality P1 k1.",
                        "VernacExtend",
                        "a098ae85ffe0a09322833d96c66dfc92c4ab420e"
                    ]
                },
                {
                    "command": [
                        "unfold id.",
                        "VernacExtend",
                        "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
                    ]
                },
                {
                    "command": [
                        "unfold g_pred', f_pred', compose.",
                        "VernacExtend",
                        "afa6feea09b1df508a6a7c58b895db18144faefa"
                    ]
                },
                {
                    "command": [
                        "unfold map_pair; simpl.",
                        "VernacExtend",
                        "d4e23ce0401957df85af5811828e6ddf9e8c8220"
                    ]
                },
                {
                    "command": [
                        "destruct k1; simpl.",
                        "VernacExtend",
                        "ecc88822be0daa0c8e9f6e2e8a0125c6aeaae9fb"
                    ]
                },
                {
                    "command": [
                        "replace (g (f k)) with ((g oo f) k) by trivial.",
                        "VernacExtend",
                        "a5f5fc5e3eb6f76c49fc6d2b9968a0b7cea1bc90"
                    ]
                },
                {
                    "command": [
                        "rewrite iso2.",
                        "VernacExtend",
                        "b44e894795fd31db9e2b35f4a17a6252c8d71ddb"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fiso1",
            "line_nb": 563,
            "steps": [
                {
                    "command": [
                        "extensionality F2.",
                        "VernacExtend",
                        "4663fa2d301b2d996be916cbf10e5ec1f46539fe"
                    ]
                },
                {
                    "command": [
                        "unfold id.",
                        "VernacExtend",
                        "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
                    ]
                },
                {
                    "command": [
                        "unfold fF, gF, f_F', g_F'.",
                        "VernacExtend",
                        "ecd701b0d74f92e9a8707d9607f8b18f91217188"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "rewrite fpred_gpred.",
                        "VernacExtend",
                        "c25fadac3ee23b4fd434f81b9563bcf3211327c6"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_id.",
                        "VernacExtend",
                        "a9e0c3265b704148750f798598b45a92b851ab66"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fiso2",
            "line_nb": 572,
            "steps": [
                {
                    "command": [
                        "extensionality F1.",
                        "VernacExtend",
                        "5e2572607c38f565b595253c01549bc340bbe7fd"
                    ]
                },
                {
                    "command": [
                        "unfold id.",
                        "VernacExtend",
                        "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
                    ]
                },
                {
                    "command": [
                        "unfold fF, gF, f_F', g_F'.",
                        "VernacExtend",
                        "ecd701b0d74f92e9a8707d9607f8b18f91217188"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_comp.",
                        "VernacExtend",
                        "7e305ab9a6d0a3b5d5e20e5e63eab80333135747"
                    ]
                },
                {
                    "command": [
                        "rewrite gpred_fpred.",
                        "VernacExtend",
                        "c801743f9e53228a2bc05dc0cf9e28bfa61f5ad1"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_id.",
                        "VernacExtend",
                        "a9e0c3265b704148750f798598b45a92b851ab66"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "f_level",
            "line_nb": 581,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold f.",
                        "VernacExtend",
                        "54a386f4161710b69df4a2025df24a14e842ecf2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fg_level_fst (level k)).",
                        "VernacExtend",
                        "5f4ee4c8232c96a45bea2b20ee2ec7c4949734af"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g_level",
            "line_nb": 587,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold g.",
                        "VernacExtend",
                        "fd78415b188602b878d030c2cbc915af33ab1e1d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fg_level_snd (level k)).",
                        "VernacExtend",
                        "1425c92b5476c368648a591fc91adbcbe98d5c5e"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "f_unsquash",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct U1 as [n F1].",
                        "VernacExtend",
                        "32e6ff5c29943122f7c01b087456e8ac7695fe19"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold f; simpl; rewrite K1.knot_level.",
                        "VernacExtend",
                        "2549ea21bfcff2c39b702d58cfe2ba331dca5218"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (level k1 <= n) by (rewrite K1.knot_level; rewrite <- H; trivial).",
                        "VernacExtend",
                        "18c51ef7335f61d516d002cdfbf009ba91c04086"
                    ]
                },
                {
                    "command": [
                        "rewrite (fg_fst_unsquash n k1 H0 (n, F1)); trivial.",
                        "VernacExtend",
                        "252746b424b213d952497b366ca9d8cd6299b18d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections; simpl; trivial.",
                        "VernacExtend",
                        "e10223db827615a376383ac52b707910a744cc07"
                    ]
                },
                {
                    "command": [
                        "unfold fF.",
                        "VernacExtend",
                        "99a9e7627a11467d17cc32472beccf8e3e15db6f"
                    ]
                },
                {
                    "command": [
                        "symmetry in H.",
                        "VernacExtend",
                        "5ef7cf40d6f1a8a9f9fae5220b667eef42ea5534"
                    ]
                },
                {
                    "command": [
                        "generalize (K1L.unsquash_approx H); intro.",
                        "VernacExtend",
                        "24c2e7fa7d2499957a7c6a74683a5871c4fc6043"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "unfold f_F'.",
                        "VernacExtend",
                        "5759e171ffbb12cd2b5f11f0b7e82d90a48e43ec"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (f_pred' (snd (fg n))) (fmap F (K1'.approx n) F1)) with ((fmap F (f_pred' (snd (fg n))) oo fmap F (K1.approx n)) F1) by trivial.",
                        "VernacExtend",
                        "e3f2c17d553bafe65a99a5bbf52fe2f3ef91ed8b"
                    ]
                },
                {
                    "command": [
                        "replace (fmap F (f_pred' g) (fmap F (K1'.approx n) F1)) with ((fmap F (f_pred' g) oo fmap F (K1.approx n)) F1) by trivial.",
                        "VernacExtend",
                        "80e048f0d44653ff44dcfb2516dfe6056da4ebc4"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite fmap_comp.",
                        "VernacExtend",
                        "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
                    ]
                },
                {
                    "command": [
                        "replace (f_pred' (snd (fg n)) oo K1.approx n) with (f_pred' g oo K1'.approx n); trivial.",
                        "VernacExtend",
                        "872ca72f8e97d93708749fb7e10e7d12c1747632"
                    ]
                },
                {
                    "command": [
                        "extensionality P1 k2.",
                        "VernacExtend",
                        "31e05d06371fe8abb88eb73d578572cb4ad2cf47"
                    ]
                },
                {
                    "command": [
                        "unfold f_pred', compose.",
                        "VernacExtend",
                        "2cec95832115e83faeb99391cc7c80dbf92f2197"
                    ]
                },
                {
                    "command": [
                        "unfold K1.approx.",
                        "VernacExtend",
                        "0444c8aa540ccabfed368469c8f396a0c1741e71"
                    ]
                },
                {
                    "command": [
                        "unfold map_pair; destruct k2; simpl.",
                        "VernacExtend",
                        "3065bd8282f66dfd696b5e3f11eab2b0838e02c3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- fg_level_snd.",
                        "VernacExtend",
                        "84d47119f2ff9036f52d8757c49abdc8f3b0145f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- g_level.",
                        "VernacExtend",
                        "675560ef9a237b89198d32a0f1a637adc8596149"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec n (level k)); auto.",
                        "VernacExtend",
                        "403253d7b15520b870d3c59ce334296005ca41b5"
                    ]
                },
                {
                    "command": [
                        "unfold g.",
                        "VernacExtend",
                        "fd78415b188602b878d030c2cbc915af33ab1e1d"
                    ]
                },
                {
                    "command": [
                        "red in g0.",
                        "VernacExtend",
                        "f8d0479e9e06f30beda4aff1b3871822099b3147"
                    ]
                },
                {
                    "command": [
                        "rewrite (fg_fg_eq n k g0).",
                        "VernacExtend",
                        "93efd7496b61eb66156264d784bf2303406a587a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g_unsquash",
            "line_nb": 626,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct U2 as [n F2].",
                        "VernacExtend",
                        "2b98fe5915a3bcfda1bf62bde2682836916fa0be"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize (f_unsquash (g k2)); intro.",
                        "VernacExtend",
                        "4c629c7a466508d82d1d0739ed11cfe0c7b1bf93"
                    ]
                },
                {
                    "command": [
                        "remember (g k2) as k1.",
                        "VernacExtend",
                        "6ea35da136652abb8a6190714c94f79a2a7d62b2"
                    ]
                },
                {
                    "command": [
                        "specialize ( H0 (K1.unsquash k1)).",
                        "VernacExtend",
                        "f23731b24c19c9dd54da91cfd7e9388770e199c7"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "assert (f k1 = (f oo g) k2) by (unfold compose; congruence).",
                        "VernacExtend",
                        "bb7e1c891f4a652f01edbb3bdc4448c732a53cc3"
                    ]
                },
                {
                    "command": [
                        "rewrite iso1 in H1.",
                        "VernacExtend",
                        "0f0b7ff99375f289455049dbec5d55be06e45f2a"
                    ]
                },
                {
                    "command": [
                        "unfold id in H1.",
                        "VernacExtend",
                        "498a8c67ec4b643a39ae0c3b059432bd25e0e7b0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H0.",
                        "VernacExtend",
                        "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H in H0.",
                        "VernacExtend",
                        "044ef0a64c068347d38112a9feb1635f78270f85"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "remember (K1.unsquash k1) as U1.",
                        "VernacExtend",
                        "b6488616cab0aa74476478abe12af7e27cc0d8f8"
                    ]
                },
                {
                    "command": [
                        "replace (gF (fF (snd U1))) with ((gF oo fF) (snd U1)) by trivial.",
                        "VernacExtend",
                        "8ac77597c6f422ab9656b0f54b433738d43b4eba"
                    ]
                },
                {
                    "command": [
                        "rewrite Fiso2.",
                        "VernacExtend",
                        "49f141585d861bdccb7905cc239264fd0f8f2181"
                    ]
                },
                {
                    "command": [
                        "unfold id.",
                        "VernacExtend",
                        "74f2cf047820ccd7f0d1848c69c9fbf8399a251a"
                    ]
                },
                {
                    "command": [
                        "destruct U1.",
                        "VernacExtend",
                        "6b7f91e62eda988bba8186668a11de60798f8245"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fF_approx",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fF, f_F'.",
                        "VernacExtend",
                        "11bf8ceac1205e3a46941fe37b0f0ab1c6f9c15e"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite fmap_comp.",
                        "VernacExtend",
                        "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
                    ]
                },
                {
                    "command": [
                        "rewrite f_pred'_approx.",
                        "VernacExtend",
                        "f078cf8495d089b8af5ea43d060492904fb4b9d0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply g_level.",
                        "VernacExtend",
                        "08d01fcd5b26cd1344b4c5854f6449a0199fbb42"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gF_approx",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold gF, g_F'.",
                        "VernacExtend",
                        "cf61b1e6b83d600b2821906b50dcc2575674722d"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite fmap_comp.",
                        "VernacExtend",
                        "581f8b0577bee8cc06dc4686f2ad5e99da32197e"
                    ]
                },
                {
                    "command": [
                        "rewrite g_pred'_approx.",
                        "VernacExtend",
                        "15db2c99a924728725d927e999b976e9e0d48ef4"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply f_level.",
                        "VernacExtend",
                        "f080dddaa10ddee3a6e6a89baaf4c62ff56d2d72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "f_squash",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (K2L.unsquash_inj).",
                        "VernacExtend",
                        "795c652db674159e28fcd6862c0118dbd696261c"
                    ]
                },
                {
                    "command": [
                        "rewrite (f_unsquash (K1'.squash (n, F1)) (K1.unsquash (K1'.squash (n, F1)))); trivial.",
                        "VernacExtend",
                        "fecf38c22605374f5a543eeefcb990fee20daca1"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.unsquash_squash.",
                        "VernacExtend",
                        "b9620529abdfd8c405ce9376ae8a687b65db26c7"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.unsquash_squash.",
                        "VernacExtend",
                        "36e60afc4fb808568297cd0cbb2c6ea589df002c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (fF (fmap F (K1'.approx n) F1)) with ((fF oo (fmap F (K1.approx n))) F1) by trivial.",
                        "VernacExtend",
                        "56931bd45b145b7a1c82de1bf8fcdc98e0d4df32"
                    ]
                },
                {
                    "command": [
                        "rewrite fF_approx.",
                        "VernacExtend",
                        "a235187367bdb711f5227f5885b5bb6a1dcdbfd4"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "g_squash",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (K1L.unsquash_inj).",
                        "VernacExtend",
                        "aeb03866270b49e526cf555a04c84c4d821c2657"
                    ]
                },
                {
                    "command": [
                        "rewrite (g_unsquash (K2'.squash (n, F2)) (K2.unsquash (K2'.squash (n, F2)))); trivial.",
                        "VernacExtend",
                        "57c278beae6978551e841882cad877225a13d295"
                    ]
                },
                {
                    "command": [
                        "rewrite K1.unsquash_squash.",
                        "VernacExtend",
                        "b9620529abdfd8c405ce9376ae8a687b65db26c7"
                    ]
                },
                {
                    "command": [
                        "rewrite K2.unsquash_squash.",
                        "VernacExtend",
                        "36e60afc4fb808568297cd0cbb2c6ea589df002c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (gF (fmap F (K2'.approx n) F2)) with ((gF oo (fmap F (K2.approx n))) F2) by trivial.",
                        "VernacExtend",
                        "57f2af458f145df8fc36e25b3c339bfb5d9a58a0"
                    ]
                },
                {
                    "command": [
                        "rewrite gF_approx.",
                        "VernacExtend",
                        "efc5380d544923da35282dff06ae6d54e15ff3ac"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}