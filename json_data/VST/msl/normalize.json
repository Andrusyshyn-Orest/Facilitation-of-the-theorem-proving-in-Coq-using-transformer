{
    "filename": "msl/normalize.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.msl_standard.",
            "VernacRequire",
            "bbb3b33b9509ab47eb7418bd6127eafa914382b1"
        ],
        [
            "Local Open Scope pred.",
            "VernacOpenCloseScope",
            "61fa11c1c3de9a21b4672e107d4df33b39563e17"
        ],
        [
            "Lemma andp_TT {A}`{ageable A}: forall (P: pred A), P && TT = P.",
            "VernacStartTheoremProof",
            "f4c1a1aee47ddd3439a2b3153561e11be1b12fc8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; intros w ?.",
            "VernacExtend",
            "8c94aea5f562d6bae70be94ed76b3f9e86e7b622"
        ],
        [
            "destruct H0; auto.",
            "VernacExtend",
            "9ebda477a89633134ca4d54ad2c1cf67712003c4"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_andp_prop' {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q R, (!!Q && P)*R = !!Q&&(P*R).",
            "VernacStartTheoremProof",
            "4661121a4547a523b82790febff2ac70a4e1f58a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "rewrite sepcon_andp_prop.",
            "VernacExtend",
            "2f5fcfd0f5f66ea2f774b7d1cad97c62f8a2bf6b"
        ],
        [
            "rewrite sepcon_comm; auto.",
            "VernacExtend",
            "d2c29cb76cae8b6b80971554ec9314b6f193e751"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @sepcon_emp @emp_sepcon @TT_and @andp_TT @exp_sepcon1 @exp_sepcon2 @exp_andp1 @exp_andp2 @sepcon_andp_prop @sepcon_andp_prop' : normalize.",
            "VernacExtend",
            "db39e0f24bd468bb29fd368c0c6b7ee292c22c5f"
        ],
        [
            "Definition pure {A}{JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A} (P: pred A) : Prop := P |-- emp.",
            "VernacDefinition",
            "fb6919fa6d5b930e6580641154845d9d36a3096d"
        ],
        [
            "Lemma pure_sepcon {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall (P : pred A), pure P -> P*P=P.",
            "VernacStartTheoremProof",
            "606810f0c7386467d9855e076fe1be67c37f7a1c"
        ],
        [
            "pose proof I.",
            "VernacExtend",
            "abc787e9ace0638243c51c43605b46fde630e9f6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; intros w ?.",
            "VernacExtend",
            "8c94aea5f562d6bae70be94ed76b3f9e86e7b622"
        ],
        [
            "assert ((emp * P)%pred w).",
            "VernacExtend",
            "526c7d5b7eb12b96bfff17b9943bfba2469f59d5"
        ],
        [
            "eapply sepcon_derives; try apply H1; auto.",
            "VernacExtend",
            "4ae8cef544ec90dd8afc324a131d0c41f573a97a"
        ],
        [
            "rewrite emp_sepcon in H2.",
            "VernacExtend",
            "6e5f39cc2cbfb9d7072a9d2e4e7031336ae9bfbd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists w; exists w.",
            "VernacExtend",
            "439f3e17cdd715b7e539150fd7afa1680f12a95b"
        ],
        [
            "split; [|split]; auto.",
            "VernacExtend",
            "67cc0d66fb7cc73eb9e9cd5c6654f12477784046"
        ],
        [
            "apply H0 in H1.",
            "VernacExtend",
            "da7fa7adf0e7904ce97ec7f191a78cdbe8f331e2"
        ],
        [
            "do 3 red in H1.",
            "VernacExtend",
            "29d92734e890924f5a0bc873b9662a36af2b7013"
        ],
        [
            "apply identity_unit' in H1.",
            "VernacExtend",
            "fa8e4de99460c4deedb56761304f3682d97b9e44"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pure_e {A}{JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall (P: pred A), pure P -> (P |-- emp).",
            "VernacStartTheoremProof",
            "41ceb0ffc664a35b488aa5b33f16f217cb5a2491"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve @pure_e.",
            "VernacHints",
            "d0022c9501c4cb71a4ef4bd17dc3f4dd7d07ff8d"
        ],
        [
            "Lemma sepcon_pure_andp {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q, pure P -> pure Q -> ((P * Q) = (P && Q)).",
            "VernacStartTheoremProof",
            "203ee8d8a8da808776b680c81c9839dba14733a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; intros w ?.",
            "VernacExtend",
            "8c94aea5f562d6bae70be94ed76b3f9e86e7b622"
        ],
        [
            "destruct H1 as [w1 [w2 [? [? ?]]]].",
            "VernacExtend",
            "738fdd50de8f467713b477f377cfc0e7c49e935f"
        ],
        [
            "unfold pure in *.",
            "VernacExtend",
            "86c7f198df633817b8b65cea2de31b8908d10193"
        ],
        [
            "assert (unit_for w1 w2).",
            "VernacExtend",
            "2e8730135d538644e6dcb7e66acf9cf9be3f4f19"
        ],
        [
            "apply H in H2; simpl in H2; apply identity_unit; auto.",
            "VernacExtend",
            "88d81489595afc7d67d33ebc8560ddc4d15a9448"
        ],
        [
            "exists w; auto.",
            "VernacExtend",
            "a0cb70f387a3caba8517c51e71034850de451492"
        ],
        [
            "unfold unit_for in H4.",
            "VernacExtend",
            "f321e609e118449dbe0285b4076354569cd0d3eb"
        ],
        [
            "assert (w2=w) by (apply (join_eq H4 H1)).",
            "VernacExtend",
            "37c1577f9fe4c46ec1da60eb1f53aa29c22fa9ab"
        ],
        [
            "subst w2.",
            "VernacExtend",
            "d87e1fb261bb4c6a9eecc8ca4eb1b2d24c21be83"
        ],
        [
            "assert (join w w1 w1).",
            "VernacExtend",
            "11bb7343a3779e3ea60bb03f74187a05b1636ff2"
        ],
        [
            "apply identity_unit; apply H0 in H3; simpl in H3; auto.",
            "VernacExtend",
            "fef5ad1b48a01268904210f76d43659148e5d77e"
        ],
        [
            "exists w; auto.",
            "VernacExtend",
            "a0cb70f387a3caba8517c51e71034850de451492"
        ],
        [
            "assert (w1=w) by (apply (join_eq H5 (join_comm H1))).",
            "VernacExtend",
            "d8d68e444e9c2f3e129b2cf14bc36c19fed09f84"
        ],
        [
            "subst w1.",
            "VernacExtend",
            "bd441756c076dddd6c1f7590085ee0434a4c8a92"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "exists w; exists w; split; [|split]; auto.",
            "VernacExtend",
            "b043a65f74416d91adfdd49f5755977aa5d0f003"
        ],
        [
            "apply H in H1.",
            "VernacExtend",
            "46d1b6927673d867c7806cf0f74cc38356579bf8"
        ],
        [
            "do 3 red in H1.",
            "VernacExtend",
            "29d92734e890924f5a0bc873b9662a36af2b7013"
        ],
        [
            "clear dependent P.",
            "VernacExtend",
            "5aa1662ade73f6ab6f980ea58aaca89302dff7eb"
        ],
        [
            "clear dependent Q.",
            "VernacExtend",
            "01c31c13443d54537610c83b8cc8dd48796c5b88"
        ],
        [
            "pose proof (core_unit w); unfold unit_for in *.",
            "VernacExtend",
            "bec765f51e88829a6baddd5245cdf79fe38b1186"
        ],
        [
            "pose proof (H1 _ _ (join_comm H)).",
            "VernacExtend",
            "536b94f8e5081a3e2d6e22c15473303ed71ebe5e"
        ],
        [
            "rewrite H0 in H; auto.",
            "VernacExtend",
            "2e7080eddbf54ca99496a7b388786588da57ef81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pure_emp {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: pure emp.",
            "VernacStartTheoremProof",
            "3933866fcf4faf2caa74e73a95e8bafdd6befb73"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold pure; auto.",
            "VernacExtend",
            "5a8bfed6f4fb6f312fa0cd1f25d03e3974321113"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve @pure_emp.",
            "VernacHints",
            "33e0a5593f8ec5576bf694d34b79d51b9b18e91f"
        ],
        [
            "Lemma join_equiv_refl {A}: forall x:A, @join A (Join_equiv A) x x x.",
            "VernacStartTheoremProof",
            "d4e29dcc9d644fbe476bcdd6448e6598b45746c6"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve @join_equiv_refl.",
            "VernacHints",
            "c4b8b89ea04cd1423d3657aa1edb3cfa1e2fc89b"
        ],
        [
            "Lemma pure_sepcon1'' {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q R, pure P -> Q |-- R -> P * Q |-- R.",
            "VernacStartTheoremProof",
            "4d991982d2058177981d591b52d5ca2f7ee21c5d"
        ],
        [
            "pose proof I.",
            "VernacExtend",
            "abc787e9ace0638243c51c43605b46fde630e9f6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intros w [w1 [w2 [? [? ?]]]].",
            "VernacExtend",
            "b8508fc9180cd94fb07a44405c6f7a78ff5695e0"
        ],
        [
            "apply H0 in H3.",
            "VernacExtend",
            "6ce74944a0ebf1f39c68ae69c10979913eb4e4a4"
        ],
        [
            "apply join_unit1_e in H2; auto.",
            "VernacExtend",
            "f1da07f0f06bcecb0b7540d1dd34272c1d3008eb"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pure_existential {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall B (P: B -> pred A), (forall x: B , pure (P x)) -> pure (exp P).",
            "VernacStartTheoremProof",
            "cd16f8e32b6921728859b1225b2744b442ca4692"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold pure in *.",
            "VernacExtend",
            "86c7f198df633817b8b65cea2de31b8908d10193"
        ],
        [
            "intros w [x ?].",
            "VernacExtend",
            "88bc6a75f839ab956c738493660c3c208d1a2044"
        ],
        [
            "apply (H x); auto.",
            "VernacExtend",
            "d787bd11d957adb66da020450bfffff8ca9d10e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve @pure_existential.",
            "VernacHints",
            "ce4a67444d64a7139652b3af6cd92921b7b45dc6"
        ],
        [
            "Lemma pure_core {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P w, pure P -> P w -> P (core w).",
            "VernacStartTheoremProof",
            "4c663d85a36bd4a236bb94eb1d125f139375f9eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- identity_core; auto.",
            "VernacExtend",
            "c70053c9ea32305b6eb132e34cdd8d1bb33055f1"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FF_sepcon {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P, FF * P = FF.",
            "VernacStartTheoremProof",
            "daf4b618dc8d2dbf8bb386072e6206d8ae051868"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; intros w ?; try contradiction.",
            "VernacExtend",
            "90e91cb95d443f9f41e285e64857fac6c1c0a131"
        ],
        [
            "destruct H as [w1 [w2 [? [? ?]]]]; contradiction.",
            "VernacExtend",
            "efeb9cfd345f613d662700add670651589b168dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_FF {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P, P * FF = FF.",
            "VernacStartTheoremProof",
            "422eaffe11419e2ef34d9a96f4f8446e9ac06fd4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "apply FF_sepcon.",
            "VernacExtend",
            "b023e113eddfc57c6e56a69d1c336b5d96ad1d03"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @FF_sepcon @sepcon_FF : normalize.",
            "VernacExtend",
            "2d20480e52787fa2990bfd2cbe7e142de6da6206"
        ],
        [
            "Hint Rewrite @prop_true_andp using (solve [auto]) : normalize.",
            "VernacExtend",
            "46d302bb18ef2ae07d972b8855b6993c2a74d8c0"
        ],
        [
            "Lemma true_eq {A} `{ageable A}: forall P: Prop, P -> (!! P) = (TT: pred A).",
            "VernacStartTheoremProof",
            "aba7d809936c8ccd5c4f8ae25f3955290208e73d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; intros ? ?; simpl in *; intuition.",
            "VernacExtend",
            "0047aa1a5d763ab94ab7acadbe5f9aee36a4d039"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @true_eq using (solve [auto]) : normalize.",
            "VernacExtend",
            "2015abf29331ff29f147fb8925b0067012b0d2ba"
        ],
        [
            "Lemma pure_con' {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q, pure P -> pure Q -> pure (P*Q).",
            "VernacStartTheoremProof",
            "c41892cd0a86a7f2543ad4aab6aa01a39dac45c8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold pure in *.",
            "VernacExtend",
            "86c7f198df633817b8b65cea2de31b8908d10193"
        ],
        [
            "rewrite <- sepcon_emp.",
            "VernacExtend",
            "3cbb5eefe9e3bcf36098bf20c8074e0298fe29d3"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve @pure_con'.",
            "VernacHints",
            "01a8a35a66869c12a47f89c4db34c02eb9fd997a"
        ],
        [
            "Lemma pure_intersection1: forall {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A} (P Q: pred A), pure P -> pure (P && Q).",
            "VernacStartTheoremProof",
            "690dd1a8ee3e90d73339ef36f32079c672560aa6"
        ],
        [
            "unfold pure; intros; auto.",
            "VernacExtend",
            "8021bd1f3a12a7ab384ce563417e5e9a87446f32"
        ],
        [
            "intros w [? ?]; auto.",
            "VernacExtend",
            "967fd8e0e9b35b6e18a6b4ce6b1806d22a046e61"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pure_intersection2: forall {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A} (P Q: pred A), pure Q -> pure (P && Q).",
            "VernacStartTheoremProof",
            "2c821b3a6fa742c9c68f5eea4aa7efc1a07ae223"
        ],
        [
            "unfold pure; intros; auto.",
            "VernacExtend",
            "8021bd1f3a12a7ab384ce563417e5e9a87446f32"
        ],
        [
            "intros w [? ?]; auto.",
            "VernacExtend",
            "967fd8e0e9b35b6e18a6b4ce6b1806d22a046e61"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve @pure_intersection1 @pure_intersection2.",
            "VernacHints",
            "6c5f4db3f984859144a3d913b7feea801378fe51"
        ],
        [
            "Lemma FF_andp {A} `{ageable A}: forall P: pred A, FF && P = FF.",
            "VernacStartTheoremProof",
            "a0eef5d62e3dddf20f3ec28bd7d38d3be25c880b"
        ],
        [
            "unfold FF, prop, andp; intros; apply pred_ext; intros ? ?; simpl in *; intuition.",
            "VernacExtend",
            "a859eca80eda3b4d3b2f45340399eb75730e97fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andp_FF {A}`{ageable A}: forall P: pred A, P && FF = FF.",
            "VernacStartTheoremProof",
            "2fe05ee172f9262d2b501975d7b01362bc88643f"
        ],
        [
            "unfold FF, prop, andp; intros; apply pred_ext; intros ? ?; simpl in *; intuition.",
            "VernacExtend",
            "a859eca80eda3b4d3b2f45340399eb75730e97fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @FF_andp @andp_FF : normalize.",
            "VernacExtend",
            "3e875dbecb342dc02ff0286da2c50fee06303e7c"
        ],
        [
            "Hint Rewrite @andp_dup : normalize.",
            "VernacExtend",
            "76fd59075379be4cf6dda896520cb57a4e7bd28e"
        ],
        [
            "Lemma andp_emp_sepcon_TT {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall (Q: pred A), (forall w1 w2, core w1 = core w2 -> Q w1 -> Q w2) -> (Q && emp * TT = Q).",
            "VernacStartTheoremProof",
            "3d027aef00eac6e47c1314e36620305df6627790"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "intros w [w1 [w2 [? [[? ?] ?]]]].",
            "VernacExtend",
            "32e2cc4813c0da9902688007be67ab7263a14c92"
        ],
        [
            "apply H with w1; auto.",
            "VernacExtend",
            "ad6ae684b5bb89e798a01a49d4c738a478611150"
        ],
        [
            "apply join_core in H0; auto.",
            "VernacExtend",
            "f687ede705359e46225659d3ef40c49887096bc7"
        ],
        [
            "intros w ?.",
            "VernacExtend",
            "28315d52d5dd42359452ccb9c1ee1f226270dda5"
        ],
        [
            "destruct (join_ex_identities w) as [e [He [? Hj]]].",
            "VernacExtend",
            "0333618aabdb5093a9f965f2482379bee846d511"
        ],
        [
            "exists e; exists w; split; [|split]; auto.",
            "VernacExtend",
            "82a725438f25ee0223056ee5b477c54b783496f5"
        ],
        [
            "specialize (He _ _ Hj); subst; auto.",
            "VernacExtend",
            "75fe7e8bad1c8e511af25cd8234d6aab56473402"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply H with w; auto.",
            "VernacExtend",
            "b0b9b78332af4044e501b8bbbf1540b7ed1fd2cd"
        ],
        [
            "symmetry; eapply join_core2; eauto.",
            "VernacExtend",
            "6e7e9d097206c06196553669e7f2f8ecaad40359"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_TT {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall (P: pred A), P |-- (P * TT).",
            "VernacStartTheoremProof",
            "728698a2507c095d53a696606ca0202a9868d011"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (sepcon_emp P) at 1.",
            "VernacExtend",
            "f648d369f6afa72d20e19fbcbef4434eaa6ca2e4"
        ],
        [
            "eapply sepcon_derives; try apply H0; auto.",
            "VernacExtend",
            "4f858b93bb6e8d79b5ec262d1c2888a503d34702"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve @sepcon_TT.",
            "VernacHints",
            "87909ffe214622c413c524796cd0dfa90f1bff4d"
        ],
        [
            "Lemma imp_extract_exp_left {B A: Type} `{ageable A}: forall (p : B -> pred A) (q: pred A), (forall x, p x |-- q) -> exp p |-- q.",
            "VernacStartTheoremProof",
            "f3e4b27fb14c5c45b36957136fc9e373b18d3994"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intros w [x ?].",
            "VernacExtend",
            "88bc6a75f839ab956c738493660c3c208d1a2044"
        ],
        [
            "eapply H0; eauto.",
            "VernacExtend",
            "0240392f0ea7b22c93b1755ba1a7880bec673374"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pure_sepcon_TT_andp {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q, pure P -> (P * TT) && Q = (P*Q).",
            "VernacStartTheoremProof",
            "870202c428f42e75de2f229030456151c6172a09"
        ],
        [
            "pose proof I.",
            "VernacExtend",
            "abc787e9ace0638243c51c43605b46fde630e9f6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "intros w [? ?].",
            "VernacExtend",
            "fccb8e71e2c33ee4c7ab3d671f80a3419a067dce"
        ],
        [
            "destruct H1 as [w1 [w2 [? [? ?]]]].",
            "VernacExtend",
            "738fdd50de8f467713b477f377cfc0e7c49e935f"
        ],
        [
            "exists w1; exists w2; split; [|split]; auto.",
            "VernacExtend",
            "098997f8db74d7b1581d97b52f682d018ef2c6a8"
        ],
        [
            "apply join_unit1_e in H1; auto.",
            "VernacExtend",
            "5a1951302e50deb058f8ce95f807e6928b3967d3"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "apply H0 in H3; auto.",
            "VernacExtend",
            "56ba5fbe89d9656dfcfbe12c654d6d05efe64b2f"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "intros w [w1 [w2 [? [? ?]]]].",
            "VernacExtend",
            "b8508fc9180cd94fb07a44405c6f7a78ff5695e0"
        ],
        [
            "apply join_unit1_e in H1; auto.",
            "VernacExtend",
            "5a1951302e50deb058f8ce95f807e6928b3967d3"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "apply H0 in H2; auto.",
            "VernacExtend",
            "f5d6f82670699b13cd2e9b7be7129a64745bf424"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pure_sepcon_TT_andp' {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q, pure P -> Q && (P * TT) = (Q*P).",
            "VernacStartTheoremProof",
            "aff1e1550c6e601b881270ce4f9d160c14831109"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "rewrite pure_sepcon_TT_andp; auto.",
            "VernacExtend",
            "3a17fd47ecb7ab2c765493b66172f131a5a8ae02"
        ],
        [
            "apply sepcon_comm.",
            "VernacExtend",
            "f1e8c1b9e163425894c514fae16c41254657a6d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @pure_sepcon_TT_andp @pure_sepcon_TT_andp' using (solve [auto]): normalize.",
            "VernacExtend",
            "e94218a34b589d9d28734327006d6422530d9c20"
        ],
        [
            "Lemma pure_sepcon1' {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q R, pure P -> P * Q |-- P * R -> P * Q |-- R.",
            "VernacStartTheoremProof",
            "9146e2fb55dbb44a5fac29c8ebbdd071ebfc4065"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply derives_trans; try apply H0.",
            "VernacExtend",
            "9d3606df936c7e2c9dd9f28d87277c5b5b016b02"
        ],
        [
            "apply pure_sepcon1''; auto.",
            "VernacExtend",
            "459433f3c0117134930c03fa4ec7735f4d45a122"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pull_right {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q R, (Q * P * R) = (Q * R * P).",
            "VernacStartTheoremProof",
            "6d4d60c0976611a449a59e953d3111466c575897"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite sepcon_assoc.",
            "VernacExtend",
            "9c08e0b8d2115b9a99f9d5cb3548a9da2273df02"
        ],
        [
            "rewrite (sepcon_comm P); auto.",
            "VernacExtend",
            "320f33bd448bf208d1fe8d6a1855ed9398d8dc8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pull_right0 {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q, (P * Q) = (Q * P).",
            "VernacStartTheoremProof",
            "f6113ae9255a30068526b313093d47d27c2a3581"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (sepcon_comm P); auto.",
            "VernacExtend",
            "320f33bd448bf208d1fe8d6a1855ed9398d8dc8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac pull_left A := repeat (rewrite <- (pull_right A) || rewrite <- (pull_right0 A)).",
            "VernacExtend",
            "c711c1dcc5af819f05010e2875f0bbcee49125fb"
        ],
        [
            "Ltac pull_right A := repeat (rewrite (pull_right A) || rewrite (pull_right0 A)).",
            "VernacExtend",
            "9ca88ba5c2aae1fd00068c0776871364b105cd43"
        ],
        [
            "Lemma pure_modus {A} {JA: Join A}{PA: Perm_alg A}{SA: Sep_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall P Q, P |-- Q -> pure Q -> P |-- Q && P.",
            "VernacStartTheoremProof",
            "6a51901b08e3e1063e767797e807f1fab4c1cfa5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intros w ?.",
            "VernacExtend",
            "28315d52d5dd42359452ccb9c1ee1f226270dda5"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma imp_exp_right {B A : Type} `{saA: ageable A}: forall (x: B) (p: pred A) (q: B -> pred A), p |-- q x -> p |-- exp q.",
            "VernacStartTheoremProof",
            "fabce58b3ba232fa7a5544849b094eab4a310e27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply derives_trans; try apply H.",
            "VernacExtend",
            "9a7b386900c738e6ba9b7ac265e644277843971f"
        ],
        [
            "intros w ?; exists x; auto.",
            "VernacExtend",
            "e264ccb8a1e5c2943af3a1d5ddf85e39f5576709"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derives_extract_prop {A} `{ageable A}: forall (P: Prop) (Q R: pred A), (P -> Q |-- R) -> !!P && Q |-- R.",
            "VernacStartTheoremProof",
            "72a85c666a5919ab18951224bba488bfa2772f32"
        ],
        [
            "unfold derives, prop, andp; hnf in *; intuition.",
            "VernacExtend",
            "9a72d1ff4c4d764fe5aabdb2803b71c7bb36f881"
        ],
        [
            "hnf in H1; intuition.",
            "VernacExtend",
            "e9c85363ad6e489c31fe1fbc509f3f7407795769"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derives_extract_prop' {A} `{ageable A}: forall (P: Prop) (Q R: pred A), (P -> Q |-- R) -> Q && !!P|-- R.",
            "VernacStartTheoremProof",
            "8d8d54bcb7b499142ac5bd174a561dc10b6a7e67"
        ],
        [
            "unfold derives, prop, andp; intuition; hnf in *; intuition.",
            "VernacExtend",
            "58cfb4703f76066a44a2578c8478e70cb7a7206f"
        ],
        [
            "hnf in *; intuition.",
            "VernacExtend",
            "8b176605051f7e290dc7b7b6e7be34538feb8eda"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac normalize1 := match goal with | |- _ => contradiction | |- context [(?P && ?Q) * ?R] => rewrite (corable_andp_sepcon1 P Q R) by (auto with normalize) | |- context [?Q * (?P && ?R)] => rewrite (corable_sepcon_andp1 P Q R) by (auto with normalize) | |- context [(?Q && ?P) * ?R] => rewrite (corable_andp_sepcon2 P Q R) by (auto with normalize) | |- context [?Q * (?R && ?P)] => rewrite (corable_sepcon_andp2 P Q R) by (auto with normalize) | |- _ => progress (autorewrite with normalize); auto with typeclass_instances | |- _ = ?x -> _ => intro; subst x | |- ?x = _ -> _ => intro; subst x | |- ?ZZ -> _ => match type of ZZ with | Prop => let H := fresh in ((assert (H:ZZ) by auto; clear H; intros _) || intro H) | _ => intros _ end | |- forall _, _ => let x := fresh \"x\" in (intro x; normalize1; try generalize dependent x) | |- exp _ |-- _ => apply imp_extract_exp_left | |- !! _ && _ |-- _ => apply derives_extract_prop | |- _ && !! _ |-- _ => apply derives_extract_prop' | |- _ |-- !! (?x = ?y) && _ => (rewrite prop_true_andp with (P:= (x=y)) by (unfold y; reflexivity); unfold y in *; clear y) || (rewrite prop_true_andp with (P:=(x=y)) by (unfold x; reflexivity); unfold x in *; clear x) | |- _ => solve [auto with typeclass_instances] end.",
            "VernacExtend",
            "3c2ef1b71db8cfc8e8a5e07ce82bfd9616672f1f"
        ],
        [
            "Ltac normalize1_in Hx := match type of Hx with | app_pred (exp _) _ => destruct Hx | app_pred (!! _ && _) _ => let H1 := fresh in destruct Hx as [H1 Hx]; unfold prop in H1 | context [ !! ?P ] => rewrite (true_eq P) in Hx by auto with typeclass_instances | context [ !! ?P && ?Q ] => rewrite (prop_true_andp P Q) in Hx by auto with typeclass_instances | context [(?P && ?Q) * ?R] => rewrite (corable_andp_sepcon1 P Q R) in Hx by (auto with normalize) | context [?Q * (?P && ?R)] => rewrite (corable_sepcon_andp1 P Q R) in Hx by (auto with normalize) | context [(?Q && ?P) * ?R] => rewrite (corable_andp_sepcon2 P Q R) in Hx by (auto with normalize) | context [?Q * (?R && ?P)] => rewrite (corable_sepcon_andp2 P Q R) in Hx by (auto with normalize) | _ => progress (autorewrite with normalize in Hx); auto with typeclass_instances end.",
            "VernacExtend",
            "fb6548486428c04c2ad529dff62073598301df12"
        ],
        [
            "Ltac normalize := repeat normalize1.",
            "VernacExtend",
            "c45b15038a228b6397338d48b25d60ea550ae80e"
        ],
        [
            "Tactic Notation \"normalize\" \"in\" hyp(H) := repeat (normalize1_in H).",
            "VernacExtend",
            "a34fae64deb65c3d6d9a0e51629e974d14655918"
        ],
        [
            "Definition mark {A: Type} (i: nat) (j: A) := j.",
            "VernacDefinition",
            "75018bdd40092a403317653194f7c99c54c61139"
        ],
        [
            "Lemma swap_mark1 {A} {JA: Join A}{PA: Perm_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall i j Pi Pj B, (i<j)%nat -> B * mark i Pi * mark j Pj = B * mark j Pj * mark i Pi.",
            "VernacStartTheoremProof",
            "d21388856cdd646c3df357652af03c1f55851f4e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite sepcon_assoc.",
            "VernacExtend",
            "9c08e0b8d2115b9a99f9d5cb3548a9da2273df02"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply sepcon_comm.",
            "VernacExtend",
            "f1e8c1b9e163425894c514fae16c41254657a6d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swap_mark0 {A} {JA: Join A}{PA: Perm_alg A}{agA: ageable A}{AgeA: Age_alg A}: forall i j Pi Pj, (i<j)%nat -> mark i Pi * mark j Pj = mark j Pj * mark i Pi.",
            "VernacStartTheoremProof",
            "447dde672e4a0865916e75ce9275b822ac2ba098"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sepcon_comm.",
            "VernacExtend",
            "f1e8c1b9e163425894c514fae16c41254657a6d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac select_left n := repeat match goal with | |- context [(_ * mark ?i _ * mark n _)%pred] => rewrite (swap_mark1 i n); [ | solve [simpl; auto]] | |- context [(mark ?i _ * mark n _)%pred] => rewrite (swap_mark0 i n); [ | solve [simpl; auto]] end.",
            "VernacExtend",
            "728914aea522831e2ef61bea379c5ade019f2adc"
        ],
        [
            "Ltac select_all n := match n with | O => idtac | S ?n' => select_left n; select_all n' end.",
            "VernacExtend",
            "5b3bae757e7f3f76856ab948f2bbdb919bd75051"
        ],
        [
            "Ltac markem n P := match P with | (?Y * ?Z) => (match goal with H: mark _ Z = Z |- _ => idtac end || assert (mark n Z = Z) by auto); markem (S n) Y | ?Z => match goal with H: mark _ Z = Z |- _ => idtac end || assert (mark n Z = Z) by auto end.",
            "VernacExtend",
            "f4ec0bf7f464c4ac04bd140c67706321dde3c70c"
        ],
        [
            "Ltac prove_assoc_commut := clear; try (match goal with |- ?F _ -> ?G _ => replace G with F; auto end); (repeat rewrite <- sepcon_assoc; match goal with |- ?P = _ => markem O P end; let LEFT := fresh \"LEFT\" in match goal with |- ?P = _ => set (LEFT := P) end; match goal with H: mark ?n _ = _ |- _ => repeat match goal with H: mark ?n _ = ?P |- _ => rewrite <- H; clear H end; select_all n; reflexivity end).",
            "VernacExtend",
            "cbabdf91207d9d2aa69d18bf792ab008c78c0982"
        ],
        [
            "Lemma test_prove_assoc_commut {T}{JA: Join T}{PA: Perm_alg T}{agA: ageable T}{AgeA: Age_alg T} : forall A B C D E : pred T, D * E * A * C * B = A * B * C * D * E.",
            "VernacStartTheoremProof",
            "e9dff83ea7066a98bda1383b1f9e3bf631b7e752"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "prove_assoc_commut.",
            "VernacExtend",
            "0b87cd7f2143334d84c5439f378bfd6afb9d6b5f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "andp_TT",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; intros w ?.",
                        "VernacExtend",
                        "8c94aea5f562d6bae70be94ed76b3f9e86e7b622"
                    ]
                },
                {
                    "command": [
                        "destruct H0; auto.",
                        "VernacExtend",
                        "9ebda477a89633134ca4d54ad2c1cf67712003c4"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_andp_prop'",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_andp_prop.",
                        "VernacExtend",
                        "2f5fcfd0f5f66ea2f774b7d1cad97c62f8a2bf6b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm; auto.",
                        "VernacExtend",
                        "d2c29cb76cae8b6b80971554ec9314b6f193e751"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_sepcon",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "pose proof I.",
                        "VernacExtend",
                        "abc787e9ace0638243c51c43605b46fde630e9f6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; intros w ?.",
                        "VernacExtend",
                        "8c94aea5f562d6bae70be94ed76b3f9e86e7b622"
                    ]
                },
                {
                    "command": [
                        "assert ((emp * P)%pred w).",
                        "VernacExtend",
                        "526c7d5b7eb12b96bfff17b9943bfba2469f59d5"
                    ]
                },
                {
                    "command": [
                        "eapply sepcon_derives; try apply H1; auto.",
                        "VernacExtend",
                        "4ae8cef544ec90dd8afc324a131d0c41f573a97a"
                    ]
                },
                {
                    "command": [
                        "rewrite emp_sepcon in H2.",
                        "VernacExtend",
                        "6e5f39cc2cbfb9d7072a9d2e4e7031336ae9bfbd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists w; exists w.",
                        "VernacExtend",
                        "439f3e17cdd715b7e539150fd7afa1680f12a95b"
                    ]
                },
                {
                    "command": [
                        "split; [|split]; auto.",
                        "VernacExtend",
                        "67cc0d66fb7cc73eb9e9cd5c6654f12477784046"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H1.",
                        "VernacExtend",
                        "da7fa7adf0e7904ce97ec7f191a78cdbe8f331e2"
                    ]
                },
                {
                    "command": [
                        "do 3 red in H1.",
                        "VernacExtend",
                        "29d92734e890924f5a0bc873b9662a36af2b7013"
                    ]
                },
                {
                    "command": [
                        "apply identity_unit' in H1.",
                        "VernacExtend",
                        "fa8e4de99460c4deedb56761304f3682d97b9e44"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_e",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_pure_andp",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; intros w ?.",
                        "VernacExtend",
                        "8c94aea5f562d6bae70be94ed76b3f9e86e7b622"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [w1 [w2 [? [? ?]]]].",
                        "VernacExtend",
                        "738fdd50de8f467713b477f377cfc0e7c49e935f"
                    ]
                },
                {
                    "command": [
                        "unfold pure in *.",
                        "VernacExtend",
                        "86c7f198df633817b8b65cea2de31b8908d10193"
                    ]
                },
                {
                    "command": [
                        "assert (unit_for w1 w2).",
                        "VernacExtend",
                        "2e8730135d538644e6dcb7e66acf9cf9be3f4f19"
                    ]
                },
                {
                    "command": [
                        "apply H in H2; simpl in H2; apply identity_unit; auto.",
                        "VernacExtend",
                        "88d81489595afc7d67d33ebc8560ddc4d15a9448"
                    ]
                },
                {
                    "command": [
                        "exists w; auto.",
                        "VernacExtend",
                        "a0cb70f387a3caba8517c51e71034850de451492"
                    ]
                },
                {
                    "command": [
                        "unfold unit_for in H4.",
                        "VernacExtend",
                        "f321e609e118449dbe0285b4076354569cd0d3eb"
                    ]
                },
                {
                    "command": [
                        "assert (w2=w) by (apply (join_eq H4 H1)).",
                        "VernacExtend",
                        "37c1577f9fe4c46ec1da60eb1f53aa29c22fa9ab"
                    ]
                },
                {
                    "command": [
                        "subst w2.",
                        "VernacExtend",
                        "d87e1fb261bb4c6a9eecc8ca4eb1b2d24c21be83"
                    ]
                },
                {
                    "command": [
                        "assert (join w w1 w1).",
                        "VernacExtend",
                        "11bb7343a3779e3ea60bb03f74187a05b1636ff2"
                    ]
                },
                {
                    "command": [
                        "apply identity_unit; apply H0 in H3; simpl in H3; auto.",
                        "VernacExtend",
                        "fef5ad1b48a01268904210f76d43659148e5d77e"
                    ]
                },
                {
                    "command": [
                        "exists w; auto.",
                        "VernacExtend",
                        "a0cb70f387a3caba8517c51e71034850de451492"
                    ]
                },
                {
                    "command": [
                        "assert (w1=w) by (apply (join_eq H5 (join_comm H1))).",
                        "VernacExtend",
                        "d8d68e444e9c2f3e129b2cf14bc36c19fed09f84"
                    ]
                },
                {
                    "command": [
                        "subst w1.",
                        "VernacExtend",
                        "bd441756c076dddd6c1f7590085ee0434a4c8a92"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "exists w; exists w; split; [|split]; auto.",
                        "VernacExtend",
                        "b043a65f74416d91adfdd49f5755977aa5d0f003"
                    ]
                },
                {
                    "command": [
                        "apply H in H1.",
                        "VernacExtend",
                        "46d1b6927673d867c7806cf0f74cc38356579bf8"
                    ]
                },
                {
                    "command": [
                        "do 3 red in H1.",
                        "VernacExtend",
                        "29d92734e890924f5a0bc873b9662a36af2b7013"
                    ]
                },
                {
                    "command": [
                        "clear dependent P.",
                        "VernacExtend",
                        "5aa1662ade73f6ab6f980ea58aaca89302dff7eb"
                    ]
                },
                {
                    "command": [
                        "clear dependent Q.",
                        "VernacExtend",
                        "01c31c13443d54537610c83b8cc8dd48796c5b88"
                    ]
                },
                {
                    "command": [
                        "pose proof (core_unit w); unfold unit_for in *.",
                        "VernacExtend",
                        "bec765f51e88829a6baddd5245cdf79fe38b1186"
                    ]
                },
                {
                    "command": [
                        "pose proof (H1 _ _ (join_comm H)).",
                        "VernacExtend",
                        "536b94f8e5081a3e2d6e22c15473303ed71ebe5e"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H; auto.",
                        "VernacExtend",
                        "2e7080eddbf54ca99496a7b388786588da57ef81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_emp",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold pure; auto.",
                        "VernacExtend",
                        "5a8bfed6f4fb6f312fa0cd1f25d03e3974321113"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_equiv_refl",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_sepcon1''",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "pose proof I.",
                        "VernacExtend",
                        "abc787e9ace0638243c51c43605b46fde630e9f6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intros w [w1 [w2 [? [? ?]]]].",
                        "VernacExtend",
                        "b8508fc9180cd94fb07a44405c6f7a78ff5695e0"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H3.",
                        "VernacExtend",
                        "6ce74944a0ebf1f39c68ae69c10979913eb4e4a4"
                    ]
                },
                {
                    "command": [
                        "apply join_unit1_e in H2; auto.",
                        "VernacExtend",
                        "f1da07f0f06bcecb0b7540d1dd34272c1d3008eb"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_existential",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold pure in *.",
                        "VernacExtend",
                        "86c7f198df633817b8b65cea2de31b8908d10193"
                    ]
                },
                {
                    "command": [
                        "intros w [x ?].",
                        "VernacExtend",
                        "88bc6a75f839ab956c738493660c3c208d1a2044"
                    ]
                },
                {
                    "command": [
                        "apply (H x); auto.",
                        "VernacExtend",
                        "d787bd11d957adb66da020450bfffff8ca9d10e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_core",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- identity_core; auto.",
                        "VernacExtend",
                        "c70053c9ea32305b6eb132e34cdd8d1bb33055f1"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FF_sepcon",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; intros w ?; try contradiction.",
                        "VernacExtend",
                        "90e91cb95d443f9f41e285e64857fac6c1c0a131"
                    ]
                },
                {
                    "command": [
                        "destruct H as [w1 [w2 [? [? ?]]]]; contradiction.",
                        "VernacExtend",
                        "efeb9cfd345f613d662700add670651589b168dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_FF",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "apply FF_sepcon.",
                        "VernacExtend",
                        "b023e113eddfc57c6e56a69d1c336b5d96ad1d03"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "true_eq",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; intros ? ?; simpl in *; intuition.",
                        "VernacExtend",
                        "0047aa1a5d763ab94ab7acadbe5f9aee36a4d039"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_con'",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold pure in *.",
                        "VernacExtend",
                        "86c7f198df633817b8b65cea2de31b8908d10193"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sepcon_emp.",
                        "VernacExtend",
                        "3cbb5eefe9e3bcf36098bf20c8074e0298fe29d3"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_intersection1",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "unfold pure; intros; auto.",
                        "VernacExtend",
                        "8021bd1f3a12a7ab384ce563417e5e9a87446f32"
                    ]
                },
                {
                    "command": [
                        "intros w [? ?]; auto.",
                        "VernacExtend",
                        "967fd8e0e9b35b6e18a6b4ce6b1806d22a046e61"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_intersection2",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "unfold pure; intros; auto.",
                        "VernacExtend",
                        "8021bd1f3a12a7ab384ce563417e5e9a87446f32"
                    ]
                },
                {
                    "command": [
                        "intros w [? ?]; auto.",
                        "VernacExtend",
                        "967fd8e0e9b35b6e18a6b4ce6b1806d22a046e61"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FF_andp",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "unfold FF, prop, andp; intros; apply pred_ext; intros ? ?; simpl in *; intuition.",
                        "VernacExtend",
                        "a859eca80eda3b4d3b2f45340399eb75730e97fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andp_FF",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "unfold FF, prop, andp; intros; apply pred_ext; intros ? ?; simpl in *; intuition.",
                        "VernacExtend",
                        "a859eca80eda3b4d3b2f45340399eb75730e97fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andp_emp_sepcon_TT",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "intros w [w1 [w2 [? [[? ?] ?]]]].",
                        "VernacExtend",
                        "32e2cc4813c0da9902688007be67ab7263a14c92"
                    ]
                },
                {
                    "command": [
                        "apply H with w1; auto.",
                        "VernacExtend",
                        "ad6ae684b5bb89e798a01a49d4c738a478611150"
                    ]
                },
                {
                    "command": [
                        "apply join_core in H0; auto.",
                        "VernacExtend",
                        "f687ede705359e46225659d3ef40c49887096bc7"
                    ]
                },
                {
                    "command": [
                        "intros w ?.",
                        "VernacExtend",
                        "28315d52d5dd42359452ccb9c1ee1f226270dda5"
                    ]
                },
                {
                    "command": [
                        "destruct (join_ex_identities w) as [e [He [? Hj]]].",
                        "VernacExtend",
                        "0333618aabdb5093a9f965f2482379bee846d511"
                    ]
                },
                {
                    "command": [
                        "exists e; exists w; split; [|split]; auto.",
                        "VernacExtend",
                        "82a725438f25ee0223056ee5b477c54b783496f5"
                    ]
                },
                {
                    "command": [
                        "specialize (He _ _ Hj); subst; auto.",
                        "VernacExtend",
                        "75fe7e8bad1c8e511af25cd8234d6aab56473402"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply H with w; auto.",
                        "VernacExtend",
                        "b0b9b78332af4044e501b8bbbf1540b7ed1fd2cd"
                    ]
                },
                {
                    "command": [
                        "symmetry; eapply join_core2; eauto.",
                        "VernacExtend",
                        "6e7e9d097206c06196553669e7f2f8ecaad40359"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_TT",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sepcon_emp P) at 1.",
                        "VernacExtend",
                        "f648d369f6afa72d20e19fbcbef4434eaa6ca2e4"
                    ]
                },
                {
                    "command": [
                        "eapply sepcon_derives; try apply H0; auto.",
                        "VernacExtend",
                        "4f858b93bb6e8d79b5ec262d1c2888a503d34702"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imp_extract_exp_left",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intros w [x ?].",
                        "VernacExtend",
                        "88bc6a75f839ab956c738493660c3c208d1a2044"
                    ]
                },
                {
                    "command": [
                        "eapply H0; eauto.",
                        "VernacExtend",
                        "0240392f0ea7b22c93b1755ba1a7880bec673374"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_sepcon_TT_andp",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "pose proof I.",
                        "VernacExtend",
                        "abc787e9ace0638243c51c43605b46fde630e9f6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "intros w [? ?].",
                        "VernacExtend",
                        "fccb8e71e2c33ee4c7ab3d671f80a3419a067dce"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [w1 [w2 [? [? ?]]]].",
                        "VernacExtend",
                        "738fdd50de8f467713b477f377cfc0e7c49e935f"
                    ]
                },
                {
                    "command": [
                        "exists w1; exists w2; split; [|split]; auto.",
                        "VernacExtend",
                        "098997f8db74d7b1581d97b52f682d018ef2c6a8"
                    ]
                },
                {
                    "command": [
                        "apply join_unit1_e in H1; auto.",
                        "VernacExtend",
                        "5a1951302e50deb058f8ce95f807e6928b3967d3"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H3; auto.",
                        "VernacExtend",
                        "56ba5fbe89d9656dfcfbe12c654d6d05efe64b2f"
                    ]
                },
                {
                    "command": [
                        "apply andp_right.",
                        "VernacExtend",
                        "614688b80ee6a44f752e79383d4234d6d5dfcee8"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "intros w [w1 [w2 [? [? ?]]]].",
                        "VernacExtend",
                        "b8508fc9180cd94fb07a44405c6f7a78ff5695e0"
                    ]
                },
                {
                    "command": [
                        "apply join_unit1_e in H1; auto.",
                        "VernacExtend",
                        "5a1951302e50deb058f8ce95f807e6928b3967d3"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H2; auto.",
                        "VernacExtend",
                        "f5d6f82670699b13cd2e9b7be7129a64745bf424"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_sepcon_TT_andp'",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm.",
                        "VernacExtend",
                        "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
                    ]
                },
                {
                    "command": [
                        "rewrite pure_sepcon_TT_andp; auto.",
                        "VernacExtend",
                        "3a17fd47ecb7ab2c765493b66172f131a5a8ae02"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_comm.",
                        "VernacExtend",
                        "f1e8c1b9e163425894c514fae16c41254657a6d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_sepcon1'",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; try apply H0.",
                        "VernacExtend",
                        "9d3606df936c7e2c9dd9f28d87277c5b5b016b02"
                    ]
                },
                {
                    "command": [
                        "apply pure_sepcon1''; auto.",
                        "VernacExtend",
                        "459433f3c0117134930c03fa4ec7735f4d45a122"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pull_right",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c08e0b8d2115b9a99f9d5cb3548a9da2273df02"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm P); auto.",
                        "VernacExtend",
                        "320f33bd448bf208d1fe8d6a1855ed9398d8dc8b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pull_right0",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm P); auto.",
                        "VernacExtend",
                        "320f33bd448bf208d1fe8d6a1855ed9398d8dc8b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_modus",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intros w ?.",
                        "VernacExtend",
                        "28315d52d5dd42359452ccb9c1ee1f226270dda5"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imp_exp_right",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; try apply H.",
                        "VernacExtend",
                        "9a7b386900c738e6ba9b7ac265e644277843971f"
                    ]
                },
                {
                    "command": [
                        "intros w ?; exists x; auto.",
                        "VernacExtend",
                        "e264ccb8a1e5c2943af3a1d5ddf85e39f5576709"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derives_extract_prop",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "unfold derives, prop, andp; hnf in *; intuition.",
                        "VernacExtend",
                        "9a72d1ff4c4d764fe5aabdb2803b71c7bb36f881"
                    ]
                },
                {
                    "command": [
                        "hnf in H1; intuition.",
                        "VernacExtend",
                        "e9c85363ad6e489c31fe1fbc509f3f7407795769"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derives_extract_prop'",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "unfold derives, prop, andp; intuition; hnf in *; intuition.",
                        "VernacExtend",
                        "58cfb4703f76066a44a2578c8478e70cb7a7206f"
                    ]
                },
                {
                    "command": [
                        "hnf in *; intuition.",
                        "VernacExtend",
                        "8b176605051f7e290dc7b7b6e7be34538feb8eda"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swap_mark1",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c08e0b8d2115b9a99f9d5cb3548a9da2273df02"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_comm.",
                        "VernacExtend",
                        "f1e8c1b9e163425894c514fae16c41254657a6d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swap_mark0",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_comm.",
                        "VernacExtend",
                        "f1e8c1b9e163425894c514fae16c41254657a6d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_prove_assoc_commut",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "prove_assoc_commut.",
                        "VernacExtend",
                        "0b87cd7f2143334d84c5439f378bfd6afb9d6b5f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}