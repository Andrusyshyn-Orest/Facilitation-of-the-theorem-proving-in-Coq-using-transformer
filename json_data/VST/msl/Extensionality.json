{
    "filename": "msl/Extensionality.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Export VST.msl.Axioms.",
            "VernacRequire",
            "f79138c3a3c233ddf5d9f69f7ada4d720a0f2798"
        ],
        [
            "Require Import Coq.Logic.EqdepFacts.",
            "VernacRequire",
            "abc677a25ee9a86424b4c695fc8149d938013197"
        ],
        [
            "Module EqdepElim: EqdepElimination.",
            "VernacDefineModule",
            "3374e13094e75bab3b2878a94914e026c12f9c84"
        ],
        [
            "Lemma eq_rect_eq : forall (U:Type) (p:U) (Q:U -> Type) (x:Q p) (h:p = p), x = eq_rect p Q x p h.",
            "VernacStartTheoremProof",
            "6cdb07289bf22209c7cb682718b57a2867045119"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Streicher_K__eq_rect_eq.",
            "VernacExtend",
            "5c4d2b49855c507a8bf1cacbe4271cd950513588"
        ],
        [
            "apply UIP_refl__Streicher_K.",
            "VernacExtend",
            "6a53fbcf7233904da00ba20fb0af9f7b023860f3"
        ],
        [
            "hnf; intros; hnf; intros.",
            "VernacExtend",
            "29aaecb4cee42d85844ae0f5ac71a6bfcb9e640f"
        ],
        [
            "apply proof_irr.",
            "VernacExtend",
            "10d46e46974f89c2b3a9463c04a06ee6c39cd171"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EqdepElim.",
            "VernacEndSegment",
            "380989a40f507abc7ca694215cde0950072d4d9b"
        ],
        [
            "Module EqdepTh := EqdepTheory EqdepElim.",
            "VernacDefineModule",
            "ad52609022efbfed73e113f62f497c9025200a39"
        ],
        [
            "Export EqdepTh.",
            "VernacImport",
            "ee3379bbb470deef7878122462dd2d8d3cd544b9"
        ],
        [
            "Tactic Notation \"extensionality\" := let x := fresh \"x\" in extensionality x.",
            "VernacExtend",
            "6790f4955fe48c9719094db9bde5d4058bf470d6"
        ],
        [
            "Tactic Notation \"extensionality\" ident(x0) ident(x1) := extensionality x0; extensionality x1.",
            "VernacExtend",
            "45c803057560b59fd55a26b1abfec91924ad44a3"
        ],
        [
            "Tactic Notation \"extensionality\" ident(x0) ident(x1) ident(x2) := extensionality x0; extensionality x1; extensionality x2.",
            "VernacExtend",
            "0b76acdae95824a1fb1dc1c8918dfda469695a60"
        ],
        [
            "Tactic Notation \"extensionality\" ident(x0) ident(x1) ident(x2) ident(x3) := extensionality x0; extensionality x1; extensionality x2; extensionality x3.",
            "VernacExtend",
            "a37bf128ff149264b7ebfac758d5bbee7eb6f825"
        ],
        [
            "Tactic Notation \"extensionality\" ident(x0) ident(x1) ident(x2) ident(x3) ident(x4) := extensionality x0; extensionality x1; extensionality x2; extensionality x3; extensionality x4.",
            "VernacExtend",
            "7baf00f4e1aac0e1fad656a5b24aeb5867d5870c"
        ],
        [
            "Tactic Notation \"extensionality\" ident(x0) ident(x1) ident(x2) ident(x3) ident(x4) ident(x5) := extensionality x0; extensionality x1; extensionality x2; extensionality x3; extensionality x4; extensionality x5.",
            "VernacExtend",
            "7901e0e2f23c68837d4f25f792dc4b93b86e07c1"
        ],
        [
            "Tactic Notation \"extensionality\" ident(x0) ident(x1) ident(x2) ident(x3) ident(x4) ident(x5) ident(x6) := extensionality x0; extensionality x1; extensionality x2; extensionality x3; extensionality x4; extensionality x5; extensionality x6.",
            "VernacExtend",
            "24e0a082f394196b9873b7075a498c1cdf2eed17"
        ],
        [
            "Tactic Notation \"extensionality\" ident(x0) ident(x1) ident(x2) ident(x3) ident(x4) ident(x5) ident(x6) ident(x7) := extensionality x0; extensionality x1; extensionality x2; extensionality x3; extensionality x4; extensionality x5; extensionality x6; extensionality x7.",
            "VernacExtend",
            "8f73715c035ff97ebf07628ab3d9e6cc8e579647"
        ],
        [
            "Tactic Notation \"extensionality\" ident(x0) ident(x1) ident(x2) ident(x3) ident(x4) ident(x5) ident(x6) ident(x7) ident(x8) := extensionality x0; extensionality x1; extensionality x2; extensionality x3; extensionality x4; extensionality x5; extensionality x6; extensionality x7; extensionality x8.",
            "VernacExtend",
            "0f1409802ad0d49eae25ea25033b6ff287fa4e88"
        ],
        [
            "Tactic Notation \"extensionality\" ident(x0) ident(x1) ident(x2) ident(x3) ident(x4) ident(x5) ident(x6) ident(x7) ident(x8) ident(x9) := extensionality x0; extensionality x1; extensionality x2; extensionality x3; extensionality x4; extensionality x5; extensionality x6; extensionality x7; extensionality x8; extensionality x9.",
            "VernacExtend",
            "5c62c64126bca585149cc16fed3f458892ef721f"
        ],
        [
            "Lemma imp_ext: forall (A A' B B' : Prop), (A=A') -> (A -> (B=B')) -> ((A->B)=(A'->B')).",
            "VernacStartTheoremProof",
            "dcc976a8f2b4011067f26cff1de6d9e1723d6711"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply prop_ext; split; intros; auto.",
            "VernacExtend",
            "df3adea446173ace18cd4d9d07ad92734b859539"
        ],
        [
            "rewrite <- H0; auto.",
            "VernacExtend",
            "075413acf92795f866dc4a2ff39c7d41ef0fda3f"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_ext: forall (A: Type) F G, (forall x: A, F x = G x) -> (Logic.ex F = Logic.ex G).",
            "VernacStartTheoremProof",
            "3a227c0ac46727ef6d7f1cf2aedd6098dee9d967"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply prop_ext; split; intro; destruct H0; exists x.",
            "VernacExtend",
            "6ed03e8d004d9012f9a3a15083c6d2f3c16426cd"
        ],
        [
            "rewrite <- H; auto.",
            "VernacExtend",
            "339e32f989b98c4748aacd68dd3407c72de16870"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma and_ext: forall A B C D, A=B -> C=D -> (A /\\ C) = (B /\\ D).",
            "VernacStartTheoremProof",
            "22231e75def370e78959b37403e4e018ea0c67d5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H; rewrite H0; auto.",
            "VernacExtend",
            "9a1a39a7fca888617757ad84b3313685aa8424f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma and_ext': forall (A: Prop) B C D, A=B -> (A -> (C=D)) -> (A /\\ C) = (B /\\ D).",
            "VernacStartTheoremProof",
            "89a35d46ef1532adbce9e731d93d5688fdac8389"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply prop_ext.",
            "VernacExtend",
            "2eefee59d08f4d00cc25a349963ba3e1c50fc334"
        ],
        [
            "intuition; subst; auto.",
            "VernacExtend",
            "a413b1004b36e70518df6bcd5c477cb046def878"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_ext: forall A B C D, A=B -> C=D -> (A \\/ C) = (B \\/ D).",
            "VernacStartTheoremProof",
            "4cde8e7c78a1af146c6add17014716046d9549d0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H; rewrite H0; auto.",
            "VernacExtend",
            "9a1a39a7fca888617757ad84b3313685aa8424f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma forall_ext: forall (A: Type) (F: A -> Prop) G, (forall x:A, F x = G x) -> (forall x, F x) = (forall x, G x).",
            "VernacStartTheoremProof",
            "81379ea8956301da2cf54f7b7cb3c30386fc78f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply prop_ext.",
            "VernacExtend",
            "2eefee59d08f4d00cc25a349963ba3e1c50fc334"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "rewrite <- H; auto.",
            "VernacExtend",
            "339e32f989b98c4748aacd68dd3407c72de16870"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma existT_ext: forall (A: Type) (P: A -> Prop) (x y: A) (Hx: P x) (Hy: P y), x = y -> existT _ x Hx = existT _ y Hy.",
            "VernacStartTheoremProof",
            "7dcc846db10a8c4a10b759e8e3846c519e58b6d0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite (proof_irr Hx Hy); auto.",
            "VernacExtend",
            "ee85c79b5b9e88f29e84cc98112920621308c60f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exist_ext: forall (A: Type) (P: A -> Prop) (x y: A) (Hx: P x) (Hy: P y), x = y -> exist _ x Hx = exist _ y Hy.",
            "VernacStartTheoremProof",
            "fcb5d7fe64f6ebf654dce0b6a9f1a12b25390f3a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite (proof_irr Hx Hy); auto.",
            "VernacExtend",
            "ee85c79b5b9e88f29e84cc98112920621308c60f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exist_ext' : forall A F (x y:@sig A F), proj1_sig x = proj1_sig y -> x = y.",
            "VernacStartTheoremProof",
            "5c635c602949326e6af2c3197aac711540242f1c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x; destruct y; simpl in *.",
            "VernacExtend",
            "08fa8791cd8abf360bfe28de11d2985421da935f"
        ],
        [
            "subst x0.",
            "VernacExtend",
            "7f80304cc4342916667b94e1d535d0a72ca10dd6"
        ],
        [
            "replace f0 with f by apply proof_irr; auto.",
            "VernacExtend",
            "cc9e9bf382b7f3cd6312b11afd7bd515914fd7dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "eq_rect_eq",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Streicher_K__eq_rect_eq.",
                        "VernacExtend",
                        "5c4d2b49855c507a8bf1cacbe4271cd950513588"
                    ]
                },
                {
                    "command": [
                        "apply UIP_refl__Streicher_K.",
                        "VernacExtend",
                        "6a53fbcf7233904da00ba20fb0af9f7b023860f3"
                    ]
                },
                {
                    "command": [
                        "hnf; intros; hnf; intros.",
                        "VernacExtend",
                        "29aaecb4cee42d85844ae0f5ac71a6bfcb9e640f"
                    ]
                },
                {
                    "command": [
                        "apply proof_irr.",
                        "VernacExtend",
                        "10d46e46974f89c2b3a9463c04a06ee6c39cd171"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imp_ext",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst A'.",
                        "VernacExtend",
                        "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; split; intros; auto.",
                        "VernacExtend",
                        "df3adea446173ace18cd4d9d07ad92734b859539"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; auto.",
                        "VernacExtend",
                        "075413acf92795f866dc4a2ff39c7d41ef0fda3f"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_ext",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; split; intro; destruct H0; exists x.",
                        "VernacExtend",
                        "6ed03e8d004d9012f9a3a15083c6d2f3c16426cd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; auto.",
                        "VernacExtend",
                        "339e32f989b98c4748aacd68dd3407c72de16870"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_ext",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H; rewrite H0; auto.",
                        "VernacExtend",
                        "9a1a39a7fca888617757ad84b3313685aa8424f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_ext'",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext.",
                        "VernacExtend",
                        "2eefee59d08f4d00cc25a349963ba3e1c50fc334"
                    ]
                },
                {
                    "command": [
                        "intuition; subst; auto.",
                        "VernacExtend",
                        "a413b1004b36e70518df6bcd5c477cb046def878"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_ext",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H; rewrite H0; auto.",
                        "VernacExtend",
                        "9a1a39a7fca888617757ad84b3313685aa8424f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "forall_ext",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext.",
                        "VernacExtend",
                        "2eefee59d08f4d00cc25a349963ba3e1c50fc334"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; auto.",
                        "VernacExtend",
                        "339e32f989b98c4748aacd68dd3407c72de16870"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existT_ext",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (proof_irr Hx Hy); auto.",
                        "VernacExtend",
                        "ee85c79b5b9e88f29e84cc98112920621308c60f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exist_ext",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (proof_irr Hx Hy); auto.",
                        "VernacExtend",
                        "ee85c79b5b9e88f29e84cc98112920621308c60f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exist_ext'",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; simpl in *.",
                        "VernacExtend",
                        "08fa8791cd8abf360bfe28de11d2985421da935f"
                    ]
                },
                {
                    "command": [
                        "subst x0.",
                        "VernacExtend",
                        "7f80304cc4342916667b94e1d535d0a72ca10dd6"
                    ]
                },
                {
                    "command": [
                        "replace f0 with f by apply proof_irr; auto.",
                        "VernacExtend",
                        "cc9e9bf382b7f3cd6312b11afd7bd515914fd7dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}