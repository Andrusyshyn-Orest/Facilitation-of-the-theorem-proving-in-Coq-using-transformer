{
    "filename": "Redexes.v",
    "coq_project": "lambda",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Test.",
            "VernacRequire",
            "5d9a9d7838cb3bc0d54a1d604cb6990cc3adaa06"
        ],
        [
            "Require Import Terms.",
            "VernacRequire",
            "84a2699be631f67e3ce8456022a355bf1cfc7856"
        ],
        [
            "Require Import Reduction.",
            "VernacRequire",
            "b4f31534e0a3ec0c7960d4eda541335d22352b95"
        ],
        [
            "Inductive redexes : Set := | Var : nat -> redexes | Fun : redexes -> redexes | Ap : bool -> redexes -> redexes -> redexes.",
            "VernacInductive",
            "df7e69f1b51df861196eae08770f1a2b55965c44"
        ],
        [
            "Inductive sub : redexes -> redexes -> Prop := | Sub_Var : forall n : nat, sub (Var n) (Var n) | Sub_Fun : forall U V : redexes, sub U V -> sub (Fun U) (Fun V) | Sub_Ap1 : forall U1 V1 : redexes, sub U1 V1 -> forall U2 V2 : redexes, sub U2 V2 -> forall b : bool, sub (Ap false U1 U2) (Ap b V1 V2) | Sub_Ap2 : forall U1 V1 : redexes, sub U1 V1 -> forall U2 V2 : redexes, sub U2 V2 -> forall b : bool, sub (Ap true U1 U2) (Ap true V1 V2).",
            "VernacInductive",
            "7dec74697d5b5adad65298fcef3c9a466b6b9676"
        ],
        [
            "Definition bool_max (b b' : bool) := match b return bool with | true => true | false => b' end.",
            "VernacDefinition",
            "bbd658fbf9276058d2936cb06d91b122b0034b48"
        ],
        [
            "Lemma max_false : forall b : bool, bool_max b false = b.",
            "VernacStartTheoremProof",
            "86f892aa07eeca0618cc1f1cdb013f7a8a22fffe"
        ],
        [
            "simple induction b; simpl in |- *; trivial.",
            "VernacExtend",
            "be43c16d47f2698dcec31bebef3c6aec731ba474"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive union : redexes -> redexes -> redexes -> Prop := | Union_Var : forall n : nat, union (Var n) (Var n) (Var n) | Union_Fun : forall U V W : redexes, union U V W -> union (Fun U) (Fun V) (Fun W) | Union_Ap : forall U1 V1 W1 : redexes, union U1 V1 W1 -> forall U2 V2 W2 : redexes, union U2 V2 W2 -> forall b1 b2 : bool, union (Ap b1 U1 U2) (Ap b2 V1 V2) (Ap (bool_max b1 b2) W1 W2).",
            "VernacInductive",
            "3d5908c6407722c0d368f0ceb0a8420b2b1349d7"
        ],
        [
            "Lemma union_l : forall U V W : redexes, union U V W -> sub U W.",
            "VernacStartTheoremProof",
            "13b6b4bcbcfe9a70d5c6ecf2e0eaf65f742ad9a0"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "apply Sub_Var.",
            "VernacExtend",
            "98642316a9641a4e28e000786b6ac74532b12249"
        ],
        [
            "apply Sub_Fun; trivial.",
            "VernacExtend",
            "0ba12cdc196f7fc4407eabc8cc08d2b5dc81496c"
        ],
        [
            "elim b1.",
            "VernacExtend",
            "e56693198c91ed42bdd9da7d5e65f768de914997"
        ],
        [
            "elim b2; simpl in |- *; apply Sub_Ap2; trivial.",
            "VernacExtend",
            "671492448f4cda70a5057a0aab846d9cf1f982e0"
        ],
        [
            "elim b2; simpl in |- *; apply Sub_Ap1; trivial.",
            "VernacExtend",
            "1d2b755b2aba8177debc7b335e53ead6b5c3347f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_r : forall U V W : redexes, union U V W -> sub V W.",
            "VernacStartTheoremProof",
            "6a887a29b51e7e53ae46870e14758f18065d3672"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "apply Sub_Var.",
            "VernacExtend",
            "98642316a9641a4e28e000786b6ac74532b12249"
        ],
        [
            "apply Sub_Fun; trivial.",
            "VernacExtend",
            "0ba12cdc196f7fc4407eabc8cc08d2b5dc81496c"
        ],
        [
            "elim b2.",
            "VernacExtend",
            "b93d930bce097aded76351c20796c8fb3323b7d9"
        ],
        [
            "elim b1; simpl in |- *; apply Sub_Ap2; trivial.",
            "VernacExtend",
            "36f622f2ff8ce8b8154af4284d2c4d6e3a360fc0"
        ],
        [
            "elim b1; simpl in |- *; apply Sub_Ap1; trivial.",
            "VernacExtend",
            "cd1c3e44e8988408f0a76022571db8e147556f5b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_max_Sym : forall b b' : bool, bool_max b b' = bool_max b' b.",
            "VernacStartTheoremProof",
            "76cf282b44cd1542ae5dda8b57cd08356eff1458"
        ],
        [
            "simple induction b; simple induction b'; simpl in |- *; trivial.",
            "VernacExtend",
            "849405ba4c2149c6f72078af5b9f3055b804d5c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_sym : forall U V W : redexes, union U V W -> union V U W.",
            "VernacStartTheoremProof",
            "e89542e147d8348b7ffb6158089d698d3169477a"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "apply Union_Var; trivial.",
            "VernacExtend",
            "c4d778d329b71bdb57688c7e4e78b05e9b51e2e0"
        ],
        [
            "apply Union_Fun; trivial.",
            "VernacExtend",
            "6235055e54f9c864c96aca3c1a2d5c5d8dee0404"
        ],
        [
            "rewrite (bool_max_Sym b1 b2); apply Union_Ap; trivial.",
            "VernacExtend",
            "938f186442ffc1f00c8d121c9347d8bd0c408db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive comp : redexes -> redexes -> Prop := | Comp_Var : forall n : nat, comp (Var n) (Var n) | Comp_Fun : forall U V : redexes, comp U V -> comp (Fun U) (Fun V) | Comp_Ap : forall U1 V1 : redexes, comp U1 V1 -> forall U2 V2 : redexes, comp U2 V2 -> forall b1 b2 : bool, comp (Ap b1 U1 U2) (Ap b2 V1 V2).",
            "VernacInductive",
            "6abe927bd85e18f1c05298aa2d698f3a7df3396d"
        ],
        [
            "Hint Resolve Comp_Var Comp_Fun Comp_Ap.",
            "VernacHints",
            "49491a01b89fd01b6a7c24dd4a4c871cea4dd8a2"
        ],
        [
            "Lemma comp_refl : forall U : redexes, comp U U.",
            "VernacStartTheoremProof",
            "dbcb3c4dfdfb04c5b4167101ce88425ca4bea5d7"
        ],
        [
            "simple induction U; auto.",
            "VernacExtend",
            "1d9430a27ec3271cbd276b733887fc1e5d56e5c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_sym : forall U V : redexes, comp U V -> comp V U.",
            "VernacStartTheoremProof",
            "80deb91b29b4347176d91a5b00fbac0972fff16d"
        ],
        [
            "simple induction 1; auto.",
            "VernacExtend",
            "9a39907ecc79e5b168fb55631dea1a654e88b050"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_trans : forall U V : redexes, comp U V -> forall (W : redexes) (CVW : comp V W), comp U W.",
            "VernacStartTheoremProof",
            "73cc854f21b1faedfbbd73ff2242352b3d3140ac"
        ],
        [
            "simple induction 1; intros; inversion_clear CVW; auto.",
            "VernacExtend",
            "d4d0c12b00347759e51d8178099b52d79b04cc17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_defined : forall U V : redexes, comp U V -> exists W : redexes, union U V W.",
            "VernacStartTheoremProof",
            "d42a041c184de5edbb055ca1edb8191e833ede65"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "intro n; exists (Var n); apply Union_Var.",
            "VernacExtend",
            "901675a79495202fb99600544d35da87902b15b0"
        ],
        [
            "simple induction 2; intros W0 H2; exists (Fun W0); apply Union_Fun; trivial.",
            "VernacExtend",
            "9700e7f1434f7dbf86c011e185185782b389de24"
        ],
        [
            "intros U1 V1 H1 E1 U2 V2 H2 E2; elim E1; elim E2.",
            "VernacExtend",
            "4ab2f9060b1a604a91ac1f8841f330cdbaf36112"
        ],
        [
            "intros W2 A W1 B b1 b2; exists (Ap (bool_max b1 b2) W1 W2).",
            "VernacExtend",
            "be01e92edb2b32191d8be061618f9212ab1417c0"
        ],
        [
            "apply Union_Ap; trivial.",
            "VernacExtend",
            "8da297edd90830dbb43c0afd987f578f6d7fe80c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint regular (U : redexes) : Prop := match U with | Var n => True | Fun V => regular V | Ap true (Fun _ as V) W => regular V /\\ regular W | Ap true _ W => False | Ap false V W => regular V /\\ regular W end.",
            "VernacFixpoint",
            "e569b302181940603a180900bc1d12e95ae0285d"
        ],
        [
            "Lemma union_preserve_regular : forall U V W : redexes, union U V W -> regular U -> regular V -> regular W.",
            "VernacStartTheoremProof",
            "59607e046428afe83b95d1e5ac0a292f771fc9f4"
        ],
        [
            "simple induction 1; simpl in |- *; trivial.",
            "VernacExtend",
            "2eb8f1729fcb8d64b8667bc8ce523835ca840442"
        ],
        [
            "simple induction b1; simple induction b2; simpl in |- *.",
            "VernacExtend",
            "83daff739a2744a946b476eaa6ec7e06fe069f96"
        ],
        [
            "generalize H1.",
            "VernacExtend",
            "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
        ],
        [
            "elim H0; try contradiction.",
            "VernacExtend",
            "17773f27d875871c11bfe6580e213c699c34155b"
        ],
        [
            "intros; elim H7; elim H8; auto.",
            "VernacExtend",
            "67aefac1030f397df730de4c2fb15f710ed1f552"
        ],
        [
            "generalize H1.",
            "VernacExtend",
            "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
        ],
        [
            "elim H0; try contradiction.",
            "VernacExtend",
            "17773f27d875871c11bfe6580e213c699c34155b"
        ],
        [
            "intros; elim H7; elim H8; auto.",
            "VernacExtend",
            "67aefac1030f397df730de4c2fb15f710ed1f552"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "generalize H1.",
            "VernacExtend",
            "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
        ],
        [
            "elim H0; try contradiction.",
            "VernacExtend",
            "17773f27d875871c11bfe6580e213c699c34155b"
        ],
        [
            "intros; elim H10; auto.",
            "VernacExtend",
            "231be52d264122972670523ef4e15358c64c8a14"
        ],
        [
            "simple induction 1; intros O1 O2; simple induction 1; auto.",
            "VernacExtend",
            "824b126f33e630a18fb34541eda63714b64031eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "max_false",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "simple induction b; simpl in |- *; trivial.",
                        "VernacExtend",
                        "be43c16d47f2698dcec31bebef3c6aec731ba474"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_l",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "apply Sub_Var.",
                        "VernacExtend",
                        "98642316a9641a4e28e000786b6ac74532b12249"
                    ]
                },
                {
                    "command": [
                        "apply Sub_Fun; trivial.",
                        "VernacExtend",
                        "0ba12cdc196f7fc4407eabc8cc08d2b5dc81496c"
                    ]
                },
                {
                    "command": [
                        "elim b1.",
                        "VernacExtend",
                        "e56693198c91ed42bdd9da7d5e65f768de914997"
                    ]
                },
                {
                    "command": [
                        "elim b2; simpl in |- *; apply Sub_Ap2; trivial.",
                        "VernacExtend",
                        "671492448f4cda70a5057a0aab846d9cf1f982e0"
                    ]
                },
                {
                    "command": [
                        "elim b2; simpl in |- *; apply Sub_Ap1; trivial.",
                        "VernacExtend",
                        "1d2b755b2aba8177debc7b335e53ead6b5c3347f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_r",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "apply Sub_Var.",
                        "VernacExtend",
                        "98642316a9641a4e28e000786b6ac74532b12249"
                    ]
                },
                {
                    "command": [
                        "apply Sub_Fun; trivial.",
                        "VernacExtend",
                        "0ba12cdc196f7fc4407eabc8cc08d2b5dc81496c"
                    ]
                },
                {
                    "command": [
                        "elim b2.",
                        "VernacExtend",
                        "b93d930bce097aded76351c20796c8fb3323b7d9"
                    ]
                },
                {
                    "command": [
                        "elim b1; simpl in |- *; apply Sub_Ap2; trivial.",
                        "VernacExtend",
                        "36f622f2ff8ce8b8154af4284d2c4d6e3a360fc0"
                    ]
                },
                {
                    "command": [
                        "elim b1; simpl in |- *; apply Sub_Ap1; trivial.",
                        "VernacExtend",
                        "cd1c3e44e8988408f0a76022571db8e147556f5b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_max_Sym",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "simple induction b; simple induction b'; simpl in |- *; trivial.",
                        "VernacExtend",
                        "849405ba4c2149c6f72078af5b9f3055b804d5c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_sym",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "apply Union_Var; trivial.",
                        "VernacExtend",
                        "c4d778d329b71bdb57688c7e4e78b05e9b51e2e0"
                    ]
                },
                {
                    "command": [
                        "apply Union_Fun; trivial.",
                        "VernacExtend",
                        "6235055e54f9c864c96aca3c1a2d5c5d8dee0404"
                    ]
                },
                {
                    "command": [
                        "rewrite (bool_max_Sym b1 b2); apply Union_Ap; trivial.",
                        "VernacExtend",
                        "938f186442ffc1f00c8d121c9347d8bd0c408db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_refl",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "simple induction U; auto.",
                        "VernacExtend",
                        "1d9430a27ec3271cbd276b733887fc1e5d56e5c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_sym",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "simple induction 1; auto.",
                        "VernacExtend",
                        "9a39907ecc79e5b168fb55631dea1a654e88b050"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_trans",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros; inversion_clear CVW; auto.",
                        "VernacExtend",
                        "d4d0c12b00347759e51d8178099b52d79b04cc17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_defined",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "intro n; exists (Var n); apply Union_Var.",
                        "VernacExtend",
                        "901675a79495202fb99600544d35da87902b15b0"
                    ]
                },
                {
                    "command": [
                        "simple induction 2; intros W0 H2; exists (Fun W0); apply Union_Fun; trivial.",
                        "VernacExtend",
                        "9700e7f1434f7dbf86c011e185185782b389de24"
                    ]
                },
                {
                    "command": [
                        "intros U1 V1 H1 E1 U2 V2 H2 E2; elim E1; elim E2.",
                        "VernacExtend",
                        "4ab2f9060b1a604a91ac1f8841f330cdbaf36112"
                    ]
                },
                {
                    "command": [
                        "intros W2 A W1 B b1 b2; exists (Ap (bool_max b1 b2) W1 W2).",
                        "VernacExtend",
                        "be01e92edb2b32191d8be061618f9212ab1417c0"
                    ]
                },
                {
                    "command": [
                        "apply Union_Ap; trivial.",
                        "VernacExtend",
                        "8da297edd90830dbb43c0afd987f578f6d7fe80c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_preserve_regular",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "simple induction 1; simpl in |- *; trivial.",
                        "VernacExtend",
                        "2eb8f1729fcb8d64b8667bc8ce523835ca840442"
                    ]
                },
                {
                    "command": [
                        "simple induction b1; simple induction b2; simpl in |- *.",
                        "VernacExtend",
                        "83daff739a2744a946b476eaa6ec7e06fe069f96"
                    ]
                },
                {
                    "command": [
                        "generalize H1.",
                        "VernacExtend",
                        "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
                    ]
                },
                {
                    "command": [
                        "elim H0; try contradiction.",
                        "VernacExtend",
                        "17773f27d875871c11bfe6580e213c699c34155b"
                    ]
                },
                {
                    "command": [
                        "intros; elim H7; elim H8; auto.",
                        "VernacExtend",
                        "67aefac1030f397df730de4c2fb15f710ed1f552"
                    ]
                },
                {
                    "command": [
                        "generalize H1.",
                        "VernacExtend",
                        "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
                    ]
                },
                {
                    "command": [
                        "elim H0; try contradiction.",
                        "VernacExtend",
                        "17773f27d875871c11bfe6580e213c699c34155b"
                    ]
                },
                {
                    "command": [
                        "intros; elim H7; elim H8; auto.",
                        "VernacExtend",
                        "67aefac1030f397df730de4c2fb15f710ed1f552"
                    ]
                },
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "generalize H1.",
                        "VernacExtend",
                        "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
                    ]
                },
                {
                    "command": [
                        "elim H0; try contradiction.",
                        "VernacExtend",
                        "17773f27d875871c11bfe6580e213c699c34155b"
                    ]
                },
                {
                    "command": [
                        "intros; elim H10; auto.",
                        "VernacExtend",
                        "231be52d264122972670523ef4e15358c64c8a14"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros O1 O2; simple induction 1; auto.",
                        "VernacExtend",
                        "824b126f33e630a18fb34541eda63714b64031eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}