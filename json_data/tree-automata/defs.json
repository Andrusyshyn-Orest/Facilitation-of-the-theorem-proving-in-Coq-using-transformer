{
    "filename": "defs.v",
    "coq_project": "tree-automata",
    "vernac_cmds": [
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "From IntMap Require Import Allmaps.",
            "VernacRequire",
            "d3a19fbc306700804973888ef7ccf716277e64fb"
        ],
        [
            "Require Import EqNat.",
            "VernacRequire",
            "6f4e2e752aa686b7ad3ad5aff446ff7d64b7cc4d"
        ],
        [
            "Require Import bases.",
            "VernacRequire",
            "8603497516dd0ed19a5175ca37feedaf1a8642c9"
        ],
        [
            "Inductive term : Set := app : ad -> term_list -> term with term_list : Set := | tnil : term_list | tcons : term -> term_list -> term_list.",
            "VernacInductive",
            "13bc9cf12502fc9fbd36aa8090e655beef18329c"
        ],
        [
            "Scheme term_term_list_rec := Induction for term Sort Set with term_list_term_rec := Induction for term_list Sort Set.",
            "VernacScheme",
            "0dd9bef9da06f4bcf3ec3ab70d42a71da51cd8c9"
        ],
        [
            "Scheme term_term_list_ind := Induction for term Sort Prop with term_list_term_ind := Induction for term_list Sort Prop.",
            "VernacScheme",
            "7db4511cf641f73356e98f84ec6c832c76dfbb6e"
        ],
        [
            "Lemma term_list_disj : forall l : term_list, l = tnil \\/ (exists hd : term, (exists tl : term_list, l = tcons hd tl)).",
            "VernacStartTheoremProof",
            "c5a14b405ffdb17a4fe9212ce44c23e34f0c4171"
        ],
        [
            "simple induction l.",
            "VernacExtend",
            "baf54048118103088e518cfa16c3b5327b3c1c28"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split with t.",
            "VernacExtend",
            "b391be3fd10032b5e92995a552af94a4cfd2c47b"
        ],
        [
            "split with t0.",
            "VernacExtend",
            "73f3c7dfbad1400de614d8ed195fa1bcd3726dc1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint lst_length (l : term_list) : nat := match l with | tnil => 0 | tcons _ l' => S (lst_length l') end.",
            "VernacFixpoint",
            "2d94c79a7929bd5f50d544f743bd73a1c90b4148"
        ],
        [
            "Fixpoint term_high (t : term) : nat := match t with | app a l => S (term_high_0 l) end with term_high_0 (l : term_list) : nat := match l with | tnil => 0 | tcons hd tl => max (term_high hd) (term_high_0 tl) end.",
            "VernacFixpoint",
            "1aab91ce423269292b6da58e405407752bce9697"
        ],
        [
            "Lemma high_aux_0 : forall (a : ad) (l : term_list), S (term_high_0 l) <= term_high (app a l).",
            "VernacStartTheoremProof",
            "3896aac787397db20dd616d39261026838926ac5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold term_high in |- *.",
            "VernacExtend",
            "c1866906e20d3b9b8ad312ee302fc0044128baea"
        ],
        [
            "unfold term_high_0 in |- *.",
            "VernacExtend",
            "05f21c7ecc893961652fc2a6e2df75e9d1125468"
        ],
        [
            "exact (le_n_n _).",
            "VernacExtend",
            "75996f6621e5d42df1b20f059019cffd7c7da1fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma high_aux_1 : forall (a : ad) (l : term_list), S (term_high_0 l) = term_high (app a l).",
            "VernacStartTheoremProof",
            "e81b55252f5714e4172657f04a91ebc1a8e29a3b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold term_high in |- *.",
            "VernacExtend",
            "c1866906e20d3b9b8ad312ee302fc0044128baea"
        ],
        [
            "unfold term_high_0 in |- *.",
            "VernacExtend",
            "05f21c7ecc893961652fc2a6e2df75e9d1125468"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma high_aux_2 : forall (l : term_list) (c : ad), 1 <= term_high (app c l).",
            "VernacStartTheoremProof",
            "dc91a67df7672681cf0c3dd3e46d4a09d7daf9dd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (S (term_high_0 l) <= term_high (app c l)).",
            "VernacExtend",
            "dd211f6783b5c3e9c37dfc2b62cc9a057449a6c4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (1 <= S (term_high_0 l)).",
            "VernacExtend",
            "9c9cc6126490f92696f56f1b3b9bbf088d9c4bb5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exact (le_trans 1 (S (term_high_0 l)) (term_high (app c l)) H0 H).",
            "VernacExtend",
            "f3b4430b642e4e3e9797ee2721e36d9aca91dee6"
        ],
        [
            "exact (le_n_S 0 (term_high_0 l) (le_O_n (term_high_0 l))).",
            "VernacExtend",
            "47aad2e871597acf34a1aff117ebbf9479624d9e"
        ],
        [
            "exact (high_aux_0 c l).",
            "VernacExtend",
            "3b54d49328b552f14a9421caf27f81ad6b447676"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma high_aux_3 : forall (t : term) (tl : term_list), term_high t <= term_high_0 (tcons t tl).",
            "VernacStartTheoremProof",
            "c65a54272ae86a93519cffa499b66d9ac6804718"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold term_high in |- *.",
            "VernacExtend",
            "c1866906e20d3b9b8ad312ee302fc0044128baea"
        ],
        [
            "exact (le_max_l _ (term_high_0 tl)).",
            "VernacExtend",
            "4ddf229ec52f4d6d27071a6fc7f98cc38cb13aba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma high_aux_4 : forall (t : term) (tl : term_list), term_high_0 tl <= term_high_0 (tcons t tl).",
            "VernacStartTheoremProof",
            "38b208bfb231fe4c0c234c02306e92eb3ad3ed62"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (term_high_0 (tcons t tl) = max (term_high t) (term_high_0 tl)).",
            "VernacExtend",
            "f334a2a9b11e53db381f386663e313518754d951"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "exact (le_max_r (term_high t) (term_high_0 tl)).",
            "VernacExtend",
            "deae8e7b2b765606f996a1d62e23d08a2211d337"
        ],
        [
            "unfold term_high_0 in |- *.",
            "VernacExtend",
            "05f21c7ecc893961652fc2a6e2df75e9d1125468"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint taille_term (t : term) : nat := match t with | app c l => S (mtaille_term_list l) end with mtaille_term_list (l : term_list) : nat := match l with | tnil => 0 | tcons hd tl => max (taille_term hd) (mtaille_term_list tl) end.",
            "VernacFixpoint",
            "f7eceaa2ffbeb15b916687129c6f82abf959a5e7"
        ],
        [
            "Inductive prec_list : Set := | prec_cons : ad -> prec_list -> prec_list -> prec_list | prec_empty : prec_list.",
            "VernacInductive",
            "b1a73b1467e8190efe31f91ec83da021314bdca1"
        ],
        [
            "Lemma pl_sum : forall pl : prec_list, pl = prec_empty \\/ (exists a : ad, (exists la : prec_list, (exists ls : prec_list, pl = prec_cons a la ls))).",
            "VernacStartTheoremProof",
            "f88853ef65e207efabd2ab03cb3fc956ec31359a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction pl as [a pl1 Hrecpl1 pl0 Hrecpl0| ].",
            "VernacExtend",
            "01845bd0b5359d056705892fdc09bcd6a65ac08f"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split with a.",
            "VernacExtend",
            "ee2c8e0abe31c513cce3f85943ab3d9407fcd951"
        ],
        [
            "split with pl1.",
            "VernacExtend",
            "83c58e149d886f5c7ce2a4cdaeaa2d7170feea14"
        ],
        [
            "split with pl0.",
            "VernacExtend",
            "1d5f4d236c85017efb7703dc7a771d7d1cb16d7b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition state := Map prec_list.",
            "VernacDefinition",
            "62d790bc00e4506d7405023d9a8214704d4de2bd"
        ],
        [
            "Definition preDTA := Map state.",
            "VernacDefinition",
            "925e957f2b9416630346df70c81c10642c7f6834"
        ],
        [
            "Inductive DTA : Set := dta : preDTA -> ad -> DTA.",
            "VernacInductive",
            "02094b9f87c60fa8657eee63a357e4811b7f88b1"
        ],
        [
            "Fixpoint taille_0 (l : prec_list) : nat := match l with | prec_empty => 0 | prec_cons x y z => S (taille_0 y + taille_0 z) end.",
            "VernacFixpoint",
            "6e7a56ffbf842cc5f7b44db53d49e192e4d709fb"
        ],
        [
            "Fixpoint taille_1 (s : state) : nat := match s with | M0 => 0 | M1 x y => taille_0 y | M2 x y => max (taille_1 x) (taille_1 y) end.",
            "VernacFixpoint",
            "4c360b9e0e90da109e411c6d18eeb24576e486cc"
        ],
        [
            "Fixpoint DTA_taille (d : preDTA) : nat := match d with | M0 => 0 | M1 x y => taille_1 y | M2 x y => max (DTA_taille x) (DTA_taille y) end.",
            "VernacFixpoint",
            "f76028f410d5a9f19eec46ddbaa67e7f7133a940"
        ],
        [
            "Lemma taille_aux_0 : forall (a : ad) (la ls : prec_list), S (taille_0 la) <= taille_0 (prec_cons a la ls).",
            "VernacStartTheoremProof",
            "9a4f21c8989501a91c2487f3f1df78e9e8d65e3c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (le_n_S (taille_0 la) (taille_0 la + taille_0 ls)).",
            "VernacExtend",
            "5b5409d3ae9805d33c98167cf4642afb5a42e83a"
        ],
        [
            "exact (le_plus_l (taille_0 la) (taille_0 ls)).",
            "VernacExtend",
            "08b446f4243958944ab68f315fb01d3527e3d1ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma taille_aux_1 : forall (a : ad) (la ls : prec_list), 1 <= taille_0 (prec_cons a la ls).",
            "VernacStartTheoremProof",
            "4c43e2c606b0c6c2f087c50abf6873c9ac3bb7b6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold taille_0 in |- *.",
            "VernacExtend",
            "97179755987a50a89c278f470dbfe25af45e8e46"
        ],
        [
            "exact (le_n_S 0 _ (le_O_n _)).",
            "VernacExtend",
            "e5450ce4f29bbca43860e20b2cb18fb1d3b39980"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma taille_aux_2 : forall (a : ad) (la ls : prec_list), S (taille_0 ls) <= taille_0 (prec_cons a la ls).",
            "VernacStartTheoremProof",
            "30295b60ca095af0c82b812e52662c9ca5a68249"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (le_n_S (taille_0 ls) (taille_0 la + taille_0 ls)).",
            "VernacExtend",
            "587315d1664c667d863b284089684c81812db16a"
        ],
        [
            "exact (le_plus_r (taille_0 la) (taille_0 ls)).",
            "VernacExtend",
            "b726af26ee508235c2b0118d36f0ad00d893e3d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive prec_occur : prec_list -> ad -> Prop := | prec_hd : forall (a : ad) (pl0 pl1 : prec_list), prec_occur (prec_cons a pl0 pl1) a | prec_int0 : forall (a b : ad) (pl0 pl1 : prec_list), prec_occur pl0 b -> prec_occur (prec_cons a pl0 pl1) b | prec_int1 : forall (a b : ad) (pl0 pl1 : prec_list), prec_occur pl1 b -> prec_occur (prec_cons a pl0 pl1) b.",
            "VernacInductive",
            "939798846a56c6e86b6059ede382b9e36defde16"
        ],
        [
            "Inductive prec_contained : prec_list -> prec_list -> Prop := | prec_id : forall p : prec_list, prec_contained p p | prec_c_int0 : forall (p p0 p1 : prec_list) (a : ad), prec_contained p p0 -> prec_contained p (prec_cons a p0 p1) | prec_c_int1 : forall (p p0 p1 : prec_list) (a : ad), prec_contained p p1 -> prec_contained p (prec_cons a p0 p1).",
            "VernacInductive",
            "ec9b9def8e11a6faf44d31dfad4d9147e132b299"
        ],
        [
            "Definition state_in_dta (d : preDTA) (s : state) : Prop := exists a : ad, MapGet state d a = Some s.",
            "VernacDefinition",
            "35445cf20d4b7d338fadf622c4187cbeff9eb24f"
        ],
        [
            "Definition state_in_dta_diff (d : preDTA) (s : state) (a : ad) : Prop := exists b : ad, MapGet state d b = Some s /\\ a <> b.",
            "VernacDefinition",
            "2d07013bb63653b88d2cf1b4bd5aba1c0716251a"
        ],
        [
            "Definition prec_in_dta (d : preDTA) (p : prec_list) : Prop := exists s : state, (exists a : ad, (exists c : ad, MapGet state d a = Some s /\\ MapGet prec_list s c = Some p)).",
            "VernacDefinition",
            "4d64e4337aa2c129be3a0259a7121c774582c5be"
        ],
        [
            "Definition prec_in_dta_cont (d : preDTA) (p : prec_list) : Prop := exists s : state, (exists b : ad, (exists c : ad, (exists p0 : prec_list, MapGet state d b = Some s /\\ MapGet prec_list s c = Some p0 /\\ prec_contained p p0))).",
            "VernacDefinition",
            "fd0af2c485955d215826c0bcb93e6f498408ff3d"
        ],
        [
            "Definition prec_in_dta_diff (d : preDTA) (p : prec_list) (a : ad) : Prop := exists s : state, (exists b : ad, (exists c : ad, MapGet state d b = Some s /\\ MapGet prec_list s c = Some p /\\ a <> b)).",
            "VernacDefinition",
            "8999c32ad2fee1aec52d84654b2a20a1127f7130"
        ],
        [
            "Definition prec_in_dta_diff_cont (d : preDTA) (p : prec_list) (a : ad) : Prop := exists s : state, (exists b : ad, (exists c : ad, (exists p0 : prec_list, MapGet state d b = Some s /\\ MapGet prec_list s c = Some p0 /\\ prec_contained p p0 /\\ a <> b))).",
            "VernacDefinition",
            "0eecb8c43eaed463b1dc875b789781cf20b5a1a0"
        ],
        [
            "Definition prec_in_state (s : state) (p : prec_list) : Prop := exists c : ad, MapGet prec_list s c = Some p.",
            "VernacDefinition",
            "48136e269d3bb895960afd940c19f7d3accb2f22"
        ],
        [
            "Lemma prec_in_state_M0_false : forall p : prec_list, ~ prec_in_state (M0 prec_list) p.",
            "VernacStartTheoremProof",
            "47fcc2c451da9cda910dcee6d5efc27b6bfaced9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact (in_M0_false prec_list p).",
            "VernacExtend",
            "8ca2e2be726585013ba2d4cbd9552d5a44f66bac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma state_in_dta_M0_false : forall s : state, ~ state_in_dta (M0 state) s.",
            "VernacStartTheoremProof",
            "f69b1d1eacfaaf2378fce1bfbe3630cd9afa0f24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact (in_M0_false state s).",
            "VernacExtend",
            "a4b3962554323ea57356a5d5de3ddef437a2e1b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prec_occur_1 : forall (a : ad) (p0 p1 p2 : prec_list), prec_contained (prec_cons a p0 p1) p2 -> prec_occur p2 a.",
            "VernacStartTheoremProof",
            "789e5deff1dc9f119e6c9ad48e4fe529cc3951f9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction p2 as [a0 p2_1 Hrecp2_1 p2_0 Hrecp2_0| ].",
            "VernacExtend",
            "13e6c13014097118badd10d9f2f3e159b035c6fc"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "exact (prec_hd a0 p2_1 p2_0).",
            "VernacExtend",
            "7105a98fb28e36dd08257563013bb52b19485f5d"
        ],
        [
            "exact (prec_int0 a0 a p2_1 p2_0 (Hrecp2_1 H2)).",
            "VernacExtend",
            "4f7c03fbd35022cad197ecef7a5f17f18040a691"
        ],
        [
            "exact (prec_int1 a0 a p2_1 p2_0 (Hrecp2_0 H2)).",
            "VernacExtend",
            "5df777fd313c06d425582fc986865e49d4050260"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prec_contained_0 : forall (a : ad) (p0 p1 p2 : prec_list), prec_contained (prec_cons a p0 p1) p2 -> prec_contained p0 p2.",
            "VernacStartTheoremProof",
            "16fcefc3a3b640ac13950777cac1ec9baa201f37"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction p2 as [a0 p2_1 Hrecp2_1 p2_0 Hrecp2_0| ].",
            "VernacExtend",
            "13e6c13014097118badd10d9f2f3e159b035c6fc"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "exact (prec_c_int0 p2_1 p2_1 p2_0 a0 (prec_id p2_1)).",
            "VernacExtend",
            "728ba90889a2d2f11418c8935fd16f8d1c683ce6"
        ],
        [
            "exact (prec_c_int0 _ _ _ _ (Hrecp2_1 H2)).",
            "VernacExtend",
            "817262996a998fcc2e12aa34cd4776695fc03775"
        ],
        [
            "exact (prec_c_int1 _ _ _ _ (Hrecp2_0 H2)).",
            "VernacExtend",
            "ccac42f17fda3df089c3a7341d5762572bc0fb3b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prec_contained_1 : forall (a : ad) (p0 p1 p2 : prec_list), prec_contained (prec_cons a p0 p1) p2 -> prec_contained p1 p2.",
            "VernacStartTheoremProof",
            "718043c714461fde0e6c5d6067e19944799397f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction p2 as [a0 p2_1 Hrecp2_1 p2_0 Hrecp2_0| ].",
            "VernacExtend",
            "13e6c13014097118badd10d9f2f3e159b035c6fc"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "exact (prec_c_int1 _ _ _ _ (prec_id p2_0)).",
            "VernacExtend",
            "3d4431082da501846e35805e95361f99b3c7b5db"
        ],
        [
            "exact (prec_c_int0 _ _ _ _ (Hrecp2_1 H2)).",
            "VernacExtend",
            "817262996a998fcc2e12aa34cd4776695fc03775"
        ],
        [
            "exact (prec_c_int1 _ _ _ _ (Hrecp2_0 H2)).",
            "VernacExtend",
            "ccac42f17fda3df089c3a7341d5762572bc0fb3b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive term_occur : term -> term -> Prop := | to_eq : forall t : term, term_occur t t | to_st : forall (t : term) (a : ad) (tl : term_list), term_list_occur t tl -> term_occur t (app a tl) with term_list_occur : term -> term_list -> Prop := | tlo_head : forall (t hd : term) (tl : term_list), term_occur t hd -> term_list_occur t (tcons hd tl) | tlo_tail : forall (t hd : term) (tl : term_list), term_list_occur t tl -> term_list_occur t (tcons hd tl).",
            "VernacInductive",
            "b53294854bebb9dcf86e0f8c48c3223eeca862ac"
        ],
        [
            "Definition term_occur_def_0 (t : term) := forall u : term, term_occur u t -> term_high u <= term_high t.",
            "VernacDefinition",
            "6e0ec002d07962a4d697ff23d442c31f79780161"
        ],
        [
            "Definition term_occur_def_1 (t : term_list) := forall u : term, term_list_occur u t -> term_high u <= term_high_0 t.",
            "VernacDefinition",
            "0244e298b64f597e1a11878fd7e20c130621230c"
        ],
        [
            "Lemma term_occur_0_0 : forall (a : ad) (t : term_list), term_occur_def_1 t -> term_occur_def_0 (app a t).",
            "VernacStartTheoremProof",
            "52fc76f883e804cdcda4aee51d5e9e6541024847"
        ],
        [
            "unfold term_occur_def_1 in |- *.",
            "VernacExtend",
            "19448570ba904fd3dc75c2d5245a96ff35ff5513"
        ],
        [
            "unfold term_occur_def_0 in |- *.",
            "VernacExtend",
            "4bead32476fbae553e06d374d2cf92a6c4950e8c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "exact (le_n_n _).",
            "VernacExtend",
            "75996f6621e5d42df1b20f059019cffd7c7da1fe"
        ],
        [
            "apply (le_trans (term_high u) (term_high_0 t) (term_high (app a t)) (H u H3)).",
            "VernacExtend",
            "ea85752780a2356f0c413ecf3ea6083cf501b46b"
        ],
        [
            "unfold term_high in |- *.",
            "VernacExtend",
            "c1866906e20d3b9b8ad312ee302fc0044128baea"
        ],
        [
            "exact (le_n_Sn _).",
            "VernacExtend",
            "5c6894488fb91190d90f55f6ea35c202953791c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma term_occur_0_1 : term_occur_def_1 tnil.",
            "VernacStartTheoremProof",
            "074e223a21159a2f4a58869d8dad4ee216046198"
        ],
        [
            "unfold term_occur_def_1 in |- *.",
            "VernacExtend",
            "19448570ba904fd3dc75c2d5245a96ff35ff5513"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction u as (a, t).",
            "VernacExtend",
            "7a597f26cc961a2ba1421323abd7b8df93d99ed0"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma term_occur_0_2 : forall t : term, term_occur_def_0 t -> forall t0 : term_list, term_occur_def_1 t0 -> term_occur_def_1 (tcons t t0).",
            "VernacStartTheoremProof",
            "6f35c41c58b048608e902b4bdc48f0a702d23d1c"
        ],
        [
            "unfold term_occur_def_0 in |- *.",
            "VernacExtend",
            "4bead32476fbae553e06d374d2cf92a6c4950e8c"
        ],
        [
            "unfold term_occur_def_1 in |- *.",
            "VernacExtend",
            "19448570ba904fd3dc75c2d5245a96ff35ff5513"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "apply (le_trans (term_high u) (term_high t) (term_high_0 (tcons t t0))).",
            "VernacExtend",
            "b3d87b65744937366ced30b06e14b0a9776537ed"
        ],
        [
            "exact (H u H4).",
            "VernacExtend",
            "118c0f74316091a711e47431ff53fbda91906322"
        ],
        [
            "exact (le_max_l _ _).",
            "VernacExtend",
            "7ced935f6b368dfc28aed593958a163492c9755a"
        ],
        [
            "apply (le_trans (term_high u) (term_high_0 t0) (term_high_0 (tcons t t0))).",
            "VernacExtend",
            "b948a520a3791ae3ff9d80e97ac449cf1bad8e43"
        ],
        [
            "exact (H0 u H4).",
            "VernacExtend",
            "09022e73238bbfb98dff3f845f1d7046ce6c8b8a"
        ],
        [
            "exact (le_max_r _ _).",
            "VernacExtend",
            "7c82fb33437d1459b8eaba2403004d254d7a6937"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma term_occur_0 : forall t u : term, term_occur u t -> term_high u <= term_high t.",
            "VernacStartTheoremProof",
            "d0efc7c1b335a1c460e40baeea05584508484ba3"
        ],
        [
            "exact (term_term_list_ind term_occur_def_0 term_occur_def_1 term_occur_0_0 term_occur_0_1 term_occur_0_2).",
            "VernacExtend",
            "d268caf893aee6db2f6b03de909ee9c9d696c355"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma term_occur_1 : forall (t : term_list) (u : term), term_list_occur u t -> term_high u <= term_high_0 t.",
            "VernacStartTheoremProof",
            "878c467ca96a170cd61ae73b1937275df1bdba25"
        ],
        [
            "exact (term_list_term_ind term_occur_def_0 term_occur_def_1 term_occur_0_0 term_occur_0_1 term_occur_0_2).",
            "VernacExtend",
            "59b13fb612040ec5fbaab4b4337014adc09ce145"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition indprinciple_3_aux (n : nat) := forall P : term -> Prop, (forall (a : ad) (tl : term_list), (forall u : term, term_list_occur u tl -> P u) -> P (app a tl)) -> forall t : term, term_high t <= n -> P t.",
            "VernacDefinition",
            "09a15560d4d778a40e5d0418dc1a76cc01a06f71"
        ],
        [
            "Lemma indprinciple_3_0 : indprinciple_3_aux 0.",
            "VernacStartTheoremProof",
            "2b4ecb850c29619b26f928b31cc6f60701836a89"
        ],
        [
            "unfold indprinciple_3_aux in |- *.",
            "VernacExtend",
            "7dba21ac63eb42e8d4f57aaed33f298421e42699"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction t as (a, t).",
            "VernacExtend",
            "9d47809ad87bb69807b2ea837db4c0404697bc49"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma indprinciple_3_1 : forall n : nat, indprinciple_3_aux n -> indprinciple_3_aux (S n).",
            "VernacStartTheoremProof",
            "b92685ad3e507577d01f3d502545392565d004f9"
        ],
        [
            "unfold indprinciple_3_aux in |- *.",
            "VernacExtend",
            "7dba21ac63eb42e8d4f57aaed33f298421e42699"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction t as (a, t).",
            "VernacExtend",
            "9d47809ad87bb69807b2ea837db4c0404697bc49"
        ],
        [
            "apply (H0 a t).",
            "VernacExtend",
            "deac8db548dd9c0fae6193a06ebe341ab8dccb81"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H P H0 u).",
            "VernacExtend",
            "d9aabc5dea19c19d438e975aa87eeadcb73d7a41"
        ],
        [
            "apply (le_trans (term_high u) (term_high_0 t) n).",
            "VernacExtend",
            "b1015b07fcc3ebc7db4800f223d60c0a365e64c9"
        ],
        [
            "exact (term_occur_1 t u H2).",
            "VernacExtend",
            "bc4063be45a285046cc6e5b7c7083bf63faeb145"
        ],
        [
            "exact (le_S_n _ _ H1).",
            "VernacExtend",
            "ed4fd74699616d6e49a983e7f0513a612ba6cdc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma indprinciple_3_2 : forall (n : nat) (P : term -> Prop), (forall (a : ad) (tl : term_list), (forall u : term, term_list_occur u tl -> P u) -> P (app a tl)) -> forall t : term, term_high t <= n -> P t.",
            "VernacStartTheoremProof",
            "74bbeff8a7b45251b9f6d5a2b23d971ce0b150a1"
        ],
        [
            "exact (nat_ind indprinciple_3_aux indprinciple_3_0 indprinciple_3_1).",
            "VernacExtend",
            "fc4f354c83e3ca1509e9c27e6fe9b0356d69af18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma indprinciple_term : forall P : term -> Prop, (forall (a : ad) (tl : term_list), (forall u : term, term_list_occur u tl -> P u) -> P (app a tl)) -> forall t : term, P t.",
            "VernacStartTheoremProof",
            "50d36823d920363bbf4bf090f9d4c5e9ca50d891"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact (indprinciple_3_2 (term_high t) P H t (le_n_n _)).",
            "VernacExtend",
            "1920c072384bc79dc0286e921984d2b994b6a913"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ndouble_inv_N0 : forall x : ad, Ndouble x = N0 -> x = N0.",
            "VernacStartTheoremProof",
            "78ac2e6056f38c86c163da93f0d9826684df26a1"
        ],
        [
            "simple induction x.",
            "VernacExtend",
            "8950863b237a5d7b00a52d76e01fa941d437c6ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ndouble_inv_xO : forall (x : ad) (p : positive), Ndouble x = Npos (xO p) -> x = Npos p.",
            "VernacStartTheoremProof",
            "2db4752daf06da640a713243af1f179a240be8df"
        ],
        [
            "simple induction x.",
            "VernacExtend",
            "8950863b237a5d7b00a52d76e01fa941d437c6ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ndouble_plus_one_inv_xH : forall x : ad, Ndouble_plus_one x = Npos 1 -> x = N0.",
            "VernacStartTheoremProof",
            "cdb40952bc5f717c6feff387b11a3f3e28a4708f"
        ],
        [
            "simple induction x.",
            "VernacExtend",
            "8950863b237a5d7b00a52d76e01fa941d437c6ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ndouble_plus_one_inv_xI : forall (x : ad) (p : positive), Ndouble_plus_one x = Npos (xI p) -> x = Npos p.",
            "VernacStartTheoremProof",
            "24e29193096d66308b4e92911a0f870572909508"
        ],
        [
            "simple induction x.",
            "VernacExtend",
            "8950863b237a5d7b00a52d76e01fa941d437c6ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "term_list_disj",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "simple induction l.",
                        "VernacExtend",
                        "baf54048118103088e518cfa16c3b5327b3c1c28"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "split with t.",
                        "VernacExtend",
                        "b391be3fd10032b5e92995a552af94a4cfd2c47b"
                    ]
                },
                {
                    "command": [
                        "split with t0.",
                        "VernacExtend",
                        "73f3c7dfbad1400de614d8ed195fa1bcd3726dc1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "high_aux_0",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold term_high in |- *.",
                        "VernacExtend",
                        "c1866906e20d3b9b8ad312ee302fc0044128baea"
                    ]
                },
                {
                    "command": [
                        "unfold term_high_0 in |- *.",
                        "VernacExtend",
                        "05f21c7ecc893961652fc2a6e2df75e9d1125468"
                    ]
                },
                {
                    "command": [
                        "exact (le_n_n _).",
                        "VernacExtend",
                        "75996f6621e5d42df1b20f059019cffd7c7da1fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "high_aux_1",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold term_high in |- *.",
                        "VernacExtend",
                        "c1866906e20d3b9b8ad312ee302fc0044128baea"
                    ]
                },
                {
                    "command": [
                        "unfold term_high_0 in |- *.",
                        "VernacExtend",
                        "05f21c7ecc893961652fc2a6e2df75e9d1125468"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "high_aux_2",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (S (term_high_0 l) <= term_high (app c l)).",
                        "VernacExtend",
                        "dd211f6783b5c3e9c37dfc2b62cc9a057449a6c4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (1 <= S (term_high_0 l)).",
                        "VernacExtend",
                        "9c9cc6126490f92696f56f1b3b9bbf088d9c4bb5"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "exact (le_trans 1 (S (term_high_0 l)) (term_high (app c l)) H0 H).",
                        "VernacExtend",
                        "f3b4430b642e4e3e9797ee2721e36d9aca91dee6"
                    ]
                },
                {
                    "command": [
                        "exact (le_n_S 0 (term_high_0 l) (le_O_n (term_high_0 l))).",
                        "VernacExtend",
                        "47aad2e871597acf34a1aff117ebbf9479624d9e"
                    ]
                },
                {
                    "command": [
                        "exact (high_aux_0 c l).",
                        "VernacExtend",
                        "3b54d49328b552f14a9421caf27f81ad6b447676"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "high_aux_3",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold term_high in |- *.",
                        "VernacExtend",
                        "c1866906e20d3b9b8ad312ee302fc0044128baea"
                    ]
                },
                {
                    "command": [
                        "exact (le_max_l _ (term_high_0 tl)).",
                        "VernacExtend",
                        "4ddf229ec52f4d6d27071a6fc7f98cc38cb13aba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "high_aux_4",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (term_high_0 (tcons t tl) = max (term_high t) (term_high_0 tl)).",
                        "VernacExtend",
                        "f334a2a9b11e53db381f386663e313518754d951"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "exact (le_max_r (term_high t) (term_high_0 tl)).",
                        "VernacExtend",
                        "deae8e7b2b765606f996a1d62e23d08a2211d337"
                    ]
                },
                {
                    "command": [
                        "unfold term_high_0 in |- *.",
                        "VernacExtend",
                        "05f21c7ecc893961652fc2a6e2df75e9d1125468"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pl_sum",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction pl as [a pl1 Hrecpl1 pl0 Hrecpl0| ].",
                        "VernacExtend",
                        "01845bd0b5359d056705892fdc09bcd6a65ac08f"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "split with a.",
                        "VernacExtend",
                        "ee2c8e0abe31c513cce3f85943ab3d9407fcd951"
                    ]
                },
                {
                    "command": [
                        "split with pl1.",
                        "VernacExtend",
                        "83c58e149d886f5c7ce2a4cdaeaa2d7170feea14"
                    ]
                },
                {
                    "command": [
                        "split with pl0.",
                        "VernacExtend",
                        "1d5f4d236c85017efb7703dc7a771d7d1cb16d7b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "taille_aux_0",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (le_n_S (taille_0 la) (taille_0 la + taille_0 ls)).",
                        "VernacExtend",
                        "5b5409d3ae9805d33c98167cf4642afb5a42e83a"
                    ]
                },
                {
                    "command": [
                        "exact (le_plus_l (taille_0 la) (taille_0 ls)).",
                        "VernacExtend",
                        "08b446f4243958944ab68f315fb01d3527e3d1ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "taille_aux_1",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold taille_0 in |- *.",
                        "VernacExtend",
                        "97179755987a50a89c278f470dbfe25af45e8e46"
                    ]
                },
                {
                    "command": [
                        "exact (le_n_S 0 _ (le_O_n _)).",
                        "VernacExtend",
                        "e5450ce4f29bbca43860e20b2cb18fb1d3b39980"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "taille_aux_2",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (le_n_S (taille_0 ls) (taille_0 la + taille_0 ls)).",
                        "VernacExtend",
                        "587315d1664c667d863b284089684c81812db16a"
                    ]
                },
                {
                    "command": [
                        "exact (le_plus_r (taille_0 la) (taille_0 ls)).",
                        "VernacExtend",
                        "b726af26ee508235c2b0118d36f0ad00d893e3d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prec_in_state_M0_false",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact (in_M0_false prec_list p).",
                        "VernacExtend",
                        "8ca2e2be726585013ba2d4cbd9552d5a44f66bac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "state_in_dta_M0_false",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact (in_M0_false state s).",
                        "VernacExtend",
                        "a4b3962554323ea57356a5d5de3ddef437a2e1b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prec_occur_1",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction p2 as [a0 p2_1 Hrecp2_1 p2_0 Hrecp2_0| ].",
                        "VernacExtend",
                        "13e6c13014097118badd10d9f2f3e159b035c6fc"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "exact (prec_hd a0 p2_1 p2_0).",
                        "VernacExtend",
                        "7105a98fb28e36dd08257563013bb52b19485f5d"
                    ]
                },
                {
                    "command": [
                        "exact (prec_int0 a0 a p2_1 p2_0 (Hrecp2_1 H2)).",
                        "VernacExtend",
                        "4f7c03fbd35022cad197ecef7a5f17f18040a691"
                    ]
                },
                {
                    "command": [
                        "exact (prec_int1 a0 a p2_1 p2_0 (Hrecp2_0 H2)).",
                        "VernacExtend",
                        "5df777fd313c06d425582fc986865e49d4050260"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prec_contained_0",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction p2 as [a0 p2_1 Hrecp2_1 p2_0 Hrecp2_0| ].",
                        "VernacExtend",
                        "13e6c13014097118badd10d9f2f3e159b035c6fc"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "exact (prec_c_int0 p2_1 p2_1 p2_0 a0 (prec_id p2_1)).",
                        "VernacExtend",
                        "728ba90889a2d2f11418c8935fd16f8d1c683ce6"
                    ]
                },
                {
                    "command": [
                        "exact (prec_c_int0 _ _ _ _ (Hrecp2_1 H2)).",
                        "VernacExtend",
                        "817262996a998fcc2e12aa34cd4776695fc03775"
                    ]
                },
                {
                    "command": [
                        "exact (prec_c_int1 _ _ _ _ (Hrecp2_0 H2)).",
                        "VernacExtend",
                        "ccac42f17fda3df089c3a7341d5762572bc0fb3b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prec_contained_1",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction p2 as [a0 p2_1 Hrecp2_1 p2_0 Hrecp2_0| ].",
                        "VernacExtend",
                        "13e6c13014097118badd10d9f2f3e159b035c6fc"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "exact (prec_c_int1 _ _ _ _ (prec_id p2_0)).",
                        "VernacExtend",
                        "3d4431082da501846e35805e95361f99b3c7b5db"
                    ]
                },
                {
                    "command": [
                        "exact (prec_c_int0 _ _ _ _ (Hrecp2_1 H2)).",
                        "VernacExtend",
                        "817262996a998fcc2e12aa34cd4776695fc03775"
                    ]
                },
                {
                    "command": [
                        "exact (prec_c_int1 _ _ _ _ (Hrecp2_0 H2)).",
                        "VernacExtend",
                        "ccac42f17fda3df089c3a7341d5762572bc0fb3b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "term_occur_0_0",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "unfold term_occur_def_1 in |- *.",
                        "VernacExtend",
                        "19448570ba904fd3dc75c2d5245a96ff35ff5513"
                    ]
                },
                {
                    "command": [
                        "unfold term_occur_def_0 in |- *.",
                        "VernacExtend",
                        "4bead32476fbae553e06d374d2cf92a6c4950e8c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "exact (le_n_n _).",
                        "VernacExtend",
                        "75996f6621e5d42df1b20f059019cffd7c7da1fe"
                    ]
                },
                {
                    "command": [
                        "apply (le_trans (term_high u) (term_high_0 t) (term_high (app a t)) (H u H3)).",
                        "VernacExtend",
                        "ea85752780a2356f0c413ecf3ea6083cf501b46b"
                    ]
                },
                {
                    "command": [
                        "unfold term_high in |- *.",
                        "VernacExtend",
                        "c1866906e20d3b9b8ad312ee302fc0044128baea"
                    ]
                },
                {
                    "command": [
                        "exact (le_n_Sn _).",
                        "VernacExtend",
                        "5c6894488fb91190d90f55f6ea35c202953791c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "term_occur_0_1",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "unfold term_occur_def_1 in |- *.",
                        "VernacExtend",
                        "19448570ba904fd3dc75c2d5245a96ff35ff5513"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction u as (a, t).",
                        "VernacExtend",
                        "7a597f26cc961a2ba1421323abd7b8df93d99ed0"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "term_occur_0_2",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "unfold term_occur_def_0 in |- *.",
                        "VernacExtend",
                        "4bead32476fbae553e06d374d2cf92a6c4950e8c"
                    ]
                },
                {
                    "command": [
                        "unfold term_occur_def_1 in |- *.",
                        "VernacExtend",
                        "19448570ba904fd3dc75c2d5245a96ff35ff5513"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "apply (le_trans (term_high u) (term_high t) (term_high_0 (tcons t t0))).",
                        "VernacExtend",
                        "b3d87b65744937366ced30b06e14b0a9776537ed"
                    ]
                },
                {
                    "command": [
                        "exact (H u H4).",
                        "VernacExtend",
                        "118c0f74316091a711e47431ff53fbda91906322"
                    ]
                },
                {
                    "command": [
                        "exact (le_max_l _ _).",
                        "VernacExtend",
                        "7ced935f6b368dfc28aed593958a163492c9755a"
                    ]
                },
                {
                    "command": [
                        "apply (le_trans (term_high u) (term_high_0 t0) (term_high_0 (tcons t t0))).",
                        "VernacExtend",
                        "b948a520a3791ae3ff9d80e97ac449cf1bad8e43"
                    ]
                },
                {
                    "command": [
                        "exact (H0 u H4).",
                        "VernacExtend",
                        "09022e73238bbfb98dff3f845f1d7046ce6c8b8a"
                    ]
                },
                {
                    "command": [
                        "exact (le_max_r _ _).",
                        "VernacExtend",
                        "7c82fb33437d1459b8eaba2403004d254d7a6937"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "term_occur_0",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "exact (term_term_list_ind term_occur_def_0 term_occur_def_1 term_occur_0_0 term_occur_0_1 term_occur_0_2).",
                        "VernacExtend",
                        "d268caf893aee6db2f6b03de909ee9c9d696c355"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "term_occur_1",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "exact (term_list_term_ind term_occur_def_0 term_occur_def_1 term_occur_0_0 term_occur_0_1 term_occur_0_2).",
                        "VernacExtend",
                        "59b13fb612040ec5fbaab4b4337014adc09ce145"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "indprinciple_3_0",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "unfold indprinciple_3_aux in |- *.",
                        "VernacExtend",
                        "7dba21ac63eb42e8d4f57aaed33f298421e42699"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction t as (a, t).",
                        "VernacExtend",
                        "9d47809ad87bb69807b2ea837db4c0404697bc49"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "indprinciple_3_1",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "unfold indprinciple_3_aux in |- *.",
                        "VernacExtend",
                        "7dba21ac63eb42e8d4f57aaed33f298421e42699"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction t as (a, t).",
                        "VernacExtend",
                        "9d47809ad87bb69807b2ea837db4c0404697bc49"
                    ]
                },
                {
                    "command": [
                        "apply (H0 a t).",
                        "VernacExtend",
                        "deac8db548dd9c0fae6193a06ebe341ab8dccb81"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (H P H0 u).",
                        "VernacExtend",
                        "d9aabc5dea19c19d438e975aa87eeadcb73d7a41"
                    ]
                },
                {
                    "command": [
                        "apply (le_trans (term_high u) (term_high_0 t) n).",
                        "VernacExtend",
                        "b1015b07fcc3ebc7db4800f223d60c0a365e64c9"
                    ]
                },
                {
                    "command": [
                        "exact (term_occur_1 t u H2).",
                        "VernacExtend",
                        "bc4063be45a285046cc6e5b7c7083bf63faeb145"
                    ]
                },
                {
                    "command": [
                        "exact (le_S_n _ _ H1).",
                        "VernacExtend",
                        "ed4fd74699616d6e49a983e7f0513a612ba6cdc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "indprinciple_3_2",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "exact (nat_ind indprinciple_3_aux indprinciple_3_0 indprinciple_3_1).",
                        "VernacExtend",
                        "fc4f354c83e3ca1509e9c27e6fe9b0356d69af18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "indprinciple_term",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact (indprinciple_3_2 (term_high t) P H t (le_n_n _)).",
                        "VernacExtend",
                        "1920c072384bc79dc0286e921984d2b994b6a913"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ndouble_inv_N0",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "simple induction x.",
                        "VernacExtend",
                        "8950863b237a5d7b00a52d76e01fa941d437c6ea"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ndouble_inv_xO",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "simple induction x.",
                        "VernacExtend",
                        "8950863b237a5d7b00a52d76e01fa941d437c6ea"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ndouble_plus_one_inv_xH",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "simple induction x.",
                        "VernacExtend",
                        "8950863b237a5d7b00a52d76e01fa941d437c6ea"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ndouble_plus_one_inv_xI",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "simple induction x.",
                        "VernacExtend",
                        "8950863b237a5d7b00a52d76e01fa941d437c6ea"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}