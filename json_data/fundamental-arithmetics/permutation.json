{
    "filename": "permutation.v",
    "coq_project": "fundamental-arithmetics",
    "vernac_cmds": [
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Import missing.",
            "VernacRequire",
            "caedc52a19fc0c90be4f1927049b4b9d2698e1ea"
        ],
        [
            "Require Export List Permutation.",
            "VernacRequire",
            "43e73c3bf34bbdbe8babd728e9610a98c2eb8baa"
        ],
        [
            "Inductive insertion (A:Set) : A -> list A -> list A -> Prop := head_insertion : forall (x:A)(l:list A),(insertion A x l (x::l)) |tail_insertion : forall (x y:A)(l l':list A),(insertion A x l l')->(insertion A x (y::l) (y::l')).",
            "VernacInductive",
            "c91307f6385b9827ea7460a1c5a6818b016b3f7e"
        ],
        [
            "Lemma insertion_snoc : forall (A:Set)(x:A)(xs:list A),(insertion _ x xs (app xs (cons x nil))).",
            "VernacStartTheoremProof",
            "c58245a6cd0129d41bb926b6e2d2ac378f6afd3f"
        ],
        [
            "induction xs.",
            "VernacExtend",
            "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply head_insertion.",
            "VernacExtend",
            "543d1924006b84a46990275d3ee7b157db4feba7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply tail_insertion.",
            "VernacExtend",
            "f9011f2750e4cdb215d99e123638e9f3684d53dc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_in : forall (A:Set)(x:A)(l l':list A),(insertion A x l l')->(In x l').",
            "VernacStartTheoremProof",
            "bedb7e14ad69067be23dc8f55605df0d342077fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H;simpl;tauto.",
            "VernacExtend",
            "aa43001b3a7847d8137f388443979eabe0748104"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_inclusion : forall (A:Set)(x:A)(l l':list A),(insertion A x l l')->forall (y:A),(In y l)->(In y l').",
            "VernacStartTheoremProof",
            "6aacab4c82c20f94949e2337288c5fafe5096b06"
        ],
        [
            "induction l;simpl;try tauto;intros.",
            "VernacExtend",
            "2ec211f54a66332d32742d9e93317bdafb7351bd"
        ],
        [
            "inversion H;simpl;try tauto.",
            "VernacExtend",
            "67e9e5f16d0cadce77f5ff6e45651ad1623caf66"
        ],
        [
            "case H0;try tauto.",
            "VernacExtend",
            "4e3c5441fe84e1059bec036e7d38230fbf82e9ef"
        ],
        [
            "right;auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_insertion : forall (A:Set)(x:A)(l:list A),(In x l)->exists l':list A,(insertion A x l' l).",
            "VernacStartTheoremProof",
            "a6b9e387b7b70c1bb39efff24bb412d3d2960e32"
        ],
        [
            "induction l;simpl;try tauto;intros.",
            "VernacExtend",
            "2ec211f54a66332d32742d9e93317bdafb7351bd"
        ],
        [
            "case H;intro.",
            "VernacExtend",
            "de90fa06f03a0fc3c2fba77eace9c68dac9da5a5"
        ],
        [
            "rewrite H0;exists l;apply head_insertion.",
            "VernacExtend",
            "84307163929441e22f8d153cfee87806e3652e53"
        ],
        [
            "elim (IHl H0);intro l';intro.",
            "VernacExtend",
            "bb330280e203427eb48d30fb7363fb3ac172dfcf"
        ],
        [
            "exists (a::l');apply tail_insertion;trivial.",
            "VernacExtend",
            "a3432e5c87dc7dece17c6400ca6bfb75ce41a4cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_insertion_inv : forall (A:Set)(x y:A)(l l':list A),(insertion A y l l')->(In x l')->(x=y)\\/(In x l).",
            "VernacStartTheoremProof",
            "d8e3dca547a9ada877b8fad425934813ca5ae361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H;simpl in H0.",
            "VernacExtend",
            "fb835f1cb80b55fbc9ce7abf29442cdf46fc899d"
        ],
        [
            "case H0;intro H1;try (symmetry in H1);tauto.",
            "VernacExtend",
            "da65f725bca5cdf225ef4659dea3bb724a7703bf"
        ],
        [
            "case H0;simpl;intro;tauto.",
            "VernacExtend",
            "962a6e01888c2653306da362774e1b435e295b2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive is_set (A:Set) : list A->Prop := nil_is_set : (is_set A nil) |cons_is_set : forall (x:A)(l:list A),(is_set A l)->~(In x l)->(is_set A (x::l)).",
            "VernacInductive",
            "86d74ee7931f7950df86de3646936fc657bd6f20"
        ],
        [
            "Lemma is_set_insertion : forall (A:Set)(l l':list A)(x:A),(insertion A x l l')->(is_set A l')->(is_set A l).",
            "VernacStartTheoremProof",
            "d652848e11fdad3e937ced066b34e91097a21836"
        ],
        [
            "induction 1;intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "inversion H;trivial.",
            "VernacExtend",
            "5234cf8e94dd44a80fe8ef152e76a9c1fadc9afa"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "apply cons_is_set.",
            "VernacExtend",
            "a3168a1cdc2e6a24e5f165c42965eea27e0e1cf6"
        ],
        [
            "apply IHinsertion;trivial.",
            "VernacExtend",
            "4bf6923c4a075ca3268367f67736bc9265821a58"
        ],
        [
            "intro;apply H4;apply (insertion_inclusion A x l l');trivial.",
            "VernacExtend",
            "e391c656e2bb636aa6db6171a93ff50c72525af3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_set_insertion_in : forall (A:Set)(l l':list A)(x:A),(insertion A x l l')->(is_set A l')->~(In x l).",
            "VernacStartTheoremProof",
            "6cca37e4a903ac40642816c5fda74b7d8a76658f"
        ],
        [
            "induction l;simpl;try tauto;intros.",
            "VernacExtend",
            "2ec211f54a66332d32742d9e93317bdafb7351bd"
        ],
        [
            "inversion H;rewrite <- H3 in H0;inversion H0.",
            "VernacExtend",
            "a8c8c1d9e1a03995a3b34aaa0a8ee2f4e39deff6"
        ],
        [
            "simpl in H7;trivial.",
            "VernacExtend",
            "a37484f8293811ca957105a790a7a81462177ee5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case H10;intro.",
            "VernacExtend",
            "5a59d0394fb2093c0b95874eba4f42ce37df6ff0"
        ],
        [
            "apply H9;rewrite H11;eapply insertion_in;apply H5.",
            "VernacExtend",
            "8969017e46977c4b07988bd1c51b3a0176b719d6"
        ],
        [
            "elim (IHl l'0 x H5 H8 H11).",
            "VernacExtend",
            "ec03b8ec528617bdcd50190aa99dbf2ce2758cb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_is_set : forall (A:Set)(l:list A),(is_set _ l)->forall (x:A),~(In x l)->forall (l':list A),(insertion _ x l l')->(is_set _ l').",
            "VernacStartTheoremProof",
            "25c00089738bf2bee40a074010923c8180df700b"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "apply cons_is_set.",
            "VernacExtend",
            "a3168a1cdc2e6a24e5f165c42965eea27e0e1cf6"
        ],
        [
            "apply nil_is_set.",
            "VernacExtend",
            "e05addea26c52f77df3f4994f8fd0803b5939f5f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H2.",
            "VernacExtend",
            "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
        ],
        [
            "subst x1.",
            "VernacExtend",
            "2d7bc84791156fc4894f666cc4412061db4fb7af"
        ],
        [
            "subst l0.",
            "VernacExtend",
            "d0eb53d4feb9a7d7865929f567dd3f4fecc5a26a"
        ],
        [
            "subst l'.",
            "VernacExtend",
            "ed86cbc0cd72b623cc50b20f35ce3b79f312decd"
        ],
        [
            "apply cons_is_set.",
            "VernacExtend",
            "a3168a1cdc2e6a24e5f165c42965eea27e0e1cf6"
        ],
        [
            "eapply IHis_set.",
            "VernacExtend",
            "99f3f420c934987b57856e9d126563f26793c304"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply head_insertion.",
            "VernacExtend",
            "543d1924006b84a46990275d3ee7b157db4feba7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "subst x1;subst y;subst l0.",
            "VernacExtend",
            "2d1599dd4cc58ca24fbdd18d0ce37a032675df18"
        ],
        [
            "apply cons_is_set.",
            "VernacExtend",
            "a3168a1cdc2e6a24e5f165c42965eea27e0e1cf6"
        ],
        [
            "eapply IHis_set with x0;auto.",
            "VernacExtend",
            "6c5bddbd1aa354e3e23aece6949ea5f9110e58ff"
        ],
        [
            "red;intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "right;auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "red;intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "case (in_insertion_inv _ _ _ _ _ H7 H3);intro.",
            "VernacExtend",
            "cc578261f35e7eff6fb0e7973c55b021a64cf84c"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "left;auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive is_permutation (A:Set) : list A->list A->Prop := nil_is_permutation : (is_permutation A nil nil) |cons_is_permutation : forall (l l':list A),(is_permutation A l l')->forall (x:A)(l'':(list A)),(insertion A x l' l'')->(is_permutation A (x::l) l'').",
            "VernacInductive",
            "a946e016f9710168948b449de073efc68868d106"
        ],
        [
            "Lemma is_set_eq_impl_permutation : forall (A:Set)(l l':list A),(forall (x:A),(In x l)<->(In x l'))->(is_set A l)->(is_set A l')->(is_permutation A l l').",
            "VernacStartTheoremProof",
            "03bdd65d59c6e914a634ffb5ba0cc3542e43dbcb"
        ],
        [
            "induction l;intros;simpl in H.",
            "VernacExtend",
            "aaef0a82e17ef7f81e33161c2df9ceab5841381c"
        ],
        [
            "destruct l'.",
            "VernacExtend",
            "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
        ],
        [
            "apply nil_is_permutation.",
            "VernacExtend",
            "acf3ef989cf4008f678d74a9cfe310d8486f52f5"
        ],
        [
            "elim (H a);intros.",
            "VernacExtend",
            "a11aa14662758219565b0b9337ea30284a7b7ccf"
        ],
        [
            "elim H3;simpl;tauto.",
            "VernacExtend",
            "324acb4e0a1ca2aa60ef44c36a7d83910875612f"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "symmetry in H2;rewrite H2 in H;elim (H a);intros.",
            "VernacExtend",
            "22890c4199266ebee2645d269b0d8c19ce79b179"
        ],
        [
            "rewrite H2 in H6;rewrite H2.",
            "VernacExtend",
            "56137c21e7c80048edbb3743ec7d24602f3dda9e"
        ],
        [
            "assert (In x l');auto.",
            "VernacExtend",
            "9bc1f4bf352f5157a5a30f93496b6ddf50b0d1c6"
        ],
        [
            "elim (in_insertion A x l' H8).",
            "VernacExtend",
            "264d3a4493ee6e649051dc44f842791da9732890"
        ],
        [
            "intro l'';intro.",
            "VernacExtend",
            "4ad30afc3e0c2907c2693f6cf88c49a898dd984a"
        ],
        [
            "apply cons_is_permutation with l'';trivial.",
            "VernacExtend",
            "4df0fa6d4c31ef9ae3300f6bcc384bb682bb154e"
        ],
        [
            "apply IHl;trivial.",
            "VernacExtend",
            "7f299a9fd1f3e1e6d1f7d5810a28753ef5e39442"
        ],
        [
            "split;intro.",
            "VernacExtend",
            "966a6edea9c2088caf0e546be884ea531f6207b3"
        ],
        [
            "elim (H x0);intros.",
            "VernacExtend",
            "a24a3d9b84f9b6b6bce134507e566d20ff5a148c"
        ],
        [
            "elim (in_insertion_inv A x0 x l'' l');auto.",
            "VernacExtend",
            "4822fa1ab04533372e52db94c62a343d46119ed4"
        ],
        [
            "intro;rewrite H13 in H10;rewrite H2 in H5;tauto.",
            "VernacExtend",
            "a7d72aa63b9384ea1348c4b03bc6e34ccedfa5b8"
        ],
        [
            "elim (H x0);intros.",
            "VernacExtend",
            "a24a3d9b84f9b6b6bce134507e566d20ff5a148c"
        ],
        [
            "case H12;try tauto.",
            "VernacExtend",
            "5f6a45609413c2967a56c7881fe46523de4d6ff7"
        ],
        [
            "apply (insertion_inclusion A x l'' l');trivial.",
            "VernacExtend",
            "3686b05f45dda270a83a9db0e38d0aa3f1233cd8"
        ],
        [
            "intro;rewrite <- H13 in H10.",
            "VernacExtend",
            "712dfcdc75ecf65b2ab6b11c6b62dcbdf7844df2"
        ],
        [
            "elim (is_set_insertion_in A l'' l' x);trivial.",
            "VernacExtend",
            "f8758a879110a039bbc77e6555a99cc9d4b9e0ae"
        ],
        [
            "eapply is_set_insertion;eauto.",
            "VernacExtend",
            "50f9216852c3c95ef458f3e2857dcacd1fb860de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_refl : forall (A:Set)(l:list A),(is_permutation A l l).",
            "VernacStartTheoremProof",
            "c9d64dca52e2e00eeb86767170a3b33178aca2f6"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "apply nil_is_permutation.",
            "VernacExtend",
            "acf3ef989cf4008f678d74a9cfe310d8486f52f5"
        ],
        [
            "eapply cons_is_permutation;[apply IHl | apply head_insertion].",
            "VernacExtend",
            "71b93549d6edad93200ca62b4920465be470244c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_is_permutation : forall (A:Set)(l l':list A)(x:A),(insertion A x l l')->(is_permutation A (x::l) l').",
            "VernacStartTheoremProof",
            "c0381bbcaca6360ecdb61589760ffc3b906529e3"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "apply cons_is_permutation with l;[apply is_permutation_refl | apply head_insertion].",
            "VernacExtend",
            "015745de3290113e7958295d5dc26c245ccd7d36"
        ],
        [
            "apply cons_is_permutation with (y::l);[apply is_permutation_refl | apply tail_insertion;trivial].",
            "VernacExtend",
            "4cf18e7b788e8538b681628d2a121d741cf44393"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_trans : forall (A:Set)(l0 l1:list A)(x:A),(insertion A x l0 l1)->forall (l2:list A)(y:A),(insertion A y l1 l2)->exists l3:list A,(insertion A y l0 l3)/\\(insertion A x l3 l2).",
            "VernacStartTheoremProof",
            "bea14a144bf6f6f0465876ee7fcea45d4eb5dfe9"
        ],
        [
            "induction 1;intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "exists (y::l);split;[apply head_insertion | apply tail_insertion;apply head_insertion].",
            "VernacExtend",
            "bdfcea8d84eb91448ea9e870f46b17689a180f96"
        ],
        [
            "exists l';split;[trivial | apply head_insertion].",
            "VernacExtend",
            "abd576463fac2d5786e1879183e46f9c20bab083"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "exists (y0::y::l);split;[apply head_insertion | apply tail_insertion;apply tail_insertion;trivial].",
            "VernacExtend",
            "1a17eaca173b9c55a06cba399f7dd8a2b977bc79"
        ],
        [
            "elim (IHinsertion l'0 y0 H5);intro l3;intro.",
            "VernacExtend",
            "5937ff5feeb3b65cae3f114d345eb7aabdc0c9e9"
        ],
        [
            "elim H6;intros.",
            "VernacExtend",
            "adada1ad2ce0ef6f5f04088c4ecd9bfe31ad7784"
        ],
        [
            "exists (y::l3);split;[apply tail_insertion | apply tail_insertion];trivial.",
            "VernacExtend",
            "9b75c0b3ae22b32e942c5af3fb1de48fe234d8bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permutation_insertion : forall (A:Set)(l0 l1:list A),(is_permutation A l0 l1)->forall (x:A)(l2 l3:list A),(insertion A x l0 l2)->(insertion A x l1 l3)->(is_permutation A l2 l3).",
            "VernacStartTheoremProof",
            "21407fdf7ef8e578a182c4806203ef7f7ad17465"
        ],
        [
            "induction 1;intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "inversion H;inversion H0;apply is_permutation_refl.",
            "VernacExtend",
            "9b5c1ed44a163a020add9a5319831bd790ebf507"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "apply cons_is_permutation with l'';trivial.",
            "VernacExtend",
            "4df0fa6d4c31ef9ae3300f6bcc384bb682bb154e"
        ],
        [
            "apply cons_is_permutation with l';trivial.",
            "VernacExtend",
            "f38a714bf8f85ad152debffeab4522bfe8d94fe5"
        ],
        [
            "elim (insertion_trans A l' l'' x H0 l3 x0 H2).",
            "VernacExtend",
            "28fa742f419b72eb5a0be8c52234df2a6c768a51"
        ],
        [
            "intro l4;intro.",
            "VernacExtend",
            "31ea7ff268742c44761615353be09d859bd49baf"
        ],
        [
            "elim H8;intros.",
            "VernacExtend",
            "54bacf1a2e9fa49626cbb57c551336659e39bf7a"
        ],
        [
            "apply cons_is_permutation with l4;trivial.",
            "VernacExtend",
            "55eaddb5a884cb52079cab7d53b3e605238818d0"
        ],
        [
            "eapply IHis_permutation;eauto.",
            "VernacExtend",
            "074df7c7e0625ee447517775745882838ca09e93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_sym : forall (A:Set)(l l':list A),(is_permutation A l l')->(is_permutation A l' l).",
            "VernacStartTheoremProof",
            "b1a3b85f8fe77d5b70752b13c4ba2e197c3b9d66"
        ],
        [
            "induction 1;[apply nil_is_permutation | eapply permutation_insertion;eauto;apply head_insertion].",
            "VernacExtend",
            "9d9638cd4492d8b45dd263bdc9f29eb44b11cf53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permutation_in : forall (A:Set)(l l':list A),(is_permutation A l l')->forall (x:A),(In x l)<->(In x l').",
            "VernacStartTheoremProof",
            "37c5d14b5458fb89a74f2b29dbcaae0a714e10bc"
        ],
        [
            "induction l;simpl;intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "inversion H;simpl;tauto.",
            "VernacExtend",
            "1de853ae39cb35ea15e5e345feba999418a231a8"
        ],
        [
            "inversion H;simpl.",
            "VernacExtend",
            "18f1ce4794e5497d52fad28a77970c4b0ee1853c"
        ],
        [
            "split;intro.",
            "VernacExtend",
            "966a6edea9c2088caf0e546be884ea531f6207b3"
        ],
        [
            "case H5;intro.",
            "VernacExtend",
            "42e7e5e5e9bb105df3a4a35f0f8c33819de2595b"
        ],
        [
            "eapply insertion_in;rewrite H6 in H4;apply H4.",
            "VernacExtend",
            "f71b0e56dce10628ad30487fa784316d5eeec963"
        ],
        [
            "elim (IHl l'0 H2 x);intros.",
            "VernacExtend",
            "07a6914b058c97fa1f36100dad5dd74e303dcd21"
        ],
        [
            "eapply insertion_inclusion;eauto.",
            "VernacExtend",
            "05a6211069f211d670288c56afc285a361a7171c"
        ],
        [
            "case (in_insertion_inv A x a l'0 l' H4 H5);intro.",
            "VernacExtend",
            "a7b4ed525c85b147df6549e44c3e34e89b4c24bb"
        ],
        [
            "rewrite H6;tauto.",
            "VernacExtend",
            "8054de191d82ff9223fd7d31b01b514152e8f72b"
        ],
        [
            "elim (IHl l'0 H2 x);intros.",
            "VernacExtend",
            "07a6914b058c97fa1f36100dad5dd74e303dcd21"
        ],
        [
            "right;auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permutation_insertion_aux : forall (A:Set)(l l' l'':list A)(x:A),(insertion A x l l')->(insertion A x l l'')->(is_permutation A l' l'').",
            "VernacStartTheoremProof",
            "c0213f7ed958b65d4381c48c2a904727d1541a79"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply permutation_insertion;eauto.",
            "VernacExtend",
            "8bc3260ba316c9c2a9baf2d57525b3dfd184656c"
        ],
        [
            "apply is_permutation_refl.",
            "VernacExtend",
            "7ff7c6e4561f7c4080003098148c0e156cbcf487"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_recursion : forall (A:Set),forall (P:list A->Prop),(forall (x:list A),(forall (y:list A),(length y)<(length x)->(P y))->(P x))->(forall (a:list A),(P a)).",
            "VernacStartTheoremProof",
            "40c0568aac24ba01ab6aaefe45fe447689c05ef6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (well_founded_ind (well_founded_ltof (list A) (fun l:list A => length l)));unfold ltof;auto.",
            "VernacExtend",
            "84f280963d813fbc840a8d29c059bc08dc16ab69"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_length : forall (A:Set)(l l':list A)(x:A),(insertion A x l l')->(length l')=(S (length l)).",
            "VernacStartTheoremProof",
            "f8c3de38366f3aedccc7969bf6ded423700088ea"
        ],
        [
            "induction 1;simpl;trivial.",
            "VernacExtend",
            "b8eeca75d108d03b0acb862089fdbdf1fa8ae526"
        ],
        [
            "rewrite IHinsertion;trivial.",
            "VernacExtend",
            "279a9c5a8f0dcf2145c08070cd019895a078e8de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permutation_length : forall (A:Set)(l l':list A),(is_permutation A l l')->(length l)=(length l').",
            "VernacStartTheoremProof",
            "9e0771f86b7faf340a2b4e64fcd7042e3904c38d"
        ],
        [
            "induction 1;simpl;trivial.",
            "VernacExtend",
            "b8eeca75d108d03b0acb862089fdbdf1fa8ae526"
        ],
        [
            "generalize (insertion_length A l' l'' x H0);intro;congruence.",
            "VernacExtend",
            "506cb6549e1e07f35fcb5f9b261a620d44fcca4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_permutation_eq : forall (A:Set)(l l':list A)(x:A),(insertion A x l' l)->forall (l'':list A),(insertion A x l'' l)->(is_permutation A l' l'').",
            "VernacStartTheoremProof",
            "97365b0acb5f3ab721aeb0c66511f4fad7c494d5"
        ],
        [
            "induction l;intros;inversion H.",
            "VernacExtend",
            "cf503dc83cc767c806013c7a06c93c091dfd0c68"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "apply is_permutation_refl.",
            "VernacExtend",
            "7ff7c6e4561f7c4080003098148c0e156cbcf487"
        ],
        [
            "rewrite <- H4;destruct l.",
            "VernacExtend",
            "7b9a66f02faecb1818f805ce5872bffd7cf8ad71"
        ],
        [
            "inversion H8.",
            "VernacExtend",
            "bd1054a31f838f58a763ae9f4c46f33682fb2e03"
        ],
        [
            "generalize (head_insertion A a0 l);intro.",
            "VernacExtend",
            "604b6e38c4ae99c96878d2b093270fa688ba57b2"
        ],
        [
            "assert (In x (a0::l)).",
            "VernacExtend",
            "334bee0b83affda6be4189992e4c0d5744004a0d"
        ],
        [
            "eapply insertion_in;apply H8.",
            "VernacExtend",
            "1ec158c564df27baaab70762a4b467cfd995e5da"
        ],
        [
            "case (in_insertion_inv A x a0 l (a0::l) H10 H11);intro.",
            "VernacExtend",
            "fec74f315249139567c07d84f7ea8605e7ccd3b5"
        ],
        [
            "rewrite H12;rewrite <- H12 in H10;rewrite <- H12 in H8;rewrite <- H12 in IHl.",
            "VernacExtend",
            "be5acb4a4adbf0ae65674ba7ee5aa441a675f68a"
        ],
        [
            "assert (is_permutation A l l1).",
            "VernacExtend",
            "528570949140c17021bd664c6e33d19083b011bf"
        ],
        [
            "eapply IHl;eauto.",
            "VernacExtend",
            "92bc2acbf028623375d1c2f224a025f9b845a041"
        ],
        [
            "eapply cons_is_permutation;eauto;apply head_insertion.",
            "VernacExtend",
            "ea2c59bf1121fb618a66739e533ed2c4cbc82b6c"
        ],
        [
            "elim (in_insertion A x l H12);intro l2;intro.",
            "VernacExtend",
            "272475021c39211392fdcada5ebb466d267d83c2"
        ],
        [
            "generalize (tail_insertion A x a0 l2 l H13);intro.",
            "VernacExtend",
            "70eef4076b0ba345102e18dd5b24038c835caaa3"
        ],
        [
            "assert (is_permutation A (a0::l2) l1).",
            "VernacExtend",
            "5fb56d0548ecedee9e871e7e0de56fa6f29e5a5b"
        ],
        [
            "eapply IHl;eauto.",
            "VernacExtend",
            "92bc2acbf028623375d1c2f224a025f9b845a041"
        ],
        [
            "apply is_permutation_sym;auto.",
            "VernacExtend",
            "eb516549724d27063000e2c83220bf26eca53ed3"
        ],
        [
            "eapply cons_is_permutation;eauto.",
            "VernacExtend",
            "42cea5b97a2e1a92bbc0c2a74e0024371a177bb3"
        ],
        [
            "rewrite H1 in H3.",
            "VernacExtend",
            "1a5bd25c47245138a7a03e032524fd4066f525ce"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "rewrite <- H9;apply insertion_is_permutation;trivial.",
            "VernacExtend",
            "5f8a8722b15f79f92411c9b075c415e5d159dab8"
        ],
        [
            "assert (is_permutation A l0 l1).",
            "VernacExtend",
            "39b9be3e9b1c6b3e950609345f4eb7c5bfc6fd29"
        ],
        [
            "eapply IHl;eauto.",
            "VernacExtend",
            "92bc2acbf028623375d1c2f224a025f9b845a041"
        ],
        [
            "eapply cons_is_permutation;eauto;apply head_insertion.",
            "VernacExtend",
            "ea2c59bf1121fb618a66739e533ed2c4cbc82b6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permutation_insertion_comm : forall (A:Set)(l1 l2:list A)(x:A),(insertion A x l1 l2)->forall (l4:list A),(is_permutation A l2 l4)->(exists l3:list A,(is_permutation A l1 l3) /\\ (insertion A x l3 l4)).",
            "VernacStartTheoremProof",
            "8df478550ff596aee567ac933ced677d9f33d4b3"
        ],
        [
            "intros A l1 l2.",
            "VernacExtend",
            "3b22bca2dbfc6a79f0f431be32910e5646dd4b20"
        ],
        [
            "generalize l1;clear l1.",
            "VernacExtend",
            "c5cd7dc986fe52a7419cc1c16d2446325a8650af"
        ],
        [
            "induction l2;intros.",
            "VernacExtend",
            "6279c8042561e5948765d26c7c5435024c6bbc62"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "subst x0.",
            "VernacExtend",
            "7f80304cc4342916667b94e1d535d0a72ca10dd6"
        ],
        [
            "subst l.",
            "VernacExtend",
            "933651172b3950e9dbc80c94e47a1b1da13d5dca"
        ],
        [
            "subst l2.",
            "VernacExtend",
            "34c8ca84c938ddc4a82d160e2e12a62f19d725a6"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "subst x0.",
            "VernacExtend",
            "7f80304cc4342916667b94e1d535d0a72ca10dd6"
        ],
        [
            "subst l.",
            "VernacExtend",
            "933651172b3950e9dbc80c94e47a1b1da13d5dca"
        ],
        [
            "subst l''.",
            "VernacExtend",
            "1313d15c80a09026dfab7ab4ff09ef3cef9a804f"
        ],
        [
            "exists l'.",
            "VernacExtend",
            "254f8e941c4c968bd607990c3604ba03ec0e956e"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "subst x0.",
            "VernacExtend",
            "7f80304cc4342916667b94e1d535d0a72ca10dd6"
        ],
        [
            "subst l'.",
            "VernacExtend",
            "ed86cbc0cd72b623cc50b20f35ce3b79f312decd"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "subst l1.",
            "VernacExtend",
            "2486e014f2ef940efba1110a72c8ce3adc78d36c"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "subst x0.",
            "VernacExtend",
            "7f80304cc4342916667b94e1d535d0a72ca10dd6"
        ],
        [
            "subst l''.",
            "VernacExtend",
            "1313d15c80a09026dfab7ab4ff09ef3cef9a804f"
        ],
        [
            "subst l0.",
            "VernacExtend",
            "d0eb53d4feb9a7d7865929f567dd3f4fecc5a26a"
        ],
        [
            "elim (IHl2 l x H4 l' H3).",
            "VernacExtend",
            "0ebc0e2570f0c51d21f7f97e589e741310292b22"
        ],
        [
            "intro l3;intros.",
            "VernacExtend",
            "96021b1fa6fd4fb76d2fc6187d38efc8bf7551e7"
        ],
        [
            "elim H1;clear H1;intros.",
            "VernacExtend",
            "0b5cb27effffecbbbd63492c580499a3c4277ed9"
        ],
        [
            "elim (insertion_trans A l3 l' x H2 l4 y H6).",
            "VernacExtend",
            "a327e35e6af36a8b540009d73c51223d1c178f25"
        ],
        [
            "intro l5;intros.",
            "VernacExtend",
            "ae177ac9f80745038a9ffb7b2c7a093cc901a54c"
        ],
        [
            "elim H5;clear H5;intros.",
            "VernacExtend",
            "2de304691da3b3e83752d813bd56f658cb9de5b2"
        ],
        [
            "exists l5.",
            "VernacExtend",
            "4793a8d8e1bdbcc249bda7f0f09b3fe4886a742f"
        ],
        [
            "split;trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "eapply cons_is_permutation.",
            "VernacExtend",
            "fbd05a85ea1fd1e6ab558b64329b5982b4ae7c41"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permutation_insertion_permutation : forall (A:Set)(l l':list A),(is_permutation A l l')->forall (x:A)(l'':list A),(insertion A x l' l'')->forall (l''':list A),(is_permutation A l'' l''')->(is_permutation A (x::l) l''').",
            "VernacStartTheoremProof",
            "6b67caa41283833eadb6749e72366f35ced8953e"
        ],
        [
            "induction 1;intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "rewrite <- H3 in H0.",
            "VernacExtend",
            "797164d65571e3c8e3177434b7092977c3ba31ea"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "elim (permutation_insertion_comm A l'' l''0 x0 H1 l''' H2).",
            "VernacExtend",
            "af8dd755db81d9b458cfbea26f60983ee71e4c1f"
        ],
        [
            "intro l1;intro.",
            "VernacExtend",
            "d1de60f93579a4df3b3fd991a446c4b5fb7ed069"
        ],
        [
            "elim H3;clear H3;intros.",
            "VernacExtend",
            "3db35272ce4b8ef28a0019318fa63c100f072a8d"
        ],
        [
            "eapply cons_is_permutation.",
            "VernacExtend",
            "fbd05a85ea1fd1e6ab558b64329b5982b4ae7c41"
        ],
        [
            "eapply IHis_permutation.",
            "VernacExtend",
            "70bc7d9b33569b5f38ac3f8899b40036d14e1e98"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_trans : forall (A:Set)(l l':list A),(is_permutation A l l')->forall (l'':list A),(is_permutation A l' l'')->(is_permutation A l l'').",
            "VernacStartTheoremProof",
            "6c7748fec39f92d568d7254881e38813f97bc7b1"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "rewrite <- H2 in H0;trivial.",
            "VernacExtend",
            "1fa6cf9bf6329a117fbc2bdac890b27b7aa21b41"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "induction H5;inversion H0.",
            "VernacExtend",
            "5a1d062388380428bc30e1fc3047878487efcea7"
        ],
        [
            "eapply cons_is_permutation;try (apply IHl with l1;eauto);trivial.",
            "VernacExtend",
            "7745a488b4448ae9a5048d143a75e9e0890f8442"
        ],
        [
            "eapply permutation_insertion_permutation.",
            "VernacExtend",
            "17b49c7df939c558f64c76618478261327ed989f"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply tail_insertion.",
            "VernacExtend",
            "f9011f2750e4cdb215d99e123638e9f3684d53dc"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "eapply cons_is_permutation.",
            "VernacExtend",
            "fbd05a85ea1fd1e6ab558b64329b5982b4ae7c41"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_reverse : forall (A:Set)(l:list A),(is_permutation A l (rev l)).",
            "VernacStartTheoremProof",
            "8e1b00b859a27bd5ae116627945b344cdc9f8d95"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply nil_is_permutation.",
            "VernacExtend",
            "acf3ef989cf4008f678d74a9cfe310d8486f52f5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply cons_is_permutation.",
            "VernacExtend",
            "fbd05a85ea1fd1e6ab558b64329b5982b4ae7c41"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "apply insertion_snoc.",
            "VernacExtend",
            "5dea78eab7e733e885ee59e8972d0588c43292c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_reverse_impl_is_permutation : forall (A:Set)(l l':list A),(is_permutation A (rev l) (rev l'))->(is_permutation A l l').",
            "VernacStartTheoremProof",
            "f8722054b58e8818d14892df4eb7287da8598838"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply is_permutation_trans.",
            "VernacExtend",
            "4894d30261ff49fbe86f4df40099b3881c5c45f6"
        ],
        [
            "apply is_permutation_reverse.",
            "VernacExtend",
            "50e9f26def06f47f815ada59fcee544b86b37d57"
        ],
        [
            "apply is_permutation_sym.",
            "VernacExtend",
            "fa9d7e10dc56bab1ec95c4d41f9a867e24e8f56c"
        ],
        [
            "eapply is_permutation_trans.",
            "VernacExtend",
            "4894d30261ff49fbe86f4df40099b3881c5c45f6"
        ],
        [
            "apply is_permutation_reverse.",
            "VernacExtend",
            "50e9f26def06f47f815ada59fcee544b86b37d57"
        ],
        [
            "apply is_permutation_sym.",
            "VernacExtend",
            "fa9d7e10dc56bab1ec95c4d41f9a867e24e8f56c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_impl_is_permutation_reverse : forall (A:Set)(l l':list A),(is_permutation A l l')->(is_permutation A (rev l) (rev l')).",
            "VernacStartTheoremProof",
            "773ed7d021f741085468fbe7c0f7891483bfb8b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_permutation_reverse_impl_is_permutation.",
            "VernacExtend",
            "54fa4867574c05375522587c8b8fc98726d4213f"
        ],
        [
            "rewrite rev_involutive.",
            "VernacExtend",
            "88121f588b10df1f7392a6e1387278fcd2708d9b"
        ],
        [
            "rewrite rev_involutive.",
            "VernacExtend",
            "88121f588b10df1f7392a6e1387278fcd2708d9b"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_cons_snoc : forall (A:Set)(x:A)(xs:list A),(is_permutation A (cons x xs) (app xs (cons x nil))).",
            "VernacStartTheoremProof",
            "8b9788f58ef9965b84be11a27a913ea835041771"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply cons_is_permutation.",
            "VernacExtend",
            "fbd05a85ea1fd1e6ab558b64329b5982b4ae7c41"
        ],
        [
            "apply is_permutation_refl.",
            "VernacExtend",
            "7ff7c6e4561f7c4080003098148c0e156cbcf487"
        ],
        [
            "apply insertion_snoc.",
            "VernacExtend",
            "5dea78eab7e733e885ee59e8972d0588c43292c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_append : forall (A:Set)(x:A)(xs xss:list A),(insertion A x xs xss)->forall (yss:list A),(insertion A x (app xs yss) (app xss yss)).",
            "VernacStartTheoremProof",
            "6ca1d6258a6d04fb51b3c613634ac8d705d0f424"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply head_insertion.",
            "VernacExtend",
            "543d1924006b84a46990275d3ee7b157db4feba7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply tail_insertion.",
            "VernacExtend",
            "f9011f2750e4cdb215d99e123638e9f3684d53dc"
        ],
        [
            "apply IHinsertion.",
            "VernacExtend",
            "eac68384317b43ccd409bc7f5872e658a3d04f53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_append : forall (A:Set)(xs ys:list A),(is_permutation A xs ys)->forall (xs' ys':list A),(is_permutation A xs' ys')->(is_permutation A (app xs xs') (app ys ys')).",
            "VernacStartTheoremProof",
            "fc9a04f6cbb154f92664380e459be713ccecc43f"
        ],
        [
            "induction 1;intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply cons_is_permutation.",
            "VernacExtend",
            "fbd05a85ea1fd1e6ab558b64329b5982b4ae7c41"
        ],
        [
            "apply IHis_permutation.",
            "VernacExtend",
            "000ff64024ff6b7544ca985b9a2ef01f16ed5f34"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply insertion_append.",
            "VernacExtend",
            "35a6f97a74dfec4cc742b7690c065320f45ecbb1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_map : forall (B:Set)(y:B)(ys yss:list B),(insertion _ y ys yss)->forall (A:Set)(f:A->B)(x:A),y=f x->forall (xs:list A),ys = map f xs->exists xss:list A,yss = map f xss /\\ insertion _ x xs xss.",
            "VernacStartTheoremProof",
            "a24d9eed8c65d035bc04b8c0108804822c050a66"
        ],
        [
            "induction 1;intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "exists (cons x0 xs).",
            "VernacExtend",
            "dd9c9072a57aae773fb83aecbf827878ed03e89b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "subst x;subst l;auto.",
            "VernacExtend",
            "0f36b06a15b793caa22e18049ba920ffcc0c48ec"
        ],
        [
            "apply head_insertion.",
            "VernacExtend",
            "543d1924006b84a46990275d3ee7b157db4feba7"
        ],
        [
            "destruct xs.",
            "VernacExtend",
            "05af2aa19c540df6d89121ae054585f9f2f43c91"
        ],
        [
            "discriminate H1.",
            "VernacExtend",
            "1a1404b79897a18af2dbe03fbbe51add9f287650"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "injection H1;clear H1;intros.",
            "VernacExtend",
            "5fc29dd01886f23ce70e65c8048560a93ed20fe6"
        ],
        [
            "elim (IHinsertion _ _ _ H0 _ H1).",
            "VernacExtend",
            "7d4acc7d90e002938bd86b319bd6e7a013a2de30"
        ],
        [
            "intro xss;intros.",
            "VernacExtend",
            "d0698f081b57853e3c3698e84046c291d26c117e"
        ],
        [
            "elim H3;clear H3;intros.",
            "VernacExtend",
            "3db35272ce4b8ef28a0019318fa63c100f072a8d"
        ],
        [
            "exists (cons a xss).",
            "VernacExtend",
            "299a1e7f741070c1124475124e169cf3bcfa5ca6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "subst y;subst l';auto.",
            "VernacExtend",
            "f046269529c3b16bdb60adcd59b2bacb44cf902d"
        ],
        [
            "apply tail_insertion.",
            "VernacExtend",
            "f9011f2750e4cdb215d99e123638e9f3684d53dc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_map : forall (B:Set)(ys1 ys2:list B),(is_permutation B ys1 ys2)->forall (A:Set)(f:A->B)(xs1:list A),(ys1 = map f xs1)->exists xs2:list A,(is_permutation A xs1 xs2)/\\ys2 = map f xs2.",
            "VernacStartTheoremProof",
            "7cf7c3823048133d5bd0cc760bb89fa1abc804a4"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct xs1;try (discriminate H).",
            "VernacExtend",
            "c4cf4e8c09bbdfa6eaf825df3fa3017e9ca07395"
        ],
        [
            "exists (nil (A:=A)).",
            "VernacExtend",
            "6f61d9c20b062bcac05ccb7ff8d673a42caf7b3b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply nil_is_permutation.",
            "VernacExtend",
            "acf3ef989cf4008f678d74a9cfe310d8486f52f5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct xs1;try (discriminate H1).",
            "VernacExtend",
            "67c8596249fbbd9f1a54f870115206509c55683f"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "injection H1;clear H1;intros.",
            "VernacExtend",
            "5fc29dd01886f23ce70e65c8048560a93ed20fe6"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "elim (IHis_permutation _ _ _ H1).",
            "VernacExtend",
            "0d7adb57b8d6c7009ddd125f0c6c14bc04c0cefa"
        ],
        [
            "intro xs2.",
            "VernacExtend",
            "c6905af8154432e01280ca556a1003b61cd37231"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H2;clear H2;intros.",
            "VernacExtend",
            "ba2d031358b80a8707e4aa35178271db06818fdf"
        ],
        [
            "subst l'.",
            "VernacExtend",
            "ed86cbc0cd72b623cc50b20f35ce3b79f312decd"
        ],
        [
            "elim (insertion_map _ _ _ _ H0 _ f a (refl_equal (f a)) xs2 (refl_equal (map f xs2))).",
            "VernacExtend",
            "8c2ac21bb4a8aa7e9077245da92b32e7f53dc309"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H3;clear H3;intros.",
            "VernacExtend",
            "3db35272ce4b8ef28a0019318fa63c100f072a8d"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split;auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "eapply cons_is_permutation;eauto.",
            "VernacExtend",
            "42cea5b97a2e1a92bbc0c2a74e0024371a177bb3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_permutation_set : forall (A:Set)(l l':list A),(is_permutation _ l l')->(is_set _ l)->(is_set _ l').",
            "VernacStartTheoremProof",
            "8ff5375dba25db5f671f14246493eb4497dcce44"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "subst x0;subst l0.",
            "VernacExtend",
            "6238077b1780c28cfd1e43267231d341c7d7ca00"
        ],
        [
            "eapply insertion_is_set.",
            "VernacExtend",
            "cc4a1974c1b0a2f00ad1a551978e89501cddbf50"
        ],
        [
            "apply IHis_permutation.",
            "VernacExtend",
            "000ff64024ff6b7544ca985b9a2ef01f16ed5f34"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim (permutation_in _ _ _ H x).",
            "VernacExtend",
            "ba57864aab0b1941c543e19d61e31095dfd31b75"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red;intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_impl_permutation : forall (A:Set)(l l':list A),(Permutation l l')->(is_permutation _ l l').",
            "VernacStartTheoremProof",
            "61383458374b2ffb28a7b150ef3b77eba4051811"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "apply nil_is_permutation.",
            "VernacExtend",
            "acf3ef989cf4008f678d74a9cfe310d8486f52f5"
        ],
        [
            "eapply cons_is_permutation.",
            "VernacExtend",
            "fbd05a85ea1fd1e6ab558b64329b5982b4ae7c41"
        ],
        [
            "apply IHPermutation.",
            "VernacExtend",
            "7f2e0b5c6f52c8e521b4ea77af602441cff57e6d"
        ],
        [
            "apply head_insertion.",
            "VernacExtend",
            "543d1924006b84a46990275d3ee7b157db4feba7"
        ],
        [
            "eapply cons_is_permutation.",
            "VernacExtend",
            "fbd05a85ea1fd1e6ab558b64329b5982b4ae7c41"
        ],
        [
            "apply is_permutation_refl.",
            "VernacExtend",
            "7ff7c6e4561f7c4080003098148c0e156cbcf487"
        ],
        [
            "apply tail_insertion.",
            "VernacExtend",
            "f9011f2750e4cdb215d99e123638e9f3684d53dc"
        ],
        [
            "apply head_insertion.",
            "VernacExtend",
            "543d1924006b84a46990275d3ee7b157db4feba7"
        ],
        [
            "eapply is_permutation_trans;eauto.",
            "VernacExtend",
            "51e617e069297e204a1550e9bae18ef80850ebe4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_append_decompose : forall (A:Set)(x:A)(l l':list A),(insertion _ x l l')->exists l1:list A,exists l2:list A,l=(app l1 l2)/\\l'=(app l1 (cons x l2)).",
            "VernacStartTheoremProof",
            "01ca307bd92a31f32ebcf5ccc14013115f303fd8"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "exists (nil (A:=A)).",
            "VernacExtend",
            "6f61d9c20b062bcac05ccb7ff8d673a42caf7b3b"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "split;try reflexivity.",
            "VernacExtend",
            "238a58eee4ad06e96dacd1abfbc7cf3b3bb07d2c"
        ],
        [
            "elim IHinsertion.",
            "VernacExtend",
            "cfb8d5ec4e1c2dea56678c01d9ee8ac9f14a6a53"
        ],
        [
            "intro l1.",
            "VernacExtend",
            "465d5ba237f0ac3ac78ec62f43016ee3b528e4ca"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "intro l2;intros.",
            "VernacExtend",
            "87f004e1c5f977fb05cf8bd9473476f0d038a511"
        ],
        [
            "elim H1;clear H1;intros.",
            "VernacExtend",
            "0b5cb27effffecbbbd63492c580499a3c4277ed9"
        ],
        [
            "exists (cons y l1).",
            "VernacExtend",
            "b69f8a68d2ff90a562a3daaac9e533ddfd0ba543"
        ],
        [
            "exists l2.",
            "VernacExtend",
            "1e2d4e330908e1cc506c62c89f79bcaae1a2e63d"
        ],
        [
            "subst l;subst l'.",
            "VernacExtend",
            "1acb0ecb1fce2d68493920b435e1f754d0dd862b"
        ],
        [
            "split;try reflexivity.",
            "VernacExtend",
            "238a58eee4ad06e96dacd1abfbc7cf3b3bb07d2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permutation_impl_Permutation : forall (A:Set)(l l':list A),(is_permutation _ l l')->(Permutation l l').",
            "VernacStartTheoremProof",
            "e84787d834bc26b1aa9fb443ca3d88b093949468"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "apply perm_nil.",
            "VernacExtend",
            "7772adb8d0e920abd6a49bef78350be27e8bad2d"
        ],
        [
            "elim (insertion_append_decompose _ _ _ _ H0).",
            "VernacExtend",
            "a46301c06919ad7292ccedebc3283827742caa8e"
        ],
        [
            "intro l1;intros.",
            "VernacExtend",
            "7e413c58cb85bcd842f44807595ab8594250fa87"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "intro l2;intros.",
            "VernacExtend",
            "87f004e1c5f977fb05cf8bd9473476f0d038a511"
        ],
        [
            "elim H2;clear H2;intros.",
            "VernacExtend",
            "ba2d031358b80a8707e4aa35178271db06818fdf"
        ],
        [
            "subst l';subst l''.",
            "VernacExtend",
            "d0c876574df75e7a4d333951d9afb8b7187d571b"
        ],
        [
            "apply Permutation_cons_app.",
            "VernacExtend",
            "0a8f3a7e221da497e21b76419e5e97315655c1dc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "insertion_snoc",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "induction xs.",
                        "VernacExtend",
                        "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply head_insertion.",
                        "VernacExtend",
                        "543d1924006b84a46990275d3ee7b157db4feba7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply tail_insertion.",
                        "VernacExtend",
                        "f9011f2750e4cdb215d99e123638e9f3684d53dc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insertion_in",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H;simpl;tauto.",
                        "VernacExtend",
                        "aa43001b3a7847d8137f388443979eabe0748104"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insertion_inclusion",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "induction l;simpl;try tauto;intros.",
                        "VernacExtend",
                        "2ec211f54a66332d32742d9e93317bdafb7351bd"
                    ]
                },
                {
                    "command": [
                        "inversion H;simpl;try tauto.",
                        "VernacExtend",
                        "67e9e5f16d0cadce77f5ff6e45651ad1623caf66"
                    ]
                },
                {
                    "command": [
                        "case H0;try tauto.",
                        "VernacExtend",
                        "4e3c5441fe84e1059bec036e7d38230fbf82e9ef"
                    ]
                },
                {
                    "command": [
                        "right;auto.",
                        "VernacExtend",
                        "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_insertion",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "induction l;simpl;try tauto;intros.",
                        "VernacExtend",
                        "2ec211f54a66332d32742d9e93317bdafb7351bd"
                    ]
                },
                {
                    "command": [
                        "case H;intro.",
                        "VernacExtend",
                        "de90fa06f03a0fc3c2fba77eace9c68dac9da5a5"
                    ]
                },
                {
                    "command": [
                        "rewrite H0;exists l;apply head_insertion.",
                        "VernacExtend",
                        "84307163929441e22f8d153cfee87806e3652e53"
                    ]
                },
                {
                    "command": [
                        "elim (IHl H0);intro l';intro.",
                        "VernacExtend",
                        "bb330280e203427eb48d30fb7363fb3ac172dfcf"
                    ]
                },
                {
                    "command": [
                        "exists (a::l');apply tail_insertion;trivial.",
                        "VernacExtend",
                        "a3432e5c87dc7dece17c6400ca6bfb75ce41a4cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_insertion_inv",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H;simpl in H0.",
                        "VernacExtend",
                        "fb835f1cb80b55fbc9ce7abf29442cdf46fc899d"
                    ]
                },
                {
                    "command": [
                        "case H0;intro H1;try (symmetry in H1);tauto.",
                        "VernacExtend",
                        "da65f725bca5cdf225ef4659dea3bb724a7703bf"
                    ]
                },
                {
                    "command": [
                        "case H0;simpl;intro;tauto.",
                        "VernacExtend",
                        "962a6e01888c2653306da362774e1b435e295b2d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_set_insertion",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "induction 1;intros.",
                        "VernacExtend",
                        "176684f910d62ec20fbc75549575bf1cd34fa8ec"
                    ]
                },
                {
                    "command": [
                        "inversion H;trivial.",
                        "VernacExtend",
                        "5234cf8e94dd44a80fe8ef152e76a9c1fadc9afa"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "apply cons_is_set.",
                        "VernacExtend",
                        "a3168a1cdc2e6a24e5f165c42965eea27e0e1cf6"
                    ]
                },
                {
                    "command": [
                        "apply IHinsertion;trivial.",
                        "VernacExtend",
                        "4bf6923c4a075ca3268367f67736bc9265821a58"
                    ]
                },
                {
                    "command": [
                        "intro;apply H4;apply (insertion_inclusion A x l l');trivial.",
                        "VernacExtend",
                        "e391c656e2bb636aa6db6171a93ff50c72525af3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_set_insertion_in",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "induction l;simpl;try tauto;intros.",
                        "VernacExtend",
                        "2ec211f54a66332d32742d9e93317bdafb7351bd"
                    ]
                },
                {
                    "command": [
                        "inversion H;rewrite <- H3 in H0;inversion H0.",
                        "VernacExtend",
                        "a8c8c1d9e1a03995a3b34aaa0a8ee2f4e39deff6"
                    ]
                },
                {
                    "command": [
                        "simpl in H7;trivial.",
                        "VernacExtend",
                        "a37484f8293811ca957105a790a7a81462177ee5"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "case H10;intro.",
                        "VernacExtend",
                        "5a59d0394fb2093c0b95874eba4f42ce37df6ff0"
                    ]
                },
                {
                    "command": [
                        "apply H9;rewrite H11;eapply insertion_in;apply H5.",
                        "VernacExtend",
                        "8969017e46977c4b07988bd1c51b3a0176b719d6"
                    ]
                },
                {
                    "command": [
                        "elim (IHl l'0 x H5 H8 H11).",
                        "VernacExtend",
                        "ec03b8ec528617bdcd50190aa99dbf2ce2758cb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_set_eq_impl_permutation",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "induction l;intros;simpl in H.",
                        "VernacExtend",
                        "aaef0a82e17ef7f81e33161c2df9ceab5841381c"
                    ]
                },
                {
                    "command": [
                        "destruct l'.",
                        "VernacExtend",
                        "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
                    ]
                },
                {
                    "command": [
                        "apply nil_is_permutation.",
                        "VernacExtend",
                        "acf3ef989cf4008f678d74a9cfe310d8486f52f5"
                    ]
                },
                {
                    "command": [
                        "elim (H a);intros.",
                        "VernacExtend",
                        "a11aa14662758219565b0b9337ea30284a7b7ccf"
                    ]
                },
                {
                    "command": [
                        "elim H3;simpl;tauto.",
                        "VernacExtend",
                        "324acb4e0a1ca2aa60ef44c36a7d83910875612f"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "symmetry in H2;rewrite H2 in H;elim (H a);intros.",
                        "VernacExtend",
                        "22890c4199266ebee2645d269b0d8c19ce79b179"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H6;rewrite H2.",
                        "VernacExtend",
                        "56137c21e7c80048edbb3743ec7d24602f3dda9e"
                    ]
                },
                {
                    "command": [
                        "assert (In x l');auto.",
                        "VernacExtend",
                        "9bc1f4bf352f5157a5a30f93496b6ddf50b0d1c6"
                    ]
                },
                {
                    "command": [
                        "elim (in_insertion A x l' H8).",
                        "VernacExtend",
                        "264d3a4493ee6e649051dc44f842791da9732890"
                    ]
                },
                {
                    "command": [
                        "intro l'';intro.",
                        "VernacExtend",
                        "4ad30afc3e0c2907c2693f6cf88c49a898dd984a"
                    ]
                },
                {
                    "command": [
                        "apply cons_is_permutation with l'';trivial.",
                        "VernacExtend",
                        "4df0fa6d4c31ef9ae3300f6bcc384bb682bb154e"
                    ]
                },
                {
                    "command": [
                        "apply IHl;trivial.",
                        "VernacExtend",
                        "7f299a9fd1f3e1e6d1f7d5810a28753ef5e39442"
                    ]
                },
                {
                    "command": [
                        "split;intro.",
                        "VernacExtend",
                        "966a6edea9c2088caf0e546be884ea531f6207b3"
                    ]
                },
                {
                    "command": [
                        "elim (H x0);intros.",
                        "VernacExtend",
                        "a24a3d9b84f9b6b6bce134507e566d20ff5a148c"
                    ]
                },
                {
                    "command": [
                        "elim (in_insertion_inv A x0 x l'' l');auto.",
                        "VernacExtend",
                        "4822fa1ab04533372e52db94c62a343d46119ed4"
                    ]
                },
                {
                    "command": [
                        "intro;rewrite H13 in H10;rewrite H2 in H5;tauto.",
                        "VernacExtend",
                        "a7d72aa63b9384ea1348c4b03bc6e34ccedfa5b8"
                    ]
                },
                {
                    "command": [
                        "elim (H x0);intros.",
                        "VernacExtend",
                        "a24a3d9b84f9b6b6bce134507e566d20ff5a148c"
                    ]
                },
                {
                    "command": [
                        "case H12;try tauto.",
                        "VernacExtend",
                        "5f6a45609413c2967a56c7881fe46523de4d6ff7"
                    ]
                },
                {
                    "command": [
                        "apply (insertion_inclusion A x l'' l');trivial.",
                        "VernacExtend",
                        "3686b05f45dda270a83a9db0e38d0aa3f1233cd8"
                    ]
                },
                {
                    "command": [
                        "intro;rewrite <- H13 in H10.",
                        "VernacExtend",
                        "712dfcdc75ecf65b2ab6b11c6b62dcbdf7844df2"
                    ]
                },
                {
                    "command": [
                        "elim (is_set_insertion_in A l'' l' x);trivial.",
                        "VernacExtend",
                        "f8758a879110a039bbc77e6555a99cc9d4b9e0ae"
                    ]
                },
                {
                    "command": [
                        "eapply is_set_insertion;eauto.",
                        "VernacExtend",
                        "50f9216852c3c95ef458f3e2857dcacd1fb860de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_permutation_refl",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "apply nil_is_permutation.",
                        "VernacExtend",
                        "acf3ef989cf4008f678d74a9cfe310d8486f52f5"
                    ]
                },
                {
                    "command": [
                        "eapply cons_is_permutation;[apply IHl | apply head_insertion].",
                        "VernacExtend",
                        "71b93549d6edad93200ca62b4920465be470244c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insertion_is_permutation",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "apply cons_is_permutation with l;[apply is_permutation_refl | apply head_insertion].",
                        "VernacExtend",
                        "015745de3290113e7958295d5dc26c245ccd7d36"
                    ]
                },
                {
                    "command": [
                        "apply cons_is_permutation with (y::l);[apply is_permutation_refl | apply tail_insertion;trivial].",
                        "VernacExtend",
                        "4cf18e7b788e8538b681628d2a121d741cf44393"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insertion_trans",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "induction 1;intros.",
                        "VernacExtend",
                        "176684f910d62ec20fbc75549575bf1cd34fa8ec"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "exists (y::l);split;[apply head_insertion | apply tail_insertion;apply head_insertion].",
                        "VernacExtend",
                        "bdfcea8d84eb91448ea9e870f46b17689a180f96"
                    ]
                },
                {
                    "command": [
                        "exists l';split;[trivial | apply head_insertion].",
                        "VernacExtend",
                        "abd576463fac2d5786e1879183e46f9c20bab083"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "exists (y0::y::l);split;[apply head_insertion | apply tail_insertion;apply tail_insertion;trivial].",
                        "VernacExtend",
                        "1a17eaca173b9c55a06cba399f7dd8a2b977bc79"
                    ]
                },
                {
                    "command": [
                        "elim (IHinsertion l'0 y0 H5);intro l3;intro.",
                        "VernacExtend",
                        "5937ff5feeb3b65cae3f114d345eb7aabdc0c9e9"
                    ]
                },
                {
                    "command": [
                        "elim H6;intros.",
                        "VernacExtend",
                        "adada1ad2ce0ef6f5f04088c4ecd9bfe31ad7784"
                    ]
                },
                {
                    "command": [
                        "exists (y::l3);split;[apply tail_insertion | apply tail_insertion];trivial.",
                        "VernacExtend",
                        "9b75c0b3ae22b32e942c5af3fb1de48fe234d8bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permutation_insertion",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "induction 1;intros.",
                        "VernacExtend",
                        "176684f910d62ec20fbc75549575bf1cd34fa8ec"
                    ]
                },
                {
                    "command": [
                        "inversion H;inversion H0;apply is_permutation_refl.",
                        "VernacExtend",
                        "9b5c1ed44a163a020add9a5319831bd790ebf507"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "apply cons_is_permutation with l'';trivial.",
                        "VernacExtend",
                        "4df0fa6d4c31ef9ae3300f6bcc384bb682bb154e"
                    ]
                },
                {
                    "command": [
                        "apply cons_is_permutation with l';trivial.",
                        "VernacExtend",
                        "f38a714bf8f85ad152debffeab4522bfe8d94fe5"
                    ]
                },
                {
                    "command": [
                        "elim (insertion_trans A l' l'' x H0 l3 x0 H2).",
                        "VernacExtend",
                        "28fa742f419b72eb5a0be8c52234df2a6c768a51"
                    ]
                },
                {
                    "command": [
                        "intro l4;intro.",
                        "VernacExtend",
                        "31ea7ff268742c44761615353be09d859bd49baf"
                    ]
                },
                {
                    "command": [
                        "elim H8;intros.",
                        "VernacExtend",
                        "54bacf1a2e9fa49626cbb57c551336659e39bf7a"
                    ]
                },
                {
                    "command": [
                        "apply cons_is_permutation with l4;trivial.",
                        "VernacExtend",
                        "55eaddb5a884cb52079cab7d53b3e605238818d0"
                    ]
                },
                {
                    "command": [
                        "eapply IHis_permutation;eauto.",
                        "VernacExtend",
                        "074df7c7e0625ee447517775745882838ca09e93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_permutation_sym",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "induction 1;[apply nil_is_permutation | eapply permutation_insertion;eauto;apply head_insertion].",
                        "VernacExtend",
                        "9d9638cd4492d8b45dd263bdc9f29eb44b11cf53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permutation_in",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "induction l;simpl;intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "inversion H;simpl;tauto.",
                        "VernacExtend",
                        "1de853ae39cb35ea15e5e345feba999418a231a8"
                    ]
                },
                {
                    "command": [
                        "inversion H;simpl.",
                        "VernacExtend",
                        "18f1ce4794e5497d52fad28a77970c4b0ee1853c"
                    ]
                },
                {
                    "command": [
                        "split;intro.",
                        "VernacExtend",
                        "966a6edea9c2088caf0e546be884ea531f6207b3"
                    ]
                },
                {
                    "command": [
                        "case H5;intro.",
                        "VernacExtend",
                        "42e7e5e5e9bb105df3a4a35f0f8c33819de2595b"
                    ]
                },
                {
                    "command": [
                        "eapply insertion_in;rewrite H6 in H4;apply H4.",
                        "VernacExtend",
                        "f71b0e56dce10628ad30487fa784316d5eeec963"
                    ]
                },
                {
                    "command": [
                        "elim (IHl l'0 H2 x);intros.",
                        "VernacExtend",
                        "07a6914b058c97fa1f36100dad5dd74e303dcd21"
                    ]
                },
                {
                    "command": [
                        "eapply insertion_inclusion;eauto.",
                        "VernacExtend",
                        "05a6211069f211d670288c56afc285a361a7171c"
                    ]
                },
                {
                    "command": [
                        "case (in_insertion_inv A x a l'0 l' H4 H5);intro.",
                        "VernacExtend",
                        "a7b4ed525c85b147df6549e44c3e34e89b4c24bb"
                    ]
                },
                {
                    "command": [
                        "rewrite H6;tauto.",
                        "VernacExtend",
                        "8054de191d82ff9223fd7d31b01b514152e8f72b"
                    ]
                },
                {
                    "command": [
                        "elim (IHl l'0 H2 x);intros.",
                        "VernacExtend",
                        "07a6914b058c97fa1f36100dad5dd74e303dcd21"
                    ]
                },
                {
                    "command": [
                        "right;auto.",
                        "VernacExtend",
                        "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permutation_insertion_aux",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply permutation_insertion;eauto.",
                        "VernacExtend",
                        "8bc3260ba316c9c2a9baf2d57525b3dfd184656c"
                    ]
                },
                {
                    "command": [
                        "apply is_permutation_refl.",
                        "VernacExtend",
                        "7ff7c6e4561f7c4080003098148c0e156cbcf487"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_recursion",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (well_founded_ind (well_founded_ltof (list A) (fun l:list A => length l)));unfold ltof;auto.",
                        "VernacExtend",
                        "84f280963d813fbc840a8d29c059bc08dc16ab69"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insertion_length",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "induction 1;simpl;trivial.",
                        "VernacExtend",
                        "b8eeca75d108d03b0acb862089fdbdf1fa8ae526"
                    ]
                },
                {
                    "command": [
                        "rewrite IHinsertion;trivial.",
                        "VernacExtend",
                        "279a9c5a8f0dcf2145c08070cd019895a078e8de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permutation_length",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "induction 1;simpl;trivial.",
                        "VernacExtend",
                        "b8eeca75d108d03b0acb862089fdbdf1fa8ae526"
                    ]
                },
                {
                    "command": [
                        "generalize (insertion_length A l' l'' x H0);intro;congruence.",
                        "VernacExtend",
                        "506cb6549e1e07f35fcb5f9b261a620d44fcca4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insertion_permutation_eq",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "induction l;intros;inversion H.",
                        "VernacExtend",
                        "cf503dc83cc767c806013c7a06c93c091dfd0c68"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "apply is_permutation_refl.",
                        "VernacExtend",
                        "7ff7c6e4561f7c4080003098148c0e156cbcf487"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4;destruct l.",
                        "VernacExtend",
                        "7b9a66f02faecb1818f805ce5872bffd7cf8ad71"
                    ]
                },
                {
                    "command": [
                        "inversion H8.",
                        "VernacExtend",
                        "bd1054a31f838f58a763ae9f4c46f33682fb2e03"
                    ]
                },
                {
                    "command": [
                        "generalize (head_insertion A a0 l);intro.",
                        "VernacExtend",
                        "604b6e38c4ae99c96878d2b093270fa688ba57b2"
                    ]
                },
                {
                    "command": [
                        "assert (In x (a0::l)).",
                        "VernacExtend",
                        "334bee0b83affda6be4189992e4c0d5744004a0d"
                    ]
                },
                {
                    "command": [
                        "eapply insertion_in;apply H8.",
                        "VernacExtend",
                        "1ec158c564df27baaab70762a4b467cfd995e5da"
                    ]
                },
                {
                    "command": [
                        "case (in_insertion_inv A x a0 l (a0::l) H10 H11);intro.",
                        "VernacExtend",
                        "fec74f315249139567c07d84f7ea8605e7ccd3b5"
                    ]
                },
                {
                    "command": [
                        "rewrite H12;rewrite <- H12 in H10;rewrite <- H12 in H8;rewrite <- H12 in IHl.",
                        "VernacExtend",
                        "be5acb4a4adbf0ae65674ba7ee5aa441a675f68a"
                    ]
                },
                {
                    "command": [
                        "assert (is_permutation A l l1).",
                        "VernacExtend",
                        "528570949140c17021bd664c6e33d19083b011bf"
                    ]
                },
                {
                    "command": [
                        "eapply IHl;eauto.",
                        "VernacExtend",
                        "92bc2acbf028623375d1c2f224a025f9b845a041"
                    ]
                },
                {
                    "command": [
                        "eapply cons_is_permutation;eauto;apply head_insertion.",
                        "VernacExtend",
                        "ea2c59bf1121fb618a66739e533ed2c4cbc82b6c"
                    ]
                },
                {
                    "command": [
                        "elim (in_insertion A x l H12);intro l2;intro.",
                        "VernacExtend",
                        "272475021c39211392fdcada5ebb466d267d83c2"
                    ]
                },
                {
                    "command": [
                        "generalize (tail_insertion A x a0 l2 l H13);intro.",
                        "VernacExtend",
                        "70eef4076b0ba345102e18dd5b24038c835caaa3"
                    ]
                },
                {
                    "command": [
                        "assert (is_permutation A (a0::l2) l1).",
                        "VernacExtend",
                        "5fb56d0548ecedee9e871e7e0de56fa6f29e5a5b"
                    ]
                },
                {
                    "command": [
                        "eapply IHl;eauto.",
                        "VernacExtend",
                        "92bc2acbf028623375d1c2f224a025f9b845a041"
                    ]
                },
                {
                    "command": [
                        "apply is_permutation_sym;auto.",
                        "VernacExtend",
                        "eb516549724d27063000e2c83220bf26eca53ed3"
                    ]
                },
                {
                    "command": [
                        "eapply cons_is_permutation;eauto.",
                        "VernacExtend",
                        "42cea5b97a2e1a92bbc0c2a74e0024371a177bb3"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H3.",
                        "VernacExtend",
                        "1a5bd25c47245138a7a03e032524fd4066f525ce"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H9;apply insertion_is_permutation;trivial.",
                        "VernacExtend",
                        "5f8a8722b15f79f92411c9b075c415e5d159dab8"
                    ]
                },
                {
                    "command": [
                        "assert (is_permutation A l0 l1).",
                        "VernacExtend",
                        "39b9be3e9b1c6b3e950609345f4eb7c5bfc6fd29"
                    ]
                },
                {
                    "command": [
                        "eapply IHl;eauto.",
                        "VernacExtend",
                        "92bc2acbf028623375d1c2f224a025f9b845a041"
                    ]
                },
                {
                    "command": [
                        "eapply cons_is_permutation;eauto;apply head_insertion.",
                        "VernacExtend",
                        "ea2c59bf1121fb618a66739e533ed2c4cbc82b6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_permutation_impl_is_permutation_reverse",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_permutation_reverse_impl_is_permutation.",
                        "VernacExtend",
                        "54fa4867574c05375522587c8b8fc98726d4213f"
                    ]
                },
                {
                    "command": [
                        "rewrite rev_involutive.",
                        "VernacExtend",
                        "88121f588b10df1f7392a6e1387278fcd2708d9b"
                    ]
                },
                {
                    "command": [
                        "rewrite rev_involutive.",
                        "VernacExtend",
                        "88121f588b10df1f7392a6e1387278fcd2708d9b"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insertion_append",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply head_insertion.",
                        "VernacExtend",
                        "543d1924006b84a46990275d3ee7b157db4feba7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply tail_insertion.",
                        "VernacExtend",
                        "f9011f2750e4cdb215d99e123638e9f3684d53dc"
                    ]
                },
                {
                    "command": [
                        "apply IHinsertion.",
                        "VernacExtend",
                        "eac68384317b43ccd409bc7f5872e658a3d04f53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insertion_map",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "induction 1;intros.",
                        "VernacExtend",
                        "176684f910d62ec20fbc75549575bf1cd34fa8ec"
                    ]
                },
                {
                    "command": [
                        "exists (cons x0 xs).",
                        "VernacExtend",
                        "dd9c9072a57aae773fb83aecbf827878ed03e89b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "subst x;subst l;auto.",
                        "VernacExtend",
                        "0f36b06a15b793caa22e18049ba920ffcc0c48ec"
                    ]
                },
                {
                    "command": [
                        "apply head_insertion.",
                        "VernacExtend",
                        "543d1924006b84a46990275d3ee7b157db4feba7"
                    ]
                },
                {
                    "command": [
                        "destruct xs.",
                        "VernacExtend",
                        "05af2aa19c540df6d89121ae054585f9f2f43c91"
                    ]
                },
                {
                    "command": [
                        "discriminate H1.",
                        "VernacExtend",
                        "1a1404b79897a18af2dbe03fbbe51add9f287650"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "injection H1;clear H1;intros.",
                        "VernacExtend",
                        "5fc29dd01886f23ce70e65c8048560a93ed20fe6"
                    ]
                },
                {
                    "command": [
                        "elim (IHinsertion _ _ _ H0 _ H1).",
                        "VernacExtend",
                        "7d4acc7d90e002938bd86b319bd6e7a013a2de30"
                    ]
                },
                {
                    "command": [
                        "intro xss;intros.",
                        "VernacExtend",
                        "d0698f081b57853e3c3698e84046c291d26c117e"
                    ]
                },
                {
                    "command": [
                        "elim H3;clear H3;intros.",
                        "VernacExtend",
                        "3db35272ce4b8ef28a0019318fa63c100f072a8d"
                    ]
                },
                {
                    "command": [
                        "exists (cons a xss).",
                        "VernacExtend",
                        "299a1e7f741070c1124475124e169cf3bcfa5ca6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "subst y;subst l';auto.",
                        "VernacExtend",
                        "f046269529c3b16bdb60adcd59b2bacb44cf902d"
                    ]
                },
                {
                    "command": [
                        "apply tail_insertion.",
                        "VernacExtend",
                        "f9011f2750e4cdb215d99e123638e9f3684d53dc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_permutation_map",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct xs1;try (discriminate H).",
                        "VernacExtend",
                        "c4cf4e8c09bbdfa6eaf825df3fa3017e9ca07395"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=A)).",
                        "VernacExtend",
                        "6f61d9c20b062bcac05ccb7ff8d673a42caf7b3b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply nil_is_permutation.",
                        "VernacExtend",
                        "acf3ef989cf4008f678d74a9cfe310d8486f52f5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct xs1;try (discriminate H1).",
                        "VernacExtend",
                        "67c8596249fbbd9f1a54f870115206509c55683f"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "injection H1;clear H1;intros.",
                        "VernacExtend",
                        "5fc29dd01886f23ce70e65c8048560a93ed20fe6"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "elim (IHis_permutation _ _ _ H1).",
                        "VernacExtend",
                        "0d7adb57b8d6c7009ddd125f0c6c14bc04c0cefa"
                    ]
                },
                {
                    "command": [
                        "intro xs2.",
                        "VernacExtend",
                        "c6905af8154432e01280ca556a1003b61cd37231"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H2;clear H2;intros.",
                        "VernacExtend",
                        "ba2d031358b80a8707e4aa35178271db06818fdf"
                    ]
                },
                {
                    "command": [
                        "subst l'.",
                        "VernacExtend",
                        "ed86cbc0cd72b623cc50b20f35ce3b79f312decd"
                    ]
                },
                {
                    "command": [
                        "elim (insertion_map _ _ _ _ H0 _ f a (refl_equal (f a)) xs2 (refl_equal (map f xs2))).",
                        "VernacExtend",
                        "8c2ac21bb4a8aa7e9077245da92b32e7f53dc309"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H3;clear H3;intros.",
                        "VernacExtend",
                        "3db35272ce4b8ef28a0019318fa63c100f072a8d"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split;auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "eapply cons_is_permutation;eauto.",
                        "VernacExtend",
                        "42cea5b97a2e1a92bbc0c2a74e0024371a177bb3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insertion_append_decompose",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=A)).",
                        "VernacExtend",
                        "6f61d9c20b062bcac05ccb7ff8d673a42caf7b3b"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "split;try reflexivity.",
                        "VernacExtend",
                        "238a58eee4ad06e96dacd1abfbc7cf3b3bb07d2c"
                    ]
                },
                {
                    "command": [
                        "elim IHinsertion.",
                        "VernacExtend",
                        "cfb8d5ec4e1c2dea56678c01d9ee8ac9f14a6a53"
                    ]
                },
                {
                    "command": [
                        "intro l1.",
                        "VernacExtend",
                        "465d5ba237f0ac3ac78ec62f43016ee3b528e4ca"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "intro l2;intros.",
                        "VernacExtend",
                        "87f004e1c5f977fb05cf8bd9473476f0d038a511"
                    ]
                },
                {
                    "command": [
                        "elim H1;clear H1;intros.",
                        "VernacExtend",
                        "0b5cb27effffecbbbd63492c580499a3c4277ed9"
                    ]
                },
                {
                    "command": [
                        "exists (cons y l1).",
                        "VernacExtend",
                        "b69f8a68d2ff90a562a3daaac9e533ddfd0ba543"
                    ]
                },
                {
                    "command": [
                        "exists l2.",
                        "VernacExtend",
                        "1e2d4e330908e1cc506c62c89f79bcaae1a2e63d"
                    ]
                },
                {
                    "command": [
                        "subst l;subst l'.",
                        "VernacExtend",
                        "1acb0ecb1fce2d68493920b435e1f754d0dd862b"
                    ]
                },
                {
                    "command": [
                        "split;try reflexivity.",
                        "VernacExtend",
                        "238a58eee4ad06e96dacd1abfbc7cf3b3bb07d2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permutation_impl_Permutation",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "apply perm_nil.",
                        "VernacExtend",
                        "7772adb8d0e920abd6a49bef78350be27e8bad2d"
                    ]
                },
                {
                    "command": [
                        "elim (insertion_append_decompose _ _ _ _ H0).",
                        "VernacExtend",
                        "a46301c06919ad7292ccedebc3283827742caa8e"
                    ]
                },
                {
                    "command": [
                        "intro l1;intros.",
                        "VernacExtend",
                        "7e413c58cb85bcd842f44807595ab8594250fa87"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "intro l2;intros.",
                        "VernacExtend",
                        "87f004e1c5f977fb05cf8bd9473476f0d038a511"
                    ]
                },
                {
                    "command": [
                        "elim H2;clear H2;intros.",
                        "VernacExtend",
                        "ba2d031358b80a8707e4aa35178271db06818fdf"
                    ]
                },
                {
                    "command": [
                        "subst l';subst l''.",
                        "VernacExtend",
                        "d0c876574df75e7a4d333951d9afb8b7187d571b"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_cons_app.",
                        "VernacExtend",
                        "0a8f3a7e221da497e21b76419e5e97315655c1dc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}