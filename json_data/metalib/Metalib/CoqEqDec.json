{
    "filename": "Metalib/CoqEqDec.v",
    "coq_project": "metalib",
    "vernac_cmds": [
        [
            "Require Import Coq.Classes.Equivalence.",
            "VernacRequire",
            "01b5a7997491aafd5649f0e528b0fbdfb06cb342"
        ],
        [
            "Require Import Coq.Classes.EquivDec.",
            "VernacRequire",
            "bc8fdd4058899aeb2ad18521d0a2496a87cd9eb2"
        ],
        [
            "Require Import Coq.Logic.Decidable.",
            "VernacRequire",
            "3dcfcf37067c1b8a5e2bb2d2e6e102b0fd9e0530"
        ],
        [
            "Hint Extern 0 (?x === ?x) => reflexivity.",
            "VernacHints",
            "0fda189070d63cf34dfb012f1f4ead59a7f3f7a6"
        ],
        [
            "Hint Extern 1 (_ === _) => (symmetry; trivial; fail).",
            "VernacHints",
            "e89f49b803a738e667f54f65b7715bc300556a93"
        ],
        [
            "Hint Extern 1 (_ =/= _) => (symmetry; trivial; fail).",
            "VernacHints",
            "dd33622f7f236e08d0ac10796af3db3b0c901c63"
        ],
        [
            "Lemma equiv_reflexive' : forall (A : Type) `{EqDec A} (x : A), x === x.",
            "VernacStartTheoremProof",
            "d6d218a67f6958910b2b12876e2c93a9e42d1af4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply equiv_reflexive.",
            "VernacExtend",
            "ce038e5b35144f3bf838222f97a7edd70e8a7c21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equiv_symmetric' : forall (A : Type) `{EqDec A} (x y : A), x === y -> y === x.",
            "VernacStartTheoremProof",
            "53be0914f6d72a788df830446e00ae3f01098544"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply equiv_symmetric; assumption.",
            "VernacExtend",
            "8bc0e4627e71eed9dd8659748e8e8f7332bb92c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equiv_transitive' : forall (A : Type) `{EqDec A} (x y z : A), x === y -> y === z -> x === z.",
            "VernacStartTheoremProof",
            "64284a14b9f1905ad955eada70f5dcf769fb52e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply @equiv_transitive; eassumption.",
            "VernacExtend",
            "7baa53594e9e922e2b59cb029331d2149e196e62"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equiv_decidable : forall (A : Type) `{EqDec A} (x y : A), decidable (x === y).",
            "VernacStartTheoremProof",
            "ae0705edd1636cfe0a4cec8349fe8da45911501e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold decidable.",
            "VernacExtend",
            "9d605c38a8f12a8a99df27306dcdd2aac64596da"
        ],
        [
            "destruct (x == y); auto.",
            "VernacExtend",
            "78254a5b640430de27544f62b7b1c2bac626c81e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Class EqDec_eq (A : Type) := eq_dec : forall (x y : A), {x = y} + {x <> y}.",
            "VernacInductive",
            "bc41843855935f25bad61ad2e52a8fcc50a549b2"
        ],
        [
            "Instance EqDec_eq_of_EqDec (A : Type) `(@EqDec A eq eq_equivalence) : EqDec_eq A.",
            "VernacInstance",
            "0c1a3eea88e8cf7892d6fee80acb83fe0f41eee3"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem eq_dec_refl {A : Type} `{EqDec_eq A} (x : A) : eq_dec x x = left eq_refl.",
            "VernacStartTheoremProof",
            "722daf9fceef99f08e71bde34cba20499cfe888f"
        ],
        [
            "destruct (eq_dec x x); [|contradiction].",
            "VernacExtend",
            "51e80ff92967f60eab0f29961f621b054f0461e0"
        ],
        [
            "f_equal; apply (Eqdep_dec.UIP_dec eq_dec).",
            "VernacExtend",
            "16cc59fd74350b684ed91295b29813408272c48b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation \" x == y \" := (eq_dec x y) (at level 70) : coqeqdec_scope.",
            "VernacNotation",
            "dee4458e933159af1114b144ba625d9ceca40ee7"
        ],
        [
            "Open Scope coqeqdec_scope.",
            "VernacOpenCloseScope",
            "1d79eb7c426bd742323e198ba1c0993ab2f9d781"
        ]
    ],
    "proofs": [
        {
            "name": "equiv_reflexive'",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply equiv_reflexive.",
                        "VernacExtend",
                        "ce038e5b35144f3bf838222f97a7edd70e8a7c21"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equiv_symmetric'",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply equiv_symmetric; assumption.",
                        "VernacExtend",
                        "8bc0e4627e71eed9dd8659748e8e8f7332bb92c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equiv_transitive'",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply @equiv_transitive; eassumption.",
                        "VernacExtend",
                        "7baa53594e9e922e2b59cb029331d2149e196e62"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equiv_decidable",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold decidable.",
                        "VernacExtend",
                        "9d605c38a8f12a8a99df27306dcdd2aac64596da"
                    ]
                },
                {
                    "command": [
                        "destruct (x == y); auto.",
                        "VernacExtend",
                        "78254a5b640430de27544f62b7b1c2bac626c81e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "EqDec_eq_of_EqDec",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eq_dec_refl",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "destruct (eq_dec x x); [|contradiction].",
                        "VernacExtend",
                        "51e80ff92967f60eab0f29961f621b054f0461e0"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply (Eqdep_dec.UIP_dec eq_dec).",
                        "VernacExtend",
                        "16cc59fd74350b684ed91295b29813408272c48b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}