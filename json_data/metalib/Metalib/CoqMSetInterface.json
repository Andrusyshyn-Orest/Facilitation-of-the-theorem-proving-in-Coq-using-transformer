{
    "filename": "Metalib/CoqMSetInterface.v",
    "coq_project": "metalib",
    "vernac_cmds": [
        [
            "Require Export Bool SetoidList RelationClasses Morphisms RelationPairs Equalities Orders OrdersFacts.",
            "VernacRequire",
            "bd16415e4a0ca9142db00db20f65f8cfdbaf8db0"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Module Type TypElt.",
            "VernacDeclareModuleType",
            "0c10ce8a7b7dd61fd247655ad0bf8272260582ed"
        ],
        [
            "Parameters t elt : Type.",
            "VernacAssumption",
            "381d8b85e6f1eae67db5f3062ef23cc0eede50a9"
        ],
        [
            "End TypElt.",
            "VernacEndSegment",
            "797ac4aee8874968cab4785dfa8a131b18d4a81b"
        ],
        [
            "Module Type HasWOps (Import T:TypElt).",
            "VernacDeclareModuleType",
            "60db7f05841b2b198b1949f4876886823492d136"
        ],
        [
            "Parameter empty : t.",
            "VernacAssumption",
            "f30bb867d749b7a536f13a63f5ff85a7fe3b4e6f"
        ],
        [
            "Parameter is_empty : t -> bool.",
            "VernacAssumption",
            "09ff5525dd8156116664742885ef6b181949bd08"
        ],
        [
            "Parameter mem : T.elt -> t -> bool.",
            "VernacAssumption",
            "f562c256cfe6953a78c170db8a415090c8b5391c"
        ],
        [
            "Parameter add : T.elt -> t -> t.",
            "VernacAssumption",
            "8e17d8af173c2c9ba23bc6729ae2224eea1f02a4"
        ],
        [
            "Parameter singleton : T.elt -> t.",
            "VernacAssumption",
            "fd4b648f955ea4219e5bdeb02980d15244d56912"
        ],
        [
            "Parameter remove : T.elt -> t -> t.",
            "VernacAssumption",
            "719148d875ff0e0ba9d64b815d040b750fb3f54d"
        ],
        [
            "Parameter union : t -> t -> t.",
            "VernacAssumption",
            "fab02dd0beac52091405421ce902b4f70b8ec12a"
        ],
        [
            "Parameter inter : t -> t -> t.",
            "VernacAssumption",
            "04d1cd4199de2bf25e17a30dbcb0c6a6a2fcc7eb"
        ],
        [
            "Parameter diff : t -> t -> t.",
            "VernacAssumption",
            "28879221748c7cd68853275679324075e0783fc7"
        ],
        [
            "Parameter equal : t -> t -> bool.",
            "VernacAssumption",
            "9d69242288701ee66577b2279e625147464f4958"
        ],
        [
            "Parameter subset : t -> t -> bool.",
            "VernacAssumption",
            "3bb5c4066b846c33e2c806bbcec03e536b884ba7"
        ],
        [
            "Parameter fold : forall A : Type, (T.elt -> A -> A) -> t -> A -> A.",
            "VernacAssumption",
            "955d9e408e5d4bf65cc4cabd5c7ea0742a573e83"
        ],
        [
            "Parameter for_all : (T.elt -> bool) -> t -> bool.",
            "VernacAssumption",
            "0a21dd0367fa40cad248578f39516d293a8fe134"
        ],
        [
            "Parameter exists_ : (T.elt -> bool) -> t -> bool.",
            "VernacAssumption",
            "9d6c25f148cb0cb02e0a1b140f7597036081cb0d"
        ],
        [
            "Parameter filter : (T.elt -> bool) -> t -> t.",
            "VernacAssumption",
            "b25da9585209a04405942bcecf17cd3d943cd314"
        ],
        [
            "Parameter partition : (T.elt -> bool) -> t -> t * t.",
            "VernacAssumption",
            "a453977fb3c28b21a8042ae8ac37e7e35ca16130"
        ],
        [
            "Parameter cardinal : t -> nat.",
            "VernacAssumption",
            "a9d0498a7feeb2089ba4cb7a7b4fc93701b46fe5"
        ],
        [
            "Parameter elements : t -> list T.elt.",
            "VernacAssumption",
            "0737f8f29319d3248ab9e0e60304edacab3be4c1"
        ],
        [
            "Parameter choose : t -> option T.elt.",
            "VernacAssumption",
            "3d459652ba01d4d6d945f0339ecddd48bb0e0328"
        ],
        [
            "End HasWOps.",
            "VernacEndSegment",
            "0ed29da3264fef77e2b824808bf880b669e28aab"
        ],
        [
            "Module Type WOps (E : DecidableType).",
            "VernacDeclareModuleType",
            "0fd591378cf8b5dc316982ad856fbc2ea97b677c"
        ],
        [
            "Definition elt := E.t.",
            "VernacDefinition",
            "c01573ae079b75bbdc31b7d5baf6207a2114f9d3"
        ],
        [
            "Parameter t : Type.",
            "VernacAssumption",
            "504795567cd4c81b969bd65cb901c9b8a73ae96f"
        ],
        [
            "Include HasWOps.",
            "VernacInclude",
            "07b68fecebc0149141737d25dd9c2876400c26cc"
        ],
        [
            "End WOps.",
            "VernacEndSegment",
            "88f7f919f28a863cb8986fa7e47173ade1015458"
        ],
        [
            "Module Type WSetsOn (E : DecidableType).",
            "VernacDeclareModuleType",
            "066470dc1db23eb1d211ef5dac50944cb57e4850"
        ],
        [
            "Include WOps E.",
            "VernacInclude",
            "cf8629e1f0fe4a5670778d344f8388643a4e33be"
        ],
        [
            "Parameter In : elt -> t -> Prop.",
            "VernacAssumption",
            "1d719f1ee592c7ab506e2bdc8287f4ee0e22a525"
        ],
        [
            "Declare Instance In_compat : Proper (E.eq==>eq==>iff) In.",
            "VernacInstance",
            "7fb82048287d477a41ba9f8496dae11bbe8966c6"
        ],
        [
            "Definition Equal s s' := forall a : elt, In a s <-> In a s'.",
            "VernacDefinition",
            "cd5f6ee7097e7157ccbc10af82ffd932eaf3c423"
        ],
        [
            "Definition Subset s s' := forall a : elt, In a s -> In a s'.",
            "VernacDefinition",
            "106ca6bd7b6e4a40ea51abcc05e3c9af2fc2bee5"
        ],
        [
            "Definition Empty s := forall a : elt, ~ In a s.",
            "VernacDefinition",
            "99dffcced2023a4cba92e934e92ab887beb9ff43"
        ],
        [
            "Definition For_all (P : elt -> Prop) s := forall x, In x s -> P x.",
            "VernacDefinition",
            "4d362106a16edcc40d0eef5faef1552c0586f113"
        ],
        [
            "Definition Exists (P : elt -> Prop) s := exists x, In x s /\\ P x.",
            "VernacDefinition",
            "7a3d224adfc848e82fb49eb1cbd9c21d19ce40b7"
        ],
        [
            "Notation \"s [=] t\" := (Equal s t) (at level 70, no associativity).",
            "VernacNotation",
            "fe66fdd33169c40e8504d8b0396ee6bbcf562ffb"
        ],
        [
            "Notation \"s [<=] t\" := (Subset s t) (at level 70, no associativity).",
            "VernacNotation",
            "df6f612f5c442c2352c139c6de7d9a65c3b0ff36"
        ],
        [
            "Definition eq : t -> t -> Prop := Equal.",
            "VernacDefinition",
            "68d22f2a7286673418a61cb433a351317a508a0e"
        ],
        [
            "Include IsEq.",
            "VernacInclude",
            "52f9160e96bc0dbe9a79e2bb7641a70e924daf31"
        ],
        [
            "Include HasEqDec.",
            "VernacInclude",
            "9ec0677cc4a5e14fef75da95a6d8b7b441e6d47e"
        ],
        [
            "Section Spec.",
            "VernacBeginSection",
            "7149befcee62ca51a0db409eab4bd8ffcf7b52fc"
        ],
        [
            "Variable s s': t.",
            "VernacAssumption",
            "35bc5d98dcdbe83753f467727dc866c24c6874c3"
        ],
        [
            "Variable x y : elt.",
            "VernacAssumption",
            "06d759bbdac2711f4a0194d3ba8a408974451a05"
        ],
        [
            "Variable f : elt -> bool.",
            "VernacAssumption",
            "a48ae31a3296cbc2160b688ff26a82045b6cd84c"
        ],
        [
            "Notation compatb := (Proper (E.eq==>Logic.eq)) (only parsing).",
            "VernacSyntacticDefinition",
            "e9d5c3cc2dce2d654b5513ab65e357d0c7986679"
        ],
        [
            "Parameter mem_spec : mem x s = true <-> In x s.",
            "VernacAssumption",
            "3b553fd48135fbf9ce8e2c94b5573326bd9e515c"
        ],
        [
            "Parameter equal_spec : equal s s' = true <-> s[=]s'.",
            "VernacAssumption",
            "f378d327f9c716e0d5b1234c232bc27223627f1d"
        ],
        [
            "Parameter subset_spec : subset s s' = true <-> s[<=]s'.",
            "VernacAssumption",
            "525a5dc30866201ef2c5bddbd33a8e2e8ab2f8b5"
        ],
        [
            "Parameter empty_spec : Empty empty.",
            "VernacAssumption",
            "f74d58e25250967ac2cd9fa813c72de8bfcce396"
        ],
        [
            "Parameter is_empty_spec : is_empty s = true <-> Empty s.",
            "VernacAssumption",
            "88b532f5eed3622cd95b9c2941d96379cbd6b774"
        ],
        [
            "Parameter add_spec : In y (add x s) <-> E.eq y x \\/ In y s.",
            "VernacAssumption",
            "6df42b5c34e26b99a765a68444932822e4d09524"
        ],
        [
            "Parameter remove_spec : In y (remove x s) <-> In y s /\\ ~E.eq y x.",
            "VernacAssumption",
            "7e2ffd2ebb67f471ea244230491c65d3864172fe"
        ],
        [
            "Parameter singleton_spec : In y (singleton x) <-> E.eq y x.",
            "VernacAssumption",
            "98c46275b774bb84410a19520bfe3baaceef5ce4"
        ],
        [
            "Parameter union_spec : In x (union s s') <-> In x s \\/ In x s'.",
            "VernacAssumption",
            "f2b20839aa22a6d861d8b7c1622a935205c1a94f"
        ],
        [
            "Parameter inter_spec : In x (inter s s') <-> In x s /\\ In x s'.",
            "VernacAssumption",
            "dd5ba7b3e556eabb7a5e87fbf5a870a34d24cf60"
        ],
        [
            "Parameter diff_spec : In x (diff s s') <-> In x s /\\ ~In x s'.",
            "VernacAssumption",
            "be1f2a8ae4a3e0a1c063e9546b503b48ef26bf20"
        ],
        [
            "Parameter fold_spec : forall (A : Type) (i : A) (f : elt -> A -> A), fold f s i = fold_left (flip f) (elements s) i.",
            "VernacAssumption",
            "f6e91cddb203bf54c8403b104c96fd305d3e56c0"
        ],
        [
            "Parameter cardinal_spec : cardinal s = length (elements s).",
            "VernacAssumption",
            "fe3474dd260e0b2a74d3c01ccfd83f8f436946c6"
        ],
        [
            "Parameter filter_spec : compatb f -> (In x (filter f s) <-> In x s /\\ f x = true).",
            "VernacAssumption",
            "001e9c541f01322aece5db86dc4445e444c6842c"
        ],
        [
            "Parameter for_all_spec : compatb f -> (for_all f s = true <-> For_all (fun x => f x = true) s).",
            "VernacAssumption",
            "2a010d99c56064b59ad5a4a2e14f036fc9e930c7"
        ],
        [
            "Parameter exists_spec : compatb f -> (exists_ f s = true <-> Exists (fun x => f x = true) s).",
            "VernacAssumption",
            "1d8ebf33ccb2f54b9f1acaa104526065747b5c38"
        ],
        [
            "Parameter partition_spec1 : compatb f -> fst (partition f s) [=] filter f s.",
            "VernacAssumption",
            "dea5c43c0d5c4f58bae15bb2bc29968703de238e"
        ],
        [
            "Parameter partition_spec2 : compatb f -> snd (partition f s) [=] filter (fun x => negb (f x)) s.",
            "VernacAssumption",
            "21e5f8ab99a3667987444ea1507b0e4504630da0"
        ],
        [
            "Parameter elements_spec1 : InA E.eq x (elements s) <-> In x s.",
            "VernacAssumption",
            "27883c1b6083cd3cb75d3dda1c62e7161de268a0"
        ],
        [
            "Parameter elements_spec2w : NoDupA E.eq (elements s).",
            "VernacAssumption",
            "f841fe84ee74841b14dad2ed38b91784f177af75"
        ],
        [
            "Parameter choose_spec1 : choose s = Some x -> In x s.",
            "VernacAssumption",
            "002375377f26a48a8da31b13d0acd02e1bfcea6c"
        ],
        [
            "Parameter choose_spec2 : choose s = None -> Empty s.",
            "VernacAssumption",
            "2ee7c362fb00c5935955c204fd07af6e4e1e3739"
        ],
        [
            "End Spec.",
            "VernacEndSegment",
            "5ee638cb91032793de2974877933ead96cae3b7c"
        ],
        [
            "End WSetsOn.",
            "VernacEndSegment",
            "ebbf046ecbc0939e04ea48cdc3353b426b1a3485"
        ],
        [
            "Module Type WSets.",
            "VernacDeclareModuleType",
            "48623e671fecdef8ee57292a4e62b3d0c285036e"
        ],
        [
            "Declare Module E : DecidableType.",
            "VernacDeclareModule",
            "8534b3930d405df41331e1f3711dea3f7c488aee"
        ],
        [
            "Include WSetsOn E.",
            "VernacInclude",
            "e80a5571ae5d70bf2f6d04c26b3312706bd29380"
        ],
        [
            "End WSets.",
            "VernacEndSegment",
            "2bf074e90820d12d81e37497dca80126226abdc0"
        ],
        [
            "Module Type HasOrdOps (Import T:TypElt).",
            "VernacDeclareModuleType",
            "e1ebfd245da83bf3e9c13a1feba83749d4090f8c"
        ],
        [
            "Parameter compare : t -> t -> comparison.",
            "VernacAssumption",
            "0893dd440e47f739e365f8370d94944dd656f3dd"
        ],
        [
            "Parameter min_elt : t -> option elt.",
            "VernacAssumption",
            "c6951ad5c7f04c0d11a7cccec66f9fd76369800b"
        ],
        [
            "Parameter max_elt : t -> option elt.",
            "VernacAssumption",
            "be0eb50628b9875a8d5ddcbcf974c2700f8b661b"
        ],
        [
            "End HasOrdOps.",
            "VernacEndSegment",
            "53ca0216db0cd27380c93b2ba630d0f5312ef5a6"
        ],
        [
            "Module Type Ops (E : OrderedType) := WOps E <+ HasOrdOps.",
            "VernacDeclareModuleType",
            "d5a92afd1ea98806f2ac711aec723325b5772e38"
        ],
        [
            "Module Type SetsOn (E : OrderedType).",
            "VernacDeclareModuleType",
            "9f45656ad5882bbb11df96819f6b768ced05a92d"
        ],
        [
            "Include WSetsOn E <+ HasOrdOps <+ HasLt <+ IsStrOrder.",
            "VernacInclude",
            "634209c17b7d29ab252bd1e4e420e6640744069e"
        ],
        [
            "Section Spec.",
            "VernacBeginSection",
            "7149befcee62ca51a0db409eab4bd8ffcf7b52fc"
        ],
        [
            "Variable s s': t.",
            "VernacAssumption",
            "35bc5d98dcdbe83753f467727dc866c24c6874c3"
        ],
        [
            "Variable x y : elt.",
            "VernacAssumption",
            "06d759bbdac2711f4a0194d3ba8a408974451a05"
        ],
        [
            "Parameter compare_spec : CompSpec eq lt s s' (compare s s').",
            "VernacAssumption",
            "03e568ce54476e7c7804a7cdbc4b3f6b72929839"
        ],
        [
            "Parameter elements_spec2 : sort E.lt (elements s).",
            "VernacAssumption",
            "468dae572a9808cd84a041f4b49d3d7c71011570"
        ],
        [
            "Parameter min_elt_spec1 : min_elt s = Some x -> In x s.",
            "VernacAssumption",
            "cfbc65ec9e485ea6630e8a4997977f4a9d23b761"
        ],
        [
            "Parameter min_elt_spec2 : min_elt s = Some x -> In y s -> ~ E.lt y x.",
            "VernacAssumption",
            "5fbe5e52404e4223197ae3c3e46151f7ff9f3d07"
        ],
        [
            "Parameter min_elt_spec3 : min_elt s = None -> Empty s.",
            "VernacAssumption",
            "86988bcdd0efaeb3d1f78c56412c9ee63d127f5b"
        ],
        [
            "Parameter max_elt_spec1 : max_elt s = Some x -> In x s.",
            "VernacAssumption",
            "4e8ce7c0ecd83b853b195d9790a98211a294e95d"
        ],
        [
            "Parameter max_elt_spec2 : max_elt s = Some x -> In y s -> ~ E.lt x y.",
            "VernacAssumption",
            "332d4b8dc14a9305cf2a1ff25071aea5c106a369"
        ],
        [
            "Parameter max_elt_spec3 : max_elt s = None -> Empty s.",
            "VernacAssumption",
            "77cb35ae4f075a3831bd7ed85932d95b60a2aa93"
        ],
        [
            "Parameter choose_spec3 : choose s = Some x -> choose s' = Some y -> Equal s s' -> E.eq x y.",
            "VernacAssumption",
            "350a401edbd4437804adab9dee8602e7e556384a"
        ],
        [
            "End Spec.",
            "VernacEndSegment",
            "5ee638cb91032793de2974877933ead96cae3b7c"
        ],
        [
            "End SetsOn.",
            "VernacEndSegment",
            "1dff098f39d3db7163b9372264de3d9924ab51d3"
        ],
        [
            "Module Type Sets.",
            "VernacDeclareModuleType",
            "6851eaf65f3e4d9211a74403b7f963435f3ef734"
        ],
        [
            "Declare Module E : OrderedType.",
            "VernacDeclareModule",
            "190c59748ff4921068df7bb3eac3a073089110c7"
        ],
        [
            "Include SetsOn E.",
            "VernacInclude",
            "6a5e31173f8a9df6625b60aff4522334b4111221"
        ],
        [
            "End Sets.",
            "VernacEndSegment",
            "21c76f687ed76b8c7e912ca302e796904b619f7c"
        ],
        [
            "Module Type S := Sets.",
            "VernacDeclareModuleType",
            "400934db7602a184b1a9e9acefbfb65eb306739f"
        ],
        [
            "Module Type WRawSets (E : DecidableType).",
            "VernacDeclareModuleType",
            "3bab735d6947fc341fbdfde34a55fe1aaadf8f59"
        ],
        [
            "Include WOps E.",
            "VernacInclude",
            "cf8629e1f0fe4a5670778d344f8388643a4e33be"
        ],
        [
            "Parameter IsOk : t -> Prop.",
            "VernacAssumption",
            "e4e70dadac686b19ce5f9688c23c8f8ce2af1344"
        ],
        [
            "Class Ok (s:t) : Prop := ok : IsOk s.",
            "VernacInductive",
            "83f93622cda5dbcea05f9d512c4c638d038a12d4"
        ],
        [
            "Parameter isok : t -> bool.",
            "VernacAssumption",
            "40c7bb4bf70735bbe99f4ef28d51d0595d7cc750"
        ],
        [
            "Declare Instance isok_Ok s `(isok s = true) : Ok s | 10.",
            "VernacInstance",
            "0873e9c30213d0038515d3b1e358aa20900e2e94"
        ],
        [
            "Parameter In : elt -> t -> Prop.",
            "VernacAssumption",
            "1d719f1ee592c7ab506e2bdc8287f4ee0e22a525"
        ],
        [
            "Declare Instance In_compat : Proper (E.eq==>eq==>iff) In.",
            "VernacInstance",
            "7fb82048287d477a41ba9f8496dae11bbe8966c6"
        ],
        [
            "Definition Equal s s' := forall a : elt, In a s <-> In a s'.",
            "VernacDefinition",
            "cd5f6ee7097e7157ccbc10af82ffd932eaf3c423"
        ],
        [
            "Definition Subset s s' := forall a : elt, In a s -> In a s'.",
            "VernacDefinition",
            "106ca6bd7b6e4a40ea51abcc05e3c9af2fc2bee5"
        ],
        [
            "Definition Empty s := forall a : elt, ~ In a s.",
            "VernacDefinition",
            "99dffcced2023a4cba92e934e92ab887beb9ff43"
        ],
        [
            "Definition For_all (P : elt -> Prop) s := forall x, In x s -> P x.",
            "VernacDefinition",
            "4d362106a16edcc40d0eef5faef1552c0586f113"
        ],
        [
            "Definition Exists (P : elt -> Prop) s := exists x, In x s /\\ P x.",
            "VernacDefinition",
            "7a3d224adfc848e82fb49eb1cbd9c21d19ce40b7"
        ],
        [
            "Notation \"s [=] t\" := (Equal s t) (at level 70, no associativity).",
            "VernacNotation",
            "fe66fdd33169c40e8504d8b0396ee6bbcf562ffb"
        ],
        [
            "Notation \"s [<=] t\" := (Subset s t) (at level 70, no associativity).",
            "VernacNotation",
            "df6f612f5c442c2352c139c6de7d9a65c3b0ff36"
        ],
        [
            "Definition eq : t -> t -> Prop := Equal.",
            "VernacDefinition",
            "68d22f2a7286673418a61cb433a351317a508a0e"
        ],
        [
            "Declare Instance eq_equiv : Equivalence eq.",
            "VernacInstance",
            "e875a6f9536a63b81ed14df0a2be570de4344249"
        ],
        [
            "Declare Instance empty_ok : Ok empty.",
            "VernacInstance",
            "e1bd994dd1848d0f7d0f9f05d434767cb794f4d9"
        ],
        [
            "Declare Instance add_ok s x `(Ok s) : Ok (add x s).",
            "VernacInstance",
            "8b504c15ecea9a35bf7ee354b547e0ee10026e07"
        ],
        [
            "Declare Instance remove_ok s x `(Ok s) : Ok (remove x s).",
            "VernacInstance",
            "10f786b0f4b6c96f74f29c643ec18adc4d1d0e09"
        ],
        [
            "Declare Instance singleton_ok x : Ok (singleton x).",
            "VernacInstance",
            "ce789c2185b7a0398d115924c63e609aff106190"
        ],
        [
            "Declare Instance union_ok s s' `(Ok s, Ok s') : Ok (union s s').",
            "VernacInstance",
            "b447b29727a9553888fed173a1007275739fea9f"
        ],
        [
            "Declare Instance inter_ok s s' `(Ok s, Ok s') : Ok (inter s s').",
            "VernacInstance",
            "140b88e3ec8e4329ab1a4bbc75cf38ad0b385b5e"
        ],
        [
            "Declare Instance diff_ok s s' `(Ok s, Ok s') : Ok (diff s s').",
            "VernacInstance",
            "1113ee950c98f7fa9d35eeb5393172364974fabd"
        ],
        [
            "Declare Instance filter_ok s f `(Ok s) : Ok (filter f s).",
            "VernacInstance",
            "09be1c9c207d320d23f864f210853975390a3bfe"
        ],
        [
            "Declare Instance partition_ok1 s f `(Ok s) : Ok (fst (partition f s)).",
            "VernacInstance",
            "8c23a2fc79e7b473fa933f79e634c8faf71c853c"
        ],
        [
            "Declare Instance partition_ok2 s f `(Ok s) : Ok (snd (partition f s)).",
            "VernacInstance",
            "969b556846b916fe3f0cc5304a32ae4428357c38"
        ],
        [
            "Section Spec.",
            "VernacBeginSection",
            "7149befcee62ca51a0db409eab4bd8ffcf7b52fc"
        ],
        [
            "Variable s s': t.",
            "VernacAssumption",
            "35bc5d98dcdbe83753f467727dc866c24c6874c3"
        ],
        [
            "Variable x y : elt.",
            "VernacAssumption",
            "06d759bbdac2711f4a0194d3ba8a408974451a05"
        ],
        [
            "Variable f : elt -> bool.",
            "VernacAssumption",
            "a48ae31a3296cbc2160b688ff26a82045b6cd84c"
        ],
        [
            "Notation compatb := (Proper (E.eq==>Logic.eq)) (only parsing).",
            "VernacSyntacticDefinition",
            "e9d5c3cc2dce2d654b5513ab65e357d0c7986679"
        ],
        [
            "Parameter mem_spec : forall `{Ok s}, mem x s = true <-> In x s.",
            "VernacAssumption",
            "635ca22b429e9181ac0dea88fc69273cf2f12486"
        ],
        [
            "Parameter equal_spec : forall `{Ok s, Ok s'}, equal s s' = true <-> s[=]s'.",
            "VernacAssumption",
            "e7a785edccb75c6189cfb98e21e9a017847c44c2"
        ],
        [
            "Parameter subset_spec : forall `{Ok s, Ok s'}, subset s s' = true <-> s[<=]s'.",
            "VernacAssumption",
            "b5d5cf44a3a049949b3efa25571d436664b3d31f"
        ],
        [
            "Parameter empty_spec : Empty empty.",
            "VernacAssumption",
            "f74d58e25250967ac2cd9fa813c72de8bfcce396"
        ],
        [
            "Parameter is_empty_spec : is_empty s = true <-> Empty s.",
            "VernacAssumption",
            "88b532f5eed3622cd95b9c2941d96379cbd6b774"
        ],
        [
            "Parameter add_spec : forall `{Ok s}, In y (add x s) <-> E.eq y x \\/ In y s.",
            "VernacAssumption",
            "60475bc292a89b9b0703ce14317d442fcd1379af"
        ],
        [
            "Parameter remove_spec : forall `{Ok s}, In y (remove x s) <-> In y s /\\ ~E.eq y x.",
            "VernacAssumption",
            "02e49f5d41422e0fd4de6002ba4c36989d458640"
        ],
        [
            "Parameter singleton_spec : In y (singleton x) <-> E.eq y x.",
            "VernacAssumption",
            "98c46275b774bb84410a19520bfe3baaceef5ce4"
        ],
        [
            "Parameter union_spec : forall `{Ok s, Ok s'}, In x (union s s') <-> In x s \\/ In x s'.",
            "VernacAssumption",
            "601a3662eee9003aab64091a695a7ebc2472ee7a"
        ],
        [
            "Parameter inter_spec : forall `{Ok s, Ok s'}, In x (inter s s') <-> In x s /\\ In x s'.",
            "VernacAssumption",
            "0fd7c48b78eebc9788f2ad6deaf4ba1ee9109600"
        ],
        [
            "Parameter diff_spec : forall `{Ok s, Ok s'}, In x (diff s s') <-> In x s /\\ ~In x s'.",
            "VernacAssumption",
            "d0e8c7f43a85d8db9812f3f887e18046444304b8"
        ],
        [
            "Parameter fold_spec : forall (A : Type) (i : A) (f : elt -> A -> A), fold f s i = fold_left (flip f) (elements s) i.",
            "VernacAssumption",
            "f6e91cddb203bf54c8403b104c96fd305d3e56c0"
        ],
        [
            "Parameter cardinal_spec : forall `{Ok s}, cardinal s = length (elements s).",
            "VernacAssumption",
            "cd187cc931768e1cca20214efc4cf45be568a9b0"
        ],
        [
            "Parameter filter_spec : compatb f -> (In x (filter f s) <-> In x s /\\ f x = true).",
            "VernacAssumption",
            "001e9c541f01322aece5db86dc4445e444c6842c"
        ],
        [
            "Parameter for_all_spec : compatb f -> (for_all f s = true <-> For_all (fun x => f x = true) s).",
            "VernacAssumption",
            "2a010d99c56064b59ad5a4a2e14f036fc9e930c7"
        ],
        [
            "Parameter exists_spec : compatb f -> (exists_ f s = true <-> Exists (fun x => f x = true) s).",
            "VernacAssumption",
            "1d8ebf33ccb2f54b9f1acaa104526065747b5c38"
        ],
        [
            "Parameter partition_spec1 : compatb f -> fst (partition f s) [=] filter f s.",
            "VernacAssumption",
            "dea5c43c0d5c4f58bae15bb2bc29968703de238e"
        ],
        [
            "Parameter partition_spec2 : compatb f -> snd (partition f s) [=] filter (fun x => negb (f x)) s.",
            "VernacAssumption",
            "21e5f8ab99a3667987444ea1507b0e4504630da0"
        ],
        [
            "Parameter elements_spec1 : InA E.eq x (elements s) <-> In x s.",
            "VernacAssumption",
            "27883c1b6083cd3cb75d3dda1c62e7161de268a0"
        ],
        [
            "Parameter elements_spec2w : forall `{Ok s}, NoDupA E.eq (elements s).",
            "VernacAssumption",
            "f84a1fc714b71a01bed56deb347a0bfd25305217"
        ],
        [
            "Parameter choose_spec1 : choose s = Some x -> In x s.",
            "VernacAssumption",
            "002375377f26a48a8da31b13d0acd02e1bfcea6c"
        ],
        [
            "Parameter choose_spec2 : choose s = None -> Empty s.",
            "VernacAssumption",
            "2ee7c362fb00c5935955c204fd07af6e4e1e3739"
        ],
        [
            "End Spec.",
            "VernacEndSegment",
            "5ee638cb91032793de2974877933ead96cae3b7c"
        ],
        [
            "End WRawSets.",
            "VernacEndSegment",
            "105810af1568d6fe5e16d445d6b2c69329876108"
        ],
        [
            "Module WRaw2SetsOn (E:DecidableType)(M:WRawSets E) <: WSetsOn E.",
            "VernacDefineModule",
            "a3372257aa2f92e9ff982ef94730d1fc4bfc943b"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Definition elt := E.t.",
            "VernacDefinition",
            "c01573ae079b75bbdc31b7d5baf6207a2114f9d3"
        ],
        [
            "Record t_ := Mkt {this :> M.t; is_ok : M.Ok this}.",
            "VernacInductive",
            "f9411999b8fda372471b9d9732f3b386b9fc8ec9"
        ],
        [
            "Definition t := t_.",
            "VernacDefinition",
            "1c79cf2d36d208dd52ebb7bc0005c47ebcfad741"
        ],
        [
            "Arguments Mkt this {is_ok}.",
            "VernacArguments",
            "30f76ce4ea689971ca9fa9922e29e9c6378df5ab"
        ],
        [
            "Hint Resolve is_ok : typeclass_instances.",
            "VernacHints",
            "061d91dc9bfff11af550afb4684793d151945a31"
        ],
        [
            "Definition In (x : elt)(s : t) := M.In x s.(this).",
            "VernacDefinition",
            "2cf99eac2a3d9b1795aef38cc7a9a363f869a541"
        ],
        [
            "Definition Equal (s s' : t) := forall a : elt, In a s <-> In a s'.",
            "VernacDefinition",
            "175078a81d0b9b607f0afa080340ce5ce9ee13e7"
        ],
        [
            "Definition Subset (s s' : t) := forall a : elt, In a s -> In a s'.",
            "VernacDefinition",
            "629352e47e3767e94da96a922d467555dddbb9ac"
        ],
        [
            "Definition Empty (s : t) := forall a : elt, ~ In a s.",
            "VernacDefinition",
            "b657bbb89f1160ccff9687492df2258335fde7dc"
        ],
        [
            "Definition For_all (P : elt -> Prop)(s : t) := forall x, In x s -> P x.",
            "VernacDefinition",
            "242a60177638695a1f568b8aed4a0d301edaf377"
        ],
        [
            "Definition Exists (P : elt -> Prop)(s : t) := exists x, In x s /\\ P x.",
            "VernacDefinition",
            "73c1983dbd85d9c47e49f862c15d2ca58ba287c7"
        ],
        [
            "Definition mem (x : elt)(s : t) := M.mem x s.",
            "VernacDefinition",
            "484a0d9a6b100a11bd639eff88da60fadad9cfd8"
        ],
        [
            "Definition add (x : elt)(s : t) : t := Mkt (M.add x s).",
            "VernacDefinition",
            "d4f1fd27cc48535e52e8b81dae2a84f1c2200cc5"
        ],
        [
            "Definition remove (x : elt)(s : t) : t := Mkt (M.remove x s).",
            "VernacDefinition",
            "6b4758265c991bfe7867b02d47ad4a0235f40dcc"
        ],
        [
            "Definition singleton (x : elt) : t := Mkt (M.singleton x).",
            "VernacDefinition",
            "79dbb375cc967012a201e6e4a4d884f52d7d8323"
        ],
        [
            "Definition union (s s' : t) : t := Mkt (M.union s s').",
            "VernacDefinition",
            "30a8485e8387a546952417f881fc288f8afcbffb"
        ],
        [
            "Definition inter (s s' : t) : t := Mkt (M.inter s s').",
            "VernacDefinition",
            "e8430797465af170ff19b157cb3cb7773d4b493f"
        ],
        [
            "Definition diff (s s' : t) : t := Mkt (M.diff s s').",
            "VernacDefinition",
            "7c11aa97f1dfeb8e772ba91b3648c66ed1d5b20c"
        ],
        [
            "Definition equal (s s' : t) := M.equal s s'.",
            "VernacDefinition",
            "03afbfdb207ba5f665f7d6bf4ed9b4b548bf8ccd"
        ],
        [
            "Definition subset (s s' : t) := M.subset s s'.",
            "VernacDefinition",
            "30f3f44312d9250aca9c27cfc0e2829898bec408"
        ],
        [
            "Definition empty : t := Mkt M.empty.",
            "VernacDefinition",
            "9ed253baacab9d1c7ba15e070226fef09ae423b4"
        ],
        [
            "Definition is_empty (s : t) := M.is_empty s.",
            "VernacDefinition",
            "8241f969e7f1738298fad68e172e6e36d90562aa"
        ],
        [
            "Definition elements (s : t) : list elt := M.elements s.",
            "VernacDefinition",
            "abb7cd8d2dcda36e2a0319f6af92970fa17a301b"
        ],
        [
            "Definition choose (s : t) : option elt := M.choose s.",
            "VernacDefinition",
            "074e67ed6b7050862521ef3f4075b408257e4442"
        ],
        [
            "Definition fold (A : Type)(f : elt -> A -> A)(s : t) : A -> A := M.fold f s.",
            "VernacDefinition",
            "b569ded7a4df4becb70738f27ea3477b2fc83596"
        ],
        [
            "Definition cardinal (s : t) := M.cardinal s.",
            "VernacDefinition",
            "7abe2b480eeba866649dd3b10a9530100f79af66"
        ],
        [
            "Definition filter (f : elt -> bool)(s : t) : t := Mkt (M.filter f s).",
            "VernacDefinition",
            "39180f815d816e2cd744129227250b6ab66a6d20"
        ],
        [
            "Definition for_all (f : elt -> bool)(s : t) := M.for_all f s.",
            "VernacDefinition",
            "523b7235a3ad7ab1d84fefc3b453c2a56a942285"
        ],
        [
            "Definition exists_ (f : elt -> bool)(s : t) := M.exists_ f s.",
            "VernacDefinition",
            "0eec3a43c900d1021162fe6d4240a9a63ca0b259"
        ],
        [
            "Definition partition (f : elt -> bool)(s : t) : t * t := let p := M.partition f s in (Mkt (fst p), Mkt (snd p)).",
            "VernacDefinition",
            "66c988ba2b377845894bf2f32240fcd8612a4f46"
        ],
        [
            "Instance In_compat : Proper (E.eq==>eq==>iff) In.",
            "VernacInstance",
            "2c2a711c451e481761c982eec83cf34e1ba1947e"
        ],
        [
            "repeat red.",
            "VernacExtend",
            "517f28ca1856880bafd07df42d9497606ec92845"
        ],
        [
            "intros; apply M.In_compat; congruence.",
            "VernacExtend",
            "2c7f34bbea8cc0019ac5e3915a7890f9a6275c78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eq : t -> t -> Prop := Equal.",
            "VernacDefinition",
            "68d22f2a7286673418a61cb433a351317a508a0e"
        ],
        [
            "Instance eq_equiv : Equivalence eq.",
            "VernacInstance",
            "deeaf33dc54ae03b7448861f860d5bb8daaca18c"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eq_dec : forall (s s':t), { eq s s' }+{ ~eq s s' }.",
            "VernacDefinition",
            "52920e21862daaced1404afe64dc10f0b0b80ec9"
        ],
        [
            "intros (s,Hs) (s',Hs').",
            "VernacExtend",
            "c38fee620b5fece9d823d86ecc0308b8918caee1"
        ],
        [
            "change ({M.Equal s s'}+{~M.Equal s s'}).",
            "VernacExtend",
            "bdbc7c08d77ec8d1c2c4bec586f9a729b2508ae8"
        ],
        [
            "destruct (M.equal s s') eqn:H; [left|right]; rewrite <- M.equal_spec; congruence.",
            "VernacExtend",
            "13e29aaef196aa1718787026698041521123f251"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Section Spec.",
            "VernacBeginSection",
            "7149befcee62ca51a0db409eab4bd8ffcf7b52fc"
        ],
        [
            "Variable s s' : t.",
            "VernacAssumption",
            "35bc5d98dcdbe83753f467727dc866c24c6874c3"
        ],
        [
            "Variable x y : elt.",
            "VernacAssumption",
            "06d759bbdac2711f4a0194d3ba8a408974451a05"
        ],
        [
            "Variable f : elt -> bool.",
            "VernacAssumption",
            "a48ae31a3296cbc2160b688ff26a82045b6cd84c"
        ],
        [
            "Notation compatb := (Proper (E.eq==>Logic.eq)) (only parsing).",
            "VernacSyntacticDefinition",
            "e9d5c3cc2dce2d654b5513ab65e357d0c7986679"
        ],
        [
            "Lemma mem_spec : mem x s = true <-> In x s.",
            "VernacStartTheoremProof",
            "e0b35e188eb545f306775158c7b0ee92367d1d29"
        ],
        [
            "exact (@M.mem_spec _ _ _).",
            "VernacExtend",
            "3eae15fad867f29b7d49a4ea141d0e9291d5e451"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_spec : equal s s' = true <-> Equal s s'.",
            "VernacStartTheoremProof",
            "61b148e5ac753727a4c3200b1fcd12331709c2f0"
        ],
        [
            "exact (@M.equal_spec _ _ _ _).",
            "VernacExtend",
            "e718817c37f272ec2ea2234d13950e9081f57e90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_spec : subset s s' = true <-> Subset s s'.",
            "VernacStartTheoremProof",
            "ea1b99667eb99f550024b3588f6a0f6fe99babc3"
        ],
        [
            "exact (@M.subset_spec _ _ _ _).",
            "VernacExtend",
            "7bc18c857a3d9ceda1b4465dc1a6bd8996e6462b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_spec : Empty empty.",
            "VernacStartTheoremProof",
            "ac5b3ce6175ebcbfcc02350712ac2ce9336054ff"
        ],
        [
            "exact M.empty_spec.",
            "VernacExtend",
            "515a10e271619404bd850b1cc6092bf91e07a681"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_spec : is_empty s = true <-> Empty s.",
            "VernacStartTheoremProof",
            "d82028e51d85880d23cdb31c8e4c3c13ec5260e3"
        ],
        [
            "exact (@M.is_empty_spec _).",
            "VernacExtend",
            "c4b388d9ebaf05c42f53441e6f84cc0faffc128b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_spec : In y (add x s) <-> E.eq y x \\/ In y s.",
            "VernacStartTheoremProof",
            "5d415f9b306897ef43460981fc60f2272dc8ea48"
        ],
        [
            "exact (@M.add_spec _ _ _ _).",
            "VernacExtend",
            "472848c3398fdbf7aaf6e9cc50d75afd92ff6102"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_spec : In y (remove x s) <-> In y s /\\ ~E.eq y x.",
            "VernacStartTheoremProof",
            "e33940928b87f5daec300794ac4ce61065238fab"
        ],
        [
            "exact (@M.remove_spec _ _ _ _).",
            "VernacExtend",
            "dd74bb3d71874a901718ab892f66b30994bc2b19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma singleton_spec : In y (singleton x) <-> E.eq y x.",
            "VernacStartTheoremProof",
            "18855ce972ddab01db98b41bf1729b0884776cc2"
        ],
        [
            "exact (@M.singleton_spec _ _).",
            "VernacExtend",
            "0e4037f572080319fdb22fe97c3f8e06485675bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_spec : In x (union s s') <-> In x s \\/ In x s'.",
            "VernacStartTheoremProof",
            "402558fe280d33d29ec148266a6760a4245f8e6e"
        ],
        [
            "exact (@M.union_spec _ _ _ _ _).",
            "VernacExtend",
            "df75dc0da39bbbd93f0433d3dc7bbdcbb221f576"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_spec : In x (inter s s') <-> In x s /\\ In x s'.",
            "VernacStartTheoremProof",
            "d341b08ae2e510331695a5e536487310e54e4ed7"
        ],
        [
            "exact (@M.inter_spec _ _ _ _ _).",
            "VernacExtend",
            "9d97a77311fccaefb2eb2062d26ca33ad7b1fb34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_spec : In x (diff s s') <-> In x s /\\ ~In x s'.",
            "VernacStartTheoremProof",
            "fe067875b7a53d793e673b21b2e27e09985439df"
        ],
        [
            "exact (@M.diff_spec _ _ _ _ _).",
            "VernacExtend",
            "41d2bb5c164bca0c2389a0384f47d71544cd0368"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_spec : forall (A : Type) (i : A) (f : elt -> A -> A), fold f s i = fold_left (fun a e => f e a) (elements s) i.",
            "VernacStartTheoremProof",
            "c7d24c1c3354a5ce78789df83bdec2056fcc8fb2"
        ],
        [
            "exact (@M.fold_spec _).",
            "VernacExtend",
            "96bd4d8a4e37660b8917f705a3dfd616ac76761a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_spec : cardinal s = length (elements s).",
            "VernacStartTheoremProof",
            "c85b582d1997a5b1d21ef03f04ee98cc04f82e55"
        ],
        [
            "exact (@M.cardinal_spec s _).",
            "VernacExtend",
            "939cd7b14393438b02889371cd46efe788b89e3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_spec : compatb f -> (In x (filter f s) <-> In x s /\\ f x = true).",
            "VernacStartTheoremProof",
            "d25d5b5721bcc5222b0459f8be21d1172cd1dafd"
        ],
        [
            "exact (@M.filter_spec _ _ _).",
            "VernacExtend",
            "727a1ca8fce826bf3788a75b91e0f4c964050bd5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_spec : compatb f -> (for_all f s = true <-> For_all (fun x => f x = true) s).",
            "VernacStartTheoremProof",
            "59462c76b086a7f1f5619962461f8afe7c95de8e"
        ],
        [
            "exact (@M.for_all_spec _ _).",
            "VernacExtend",
            "38b3c2d249c69b7012447cef440b4e6c557afa72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_spec : compatb f -> (exists_ f s = true <-> Exists (fun x => f x = true) s).",
            "VernacStartTheoremProof",
            "f1b35cac476b9f00967964c9a31a58494320f67e"
        ],
        [
            "exact (@M.exists_spec _ _).",
            "VernacExtend",
            "5f0110b568e8d085976935fd6ce1605680a34ed0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec1 : compatb f -> Equal (fst (partition f s)) (filter f s).",
            "VernacStartTheoremProof",
            "62965815c8bbe1e0401f7551babe2ba9fe5d9dc3"
        ],
        [
            "exact (@M.partition_spec1 _ _).",
            "VernacExtend",
            "abc6d21ce9dd3601bddb8788475abd0c9c509ca8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec2 : compatb f -> Equal (snd (partition f s)) (filter (fun x => negb (f x)) s).",
            "VernacStartTheoremProof",
            "bfcf395644be2eb0b47ef485778c540668a0e3de"
        ],
        [
            "exact (@M.partition_spec2 _ _).",
            "VernacExtend",
            "4981e986eb3be0adb697b9774d127c53a7a57f24"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec1 : InA E.eq x (elements s) <-> In x s.",
            "VernacStartTheoremProof",
            "1cb08d17b3a9e9803a797239111e3adca85b5e1c"
        ],
        [
            "exact (@M.elements_spec1 _ _).",
            "VernacExtend",
            "9cba4dbd0d8f98b55040279b761369e0eb459bb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec2w : NoDupA E.eq (elements s).",
            "VernacStartTheoremProof",
            "653576d1cbd12d7dd2ea1d2bfd7f98aa7d10c438"
        ],
        [
            "exact (@M.elements_spec2w _ _).",
            "VernacExtend",
            "6c658b613603dd770906bff62c3904aa334b52f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_spec1 : choose s = Some x -> In x s.",
            "VernacStartTheoremProof",
            "c03c89dd76fd0d5252dd4691617b0996c205a453"
        ],
        [
            "exact (@M.choose_spec1 _ _).",
            "VernacExtend",
            "ba69a4a3344e17b13b23390b24e7bc61eb5948f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_spec2 : choose s = None -> Empty s.",
            "VernacStartTheoremProof",
            "67f332e03bc03e3d097d914a424121994f8d1dcc"
        ],
        [
            "exact (@M.choose_spec2 _).",
            "VernacExtend",
            "f897ed78ff6ac749e5d11d6de7c715b86756690e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Spec.",
            "VernacEndSegment",
            "5ee638cb91032793de2974877933ead96cae3b7c"
        ],
        [
            "End WRaw2SetsOn.",
            "VernacEndSegment",
            "50113d7b8aff15893c4bb78c9924ba9b877151b1"
        ],
        [
            "Module WRaw2Sets (D:DecidableType)(M:WRawSets D) <: WSets with Module E := D.",
            "VernacDefineModule",
            "895f90d2656349bcf61ea714f0820a1b27ec2872"
        ],
        [
            "Module E := D.",
            "VernacDefineModule",
            "6f373ef3af689a0c1cac437952b75b72026bfeb4"
        ],
        [
            "Include WRaw2SetsOn D M.",
            "VernacInclude",
            "0d6ac76b7818f2288e9d778188661910ba6b0276"
        ],
        [
            "End WRaw2Sets.",
            "VernacEndSegment",
            "8075d3e3523b7025d97addca378dbc9c80fd2a22"
        ],
        [
            "Module Type RawSets (E : OrderedType).",
            "VernacDeclareModuleType",
            "23adea4bbca7736ba045108084d9f9a6692e1296"
        ],
        [
            "Include WRawSets E <+ HasOrdOps <+ HasLt <+ IsStrOrder.",
            "VernacInclude",
            "9dce35880ba3ff2d6b6291e9762f4f1728e618a5"
        ],
        [
            "Section Spec.",
            "VernacBeginSection",
            "7149befcee62ca51a0db409eab4bd8ffcf7b52fc"
        ],
        [
            "Variable s s': t.",
            "VernacAssumption",
            "35bc5d98dcdbe83753f467727dc866c24c6874c3"
        ],
        [
            "Variable x y : elt.",
            "VernacAssumption",
            "06d759bbdac2711f4a0194d3ba8a408974451a05"
        ],
        [
            "Parameter compare_spec : forall `{Ok s, Ok s'}, CompSpec eq lt s s' (compare s s').",
            "VernacAssumption",
            "105e0495bfd9aa5f59ef903dc72acf5f352b9b0d"
        ],
        [
            "Parameter elements_spec2 : forall `{Ok s}, sort E.lt (elements s).",
            "VernacAssumption",
            "28f6156c2e076a429923a1cd50b76a7e4a04321e"
        ],
        [
            "Parameter min_elt_spec1 : min_elt s = Some x -> In x s.",
            "VernacAssumption",
            "cfbc65ec9e485ea6630e8a4997977f4a9d23b761"
        ],
        [
            "Parameter min_elt_spec2 : forall `{Ok s}, min_elt s = Some x -> In y s -> ~ E.lt y x.",
            "VernacAssumption",
            "50b0434b01caa6971c023f230909caf45db47f3f"
        ],
        [
            "Parameter min_elt_spec3 : min_elt s = None -> Empty s.",
            "VernacAssumption",
            "86988bcdd0efaeb3d1f78c56412c9ee63d127f5b"
        ],
        [
            "Parameter max_elt_spec1 : max_elt s = Some x -> In x s.",
            "VernacAssumption",
            "4e8ce7c0ecd83b853b195d9790a98211a294e95d"
        ],
        [
            "Parameter max_elt_spec2 : forall `{Ok s}, max_elt s = Some x -> In y s -> ~ E.lt x y.",
            "VernacAssumption",
            "c7a98bb5c9093c95dd79318e5f0ac33aef7bcf94"
        ],
        [
            "Parameter max_elt_spec3 : max_elt s = None -> Empty s.",
            "VernacAssumption",
            "77cb35ae4f075a3831bd7ed85932d95b60a2aa93"
        ],
        [
            "Parameter choose_spec3 : forall `{Ok s, Ok s'}, choose s = Some x -> choose s' = Some y -> Equal s s' -> E.eq x y.",
            "VernacAssumption",
            "400cedcd8b4d361680d805d3019db968676f203d"
        ],
        [
            "End Spec.",
            "VernacEndSegment",
            "5ee638cb91032793de2974877933ead96cae3b7c"
        ],
        [
            "End RawSets.",
            "VernacEndSegment",
            "38f545f65a980b52462a1a1b3690d632dfdf8df8"
        ],
        [
            "Module Raw2SetsOn (O:OrderedType)(M:RawSets O) <: SetsOn O.",
            "VernacDefineModule",
            "59cf3813088b3787b8a252fa9429e82411019ef3"
        ],
        [
            "Include WRaw2SetsOn O M.",
            "VernacInclude",
            "0efc4e0894cc2edd1acb5681f16ec198e1ed23b3"
        ],
        [
            "Definition compare (s s':t) := M.compare s s'.",
            "VernacDefinition",
            "8744e109983da6c576c82af3a05992b6b955c77d"
        ],
        [
            "Definition min_elt (s:t) : option elt := M.min_elt s.",
            "VernacDefinition",
            "2d787af26460f1661a283219a64ba7a3be98cbe0"
        ],
        [
            "Definition max_elt (s:t) : option elt := M.max_elt s.",
            "VernacDefinition",
            "f6701b56ad3196a2b0cf32017bd404ab6384e74f"
        ],
        [
            "Definition lt (s s':t) := M.lt s s'.",
            "VernacDefinition",
            "ec5b0a2a4e93f39605a2ba40cf987e9b40f33d92"
        ],
        [
            "Instance lt_strorder : StrictOrder lt.",
            "VernacInstance",
            "fa189ac61b1474957ad71f3e51fbb244abde9f22"
        ],
        [
            "constructor ; unfold lt; red.",
            "VernacExtend",
            "53f24a443d2c11fc751d0157df7048b338e02e66"
        ],
        [
            "unfold complement.",
            "VernacExtend",
            "fe2bc84b0e4e4f5e4891ac3c4e6401eec02a8d9b"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (irreflexivity H).",
            "VernacExtend",
            "32522241636ddb1dbe91cfc8c50c77c559cf5ce6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity y; auto.",
            "VernacExtend",
            "98739581fbb03aed9d7b38f39c56b0779481d87b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_compat : Proper (eq==>eq==>iff) lt.",
            "VernacInstance",
            "04e2deec4194fc51245d368b9c1ad29da27fd761"
        ],
        [
            "repeat red.",
            "VernacExtend",
            "517f28ca1856880bafd07df42d9497606ec92845"
        ],
        [
            "unfold eq, lt.",
            "VernacExtend",
            "58db4ca0626565e6772791db348ef4e48dfd3ade"
        ],
        [
            "intros (s1,p1) (s2,p2) E (s1',p1') (s2',p2') E'; simpl.",
            "VernacExtend",
            "de7990a14d2dafb4e2784d16e0485ab0d5376b77"
        ],
        [
            "change (M.eq s1 s2) in E.",
            "VernacExtend",
            "26907f51ba750d7eb56f5f10d884c2fe1cad95eb"
        ],
        [
            "change (M.eq s1' s2') in E'.",
            "VernacExtend",
            "d7afe90874e56dd0ffb1d6844799c2b9c91a3343"
        ],
        [
            "rewrite E,E'; intuition.",
            "VernacExtend",
            "92c7559e9f782720f6fbb8ecea9d702637e2db2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Spec.",
            "VernacBeginSection",
            "7149befcee62ca51a0db409eab4bd8ffcf7b52fc"
        ],
        [
            "Variable s s' s'' : t.",
            "VernacAssumption",
            "d1d63db80712d2623a501964786e218cf5e269eb"
        ],
        [
            "Variable x y : elt.",
            "VernacAssumption",
            "06d759bbdac2711f4a0194d3ba8a408974451a05"
        ],
        [
            "Lemma compare_spec : CompSpec eq lt s s' (compare s s').",
            "VernacStartTheoremProof",
            "1fe7ad68f9ce3aac816dc1370a10ccb492f2bcd4"
        ],
        [
            "unfold compare; destruct (@M.compare_spec s s' _ _); auto.",
            "VernacExtend",
            "bdf404e2c91dd0da0fa447e283d2add2e616ff60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec2 : sort O.lt (elements s).",
            "VernacStartTheoremProof",
            "ded34e3c22be1c9fa75b7024faf81e5a112f6235"
        ],
        [
            "exact (@M.elements_spec2 _ _).",
            "VernacExtend",
            "958fad1cdc8a1a6af383b3db29b600a906cec51f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_spec1 : min_elt s = Some x -> In x s.",
            "VernacStartTheoremProof",
            "eea1effad6aab36f61657e889f5d14257262defe"
        ],
        [
            "exact (@M.min_elt_spec1 _ _).",
            "VernacExtend",
            "d14f80c09e109356ad1ea6fbb4dd8c032b3a16b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_spec2 : min_elt s = Some x -> In y s -> ~ O.lt y x.",
            "VernacStartTheoremProof",
            "6adff479dea999c208b3298cc197aba575aa0494"
        ],
        [
            "exact (@M.min_elt_spec2 _ _ _ _).",
            "VernacExtend",
            "5958879f106a89af5f2db2379f9c2a73bef8620f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_spec3 : min_elt s = None -> Empty s.",
            "VernacStartTheoremProof",
            "5b365d83b9735f9768e70fbadc6ca247839b4354"
        ],
        [
            "exact (@M.min_elt_spec3 _).",
            "VernacExtend",
            "96f1c73be67cdd9570931e730110a7c10f46b3f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_spec1 : max_elt s = Some x -> In x s.",
            "VernacStartTheoremProof",
            "10e80ce930be8b9cb1485612a1aca2461b80ddcb"
        ],
        [
            "exact (@M.max_elt_spec1 _ _).",
            "VernacExtend",
            "2d8eeb116aa39888ffb4e8965250566f669ddb44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_spec2 : max_elt s = Some x -> In y s -> ~ O.lt x y.",
            "VernacStartTheoremProof",
            "4b539d7935a32e0693ba95b63ecd9c7c53732719"
        ],
        [
            "exact (@M.max_elt_spec2 _ _ _ _).",
            "VernacExtend",
            "fb1518018640d8001fe7dd419793c79508d97222"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_spec3 : max_elt s = None -> Empty s.",
            "VernacStartTheoremProof",
            "ef1498b5e9b2df3c14a1544406ec7e126f3ddd8f"
        ],
        [
            "exact (@M.max_elt_spec3 _).",
            "VernacExtend",
            "a3765532faf5546af858107b565e77b9b1243867"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_spec3 : choose s = Some x -> choose s' = Some y -> Equal s s' -> O.eq x y.",
            "VernacStartTheoremProof",
            "fdffbefbfb9ffcaafd2344c3de276fb1a2b5a880"
        ],
        [
            "exact (@M.choose_spec3 _ _ _ _ _ _).",
            "VernacExtend",
            "405121c07a8f7b1c2791f5ec699559c34605bf87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Spec.",
            "VernacEndSegment",
            "5ee638cb91032793de2974877933ead96cae3b7c"
        ],
        [
            "End Raw2SetsOn.",
            "VernacEndSegment",
            "4274b6908dc14366e688053b76882ddee95bb73a"
        ],
        [
            "Module Raw2Sets (O:OrderedType)(M:RawSets O) <: Sets with Module E := O.",
            "VernacDefineModule",
            "246ccebb5ec2d0b291d1c202385a6b3ad42e6301"
        ],
        [
            "Module E := O.",
            "VernacDefineModule",
            "b04c02d8173401b36dc29bd0d45a1e413cbba9b6"
        ],
        [
            "Include Raw2SetsOn O M.",
            "VernacInclude",
            "4af5b8db9d3a95bcfb33c8f049487d863c17e394"
        ],
        [
            "End Raw2Sets.",
            "VernacEndSegment",
            "82d088eb6bbbb383cc6c5a4430000440d9334424"
        ],
        [
            "Module Type IN (O:OrderedType).",
            "VernacDeclareModuleType",
            "9585840f2182ff0f3b6dab3c9f9acca8a4d0dded"
        ],
        [
            "Parameter Inline t : Type.",
            "VernacAssumption",
            "fefa94295e9ab2d6321e93edf8368017cc37cde5"
        ],
        [
            "Parameter Inline In : O.t -> t -> Prop.",
            "VernacAssumption",
            "f7496e837c95a1df6c6a8fabf1d667026514d1d0"
        ],
        [
            "Declare Instance In_compat : Proper (O.eq==>eq==>iff) In.",
            "VernacInstance",
            "f0adb8875abfd41b63a4781238e0cdcd039f26c7"
        ],
        [
            "Definition Equal s s' := forall x, In x s <-> In x s'.",
            "VernacDefinition",
            "bd2bc6498b36b28a6f4322f95060e7e3b7c006a8"
        ],
        [
            "Definition Empty s := forall x, ~In x s.",
            "VernacDefinition",
            "508d9b041fd8e37bfdd3aece35d0d5d774326931"
        ],
        [
            "End IN.",
            "VernacEndSegment",
            "4b150ecf266b95dcd89771de896e42d5d22080d8"
        ],
        [
            "Module MakeSetOrdering (O:OrderedType)(Import M:IN O).",
            "VernacDefineModule",
            "0576ccee69f1da05137ffa8b671cc45ca977e27f"
        ],
        [
            "Module Import MO := OrderedTypeFacts O.",
            "VernacDefineModule",
            "ff8ae087446862652954f317024d958d681537bf"
        ],
        [
            "Definition eq : t -> t -> Prop := Equal.",
            "VernacDefinition",
            "68d22f2a7286673418a61cb433a351317a508a0e"
        ],
        [
            "Instance eq_equiv : Equivalence eq.",
            "VernacInstance",
            "deeaf33dc54ae03b7448861f860d5bb8daaca18c"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance : Proper (O.eq==>eq==>iff) In.",
            "VernacInstance",
            "faeb277215aec9ea588f2b21b7f00057dcaf5e5f"
        ],
        [
            "intros x x' Ex s s' Es.",
            "VernacExtend",
            "425554d8bdc1bf9c90ed780583429cc92e8e7952"
        ],
        [
            "rewrite Ex.",
            "VernacExtend",
            "59ca80af1d92f6f1f16f05de70bd1944b4eba816"
        ],
        [
            "apply Es.",
            "VernacExtend",
            "641469b24e3ec6f991037ce72ec5a92d3bae0acf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Below x s := forall y, In y s -> O.lt y x.",
            "VernacDefinition",
            "9ead273bf119ee2cdc5bad363aed1f313ba6b2ce"
        ],
        [
            "Definition Above x s := forall y, In y s -> O.lt x y.",
            "VernacDefinition",
            "012bfa60c4274c2e9e51ea86bb6968f2e86e2383"
        ],
        [
            "Definition EquivBefore x s s' := forall y, O.lt y x -> (In y s <-> In y s').",
            "VernacDefinition",
            "3ccd3002b9f0415974dd6540fe43ab9916195cbb"
        ],
        [
            "Definition EmptyBetween x y s := forall z, In z s -> O.lt z y -> O.lt z x.",
            "VernacDefinition",
            "7773ef221e30beae2707d9de8cbaa3e05bd263a2"
        ],
        [
            "Definition lt s s' := exists x, EquivBefore x s s' /\\ ((In x s' /\\ Below x s) \\/ (In x s /\\ exists y, In y s' /\\ O.lt x y /\\ EmptyBetween x y s')).",
            "VernacDefinition",
            "7d9ee5491a52c386d242e8a204fea1b2a5a256b8"
        ],
        [
            "Instance : Proper (O.eq==>eq==>eq==>iff) EquivBefore.",
            "VernacInstance",
            "8b00cbadfedc060a4f303d59dae8cf0070062c74"
        ],
        [
            "unfold EquivBefore.",
            "VernacExtend",
            "b191049502e30d6a7cacfc0632685f7b0d1fe1c5"
        ],
        [
            "intros x x' E s1 s1' E1 s2 s2' E2.",
            "VernacExtend",
            "c28a93ab86930bffe254a4f0ce38698bed627c8a"
        ],
        [
            "setoid_rewrite E; setoid_rewrite E1; setoid_rewrite E2; intuition.",
            "VernacExtend",
            "602d363f7e7e5f7f1be61543db4ca2600887d1bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance : Proper (O.eq==>eq==>iff) Below.",
            "VernacInstance",
            "97926d4b75531d4e6ccc92fbd949be226de4d17e"
        ],
        [
            "unfold Below.",
            "VernacExtend",
            "59d94b398ba65600c849f0837ad78077f77e958e"
        ],
        [
            "intros x x' Ex s s' Es.",
            "VernacExtend",
            "425554d8bdc1bf9c90ed780583429cc92e8e7952"
        ],
        [
            "setoid_rewrite Ex; setoid_rewrite Es; intuition.",
            "VernacExtend",
            "97945bb490f8b585280038ed738a049c82b1fccb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance : Proper (O.eq==>eq==>iff) Above.",
            "VernacInstance",
            "6941426513aa1f874a29da963e9ca3c3d4fdc616"
        ],
        [
            "unfold Above.",
            "VernacExtend",
            "a72dbe7d129b79d8f48cb6c357cb008e845cf798"
        ],
        [
            "intros x x' Ex s s' Es.",
            "VernacExtend",
            "425554d8bdc1bf9c90ed780583429cc92e8e7952"
        ],
        [
            "setoid_rewrite Ex; setoid_rewrite Es; intuition.",
            "VernacExtend",
            "97945bb490f8b585280038ed738a049c82b1fccb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance : Proper (O.eq==>O.eq==>eq==>iff) EmptyBetween.",
            "VernacInstance",
            "291f2cf698e43a324d1236491c8335dd679aede8"
        ],
        [
            "unfold EmptyBetween.",
            "VernacExtend",
            "0310e9634776c48519243d63d774f71bf127d740"
        ],
        [
            "intros x x' Ex y y' Ey s s' Es.",
            "VernacExtend",
            "d2bde9b4519cf36fe2120ca65a7bbdc536550e03"
        ],
        [
            "setoid_rewrite Ex; setoid_rewrite Ey; setoid_rewrite Es; intuition.",
            "VernacExtend",
            "29c2e0f70d1f797f85207908931298f2dbdd3e89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_compat : Proper (eq==>eq==>iff) lt.",
            "VernacInstance",
            "04e2deec4194fc51245d368b9c1ad29da27fd761"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "intros s1 s1' E1 s2 s2' E2.",
            "VernacExtend",
            "7c257f60351bc21d1b49ece1d9c2ad60bd61188b"
        ],
        [
            "setoid_rewrite E1; setoid_rewrite E2; intuition.",
            "VernacExtend",
            "f747fe796d1d23498d4abf3c4ded63c8baffd043"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_strorder : StrictOrder lt.",
            "VernacInstance",
            "fa189ac61b1474957ad71f3e51fbb244abde9f22"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros s (x & _ & [(IN,Em)|(IN & y & IN' & LT & Be)]).",
            "VernacExtend",
            "a644c4e8cc836b7ec3602fd1866db1bb739af32f"
        ],
        [
            "specialize (Em x IN); order.",
            "VernacExtend",
            "f87fb5280f3d0e7afc67c73ad9ec49a9733c85b0"
        ],
        [
            "specialize (Be x IN LT); order.",
            "VernacExtend",
            "58a4c71f3c55e6781069efec8aea3d080b27e928"
        ],
        [
            "intros s1 s2 s3 (x & EQ & [(IN,Pre)|(IN,Lex)]) (x' & EQ' & [(IN',Pre')|(IN',Lex')]).",
            "VernacExtend",
            "d258fea90c7d237cef3fd1296e90c2c2d124d577"
        ],
        [
            "assert (O.lt x x') by (specialize (Pre' x IN); auto).",
            "VernacExtend",
            "91082cd79b0e2903aa22bfa978e6d491517c4259"
        ],
        [
            "exists x; split.",
            "VernacExtend",
            "f9266ddab0754060cc1803dfa28547707d7da7dd"
        ],
        [
            "intros y Hy; rewrite <- (EQ' y); auto; order.",
            "VernacExtend",
            "02361450b86b4637e106a18358026762d0ed9040"
        ],
        [
            "left; split; auto.",
            "VernacExtend",
            "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
        ],
        [
            "rewrite <- (EQ' x); auto.",
            "VernacExtend",
            "b833367948ba106dd6c6ebe099bf2341090abf08"
        ],
        [
            "elim_compare x x'.",
            "VernacExtend",
            "c288eae61db8d153163e1a2e0a58f12f4f1d649b"
        ],
        [
            "destruct Lex' as (y & INy & LT & Be).",
            "VernacExtend",
            "490c23c10929e144fc062d07cd40e3da577f7da5"
        ],
        [
            "exists y; split.",
            "VernacExtend",
            "98b34a63bf65ebe8d8fef8eda97c175e0cb41ad2"
        ],
        [
            "intros z Hz.",
            "VernacExtend",
            "4248c0300130ba18200d4779d5d54ab29d4b84b6"
        ],
        [
            "split; intros INz.",
            "VernacExtend",
            "b3622bdb80a53c860fcb776e03d37f6036061deb"
        ],
        [
            "specialize (Pre z INz).",
            "VernacExtend",
            "a41b3c8eacadf2d643f5c38a36838a5612e9afb1"
        ],
        [
            "rewrite <- (EQ' z), <- (EQ z); auto; order.",
            "VernacExtend",
            "2bd1437858f2859359ae669745050393c6920abb"
        ],
        [
            "specialize (Be z INz Hz).",
            "VernacExtend",
            "26caf68085e7058d38f3255bef2c57839f939937"
        ],
        [
            "rewrite (EQ z), (EQ' z); auto; order.",
            "VernacExtend",
            "978f2133af10e1b50be3854e16799195bcedaa09"
        ],
        [
            "left; split; auto.",
            "VernacExtend",
            "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
        ],
        [
            "intros z Hz.",
            "VernacExtend",
            "4248c0300130ba18200d4779d5d54ab29d4b84b6"
        ],
        [
            "transitivity x; auto; order.",
            "VernacExtend",
            "ab3c230a4a690e65904712a3453d056bf3c5802e"
        ],
        [
            "exists x; split.",
            "VernacExtend",
            "f9266ddab0754060cc1803dfa28547707d7da7dd"
        ],
        [
            "intros z Hz.",
            "VernacExtend",
            "4248c0300130ba18200d4779d5d54ab29d4b84b6"
        ],
        [
            "rewrite <- (EQ' z) by order; auto.",
            "VernacExtend",
            "99f3059a60aa79082664f8f7620c3721c29e4636"
        ],
        [
            "left; split; auto.",
            "VernacExtend",
            "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
        ],
        [
            "rewrite <- (EQ' x); auto.",
            "VernacExtend",
            "b833367948ba106dd6c6ebe099bf2341090abf08"
        ],
        [
            "exists x'; split.",
            "VernacExtend",
            "140e0d24b2426885961844199b4e20314cedcdf5"
        ],
        [
            "intros z Hz.",
            "VernacExtend",
            "4248c0300130ba18200d4779d5d54ab29d4b84b6"
        ],
        [
            "rewrite (EQ z) by order; auto.",
            "VernacExtend",
            "cc2a70a32714a42fa6ade98be15779c657c632b7"
        ],
        [
            "right; split; auto.",
            "VernacExtend",
            "1cc5054ad1405940e563f1d7ddce468251301130"
        ],
        [
            "rewrite (EQ x'); auto.",
            "VernacExtend",
            "154df5949adde0c4bd6a4da4932a77a67fb04163"
        ],
        [
            "destruct Lex as (y & INy & LT & Be).",
            "VernacExtend",
            "dde40d8d8bf437ad4fc199d1931b76b4b665cebf"
        ],
        [
            "specialize (Pre' y INy).",
            "VernacExtend",
            "41597aa603d8ebbe59d18d5b8e5f43d03abcdadf"
        ],
        [
            "exists x; split.",
            "VernacExtend",
            "f9266ddab0754060cc1803dfa28547707d7da7dd"
        ],
        [
            "intros z Hz.",
            "VernacExtend",
            "4248c0300130ba18200d4779d5d54ab29d4b84b6"
        ],
        [
            "rewrite <- (EQ' z) by order; auto.",
            "VernacExtend",
            "99f3059a60aa79082664f8f7620c3721c29e4636"
        ],
        [
            "right; split; auto.",
            "VernacExtend",
            "1cc5054ad1405940e563f1d7ddce468251301130"
        ],
        [
            "exists y; repeat split; auto.",
            "VernacExtend",
            "62db8dfa988008e003fcd3ef63ad28a980186535"
        ],
        [
            "rewrite <- (EQ' y); auto.",
            "VernacExtend",
            "e1b24250504f58762a094188d35fc26bca85d8d0"
        ],
        [
            "intros z Hz LTz; apply Be; auto.",
            "VernacExtend",
            "cdbaeeeb0d65de70b734856ec6f643ae0f8b3683"
        ],
        [
            "rewrite (EQ' z); auto; order.",
            "VernacExtend",
            "9f4b1f6d5efc93274a2cf2d58839a174eac3087a"
        ],
        [
            "elim_compare x x'.",
            "VernacExtend",
            "c288eae61db8d153163e1a2e0a58f12f4f1d649b"
        ],
        [
            "destruct Lex as (y & INy & LT & Be).",
            "VernacExtend",
            "dde40d8d8bf437ad4fc199d1931b76b4b665cebf"
        ],
        [
            "setoid_replace x with x' in LT; auto.",
            "VernacExtend",
            "c0710a6f33b3de9b478d89167c278467ee0cf27b"
        ],
        [
            "specialize (Be x' IN' LT); order.",
            "VernacExtend",
            "25851bab5433eb7e55ffe7da78fc57d8d2f4b99c"
        ],
        [
            "exists x; split.",
            "VernacExtend",
            "f9266ddab0754060cc1803dfa28547707d7da7dd"
        ],
        [
            "intros z Hz.",
            "VernacExtend",
            "4248c0300130ba18200d4779d5d54ab29d4b84b6"
        ],
        [
            "rewrite <- (EQ' z) by order; auto.",
            "VernacExtend",
            "99f3059a60aa79082664f8f7620c3721c29e4636"
        ],
        [
            "right; split; auto.",
            "VernacExtend",
            "1cc5054ad1405940e563f1d7ddce468251301130"
        ],
        [
            "destruct Lex as (y & INy & LT & Be).",
            "VernacExtend",
            "dde40d8d8bf437ad4fc199d1931b76b4b665cebf"
        ],
        [
            "elim_compare y x'.",
            "VernacExtend",
            "947b028d334a4716ef371b7532c3cd2a0886b4b3"
        ],
        [
            "destruct Lex' as (y' & Iny' & LT' & Be').",
            "VernacExtend",
            "31bff4eaff1d16ff553f7cbbd8715c398813666f"
        ],
        [
            "exists y'; repeat split; auto.",
            "VernacExtend",
            "dc7f38c78644bd9e908fc163bece3f27f85a10b2"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "intros z Hz LTz.",
            "VernacExtend",
            "cbb8b63b2cc0229155efbd9e92213f88d6e023df"
        ],
        [
            "specialize (Be' z Hz LTz).",
            "VernacExtend",
            "61c17422ec407d63bb87756d4c80c91de2531ac0"
        ],
        [
            "rewrite <- (EQ' z) in Hz by order.",
            "VernacExtend",
            "277842d2748d1be7b6f988421dd6ec5e3f4088b0"
        ],
        [
            "apply Be; auto.",
            "VernacExtend",
            "61edeb0cf5818c79a750f56f1ab6d8d5e6147aad"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "exists y; repeat split; auto.",
            "VernacExtend",
            "62db8dfa988008e003fcd3ef63ad28a980186535"
        ],
        [
            "rewrite <- (EQ' y); auto.",
            "VernacExtend",
            "e1b24250504f58762a094188d35fc26bca85d8d0"
        ],
        [
            "intros z Hz LTz.",
            "VernacExtend",
            "cbb8b63b2cc0229155efbd9e92213f88d6e023df"
        ],
        [
            "apply Be; auto.",
            "VernacExtend",
            "61edeb0cf5818c79a750f56f1ab6d8d5e6147aad"
        ],
        [
            "rewrite (EQ' z); auto; order.",
            "VernacExtend",
            "9f4b1f6d5efc93274a2cf2d58839a174eac3087a"
        ],
        [
            "assert (O.lt x' x) by auto.",
            "VernacExtend",
            "60eee3cf07a8bb19b0a5c12bf32bb9fe6ce6c503"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "exists x'; split.",
            "VernacExtend",
            "140e0d24b2426885961844199b4e20314cedcdf5"
        ],
        [
            "intros z Hz.",
            "VernacExtend",
            "4248c0300130ba18200d4779d5d54ab29d4b84b6"
        ],
        [
            "rewrite (EQ z) by order; auto.",
            "VernacExtend",
            "cc2a70a32714a42fa6ade98be15779c657c632b7"
        ],
        [
            "right; split; auto.",
            "VernacExtend",
            "1cc5054ad1405940e563f1d7ddce468251301130"
        ],
        [
            "rewrite (EQ x'); auto.",
            "VernacExtend",
            "154df5949adde0c4bd6a4da4932a77a67fb04163"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_empty_r : forall s s', Empty s' -> ~ lt s s'.",
            "VernacStartTheoremProof",
            "3ac3ee203f7dabc550f2f983d5e5cace7f551162"
        ],
        [
            "intros s s' Hs' (x & _ & [(IN,_)|(_ & y & IN & _)]).",
            "VernacExtend",
            "468ee44d5c63abcea29afbe58ad2b04eb29f2817"
        ],
        [
            "elim (Hs' x IN).",
            "VernacExtend",
            "5c4b0d0957369788db8c36b61d9d922107fc18cf"
        ],
        [
            "elim (Hs' y IN).",
            "VernacExtend",
            "35430e4320c747ab23897e579df972aa3605b936"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Add x s s' := forall y, In y s' <-> O.eq x y \\/ In y s.",
            "VernacDefinition",
            "995f4aa9bba89164546dd1cfdbe828093e739441"
        ],
        [
            "Lemma lt_empty_l : forall x s1 s2 s2', Empty s1 -> Above x s2 -> Add x s2 s2' -> lt s1 s2'.",
            "VernacStartTheoremProof",
            "cb67aed82cfcc78359607d277ea323c9a6665f54"
        ],
        [
            "intros x s1 s2 s2' Em Ab Ad.",
            "VernacExtend",
            "3629281232ba625f5b875a2329e9ca83c4db341d"
        ],
        [
            "exists x; split.",
            "VernacExtend",
            "f9266ddab0754060cc1803dfa28547707d7da7dd"
        ],
        [
            "intros y Hy; split; intros IN.",
            "VernacExtend",
            "7a65e6fd1fec6644e9b7979809542438f1ced539"
        ],
        [
            "elim (Em y IN).",
            "VernacExtend",
            "fddf7ddc21a8b91c7f8382d1528bbc74649733a9"
        ],
        [
            "rewrite (Ad y) in IN; destruct IN as [EQ|IN].",
            "VernacExtend",
            "ca7a992d6a5e751b48dddaf0ce6079a361202292"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "specialize (Ab y IN).",
            "VernacExtend",
            "43939d08658374707c5d4acc464e7c6118659d8f"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "left; split.",
            "VernacExtend",
            "b68a224dbab946d70f6270a1f8a5037821e6e9c2"
        ],
        [
            "rewrite (Ad x).",
            "VernacExtend",
            "b85249e23ea9c04754a4ad73c15bac9072b54103"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "elim (Em y Hy).",
            "VernacExtend",
            "a8e026c7ac1d6a6e78592fa4ad75926287dc05ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_add_lt : forall x1 x2 s1 s1' s2 s2', Above x1 s1 -> Above x2 s2 -> Add x1 s1 s1' -> Add x2 s2 s2' -> O.lt x1 x2 -> lt s1' s2'.",
            "VernacStartTheoremProof",
            "717d78aba055aaee8311921365bed8ac93aae05e"
        ],
        [
            "intros x1 x2 s1 s1' s2 s2' Ab1 Ab2 Ad1 Ad2 LT.",
            "VernacExtend",
            "48c1520353d34b30fe9584052f83205a4465448a"
        ],
        [
            "exists x1; split; [ | right; split]; auto.",
            "VernacExtend",
            "f8c5d1e23fd7ca55e9d8238eaac898f16f9021b3"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "rewrite (Ad1 y), (Ad2 y).",
            "VernacExtend",
            "16ee3b9a73808bff2b04d9785fcb4b872791d407"
        ],
        [
            "split; intros [U|U]; try order.",
            "VernacExtend",
            "f4751270282033d86cfa6a6091d9c803a9ba2e92"
        ],
        [
            "specialize (Ab1 y U).",
            "VernacExtend",
            "eefd3a2cead27939dcfdf9f8945356c31ed22aca"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "specialize (Ab2 y U).",
            "VernacExtend",
            "861beeb663dd648ac697aada6ef48f79d7e709bd"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "rewrite (Ad1 x1); auto with *.",
            "VernacExtend",
            "561f11cd86438e441718288eb198079d1cc539ba"
        ],
        [
            "exists x2; repeat split; auto.",
            "VernacExtend",
            "22ad43dfdd826646752e2c5200d44dd2384cee0f"
        ],
        [
            "rewrite (Ad2 x2); now left.",
            "VernacExtend",
            "dc388bde03126add92f4f79c4b5f726234412298"
        ],
        [
            "intros y.",
            "VernacExtend",
            "d3cd14babe4904577f05dd23b379c589bf67ea40"
        ],
        [
            "rewrite (Ad2 y).",
            "VernacExtend",
            "5cefbdebdafd04d0e2248fa7d56dd2f743723e12"
        ],
        [
            "intros [U|U].",
            "VernacExtend",
            "d2f5ded1fe411060681f19fa71797815b0ee6fdf"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "specialize (Ab2 y U).",
            "VernacExtend",
            "861beeb663dd648ac697aada6ef48f79d7e709bd"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_add_eq : forall x1 x2 s1 s1' s2 s2', Above x1 s1 -> Above x2 s2 -> Add x1 s1 s1' -> Add x2 s2 s2' -> O.eq x1 x2 -> lt s1 s2 -> lt s1' s2'.",
            "VernacStartTheoremProof",
            "0afae868fde2367477afa0bd91a782d5fa07574b"
        ],
        [
            "intros x1 x2 s1 s1' s2 s2' Ab1 Ab2 Ad1 Ad2 Hx (x & EQ & Disj).",
            "VernacExtend",
            "d4b1dd457f42ee72f9868e270f003ae37e7bdf69"
        ],
        [
            "assert (O.lt x1 x).",
            "VernacExtend",
            "de25a73d40a88e5dee232e50e1b6358fc1b36cdb"
        ],
        [
            "destruct Disj as [(IN,_)|(IN,_)]; auto.",
            "VernacExtend",
            "7c82a2b8c204dcf0fcffc91bff0542f40c882875"
        ],
        [
            "rewrite Hx; auto.",
            "VernacExtend",
            "a8a655118f76d6cb242ead884f9532023706bdad"
        ],
        [
            "exists x; split.",
            "VernacExtend",
            "f9266ddab0754060cc1803dfa28547707d7da7dd"
        ],
        [
            "intros z Hz.",
            "VernacExtend",
            "4248c0300130ba18200d4779d5d54ab29d4b84b6"
        ],
        [
            "rewrite (Ad1 z), (Ad2 z).",
            "VernacExtend",
            "359a3cdd7b4eea76942d6cd1b3a90f802a00ce4b"
        ],
        [
            "split; intros [U|U]; try (left; order); right.",
            "VernacExtend",
            "6d42805036368bbcc851809cd1e6d204c6aea1f4"
        ],
        [
            "rewrite <- (EQ z); auto.",
            "VernacExtend",
            "9fbc7a9ee1c7719c9caaebe98c1622ce17ef4950"
        ],
        [
            "rewrite (EQ z); auto.",
            "VernacExtend",
            "a04dfa1f718e1b53f37bfe321bad27484914e96d"
        ],
        [
            "destruct Disj as [(IN,Em)|(IN & y & INy & LTy & Be)].",
            "VernacExtend",
            "f0144bc80ec0b97531be91ef6118ea3ac790d37a"
        ],
        [
            "left; split; auto.",
            "VernacExtend",
            "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
        ],
        [
            "rewrite (Ad2 x); auto.",
            "VernacExtend",
            "a0e1c979086a661cabf5f95c90d8638c5cb58156"
        ],
        [
            "intros z.",
            "VernacExtend",
            "82bb9cf582454326fafaf47a12d759aa1a4692c0"
        ],
        [
            "rewrite (Ad1 z); intros [U|U]; try specialize (Ab1 z U); auto; order.",
            "VernacExtend",
            "19abb162795a7d4a7dc07f6ba4334b32453e1756"
        ],
        [
            "right; split; auto.",
            "VernacExtend",
            "1cc5054ad1405940e563f1d7ddce468251301130"
        ],
        [
            "rewrite (Ad1 x); auto.",
            "VernacExtend",
            "13c18ff3c4a867e8f65766a3410fcf003a254a29"
        ],
        [
            "exists y; repeat split; auto.",
            "VernacExtend",
            "62db8dfa988008e003fcd3ef63ad28a980186535"
        ],
        [
            "rewrite (Ad2 y); auto.",
            "VernacExtend",
            "b91ccf92e0a3e39c12812eded38abcbe256313c5"
        ],
        [
            "intros z.",
            "VernacExtend",
            "82bb9cf582454326fafaf47a12d759aa1a4692c0"
        ],
        [
            "rewrite (Ad2 z).",
            "VernacExtend",
            "acc3d8c0162f13d2fcf28966cc86cb144ffe20cf"
        ],
        [
            "intros [U|U]; try specialize (Ab2 z U); auto; order.",
            "VernacExtend",
            "656835e605b659e5f7a5e09a2e6a3aaa48cdfc63"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MakeSetOrdering.",
            "VernacEndSegment",
            "bada8860bf18028012c9795f8a1c07019d29f323"
        ],
        [
            "Module MakeListOrdering (O:OrderedType).",
            "VernacDefineModule",
            "f37bca76dc3c07e4c3b578438c1beeb488b346b2"
        ],
        [
            "Module MO:=OrderedTypeFacts O.",
            "VernacDefineModule",
            "0168f0bf72abfc2e0dbd57b16b341c99a9fdca36"
        ],
        [
            "Local Notation t := (list O.t).",
            "VernacSyntacticDefinition",
            "a001af4d13dee0283bb026e0f59c41a589c556c7"
        ],
        [
            "Local Notation In := (InA O.eq).",
            "VernacSyntacticDefinition",
            "46b754c6948e97f8e5dfe79980379072b3c42713"
        ],
        [
            "Definition eq s s' := forall x, In x s <-> In x s'.",
            "VernacDefinition",
            "45030a6ad8dfe3707c6d6f14f86a516adf1412e8"
        ],
        [
            "Instance eq_equiv : Equivalence eq := _.",
            "VernacInstance",
            "40e55dd84c200b843f9af967c401dfd20f923d82"
        ],
        [
            "Inductive lt_list : t -> t -> Prop := | lt_nil : forall x s, lt_list nil (x :: s) | lt_cons_lt : forall x y s s', O.lt x y -> lt_list (x :: s) (y :: s') | lt_cons_eq : forall x y s s', O.eq x y -> lt_list s s' -> lt_list (x :: s) (y :: s').",
            "VernacInductive",
            "6c625261f70380265b69605efcf5decc1b8750cd"
        ],
        [
            "Hint Constructors lt_list.",
            "VernacHints",
            "b133fffea136c8f8fe673c6fdd0dbb5a17783c98"
        ],
        [
            "Definition lt := lt_list.",
            "VernacDefinition",
            "c2571b3e3c7b81e0ec9674fba1a73f5ce97ff954"
        ],
        [
            "Hint Unfold lt.",
            "VernacHints",
            "6500ce529580a03c513efadc773bd99901495588"
        ],
        [
            "Instance lt_strorder : StrictOrder lt.",
            "VernacInstance",
            "fa189ac61b1474957ad71f3e51fbb244abde9f22"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert (forall s s', s=s' -> ~lt s s').",
            "VernacExtend",
            "bac6432f68fb14054f2a5d58b36b0c44a35b993a"
        ],
        [
            "red; induction 2.",
            "VernacExtend",
            "9cd4db6e8c2c7cb6b7a701360b472afdf1721749"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "apply (StrictOrder_Irreflexive y); auto.",
            "VernacExtend",
            "f06c18ac21479c0989044c5d58b85ca24628e7b7"
        ],
        [
            "inversion H; subst; auto.",
            "VernacExtend",
            "3ac5a8efa0f6861868f1bfc9ce7119d14816504c"
        ],
        [
            "intros s Hs; exact (H s s (eq_refl s) Hs).",
            "VernacExtend",
            "8be692e2a179d9910e36e56ec48ac50672e57fd4"
        ],
        [
            "intros s s' s'' H; generalize s''; clear s''; elim H.",
            "VernacExtend",
            "8a35477957fe228360520b810aa4d134f6a253fe"
        ],
        [
            "intros x l s'' H'; inversion_clear H'; auto.",
            "VernacExtend",
            "d1a84f3fdf731643d12ac9631427a13f5236d4ab"
        ],
        [
            "intros x x' l l' E s'' H'; inversion_clear H'; auto.",
            "VernacExtend",
            "ad30d0c8b202774be356d80a5004c2668ede0b12"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "transitivity x'; auto.",
            "VernacExtend",
            "51fb178ba9d870904b33061a11eab7b28e54e482"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "rewrite <- H0; auto.",
            "VernacExtend",
            "075413acf92795f866dc4a2ff39c7d41ef0fda3f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H3.",
            "VernacExtend",
            "36eaf986a968e31567b264d9a9c5b9d3482ec67e"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "constructor 3; auto.",
            "VernacExtend",
            "1193a5d85313fd36623cfcd3f11324c7e9d07a07"
        ],
        [
            "transitivity y; auto.",
            "VernacExtend",
            "98739581fbb03aed9d7b38f39c56b0779481d87b"
        ],
        [
            "unfold lt in *; auto.",
            "VernacExtend",
            "c031b1152c431dd72ac533ad03545d61da92047a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_compat' : Proper (eqlistA O.eq==>eqlistA O.eq==>iff) lt.",
            "VernacInstance",
            "0136e201416124865b73f37b047f33e4eac6f4f4"
        ],
        [
            "apply proper_sym_impl_iff_2; auto with *.",
            "VernacExtend",
            "eee994524435b39e51e978935650dd48d24678a0"
        ],
        [
            "intros s1 s1' E1 s2 s2' E2 H.",
            "VernacExtend",
            "74fa9debdc5d64de002756561de9227cfd641827"
        ],
        [
            "revert s1' E1 s2' E2.",
            "VernacExtend",
            "8890d9896f4df46bda13e05bcb3796e256d7dd86"
        ],
        [
            "induction H; intros; inversion_clear E1; inversion_clear E2.",
            "VernacExtend",
            "93052f1fca01a6442bfb2a45b31ce45bddc810ee"
        ],
        [
            "constructor 1.",
            "VernacExtend",
            "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "MO.order.",
            "VernacExtend",
            "4bf5e65d2dc958bb31b04c3f1538564b8a9123eb"
        ],
        [
            "constructor 3.",
            "VernacExtend",
            "fc203c31040684912422f2b19644a4136ee46779"
        ],
        [
            "MO.order.",
            "VernacExtend",
            "4bf5e65d2dc958bb31b04c3f1538564b8a9123eb"
        ],
        [
            "unfold lt in *; auto.",
            "VernacExtend",
            "c031b1152c431dd72ac533ad03545d61da92047a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_cons : forall l1 l2 x y, O.eq x y -> eq l1 l2 -> eq (x :: l1) (y :: l2).",
            "VernacStartTheoremProof",
            "4b6cc2eed6e8de07bed6036af5d8b058b3839263"
        ],
        [
            "unfold eq; intros l1 l2 x y Exy E12 z.",
            "VernacExtend",
            "f67cfdd1d2ef761398e9757b6207790c8db3bc90"
        ],
        [
            "split; inversion_clear 1.",
            "VernacExtend",
            "9d9a645a047b6620f0de5b93a8fdd7e691fe06a4"
        ],
        [
            "left; MO.order.",
            "VernacExtend",
            "2a11b580661d281ff5e59096c596d2bb7b3a7429"
        ],
        [
            "right; rewrite <- E12; auto.",
            "VernacExtend",
            "92584501db6f994df40a3f76a05a2c73e7d58039"
        ],
        [
            "left; MO.order.",
            "VernacExtend",
            "2a11b580661d281ff5e59096c596d2bb7b3a7429"
        ],
        [
            "right; rewrite E12; auto.",
            "VernacExtend",
            "24bb976a945bff0525d209447d15c5e7db2e555e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eq_cons.",
            "VernacHints",
            "40f5f9020f1557369e8745e5716f111123b3c093"
        ],
        [
            "Lemma cons_CompSpec : forall c x1 x2 l1 l2, O.eq x1 x2 -> CompSpec eq lt l1 l2 c -> CompSpec eq lt (x1::l1) (x2::l2) c.",
            "VernacStartTheoremProof",
            "29072188e0e8aae50a23bd0c5c3fc464444cf26a"
        ],
        [
            "destruct c; simpl; inversion_clear 2; auto with relations.",
            "VernacExtend",
            "af75868047bf9a002225272a0141ca6daf122a9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve cons_CompSpec.",
            "VernacHints",
            "06daeeefe20a443c98d66f9cdc93b0e2114f04d0"
        ],
        [
            "End MakeListOrdering.",
            "VernacEndSegment",
            "f0bf611a492caff508bc604dd04f114da797947b"
        ]
    ],
    "proofs": [
        {
            "name": "In_compat",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "repeat red.",
                        "VernacExtend",
                        "517f28ca1856880bafd07df42d9497606ec92845"
                    ]
                },
                {
                    "command": [
                        "intros; apply M.In_compat; congruence.",
                        "VernacExtend",
                        "2c7f34bbea8cc0019ac5e3915a7890f9a6275c78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_equiv",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_dec",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "intros (s,Hs) (s',Hs').",
                        "VernacExtend",
                        "c38fee620b5fece9d823d86ecc0308b8918caee1"
                    ]
                },
                {
                    "command": [
                        "change ({M.Equal s s'}+{~M.Equal s s'}).",
                        "VernacExtend",
                        "bdbc7c08d77ec8d1c2c4bec586f9a729b2508ae8"
                    ]
                },
                {
                    "command": [
                        "destruct (M.equal s s') eqn:H; [left|right]; rewrite <- M.equal_spec; congruence.",
                        "VernacExtend",
                        "13e29aaef196aa1718787026698041521123f251"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "mem_spec",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "exact (@M.mem_spec _ _ _).",
                        "VernacExtend",
                        "3eae15fad867f29b7d49a4ea141d0e9291d5e451"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_spec",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "exact (@M.equal_spec _ _ _ _).",
                        "VernacExtend",
                        "e718817c37f272ec2ea2234d13950e9081f57e90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_spec",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "exact (@M.subset_spec _ _ _ _).",
                        "VernacExtend",
                        "7bc18c857a3d9ceda1b4465dc1a6bd8996e6462b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_spec",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "exact M.empty_spec.",
                        "VernacExtend",
                        "515a10e271619404bd850b1cc6092bf91e07a681"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_spec",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "exact (@M.is_empty_spec _).",
                        "VernacExtend",
                        "c4b388d9ebaf05c42f53441e6f84cc0faffc128b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_spec",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "exact (@M.add_spec _ _ _ _).",
                        "VernacExtend",
                        "472848c3398fdbf7aaf6e9cc50d75afd92ff6102"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_spec",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "exact (@M.remove_spec _ _ _ _).",
                        "VernacExtend",
                        "dd74bb3d71874a901718ab892f66b30994bc2b19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_spec",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "exact (@M.singleton_spec _ _).",
                        "VernacExtend",
                        "0e4037f572080319fdb22fe97c3f8e06485675bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_spec",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "exact (@M.union_spec _ _ _ _ _).",
                        "VernacExtend",
                        "df75dc0da39bbbd93f0433d3dc7bbdcbb221f576"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_spec",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "exact (@M.inter_spec _ _ _ _ _).",
                        "VernacExtend",
                        "9d97a77311fccaefb2eb2062d26ca33ad7b1fb34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_spec",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "exact (@M.diff_spec _ _ _ _ _).",
                        "VernacExtend",
                        "41d2bb5c164bca0c2389a0384f47d71544cd0368"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_spec",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "exact (@M.fold_spec _).",
                        "VernacExtend",
                        "96bd4d8a4e37660b8917f705a3dfd616ac76761a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_spec",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "exact (@M.cardinal_spec s _).",
                        "VernacExtend",
                        "939cd7b14393438b02889371cd46efe788b89e3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_spec",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "exact (@M.filter_spec _ _ _).",
                        "VernacExtend",
                        "727a1ca8fce826bf3788a75b91e0f4c964050bd5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_spec",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "exact (@M.for_all_spec _ _).",
                        "VernacExtend",
                        "38b3c2d249c69b7012447cef440b4e6c557afa72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_spec",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "exact (@M.exists_spec _ _).",
                        "VernacExtend",
                        "5f0110b568e8d085976935fd6ce1605680a34ed0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec1",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "exact (@M.partition_spec1 _ _).",
                        "VernacExtend",
                        "abc6d21ce9dd3601bddb8788475abd0c9c509ca8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec2",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "exact (@M.partition_spec2 _ _).",
                        "VernacExtend",
                        "4981e986eb3be0adb697b9774d127c53a7a57f24"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec1",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "exact (@M.elements_spec1 _ _).",
                        "VernacExtend",
                        "9cba4dbd0d8f98b55040279b761369e0eb459bb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec2w",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "exact (@M.elements_spec2w _ _).",
                        "VernacExtend",
                        "6c658b613603dd770906bff62c3904aa334b52f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_spec1",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "exact (@M.choose_spec1 _ _).",
                        "VernacExtend",
                        "ba69a4a3344e17b13b23390b24e7bc61eb5948f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_spec2",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "exact (@M.choose_spec2 _).",
                        "VernacExtend",
                        "f897ed78ff6ac749e5d11d6de7c715b86756690e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_strorder",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "constructor ; unfold lt; red.",
                        "VernacExtend",
                        "53f24a443d2c11fc751d0157df7048b338e02e66"
                    ]
                },
                {
                    "command": [
                        "unfold complement.",
                        "VernacExtend",
                        "fe2bc84b0e4e4f5e4891ac3c4e6401eec02a8d9b"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (irreflexivity H).",
                        "VernacExtend",
                        "32522241636ddb1dbe91cfc8c50c77c559cf5ce6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity y; auto.",
                        "VernacExtend",
                        "98739581fbb03aed9d7b38f39c56b0779481d87b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_compat",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "repeat red.",
                        "VernacExtend",
                        "517f28ca1856880bafd07df42d9497606ec92845"
                    ]
                },
                {
                    "command": [
                        "unfold eq, lt.",
                        "VernacExtend",
                        "58db4ca0626565e6772791db348ef4e48dfd3ade"
                    ]
                },
                {
                    "command": [
                        "intros (s1,p1) (s2,p2) E (s1',p1') (s2',p2') E'; simpl.",
                        "VernacExtend",
                        "de7990a14d2dafb4e2784d16e0485ab0d5376b77"
                    ]
                },
                {
                    "command": [
                        "change (M.eq s1 s2) in E.",
                        "VernacExtend",
                        "26907f51ba750d7eb56f5f10d884c2fe1cad95eb"
                    ]
                },
                {
                    "command": [
                        "change (M.eq s1' s2') in E'.",
                        "VernacExtend",
                        "d7afe90874e56dd0ffb1d6844799c2b9c91a3343"
                    ]
                },
                {
                    "command": [
                        "rewrite E,E'; intuition.",
                        "VernacExtend",
                        "92c7559e9f782720f6fbb8ecea9d702637e2db2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_spec",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "unfold compare; destruct (@M.compare_spec s s' _ _); auto.",
                        "VernacExtend",
                        "bdf404e2c91dd0da0fa447e283d2add2e616ff60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec2",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "exact (@M.elements_spec2 _ _).",
                        "VernacExtend",
                        "958fad1cdc8a1a6af383b3db29b600a906cec51f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_spec1",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "exact (@M.min_elt_spec1 _ _).",
                        "VernacExtend",
                        "d14f80c09e109356ad1ea6fbb4dd8c032b3a16b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_spec2",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "exact (@M.min_elt_spec2 _ _ _ _).",
                        "VernacExtend",
                        "5958879f106a89af5f2db2379f9c2a73bef8620f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_spec3",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "exact (@M.min_elt_spec3 _).",
                        "VernacExtend",
                        "96f1c73be67cdd9570931e730110a7c10f46b3f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_spec1",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "exact (@M.max_elt_spec1 _ _).",
                        "VernacExtend",
                        "2d8eeb116aa39888ffb4e8965250566f669ddb44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_spec2",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "exact (@M.max_elt_spec2 _ _ _ _).",
                        "VernacExtend",
                        "fb1518018640d8001fe7dd419793c79508d97222"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_spec3",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "exact (@M.max_elt_spec3 _).",
                        "VernacExtend",
                        "a3765532faf5546af858107b565e77b9b1243867"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_spec3",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "exact (@M.choose_spec3 _ _ _ _ _ _).",
                        "VernacExtend",
                        "405121c07a8f7b1c2791f5ec699559c34605bf87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Proper_instance_0",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "intros x x' Ex s s' Es.",
                        "VernacExtend",
                        "425554d8bdc1bf9c90ed780583429cc92e8e7952"
                    ]
                },
                {
                    "command": [
                        "rewrite Ex.",
                        "VernacExtend",
                        "59ca80af1d92f6f1f16f05de70bd1944b4eba816"
                    ]
                },
                {
                    "command": [
                        "apply Es.",
                        "VernacExtend",
                        "641469b24e3ec6f991037ce72ec5a92d3bae0acf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Proper_instance_1",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "unfold EquivBefore.",
                        "VernacExtend",
                        "b191049502e30d6a7cacfc0632685f7b0d1fe1c5"
                    ]
                },
                {
                    "command": [
                        "intros x x' E s1 s1' E1 s2 s2' E2.",
                        "VernacExtend",
                        "c28a93ab86930bffe254a4f0ce38698bed627c8a"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite E; setoid_rewrite E1; setoid_rewrite E2; intuition.",
                        "VernacExtend",
                        "602d363f7e7e5f7f1be61543db4ca2600887d1bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Proper_instance_2",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "unfold Below.",
                        "VernacExtend",
                        "59d94b398ba65600c849f0837ad78077f77e958e"
                    ]
                },
                {
                    "command": [
                        "intros x x' Ex s s' Es.",
                        "VernacExtend",
                        "425554d8bdc1bf9c90ed780583429cc92e8e7952"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Ex; setoid_rewrite Es; intuition.",
                        "VernacExtend",
                        "97945bb490f8b585280038ed738a049c82b1fccb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Proper_instance_3",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "unfold Above.",
                        "VernacExtend",
                        "a72dbe7d129b79d8f48cb6c357cb008e845cf798"
                    ]
                },
                {
                    "command": [
                        "intros x x' Ex s s' Es.",
                        "VernacExtend",
                        "425554d8bdc1bf9c90ed780583429cc92e8e7952"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Ex; setoid_rewrite Es; intuition.",
                        "VernacExtend",
                        "97945bb490f8b585280038ed738a049c82b1fccb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Proper_instance_4",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "unfold EmptyBetween.",
                        "VernacExtend",
                        "0310e9634776c48519243d63d774f71bf127d740"
                    ]
                },
                {
                    "command": [
                        "intros x x' Ex y y' Ey s s' Es.",
                        "VernacExtend",
                        "d2bde9b4519cf36fe2120ca65a7bbdc536550e03"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Ex; setoid_rewrite Ey; setoid_rewrite Es; intuition.",
                        "VernacExtend",
                        "29c2e0f70d1f797f85207908931298f2dbdd3e89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_empty_r",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "intros s s' Hs' (x & _ & [(IN,_)|(_ & y & IN & _)]).",
                        "VernacExtend",
                        "468ee44d5c63abcea29afbe58ad2b04eb29f2817"
                    ]
                },
                {
                    "command": [
                        "elim (Hs' x IN).",
                        "VernacExtend",
                        "5c4b0d0957369788db8c36b61d9d922107fc18cf"
                    ]
                },
                {
                    "command": [
                        "elim (Hs' y IN).",
                        "VernacExtend",
                        "35430e4320c747ab23897e579df972aa3605b936"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_empty_l",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "intros x s1 s2 s2' Em Ab Ad.",
                        "VernacExtend",
                        "3629281232ba625f5b875a2329e9ca83c4db341d"
                    ]
                },
                {
                    "command": [
                        "exists x; split.",
                        "VernacExtend",
                        "f9266ddab0754060cc1803dfa28547707d7da7dd"
                    ]
                },
                {
                    "command": [
                        "intros y Hy; split; intros IN.",
                        "VernacExtend",
                        "7a65e6fd1fec6644e9b7979809542438f1ced539"
                    ]
                },
                {
                    "command": [
                        "elim (Em y IN).",
                        "VernacExtend",
                        "fddf7ddc21a8b91c7f8382d1528bbc74649733a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad y) in IN; destruct IN as [EQ|IN].",
                        "VernacExtend",
                        "ca7a992d6a5e751b48dddaf0ce6079a361202292"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "specialize (Ab y IN).",
                        "VernacExtend",
                        "43939d08658374707c5d4acc464e7c6118659d8f"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "left; split.",
                        "VernacExtend",
                        "b68a224dbab946d70f6270a1f8a5037821e6e9c2"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad x).",
                        "VernacExtend",
                        "b85249e23ea9c04754a4ad73c15bac9072b54103"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "elim (Em y Hy).",
                        "VernacExtend",
                        "a8e026c7ac1d6a6e78592fa4ad75926287dc05ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_add_lt",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "intros x1 x2 s1 s1' s2 s2' Ab1 Ab2 Ad1 Ad2 LT.",
                        "VernacExtend",
                        "48c1520353d34b30fe9584052f83205a4465448a"
                    ]
                },
                {
                    "command": [
                        "exists x1; split; [ | right; split]; auto.",
                        "VernacExtend",
                        "f8c5d1e23fd7ca55e9d8238eaac898f16f9021b3"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad1 y), (Ad2 y).",
                        "VernacExtend",
                        "16ee3b9a73808bff2b04d9785fcb4b872791d407"
                    ]
                },
                {
                    "command": [
                        "split; intros [U|U]; try order.",
                        "VernacExtend",
                        "f4751270282033d86cfa6a6091d9c803a9ba2e92"
                    ]
                },
                {
                    "command": [
                        "specialize (Ab1 y U).",
                        "VernacExtend",
                        "eefd3a2cead27939dcfdf9f8945356c31ed22aca"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "specialize (Ab2 y U).",
                        "VernacExtend",
                        "861beeb663dd648ac697aada6ef48f79d7e709bd"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad1 x1); auto with *.",
                        "VernacExtend",
                        "561f11cd86438e441718288eb198079d1cc539ba"
                    ]
                },
                {
                    "command": [
                        "exists x2; repeat split; auto.",
                        "VernacExtend",
                        "22ad43dfdd826646752e2c5200d44dd2384cee0f"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad2 x2); now left.",
                        "VernacExtend",
                        "dc388bde03126add92f4f79c4b5f726234412298"
                    ]
                },
                {
                    "command": [
                        "intros y.",
                        "VernacExtend",
                        "d3cd14babe4904577f05dd23b379c589bf67ea40"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad2 y).",
                        "VernacExtend",
                        "5cefbdebdafd04d0e2248fa7d56dd2f743723e12"
                    ]
                },
                {
                    "command": [
                        "intros [U|U].",
                        "VernacExtend",
                        "d2f5ded1fe411060681f19fa71797815b0ee6fdf"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "specialize (Ab2 y U).",
                        "VernacExtend",
                        "861beeb663dd648ac697aada6ef48f79d7e709bd"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_add_eq",
            "line_nb": 522,
            "steps": [
                {
                    "command": [
                        "intros x1 x2 s1 s1' s2 s2' Ab1 Ab2 Ad1 Ad2 Hx (x & EQ & Disj).",
                        "VernacExtend",
                        "d4b1dd457f42ee72f9868e270f003ae37e7bdf69"
                    ]
                },
                {
                    "command": [
                        "assert (O.lt x1 x).",
                        "VernacExtend",
                        "de25a73d40a88e5dee232e50e1b6358fc1b36cdb"
                    ]
                },
                {
                    "command": [
                        "destruct Disj as [(IN,_)|(IN,_)]; auto.",
                        "VernacExtend",
                        "7c82a2b8c204dcf0fcffc91bff0542f40c882875"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx; auto.",
                        "VernacExtend",
                        "a8a655118f76d6cb242ead884f9532023706bdad"
                    ]
                },
                {
                    "command": [
                        "exists x; split.",
                        "VernacExtend",
                        "f9266ddab0754060cc1803dfa28547707d7da7dd"
                    ]
                },
                {
                    "command": [
                        "intros z Hz.",
                        "VernacExtend",
                        "4248c0300130ba18200d4779d5d54ab29d4b84b6"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad1 z), (Ad2 z).",
                        "VernacExtend",
                        "359a3cdd7b4eea76942d6cd1b3a90f802a00ce4b"
                    ]
                },
                {
                    "command": [
                        "split; intros [U|U]; try (left; order); right.",
                        "VernacExtend",
                        "6d42805036368bbcc851809cd1e6d204c6aea1f4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (EQ z); auto.",
                        "VernacExtend",
                        "9fbc7a9ee1c7719c9caaebe98c1622ce17ef4950"
                    ]
                },
                {
                    "command": [
                        "rewrite (EQ z); auto.",
                        "VernacExtend",
                        "a04dfa1f718e1b53f37bfe321bad27484914e96d"
                    ]
                },
                {
                    "command": [
                        "destruct Disj as [(IN,Em)|(IN & y & INy & LTy & Be)].",
                        "VernacExtend",
                        "f0144bc80ec0b97531be91ef6118ea3ac790d37a"
                    ]
                },
                {
                    "command": [
                        "left; split; auto.",
                        "VernacExtend",
                        "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad2 x); auto.",
                        "VernacExtend",
                        "a0e1c979086a661cabf5f95c90d8638c5cb58156"
                    ]
                },
                {
                    "command": [
                        "intros z.",
                        "VernacExtend",
                        "82bb9cf582454326fafaf47a12d759aa1a4692c0"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad1 z); intros [U|U]; try specialize (Ab1 z U); auto; order.",
                        "VernacExtend",
                        "19abb162795a7d4a7dc07f6ba4334b32453e1756"
                    ]
                },
                {
                    "command": [
                        "right; split; auto.",
                        "VernacExtend",
                        "1cc5054ad1405940e563f1d7ddce468251301130"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad1 x); auto.",
                        "VernacExtend",
                        "13c18ff3c4a867e8f65766a3410fcf003a254a29"
                    ]
                },
                {
                    "command": [
                        "exists y; repeat split; auto.",
                        "VernacExtend",
                        "62db8dfa988008e003fcd3ef63ad28a980186535"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad2 y); auto.",
                        "VernacExtend",
                        "b91ccf92e0a3e39c12812eded38abcbe256313c5"
                    ]
                },
                {
                    "command": [
                        "intros z.",
                        "VernacExtend",
                        "82bb9cf582454326fafaf47a12d759aa1a4692c0"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ad2 z).",
                        "VernacExtend",
                        "acc3d8c0162f13d2fcf28966cc86cb144ffe20cf"
                    ]
                },
                {
                    "command": [
                        "intros [U|U]; try specialize (Ab2 z U); auto; order.",
                        "VernacExtend",
                        "656835e605b659e5f7a5e09a2e6a3aaa48cdfc63"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_compat'",
            "line_nb": 581,
            "steps": [
                {
                    "command": [
                        "apply proper_sym_impl_iff_2; auto with *.",
                        "VernacExtend",
                        "eee994524435b39e51e978935650dd48d24678a0"
                    ]
                },
                {
                    "command": [
                        "intros s1 s1' E1 s2 s2' E2 H.",
                        "VernacExtend",
                        "74fa9debdc5d64de002756561de9227cfd641827"
                    ]
                },
                {
                    "command": [
                        "revert s1' E1 s2' E2.",
                        "VernacExtend",
                        "8890d9896f4df46bda13e05bcb3796e256d7dd86"
                    ]
                },
                {
                    "command": [
                        "induction H; intros; inversion_clear E1; inversion_clear E2.",
                        "VernacExtend",
                        "93052f1fca01a6442bfb2a45b31ce45bddc810ee"
                    ]
                },
                {
                    "command": [
                        "constructor 1.",
                        "VernacExtend",
                        "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
                    ]
                },
                {
                    "command": [
                        "constructor 2.",
                        "VernacExtend",
                        "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
                    ]
                },
                {
                    "command": [
                        "MO.order.",
                        "VernacExtend",
                        "4bf5e65d2dc958bb31b04c3f1538564b8a9123eb"
                    ]
                },
                {
                    "command": [
                        "constructor 3.",
                        "VernacExtend",
                        "fc203c31040684912422f2b19644a4136ee46779"
                    ]
                },
                {
                    "command": [
                        "MO.order.",
                        "VernacExtend",
                        "4bf5e65d2dc958bb31b04c3f1538564b8a9123eb"
                    ]
                },
                {
                    "command": [
                        "unfold lt in *; auto.",
                        "VernacExtend",
                        "c031b1152c431dd72ac533ad03545d61da92047a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_cons",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "unfold eq; intros l1 l2 x y Exy E12 z.",
                        "VernacExtend",
                        "f67cfdd1d2ef761398e9757b6207790c8db3bc90"
                    ]
                },
                {
                    "command": [
                        "split; inversion_clear 1.",
                        "VernacExtend",
                        "9d9a645a047b6620f0de5b93a8fdd7e691fe06a4"
                    ]
                },
                {
                    "command": [
                        "left; MO.order.",
                        "VernacExtend",
                        "2a11b580661d281ff5e59096c596d2bb7b3a7429"
                    ]
                },
                {
                    "command": [
                        "right; rewrite <- E12; auto.",
                        "VernacExtend",
                        "92584501db6f994df40a3f76a05a2c73e7d58039"
                    ]
                },
                {
                    "command": [
                        "left; MO.order.",
                        "VernacExtend",
                        "2a11b580661d281ff5e59096c596d2bb7b3a7429"
                    ]
                },
                {
                    "command": [
                        "right; rewrite E12; auto.",
                        "VernacExtend",
                        "24bb976a945bff0525d209447d15c5e7db2e555e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cons_CompSpec",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "destruct c; simpl; inversion_clear 2; auto with relations.",
                        "VernacExtend",
                        "af75868047bf9a002225272a0141ca6daf122a9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}