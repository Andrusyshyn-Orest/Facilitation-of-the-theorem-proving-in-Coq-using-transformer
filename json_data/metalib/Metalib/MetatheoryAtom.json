{
    "filename": "Metalib/MetatheoryAtom.v",
    "coq_project": "metalib",
    "vernac_cmds": [
        [
            "Require Import Coq.Arith.Arith.",
            "VernacRequire",
            "b49308ec6684e45c9ea6cf40956f6c798f9946c8"
        ],
        [
            "Require Import Coq.Arith.Max.",
            "VernacRequire",
            "912df90d3b09d155dcb66d52df14492104222e75"
        ],
        [
            "Require Import Coq.Classes.EquivDec.",
            "VernacRequire",
            "bc8fdd4058899aeb2ad18521d0a2496a87cd9eb2"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import Coq.Structures.Equalities.",
            "VernacRequire",
            "50a9ef1210381a38f70f804471f592366756d677"
        ],
        [
            "Require Import Coq.FSets.FSets.",
            "VernacRequire",
            "087320b7512a4eabe609d101fe29222b8aff2010"
        ],
        [
            "Require Import Metalib.CoqListFacts.",
            "VernacRequire",
            "ec35e58e9a4a49ed13794ebccb0bc5b0e8202139"
        ],
        [
            "Require Import Metalib.FSetExtra.",
            "VernacRequire",
            "530262b19f24a86089b83c7cbdbec56b2283bb61"
        ],
        [
            "Require Import Metalib.FSetWeakNotin.",
            "VernacRequire",
            "fe97f3894f411f4024c567f9a9440f05fff3f02f"
        ],
        [
            "Require Import Metalib.LibTactics.",
            "VernacRequire",
            "8e8885110aa13ffd9c085e4c523cffb673baff23"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Module Type ATOM <: UsualDecidableType.",
            "VernacDeclareModuleType",
            "8384c9953156c49f2f8b63d46f13a6f9c52bc730"
        ],
        [
            "Parameter atom : Set.",
            "VernacAssumption",
            "55f02001d0f513777bab20d75146ccdda0904710"
        ],
        [
            "Definition t := atom.",
            "VernacDefinition",
            "66b78039b194643d664b182c2b61cb518975cb55"
        ],
        [
            "Parameter eq_dec : forall x y : atom, {x = y} + {x <> y}.",
            "VernacAssumption",
            "903a6694914613664550505ac62120941ad0b67b"
        ],
        [
            "Parameter atom_fresh_for_list : forall (xs : list t), {x : atom | ~ List.In x xs}.",
            "VernacAssumption",
            "2b746a6143cb419d3fa7fb39eeedf39a40602667"
        ],
        [
            "Parameter fresh : list atom -> atom.",
            "VernacAssumption",
            "b9c5fe0e74056752f021c8d144fa9ef994988838"
        ],
        [
            "Parameter fresh_not_in : forall l, ~ In (fresh l) l.",
            "VernacAssumption",
            "3df3cafd80db6d08512e26fb650890db6b463f06"
        ],
        [
            "Parameter nat_of : atom -> nat.",
            "VernacAssumption",
            "782503d15c097037dc9712fa9f54507980cb7fdf"
        ],
        [
            "Hint Resolve eq_dec.",
            "VernacHints",
            "0119da69f6eddae0b67f18ae34f2d925c2a429d8"
        ],
        [
            "Include HasUsualEq <+ UsualIsEq <+ UsualIsEqOrig.",
            "VernacInclude",
            "f98904251badc342ca75ab2467bba4b0f53e6459"
        ],
        [
            "End ATOM.",
            "VernacEndSegment",
            "c630be373517be535a90dbdecba1cefb924de214"
        ],
        [
            "Module Atom : ATOM.",
            "VernacDefineModule",
            "010946cad5ec8d23fd1a4443a5594d5a1579947d"
        ],
        [
            "Definition atom := nat.",
            "VernacDefinition",
            "e781402e6a1d8607a3629d67ab17c5deb982f207"
        ],
        [
            "Definition t := atom.",
            "VernacDefinition",
            "66b78039b194643d664b182c2b61cb518975cb55"
        ],
        [
            "Definition eq_dec := eq_nat_dec.",
            "VernacDefinition",
            "4f88535414919a306f714a931c70e6a10c16f876"
        ],
        [
            "Lemma max_lt_r : forall x y z, x <= z -> x <= max y z.",
            "VernacStartTheoremProof",
            "41edf3e27054051bbf1daa7ccb169a331b2b7f79"
        ],
        [
            "induction x.",
            "VernacExtend",
            "8d91f99bf5ea35862c5721d2308df13dc2f7aeed"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "induction y.",
            "VernacExtend",
            "d6d7b76a39671d0de814fb34abc77f598dfd2ad2"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction z.",
            "VernacExtend",
            "2b8f15cb845844eff050f5123b2412495256a96a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_list_max : forall (xs : list nat), { n : nat | forall x, List.In x xs -> x <= n }.",
            "VernacStartTheoremProof",
            "3e944db9271e893c19b74b49ef109d29e2ca4faa"
        ],
        [
            "induction xs as [ | x xs [y H] ].",
            "VernacExtend",
            "4c784c5077bbb25d8f86f4eee28c1b06313f0a5b"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "exists (max x y).",
            "VernacExtend",
            "627f1f23c52cc5f77f08d8cf638509dc4f6bdeb0"
        ],
        [
            "intros z J.",
            "VernacExtend",
            "5c3a13d579a2473f39c886d057ee9621d1287dc0"
        ],
        [
            "simpl in J.",
            "VernacExtend",
            "5707b418e203c27e610463abda92c43674f1926a"
        ],
        [
            "destruct J as [K | K].",
            "VernacExtend",
            "a388c9487e77e4e7fec80f21963f66b8a39c6a67"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "auto using max_lt_r.",
            "VernacExtend",
            "34b072582ccd9833a3c736830b7044ad49350ae6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atom_fresh_for_list : forall (xs : list nat), { n : nat | ~ List.In n xs }.",
            "VernacStartTheoremProof",
            "23531eafd9c112c1d370b915ed35c50d3e71a2fe"
        ],
        [
            "intros xs.",
            "VernacExtend",
            "873f079db5d753f8e2691680970396382aad77ab"
        ],
        [
            "destruct (nat_list_max xs) as [x H].",
            "VernacExtend",
            "949d4697e4ec577d6237845ba178b1bc0bfd92d5"
        ],
        [
            "exists (S x).",
            "VernacExtend",
            "c5d310bb9fb2e4d9fb08e2368472953be7992543"
        ],
        [
            "intros J.",
            "VernacExtend",
            "50593f13b5cd160d6b0f7bbb0aeb5e81db5bef88"
        ],
        [
            "lapply (H (S x)).",
            "VernacExtend",
            "f06aa9f6ccdb8b5e1a4774ee7a27c8fd0c860904"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fresh (l : list atom) := match atom_fresh_for_list l with (exist _ x _) => x end.",
            "VernacDefinition",
            "fdd5d76ef6a9a2af336262b0bd121830e933af56"
        ],
        [
            "Lemma fresh_not_in : forall l, ~ In (fresh l) l.",
            "VernacStartTheoremProof",
            "ef59a5c93939116aa8b4486f3ad82c06590a441a"
        ],
        [
            "intro l.",
            "VernacExtend",
            "c8139627914eb6a3cf51966a8a1d73a6c51f81e7"
        ],
        [
            "unfold fresh.",
            "VernacExtend",
            "a80a1996843417652e0b623bb1960e9f088d9d0d"
        ],
        [
            "destruct atom_fresh_for_list.",
            "VernacExtend",
            "41b245e17f5843c313b99fda3f9cc7e3d1196b10"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nat_of := fun (x : atom) => x.",
            "VernacDefinition",
            "94cfd8ed171592678a7f3ee8be09ae20cb597aa1"
        ],
        [
            "Include HasUsualEq <+ UsualIsEq <+ UsualIsEqOrig.",
            "VernacInclude",
            "f98904251badc342ca75ab2467bba4b0f53e6459"
        ],
        [
            "End Atom.",
            "VernacEndSegment",
            "f2625b960d3ce17d35c3c04df4df9acd0dd4c4c8"
        ],
        [
            "Notation atom := Atom.atom.",
            "VernacSyntacticDefinition",
            "287a7b2c50d6378cf42dcd92e75ee9e43fa49516"
        ],
        [
            "Notation fresh := Atom.fresh.",
            "VernacSyntacticDefinition",
            "afb4ab0f5015c35ed64688d972e2bedeed954a6a"
        ],
        [
            "Notation fresh_not_in := Atom.fresh_not_in.",
            "VernacSyntacticDefinition",
            "9e8366c4a0a97fcb859ce93d31262fa2b2e8cf56"
        ],
        [
            "Notation atom_fresh_for_list := Atom.atom_fresh_for_list.",
            "VernacSyntacticDefinition",
            "13a59b445670c63dcbf29b2556c3512d9d3e2308"
        ],
        [
            "Global Arguments Atom.eq /.",
            "VernacArguments",
            "57e9a06cff0451473529ddd73faf6ec453bb6e97"
        ],
        [
            "Instance EqDec_atom : @EqDec atom eq eq_equivalence.",
            "VernacInstance",
            "9feedac77b3089fc1fc79a95f213d6a68efdbdcf"
        ],
        [
            "exact Atom.eq_dec.",
            "VernacExtend",
            "4336f1280eeee3bdec1ee9fae60f76e320688ea2"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Module Import AtomSetImpl : FSetExtra.WSfun Atom := FSetExtra.Make Atom.",
            "VernacDefineModule",
            "df4d3b13a2fafa1dc89778dab0bdb49690687a4d"
        ],
        [
            "Notation atoms := AtomSetImpl.t.",
            "VernacSyntacticDefinition",
            "9329688f787512f83a8bd193314642a3b19f0fc5"
        ],
        [
            "Module Export AtomSetDecide := Coq.FSets.FSetDecide.WDecide_fun Atom AtomSetImpl.",
            "VernacDefineModule",
            "c527ebc08a2f43c8af123748c46a468de4e9f2a4"
        ],
        [
            "Module Export AtomSetNotin := FSetWeakNotin.Notin_fun Atom AtomSetImpl.",
            "VernacDefineModule",
            "46ac2663624f36b322c06cf584b427267da08d6f"
        ],
        [
            "Module AtomSetFacts := FSetFacts.WFacts_fun Atom AtomSetImpl.",
            "VernacDefineModule",
            "8b94ffbc250589bb0c9d2671cdbf40697c0bdf2d"
        ],
        [
            "Module AtomSetProperties := FSetProperties.WProperties_fun Atom AtomSetImpl.",
            "VernacDefineModule",
            "dc27e4b9e7210eae979c5ba30e7cc05e9b7a52b8"
        ],
        [
            "Export AtomSetFacts.",
            "VernacImport",
            "e92be8b78f663dbdacfe3eb1e984fe483bf15479"
        ],
        [
            "Lemma atom_fresh : forall L : atoms, { x : atom | ~ In x L }.",
            "VernacStartTheoremProof",
            "d151bc53da7e40ac902fcc20f4df728b9d7e152a"
        ],
        [
            "intros L.",
            "VernacExtend",
            "4d0ead99e5500524d672749e7e23c096ce1d5409"
        ],
        [
            "destruct (atom_fresh_for_list (elements L)) as [a H].",
            "VernacExtend",
            "c0147d0ddec7d5f3a3245de4dcc46afff483cfd5"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "intros J.",
            "VernacExtend",
            "50593f13b5cd160d6b0f7bbb0aeb5e81db5bef88"
        ],
        [
            "contradiction H.",
            "VernacExtend",
            "9921ae0c19723fc5886b29e1f0df9d58a7efc3f6"
        ],
        [
            "rewrite <- CoqListFacts.InA_iff_In.",
            "VernacExtend",
            "9bee812e2edbf37c6bfdfc8649afdb01e925d05d"
        ],
        [
            "auto using elements_1.",
            "VernacExtend",
            "7324ee3c526c01c077975324b986b53df5a0364f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac simplify_list_of_atom_sets L := let L := eval simpl in L in let L := ltac_remove_dups L in let L := eval simpl in (List.fold_right union empty L) in match L with | context C [union ?E empty] => context C [ E ] end.",
            "VernacExtend",
            "55fe24b8879b5d70fad207f477d17880f3c620b4"
        ],
        [
            "Ltac gather_atoms_with F := let apply_arg x := match type of F with | _ -> _ -> _ -> _ => constr:(@F _ _ x) | _ -> _ -> _ => constr:(@F _ x) | _ -> _ => constr:(@F x) end in let rec gather V := match goal with | H : _ |- _ => let FH := apply_arg H in match V with | context [FH] => fail 1 | _ => gather (union FH V) end | _ => V end in let L := gather empty in eval simpl in L.",
            "VernacExtend",
            "22d792575953b3020097883024d40e3d72ba87b1"
        ],
        [
            "Ltac beautify_fset V := let rec go Acc E := match E with | union ?E1 ?E2 => let Acc2 := go Acc E2 in go Acc2 E1 | empty => Acc | ?E1 => match Acc with | empty => E1 | _ => constr:(union E1 Acc) end end in go empty V.",
            "VernacExtend",
            "6fb7d870995bb4c1ef8ca455a37461919b3d2914"
        ],
        [
            "Ltac gather_atoms := constr:(empty).",
            "VernacExtend",
            "7b057f38f9af62fcb6f93a9193f5ca1a66d76520"
        ],
        [
            "Tactic Notation \"pick\" \"fresh\" ident(Y) \"for\" constr(L) := let Fr := fresh \"Fr\" in let L := beautify_fset L in (destruct (atom_fresh L) as [Y Fr]).",
            "VernacExtend",
            "4e582b9b181ed854a8f23ec3860fee2bf79d4c2e"
        ],
        [
            "Tactic Notation \"pick\" \"fresh\" ident(Y) := let L := gather_atoms in pick fresh Y for L.",
            "VernacExtend",
            "f583654c866e95baf442561d968a12d18be87511"
        ],
        [
            "Ltac pick_fresh y := pick fresh y.",
            "VernacExtend",
            "3f2213be28933cba9c4bfa2e9e31ddbb2284fb4f"
        ],
        [
            "Ltac gather_atoms ::= let A := gather_atoms_with (fun x : atoms => x) in let B := gather_atoms_with (fun x : atom => singleton x) in constr:(union A B).",
            "VernacExtend",
            "fa9834c1e1c8ef347487cccbd8e2e6f3da89b229"
        ],
        [
            "Lemma example_pick_fresh_use : forall (x y z : atom) (L1 L2 L3: atoms), True.",
            "VernacStartTheoremProof",
            "0166a54c0821d78f41d289bf30f933a2bc426a3f"
        ],
        [
            "intros x y z L1 L2 L3.",
            "VernacExtend",
            "03f4f4a4baf73312cee50560d6769969f94fa166"
        ],
        [
            "pick fresh k.",
            "VernacExtend",
            "4673429fb3e4f63b55c8fbc15809cca71e4c324d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "max_lt_r",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "induction x.",
                        "VernacExtend",
                        "8d91f99bf5ea35862c5721d2308df13dc2f7aeed"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "induction y.",
                        "VernacExtend",
                        "d6d7b76a39671d0de814fb34abc77f598dfd2ad2"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction z.",
                        "VernacExtend",
                        "2b8f15cb845844eff050f5123b2412495256a96a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_list_max",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "induction xs as [ | x xs [y H] ].",
                        "VernacExtend",
                        "4c784c5077bbb25d8f86f4eee28c1b06313f0a5b"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "exists (max x y).",
                        "VernacExtend",
                        "627f1f23c52cc5f77f08d8cf638509dc4f6bdeb0"
                    ]
                },
                {
                    "command": [
                        "intros z J.",
                        "VernacExtend",
                        "5c3a13d579a2473f39c886d057ee9621d1287dc0"
                    ]
                },
                {
                    "command": [
                        "simpl in J.",
                        "VernacExtend",
                        "5707b418e203c27e610463abda92c43674f1926a"
                    ]
                },
                {
                    "command": [
                        "destruct J as [K | K].",
                        "VernacExtend",
                        "a388c9487e77e4e7fec80f21963f66b8a39c6a67"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "auto using max_lt_r.",
                        "VernacExtend",
                        "34b072582ccd9833a3c736830b7044ad49350ae6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atom_fresh_for_list",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros xs.",
                        "VernacExtend",
                        "873f079db5d753f8e2691680970396382aad77ab"
                    ]
                },
                {
                    "command": [
                        "destruct (nat_list_max xs) as [x H].",
                        "VernacExtend",
                        "949d4697e4ec577d6237845ba178b1bc0bfd92d5"
                    ]
                },
                {
                    "command": [
                        "exists (S x).",
                        "VernacExtend",
                        "c5d310bb9fb2e4d9fb08e2368472953be7992543"
                    ]
                },
                {
                    "command": [
                        "intros J.",
                        "VernacExtend",
                        "50593f13b5cd160d6b0f7bbb0aeb5e81db5bef88"
                    ]
                },
                {
                    "command": [
                        "lapply (H (S x)).",
                        "VernacExtend",
                        "f06aa9f6ccdb8b5e1a4774ee7a27c8fd0c860904"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fresh_not_in",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intro l.",
                        "VernacExtend",
                        "c8139627914eb6a3cf51966a8a1d73a6c51f81e7"
                    ]
                },
                {
                    "command": [
                        "unfold fresh.",
                        "VernacExtend",
                        "a80a1996843417652e0b623bb1960e9f088d9d0d"
                    ]
                },
                {
                    "command": [
                        "destruct atom_fresh_for_list.",
                        "VernacExtend",
                        "41b245e17f5843c313b99fda3f9cc7e3d1196b10"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EqDec_atom",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "exact Atom.eq_dec.",
                        "VernacExtend",
                        "4336f1280eeee3bdec1ee9fae60f76e320688ea2"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "atom_fresh",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intros L.",
                        "VernacExtend",
                        "4d0ead99e5500524d672749e7e23c096ce1d5409"
                    ]
                },
                {
                    "command": [
                        "destruct (atom_fresh_for_list (elements L)) as [a H].",
                        "VernacExtend",
                        "c0147d0ddec7d5f3a3245de4dcc46afff483cfd5"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "intros J.",
                        "VernacExtend",
                        "50593f13b5cd160d6b0f7bbb0aeb5e81db5bef88"
                    ]
                },
                {
                    "command": [
                        "contradiction H.",
                        "VernacExtend",
                        "9921ae0c19723fc5886b29e1f0df9d58a7efc3f6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- CoqListFacts.InA_iff_In.",
                        "VernacExtend",
                        "9bee812e2edbf37c6bfdfc8649afdb01e925d05d"
                    ]
                },
                {
                    "command": [
                        "auto using elements_1.",
                        "VernacExtend",
                        "7324ee3c526c01c077975324b986b53df5a0364f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "example_pick_fresh_use",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros x y z L1 L2 L3.",
                        "VernacExtend",
                        "03f4f4a4baf73312cee50560d6769969f94fa166"
                    ]
                },
                {
                    "command": [
                        "pick fresh k.",
                        "VernacExtend",
                        "4673429fb3e4f63b55c8fbc15809cca71e4c324d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}