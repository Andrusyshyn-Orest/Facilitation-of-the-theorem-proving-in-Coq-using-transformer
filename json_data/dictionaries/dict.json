{
    "filename": "dict.v",
    "coq_project": "dictionaries",
    "vernac_cmds": [
        [
            "Require Import Relations.",
            "VernacRequire",
            "e1c772579226dab59a43a462d5506decc27ae0bb"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Set Asymmetric Patterns.",
            "VernacSetOption",
            "3fcd9e746ba5a1aabd289acfb9ab99bec474567d"
        ],
        [
            "Unset Standard Proposition Elimination Names.",
            "VernacUnsetOption",
            "911574cdf91989455d0d3d11c7a9b0ca10fd1ae6"
        ],
        [
            "Module Type DICT.",
            "VernacDeclareModuleType",
            "224edc7fc901853941bf1edc35d8a7f1d32fee11"
        ],
        [
            "Parameter key : Set.",
            "VernacAssumption",
            "33205a822bb4ecfec865f768e4e1581fb2d72a22"
        ],
        [
            "Parameter data : Set.",
            "VernacAssumption",
            "14aacc0fc404fc29593fe6ce02f3270fda087a7f"
        ],
        [
            "Parameter dict : Set.",
            "VernacAssumption",
            "11298147d2c6956ad88abd786a0db961c1ad9db1"
        ],
        [
            "Parameter empty : dict.",
            "VernacAssumption",
            "b6683756360407e2be244a9f9b685cc91aa6e95f"
        ],
        [
            "Parameter add : key -> data -> dict -> dict.",
            "VernacAssumption",
            "1501ade20f8827ebd7f47864c3f001908e25f7eb"
        ],
        [
            "Parameter find : key -> dict -> option data.",
            "VernacAssumption",
            "62d0c3d4ecaecd916eba8e8e5d106416863a868d"
        ],
        [
            "Axiom empty_def : forall k : key, find k empty = None.",
            "VernacAssumption",
            "9f48fb97a3b81e552ef96a3687aee7f91af5c2bf"
        ],
        [
            "Axiom success : forall (d : dict) (k : key) (v : data), find k (add k v d) = Some v.",
            "VernacAssumption",
            "e545c1960d29d8d414f2f276a98090e8c0a1eb4d"
        ],
        [
            "Axiom diff_key : forall (d : dict) (k k' : key) (v : data), k <> k' -> find k (add k' v d) = find k d.",
            "VernacAssumption",
            "2638b3260ef4ff8d31e4ee3618125782d5270435"
        ],
        [
            "End DICT.",
            "VernacEndSegment",
            "ec8eb631bfc1c5a082bc2d890576b781ad51f163"
        ],
        [
            "Module Type DICT_PLUS.",
            "VernacDeclareModuleType",
            "1d32ba1bf794b57ef01341ad8d0d100bfcbf23b9"
        ],
        [
            "Declare Module Dict : DICT.",
            "VernacDeclareModule",
            "96b274a8cc0a6a827a91bb4cc95e2e5a84156f5b"
        ],
        [
            "Parameter build : list (Dict.key * Dict.data) -> Dict.dict.",
            "VernacAssumption",
            "fd7b65f5335fe14799d6c32e1ae0c5f5d5918377"
        ],
        [
            "End DICT_PLUS.",
            "VernacEndSegment",
            "fd814f99069644d65f374c36af0b4183e376d698"
        ],
        [
            "Module Dict_Plus (D: DICT) : DICT_PLUS with Module Dict := D.",
            "VernacDefineModule",
            "fc7c2e0b444fd213ff84e40b7e7f2ea56924d929"
        ],
        [
            "Module Dict := D.",
            "VernacDefineModule",
            "f9f81b96daa3e41a7fcdc4639c7722a742a737db"
        ],
        [
            "Definition key := D.key.",
            "VernacDefinition",
            "317ed083b334af58e32e1960b950f69f3ea14696"
        ],
        [
            "Definition data := D.data.",
            "VernacDefinition",
            "e0f15da19b0db3372bcb2b1de15b1e67bab51f13"
        ],
        [
            "Definition dict := D.dict.",
            "VernacDefinition",
            "b25903d85ec0a0dca9d5a8581fe3393cbe34ab69"
        ],
        [
            "Definition add := D.add.",
            "VernacDefinition",
            "8a5e09832c93bc871609299df5497ccc29f80356"
        ],
        [
            "Definition empty := D.empty.",
            "VernacDefinition",
            "341afc64cdadbb180099c2a9d8999365179931f1"
        ],
        [
            "Fixpoint addlist (l : list (key * data)) : dict -> dict := fun d : dict => match l with | nil => d | p :: l' => match p with | (k, v) => addlist l' (add k v d) end end.",
            "VernacFixpoint",
            "f178c1ced7536794e24fac317fb82b9f22d8936a"
        ],
        [
            "Definition build (l : list (key * data)) := addlist l empty.",
            "VernacDefinition",
            "9b739b5d345a58773bb508db275907843d3892c4"
        ],
        [
            "End Dict_Plus.",
            "VernacEndSegment",
            "cef77dda9720c8d60b85b377bb52b60c677a66f7"
        ],
        [
            "Module Type KEY.",
            "VernacDeclareModuleType",
            "de92cfc93f25d5c13bba050404efefd10d2981c6"
        ],
        [
            "Parameter A : Set.",
            "VernacAssumption",
            "ad49613e3e06a860e67ad90a6908a12f3d1bd21e"
        ],
        [
            "Parameter eqdec : forall a b : A, {a = b} + {a <> b}.",
            "VernacAssumption",
            "cf9c81fee36e69304809cd16e07f86f6436ea6d1"
        ],
        [
            "End KEY.",
            "VernacEndSegment",
            "0697b3c00d535b5e234c2e87ced5ee4d355a1fec"
        ],
        [
            "Module LKey (K: KEY) : KEY with Definition A := list K.A.",
            "VernacDefineModule",
            "21223f339aacbc92b6eae97d18f481d72b3ac806"
        ],
        [
            "Definition A := list K.A.",
            "VernacDefinition",
            "245b05cfa792564d56494f7db0603068909b09c0"
        ],
        [
            "Definition eqdec : forall a b : A, {a = b} + {a <> b}.",
            "VernacDefinition",
            "ea8b578c9ee56dc4d2603dadb11c2b121c5b190c"
        ],
        [
            "intro a; elim a.",
            "VernacExtend",
            "53c92e225ea23758d272f477efef13908ff9e3ff"
        ],
        [
            "simple induction b; [ left; auto | right; red in |- *; discriminate 1 ].",
            "VernacExtend",
            "f0d23aced911b4777a98dbf0e034c5a994d307d9"
        ],
        [
            "intros a0 k Ha; simple induction b.",
            "VernacExtend",
            "f8b71bf9235a77e2939cef4b35a8edbf4bec17ba"
        ],
        [
            "right; red in |- *; discriminate 1.",
            "VernacExtend",
            "4c66d656f8284ec3b0fc2235c875fd450406e2cf"
        ],
        [
            "intros a1 l0 s; case (K.eqdec a0 a1); intro H0.",
            "VernacExtend",
            "f0475ce6271e9fe131d961026b99b7b5f18c666c"
        ],
        [
            "case (Ha l0); intro H1.",
            "VernacExtend",
            "d100bbd82b42afb70b31f734270bb2f76bf77074"
        ],
        [
            "left; rewrite H1; rewrite H0; auto.",
            "VernacExtend",
            "254cbe939d6079c7b016acc0fb6f7301797b4608"
        ],
        [
            "right; red in |- *; injection 1.",
            "VernacExtend",
            "a37fc6c936f070359172ca02e19653c87c5312ad"
        ],
        [
            "intro H3; case (H1 H3).",
            "VernacExtend",
            "57c71b0b8c6b49de4ec88e64f3fae60e54852008"
        ],
        [
            "right; red in |- *; injection 1.",
            "VernacExtend",
            "a37fc6c936f070359172ca02e19653c87c5312ad"
        ],
        [
            "intros H3 H4; case (H0 H4).",
            "VernacExtend",
            "dd91c441709820289d83172acda19b110cdaedab"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End LKey.",
            "VernacEndSegment",
            "7a967cf263d13202aad13c87f385f587c3f41099"
        ],
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "Module ZKey : KEY with Definition A := Z.",
            "VernacDefineModule",
            "5a947191d0b5d72d7b3c2d8cd39dfdd015a26655"
        ],
        [
            "Definition A := Z.",
            "VernacDefinition",
            "219a3f9b604b79fcd699cc5a8168bcd30701a61f"
        ],
        [
            "Definition eqdec := Z_eq_dec.",
            "VernacDefinition",
            "032b06aeab5f77e25783e966df9191ce71d1e485"
        ],
        [
            "End ZKey.",
            "VernacEndSegment",
            "0086f62866fa59143690a650ad66cc1b0a8343e7"
        ],
        [
            "Module LZKey := LKey ZKey.",
            "VernacDefineModule",
            "b15dfe33f2fbe276a0db0b7f9532386f78eeac00"
        ],
        [
            "Module PairKey (K1: KEY) (K2: KEY) : KEY with Definition A := (K1.A * K2.A)%type.",
            "VernacDefineModule",
            "1761138efe711afa4ff0e3ed1863831929c28f4d"
        ],
        [
            "Definition A := (K1.A * K2.A)%type.",
            "VernacDefinition",
            "9daf91a45d6f7317ed3211bf754b3ac13e0024ab"
        ],
        [
            "Definition eqdec : forall a b : A, {a = b} + {a <> b}.",
            "VernacDefinition",
            "ea8b578c9ee56dc4d2603dadb11c2b121c5b190c"
        ],
        [
            "simple destruct a.",
            "VernacExtend",
            "38a190bf4b2fa01a6794f717af353cd62729e7c7"
        ],
        [
            "intros a0 a1; simple destruct b; intros b0 b1.",
            "VernacExtend",
            "fed8b7731e362ee878dab9dc94614472975d9f0c"
        ],
        [
            "case (K1.eqdec a0 b0); intro H; case (K2.eqdec a1 b1); intro H0; [ left | right | right | right ]; try (rewrite H; rewrite H0; trivial); red in |- *; intro H1; injection H1; tauto.",
            "VernacExtend",
            "cf0f0438f771461199c8baaeb8351cf8e3011424"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End PairKey.",
            "VernacEndSegment",
            "9c47a624cc9fed0b78e67a14b8a66daceeaf2aa0"
        ],
        [
            "Module Type DEC_ORDER.",
            "VernacDeclareModuleType",
            "834076711f973fbe3e3aadf8e4e680719d4f3ede"
        ],
        [
            "Parameter A : Set.",
            "VernacAssumption",
            "ad49613e3e06a860e67ad90a6908a12f3d1bd21e"
        ],
        [
            "Parameter le : A -> A -> Prop.",
            "VernacAssumption",
            "25bc003009a4fd8ee57ef80454ed12c4c3cdaadd"
        ],
        [
            "Parameter lt : A -> A -> Prop.",
            "VernacAssumption",
            "8de96fa19f27e147b016de2efef41c73db965d8c"
        ],
        [
            "Axiom ordered : order A le.",
            "VernacAssumption",
            "2c9083edd05db612c93c451c02c0eb95bd348b87"
        ],
        [
            "Axiom lt_le_weak : forall a b : A, lt a b -> le a b.",
            "VernacAssumption",
            "73f42725609ddeb4d36c04b055b114ab9c557a0f"
        ],
        [
            "Axiom lt_diff : forall a b : A, lt a b -> a <> b.",
            "VernacAssumption",
            "2cbef979b63faac579df4da4e7592f231ff78cf3"
        ],
        [
            "Axiom le_lt_or_eq : forall a b : A, le a b -> lt a b \\/ a = b.",
            "VernacAssumption",
            "211d0d6c11bac305adda7066f04588d5dc2ac7e4"
        ],
        [
            "Parameter lt_eq_lt_dec : forall a b : A, {lt a b} + {a = b} + {lt b a}.",
            "VernacAssumption",
            "be39ce1ce40fcae6426b77e41812841174833905"
        ],
        [
            "End DEC_ORDER.",
            "VernacEndSegment",
            "14092d78384961527ad048308361b3804eba804d"
        ],
        [
            "Module Type MORE_DEC_ORDERS.",
            "VernacDeclareModuleType",
            "6be602e6453bbbacd5b561d2393dacb65575975c"
        ],
        [
            "Parameter A : Set.",
            "VernacAssumption",
            "ad49613e3e06a860e67ad90a6908a12f3d1bd21e"
        ],
        [
            "Parameter le : A -> A -> Prop.",
            "VernacAssumption",
            "25bc003009a4fd8ee57ef80454ed12c4c3cdaadd"
        ],
        [
            "Parameter lt : A -> A -> Prop.",
            "VernacAssumption",
            "8de96fa19f27e147b016de2efef41c73db965d8c"
        ],
        [
            "Axiom le_trans : transitive A le.",
            "VernacAssumption",
            "f6f14e9ec47d925304e3f3c76311ea45b9f4f08e"
        ],
        [
            "Axiom le_refl : reflexive A le.",
            "VernacAssumption",
            "2628d4b0efa8c27cb2714b68c52879ab567e39fe"
        ],
        [
            "Axiom le_antisym : antisymmetric A le.",
            "VernacAssumption",
            "386372b3aeb31579cb208ba28920a902b3bd11ec"
        ],
        [
            "Axiom lt_irreflexive : forall a : A, ~ lt a a.",
            "VernacAssumption",
            "5088d3c3eeb310d82d78c27953c9f8713d29dbee"
        ],
        [
            "Axiom lt_trans : transitive A lt.",
            "VernacAssumption",
            "776bf5d8b11d7b01d6fdc023d4ef5d15870d3c60"
        ],
        [
            "Axiom lt_not_le : forall a b : A, lt a b -> ~ le b a.",
            "VernacAssumption",
            "3670c1e6cb3cd485d8b58d7dd7e88d0e42fe9eb0"
        ],
        [
            "Axiom le_not_lt : forall a b : A, le a b -> ~ lt b a.",
            "VernacAssumption",
            "7a585ebea778130dd60da9d448c9a3965da9190c"
        ],
        [
            "Axiom lt_intro : forall a b : A, le a b -> a <> b -> lt a b.",
            "VernacAssumption",
            "0eee2c3234965c196e03679ddf6527bb3ae7bcf0"
        ],
        [
            "Parameter le_lt_dec : forall a b : A, {le a b} + {lt b a}.",
            "VernacAssumption",
            "533dd043f06feeae2c57d6b38bac951f9938f8ce"
        ],
        [
            "Parameter le_lt_eq_dec : forall a b : A, le a b -> {lt a b} + {a = b}.",
            "VernacAssumption",
            "eb4095e578b1f8c1e831b30c6d3613fc7428f261"
        ],
        [
            "End MORE_DEC_ORDERS.",
            "VernacEndSegment",
            "049bb4c11be7d5f32196b9af9978f0269fec5f41"
        ],
        [
            "Module More_Dec_Orders (D: DEC_ORDER) : MORE_DEC_ORDERS with Definition A := D.A with Definition le := D.le with Definition lt := D.lt.",
            "VernacDefineModule",
            "388dd9e39f0a0436721ab0d7280a9ce3fdcb63ab"
        ],
        [
            "Definition A := D.A.",
            "VernacDefinition",
            "369695e66c18282c5bd736f002f6b4bf8c5ae800"
        ],
        [
            "Definition le := D.le.",
            "VernacDefinition",
            "146768dcaccbca50f961f16bcbd16d0dddc2ed96"
        ],
        [
            "Definition lt := D.lt.",
            "VernacDefinition",
            "2e6fe8103b8f6aa9f7a1c65b41650922fb469602"
        ],
        [
            "Theorem le_trans : transitive A le.",
            "VernacStartTheoremProof",
            "16095a7920548aedc2ea65dc106110a971599aa0"
        ],
        [
            "case D.ordered; auto.",
            "VernacExtend",
            "70b6d088c76f729e3dcb106869663e292b61cbd0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_refl : reflexive A le.",
            "VernacStartTheoremProof",
            "6298137e4e385f69e36464cc5a9386271491faf3"
        ],
        [
            "case D.ordered; auto.",
            "VernacExtend",
            "70b6d088c76f729e3dcb106869663e292b61cbd0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_antisym : antisymmetric A le.",
            "VernacStartTheoremProof",
            "893b37fc8f9198dc526d2af5c261c0ce9f3f873e"
        ],
        [
            "case D.ordered; auto.",
            "VernacExtend",
            "70b6d088c76f729e3dcb106869663e292b61cbd0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_intro : forall a b : A, le a b -> a <> b -> lt a b.",
            "VernacStartTheoremProof",
            "8f0af331067b20bf8b1974fd04ec61de69633233"
        ],
        [
            "intros a b H diff; case (D.le_lt_or_eq a b H); tauto.",
            "VernacExtend",
            "97419a271bf3506b55d4c186f92469c61ad42ecd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_irreflexive : forall a : A, ~ lt a a.",
            "VernacStartTheoremProof",
            "2a3f2ccb90c2e2830aa7b1b44abf72e98a6329cd"
        ],
        [
            "intros a H.",
            "VernacExtend",
            "05f717e61df7036f33bd440c2184c00a6aaab4f4"
        ],
        [
            "case (D.lt_diff _ _ H); trivial.",
            "VernacExtend",
            "d1329388cf6aaf4d3a193744281c227219586f7b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_not_le : forall a b : A, lt a b -> ~ le b a.",
            "VernacStartTheoremProof",
            "5bf6838b08f9f0bdd8561e8f0a55111dd544ab8b"
        ],
        [
            "intros a b H H0.",
            "VernacExtend",
            "0068560b75bf8729aedcec2539874c6e57c806c0"
        ],
        [
            "absurd (a = b).",
            "VernacExtend",
            "969ecf02691e289051332e9375adc4b86d96acf5"
        ],
        [
            "apply D.lt_diff; trivial.",
            "VernacExtend",
            "7c6565f6022325cc6f3db7f1a176769d3cad902e"
        ],
        [
            "apply le_antisym; auto; apply D.lt_le_weak; assumption.",
            "VernacExtend",
            "43c82718a88f8f5e29e12c8e2cdb76f7c4255dab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_not_lt : forall a b : A, le a b -> ~ lt b a.",
            "VernacStartTheoremProof",
            "7fefe0494fcf7aa2dc56d29b50b5c4c6456de3d1"
        ],
        [
            "intros a b H H0; apply (lt_not_le b a); auto.",
            "VernacExtend",
            "d3e3488453f70c56c94a99bc83978e8b74339bb3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_trans : transitive A lt.",
            "VernacStartTheoremProof",
            "b138240d1047fb77266db0c758006b8d4f10f63c"
        ],
        [
            "unfold A, transitive in |- *.",
            "VernacExtend",
            "42dac538ab4d3470d7b6de6fbe160e0391567a1b"
        ],
        [
            "intros x y z H H0.",
            "VernacExtend",
            "e3efc5a99a7ff0a8a181c2450705aeea02fe6de0"
        ],
        [
            "apply (lt_intro x z).",
            "VernacExtend",
            "02674da0f229530972f51fbea30d9340b067cfd0"
        ],
        [
            "apply le_trans with y; apply D.lt_le_weak; assumption.",
            "VernacExtend",
            "7f67823cda55b4b8ac358545e1e90d253ead0f82"
        ],
        [
            "intro e; rewrite e in H.",
            "VernacExtend",
            "21cad5fc7b01630cac23d1643ff820b04d3d2ab8"
        ],
        [
            "absurd (y = z).",
            "VernacExtend",
            "030f28bd6ed06abc3fc7a85b83f4ace7813b719c"
        ],
        [
            "intro e'; rewrite e' in H.",
            "VernacExtend",
            "9ca0b2122303ef7439c0c3b15969eca767fe8c89"
        ],
        [
            "apply (lt_irreflexive _ H).",
            "VernacExtend",
            "e86d9249cce0c47428083335f4aa9e74bde4064e"
        ],
        [
            "apply le_antisym; apply D.lt_le_weak; trivial.",
            "VernacExtend",
            "854a0a09963058bee4a79350bc279d44814982dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition le_lt_dec : forall a b : A, {le a b} + {lt b a}.",
            "VernacDefinition",
            "d27da28f0f91db20d4efb983b70c779321417bc8"
        ],
        [
            "intros a b; case (D.lt_eq_lt_dec a b).",
            "VernacExtend",
            "974a28b76536135a5a78916ffa22982896158c93"
        ],
        [
            "intro d; case d; auto.",
            "VernacExtend",
            "91cc62200543a3ff3fad9868efc5ef6e0e361561"
        ],
        [
            "left; apply D.lt_le_weak; trivial.",
            "VernacExtend",
            "67b99ec625ae784e8bf485ecb8681fb496110dc4"
        ],
        [
            "simple induction 1; left; apply le_refl.",
            "VernacExtend",
            "84470f09c4c091bcf51188e61b77d6238c43cebe"
        ],
        [
            "right; trivial.",
            "VernacExtend",
            "0340ad4c708a2ae89a0d63d55c2e24a5dd555b53"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition le_lt_eq_dec : forall a b : A, le a b -> {lt a b} + {a = b}.",
            "VernacDefinition",
            "f7308222cc9642439fa9baab5eec90d1fa199b92"
        ],
        [
            "intros a b H.",
            "VernacExtend",
            "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
        ],
        [
            "case (D.lt_eq_lt_dec a b).",
            "VernacExtend",
            "492498a8e604e494c36c9c878a92187d490c24b0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intro H0; case (le_not_lt a b H H0).",
            "VernacExtend",
            "b475ce5ad4dbe8dfa82646ed07aed013db5b28b4"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End More_Dec_Orders.",
            "VernacEndSegment",
            "4713721ada4bb991dc919b05da484a42f2c917c5"
        ],
        [
            "Module Forget_Order (D: DEC_ORDER) : KEY with Definition A := D.A.",
            "VernacDefineModule",
            "c11ec366bbc7406f5212e22d7a6439e98be33629"
        ],
        [
            "Module M := More_Dec_Orders D.",
            "VernacDefineModule",
            "88dba23e8ecb734fc6d786c71f32f3a2803e4b9d"
        ],
        [
            "Definition A := D.A.",
            "VernacDefinition",
            "369695e66c18282c5bd736f002f6b4bf8c5ae800"
        ],
        [
            "Definition eqdec : forall a b : A, {a = b} + {a <> b}.",
            "VernacDefinition",
            "ea8b578c9ee56dc4d2603dadb11c2b121c5b190c"
        ],
        [
            "intros a b; case (D.lt_eq_lt_dec a b).",
            "VernacExtend",
            "974a28b76536135a5a78916ffa22982896158c93"
        ],
        [
            "intro H; case H.",
            "VernacExtend",
            "ecf751413e06256802e24bf80fa689637a616d13"
        ],
        [
            "right; apply D.lt_diff; auto.",
            "VernacExtend",
            "ed6ed1d4e61b5381ccd60a59f4208627ccd79639"
        ],
        [
            "left; trivial.",
            "VernacExtend",
            "2f1efd67ff23560c270a9589d0d1b100a9c80732"
        ],
        [
            "intro d; right.",
            "VernacExtend",
            "eabd9b6b662ad16a03ec289bb096257266cc9f1a"
        ],
        [
            "intro e; rewrite e in d.",
            "VernacExtend",
            "d7d516165336aef06811127fbccf7837842e7076"
        ],
        [
            "apply (M.lt_irreflexive b); auto.",
            "VernacExtend",
            "15122770c672ef7cbe86f2c783c92d585842d44c"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Forget_Order.",
            "VernacEndSegment",
            "64b3c3212a0061978c7e39d51eadb39c0d7c78ca"
        ],
        [
            "Module Lexico (D1: DEC_ORDER) (D2: DEC_ORDER) <: DEC_ORDER with Definition A := (D1.A * D2.A)%type.",
            "VernacDefineModule",
            "2875d13d6b2a3e2eebc2c426da3cf0ca42fd59cd"
        ],
        [
            "Module M1 := More_Dec_Orders D1.",
            "VernacDefineModule",
            "c841aaf932969cf369ddd100ed1e7ceb84530986"
        ],
        [
            "Module M2 := More_Dec_Orders D2.",
            "VernacDefineModule",
            "b36122e2155e6c2144e9cdb0572866f1b2c20a07"
        ],
        [
            "Definition A := (D1.A * D2.A)%type.",
            "VernacDefinition",
            "e0084135d53e02c9c810bd180ffe118793e92231"
        ],
        [
            "Definition le (a b : A) : Prop := let (a1, a2) := a in let (b1, b2) := b in D1.lt a1 b1 \\/ a1 = b1 /\\ D2.le a2 b2.",
            "VernacDefinition",
            "b8f12e39731d806ae6dcdec01ec835a290473ba3"
        ],
        [
            "Definition lt (a b : A) : Prop := let (a1, a2) := a in let (b1, b2) := b in D1.lt a1 b1 \\/ a1 = b1 /\\ D2.lt a2 b2.",
            "VernacDefinition",
            "5490a3b858fcc6dde523d5e090ee1f9130bb7f1b"
        ],
        [
            "Theorem ordered : order A le.",
            "VernacStartTheoremProof",
            "c9cdc1130ed03eb4b9669dd336b3516f91213d68"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold reflexive in |- *; intros.",
            "VernacExtend",
            "6606671ec6aa9c57f8aca0bad6f2cd6145c0a4ab"
        ],
        [
            "unfold le in |- *; case x.",
            "VernacExtend",
            "ab7ea3d87ea24c4d3867786fae48c209b12d1299"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split; [ trivial | apply M2.le_refl; auto ].",
            "VernacExtend",
            "1a096d73867018bb0b9cc4a5f4f3fcd7227637db"
        ],
        [
            "unfold le, transitive in |- *.",
            "VernacExtend",
            "5fea580794021297c700bf6ffb642a831ac4724c"
        ],
        [
            "simple destruct x; simple destruct y; simple destruct z.",
            "VernacExtend",
            "44e959856b1a1ff33cd0fc05d8157d6f233ccb4b"
        ],
        [
            "simple destruct 1; intro H1.",
            "VernacExtend",
            "ee3b2813a67e9176cf22ae53047ab2fa6796e43b"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply M1.lt_trans.",
            "VernacExtend",
            "e5ba1e714c2572c8ec3f4532d12642f9e2f4b911"
        ],
        [
            "eexact H1.",
            "VernacExtend",
            "21b04217cf88e4b061715fae463d042a3bceba22"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case H1; intros e H3; rewrite e; auto.",
            "VernacExtend",
            "88d434167e287d5657a3d73c725952c32e6f0154"
        ],
        [
            "case H1; intros e H3; rewrite e; auto.",
            "VernacExtend",
            "88d434167e287d5657a3d73c725952c32e6f0154"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split; try auto.",
            "VernacExtend",
            "739e71f9438b4396235f07035cdc13e03774a328"
        ],
        [
            "eapply M2.le_trans; eauto.",
            "VernacExtend",
            "c27460e781016c3befd48506b5296a7305e12acf"
        ],
        [
            "unfold antisymmetric, A, le in |- *.",
            "VernacExtend",
            "bf882b0c6def20e5a707d2dfa4db9d83a7ab00d6"
        ],
        [
            "simple destruct x; simple destruct y.",
            "VernacExtend",
            "40b11190b1acd4fb67c8bd43461cb5b71a6badea"
        ],
        [
            "simple destruct 1; simple destruct 2.",
            "VernacExtend",
            "b859c12d57fe9237371fe82606cb52c31b9c097b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (D1.lt a1 a1).",
            "VernacExtend",
            "774c02b2941481cc79f13538be83f8a96f8f61c8"
        ],
        [
            "apply M1.lt_irreflexive.",
            "VernacExtend",
            "8c76ae643a9ccd36f3d47953fc715603799ccc47"
        ],
        [
            "eapply M1.lt_trans; eauto.",
            "VernacExtend",
            "b40b8f724910c494875f00bfbffa1232da706ddb"
        ],
        [
            "simple destruct 1; intros e H3.",
            "VernacExtend",
            "a4ee56cc8d38c9a3882269db2a56ba2b8cb72451"
        ],
        [
            "rewrite e in H0.",
            "VernacExtend",
            "668bc25fa6349d62b5143e2344195feb426a98ee"
        ],
        [
            "case (M1.lt_irreflexive a H0).",
            "VernacExtend",
            "12c8d1ead95ccc0f8c845672e455fc844a1ae9fd"
        ],
        [
            "case H0; intros e H3.",
            "VernacExtend",
            "7efe5233f0f2d0a1c1bf8880e310e3eb94ab2029"
        ],
        [
            "rewrite e; intro H2.",
            "VernacExtend",
            "c8af0a53fa9b7617deba3e455c10691bb88b36c6"
        ],
        [
            "case (M1.lt_irreflexive a1 H2).",
            "VernacExtend",
            "359553c2bf0a02bc465524d2dc84acf463b1e849"
        ],
        [
            "simple destruct 1; intros e H3; rewrite e.",
            "VernacExtend",
            "616a71a00aef4375657cd5c0c59d04f4c22d2022"
        ],
        [
            "case (M2.le_antisym a2 a0).",
            "VernacExtend",
            "1a1038000ed4be4350629a5773c8361160cc2dd9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "case H0; auto.",
            "VernacExtend",
            "c08cf893bc87a000152ecd8c1b2259db34e16901"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_le_weak : forall a b : A, lt a b -> le a b.",
            "VernacStartTheoremProof",
            "33edf9b8930aa8167b01c19557840f67caea1857"
        ],
        [
            "unfold A, lt, le in |- *; intros a b; case a; case b.",
            "VernacExtend",
            "c71d29e4170ba369339ac369421e6e8750c8f5a0"
        ],
        [
            "simple destruct 1; intros; auto.",
            "VernacExtend",
            "a1341d766e70f6135a065cdea888b17d8083ff90"
        ],
        [
            "right; case H0; split; auto.",
            "VernacExtend",
            "b5d6bb27c4ac5e47b9899c9fe763f7a785c43884"
        ],
        [
            "apply D2.lt_le_weak; trivial.",
            "VernacExtend",
            "4472527a527c9d2be5a3074648758e3595f2e2a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_diff : forall a b : A, lt a b -> a <> b.",
            "VernacStartTheoremProof",
            "f300d774244195c75024670b879b91ecc33d3809"
        ],
        [
            "unfold A, lt, le in |- *; intros a b; case a; case b.",
            "VernacExtend",
            "c71d29e4170ba369339ac369421e6e8750c8f5a0"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "intro H0; red in |- *; injection 1.",
            "VernacExtend",
            "40552595dc0d686c3451e52e745b90bebc83c801"
        ],
        [
            "intros e1 e2; rewrite e2 in H0.",
            "VernacExtend",
            "91d626fd69524fd022f8329024a96d3199fbe471"
        ],
        [
            "case (M1.lt_irreflexive a0 H0).",
            "VernacExtend",
            "bd065244d7c94c091ffd079c7617720c6d47aed0"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "intro H2; red in |- *; injection 1.",
            "VernacExtend",
            "6f33c97140cecb858aa8aa08308268a2e0f660e8"
        ],
        [
            "intro e; rewrite e in H2; case (M2.lt_irreflexive _ H2).",
            "VernacExtend",
            "721c8c04f684d162ceacca1a26408167c82c9fc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_lt_or_eq : forall a b : A, le a b -> lt a b \\/ a = b.",
            "VernacStartTheoremProof",
            "f04e7310e460c3458973768202ef56b678427b41"
        ],
        [
            "unfold A, lt, le in |- *; intros a b; case a; case b.",
            "VernacExtend",
            "c71d29e4170ba369339ac369421e6e8750c8f5a0"
        ],
        [
            "simple destruct 1; auto.",
            "VernacExtend",
            "bdd248a9ebbc813e3c99757d956e231d57bbf5a4"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "intro H2; case (D2.le_lt_or_eq _ _ H2).",
            "VernacExtend",
            "5f85f85e05c44bbb9d1ac5b4357d2d442be12042"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lt_eq_lt_dec : forall a b : A, {lt a b} + {a = b} + {lt b a}.",
            "VernacDefinition",
            "812d67061174482df60b059dbf354e14d88b6b99"
        ],
        [
            "unfold A, lt in |- *; intros.",
            "VernacExtend",
            "0cf4382ed5b76df9c0837fd804c37c02dc1a393c"
        ],
        [
            "case a; case b.",
            "VernacExtend",
            "7ac34e55966471449c0c4fc5c0cdde4cfbeff966"
        ],
        [
            "intros a0 a1 a2 a3.",
            "VernacExtend",
            "22ba81de7c26b9c5099c45f99589f3d2cc0c0519"
        ],
        [
            "case (D1.lt_eq_lt_dec a0 a2).",
            "VernacExtend",
            "6fb7d60d4e1d6f22274ac02a7a03e2e2f328b1d3"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "case (D2.lt_eq_lt_dec a1 a3).",
            "VernacExtend",
            "479185ce646173e886466a107d2b0a846fd6ffd3"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "left; right; trivial.",
            "VernacExtend",
            "741e85476a217763f79729a76a39ea1af71f7d1c"
        ],
        [
            "left; left; auto.",
            "VernacExtend",
            "f6cf51484f8300856a7ad6e00e325892f97d0caf"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Lexico.",
            "VernacEndSegment",
            "f2ae0c2d60cce9abc2208f2ca81225011ba6de5c"
        ],
        [
            "Module Sum_Order (O1: DEC_ORDER) (O2: DEC_ORDER) <: DEC_ORDER with Definition A := (O1.A + O2.A)%type.",
            "VernacDefineModule",
            "b97707e92786abca3161182a98ce34b60c9e5ada"
        ],
        [
            "Definition A := (O1.A + O2.A)%type.",
            "VernacDefinition",
            "eee4648993f6875db08b4b7d5ff759516322783c"
        ],
        [
            "Definition le (a b : A) : Prop := match a with | inl a' => match b with | inl b' => O1.le a' b' | _ => True end | inr a' => match b with | inr b' => O2.le a' b' | _ => False end end.",
            "VernacDefinition",
            "39b4744de24bc0b3e951c31358b6a6615bec046f"
        ],
        [
            "Definition lt (a b : A) : Prop := match a with | inl a' => match b with | inl b' => O1.lt a' b' | _ => True end | inr a' => match b with | inr b' => O2.lt a' b' | _ => False end end.",
            "VernacDefinition",
            "573946ba176fddf7747dc668cea6355a98e4ff30"
        ],
        [
            "Module M1 := More_Dec_Orders O1.",
            "VernacDefineModule",
            "edef29c32f5dcfc349fdff5980238c2ba0566a4d"
        ],
        [
            "Module M2 := More_Dec_Orders O2.",
            "VernacDefineModule",
            "6e7c8476de0b654b3d6f662a37624abdf1637489"
        ],
        [
            "Theorem ordered : order A le.",
            "VernacStartTheoremProof",
            "c9cdc1130ed03eb4b9669dd336b3516f91213d68"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold reflexive in |- *; intros.",
            "VernacExtend",
            "6606671ec6aa9c57f8aca0bad6f2cd6145c0a4ab"
        ],
        [
            "unfold le in |- *.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "case x.",
            "VernacExtend",
            "ff73d135d2805abb527daeb7acd470185a7b2435"
        ],
        [
            "exact M1.le_refl.",
            "VernacExtend",
            "1df89cf440c8711b84c4806a3a42c36c58ab3860"
        ],
        [
            "exact M2.le_refl.",
            "VernacExtend",
            "7b1c419cf9fca97ae16acf004aacbffe6acc98ed"
        ],
        [
            "unfold le in |- *.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "unfold transitive in |- *.",
            "VernacExtend",
            "f25ed909ae05b72c02b7cf56db312c5d032e3c19"
        ],
        [
            "simple destruct x; simple destruct y; simple destruct z.",
            "VernacExtend",
            "44e959856b1a1ff33cd0fc05d8157d6f233ccb4b"
        ],
        [
            "intros; eapply M1.le_trans; eauto.",
            "VernacExtend",
            "4a97c2b14259aaef8efb16ad8f147ba90fe1acab"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros; eapply M2.le_trans; eauto.",
            "VernacExtend",
            "d5f99f9f0e4c8498d47360ca073d3a278fb98da1"
        ],
        [
            "unfold antisymmetric, A, le in |- *.",
            "VernacExtend",
            "bf882b0c6def20e5a707d2dfa4db9d83a7ab00d6"
        ],
        [
            "simple destruct x; simple destruct y.",
            "VernacExtend",
            "40b11190b1acd4fb67c8bd43461cb5b71a6badea"
        ],
        [
            "intros a0 H0 H1; rewrite (M1.le_antisym _ _ H0 H1).",
            "VernacExtend",
            "289748acf59ea80778040b520e06860df82b6136"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intros a0 H0 H1; rewrite (M2.le_antisym _ _ H0 H1).",
            "VernacExtend",
            "2061c944edb5a6bc59c3a73194f52b65c4e30ef6"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_le_weak : forall a b : A, lt a b -> le a b.",
            "VernacStartTheoremProof",
            "33edf9b8930aa8167b01c19557840f67caea1857"
        ],
        [
            "unfold A, lt, le in |- *; intros a b.",
            "VernacExtend",
            "2dd2223275da7d82f61652dfa76df99f03833414"
        ],
        [
            "case a; case b; auto.",
            "VernacExtend",
            "5744bd22a39ee510f3d37cb6dd00ddb79ca09f11"
        ],
        [
            "intros; apply O1.lt_le_weak; trivial.",
            "VernacExtend",
            "e21d72b19b3df62f5d9c896e34d55ec563151f61"
        ],
        [
            "intros; apply O2.lt_le_weak; trivial.",
            "VernacExtend",
            "80e24c5955aa975af40b89fec8702132bc968293"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_diff : forall a b : A, lt a b -> a <> b.",
            "VernacStartTheoremProof",
            "f300d774244195c75024670b879b91ecc33d3809"
        ],
        [
            "unfold lt in |- *; simple destruct a; simple destruct b.",
            "VernacExtend",
            "d67a119a1c9079661a15318107ef4ab7ef728c89"
        ],
        [
            "intros a1 H e; injection e; intro e'.",
            "VernacExtend",
            "bea01fb49537d526f8ad59c1c746c576c8accf03"
        ],
        [
            "case (O1.lt_diff _ _ H e').",
            "VernacExtend",
            "7e15fcb9d831b617e44893c8ed3e396167f8b7e9"
        ],
        [
            "intros a1 H e; discriminate e.",
            "VernacExtend",
            "7c5945c77340f0f039a0a1318e58d7f96e66de80"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intros a1 H e; injection e; intro e'.",
            "VernacExtend",
            "bea01fb49537d526f8ad59c1c746c576c8accf03"
        ],
        [
            "case (O2.lt_diff _ _ H e').",
            "VernacExtend",
            "66b35ba87e0a8c72f93d96de2520c4367a2f1b04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_lt_or_eq : forall a b : A, le a b -> lt a b \\/ a = b.",
            "VernacStartTheoremProof",
            "f04e7310e460c3458973768202ef56b678427b41"
        ],
        [
            "unfold A, lt, le in |- *; intros a b; case a; case b.",
            "VernacExtend",
            "c71d29e4170ba369339ac369421e6e8750c8f5a0"
        ],
        [
            "intros a0 a1 H; case (O1.le_lt_or_eq a1 a0 H).",
            "VernacExtend",
            "3fec86ca12017fce574d7fb10d560878ce32fe12"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simple destruct 1; auto.",
            "VernacExtend",
            "bdd248a9ebbc813e3c99757d956e231d57bbf5a4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intros a0 a1 H; case (O2.le_lt_or_eq a1 a0 H); auto.",
            "VernacExtend",
            "e84cd951e100bd9f9f155118aeed5b86d9a83c56"
        ],
        [
            "simple destruct 1; auto.",
            "VernacExtend",
            "bdd248a9ebbc813e3c99757d956e231d57bbf5a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lt_eq_lt_dec : forall a b : A, {lt a b} + {a = b} + {lt b a}.",
            "VernacDefinition",
            "812d67061174482df60b059dbf354e14d88b6b99"
        ],
        [
            "unfold A, lt in |- *; intros.",
            "VernacExtend",
            "0cf4382ed5b76df9c0837fd804c37c02dc1a393c"
        ],
        [
            "case a; case b.",
            "VernacExtend",
            "7ac34e55966471449c0c4fc5c0cdde4cfbeff966"
        ],
        [
            "intros a0 a1.",
            "VernacExtend",
            "7f256543d37dc848f6ad7d96af56b6220aebaad1"
        ],
        [
            "case (O1.lt_eq_lt_dec a0 a1).",
            "VernacExtend",
            "567feb296d5ed9430a990dd09a50a27aaa1d0be3"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "left; trivial.",
            "VernacExtend",
            "2f1efd67ff23560c270a9589d0d1b100a9c80732"
        ],
        [
            "left; trivial.",
            "VernacExtend",
            "2f1efd67ff23560c270a9589d0d1b100a9c80732"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros a0 a1.",
            "VernacExtend",
            "7f256543d37dc848f6ad7d96af56b6220aebaad1"
        ],
        [
            "case (O2.lt_eq_lt_dec a0 a1).",
            "VernacExtend",
            "26c05819262c1fc9adf1e9cc04f6234e39e84e08"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Sum_Order.",
            "VernacEndSegment",
            "071b6a39e9053da67add54780f031539c73eebf5"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Module Nat_Order : DEC_ORDER with Definition A := nat with Definition le := le with Definition lt := lt.",
            "VernacDefineModule",
            "d71b952b6da88a9c429721fdd98d9751c6478509"
        ],
        [
            "Definition A := nat.",
            "VernacDefinition",
            "482eac68bfe24d0fcd8b521339fc9275af43535d"
        ],
        [
            "Definition le := le.",
            "VernacDefinition",
            "40507379fded5d0608426a74ee908ea01faa44c7"
        ],
        [
            "Definition lt := lt.",
            "VernacDefinition",
            "9a9ba3478b35dec451a8185d13a239b05c2717a9"
        ],
        [
            "Theorem ordered : order A le.",
            "VernacStartTheoremProof",
            "c9cdc1130ed03eb4b9669dd336b3516f91213d68"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold A, le, reflexive in |- *; auto with arith.",
            "VernacExtend",
            "19da828f17ad6e98683ef096c9bb98178fffd4d8"
        ],
        [
            "unfold A, le, transitive in |- *; eauto with arith.",
            "VernacExtend",
            "273bfdfa233065092062994b8830f4a574ff5e5d"
        ],
        [
            "unfold A, le, antisymmetric in |- *; eauto with arith.",
            "VernacExtend",
            "b80dffa1e2937740fe31a50bc56b0488139abd0e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_le_weak : forall a b : A, lt a b -> le a b.",
            "VernacStartTheoremProof",
            "33edf9b8930aa8167b01c19557840f67caea1857"
        ],
        [
            "unfold A in |- *; exact lt_le_weak.",
            "VernacExtend",
            "7dffc729afbdeb3e769cbef80ac7701c01312c4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_diff : forall a b : A, lt a b -> a <> b.",
            "VernacStartTheoremProof",
            "f300d774244195c75024670b879b91ecc33d3809"
        ],
        [
            "unfold A, lt, le in |- *; intros a b H e.",
            "VernacExtend",
            "26c64f654563d29cb3881e133a8fcfbbac0c4c13"
        ],
        [
            "rewrite e in H.",
            "VernacExtend",
            "3cced324f66c706c063fed120eb850f59f4df0d4"
        ],
        [
            "case (lt_irrefl b H).",
            "VernacExtend",
            "3694f3010023f8fb816c29b256b1dca4c415ace9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_lt_or_eq : forall a b : A, le a b -> lt a b \\/ a = b.",
            "VernacStartTheoremProof",
            "f04e7310e460c3458973768202ef56b678427b41"
        ],
        [
            "unfold A, le, lt in |- *.",
            "VernacExtend",
            "06bc1828f4616dee285267a630c6cdc107a0b8dd"
        ],
        [
            "exact le_lt_or_eq.",
            "VernacExtend",
            "1f9f52765c81cb575503d11062af70359ab5e701"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lt_eq_lt_dec : forall a b : A, {lt a b} + {a = b} + {lt b a} := lt_eq_lt_dec.",
            "VernacDefinition",
            "22f95e5dc4f35c4f174f86d464b1a81c3c4b9e11"
        ],
        [
            "End Nat_Order.",
            "VernacEndSegment",
            "4e1db4ccd2fca06e275a40b803df6f780f96bc95"
        ],
        [
            "Definition bool_le (b b' : bool) := if b then if b' then True else False else True.",
            "VernacDefinition",
            "a3372ac4ca542ccdbbd995c42625816127e2e018"
        ],
        [
            "Definition bool_lt (b b' : bool) := if b then False else if b' then True else False.",
            "VernacDefinition",
            "6d051e1c07983232cea4c29bf1338be4d0824d12"
        ],
        [
            "Module Bool_Order : DEC_ORDER with Definition A := bool with Definition le := bool_le with Definition lt := bool_lt.",
            "VernacDefineModule",
            "a7d7e44766d49e0bb0f69f6e6cbea0e051db0247"
        ],
        [
            "Definition A := bool.",
            "VernacDefinition",
            "70c8974ecf0e45f9a1866e5061caa35cdf976631"
        ],
        [
            "Definition le := bool_le.",
            "VernacDefinition",
            "9227911dce2cdc4e18d648cf6cb5d020fce3f850"
        ],
        [
            "Definition lt := bool_lt.",
            "VernacDefinition",
            "167b58a802159dec1a99cc7a5caafcae38df0ca9"
        ],
        [
            "Theorem ordered : order A le.",
            "VernacStartTheoremProof",
            "c9cdc1130ed03eb4b9669dd336b3516f91213d68"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold A, le, reflexive in |- *.",
            "VernacExtend",
            "b2ce3199f8166a2d438e48d7ac76798bd3ce09b7"
        ],
        [
            "intro x; case x; simpl in |- *; auto.",
            "VernacExtend",
            "9b19024f5d04b984d8820bc62625f8952a38c937"
        ],
        [
            "unfold A, le, transitive in |- *; simple destruct x; simple destruct y; auto; simple destruct z; auto.",
            "VernacExtend",
            "f5fa91ee9ddefb21d411ce5ffd58d0f46fb5bba7"
        ],
        [
            "unfold A, le, antisymmetric in |- *; simple destruct x; simple destruct y; simpl in |- *; auto; contradiction.",
            "VernacExtend",
            "2f2413195479066c5ada9a58936fac72440a7449"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_le_weak : forall a b : A, lt a b -> le a b.",
            "VernacStartTheoremProof",
            "33edf9b8930aa8167b01c19557840f67caea1857"
        ],
        [
            "unfold A, lt, le in |- *; simple destruct a; simple destruct b; simpl in |- *; tauto.",
            "VernacExtend",
            "65a05882902266b16e0074487c1ed7acabbb47a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_diff : forall a b : A, lt a b -> a <> b.",
            "VernacStartTheoremProof",
            "f300d774244195c75024670b879b91ecc33d3809"
        ],
        [
            "unfold A, lt, bool_lt in |- *; simple destruct a; simple destruct b; auto.",
            "VernacExtend",
            "5e6b284fc23383b2f58bd8f7cfbd64cc4377d448"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_lt_or_eq : forall a b : A, le a b -> lt a b \\/ a = b.",
            "VernacStartTheoremProof",
            "f04e7310e460c3458973768202ef56b678427b41"
        ],
        [
            "unfold A, le, lt, bool_lt in |- *; simple destruct a; simple destruct b; auto.",
            "VernacExtend",
            "6beaf59024848ecdedae78f8f2489f27d112a31f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lt_eq_lt_dec : forall a b : A, {lt a b} + {a = b} + {lt b a}.",
            "VernacDefinition",
            "812d67061174482df60b059dbf354e14d88b6b99"
        ],
        [
            "unfold A, le, lt, bool_lt in |- *; simple destruct a; simple destruct b; auto.",
            "VernacExtend",
            "6beaf59024848ecdedae78f8f2489f27d112a31f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Bool_Order.",
            "VernacEndSegment",
            "3c120b4e8795678a78040460137a54cd018d3981"
        ],
        [
            "Module Type DATA.",
            "VernacDeclareModuleType",
            "6a215d99ae01fb89b4c71eef12e0daf03d2a13c8"
        ],
        [
            "Parameter data : Set.",
            "VernacAssumption",
            "14aacc0fc404fc29593fe6ce02f3270fda087a7f"
        ],
        [
            "End DATA.",
            "VernacEndSegment",
            "8469e4fc66879378848f79b3ac1c1904a7a3a4c6"
        ],
        [
            "Module TrivialDict (Key: KEY) (Val: DATA) : DICT with Definition key := Key.A with Definition data := Val.data.",
            "VernacDefineModule",
            "4c47b0700917cf2ef0ccc2ad98f1dad1739707c5"
        ],
        [
            "Definition key := Key.A.",
            "VernacDefinition",
            "93e16bb1f58a6feb8c8ece99891d945bf091c107"
        ],
        [
            "Definition data := Val.data.",
            "VernacDefinition",
            "b141bfd775596751a9b513246b248ddb97a1e143"
        ],
        [
            "Definition dict := key -> option data.",
            "VernacDefinition",
            "b9f5ee22f5e598582adc49649489acf081f98f17"
        ],
        [
            "Definition empty (k : key) := None (A:=data).",
            "VernacDefinition",
            "5d625dd526467871759e8e17f1413faef6bfe3b6"
        ],
        [
            "Definition find (k : key) (d : dict) := d k.",
            "VernacDefinition",
            "5c62824fa528f8c18f20b550ba4c1c4606aaf47d"
        ],
        [
            "Definition add (k : key) (v : data) (d : dict) : dict := fun k' : key => match Key.eqdec k' k with | left _ => Some v | right _ => d k' end.",
            "VernacDefinition",
            "7e75790d9f65351b4b1f07b45085f552a60c84aa"
        ],
        [
            "Theorem empty_def : forall k : key, find k empty = None.",
            "VernacStartTheoremProof",
            "73809374e5a7c8e5e048b240371c29fe9ba8a181"
        ],
        [
            "unfold find, empty in |- *; auto.",
            "VernacExtend",
            "b695816ac93c19b3c0f95663bfece310da2f7fb5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem success : forall (d : dict) (k : key) (v : data), find k (add k v d) = Some v.",
            "VernacStartTheoremProof",
            "f64e6b6c7543d5e43f621a27b9cdd8546d77ff30"
        ],
        [
            "unfold find, add in |- *; intros d k v.",
            "VernacExtend",
            "f3b63d0ad442d1127a31c04284e722cd93ea32aa"
        ],
        [
            "case (Key.eqdec k k); simpl in |- *; tauto.",
            "VernacExtend",
            "098130668c15f0d0f87fef7d8de39fbdd702392b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem diff_key : forall (d : dict) (k k' : key) (v : data), k <> k' -> find k (add k' v d) = find k d.",
            "VernacStartTheoremProof",
            "6ab74971563305445c9111efcdb1438409d6e930"
        ],
        [
            "unfold find, add in |- *; intros d k k' v.",
            "VernacExtend",
            "66a009182ab6f4813d57104300d456d1b12aad21"
        ],
        [
            "case (Key.eqdec k k'); simpl in |- *; tauto.",
            "VernacExtend",
            "0b5c52f70bf1961522ec938babede1c617189c41"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TrivialDict.",
            "VernacEndSegment",
            "4afc4e71b4c717d59cdf5510ac4c60b1de388da0"
        ],
        [
            "Module TDict (Key: DEC_ORDER) (Val: DATA) : DICT with Definition key := Key.A with Definition data := Val.data.",
            "VernacDefineModule",
            "237fe607ddee6e203c4cbfabb45942d1e2d7f885"
        ],
        [
            "Definition key := Key.A.",
            "VernacDefinition",
            "93e16bb1f58a6feb8c8ece99891d945bf091c107"
        ],
        [
            "Definition data := Val.data.",
            "VernacDefinition",
            "b141bfd775596751a9b513246b248ddb97a1e143"
        ],
        [
            "Module M := More_Dec_Orders Key.",
            "VernacDefineModule",
            "5e3bbd7f1e8e6e03fe36f913898d0a3d4cb1a6d1"
        ],
        [
            "Inductive btree : Set := | leaf : btree | bnode : key -> data -> btree -> btree -> btree.",
            "VernacInductive",
            "e797459f6ca6c632ce1bedd068f59096a618cd79"
        ],
        [
            "Inductive occ (v : data) (k : key) : btree -> Prop := | occ_root : forall t1 t2 : btree, occ v k (bnode k v t1 t2) | occ_l : forall (k' : key) (v' : data) (t1 t2 : btree), occ v k t1 -> occ v k (bnode k' v' t1 t2) | occ_r : forall (k' : key) (v' : data) (t1 t2 : btree), occ v k t2 -> occ v k (bnode k' v' t1 t2).",
            "VernacInductive",
            "5e80270bbd03cf5ea784f937919cbb4e52271455"
        ],
        [
            "Inductive min (k : key) (t : btree) : Prop := min_intro : (forall (k' : key) (v : data), occ v k' t -> Key.lt k k') -> min k t.",
            "VernacInductive",
            "258d735ce4a7dd2073994dff74ab0bb48e2445da"
        ],
        [
            "Hint Resolve min_intro: searchtrees.",
            "VernacHints",
            "729242f542f673e6d79a88a7a623eb1f21fae383"
        ],
        [
            "Inductive maj (k : key) (t : btree) : Prop := maj_intro : (forall (k' : key) (v : data), occ v k' t -> Key.lt k' k) -> maj k t.",
            "VernacInductive",
            "678fd33099aea8e4e9058dfe06c23b522152ab35"
        ],
        [
            "Hint Resolve maj_intro: searchtrees.",
            "VernacHints",
            "91f28c7fd35238f4a97f5b712dc09e028d3f34ea"
        ],
        [
            "Inductive search_tree : btree -> Prop := | leaf_search_tree : search_tree leaf | bnode_search_tree : forall (k : key) (v : data) (t1 t2 : btree), search_tree t1 -> search_tree t2 -> maj k t1 -> min k t2 -> search_tree (bnode k v t1 t2).",
            "VernacInductive",
            "d9ceb2604c2e8f141c85a29456ed890131513305"
        ],
        [
            "Inductive is_bnode : btree -> Prop := is_bnode_intro : forall (k : key) (v : data) (t1 t2 : btree), is_bnode (bnode k v t1 t2).",
            "VernacInductive",
            "cd312b594186af95d01d4371b07978b9430c82c9"
        ],
        [
            "Hint Resolve is_bnode_intro: searchtrees.",
            "VernacHints",
            "edc8227c46748876d40162d0dfbe258d0bcf34cc"
        ],
        [
            "Hint Resolve occ_root occ_l occ_r: searchtrees.",
            "VernacHints",
            "1f24340abab48acb5ed5fbbd317a2f6f7f38a92c"
        ],
        [
            "Derive Inversion_clear OCC_INV with (forall (k k' : key) (v v' : data) (t1 t2 : btree), occ v' k' (bnode k v t1 t2)).",
            "VernacExtend",
            "abbbc76b23157821a85525457749d2b8703b08c5"
        ],
        [
            "Lemma occ_inv : forall (k k' : key) (v v' : data) (t1 t2 : btree), occ v' k' (bnode k v t1 t2) -> k = k' /\\ v = v' \\/ occ v' k' t1 \\/ occ v' k' t2.",
            "VernacStartTheoremProof",
            "e6a3fbd7cf7134e2e82a2c4cf5904ee9f52b1152"
        ],
        [
            "intros k k' v v' t1 t2 H.",
            "VernacExtend",
            "c706fd08b60808f0c7eb9de16116190935e8f462"
        ],
        [
            "inversion H using OCC_INV; auto with searchtrees.",
            "VernacExtend",
            "21d76c7e4cd9a4dc76fb94421f41f657412ea3b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve occ_inv: searchtrees.",
            "VernacHints",
            "bf036bb4bb8a5c9a7fa15afec1a717aa03431c8c"
        ],
        [
            "Lemma not_occ_Leaf : forall (k : key) (v : data), ~ occ v k leaf.",
            "VernacStartTheoremProof",
            "cf822001475c0381d6661bfba1e500731f35b6a3"
        ],
        [
            "unfold not in |- *; intros k v H.",
            "VernacExtend",
            "0a0c237a0fe18950a4a7387d0d9b7ad2f137c591"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_occ_Leaf: searchtrees.",
            "VernacHints",
            "7a9cf1efd500c98f3de2c6122e75f997f01f63fa"
        ],
        [
            "Hint Resolve leaf_search_tree bnode_search_tree: searchtrees.",
            "VernacHints",
            "0a2e098d42e86a1ecb0dcebead9563f13137dec7"
        ],
        [
            "Lemma min_leaf : forall k : key, min k leaf.",
            "VernacStartTheoremProof",
            "9d7bbbddad63e447a88761a5d337d2e1c715c6c5"
        ],
        [
            "intro k; apply min_intro.",
            "VernacExtend",
            "7014fc59eceb8d5be838b4c0e9d2ceac16a233ba"
        ],
        [
            "inversion_clear 1.",
            "VernacExtend",
            "389c04e455824abd99633abf60667aeaa306819a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve min_leaf: searchtrees.",
            "VernacHints",
            "9ae3d228a98f9426d5eb403f512aed2775b94a9e"
        ],
        [
            "Lemma maj_leaf : forall k : key, maj k leaf.",
            "VernacStartTheoremProof",
            "c9e97b608e70fb80aa34857701ba2ce7b7210735"
        ],
        [
            "intro k; apply maj_intro; inversion_clear 1.",
            "VernacExtend",
            "fdc2c792640ab7023a982cb477f6d96c0676c819"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve maj_leaf: searchtrees.",
            "VernacHints",
            "bae497bc82042123a62314ffc49b2535a0dfa24c"
        ],
        [
            "Lemma maj_not_occ : forall (k : key) (v : data) (t : btree), maj k t -> ~ occ v k t.",
            "VernacStartTheoremProof",
            "54f36017bdbe30836eba07e86f28e07e5e5ac12d"
        ],
        [
            "unfold not in |- *; intros k v t H H'.",
            "VernacExtend",
            "ce55f6f6f6adbcee76ea2ff21f225e2f23ccb266"
        ],
        [
            "elim H; intros; absurd (Key.lt k k); auto.",
            "VernacExtend",
            "bdd43ed7871e83e9b490f4bf96201dbfb39d4ec7"
        ],
        [
            "apply M.lt_irreflexive.",
            "VernacExtend",
            "370d705f92ca7616797a459df1a3841947e94400"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve maj_not_occ: searchtrees.",
            "VernacHints",
            "d1e53dce19cd510076e06a1a7f6b63d149a2e971"
        ],
        [
            "Lemma min_not_occ : forall (k : key) (v : data) (t : btree), min k t -> ~ occ v k t.",
            "VernacStartTheoremProof",
            "aae6fd3afeb30e1d9592e29e69ae4db2678f4521"
        ],
        [
            "unfold not in |- *; intros k v t H H'.",
            "VernacExtend",
            "ce55f6f6f6adbcee76ea2ff21f225e2f23ccb266"
        ],
        [
            "elim H; intros; absurd (Key.lt k k); eauto.",
            "VernacExtend",
            "d2a303164a3bd4b16ab736cbcc59d203e1afb283"
        ],
        [
            "apply M.lt_irreflexive.",
            "VernacExtend",
            "370d705f92ca7616797a459df1a3841947e94400"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve min_not_occ: searchtrees.",
            "VernacHints",
            "8ab01f34df6a699e5a3dde41bdafc7e9fd781439"
        ],
        [
            "Section search_tree_basic_properties.",
            "VernacBeginSection",
            "0f064a7d7e571b49b3c15a5fe25666acc6519a2a"
        ],
        [
            "Variables (n : key) (v : data) (t1 t2 : btree).",
            "VernacAssumption",
            "7e0244669aa622bf2072d2f6a3a34e058da2b818"
        ],
        [
            "Hypothesis se : search_tree (bnode n v t1 t2).",
            "VernacAssumption",
            "27df3b12b89c581d1cd8c68b6cfb2c5de332f523"
        ],
        [
            "Lemma search_tree_l : search_tree t1.",
            "VernacStartTheoremProof",
            "bd8cf67be1a7990ee42555c4c383679141f6ca6b"
        ],
        [
            "inversion_clear se; auto with searchtrees.",
            "VernacExtend",
            "e599153f05d02e0caefc41ce13e42ccca56da5f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve search_tree_l: searchtrees.",
            "VernacHints",
            "b942b2039a1a0200ab879d02c1ae5a761f7b861d"
        ],
        [
            "Lemma search_tree_r : search_tree t2.",
            "VernacStartTheoremProof",
            "15a0b3302cef15f76916d434210355c3ac3b55c3"
        ],
        [
            "inversion_clear se; auto with searchtrees.",
            "VernacExtend",
            "e599153f05d02e0caefc41ce13e42ccca56da5f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve search_tree_r: searchtrees.",
            "VernacHints",
            "24fa7854c6155ba5c68d57b30c44e29ca402b2aa"
        ],
        [
            "Lemma maj_l : maj n t1.",
            "VernacStartTheoremProof",
            "99c9ce67c28f120eda443e96b8aa14f8bfbf5a95"
        ],
        [
            "inversion_clear se; auto with searchtrees.",
            "VernacExtend",
            "e599153f05d02e0caefc41ce13e42ccca56da5f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve maj_l: searchtrees.",
            "VernacHints",
            "be58f422420af73835b5fb723465c74f482e7a54"
        ],
        [
            "Lemma min_r : min n t2.",
            "VernacStartTheoremProof",
            "79cce9b98998ac83cdcce096695605b53c55e7b7"
        ],
        [
            "inversion_clear se; auto with searchtrees.",
            "VernacExtend",
            "e599153f05d02e0caefc41ce13e42ccca56da5f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve min_r: searchtrees.",
            "VernacHints",
            "f908dd49c27bf6c5185b1fcef5bd64b0f663a01e"
        ],
        [
            "Lemma not_right : forall (p : key) (v' : data), Key.le p n -> ~ occ v' p t2.",
            "VernacStartTheoremProof",
            "880c8f5366723e69da7dc842a1217e9c42b232a4"
        ],
        [
            "intros p v' H; elim min_r.",
            "VernacExtend",
            "66178f1190e5a42676ab863e2dfbff624b997179"
        ],
        [
            "unfold not in |- *; intros; absurd (Key.lt n p); eauto with searchtrees.",
            "VernacExtend",
            "9d69c41de75432f41d02497d1e89ab32b46d0725"
        ],
        [
            "apply M.le_not_lt; assumption.",
            "VernacExtend",
            "2bd0b4c845c7a54f0ba3c47bc3602c852f730120"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_right: searchtrees.",
            "VernacHints",
            "ea3389c7aff55c23fb7ea2296340a8b9f3f9f772"
        ],
        [
            "Lemma not_left : forall (p : key) (v' : data), Key.le n p -> ~ occ v' p t1.",
            "VernacStartTheoremProof",
            "446461cef909fb2e9b4b440f73c784b34e4219b5"
        ],
        [
            "intros p v' H; elim maj_l.",
            "VernacExtend",
            "5bafd923f5e40871ae94450d0355a5764600f8f3"
        ],
        [
            "unfold not in |- *; intros; absurd (Key.lt p n); eauto with searchtrees.",
            "VernacExtend",
            "77acc8f8aed274daa159265cddd2f03bf706a81e"
        ],
        [
            "apply M.le_not_lt; assumption.",
            "VernacExtend",
            "2bd0b4c845c7a54f0ba3c47bc3602c852f730120"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_left: searchtrees.",
            "VernacHints",
            "1f4b98f4bf5d4164cea265f8aaf3090cc57d198b"
        ],
        [
            "Lemma go_left : forall (p : key) (v' : data), occ v' p (bnode n v t1 t2) -> Key.lt p n -> occ v' p t1.",
            "VernacStartTheoremProof",
            "6af6fde8295a720299bbd36e603507e610f0eb58"
        ],
        [
            "intros p v' H H0.",
            "VernacExtend",
            "86149df456a5c01f8b73937700fed03a3b567ab4"
        ],
        [
            "case (occ_inv _ _ _ _ _ _ H).",
            "VernacExtend",
            "11407f736a25cf9f812dc4735610b800a6ba6822"
        ],
        [
            "repeat simple destruct 1; absurd (Key.lt p n).",
            "VernacExtend",
            "5de3a5c31c85a9b4e8185e01a9c19773f6503579"
        ],
        [
            "rewrite H2; apply M.lt_irreflexive.",
            "VernacExtend",
            "286396beee2a5ba55e675a616506842e536b1599"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "simple destruct 1; trivial.",
            "VernacExtend",
            "b6e97050d118d20a254cbb80d6c369f8d8b8de49"
        ],
        [
            "intro H2; absurd (occ v' p t2).",
            "VernacExtend",
            "b9c7cef189e0a4c7d84cc7ae1bf43820e41d79a5"
        ],
        [
            "apply not_right.",
            "VernacExtend",
            "5c709723c06f943ce4275b679fc9929b5de9c1be"
        ],
        [
            "apply Key.lt_le_weak; assumption.",
            "VernacExtend",
            "0e05a51b897cdbd39fc210b1767fc2c8925f5027"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma go_right : forall (p : key) (v' : data), occ v' p (bnode n v t1 t2) -> Key.lt n p -> occ v' p t2.",
            "VernacStartTheoremProof",
            "6a8a5d2b456753ef5934fe2deb3fd660ab8037f9"
        ],
        [
            "intros p v' H H0.",
            "VernacExtend",
            "86149df456a5c01f8b73937700fed03a3b567ab4"
        ],
        [
            "case (occ_inv _ _ _ _ _ _ H).",
            "VernacExtend",
            "11407f736a25cf9f812dc4735610b800a6ba6822"
        ],
        [
            "repeat simple destruct 1; absurd (Key.lt n p).",
            "VernacExtend",
            "7d73b48e9e34bc96621b837094c57442b609ae2c"
        ],
        [
            "rewrite H2; apply M.lt_irreflexive.",
            "VernacExtend",
            "286396beee2a5ba55e675a616506842e536b1599"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "simple destruct 1; trivial.",
            "VernacExtend",
            "b6e97050d118d20a254cbb80d6c369f8d8b8de49"
        ],
        [
            "intro H2; absurd (occ v' p t1).",
            "VernacExtend",
            "673a45187fa6b8f09a366107c13c49a6567ddcc2"
        ],
        [
            "apply not_left.",
            "VernacExtend",
            "3e5f0a6ffe29e812ca9a69d7fe92c97ef475d3a8"
        ],
        [
            "apply Key.lt_le_weak; assumption.",
            "VernacExtend",
            "0e05a51b897cdbd39fc210b1767fc2c8925f5027"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End search_tree_basic_properties.",
            "VernacEndSegment",
            "d1ecdc727371b16c53d59d0d657ae9e01d8ad427"
        ],
        [
            "Hint Resolve go_left go_right not_left not_right search_tree_l search_tree_r maj_l min_r: searchtrees.",
            "VernacHints",
            "f29f05779f1d32901825d4044931377c20de8e4f"
        ],
        [
            "Lemma occ_unicity : forall t : btree, search_tree t -> forall (k : key) (v v' : data), occ v k t -> occ v' k t -> v = v'.",
            "VernacStartTheoremProof",
            "9a27e993e3e8c3a0e97d9e6b62918599466abd96"
        ],
        [
            "simple induction t.",
            "VernacExtend",
            "ed99ea08a11cb71b621c4562818ea87e52158a3d"
        ],
        [
            "inversion 2.",
            "VernacExtend",
            "9b1e056b41fea71e2db9d8977c86e79e382f15d7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (occ_inv _ _ _ _ _ _ H2).",
            "VernacExtend",
            "60aed62866b759ab3575992b819222ddef1b4545"
        ],
        [
            "repeat simple destruct 1.",
            "VernacExtend",
            "f5abf82008177a329bad0d13bd92aec579e741aa"
        ],
        [
            "case (occ_inv _ _ _ _ _ _ H3).",
            "VernacExtend",
            "b5b9e7db6c204a151c6cecf76d4bfdc45b07d740"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (occ v' k0 b); auto.",
            "VernacExtend",
            "a04f066f96e3fd9b50ce9e9d7202d40cd39bab70"
        ],
        [
            "eapply not_left.",
            "VernacExtend",
            "5efadcd5bc09515a5334a97be10958b638019a9f"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite H5; apply M.le_refl.",
            "VernacExtend",
            "dfa2a26c53ccaee636e86ca5b5a05aad2ab3b499"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (occ v' k0 b0); auto.",
            "VernacExtend",
            "6f9e8d88f0c01058469da466562e93f220e3aa68"
        ],
        [
            "eapply not_right; eauto.",
            "VernacExtend",
            "f78c031f82d2b56f72e9b042ed6df63b27621544"
        ],
        [
            "rewrite H5; apply M.le_refl.",
            "VernacExtend",
            "dfa2a26c53ccaee636e86ca5b5a05aad2ab3b499"
        ],
        [
            "simple destruct 1; intro.",
            "VernacExtend",
            "1c5a0dfb05cfce983879f66d551a0b1e5af30a74"
        ],
        [
            "case (occ_inv _ _ _ _ _ _ H3).",
            "VernacExtend",
            "b5b9e7db6c204a151c6cecf76d4bfdc45b07d740"
        ],
        [
            "repeat simple destruct 1.",
            "VernacExtend",
            "f5abf82008177a329bad0d13bd92aec579e741aa"
        ],
        [
            "absurd (occ v k b); auto.",
            "VernacExtend",
            "2376c4fce94c8d4badfe6207fdd5de5da06e26a2"
        ],
        [
            "eapply not_left; eauto.",
            "VernacExtend",
            "2662a461d866dbb5a916b65844f7e26f61c307ec"
        ],
        [
            "apply M.le_refl.",
            "VernacExtend",
            "b1c80258b9139bad5f2054162d559016b62c6df4"
        ],
        [
            "rewrite H7; auto.",
            "VernacExtend",
            "a4939b718312f015e111e05e9b001fd02d3063fd"
        ],
        [
            "simple destruct 1; intro.",
            "VernacExtend",
            "1c5a0dfb05cfce983879f66d551a0b1e5af30a74"
        ],
        [
            "eapply H.",
            "VernacExtend",
            "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "absurd (occ v' k0 b0); auto.",
            "VernacExtend",
            "6f9e8d88f0c01058469da466562e93f220e3aa68"
        ],
        [
            "eapply not_right; eauto with searchtrees.",
            "VernacExtend",
            "c7061424c2ad3108c7e27c44e60c9f67af850f5d"
        ],
        [
            "case (maj_l _ _ _ _ H1).",
            "VernacExtend",
            "10e0b39e3cfa5b0ef7b1f553bc93aade635b5de3"
        ],
        [
            "intro; apply Key.lt_le_weak.",
            "VernacExtend",
            "8652a982261547402ffde0c4bb7191ccfa6e560c"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "case (occ_inv _ _ _ _ _ _ H3).",
            "VernacExtend",
            "b5b9e7db6c204a151c6cecf76d4bfdc45b07d740"
        ],
        [
            "repeat simple destruct 1.",
            "VernacExtend",
            "f5abf82008177a329bad0d13bd92aec579e741aa"
        ],
        [
            "absurd (occ v k0 b0); auto.",
            "VernacExtend",
            "b03d9ccf9c6fd5b2865fcf8de83d1424a681f2a0"
        ],
        [
            "case H7.",
            "VernacExtend",
            "10bacd638f18e696a69230aeeaf4ccd2f4ba444b"
        ],
        [
            "eapply not_right; eauto with searchtrees.",
            "VernacExtend",
            "c7061424c2ad3108c7e27c44e60c9f67af850f5d"
        ],
        [
            "apply M.le_refl.",
            "VernacExtend",
            "b1c80258b9139bad5f2054162d559016b62c6df4"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (occ v' k0 b); auto.",
            "VernacExtend",
            "a04f066f96e3fd9b50ce9e9d7202d40cd39bab70"
        ],
        [
            "eapply not_left; eauto with searchtrees.",
            "VernacExtend",
            "758b247d48ef06ff3b151d32bdc2a3f6326cd209"
        ],
        [
            "case (min_r _ _ _ _ H1).",
            "VernacExtend",
            "f5952ab624911e347d85bb0fa129bbc6d732a92d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Key.lt_le_weak.",
            "VernacExtend",
            "bab1f97fa392b9b72c7493c26d8e85b220f4fee6"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "eapply H0.",
            "VernacExtend",
            "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition occ_dec_spec (k : key) (t : btree) := search_tree t -> {v : data | occ v k t} + {(forall v : data, ~ occ v k t)}.",
            "VernacDefinition",
            "75232a6d227b4c5b8f33c4d2a73c5388caab89c0"
        ],
        [
            "Definition occ_dec : forall (k : key) (t : btree), occ_dec_spec k t.",
            "VernacDefinition",
            "bc233732ff17d70ff977da8ef14d70d4482cfc31"
        ],
        [
            "intro p; simple induction t.",
            "VernacExtend",
            "158e616b45b97f858c7a6e10112c9b199a593215"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "intros n v t1 R1 t2 R2 H.",
            "VernacExtend",
            "3870d13db4b91c0cb2bf61af83c53814518d5972"
        ],
        [
            "case (M.le_lt_dec p n).",
            "VernacExtend",
            "d15c451c866986153f6e262bb5d8fa0e4b77f929"
        ],
        [
            "intro H0; case (M.le_lt_eq_dec p n H0).",
            "VernacExtend",
            "ecc4be77089af8a6c14f340b51ff15c0bdf04725"
        ],
        [
            "intro H1; case R1.",
            "VernacExtend",
            "ba77da0dd562bd769c874af1743e53af6b9143e1"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "simple destruct 1; intros v' H'.",
            "VernacExtend",
            "639aa97a9d84cbfffa8883e2a2ba68927baf5e6a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists v'; eauto with searchtrees.",
            "VernacExtend",
            "acd6a219fb556fb729a7eb2b6edc57a866d7b6ed"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros v0 H3.",
            "VernacExtend",
            "5a5d2b59403ad94476227152906ecd298a634d78"
        ],
        [
            "apply (n0 v0); eauto with searchtrees.",
            "VernacExtend",
            "9dbeda6dbad629ec9b6b4364a0eac6ead7fb5528"
        ],
        [
            "simple destruct 1; left.",
            "VernacExtend",
            "085e84cb027fe28d58eba305462316706530cc28"
        ],
        [
            "exists v; eauto with searchtrees.",
            "VernacExtend",
            "3d85738009c82abe2a60d039da709c214c4e6a6b"
        ],
        [
            "intro H2; case R2.",
            "VernacExtend",
            "3180a1d8458663a572ac102378d2e7a9aa551689"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "simple destruct 1; intros v' H'.",
            "VernacExtend",
            "639aa97a9d84cbfffa8883e2a2ba68927baf5e6a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists v'; eauto with searchtrees.",
            "VernacExtend",
            "acd6a219fb556fb729a7eb2b6edc57a866d7b6ed"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros v0 H3.",
            "VernacExtend",
            "5a5d2b59403ad94476227152906ecd298a634d78"
        ],
        [
            "apply (n0 v0); eauto with searchtrees.",
            "VernacExtend",
            "9dbeda6dbad629ec9b6b4364a0eac6ead7fb5528"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Inductive INSERT (n : key) (v : data) (t t' : btree) : Prop := insert_intro : (forall (p : key) (v' : data), occ v' p t -> p = n \\/ occ v' p t') -> occ v n t' -> (forall (p : key) (v' : data), occ v' p t' -> occ v' p t \\/ n = p /\\ v = v') -> search_tree t' -> INSERT n v t t'.",
            "VernacInductive",
            "13caf280b8ea07c32c7a33a92d07fbf8731333b9"
        ],
        [
            "Hint Resolve insert_intro: searchtrees.",
            "VernacHints",
            "838cfabd2635781ccb854fc5bb3f9e43de2bea65"
        ],
        [
            "Definition insert_spec (n : key) (v : data) (t : btree) : Set := search_tree t -> {t' : btree | INSERT n v t t'}.",
            "VernacDefinition",
            "abe42894929e36efc3ba8f4f7d20384c10a5ab97"
        ],
        [
            "Lemma insert_leaf : forall (n : key) (v : data), INSERT n v leaf (bnode n v leaf leaf).",
            "VernacStartTheoremProof",
            "366a36449b18b7eb4e3c725571565553626f721a"
        ],
        [
            "intro n; split; auto with searchtrees.",
            "VernacExtend",
            "4ced3b90b317021cf141df176cf06fffbdfd36d5"
        ],
        [
            "intros p k H; inversion_clear H; auto with searchtrees.",
            "VernacExtend",
            "932a42ab749a1f2b92a981e7055dbc698299d7c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve insert_leaf: searchtrees.",
            "VernacHints",
            "500943bc86990d0f493a3dd6cde731e6c2dc3ef8"
        ],
        [
            "Lemma insert_l : forall (n p : key) (v v' : data) (t1 t'1 t2 : btree), Key.lt n p -> search_tree (bnode p v' t1 t2) -> INSERT n v t1 t'1 -> INSERT n v (bnode p v' t1 t2) (bnode p v' t'1 t2).",
            "VernacStartTheoremProof",
            "38154ed970ab0d1e8d97ad261c51d34776683402"
        ],
        [
            "intros n p v v' t1 t'1 t2 H H0 H1; split.",
            "VernacExtend",
            "8ef0c270565fb469bb263fd059a244a1589a8d6e"
        ],
        [
            "intros p0 v'0 H2; inversion_clear H2.",
            "VernacExtend",
            "1dff03b42793f615eb20f6243661bb1cf5cf8563"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "case H1; intros.",
            "VernacExtend",
            "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
        ],
        [
            "case (H2 _ _ H3).",
            "VernacExtend",
            "562e652f8f787ad891e727c50cc7e5c45957445e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "case H1; intros.",
            "VernacExtend",
            "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "intros p0 v'0 H2.",
            "VernacExtend",
            "bb2b2fd2b7de747a6e84365763aae2e9ad9b98b0"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "case H1; intros.",
            "VernacExtend",
            "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
        ],
        [
            "elim (H5 p0 v'0); auto with searchtrees.",
            "VernacExtend",
            "7254fd0ed6d95040b71ec6baa519e53e0d03eedb"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "case H1; constructor 2; auto with searchtrees.",
            "VernacExtend",
            "d8444bab8f20924ce34831198d47ffcbe3142bfd"
        ],
        [
            "eapply search_tree_r; eauto with searchtrees.",
            "VernacExtend",
            "ac852d5b5a19134d0af0ee891d5e8606e52b508f"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "elim (H4 _ _ H6).",
            "VernacExtend",
            "7d38073f437409cb9ea36f1266587751fa199c98"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (maj p t1).",
            "VernacExtend",
            "72373a75b992291a4a3157c510b2b12988ec607f"
        ],
        [
            "inversion_clear 1; eauto with searchtrees.",
            "VernacExtend",
            "aae08f1e63f7c24a526189ac2b28e10eb833ae42"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "repeat simple destruct 1.",
            "VernacExtend",
            "f5abf82008177a329bad0d13bd92aec579e741aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insert_r : forall (n p : key) (v v' : data) (t1 t2 t'2 : btree), Key.lt p n -> search_tree (bnode p v' t1 t2) -> INSERT n v t2 t'2 -> INSERT n v (bnode p v' t1 t2) (bnode p v' t1 t'2).",
            "VernacStartTheoremProof",
            "4aa2fbf012c44271071b32ecc869b1a26d32e8d3"
        ],
        [
            "intros n p v v' t1 t2 t'2 H H0 H1; split.",
            "VernacExtend",
            "d6630d14ac2d6a580506987779c9ed9cf1feb050"
        ],
        [
            "intros p0 v'0 H2; inversion_clear H2.",
            "VernacExtend",
            "1dff03b42793f615eb20f6243661bb1cf5cf8563"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "case H1; intros.",
            "VernacExtend",
            "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
        ],
        [
            "case (H2 _ _ H3).",
            "VernacExtend",
            "562e652f8f787ad891e727c50cc7e5c45957445e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "case H1; intros.",
            "VernacExtend",
            "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "intros p0 v'0 H2.",
            "VernacExtend",
            "bb2b2fd2b7de747a6e84365763aae2e9ad9b98b0"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "case H1; intros.",
            "VernacExtend",
            "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
        ],
        [
            "elim (H5 p0 v'0 H3); auto with searchtrees.",
            "VernacExtend",
            "fd2d142520c4f8a0bcb7fcfe716e063ec1a46e4a"
        ],
        [
            "case H1; constructor 2; auto with searchtrees.",
            "VernacExtend",
            "d8444bab8f20924ce34831198d47ffcbe3142bfd"
        ],
        [
            "eapply search_tree_l; eauto with searchtrees.",
            "VernacExtend",
            "e91daed9e21bc99e5f74e2adb467ba79ebb29e18"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "case (H4 _ _ H6).",
            "VernacExtend",
            "c2fc8a34f36dca688c1a22dae1fc4bab2c5e5e7f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (min p t2).",
            "VernacExtend",
            "580ed5b9eba5b1939b9f7d56b58e5706cf7f5b16"
        ],
        [
            "inversion_clear 1; eauto with searchtrees.",
            "VernacExtend",
            "aae08f1e63f7c24a526189ac2b28e10eb833ae42"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "repeat simple destruct 1.",
            "VernacExtend",
            "f5abf82008177a329bad0d13bd92aec579e741aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insert_eq : forall (n : key) (v v' : data) (t1 t2 : btree), search_tree (bnode n v t1 t2) -> INSERT n v' (bnode n v t1 t2) (bnode n v' t1 t2).",
            "VernacStartTheoremProof",
            "8fc0c86147b1a83cb99b69f10bd88154263401bf"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "inversion 1; eauto with searchtrees.",
            "VernacExtend",
            "8e63bcccaa27e0e14c43e76eafd6eb57819d8282"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "inversion 1; eauto with searchtrees.",
            "VernacExtend",
            "8e63bcccaa27e0e14c43e76eafd6eb57819d8282"
        ],
        [
            "inversion H; eauto with searchtrees.",
            "VernacExtend",
            "cb68eca68df2d3453dcbfc052901bda189ca35b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve insert_l insert_r insert_eq: searchtrees.",
            "VernacHints",
            "715485a136aeb9a313b77d0ea2d5d3a34e5cb302"
        ],
        [
            "Definition insert : forall (n : key) (v : data) (t : btree), insert_spec n v t.",
            "VernacDefinition",
            "12bc89527c5a3894d9b32ce8a485471c1e3a2527"
        ],
        [
            "simple induction t.",
            "VernacExtend",
            "ed99ea08a11cb71b621c4562818ea87e52158a3d"
        ],
        [
            "exists (bnode n v leaf leaf).",
            "VernacExtend",
            "479c287d34f247f3ac6e96f86e422d8e4a1896e6"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "unfold insert_spec at 3 in |- *; intros p b t1 H1 t2 H2 H0.",
            "VernacExtend",
            "a5b9fa0d0e382fbea14dcd2a99beec5eea0e9428"
        ],
        [
            "case (M.le_lt_dec n p).",
            "VernacExtend",
            "528ed866ed8d998ba7d9be63560c8819ca2e786a"
        ],
        [
            "intro H; case (M.le_lt_eq_dec n p H).",
            "VernacExtend",
            "f0679135526e3bc0eab247dfcac42c983130ee47"
        ],
        [
            "intro H'.",
            "VernacExtend",
            "3160ba192fa58e5db60b3e67645ce925759bb788"
        ],
        [
            "case (H1 (search_tree_l _ _ _ _ H0)).",
            "VernacExtend",
            "78983e491a8aeef034312d794df9f84369d62651"
        ],
        [
            "intros t3; exists (bnode p b t3 t2).",
            "VernacExtend",
            "b7d47bc8083c4f55406e64d8acd7d969123bdf36"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "intro e; rewrite e; exists (bnode p v t1 t2); auto with searchtrees.",
            "VernacExtend",
            "ebd72f5a699c385cb4f940274de796fcd97f9b6f"
        ],
        [
            "case (H2 (search_tree_r _ _ _ _ H0)).",
            "VernacExtend",
            "ba2ffc4174b9209ffc0294dd695ae1eb3feeacfb"
        ],
        [
            "intros t3; exists (bnode p b t1 t3).",
            "VernacExtend",
            "e1f25aed6d56ede6f6e781c1d3b8c5926a839353"
        ],
        [
            "auto with searchtrees.",
            "VernacExtend",
            "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition dict : Set := sig search_tree.",
            "VernacDefinition",
            "1dbb19e85533bee1185aef50b4fa134b843360b7"
        ],
        [
            "Definition empty : dict.",
            "VernacDefinition",
            "7cc5fe284c365cde7414081f8ff49e0ad5e940b3"
        ],
        [
            "unfold dict in |- *; exists leaf.",
            "VernacExtend",
            "16301f8c4719a06a3c24b07cda741f87f78efb90"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition find (k : key) (d : dict) : option data := let (t, Ht) := d in match occ_dec k t Ht with | inleft s => let (v, _) := s in Some v | inright _ => None (A:=data) end.",
            "VernacDefinition",
            "628e5e1d3d2836f087623fe51f03d8bffdc6dc80"
        ],
        [
            "Definition add : key -> data -> dict -> dict.",
            "VernacDefinition",
            "007f7cb306208304a30c0dd5644187bb0134c6b6"
        ],
        [
            "refine (fun (k : key) (v : data) (d : dict) => let (t, Ht) := d in let (x, Hx) := insert k v t Ht in exist search_tree x _).",
            "VernacExtend",
            "6c54028aafb91d7005aca9425fac64db98d56976"
        ],
        [
            "case Hx; auto.",
            "VernacExtend",
            "77cb879aa4295ac85f27833660ac120655ac8d32"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition D_tree (d : dict) : btree := match d with | exist t Ht => t end.",
            "VernacDefinition",
            "92730d3c9168cf7c7f09be14c6f7db66969139a5"
        ],
        [
            "Lemma D_search : forall d : dict, search_tree (D_tree d).",
            "VernacStartTheoremProof",
            "a7224b51bf6b0468b5c62de243921e108acd7c17"
        ],
        [
            "simple destruct d; simpl in |- *; auto.",
            "VernacExtend",
            "57ee22ebd670fd4bf2707cb91dd046261b533387"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_occ_dec : forall (k : key) (v : data) (d : dict), occ v k (D_tree d) -> find k d = Some v.",
            "VernacStartTheoremProof",
            "e31f5fcb4d2dfe28f092447bc97a5b718fcd544c"
        ],
        [
            "unfold find in |- *; simple destruct d; simpl in |- *; intros.",
            "VernacExtend",
            "deec4041645651dfa585e24bdd78612da87a6f70"
        ],
        [
            "case (occ_dec k x s); simpl in |- *.",
            "VernacExtend",
            "184b4108d0155d8f643fce01c840ec3f259230e4"
        ],
        [
            "simple destruct s0; simpl in |- *.",
            "VernacExtend",
            "842a26c8b0d63a249fee635cefc17a4518be51a9"
        ],
        [
            "intros x0 H0; case (occ_unicity x s _ _ _ H H0).",
            "VernacExtend",
            "5de5897a2e34c878098e257ef00b4e56272ca1e0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (n v H).",
            "VernacExtend",
            "830e8b95db1f85577dbbe66396dea8209f50f3ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_find_occ_dec : forall (k : key) (d : dict), (forall v : data, ~ occ v k (D_tree d)) -> find k d = None.",
            "VernacStartTheoremProof",
            "a8a67a8d12c3c2f41400151dbeaa1e3ee29edf0c"
        ],
        [
            "unfold find in |- *; simple destruct d; simpl in |- *; intros.",
            "VernacExtend",
            "deec4041645651dfa585e24bdd78612da87a6f70"
        ],
        [
            "case (occ_dec k x s); simpl in |- *.",
            "VernacExtend",
            "184b4108d0155d8f643fce01c840ec3f259230e4"
        ],
        [
            "simple destruct s0; simpl in |- *.",
            "VernacExtend",
            "842a26c8b0d63a249fee635cefc17a4518be51a9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (H _ o).",
            "VernacExtend",
            "b513e55b2cce4a4524c3bbcc3744a7fe48c0ed9c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem empty_def : forall k : key, find k empty = None.",
            "VernacStartTheoremProof",
            "73809374e5a7c8e5e048b240371c29fe9ba8a181"
        ],
        [
            "unfold find, empty in |- *.",
            "VernacExtend",
            "966ad93fa3f33ea1b2b5e2079491cc03b3654047"
        ],
        [
            "intro k; case (occ_dec k leaf leaf_search_tree); simpl in |- *.",
            "VernacExtend",
            "b0a531400a298dca8f31f642b51b2a3e01354c41"
        ],
        [
            "simple destruct s.",
            "VernacExtend",
            "20b9bce0ea306e1d2e9ef73d85a4b8499ab0f1bf"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark success2 : forall (d : dict) (k : key) (v : data), occ v k (D_tree (add k v d)).",
            "VernacStartTheoremProof",
            "8eb37c0850a8923cf8d8c85c130d6f2920e77cf9"
        ],
        [
            "simple destruct d.",
            "VernacExtend",
            "66904205d39254c1364456c2c7e7bbb1818964c4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x s k v; case (insert k v x s); simpl in |- *.",
            "VernacExtend",
            "30fde2b229198141daa100b5bceea2afaa45e8b1"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "eauto with searchtrees.",
            "VernacExtend",
            "ca8b25f11b7e130194c903648a86b77efc4ad630"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem success : forall (d : dict) (k : key) (v : data), find k (add k v d) = Some v.",
            "VernacStartTheoremProof",
            "f64e6b6c7543d5e43f621a27b9cdd8546d77ff30"
        ],
        [
            "intros; apply find_occ_dec.",
            "VernacExtend",
            "84279feccabaee094f98e717b65561c226122ceb"
        ],
        [
            "apply success2.",
            "VernacExtend",
            "3189e51a0d4bd837e7bd0d8442386a89e6c9a7c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark diff_key1 : forall (d : dict) (k k' : key) (v v' : data), k <> k' -> occ v k (D_tree (add k' v' d)) -> occ v k (D_tree d).",
            "VernacStartTheoremProof",
            "0957d85bb9898e1cf5398ce8a7b696cd45587467"
        ],
        [
            "simple destruct d.",
            "VernacExtend",
            "66904205d39254c1364456c2c7e7bbb1818964c4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x s k k' v v'; case (insert k' v' x s); simpl in |- *.",
            "VernacExtend",
            "0f8afe932659e4cd413da80186ad91f9a45bdebf"
        ],
        [
            "simple destruct 1; intros.",
            "VernacExtend",
            "12103091255e8d3b11b192621c770f35409b153a"
        ],
        [
            "case (H1 _ _ H4).",
            "VernacExtend",
            "1e8b70e7421186806813fb465f13bf7f90086e1e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simple destruct 1; absurd (k' = k); auto.",
            "VernacExtend",
            "c3a94d97000cd7df65f03cfec14873db0701f86e"
        ],
        [
            "case H5; auto.",
            "VernacExtend",
            "e79d3e3ec49050922a39a0cd619ca1a9771865c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark diff_key2 : forall (d : dict) (k k' : key) (v v' : data), k <> k' -> occ v k (D_tree d) -> occ v k (D_tree (add k' v' d)).",
            "VernacStartTheoremProof",
            "701ea95c6af3900a28f8ed6ef9e05c9ed3f727ce"
        ],
        [
            "simple destruct d; simpl in |- *.",
            "VernacExtend",
            "00d9509a22ea603c0466fde1fd81cae4edfd98ad"
        ],
        [
            "intros x s k k' v v'; case (insert k' v' x s); simpl in |- *.",
            "VernacExtend",
            "0f8afe932659e4cd413da80186ad91f9a45bdebf"
        ],
        [
            "simple destruct 1; intros.",
            "VernacExtend",
            "12103091255e8d3b11b192621c770f35409b153a"
        ],
        [
            "case (H _ _ H4).",
            "VernacExtend",
            "d5f0da1da72ad8bb3ec665cd2e83f6f38dc8e23f"
        ],
        [
            "intro H5; case (H3 H5).",
            "VernacExtend",
            "f9d2a27cb630758e1fd92a0949701ff30b223daa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem diff_key : forall (d : dict) (k k' : key) (v : data), k <> k' -> find k (add k' v d) = find k d.",
            "VernacStartTheoremProof",
            "6ab74971563305445c9111efcdb1438409d6e930"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (occ_dec k (D_tree d)).",
            "VernacExtend",
            "d06d39a7e57f30abc991d8615cdabb0b64a55518"
        ],
        [
            "apply D_search.",
            "VernacExtend",
            "c31a9e17525c04d6d14558afc2ddfcc1f5a4ae26"
        ],
        [
            "simple destruct 1.",
            "VernacExtend",
            "762620e55a2985cba478cdf956c4e084168a1b05"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "transitivity (Some x).",
            "VernacExtend",
            "1f0c6230a1c402e56e83f633d5fd6b9ae851b2ac"
        ],
        [
            "apply find_occ_dec.",
            "VernacExtend",
            "bdd42b12cec5b76217ce707046c9e066fb9009ad"
        ],
        [
            "apply diff_key2; auto.",
            "VernacExtend",
            "70073604770a2e0c7c74962219ea8f1000c935c2"
        ],
        [
            "symmetry in |- *; apply find_occ_dec; auto.",
            "VernacExtend",
            "7e9434f08c10a1c968ecb148a54f4940db402456"
        ],
        [
            "intro; transitivity (None (A:=data)).",
            "VernacExtend",
            "483a6974c0c0bb9dee3ec0d2afe5c1fa56b9d450"
        ],
        [
            "apply not_find_occ_dec.",
            "VernacExtend",
            "9f8d16b60cb89ac4f7767f202dc2652d3b595c92"
        ],
        [
            "intros v0 H0.",
            "VernacExtend",
            "b135390811b105236b082619e2565ef27aecfebd"
        ],
        [
            "apply (n v0).",
            "VernacExtend",
            "0127097a48fd2217256f51693621f3e9358dbea9"
        ],
        [
            "eapply diff_key1; eauto.",
            "VernacExtend",
            "ccac120e9ec2431523c292adb8f9c9bda589b1ee"
        ],
        [
            "symmetry in |- *; apply not_find_occ_dec.",
            "VernacExtend",
            "cc3b300c64a649351453726c9c88f4734c41c5cb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TDict.",
            "VernacEndSegment",
            "c1e0a6ef4d80dc97b43e09ff2898d193b5335081"
        ],
        [
            "Module BoolNat := Lexico Bool_Order Nat_Order.",
            "VernacDefineModule",
            "2f7cb0dbde657d41edcacfeeff0b4f3c65443b48"
        ],
        [
            "Module MoreBoolNat := More_Dec_Orders BoolNat.",
            "VernacDefineModule",
            "90003b645efb6299b0691866ab7aacc516185ee8"
        ],
        [
            "Module Nats <: DATA.",
            "VernacDefineModule",
            "bb14747d8d87ee5004c22b8aa9a83ac0d4e11423"
        ],
        [
            "Definition data := list nat.",
            "VernacDefinition",
            "6de7f6ad681402da63435f97453d8c391a4863e1"
        ],
        [
            "End Nats.",
            "VernacEndSegment",
            "187013db1e8c8b203c164f1dd9539a6fa962f06a"
        ],
        [
            "Module NaiveDict := TrivialDict LZKey Nats.",
            "VernacDefineModule",
            "34cf7f299432cc69a2471893a38812c9887aa87f"
        ],
        [
            "Module MyDict : DICT := TDict BoolNat Nats.",
            "VernacDefineModule",
            "7f63148966f4013c5c98ff1b584a1b5b1dbb5360"
        ],
        [
            "Module Dict2 := Dict_Plus MyDict.",
            "VernacDefineModule",
            "a58f78925e31f5eaaa9fbcc66b750c050be7af4c"
        ],
        [
            "Module Dict1 := Dict_Plus NaiveDict.",
            "VernacDefineModule",
            "7c82514bb1b3b164acee30b5b8f73b6e05259a29"
        ]
    ],
    "proofs": [
        {
            "name": "eqdec",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intro a; elim a.",
                        "VernacExtend",
                        "53c92e225ea23758d272f477efef13908ff9e3ff"
                    ]
                },
                {
                    "command": [
                        "simple induction b; [ left; auto | right; red in |- *; discriminate 1 ].",
                        "VernacExtend",
                        "f0d23aced911b4777a98dbf0e034c5a994d307d9"
                    ]
                },
                {
                    "command": [
                        "intros a0 k Ha; simple induction b.",
                        "VernacExtend",
                        "f8b71bf9235a77e2939cef4b35a8edbf4bec17ba"
                    ]
                },
                {
                    "command": [
                        "right; red in |- *; discriminate 1.",
                        "VernacExtend",
                        "4c66d656f8284ec3b0fc2235c875fd450406e2cf"
                    ]
                },
                {
                    "command": [
                        "intros a1 l0 s; case (K.eqdec a0 a1); intro H0.",
                        "VernacExtend",
                        "f0475ce6271e9fe131d961026b99b7b5f18c666c"
                    ]
                },
                {
                    "command": [
                        "case (Ha l0); intro H1.",
                        "VernacExtend",
                        "d100bbd82b42afb70b31f734270bb2f76bf77074"
                    ]
                },
                {
                    "command": [
                        "left; rewrite H1; rewrite H0; auto.",
                        "VernacExtend",
                        "254cbe939d6079c7b016acc0fb6f7301797b4608"
                    ]
                },
                {
                    "command": [
                        "right; red in |- *; injection 1.",
                        "VernacExtend",
                        "a37fc6c936f070359172ca02e19653c87c5312ad"
                    ]
                },
                {
                    "command": [
                        "intro H3; case (H1 H3).",
                        "VernacExtend",
                        "57c71b0b8c6b49de4ec88e64f3fae60e54852008"
                    ]
                },
                {
                    "command": [
                        "right; red in |- *; injection 1.",
                        "VernacExtend",
                        "a37fc6c936f070359172ca02e19653c87c5312ad"
                    ]
                },
                {
                    "command": [
                        "intros H3 H4; case (H0 H4).",
                        "VernacExtend",
                        "dd91c441709820289d83172acda19b110cdaedab"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "le_refl",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "case D.ordered; auto.",
                        "VernacExtend",
                        "70b6d088c76f729e3dcb106869663e292b61cbd0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_antisym",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "case D.ordered; auto.",
                        "VernacExtend",
                        "70b6d088c76f729e3dcb106869663e292b61cbd0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_intro",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros a b H diff; case (D.le_lt_or_eq a b H); tauto.",
                        "VernacExtend",
                        "97419a271bf3506b55d4c186f92469c61ad42ecd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_irreflexive",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros a H.",
                        "VernacExtend",
                        "05f717e61df7036f33bd440c2184c00a6aaab4f4"
                    ]
                },
                {
                    "command": [
                        "case (D.lt_diff _ _ H); trivial.",
                        "VernacExtend",
                        "d1329388cf6aaf4d3a193744281c227219586f7b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_not_le",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros a b H H0.",
                        "VernacExtend",
                        "0068560b75bf8729aedcec2539874c6e57c806c0"
                    ]
                },
                {
                    "command": [
                        "absurd (a = b).",
                        "VernacExtend",
                        "969ecf02691e289051332e9375adc4b86d96acf5"
                    ]
                },
                {
                    "command": [
                        "apply D.lt_diff; trivial.",
                        "VernacExtend",
                        "7c6565f6022325cc6f3db7f1a176769d3cad902e"
                    ]
                },
                {
                    "command": [
                        "apply le_antisym; auto; apply D.lt_le_weak; assumption.",
                        "VernacExtend",
                        "43c82718a88f8f5e29e12c8e2cdb76f7c4255dab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_not_lt",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros a b H H0; apply (lt_not_le b a); auto.",
                        "VernacExtend",
                        "d3e3488453f70c56c94a99bc83978e8b74339bb3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_trans",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "unfold A, transitive in |- *.",
                        "VernacExtend",
                        "42dac538ab4d3470d7b6de6fbe160e0391567a1b"
                    ]
                },
                {
                    "command": [
                        "intros x y z H H0.",
                        "VernacExtend",
                        "e3efc5a99a7ff0a8a181c2450705aeea02fe6de0"
                    ]
                },
                {
                    "command": [
                        "apply (lt_intro x z).",
                        "VernacExtend",
                        "02674da0f229530972f51fbea30d9340b067cfd0"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with y; apply D.lt_le_weak; assumption.",
                        "VernacExtend",
                        "7f67823cda55b4b8ac358545e1e90d253ead0f82"
                    ]
                },
                {
                    "command": [
                        "intro e; rewrite e in H.",
                        "VernacExtend",
                        "21cad5fc7b01630cac23d1643ff820b04d3d2ab8"
                    ]
                },
                {
                    "command": [
                        "absurd (y = z).",
                        "VernacExtend",
                        "030f28bd6ed06abc3fc7a85b83f4ace7813b719c"
                    ]
                },
                {
                    "command": [
                        "intro e'; rewrite e' in H.",
                        "VernacExtend",
                        "9ca0b2122303ef7439c0c3b15969eca767fe8c89"
                    ]
                },
                {
                    "command": [
                        "apply (lt_irreflexive _ H).",
                        "VernacExtend",
                        "e86d9249cce0c47428083335f4aa9e74bde4064e"
                    ]
                },
                {
                    "command": [
                        "apply le_antisym; apply D.lt_le_weak; trivial.",
                        "VernacExtend",
                        "854a0a09963058bee4a79350bc279d44814982dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_lt_dec",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intros a b; case (D.lt_eq_lt_dec a b).",
                        "VernacExtend",
                        "974a28b76536135a5a78916ffa22982896158c93"
                    ]
                },
                {
                    "command": [
                        "intro d; case d; auto.",
                        "VernacExtend",
                        "91cc62200543a3ff3fad9868efc5ef6e0e361561"
                    ]
                },
                {
                    "command": [
                        "left; apply D.lt_le_weak; trivial.",
                        "VernacExtend",
                        "67b99ec625ae784e8bf485ecb8681fb496110dc4"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; left; apply le_refl.",
                        "VernacExtend",
                        "84470f09c4c091bcf51188e61b77d6238c43cebe"
                    ]
                },
                {
                    "command": [
                        "right; trivial.",
                        "VernacExtend",
                        "0340ad4c708a2ae89a0d63d55c2e24a5dd555b53"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "le_lt_eq_dec",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "intros a b H.",
                        "VernacExtend",
                        "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
                    ]
                },
                {
                    "command": [
                        "case (D.lt_eq_lt_dec a b).",
                        "VernacExtend",
                        "492498a8e604e494c36c9c878a92187d490c24b0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intro H0; case (le_not_lt a b H H0).",
                        "VernacExtend",
                        "b475ce5ad4dbe8dfa82646ed07aed013db5b28b4"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "lt_le_weak",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "unfold A, lt, le in |- *; intros a b; case a; case b.",
                        "VernacExtend",
                        "c71d29e4170ba369339ac369421e6e8750c8f5a0"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; intros; auto.",
                        "VernacExtend",
                        "a1341d766e70f6135a065cdea888b17d8083ff90"
                    ]
                },
                {
                    "command": [
                        "right; case H0; split; auto.",
                        "VernacExtend",
                        "b5d6bb27c4ac5e47b9899c9fe763f7a785c43884"
                    ]
                },
                {
                    "command": [
                        "apply D2.lt_le_weak; trivial.",
                        "VernacExtend",
                        "4472527a527c9d2be5a3074648758e3595f2e2a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_diff",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "unfold A, lt, le in |- *; intros a b; case a; case b.",
                        "VernacExtend",
                        "c71d29e4170ba369339ac369421e6e8750c8f5a0"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "intro H0; red in |- *; injection 1.",
                        "VernacExtend",
                        "40552595dc0d686c3451e52e745b90bebc83c801"
                    ]
                },
                {
                    "command": [
                        "intros e1 e2; rewrite e2 in H0.",
                        "VernacExtend",
                        "91d626fd69524fd022f8329024a96d3199fbe471"
                    ]
                },
                {
                    "command": [
                        "case (M1.lt_irreflexive a0 H0).",
                        "VernacExtend",
                        "bd065244d7c94c091ffd079c7617720c6d47aed0"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "intro H2; red in |- *; injection 1.",
                        "VernacExtend",
                        "6f33c97140cecb858aa8aa08308268a2e0f660e8"
                    ]
                },
                {
                    "command": [
                        "intro e; rewrite e in H2; case (M2.lt_irreflexive _ H2).",
                        "VernacExtend",
                        "721c8c04f684d162ceacca1a26408167c82c9fc0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_lt_or_eq",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "unfold A, lt, le in |- *; intros a b; case a; case b.",
                        "VernacExtend",
                        "c71d29e4170ba369339ac369421e6e8750c8f5a0"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; auto.",
                        "VernacExtend",
                        "bdd248a9ebbc813e3c99757d956e231d57bbf5a4"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "intro H2; case (D2.le_lt_or_eq _ _ H2).",
                        "VernacExtend",
                        "5f85f85e05c44bbb9d1ac5b4357d2d442be12042"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_eq_lt_dec",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "unfold A, lt in |- *; intros.",
                        "VernacExtend",
                        "0cf4382ed5b76df9c0837fd804c37c02dc1a393c"
                    ]
                },
                {
                    "command": [
                        "case a; case b.",
                        "VernacExtend",
                        "7ac34e55966471449c0c4fc5c0cdde4cfbeff966"
                    ]
                },
                {
                    "command": [
                        "intros a0 a1 a2 a3.",
                        "VernacExtend",
                        "22ba81de7c26b9c5099c45f99589f3d2cc0c0519"
                    ]
                },
                {
                    "command": [
                        "case (D1.lt_eq_lt_dec a0 a2).",
                        "VernacExtend",
                        "6fb7d60d4e1d6f22274ac02a7a03e2e2f328b1d3"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "case (D2.lt_eq_lt_dec a1 a3).",
                        "VernacExtend",
                        "479185ce646173e886466a107d2b0a846fd6ffd3"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "left; right; trivial.",
                        "VernacExtend",
                        "741e85476a217763f79729a76a39ea1af71f7d1c"
                    ]
                },
                {
                    "command": [
                        "left; left; auto.",
                        "VernacExtend",
                        "f6cf51484f8300856a7ad6e00e325892f97d0caf"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "empty_def",
            "line_nb": 405,
            "steps": [
                {
                    "command": [
                        "unfold find, empty in |- *; auto.",
                        "VernacExtend",
                        "b695816ac93c19b3c0f95663bfece310da2f7fb5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "success",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "unfold find, add in |- *; intros d k v.",
                        "VernacExtend",
                        "f3b63d0ad442d1127a31c04284e722cd93ea32aa"
                    ]
                },
                {
                    "command": [
                        "case (Key.eqdec k k); simpl in |- *; tauto.",
                        "VernacExtend",
                        "098130668c15f0d0f87fef7d8de39fbdd702392b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_key",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "unfold find, add in |- *; intros d k k' v.",
                        "VernacExtend",
                        "66a009182ab6f4813d57104300d456d1b12aad21"
                    ]
                },
                {
                    "command": [
                        "case (Key.eqdec k k'); simpl in |- *; tauto.",
                        "VernacExtend",
                        "0b5c52f70bf1961522ec938babede1c617189c41"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "occ_inv",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "intros k k' v v' t1 t2 H.",
                        "VernacExtend",
                        "c706fd08b60808f0c7eb9de16116190935e8f462"
                    ]
                },
                {
                    "command": [
                        "inversion H using OCC_INV; auto with searchtrees.",
                        "VernacExtend",
                        "21d76c7e4cd9a4dc76fb94421f41f657412ea3b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_occ_Leaf",
            "line_nb": 437,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros k v H.",
                        "VernacExtend",
                        "0a0c237a0fe18950a4a7387d0d9b7ad2f137c591"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_leaf",
            "line_nb": 443,
            "steps": [
                {
                    "command": [
                        "intro k; apply min_intro.",
                        "VernacExtend",
                        "7014fc59eceb8d5be838b4c0e9d2ceac16a233ba"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1.",
                        "VernacExtend",
                        "389c04e455824abd99633abf60667aeaa306819a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maj_leaf",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "intro k; apply maj_intro; inversion_clear 1.",
                        "VernacExtend",
                        "fdc2c792640ab7023a982cb477f6d96c0676c819"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maj_not_occ",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros k v t H H'.",
                        "VernacExtend",
                        "ce55f6f6f6adbcee76ea2ff21f225e2f23ccb266"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; absurd (Key.lt k k); auto.",
                        "VernacExtend",
                        "bdd43ed7871e83e9b490f4bf96201dbfb39d4ec7"
                    ]
                },
                {
                    "command": [
                        "apply M.lt_irreflexive.",
                        "VernacExtend",
                        "370d705f92ca7616797a459df1a3841947e94400"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_not_occ",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros k v t H H'.",
                        "VernacExtend",
                        "ce55f6f6f6adbcee76ea2ff21f225e2f23ccb266"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; absurd (Key.lt k k); eauto.",
                        "VernacExtend",
                        "d2a303164a3bd4b16ab736cbcc59d203e1afb283"
                    ]
                },
                {
                    "command": [
                        "apply M.lt_irreflexive.",
                        "VernacExtend",
                        "370d705f92ca7616797a459df1a3841947e94400"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "search_tree_l",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "inversion_clear se; auto with searchtrees.",
                        "VernacExtend",
                        "e599153f05d02e0caefc41ce13e42ccca56da5f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "search_tree_r",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "inversion_clear se; auto with searchtrees.",
                        "VernacExtend",
                        "e599153f05d02e0caefc41ce13e42ccca56da5f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maj_l",
            "line_nb": 476,
            "steps": [
                {
                    "command": [
                        "inversion_clear se; auto with searchtrees.",
                        "VernacExtend",
                        "e599153f05d02e0caefc41ce13e42ccca56da5f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_r",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "inversion_clear se; auto with searchtrees.",
                        "VernacExtend",
                        "e599153f05d02e0caefc41ce13e42ccca56da5f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_right",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "intros p v' H; elim min_r.",
                        "VernacExtend",
                        "66178f1190e5a42676ab863e2dfbff624b997179"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros; absurd (Key.lt n p); eauto with searchtrees.",
                        "VernacExtend",
                        "9d69c41de75432f41d02497d1e89ab32b46d0725"
                    ]
                },
                {
                    "command": [
                        "apply M.le_not_lt; assumption.",
                        "VernacExtend",
                        "2bd0b4c845c7a54f0ba3c47bc3602c852f730120"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_left",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "intros p v' H; elim maj_l.",
                        "VernacExtend",
                        "5bafd923f5e40871ae94450d0355a5764600f8f3"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros; absurd (Key.lt p n); eauto with searchtrees.",
                        "VernacExtend",
                        "77acc8f8aed274daa159265cddd2f03bf706a81e"
                    ]
                },
                {
                    "command": [
                        "apply M.le_not_lt; assumption.",
                        "VernacExtend",
                        "2bd0b4c845c7a54f0ba3c47bc3602c852f730120"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "go_left",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "intros p v' H H0.",
                        "VernacExtend",
                        "86149df456a5c01f8b73937700fed03a3b567ab4"
                    ]
                },
                {
                    "command": [
                        "case (occ_inv _ _ _ _ _ _ H).",
                        "VernacExtend",
                        "11407f736a25cf9f812dc4735610b800a6ba6822"
                    ]
                },
                {
                    "command": [
                        "repeat simple destruct 1; absurd (Key.lt p n).",
                        "VernacExtend",
                        "5de3a5c31c85a9b4e8185e01a9c19773f6503579"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; apply M.lt_irreflexive.",
                        "VernacExtend",
                        "286396beee2a5ba55e675a616506842e536b1599"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; trivial.",
                        "VernacExtend",
                        "b6e97050d118d20a254cbb80d6c369f8d8b8de49"
                    ]
                },
                {
                    "command": [
                        "intro H2; absurd (occ v' p t2).",
                        "VernacExtend",
                        "b9c7cef189e0a4c7d84cc7ae1bf43820e41d79a5"
                    ]
                },
                {
                    "command": [
                        "apply not_right.",
                        "VernacExtend",
                        "5c709723c06f943ce4275b679fc9929b5de9c1be"
                    ]
                },
                {
                    "command": [
                        "apply Key.lt_le_weak; assumption.",
                        "VernacExtend",
                        "0e05a51b897cdbd39fc210b1767fc2c8925f5027"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "go_right",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "intros p v' H H0.",
                        "VernacExtend",
                        "86149df456a5c01f8b73937700fed03a3b567ab4"
                    ]
                },
                {
                    "command": [
                        "case (occ_inv _ _ _ _ _ _ H).",
                        "VernacExtend",
                        "11407f736a25cf9f812dc4735610b800a6ba6822"
                    ]
                },
                {
                    "command": [
                        "repeat simple destruct 1; absurd (Key.lt n p).",
                        "VernacExtend",
                        "7d73b48e9e34bc96621b837094c57442b609ae2c"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; apply M.lt_irreflexive.",
                        "VernacExtend",
                        "286396beee2a5ba55e675a616506842e536b1599"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; trivial.",
                        "VernacExtend",
                        "b6e97050d118d20a254cbb80d6c369f8d8b8de49"
                    ]
                },
                {
                    "command": [
                        "intro H2; absurd (occ v' p t1).",
                        "VernacExtend",
                        "673a45187fa6b8f09a366107c13c49a6567ddcc2"
                    ]
                },
                {
                    "command": [
                        "apply not_left.",
                        "VernacExtend",
                        "3e5f0a6ffe29e812ca9a69d7fe92c97ef475d3a8"
                    ]
                },
                {
                    "command": [
                        "apply Key.lt_le_weak; assumption.",
                        "VernacExtend",
                        "0e05a51b897cdbd39fc210b1767fc2c8925f5027"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "occ_dec",
            "line_nb": 578,
            "steps": [
                {
                    "command": [
                        "intro p; simple induction t.",
                        "VernacExtend",
                        "158e616b45b97f858c7a6e10112c9b199a593215"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "intros n v t1 R1 t2 R2 H.",
                        "VernacExtend",
                        "3870d13db4b91c0cb2bf61af83c53814518d5972"
                    ]
                },
                {
                    "command": [
                        "case (M.le_lt_dec p n).",
                        "VernacExtend",
                        "d15c451c866986153f6e262bb5d8fa0e4b77f929"
                    ]
                },
                {
                    "command": [
                        "intro H0; case (M.le_lt_eq_dec p n H0).",
                        "VernacExtend",
                        "ecc4be77089af8a6c14f340b51ff15c0bdf04725"
                    ]
                },
                {
                    "command": [
                        "intro H1; case R1.",
                        "VernacExtend",
                        "ba77da0dd562bd769c874af1743e53af6b9143e1"
                    ]
                },
                {
                    "command": [
                        "eauto with searchtrees.",
                        "VernacExtend",
                        "ca8b25f11b7e130194c903648a86b77efc4ad630"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; intros v' H'.",
                        "VernacExtend",
                        "639aa97a9d84cbfffa8883e2a2ba68927baf5e6a"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists v'; eauto with searchtrees.",
                        "VernacExtend",
                        "acd6a219fb556fb729a7eb2b6edc57a866d7b6ed"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intros v0 H3.",
                        "VernacExtend",
                        "5a5d2b59403ad94476227152906ecd298a634d78"
                    ]
                },
                {
                    "command": [
                        "apply (n0 v0); eauto with searchtrees.",
                        "VernacExtend",
                        "9dbeda6dbad629ec9b6b4364a0eac6ead7fb5528"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; left.",
                        "VernacExtend",
                        "085e84cb027fe28d58eba305462316706530cc28"
                    ]
                },
                {
                    "command": [
                        "exists v; eauto with searchtrees.",
                        "VernacExtend",
                        "3d85738009c82abe2a60d039da709c214c4e6a6b"
                    ]
                },
                {
                    "command": [
                        "intro H2; case R2.",
                        "VernacExtend",
                        "3180a1d8458663a572ac102378d2e7a9aa551689"
                    ]
                },
                {
                    "command": [
                        "eauto with searchtrees.",
                        "VernacExtend",
                        "ca8b25f11b7e130194c903648a86b77efc4ad630"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; intros v' H'.",
                        "VernacExtend",
                        "639aa97a9d84cbfffa8883e2a2ba68927baf5e6a"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists v'; eauto with searchtrees.",
                        "VernacExtend",
                        "acd6a219fb556fb729a7eb2b6edc57a866d7b6ed"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intros v0 H3.",
                        "VernacExtend",
                        "5a5d2b59403ad94476227152906ecd298a634d78"
                    ]
                },
                {
                    "command": [
                        "apply (n0 v0); eauto with searchtrees.",
                        "VernacExtend",
                        "9dbeda6dbad629ec9b6b4364a0eac6ead7fb5528"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "insert_leaf",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "intro n; split; auto with searchtrees.",
                        "VernacExtend",
                        "4ced3b90b317021cf141df176cf06fffbdfd36d5"
                    ]
                },
                {
                    "command": [
                        "intros p k H; inversion_clear H; auto with searchtrees.",
                        "VernacExtend",
                        "932a42ab749a1f2b92a981e7055dbc698299d7c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_l",
            "line_nb": 612,
            "steps": [
                {
                    "command": [
                        "intros n p v v' t1 t'1 t2 H H0 H1; split.",
                        "VernacExtend",
                        "8ef0c270565fb469bb263fd059a244a1589a8d6e"
                    ]
                },
                {
                    "command": [
                        "intros p0 v'0 H2; inversion_clear H2.",
                        "VernacExtend",
                        "1dff03b42793f615eb20f6243661bb1cf5cf8563"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "case H1; intros.",
                        "VernacExtend",
                        "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
                    ]
                },
                {
                    "command": [
                        "case (H2 _ _ H3).",
                        "VernacExtend",
                        "562e652f8f787ad891e727c50cc7e5c45957445e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "case H1; intros.",
                        "VernacExtend",
                        "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
                    ]
                },
                {
                    "command": [
                        "eauto with searchtrees.",
                        "VernacExtend",
                        "ca8b25f11b7e130194c903648a86b77efc4ad630"
                    ]
                },
                {
                    "command": [
                        "intros p0 v'0 H2.",
                        "VernacExtend",
                        "bb2b2fd2b7de747a6e84365763aae2e9ad9b98b0"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "case H1; intros.",
                        "VernacExtend",
                        "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
                    ]
                },
                {
                    "command": [
                        "elim (H5 p0 v'0); auto with searchtrees.",
                        "VernacExtend",
                        "7254fd0ed6d95040b71ec6baa519e53e0d03eedb"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "case H1; constructor 2; auto with searchtrees.",
                        "VernacExtend",
                        "d8444bab8f20924ce34831198d47ffcbe3142bfd"
                    ]
                },
                {
                    "command": [
                        "eapply search_tree_r; eauto with searchtrees.",
                        "VernacExtend",
                        "ac852d5b5a19134d0af0ee891d5e8606e52b508f"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "elim (H4 _ _ H6).",
                        "VernacExtend",
                        "7d38073f437409cb9ea36f1266587751fa199c98"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (maj p t1).",
                        "VernacExtend",
                        "72373a75b992291a4a3157c510b2b12988ec607f"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1; eauto with searchtrees.",
                        "VernacExtend",
                        "aae08f1e63f7c24a526189ac2b28e10eb833ae42"
                    ]
                },
                {
                    "command": [
                        "eauto with searchtrees.",
                        "VernacExtend",
                        "ca8b25f11b7e130194c903648a86b77efc4ad630"
                    ]
                },
                {
                    "command": [
                        "repeat simple destruct 1.",
                        "VernacExtend",
                        "f5abf82008177a329bad0d13bd92aec579e741aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "eauto with searchtrees.",
                        "VernacExtend",
                        "ca8b25f11b7e130194c903648a86b77efc4ad630"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_r",
            "line_nb": 641,
            "steps": [
                {
                    "command": [
                        "intros n p v v' t1 t2 t'2 H H0 H1; split.",
                        "VernacExtend",
                        "d6630d14ac2d6a580506987779c9ed9cf1feb050"
                    ]
                },
                {
                    "command": [
                        "intros p0 v'0 H2; inversion_clear H2.",
                        "VernacExtend",
                        "1dff03b42793f615eb20f6243661bb1cf5cf8563"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "case H1; intros.",
                        "VernacExtend",
                        "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
                    ]
                },
                {
                    "command": [
                        "case (H2 _ _ H3).",
                        "VernacExtend",
                        "562e652f8f787ad891e727c50cc7e5c45957445e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "case H1; intros.",
                        "VernacExtend",
                        "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "intros p0 v'0 H2.",
                        "VernacExtend",
                        "bb2b2fd2b7de747a6e84365763aae2e9ad9b98b0"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "case H1; intros.",
                        "VernacExtend",
                        "8fc5d0277744769fbbf264a4c9f3e8b26296ec16"
                    ]
                },
                {
                    "command": [
                        "elim (H5 p0 v'0 H3); auto with searchtrees.",
                        "VernacExtend",
                        "fd2d142520c4f8a0bcb7fcfe716e063ec1a46e4a"
                    ]
                },
                {
                    "command": [
                        "case H1; constructor 2; auto with searchtrees.",
                        "VernacExtend",
                        "d8444bab8f20924ce34831198d47ffcbe3142bfd"
                    ]
                },
                {
                    "command": [
                        "eapply search_tree_l; eauto with searchtrees.",
                        "VernacExtend",
                        "e91daed9e21bc99e5f74e2adb467ba79ebb29e18"
                    ]
                },
                {
                    "command": [
                        "eauto with searchtrees.",
                        "VernacExtend",
                        "ca8b25f11b7e130194c903648a86b77efc4ad630"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "case (H4 _ _ H6).",
                        "VernacExtend",
                        "c2fc8a34f36dca688c1a22dae1fc4bab2c5e5e7f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (min p t2).",
                        "VernacExtend",
                        "580ed5b9eba5b1939b9f7d56b58e5706cf7f5b16"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1; eauto with searchtrees.",
                        "VernacExtend",
                        "aae08f1e63f7c24a526189ac2b28e10eb833ae42"
                    ]
                },
                {
                    "command": [
                        "eauto with searchtrees.",
                        "VernacExtend",
                        "ca8b25f11b7e130194c903648a86b77efc4ad630"
                    ]
                },
                {
                    "command": [
                        "repeat simple destruct 1.",
                        "VernacExtend",
                        "f5abf82008177a329bad0d13bd92aec579e741aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_eq",
            "line_nb": 670,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "inversion 1; eauto with searchtrees.",
                        "VernacExtend",
                        "8e63bcccaa27e0e14c43e76eafd6eb57819d8282"
                    ]
                },
                {
                    "command": [
                        "eauto with searchtrees.",
                        "VernacExtend",
                        "ca8b25f11b7e130194c903648a86b77efc4ad630"
                    ]
                },
                {
                    "command": [
                        "inversion 1; eauto with searchtrees.",
                        "VernacExtend",
                        "8e63bcccaa27e0e14c43e76eafd6eb57819d8282"
                    ]
                },
                {
                    "command": [
                        "inversion H; eauto with searchtrees.",
                        "VernacExtend",
                        "cb68eca68df2d3453dcbfc052901bda189ca35b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert",
            "line_nb": 678,
            "steps": [
                {
                    "command": [
                        "simple induction t.",
                        "VernacExtend",
                        "ed99ea08a11cb71b621c4562818ea87e52158a3d"
                    ]
                },
                {
                    "command": [
                        "exists (bnode n v leaf leaf).",
                        "VernacExtend",
                        "479c287d34f247f3ac6e96f86e422d8e4a1896e6"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "unfold insert_spec at 3 in |- *; intros p b t1 H1 t2 H2 H0.",
                        "VernacExtend",
                        "a5b9fa0d0e382fbea14dcd2a99beec5eea0e9428"
                    ]
                },
                {
                    "command": [
                        "case (M.le_lt_dec n p).",
                        "VernacExtend",
                        "528ed866ed8d998ba7d9be63560c8819ca2e786a"
                    ]
                },
                {
                    "command": [
                        "intro H; case (M.le_lt_eq_dec n p H).",
                        "VernacExtend",
                        "f0679135526e3bc0eab247dfcac42c983130ee47"
                    ]
                },
                {
                    "command": [
                        "intro H'.",
                        "VernacExtend",
                        "3160ba192fa58e5db60b3e67645ce925759bb788"
                    ]
                },
                {
                    "command": [
                        "case (H1 (search_tree_l _ _ _ _ H0)).",
                        "VernacExtend",
                        "78983e491a8aeef034312d794df9f84369d62651"
                    ]
                },
                {
                    "command": [
                        "intros t3; exists (bnode p b t3 t2).",
                        "VernacExtend",
                        "b7d47bc8083c4f55406e64d8acd7d969123bdf36"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "intro e; rewrite e; exists (bnode p v t1 t2); auto with searchtrees.",
                        "VernacExtend",
                        "ebd72f5a699c385cb4f940274de796fcd97f9b6f"
                    ]
                },
                {
                    "command": [
                        "case (H2 (search_tree_r _ _ _ _ H0)).",
                        "VernacExtend",
                        "ba2ffc4174b9209ffc0294dd695ae1eb3feeacfb"
                    ]
                },
                {
                    "command": [
                        "intros t3; exists (bnode p b t1 t3).",
                        "VernacExtend",
                        "e1f25aed6d56ede6f6e781c1d3b8c5926a839353"
                    ]
                },
                {
                    "command": [
                        "auto with searchtrees.",
                        "VernacExtend",
                        "0c5fffbc47c1bf78dd304e0ac997148233b2cfbe"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "empty",
            "line_nb": 695,
            "steps": [
                {
                    "command": [
                        "unfold dict in |- *; exists leaf.",
                        "VernacExtend",
                        "16301f8c4719a06a3c24b07cda741f87f78efb90"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "add",
            "line_nb": 700,
            "steps": [
                {
                    "command": [
                        "refine (fun (k : key) (v : data) (d : dict) => let (t, Ht) := d in let (x, Hx) := insert k v t Ht in exist search_tree x _).",
                        "VernacExtend",
                        "6c54028aafb91d7005aca9425fac64db98d56976"
                    ]
                },
                {
                    "command": [
                        "case Hx; auto.",
                        "VernacExtend",
                        "77cb879aa4295ac85f27833660ac120655ac8d32"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "D_search",
            "line_nb": 705,
            "steps": [
                {
                    "command": [
                        "simple destruct d; simpl in |- *; auto.",
                        "VernacExtend",
                        "57ee22ebd670fd4bf2707cb91dd046261b533387"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_occ_dec",
            "line_nb": 708,
            "steps": [
                {
                    "command": [
                        "unfold find in |- *; simple destruct d; simpl in |- *; intros.",
                        "VernacExtend",
                        "deec4041645651dfa585e24bdd78612da87a6f70"
                    ]
                },
                {
                    "command": [
                        "case (occ_dec k x s); simpl in |- *.",
                        "VernacExtend",
                        "184b4108d0155d8f643fce01c840ec3f259230e4"
                    ]
                },
                {
                    "command": [
                        "simple destruct s0; simpl in |- *.",
                        "VernacExtend",
                        "842a26c8b0d63a249fee635cefc17a4518be51a9"
                    ]
                },
                {
                    "command": [
                        "intros x0 H0; case (occ_unicity x s _ _ _ H H0).",
                        "VernacExtend",
                        "5de5897a2e34c878098e257ef00b4e56272ca1e0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (n v H).",
                        "VernacExtend",
                        "830e8b95db1f85577dbbe66396dea8209f50f3ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_find_occ_dec",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "unfold find in |- *; simple destruct d; simpl in |- *; intros.",
                        "VernacExtend",
                        "deec4041645651dfa585e24bdd78612da87a6f70"
                    ]
                },
                {
                    "command": [
                        "case (occ_dec k x s); simpl in |- *.",
                        "VernacExtend",
                        "184b4108d0155d8f643fce01c840ec3f259230e4"
                    ]
                },
                {
                    "command": [
                        "simple destruct s0; simpl in |- *.",
                        "VernacExtend",
                        "842a26c8b0d63a249fee635cefc17a4518be51a9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (H _ o).",
                        "VernacExtend",
                        "b513e55b2cce4a4524c3bbcc3744a7fe48c0ed9c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "success2",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "simple destruct d.",
                        "VernacExtend",
                        "66904205d39254c1364456c2c7e7bbb1818964c4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x s k v; case (insert k v x s); simpl in |- *.",
                        "VernacExtend",
                        "30fde2b229198141daa100b5bceea2afaa45e8b1"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1.",
                        "VernacExtend",
                        "762620e55a2985cba478cdf956c4e084168a1b05"
                    ]
                },
                {
                    "command": [
                        "eauto with searchtrees.",
                        "VernacExtend",
                        "ca8b25f11b7e130194c903648a86b77efc4ad630"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_key1",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "simple destruct d.",
                        "VernacExtend",
                        "66904205d39254c1364456c2c7e7bbb1818964c4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x s k k' v v'; case (insert k' v' x s); simpl in |- *.",
                        "VernacExtend",
                        "0f8afe932659e4cd413da80186ad91f9a45bdebf"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; intros.",
                        "VernacExtend",
                        "12103091255e8d3b11b192621c770f35409b153a"
                    ]
                },
                {
                    "command": [
                        "case (H1 _ _ H4).",
                        "VernacExtend",
                        "1e8b70e7421186806813fb465f13bf7f90086e1e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; absurd (k' = k); auto.",
                        "VernacExtend",
                        "c3a94d97000cd7df65f03cfec14873db0701f86e"
                    ]
                },
                {
                    "command": [
                        "case H5; auto.",
                        "VernacExtend",
                        "e79d3e3ec49050922a39a0cd619ca1a9771865c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_key2",
            "line_nb": 753,
            "steps": [
                {
                    "command": [
                        "simple destruct d; simpl in |- *.",
                        "VernacExtend",
                        "00d9509a22ea603c0466fde1fd81cae4edfd98ad"
                    ]
                },
                {
                    "command": [
                        "intros x s k k' v v'; case (insert k' v' x s); simpl in |- *.",
                        "VernacExtend",
                        "0f8afe932659e4cd413da80186ad91f9a45bdebf"
                    ]
                },
                {
                    "command": [
                        "simple destruct 1; intros.",
                        "VernacExtend",
                        "12103091255e8d3b11b192621c770f35409b153a"
                    ]
                },
                {
                    "command": [
                        "case (H _ _ H4).",
                        "VernacExtend",
                        "d5f0da1da72ad8bb3ec665cd2e83f6f38dc8e23f"
                    ]
                },
                {
                    "command": [
                        "intro H5; case (H3 H5).",
                        "VernacExtend",
                        "f9d2a27cb630758e1fd92a0949701ff30b223daa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}