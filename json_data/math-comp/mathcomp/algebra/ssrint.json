{
    "filename": "mathcomp/algebra/ssrint.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat choice seq.",
            "VernacRequire",
            "dafc0f5fb38dd345fcbd6c37957d1ae0a05e8407"
        ],
        [
            "From mathcomp Require Import fintype finfun bigop ssralg countalg ssrnum poly.",
            "VernacRequire",
            "0db2aa3fccd0c62ab9d46cb3b5d8a07fd006d90b"
        ],
        [
            "Import GRing.Theory Num.Theory.",
            "VernacImport",
            "b7c34fb48ecb00de4262e619b1ca3ecacdf18e53"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Delimit Scope int_scope with Z.",
            "VernacDelimiters",
            "00864cdff7d0d630cccab11678456cd24d1411e4"
        ],
        [
            "Local Open Scope int_scope.",
            "VernacOpenCloseScope",
            "9da06e86a3f7f990c3a16d34d49923c761000c6a"
        ],
        [
            "Variant int : Set := Posz of nat | Negz of nat.",
            "VernacInductive",
            "6c16c1b544d030e90544c764645a260adce8073d"
        ],
        [
            "Notation \"n %:Z\" := (Posz n) (at level 2, left associativity, format \"n %:Z\", only parsing) : int_scope.",
            "VernacNotation",
            "8597b1d3a8bb2b6196761e1d86afbd9b4b505e35"
        ],
        [
            "Notation \"n %:Z\" := (Posz n) (at level 2, left associativity, format \"n %:Z\", only parsing) : ring_scope.",
            "VernacNotation",
            "e98afd80bd47038d24baa12c2255cf65df4e02cf"
        ],
        [
            "Notation \"n = m :> 'in' 't'\" := (Posz n = Posz m) (at level 70, m at next level, format \"n = m :> 'in' 't'\") : ring_scope.",
            "VernacNotation",
            "9aa88906168700c250e313e7fc1a88a454cea4e4"
        ],
        [
            "Notation \"n == m :> 'in' 't'\" := (Posz n == Posz m) (at level 70, m at next level, format \"n == m :> 'in' 't'\") : ring_scope.",
            "VernacNotation",
            "e7884220367506143de9251932724f51a27d4091"
        ],
        [
            "Notation \"n != m :> 'in' 't'\" := (Posz n != Posz m) (at level 70, m at next level, format \"n != m :> 'in' 't'\") : ring_scope.",
            "VernacNotation",
            "82ee64e037fcdc3d8946fba479d93b3e862c6b17"
        ],
        [
            "Notation \"n <> m :> 'in' 't'\" := (Posz n <> Posz m) (at level 70, m at next level, format \"n <> m :> 'in' 't'\") : ring_scope.",
            "VernacNotation",
            "315e658dc8501fa1553508f6e10d328340568eb3"
        ],
        [
            "Definition natsum_of_int (m : int) : nat + nat := match m with Posz p => inl _ p | Negz n => inr _ n end.",
            "VernacDefinition",
            "29eb868557ae734c10a000bb6c9b17a2983d743f"
        ],
        [
            "Definition int_of_natsum (m : nat + nat) := match m with inl p => Posz p | inr n => Negz n end.",
            "VernacDefinition",
            "935e0b111c766c5f79a3443759a721b0f5ad3d65"
        ],
        [
            "Lemma natsum_of_intK : cancel natsum_of_int int_of_natsum.",
            "VernacStartTheoremProof",
            "232bc8458c2d56585bea49b940309aeb2ae54532"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition int_eqMixin := CanEqMixin natsum_of_intK.",
            "VernacDefinition",
            "b87d8673919cfde7cc02902f5e7ea27cdc68d727"
        ],
        [
            "Definition int_countMixin := CanCountMixin natsum_of_intK.",
            "VernacDefinition",
            "147fe15e39e776efdfbf1a6487185bb0779fc497"
        ],
        [
            "Definition int_choiceMixin := CountChoiceMixin int_countMixin.",
            "VernacDefinition",
            "46743ce11d23b13e474b524e18f787c7ff8833cb"
        ],
        [
            "Canonical int_eqType := Eval hnf in EqType int int_eqMixin.",
            "VernacDefinition",
            "86f8dfc7128346138f794c124aaaed9a9c881e9d"
        ],
        [
            "Canonical int_choiceType := Eval hnf in ChoiceType int int_choiceMixin.",
            "VernacDefinition",
            "b833d85248a7f2bcb048135555af5689ef76a22f"
        ],
        [
            "Canonical int_countType := Eval hnf in CountType int int_countMixin.",
            "VernacDefinition",
            "a8eeeea0e8929cc8114520049494b65f259b2f22"
        ],
        [
            "Lemma eqz_nat (m n : nat) : (m%:Z == n%:Z) = (m == n).",
            "VernacStartTheoremProof",
            "a327b2989363f28ad0aea0031bf05dd0d65ac447"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module intZmod.",
            "VernacDefineModule",
            "c37ae8382c48500f40f1c1fc71683de651c142cd"
        ],
        [
            "Section intZmod.",
            "VernacBeginSection",
            "d1966b2957d0023522b58828f25b1e16ceb02315"
        ],
        [
            "Definition addz (m n : int) := match m, n with | Posz m', Posz n' => Posz (m' + n') | Negz m', Negz n' => Negz (m' + n').+1 | Posz m', Negz n' => if n' < m' then Posz (m' - n'.+1) else Negz (n' - m') | Negz n', Posz m' => if n' < m' then Posz (m' - n'.+1) else Negz (n' - m') end.",
            "VernacDefinition",
            "4e1157cf937039bc5d03e2117bef14efd624fca3"
        ],
        [
            "Definition oppz m := nosimpl match m with | Posz n => if n is (n'.+1)%N then Negz n' else Posz 0 | Negz n => Posz (n.+1)%N end.",
            "VernacDefinition",
            "0ee76e89c00c38a34319551d946fc29d6cfcafd2"
        ],
        [
            "Local Notation \"0\" := (Posz 0) : int_scope.",
            "VernacNotation",
            "52678876f4642d8f05363a6847fbc272819e3d38"
        ],
        [
            "Local Notation \"-%Z\" := (@oppz) : int_scope.",
            "VernacNotation",
            "06baf7bf6a5323953e319a3ec0b16ecd9785fe11"
        ],
        [
            "Local Notation \"- x\" := (oppz x) : int_scope.",
            "VernacNotation",
            "5dcf20dbc5acf4dbe6539e1f534b8652c7e70cf4"
        ],
        [
            "Local Notation \"+%Z\" := (@addz) : int_scope.",
            "VernacNotation",
            "3780d589c89c08336026b5482f574e085f71b740"
        ],
        [
            "Local Notation \"x + y\" := (addz x y) : int_scope.",
            "VernacNotation",
            "fd12331622adf7c906d7deeb8d82233b0f91abdf"
        ],
        [
            "Local Notation \"x - y\" := (x + - y) : int_scope.",
            "VernacNotation",
            "8fc3e5c9a3a0b1b8482a105a0e7b88270def8e0e"
        ],
        [
            "Lemma PoszD : {morph Posz : m n / (m + n)%N >-> m + n}.",
            "VernacStartTheoremProof",
            "d8e7a7e8bd0750a70c6508900e9b5c4668044fff"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma NegzE (n : nat) : Negz n = - n.+1.",
            "VernacStartTheoremProof",
            "8e9caeaa38af7991587f347c55a8d7790d1a9c07"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_rect (P : int -> Type) : P 0 -> (forall n : nat, P n -> P (n.+1)) -> (forall n : nat, P (- n) -> P (- (n.+1))) -> forall n : int, P n.",
            "VernacStartTheoremProof",
            "65f5b87492868205a12a1c2f00174e07fd5e3229"
        ],
        [
            "by move=> P0 hPp hPn []; elim=> [|n ihn]//; do ?[apply: hPn | apply: hPp].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition int_rec := int_rect.",
            "VernacDefinition",
            "5c89265ae9be1b7b7fc55751a00dbf7da31dfa20"
        ],
        [
            "Definition int_ind := int_rect.",
            "VernacDefinition",
            "b6eea41e8ab9c04ea5762ebe8e71710efe6ec7bd"
        ],
        [
            "Variant int_spec (x : int) : int -> Type := | ZintNull of x = 0 : int_spec x 0 | ZintPos n of x = n.+1 : int_spec x n.+1 | ZintNeg n of x = - (n.+1)%:Z : int_spec x (- n.+1).",
            "VernacInductive",
            "63976c2c1d635da339f6ad3e6975479cdc7c7b47"
        ],
        [
            "Lemma intP x : int_spec x x.",
            "VernacStartTheoremProof",
            "a144108fd14f272b36e553ea83bf965e8544275e"
        ],
        [
            "by move: x=> [] []; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addzC : commutative addz.",
            "VernacStartTheoremProof",
            "7e22998176a7d794be30e8d7057eb271650b12b4"
        ],
        [
            "by move=> [] m [] n //=; rewrite addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add0z : left_id 0 addz.",
            "VernacStartTheoremProof",
            "2df43278cf32f18cbd2676b17dc0e6ecfd9e2aef"
        ],
        [
            "by move=> [] [|].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppzK : involutive oppz.",
            "VernacStartTheoremProof",
            "763de01f5d65d1b6d020d7bc3e263e74baa6769d"
        ],
        [
            "by do 2?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppz_add : {morph oppz : m n / m + n}.",
            "VernacStartTheoremProof",
            "c57e44bd736f1183f42756655bfb47cc22d6e5de"
        ],
        [
            "move=> [[|n]|n] [[|m]|m] /=; rewrite ?NegzE ?oppzK ?addnS ?addn0 ?subn0 //; rewrite ?ltnS[m <= n]leqNgt [n <= m]leqNgt; case: ltngtP=> hmn /=; by rewrite ?hmn ?subnn // ?oppzK ?subSS ?subnS ?prednK // ?subn_gt0.",
            "VernacExtend",
            "5f0d39b8e08d7cae3fc43b197f4021045a6e6e81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add1Pz (n : int) : 1 + (n - 1) = n.",
            "VernacStartTheoremProof",
            "948803dc4a62229ed49c57cba776f02429d4699c"
        ],
        [
            "by case: (intP n)=> // n' /= _; rewrite ?(subn1, addn0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subSz1 (n : int) : 1 + n - 1 = n.",
            "VernacStartTheoremProof",
            "a4e65f13bbd3795eeb833ba7fcf9a28de033b7fb"
        ],
        [
            "by apply: (inv_inj oppzK); rewrite addzC !oppz_add oppzK [_ - n]addzC add1Pz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addSnz (m : nat) (n : int) : (m.+1%N) + n = 1 + (m + n).",
            "VernacStartTheoremProof",
            "b809e71e15ae8cabf8d2cd3fef695816e3379c89"
        ],
        [
            "move: m n=> [|m] [] [|n] //=; rewrite ?add1n ?subn1 // !(ltnS, subSS).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite [n <= m]leqNgt; case: ltngtP=> hmn /=; rewrite ?hmn ?subnn //.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by rewrite subnS add1n prednK ?subn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltnS leqn0 subn_eq0 leqNgt hmn /= subnS subn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addSz (m n : int) : (1 + m) + n = 1 + (m + n).",
            "VernacStartTheoremProof",
            "c8d87ebae6a0506370d70d1cc9ed20f7572b5d86"
        ],
        [
            "case: m => [] m; first by rewrite -PoszD add1n addSnz.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !NegzE; apply: (inv_inj oppzK).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !oppz_add !oppzK addSnz [-1%:Z + _]addzC addSnz add1Pz.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [-1%:Z + _]addzC subSz1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addPz (m n : int) : (m - 1) + n = (m + n) - 1.",
            "VernacStartTheoremProof",
            "c2230fbd583fef6925c337bf72effde12b990fcb"
        ],
        [
            "by apply: (inv_inj oppzK); rewrite !oppz_add oppzK [_ + 1]addzC addSz addzC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addzA : associative addz.",
            "VernacStartTheoremProof",
            "84285efab55363e6de3ead9bd3235b600408301c"
        ],
        [
            "elim=> [|m ihm|m ihm] n p; first by rewrite !add0z.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -add1n PoszD !addSz ihm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -add1n addnC PoszD oppz_add !addPz ihm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addNz : left_inverse (0:int) oppz addz.",
            "VernacStartTheoremProof",
            "0c9ec97b8478d9793727756ce7523675d765ed63"
        ],
        [
            "by do 3?elim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma predn_int (n : nat) : 0 < n -> n.-1%:Z = n - 1.",
            "VernacStartTheoremProof",
            "754d4aa7adfa41dbce331995e11e82295f12e073"
        ],
        [
            "by case: n=> // n _ /=; rewrite subn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Mixin := ZmodMixin addzA addzC add0z addNz.",
            "VernacDefinition",
            "c0c906af87861b8a7200e1fb8fd3070fe55d2c76"
        ],
        [
            "End intZmod.",
            "VernacEndSegment",
            "99fc56423f6ce74ee6562ac27d950d501fe94705"
        ],
        [
            "End intZmod.",
            "VernacEndSegment",
            "99fc56423f6ce74ee6562ac27d950d501fe94705"
        ],
        [
            "Canonical int_ZmodType := ZmodType int intZmod.Mixin.",
            "VernacDefinition",
            "40194beafe7247595ab03247bb976780bf3555aa"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Section intZmoduleTheory.",
            "VernacBeginSection",
            "2324ec558653411c2f05c086d7211c18671cf8fd"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma PoszD : {morph Posz : n m / (n + m)%N >-> n + m}.",
            "VernacStartTheoremProof",
            "ad20350d095a3724ae3735117701357fc5af0917"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NegzE (n : nat) : Negz n = -(n.+1)%:Z.",
            "VernacStartTheoremProof",
            "c1893e9ef30379c3056b753c8ec17a67be09404c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_rect (P : int -> Type) : P 0 -> (forall n : nat, P n -> P (n.+1)%N) -> (forall n : nat, P (- (n%:Z)) -> P (- (n.+1%N%:Z))) -> forall n : int, P n.",
            "VernacStartTheoremProof",
            "9cba1e806bbce5d117f24d81a0b9d34f7fdccd46"
        ],
        [
            "by move=> P0 hPp hPn []; elim=> [|n ihn]//; do ?[apply: hPn | apply: hPp].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition int_rec := int_rect.",
            "VernacDefinition",
            "5c89265ae9be1b7b7fc55751a00dbf7da31dfa20"
        ],
        [
            "Definition int_ind := int_rect.",
            "VernacDefinition",
            "b6eea41e8ab9c04ea5762ebe8e71710efe6ec7bd"
        ],
        [
            "Variant int_spec (x : int) : int -> Type := | ZintNull : int_spec x 0 | ZintPos n : int_spec x n.+1 | ZintNeg n : int_spec x (- (n.+1)%:Z).",
            "VernacInductive",
            "1f43e915742682875908017ea66c27124e6fcdd6"
        ],
        [
            "Lemma intP x : int_spec x x.",
            "VernacStartTheoremProof",
            "a144108fd14f272b36e553ea83bf965e8544275e"
        ],
        [
            "by move: x=> [] [] *; rewrite ?NegzE; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition oppz_add := (@opprD [zmodType of int]).",
            "VernacDefinition",
            "5c85c6b590d208692c2654dc6ae7f88df82305bc"
        ],
        [
            "Lemma subzn (m n : nat) : (n <= m)%N -> m%:Z - n%:Z = (m - n)%N.",
            "VernacStartTheoremProof",
            "f2890ab51b397c6b7927b8663d57c116cbc44325"
        ],
        [
            "elim: n=> //= [|n ihn] hmn; first by rewrite subr0 subn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite subnS -addn1 !PoszD opprD addrA ihn 1?ltnW //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite intZmod.predn_int // subn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subzSS (m n : nat) : m.+1%:Z - n.+1%:Z = m%:Z - n%:Z.",
            "VernacStartTheoremProof",
            "fa3886000ac8f465c6d6ff1588e349078f1faa2e"
        ],
        [
            "by elim: n m=> [|n ihn] m //; rewrite !subzn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End intZmoduleTheory.",
            "VernacEndSegment",
            "1fc762f7702cd087847588f3e01b2fb22180655c"
        ],
        [
            "Module intRing.",
            "VernacDefineModule",
            "f9eb935f3027db1296e00660b0207ff540692836"
        ],
        [
            "Section intRing.",
            "VernacBeginSection",
            "ab5acf26e60de5c79140e21f67ec0cd31610d1ca"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Definition mulz (m n : int) := match m, n with | Posz m', Posz n' => (m' * n')%N%:Z | Negz m', Negz n' => (m'.+1%N * n'.+1%N)%N%:Z | Posz m', Negz n' => - (m' * (n'.+1%N))%N%:Z | Negz n', Posz m' => - (m' * (n'.+1%N))%N%:Z end.",
            "VernacDefinition",
            "c4d63505654152bd528dceea307fd4b5c372a664"
        ],
        [
            "Local Notation \"1\" := (1%N:int) : int_scope.",
            "VernacNotation",
            "a72f7f5e7200899facfef991ca362039bb179ed0"
        ],
        [
            "Local Notation \"*%Z\" := (@mulz) : int_scope.",
            "VernacNotation",
            "e067ad596b255e44a6498116339e0bad523ad3ca"
        ],
        [
            "Local Notation \"x * y\" := (mulz x y) : int_scope.",
            "VernacNotation",
            "648d25fe2c768ab5fe3859804b4883eef04517e1"
        ],
        [
            "Lemma mul0z : left_zero 0 *%Z.",
            "VernacStartTheoremProof",
            "7c97e841f62dae59e6d1f91d554606fcaa948f5b"
        ],
        [
            "by case=> [n|[|n]] //=; rewrite muln0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulzC : commutative mulz.",
            "VernacStartTheoremProof",
            "7f4465ba7dfacb593c7aa8af3fdc9f8cc36cb249"
        ],
        [
            "by move=> [] m [] n //=; rewrite mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulz0 : right_zero 0 *%Z.",
            "VernacStartTheoremProof",
            "1b0275d2bfeb82076caa3d67d51e0e1baf17b911"
        ],
        [
            "by move=> x; rewrite mulzC mul0z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulzN (m n : int) : (m * (- n))%Z = - (m * n)%Z.",
            "VernacStartTheoremProof",
            "f520ec72bc6904b1292c8bb0c1a2a2dcbb26e85f"
        ],
        [
            "by case: (intP m)=> {m} [|m|m]; rewrite ?mul0z //; case: (intP n)=> {n} [|n|n]; rewrite ?mulz0 //= mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulNz (m n : int) : ((- m) * n)%Z = - (m * n)%Z.",
            "VernacStartTheoremProof",
            "d922716bd96d81d6ad03ae4efed4011f8c67cbb3"
        ],
        [
            "by rewrite mulzC mulzN mulzC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulzA : associative mulz.",
            "VernacStartTheoremProof",
            "e8a4e02f59f3c07f51da954733e48f06626a40ec"
        ],
        [
            "by move=> [] m [] n [] p; rewrite ?NegzE ?(mulnA,mulNz,mulzN,opprK) //= ?mulnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul1z : left_id 1%Z mulz.",
            "VernacStartTheoremProof",
            "377210b7e3edad4196596c0eb69edd8b4f8cc621"
        ],
        [
            "by case=> [[|n]|n] //=; rewrite ?mul1n// plusE addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulzS (x : int) (n : nat) : (x * n.+1%:Z)%Z = x + (x * n)%Z.",
            "VernacStartTheoremProof",
            "63bab91d06ebb56656ae7e69c8d55ddf0acd3434"
        ],
        [
            "by case: (intP x)=> [|m'|m'] //=; [rewrite mulnS|rewrite mulSn -opprD].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulz_addl : left_distributive mulz (+%R).",
            "VernacStartTheoremProof",
            "2dc854dcca43dbaebf709dc9e1edd852f7cc232b"
        ],
        [
            "move=> x y z; elim: z=> [|n|n]; first by rewrite !(mul0z,mulzC).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !mulzS=> ->; rewrite !addrA [X in X + _]addrAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !mulzN !mulzS -!opprD=> /oppr_inj->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !addrA [X in X + _]addrAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonzero1z : 1%Z != 0.",
            "VernacStartTheoremProof",
            "a4436f07af0aaecd5173134dff09c729111f1a1e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition comMixin := ComRingMixin mulzA mulzC mul1z mulz_addl nonzero1z.",
            "VernacDefinition",
            "633e277f37cecde3ac98f5e8d3f54c7b234a9996"
        ],
        [
            "End intRing.",
            "VernacEndSegment",
            "69f5eb3ece842ca8944fd059cbdaf2520cfcf429"
        ],
        [
            "End intRing.",
            "VernacEndSegment",
            "69f5eb3ece842ca8944fd059cbdaf2520cfcf429"
        ],
        [
            "Canonical int_Ring := Eval hnf in RingType int intRing.comMixin.",
            "VernacDefinition",
            "5f5e89463ed68342cb4cc6f38966c4e9b555da56"
        ],
        [
            "Canonical int_comRing := Eval hnf in ComRingType int intRing.mulzC.",
            "VernacDefinition",
            "ad8d5d2ccf4a4886ac984b8341df4203430a58cf"
        ],
        [
            "Section intRingTheory.",
            "VernacBeginSection",
            "e2ded1e2b644f1667f4855422df4f114aec3e0c3"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma PoszM : {morph Posz : n m / (n * m)%N >-> n * m}.",
            "VernacStartTheoremProof",
            "c83ea1fa3d2032fcfcae0d3c217698273ee42286"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intS (n : nat) : n.+1%:Z = 1 + n%:Z.",
            "VernacStartTheoremProof",
            "d57620b6934123b53b4853ad43fa2272e5947438"
        ],
        [
            "by rewrite -PoszD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma predn_int (n : nat) : (0 < n)%N -> n.-1%:Z = n%:Z - 1.",
            "VernacStartTheoremProof",
            "4da5332f78359eb42b2b51a049eb10ad9a673b9c"
        ],
        [
            "exact: intZmod.predn_int.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End intRingTheory.",
            "VernacEndSegment",
            "267cd74d7607f26ffc8a22b9e5763cbd94250057"
        ],
        [
            "Module intUnitRing.",
            "VernacDefineModule",
            "8d853b993fe9474c173a5b11237f7c6e0a2bd7cf"
        ],
        [
            "Section intUnitRing.",
            "VernacBeginSection",
            "69f84cfd402e2856f30cea63b546c69676cb9309"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Definition unitz := [qualify a n : int | (n == 1) || (n == -1)].",
            "VernacDefinition",
            "0015e93dd2003bf7b67c93719b599511519098b5"
        ],
        [
            "Definition invz n : int := n.",
            "VernacDefinition",
            "2a6b547cdff9d1c3f4cea57906390ffcc4b26988"
        ],
        [
            "Lemma mulVz : {in unitz, left_inverse 1%R invz *%R}.",
            "VernacStartTheoremProof",
            "a442ace0e8b65f96f7f649347ee1f60f93d7075d"
        ],
        [
            "by move=> n /pred2P[] ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulzn_eq1 m (n : nat) : (m * n == 1) = (m == 1) && (n == 1%N).",
            "VernacStartTheoremProof",
            "51afd06aed3822dc70a9274d2f0b09e86699c3c5"
        ],
        [
            "by case: m => m /=; [rewrite -PoszM [_==_]muln_eq1 | case: n].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitzPl m n : n * m = 1 -> m \\is a unitz.",
            "VernacStartTheoremProof",
            "040f50bdd69a91212065dfe4986bd13d7313d441"
        ],
        [
            "rewrite qualifE => /eqP.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by case: m => m; rewrite ?NegzE ?mulrN -?mulNr mulzn_eq1 => /andP[_ /eqP->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invz_out : {in [predC unitz], invz =1 id}.",
            "VernacStartTheoremProof",
            "0161e0939e58946bb893ccb995a37ede92b459b5"
        ],
        [
            "exact.",
            "VernacExtend",
            "6f8ef2f79d9f700fa94a7c87b5cc8bcbd915dec6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma idomain_axiomz m n : m * n = 0 -> (m == 0) || (n == 0).",
            "VernacStartTheoremProof",
            "1aec7253a9c3652962d9154f44e811fc3cec1a89"
        ],
        [
            "by case: m n => m [] n //= /eqP; rewrite ?(NegzE, mulrN, mulNr) ?oppr_eq0 -PoszM [_ == _]muln_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition comMixin := ComUnitRingMixin mulVz unitzPl invz_out.",
            "VernacDefinition",
            "a8252dbf6cdf8c8d678aa2ab9fc3b8c317be5fb2"
        ],
        [
            "End intUnitRing.",
            "VernacEndSegment",
            "1c137607cb7c886220d7c4650d813a159f8e6c6e"
        ],
        [
            "End intUnitRing.",
            "VernacEndSegment",
            "1c137607cb7c886220d7c4650d813a159f8e6c6e"
        ],
        [
            "Canonical int_unitRingType := Eval hnf in UnitRingType int intUnitRing.comMixin.",
            "VernacDefinition",
            "fa97f8208edd2d5faefd9f351549b10b6c4a8435"
        ],
        [
            "Canonical int_comUnitRing := Eval hnf in [comUnitRingType of int].",
            "VernacDefinition",
            "79f239c24312b98d4c873646ec910836a875d945"
        ],
        [
            "Canonical int_iDomain := Eval hnf in IdomainType int intUnitRing.idomain_axiomz.",
            "VernacDefinition",
            "7cb0dc805472be351e45c4ec74c9057397bc3761"
        ],
        [
            "Canonical int_countZmodType := [countZmodType of int].",
            "VernacDefinition",
            "a94e9c9552943d0914e802d6a8007ecedc2db4b3"
        ],
        [
            "Canonical int_countRingType := [countRingType of int].",
            "VernacDefinition",
            "7ca030f19d799366b58d25031dca6d6880491a45"
        ],
        [
            "Canonical int_countComRingType := [countComRingType of int].",
            "VernacDefinition",
            "bdcc2f65b471d08176fd631874996781d0792b1c"
        ],
        [
            "Canonical int_countUnitRingType := [countUnitRingType of int].",
            "VernacDefinition",
            "01771ca14dae02404dce50635d02f2d7e03de601"
        ],
        [
            "Canonical int_countComUnitRingType := [countComUnitRingType of int].",
            "VernacDefinition",
            "b9cf5b34acd1160e7b6284a5fb2ce06ca19a5e44"
        ],
        [
            "Canonical int_countIdomainType := [countIdomainType of int].",
            "VernacDefinition",
            "a50a1c1c2ab89131318459c4c58b616e5310ce1b"
        ],
        [
            "Definition absz m := match m with Posz p => p | Negz n => n.+1 end.",
            "VernacDefinition",
            "91ca07a534f23fe9ca2b888aa1ea1f00d40fe696"
        ],
        [
            "Notation \"m - n\" := (@GRing.add int_ZmodType m%N (@GRing.opp int_ZmodType n%N)) : distn_scope.",
            "VernacNotation",
            "bdc575e1e8da9144ddf82b251ce6d469ab8c4eec"
        ],
        [
            "Arguments absz m%distn_scope.",
            "VernacArguments",
            "2eb28b5dca8b89981fd484e5298a76e8db272f51"
        ],
        [
            "Local Notation \"`| m |\" := (absz m) : nat_scope.",
            "VernacNotation",
            "ecace4ffedae629492bae75c081ac6543d8cf897"
        ],
        [
            "Module intOrdered.",
            "VernacDefineModule",
            "89bbe79e537ab81b23814e27859a1603f6200be0"
        ],
        [
            "Section intOrdered.",
            "VernacBeginSection",
            "d1fcb97065ec25106e2ad15cbc1d4ebfad7a274b"
        ],
        [
            "Implicit Types m n p : int.",
            "VernacReserve",
            "9da828c445e36d67364f4b10ccd07ba21167d126"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Local Notation normz m := (absz m)%:Z.",
            "VernacSyntacticDefinition",
            "9b05b89da9b29685260fa77fc299fcc41423d476"
        ],
        [
            "Definition lez m n := match m, n with | Posz m', Posz n' => (m' <= n')%N | Posz m', Negz n' => false | Negz m', Posz n' => true | Negz m', Negz n' => (n' <= m')%N end.",
            "VernacDefinition",
            "bb281ba41ffa3a799aab6122419ce2ca3fe389c6"
        ],
        [
            "Definition ltz m n := match m, n with | Posz m', Posz n' => (m' < n')%N | Posz m', Negz n' => false | Negz m', Posz n' => true | Negz m', Negz n' => (n' < m')%N end.",
            "VernacDefinition",
            "e6ff7e52c8294355b6deb3e1b762c95a067a0eca"
        ],
        [
            "Fact lez_norm_add x y : lez (normz (x + y)) (normz x + normz y).",
            "VernacStartTheoremProof",
            "75d82b93874930ae37f46227a824cc57cda08b2c"
        ],
        [
            "move: x y=> [] m [] n; rewrite /= ?addnS //=; rewrite /GRing.add /GRing.Zmodule.add /=; case: ltnP=> //=; rewrite ?addSn ?ltnS ?leq_subLR ?(addnS, addSn) ?(leq_trans _ (leqnSn _)) //; by rewrite 1?addnCA ?leq_addr ?addnA ?leq_addl.",
            "VernacExtend",
            "4b7a19882fa4ece2e4585abd963cc3c6673dbe88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact ltz_add x y : ltz 0 x -> ltz 0 y -> ltz 0 (x + y).",
            "VernacStartTheoremProof",
            "ec49b3f5463c19010b974bc5e866cce4d167d448"
        ],
        [
            "by move: x y => [] x [] y //= hx hy; rewrite ltn_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact eq0_normz x : normz x = 0 -> x = 0.",
            "VernacStartTheoremProof",
            "1065cb59ef796cd88a4f8d4c4027d7a4bb29e59f"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lez_total x y : lez x y || lez y x.",
            "VernacStartTheoremProof",
            "17d984ba1e0ddc286616693aa387bc6e49bf33fa"
        ],
        [
            "by move: x y => [] x [] y //=; apply: leq_total.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abszN (n : nat) : absz (- n%:Z) = n.",
            "VernacStartTheoremProof",
            "d8dd5ca5527c17cec0ce10b8cc9042369d2a8143"
        ],
        [
            "by case: n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact normzM : {morph (fun n => normz n) : x y / x * y}.",
            "VernacStartTheoremProof",
            "bf3ddcf08246f726299815cff98ad5655199724c"
        ],
        [
            "by move=> [] x [] y; rewrite // abszN // mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subz_ge0 m n : lez 0 (n - m) = lez m n.",
            "VernacStartTheoremProof",
            "f0673fe247f9a301a36679b25914b452cfcade27"
        ],
        [
            "case: (intP m); case: (intP n)=> // {m n} m n /=; rewrite ?ltnS -?opprD ?opprB ?subzSS; case: leqP=> // hmn; by [ rewrite subzn // | rewrite -opprB subzn ?(ltnW hmn) //; move: hmn; rewrite -subn_gt0; case: (_ - _)%N].",
            "VernacExtend",
            "56ba7d491100b30dce64398a81a6f4aa381b450c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lez_def x y : (lez x y) = (normz (y - x) == y - x).",
            "VernacStartTheoremProof",
            "d53c7278e15504216ec2999be062f29411a36259"
        ],
        [
            "by rewrite -subz_ge0; move: (_ - _) => [] n //=; rewrite eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact ltz_def x y : (ltz x y) = (y != x) && (lez x y).",
            "VernacStartTheoremProof",
            "9a7ee1833d2d559993cc1fdc9feb8f8d7fe01372"
        ],
        [
            "by move: x y=> [] x [] y //=; rewrite (ltn_neqAle, leq_eqVlt) // eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Mixin := NumMixin lez_norm_add ltz_add eq0_normz (in2W lez_total) normzM lez_def ltz_def.",
            "VernacDefinition",
            "d354ad82ef2dd4c63094520adc21e1d4ac111aa7"
        ],
        [
            "End intOrdered.",
            "VernacEndSegment",
            "9017731316a7ac968cb3f8ce53e573b455ff9cfa"
        ],
        [
            "End intOrdered.",
            "VernacEndSegment",
            "9017731316a7ac968cb3f8ce53e573b455ff9cfa"
        ],
        [
            "Canonical int_numDomainType := NumDomainType int intOrdered.Mixin.",
            "VernacDefinition",
            "17533461053f8e88e485742d89523f9926dd9bb6"
        ],
        [
            "Canonical int_realDomainType := RealDomainType int (intOrdered.lez_total 0).",
            "VernacDefinition",
            "29c87792d9cdbf07c36284c82d04c339d9106647"
        ],
        [
            "Section intOrderedTheory.",
            "VernacBeginSection",
            "233bd35940620e7cdb0d40665e9d704d93ad1eea"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Implicit Types m n p : nat.",
            "VernacReserve",
            "c91dfc57cee65f0bef3b4eb8e26bdced4a570f78"
        ],
        [
            "Implicit Types x y z : int.",
            "VernacReserve",
            "fa3fa1eb275aef4a9d218936af845e50f6db605e"
        ],
        [
            "Lemma lez_nat m n : (m <= n :> int) = (m <= n)%N.",
            "VernacStartTheoremProof",
            "446ac2ce2b73cb99b31138aac390f05946633610"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltz_nat m n : (m < n :> int) = (m < n)%N.",
            "VernacStartTheoremProof",
            "c84f3ebcc1b24828b6ad518ed0c6b35a431bfb46"
        ],
        [
            "by rewrite ltnNge ltrNge lez_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ltez_nat := (lez_nat, ltz_nat).",
            "VernacDefinition",
            "bba9c864e0022e87e52886618a86b5ab10f2e7ce"
        ],
        [
            "Lemma leNz_nat m n : (- m%:Z <= n).",
            "VernacStartTheoremProof",
            "67f69ff8f897ef129f9dc6b3248122a729bc5987"
        ],
        [
            "by case: m.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltNz_nat m n : (- m%:Z < n) = (m != 0%N) || (n != 0%N).",
            "VernacStartTheoremProof",
            "b24d037a4b07f63a87ebdc7248c620e4bc5610f4"
        ],
        [
            "by move: m n=> [|?] [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lteNz_nat := (leNz_nat, ltNz_nat).",
            "VernacDefinition",
            "1c9b95e06492c588d0680800aa0a2412574f080b"
        ],
        [
            "Lemma lezN_nat m n : (m%:Z <= - n%:Z) = (m == 0%N) && (n == 0%N).",
            "VernacStartTheoremProof",
            "43a750f35aad08986ef6d7d129012c1b37e94ec3"
        ],
        [
            "by move: m n=> [|?] [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltzN_nat m n : (m%:Z < - n%:Z) = false.",
            "VernacStartTheoremProof",
            "3394698541b691b9a9b26433917a213494f9bc4a"
        ],
        [
            "by move: m n=> [|?] [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le0z_nat n : 0 <= n :> int.",
            "VernacStartTheoremProof",
            "70f2c46838de0ef3a3cad284a76013b9955f6bca"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lez0_nat n : n <= 0 :> int = (n == 0%N :> nat).",
            "VernacStartTheoremProof",
            "dac816232684b9f390026b804923ffd75078e25d"
        ],
        [
            "by elim: n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ltezN_nat := (lezN_nat, ltzN_nat).",
            "VernacDefinition",
            "6f943c5521cc92051f5cd9e891a5b14d7017c05f"
        ],
        [
            "Definition ltez_natE := (ltez_nat, lteNz_nat, ltezN_nat, le0z_nat, lez0_nat).",
            "VernacDefinition",
            "8e3d6e03f803d3249d4db6a15ef1543350fb77d2"
        ],
        [
            "Lemma gtz0_ge1 x : (0 < x) = (1 <= x).",
            "VernacStartTheoremProof",
            "bde55b788cc9dfd5627c4d979d81d252ec5b0d33"
        ],
        [
            "by case: (intP x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lez_add1r x y : (1 + x <= y) = (x < y).",
            "VernacStartTheoremProof",
            "6f8c5a6e1bd4b345401cf2ce69e6fe1c4963fc0f"
        ],
        [
            "by rewrite -subr_gt0 gtz0_ge1 lter_sub_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lez_addr1 x y : (x + 1 <= y) = (x < y).",
            "VernacStartTheoremProof",
            "d6ace3a7c580f56c61e713700f2dafec9544afcd"
        ],
        [
            "by rewrite addrC lez_add1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltz_add1r x y : (x < 1 + y) = (x <= y).",
            "VernacStartTheoremProof",
            "2a544ebffcb294dc904c3ae4076f5a85a5223a25"
        ],
        [
            "by rewrite -lez_add1r ler_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltz_addr1 x y : (x < y + 1) = (x <= y).",
            "VernacStartTheoremProof",
            "49e098b38c646878b246958cf2ab8d09d685def3"
        ],
        [
            "by rewrite -lez_addr1 ler_add2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End intOrderedTheory.",
            "VernacEndSegment",
            "4edfb8ad4f663a13c03a4c89c849c28b2b17aefa"
        ],
        [
            "Bind Scope ring_scope with int.",
            "VernacBindScope",
            "08f05fb73a19e263d8cfd1b2a0a56dba8df67c96"
        ],
        [
            "Definition intmul (R : zmodType) (x : R) (n : int) := nosimpl match n with | Posz n => (x *+ n)%R | Negz n => (x *- (n.+1))%R end.",
            "VernacDefinition",
            "bae01aeec6cb53cedc584ed54cfa49504c80d49c"
        ],
        [
            "Notation \"*~%R\" := (@intmul _) (at level 0, format \" *~%R\") : ring_scope.",
            "VernacNotation",
            "64df8cf3586c4281277d468538a125fd29ac3373"
        ],
        [
            "Notation \"x *~ n\" := (intmul x n) (at level 40, left associativity, format \"x *~ n\") : ring_scope.",
            "VernacNotation",
            "0a6b428bd78fac83d10144f4f043233116ff16e9"
        ],
        [
            "Notation intr := ( *~%R 1).",
            "VernacSyntacticDefinition",
            "f9f4802d94b84743195593a9bc21f065bc32ed1f"
        ],
        [
            "Notation \"n %:~R\" := (1 *~ n)%R (at level 2, left associativity, format \"n %:~R\") : ring_scope.",
            "VernacNotation",
            "14d4811488b0400e03eaeb716dbb69013c159c34"
        ],
        [
            "Lemma pmulrn (R : zmodType) (x : R) (n : nat) : x *+ n = x *~ n%:Z.",
            "VernacStartTheoremProof",
            "9062dd30e72f23fb8c463cc88f296c4943d2282d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrn (R : zmodType) (x : R) (n : nat) : x *- n = x *~ - n%:Z.",
            "VernacStartTheoremProof",
            "db1a833e95f437a429bd6679d59440ce4487a26c"
        ],
        [
            "by case: n=> [] //; rewrite ?oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ZintLmod.",
            "VernacBeginSection",
            "0030fc3464f96f20af9851c59b5aef019c0199b0"
        ],
        [
            "Definition zmodule (M : Type) : Type := M.",
            "VernacDefinition",
            "e9f55946f78ad926fec1d842d670952a1a30b903"
        ],
        [
            "Local Notation \"M ^z\" := (zmodule M) (at level 2, format \"M ^z\") : type_scope.",
            "VernacNotation",
            "40f1484123244f2ec0c429fbb4bf5d9bb60884f4"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Variable M : zmodType.",
            "VernacAssumption",
            "e31352b80b4533a6a8ea86aaf43f108dd46f2b57"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Implicit Types x y z : M.",
            "VernacReserve",
            "9b534c367b7ab6915261275318d9b5e69c674708"
        ],
        [
            "Fact mulrzA_C m n x : (x *~ n) *~ m = x *~ (m * n).",
            "VernacStartTheoremProof",
            "3e51dbc16d286bcd8bea680c35d6000e822f8cde"
        ],
        [
            "elim: m=> [|m _|m _]; elim: n=> [|n _|n _]; rewrite /intmul //=; rewrite ?(muln0, mulr0n, mul0rn, oppr0, mulNrn, opprK) //; do ?by rewrite mulnC mulrnA.",
            "VernacExtend",
            "b0762d9432d9888d1cb851fa420e7e81689b58b2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "by rewrite -mulrnA mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "by rewrite -mulrnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mulrzAC m n x : (x *~ n) *~ m = (x *~ m) *~ n.",
            "VernacStartTheoremProof",
            "49ec7a5ad9a4365f9ad7160c51e391d3e3ee6541"
        ],
        [
            "by rewrite !mulrzA_C mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mulr1z (x : M) : x *~ 1 = x.",
            "VernacStartTheoremProof",
            "a7309f14bdb8686dca23ea81ee797b5b98339395"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mulrzDr m : {morph ( *~%R^~ m : M -> M) : x y / x + y}.",
            "VernacStartTheoremProof",
            "c804075cb923ad6641110a866014fdbabd1293fa"
        ],
        [
            "by elim: m=> [|m _|m _] x y; rewrite ?addr0 /intmul //= ?mulrnDl // opprD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrzBl_nat (m n : nat) x : x *~ (m%:Z - n%:Z) = x *~ m - x *~ n.",
            "VernacStartTheoremProof",
            "d0ef305817cf324dc47cc62dc814b6332edfca14"
        ],
        [
            "case: (leqP m n)=> hmn; rewrite /intmul //=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite addrC -{1}[m:int]opprK -opprD subzn //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{2}[n](@subnKC m)// mulrnDr opprD addrA subrr sub0r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case hdmn: (_ - _)%N=> [|dmn] /=; first by rewrite mulr0n oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have hnm := ltnW hmn.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -{2}[m](@subnKC n)// mulrnDr addrAC subrr add0r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subzn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mulrzDl x : {morph *~%R x : m n / m + n}.",
            "VernacStartTheoremProof",
            "a60c8d68aaf08a4b9a16a02c727b0ebbfb617b15"
        ],
        [
            "elim=> [|m _|m _]; elim=> [|n _|n _]; rewrite /intmul //=; rewrite -?(opprD) ?(add0r, addr0, mulrnDr, subn0) //.",
            "VernacExtend",
            "a17f559ec6e1c999a9ad082409853e9030982e9f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "by rewrite -/(intmul _ _) mulrzBl_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "by rewrite -/(intmul _ _) addrC mulrzBl_nat addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "by rewrite -addnS -addSn mulrnDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Mint_LmodMixin := @LmodMixin _ [zmodType of M] (fun n x => x *~ n) mulrzA_C mulr1z mulrzDr mulrzDl.",
            "VernacDefinition",
            "2858c5efa8ac53be55cc3a65a15b4a866e807762"
        ],
        [
            "Canonical Mint_LmodType := LmodType int M^z Mint_LmodMixin.",
            "VernacDefinition",
            "352f713a67104c04f6146c4acd193f6c080f47bd"
        ],
        [
            "Lemma scalezrE n x : n *: (x : M^z) = x *~ n.",
            "VernacStartTheoremProof",
            "891d58e6bc733f3bb9037689c7335fbd70ed6921"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrzA x m n : x *~ (m * n) = x *~ m *~ n.",
            "VernacStartTheoremProof",
            "9e573ee3719158282b33f68698e4f056c5fbc80b"
        ],
        [
            "by rewrite -!scalezrE scalerA mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr0z x : x *~ 0 = 0.",
            "VernacStartTheoremProof",
            "2afeb2ef84d1a23eb446ce00dd7a2cb8f58f46ae"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul0rz n : 0 *~ n = 0 :> M.",
            "VernacStartTheoremProof",
            "95077fb810d0b47a5060b748632ff7379c70db68"
        ],
        [
            "by rewrite -scalezrE scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrNz x n : x *~ (- n) = - (x *~ n).",
            "VernacStartTheoremProof",
            "b99df46268d1999a7c5ec2ec1a2b44dfc59acbc6"
        ],
        [
            "by rewrite -scalezrE scaleNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrN1z x : x *~ (- 1) = - x.",
            "VernacStartTheoremProof",
            "66f517034a70ded41433b5c53de6d1a065ed4df3"
        ],
        [
            "by rewrite -scalezrE scaleN1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulNrz x n : (- x) *~ n = - (x *~ n).",
            "VernacStartTheoremProof",
            "eb9fbbb25b9258df4ce25cfa9c8046b821128c60"
        ],
        [
            "by rewrite -scalezrE scalerN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrzBr x m n : x *~ (m - n) = x *~ m - x *~ n.",
            "VernacStartTheoremProof",
            "f693cf02bdc94c48b6cfc838a00519fe01fec77e"
        ],
        [
            "by rewrite -scalezrE scalerBl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrzBl x y n : (x - y) *~ n = x *~ n - y *~ n.",
            "VernacStartTheoremProof",
            "4ffb4c507fae504b7781072c24c4f095fe565585"
        ],
        [
            "by rewrite -scalezrE scalerBr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrz_nat (n : nat) x : x *~ n%:R = x *+ n.",
            "VernacStartTheoremProof",
            "2abbdc687c94df4b45f581e46d2df5fa6f9815bc"
        ],
        [
            "by rewrite -scalezrE scaler_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrz_sumr : forall x I r (P : pred I) F, x *~ (\\sum_(i <- r | P i) F i) = \\sum_(i <- r | P i) x *~ F i.",
            "VernacStartTheoremProof",
            "1dc862912ba57dfb4df49b94de3fab2c8ba791ad"
        ],
        [
            "by rewrite -/M^z; apply: scaler_suml.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrz_suml : forall n I r (P : pred I) (F : I -> M), (\\sum_(i <- r | P i) F i) *~ n= \\sum_(i <- r | P i) F i *~ n.",
            "VernacStartTheoremProof",
            "f8ea8b03b2f24f0c7a549835b161b647344f3faa"
        ],
        [
            "by rewrite -/M^z; apply: scaler_sumr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical intmul_additive x := Additive (@mulrzBr x).",
            "VernacDefinition",
            "d24326668909d069c8d04bd72bfabfe58ffaa483"
        ],
        [
            "End ZintLmod.",
            "VernacEndSegment",
            "f25a3295343bb10317b6bd380e122adcc7e51c39"
        ],
        [
            "Lemma ffunMzE (I : finType) (M : zmodType) (f : {ffun I -> M}) z x : (f *~ z) x = f x *~ z.",
            "VernacStartTheoremProof",
            "a6ff2b6afe68b960f3d070fce7e8321f3a3b27f8"
        ],
        [
            "by case: z => n; rewrite ?ffunE ffunMnE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intz (n : int) : n%:~R = n.",
            "VernacStartTheoremProof",
            "49d2cfb014070cfa10a844ee407915e9962ef38f"
        ],
        [
            "elim: n=> //= n ihn; rewrite /intmul /=.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by rewrite -addn1 mulrnDr /= PoszD -ihn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite nmulrn intS opprD mulrzDl ihn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natz (n : nat) : n%:R = n%:Z :> int.",
            "VernacStartTheoremProof",
            "025ff42fad2eab10618a9c7eb838f39c22c5b76f"
        ],
        [
            "by rewrite pmulrn intz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section RintMod.",
            "VernacBeginSection",
            "f07f51551438f1d730d966fd7b70073b7d925b35"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Implicit Types x y z : R.",
            "VernacReserve",
            "5b53950eef16c05b6d76b95a2bc590b36e66d08e"
        ],
        [
            "Lemma mulrzAl n x y : (x *~ n) * y = (x * y) *~ n.",
            "VernacStartTheoremProof",
            "50350563c8aed18d06deee681649d95d4d036141"
        ],
        [
            "by elim: n=> //= *; rewrite ?mul0r ?mulr0z // /intmul /= -mulrnAl -?mulNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrzAr n x y : x * (y *~ n) = (x * y) *~ n.",
            "VernacStartTheoremProof",
            "344c80e7475c6dfedcd79bab293b222e2e4ac59a"
        ],
        [
            "by elim: n=> //= *; rewrite ?mulr0 ?mulr0z // /intmul /= -mulrnAr -?mulrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrzl x n : n%:~R * x = x *~ n.",
            "VernacStartTheoremProof",
            "874eb63ae301ec9825e667cf95d7e0835fbee0a2"
        ],
        [
            "by rewrite mulrzAl mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrzr x n : x * n%:~R = x *~ n.",
            "VernacStartTheoremProof",
            "c2fb42d07bc6a431cba0cd6e884f711f44b877d1"
        ],
        [
            "by rewrite mulrzAr mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulNrNz n x : (-x) *~ (-n) = x *~ n.",
            "VernacStartTheoremProof",
            "3ebb796bad7de7a8255de1261502307b60f9aa94"
        ],
        [
            "by rewrite mulNrz mulrNz opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrbz x (b : bool) : x *~ b = (if b then x else 0).",
            "VernacStartTheoremProof",
            "9ead5c90f9a98016bd0b6ea2dcaf400aadfb24d6"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intrD m n : (m + n)%:~R = m%:~R + n%:~R :> R.",
            "VernacStartTheoremProof",
            "5c454707925e8aaf09d1411ea2f192eb4492b017"
        ],
        [
            "exact: mulrzDl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intrM m n : (m * n)%:~R = m%:~R * n%:~R :> R.",
            "VernacStartTheoremProof",
            "83fe7f40780644a5cead2db18dfc285001bce216"
        ],
        [
            "by rewrite mulrzA -mulrzr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intmul1_is_rmorphism : rmorphism ( *~%R (1 : R)).",
            "VernacStartTheoremProof",
            "40124d4701170a2115b14faba782f622c171ebf8"
        ],
        [
            "by do ?split; move=> // x y /=; rewrite ?intrD ?mulrNz ?intrM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical intmul1_rmorphism := RMorphism intmul1_is_rmorphism.",
            "VernacDefinition",
            "3e7b33843f076843fb6d6defbf105f4cb025f4b7"
        ],
        [
            "Lemma mulr2z n : n *~ 2 = n + n.",
            "VernacStartTheoremProof",
            "9928069f603a53aaefbf4befb877ad39ab829c99"
        ],
        [
            "exact: mulr2n.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RintMod.",
            "VernacEndSegment",
            "46841fd971a9edfb91649df281cc1f736803b9b3"
        ],
        [
            "Lemma mulrzz m n : m *~ n = m * n.",
            "VernacStartTheoremProof",
            "c99c5847624d27ea09b2d0ded744d52ed6b58ee4"
        ],
        [
            "by rewrite -mulrzr intz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulz2 n : n * 2%:Z = n + n.",
            "VernacStartTheoremProof",
            "1a0d04f21cd5031c6221beda55769ca2afa122ca"
        ],
        [
            "by rewrite -mulrzz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul2z n : 2%:Z * n = n + n.",
            "VernacStartTheoremProof",
            "88f480eb5f9c7d37d5d8e0e9e6af5f92ffee0839"
        ],
        [
            "by rewrite mulrC -mulrzz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section LMod.",
            "VernacBeginSection",
            "4784a3665cbdb54dee8ccf162bc98b8d107e983c"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Variable V : (lmodType R).",
            "VernacAssumption",
            "dee42c5bbb822560180d54e0a4570dfd9a757b27"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Implicit Types x y z : R.",
            "VernacReserve",
            "5b53950eef16c05b6d76b95a2bc590b36e66d08e"
        ],
        [
            "Implicit Types u v w : V.",
            "VernacReserve",
            "eb64e8ba65e24d4cabedc5328508ac81efbca893"
        ],
        [
            "Lemma scaler_int n v : n%:~R *: v = v *~ n.",
            "VernacStartTheoremProof",
            "7b337300c4747f42e5939b05b321088519384b5a"
        ],
        [
            "elim: n=> [|n ihn|n ihn]; first by rewrite scale0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite intS !mulrzDl scalerDl ihn scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite intS opprD !mulrzDl scalerDl ihn scaleN1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalerMzl a v n : (a *: v) *~ n = (a *~ n) *: v.",
            "VernacStartTheoremProof",
            "6b5edbe7a31247f43d3444b48a479df7a4227ad3"
        ],
        [
            "by rewrite -mulrzl -scaler_int scalerA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalerMzr a v n : (a *: v) *~ n = a *: (v *~ n).",
            "VernacStartTheoremProof",
            "cae9895c4b56aa4e6bf633840681ed463ffa7aaf"
        ],
        [
            "by rewrite -!scaler_int !scalerA mulrzr mulrzl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LMod.",
            "VernacEndSegment",
            "adf6c726a051f815489003937799d07ba4647aff"
        ],
        [
            "Lemma mulrz_int (M : zmodType) (n : int) (x : M) : x *~ n%:~R = x *~ n.",
            "VernacStartTheoremProof",
            "f98677cc50332152ed1549b9fe6035f5c6d5cc6e"
        ],
        [
            "by rewrite -scalezrE scaler_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section MorphTheory.",
            "VernacBeginSection",
            "032047a2a55ce66dac4b52129a3c14ab3ead9390"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Section Additive.",
            "VernacBeginSection",
            "43f8d26641e00b8319e52fe8bc38a842d7056dc6"
        ],
        [
            "Variables (U V : zmodType) (f : {additive U -> V}).",
            "VernacAssumption",
            "635604b9439cdc4a7959849ba53aefdc014f0c41"
        ],
        [
            "Lemma raddfMz n : {morph f : x / x *~ n}.",
            "VernacStartTheoremProof",
            "1cde919dbe33de95d8e6bc11194fbeeb13ad0da0"
        ],
        [
            "case: n=> n x /=; first exact: raddfMn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite NegzE !mulrNz; apply: raddfMNn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Additive.",
            "VernacEndSegment",
            "73bb5b1c75211ef95c10fea430b244ebd0815a16"
        ],
        [
            "Section Multiplicative.",
            "VernacBeginSection",
            "9ec0a57fc440a4e2e97e04089506c18f51765033"
        ],
        [
            "Variables (R S : ringType) (f : {rmorphism R -> S}).",
            "VernacAssumption",
            "d06ba5b658916d8f2302c46a88b4ee14b38fe6d8"
        ],
        [
            "Lemma rmorphMz : forall n, {morph f : x / x *~ n}.",
            "VernacStartTheoremProof",
            "2d8bfc2994375415846ccb46e81aac4f9cf3d074"
        ],
        [
            "exact: raddfMz.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmorph_int : forall n, f n%:~R = n%:~R.",
            "VernacStartTheoremProof",
            "ffd0ed28d2a48ac8c05d3eb285ce9b56c18fb644"
        ],
        [
            "by move=> n; rewrite rmorphMz rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Multiplicative.",
            "VernacEndSegment",
            "b9cd6303c1d7051489b7df2f79f45c6646fbef56"
        ],
        [
            "Section Linear.",
            "VernacBeginSection",
            "809989470d97d23f25d2454249711ce952aef9dc"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Variables (U V : lmodType R) (f : {linear U -> V}).",
            "VernacAssumption",
            "9bf756d8b308225c5d696595a61b53b2fa96350e"
        ],
        [
            "Lemma linearMn : forall n, {morph f : x / x *~ n}.",
            "VernacStartTheoremProof",
            "9b41e683aa99a0c4ddf69c55e308185246e6b126"
        ],
        [
            "exact: raddfMz.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Linear.",
            "VernacEndSegment",
            "650f655f21276c75f543f8ea3c6de3cbb24f6f06"
        ],
        [
            "Lemma raddf_int_scalable (aV rV : lmodType int) (f : {additive aV -> rV}) : scalable f.",
            "VernacStartTheoremProof",
            "4b77794e443c5a235e000c3055d049909f041839"
        ],
        [
            "by move=> z u; rewrite -[z]intz !scaler_int raddfMz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Zintmul1rMorph.",
            "VernacBeginSection",
            "28c966f2e0da03b0fa3248578442889ef78b82c3"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Lemma commrMz (x y : R) n : GRing.comm x y -> GRing.comm x (y *~ n).",
            "VernacStartTheoremProof",
            "40e366e3dcad3fecd7dbf7e8e2d5569ba38afd34"
        ],
        [
            "by rewrite /GRing.comm=> com_xy; rewrite mulrzAr mulrzAl com_xy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma commr_int (x : R) n : GRing.comm x n%:~R.",
            "VernacStartTheoremProof",
            "51df0e3620ff54e78caddf9311d7ab34421bef00"
        ],
        [
            "by apply: commrMz; apply: commr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Zintmul1rMorph.",
            "VernacEndSegment",
            "b68cf53d9bf1db1e8673c8aa082a1d8ae636f54f"
        ],
        [
            "Section ZintBigMorphism.",
            "VernacBeginSection",
            "aad1f5e725e3ee5a21218a7fdf318f80c6d254ba"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Lemma sumMz : forall I r (P : pred I) F, (\\sum_(i <- r | P i) F i)%N%:~R = \\sum_(i <- r | P i) ((F i)%:~R) :> R.",
            "VernacStartTheoremProof",
            "e93ea25154512a9f0ac5806eda0468b2f51352e2"
        ],
        [
            "by apply: big_morph=> // x y; rewrite !pmulrn -rmorphD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodMz : forall I r (P : pred I) F, (\\prod_(i <- r | P i) F i)%N%:~R = \\prod_(i <- r | P i) ((F i)%:~R) :> R.",
            "VernacStartTheoremProof",
            "58597e401066d13c1c88957c8491a5c7ed59708f"
        ],
        [
            "by apply: big_morph=> // x y; rewrite !pmulrn PoszM -rmorphM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ZintBigMorphism.",
            "VernacEndSegment",
            "525073d6f305ceec258e49fb13384fe0f8f1caec"
        ],
        [
            "Section Frobenius.",
            "VernacBeginSection",
            "6c89886b504e80bd9292ca519fa5197016de2243"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types x y : R.",
            "VernacReserve",
            "a698213249308a1927c4fb90fb6e1fbc35157508"
        ],
        [
            "Variable p : nat.",
            "VernacAssumption",
            "981ac4bb8674cf2cc0a9bf436584a314bb426aa4"
        ],
        [
            "Hypothesis charFp : p \\in [char R].",
            "VernacAssumption",
            "0deb6b7f2efb8b076f66fa746398c437048beb31"
        ],
        [
            "Local Notation \"x ^f\" := (Frobenius_aut charFp x).",
            "VernacNotation",
            "fc9d75a83dd4c3f6317bed5838f2de10bbefdd78"
        ],
        [
            "Lemma Frobenius_autMz x n : (x *~ n)^f = x^f *~ n.",
            "VernacStartTheoremProof",
            "57a46bbe2c87a59f516d56a90dae83b4b495c03a"
        ],
        [
            "case: n=> n /=; first exact: Frobenius_autMn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !NegzE !mulrNz Frobenius_autN Frobenius_autMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Frobenius_aut_int n : (n%:~R)^f = n%:~R.",
            "VernacStartTheoremProof",
            "b89a45cf20713de62bd097a4bf24d3b849f652d0"
        ],
        [
            "by rewrite Frobenius_autMz Frobenius_aut1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Frobenius.",
            "VernacEndSegment",
            "5187ed0b1d1507d48b09e9faaf6de5a129e22108"
        ],
        [
            "Section NumMorphism.",
            "VernacBeginSection",
            "75bf1a6dea5f9a19b88a6a9980812088c3a5de4e"
        ],
        [
            "Section PO.",
            "VernacBeginSection",
            "5f91a88a73cf82d19900c1d4ae41ac4bb89b98e9"
        ],
        [
            "Variables (R : numDomainType).",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Implicit Types n m : int.",
            "VernacReserve",
            "4873312d9569d5fd188d6a084dd53a209e6cd294"
        ],
        [
            "Implicit Types x y : R.",
            "VernacReserve",
            "a698213249308a1927c4fb90fb6e1fbc35157508"
        ],
        [
            "Lemma rmorphzP (f : {rmorphism int -> R}) : f =1 ( *~%R 1).",
            "VernacStartTheoremProof",
            "e5b365f128fa7e5861f2ec161c025e99b76f8bb9"
        ],
        [
            "move=> n; wlog : n / 0 <= n; case: n=> [] n //; do ?exact.",
            "VernacExtend",
            "c2820ca67d58309c18c3527348d97146815ce672"
        ],
        [
            "by rewrite NegzE !rmorphN=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> _; elim: n=> [|n ihn]; first by rewrite rmorph0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite intS !rmorphD !rmorph1 ihn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pmulz2r n (hn : 0 < n) : {mono *~%R^~ n :x y / x <= y :> R}.",
            "VernacStartTheoremProof",
            "da237ecbec4ad89a5d81c3cac688db00285c25c0"
        ],
        [
            "by move=> x y; case: n hn=> [[]|] // n _; rewrite ler_pmuln2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pmulz2r n (hn : 0 < n) : {mono *~%R^~ n : x y / x < y :> R}.",
            "VernacStartTheoremProof",
            "3cbf1ef9bb51aed5a14a212bb06dfcdfc8250e59"
        ],
        [
            "exact: lerW_mono (ler_pmulz2r _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nmulz2r n (hn : n < 0) : {mono *~%R^~ n : x y /~ x <= y :> R}.",
            "VernacStartTheoremProof",
            "1a700c5f251838f550ff6d1467bebebe99ed9b43"
        ],
        [
            "move=> x y /=; rewrite -![_ *~ n]mulNrNz.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite ler_pmulz2r (oppr_cp0, ler_opp2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nmulz2r n (hn : n < 0) : {mono *~%R^~ n : x y /~ x < y :> R}.",
            "VernacStartTheoremProof",
            "f3c2c59c8549067b392c2fbbc54690b5493f8b02"
        ],
        [
            "exact: lerW_nmono (ler_nmulz2r _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wpmulz2r n (hn : 0 <= n) : {homo *~%R^~ n : x y / x <= y :> R}.",
            "VernacStartTheoremProof",
            "9da1c04aa8c9591a54234bbb4bccda4e07aee661"
        ],
        [
            "by move=> x y xy; case: n hn=> [] // n _; rewrite ler_wmuln2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wnmulz2r n (hn : n <= 0) : {homo *~%R^~ n : x y /~ x <= y :> R}.",
            "VernacStartTheoremProof",
            "c5cd485f285c0b503f7aab504902ed8bc1e5de13"
        ],
        [
            "by move=> x y xy /=; rewrite -ler_opp2 -!mulrNz ler_wpmulz2r // oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrz_ge0 x n (x0 : 0 <= x) (n0 : 0 <= n) : 0 <= x *~ n.",
            "VernacStartTheoremProof",
            "d22f78b5a8ce6f9bd8257c21c2c4cf4f44dd8ccf"
        ],
        [
            "by rewrite -(mul0rz _ n) ler_wpmulz2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrz_le0 x n (x0 : x <= 0) (n0 : n <= 0) : 0 <= x *~ n.",
            "VernacStartTheoremProof",
            "5de5261575d979ff08df7595a432605316b28389"
        ],
        [
            "by rewrite -(mul0rz _ n) ler_wnmulz2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrz_ge0_le0 x n (x0 : 0 <= x) (n0 : n <= 0) : x *~ n <= 0.",
            "VernacStartTheoremProof",
            "765239de9e9db3b058631b1fa15a714a51c6ddf5"
        ],
        [
            "by rewrite -(mul0rz _ n) ler_wnmulz2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrz_le0_ge0 x n (x0 : x <= 0) (n0 : 0 <= n) : x *~ n <= 0.",
            "VernacStartTheoremProof",
            "53c32020c576f7c5624f2037196c696eff6f36c2"
        ],
        [
            "by rewrite -(mul0rz _ n) ler_wpmulz2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrz_lgt0 x n (n0 : 0 < n) : 0 < x *~ n = (0 < x).",
            "VernacStartTheoremProof",
            "aace016f7f8730d0ea49102de6b2e72b513345f3"
        ],
        [
            "by rewrite -(mul0rz _ n) ltr_pmulz2r // mul0rz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrz_lgt0 x n (n0 : n < 0) : 0 < x *~ n = (x < 0).",
            "VernacStartTheoremProof",
            "21aeb6f15080580def2d10da489f1f1e15193ffa"
        ],
        [
            "by rewrite -(mul0rz _ n) ltr_nmulz2r // mul0rz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrz_llt0 x n (n0 : 0 < n) : x *~ n < 0 = (x < 0).",
            "VernacStartTheoremProof",
            "4a279f3b1f22cb9d204078fcffbffca4551c24f6"
        ],
        [
            "by rewrite -(mul0rz _ n) ltr_pmulz2r // mul0rz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrz_llt0 x n (n0 : n < 0) : x *~ n < 0 = (0 < x).",
            "VernacStartTheoremProof",
            "de39e73a4ad4ad0891c821b4f6dce7b0edb87c0b"
        ],
        [
            "by rewrite -(mul0rz _ n) ltr_nmulz2r // mul0rz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrz_lge0 x n (n0 : 0 < n) : 0 <= x *~ n = (0 <= x).",
            "VernacStartTheoremProof",
            "b1e57d2ebdd99aa0621f680109aaeb150574e94d"
        ],
        [
            "by rewrite -(mul0rz _ n) ler_pmulz2r // mul0rz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrz_lge0 x n (n0 : n < 0) : 0 <= x *~ n = (x <= 0).",
            "VernacStartTheoremProof",
            "9596ae581247edab8b3d98536e77992ca8846b60"
        ],
        [
            "by rewrite -(mul0rz _ n) ler_nmulz2r // mul0rz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrz_lle0 x n (n0 : 0 < n) : x *~ n <= 0 = (x <= 0).",
            "VernacStartTheoremProof",
            "1635849dd6fa3b092fc64b7f801cce11530fb4ad"
        ],
        [
            "by rewrite -(mul0rz _ n) ler_pmulz2r // mul0rz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrz_lle0 x n (n0 : n < 0) : x *~ n <= 0 = (0 <= x).",
            "VernacStartTheoremProof",
            "32717723ec65fb2d2c92551a9bd237e99bf76c19"
        ],
        [
            "by rewrite -(mul0rz _ n) ler_nmulz2r // mul0rz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wpmulz2l x (hx : 0 <= x) : {homo *~%R x : x y / x <= y}.",
            "VernacStartTheoremProof",
            "3976e8aa8b0611025cc016a6f8c9162d4f773d0d"
        ],
        [
            "by move=> m n /= hmn; rewrite -subr_ge0 -mulrzBr mulrz_ge0 // subr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wnmulz2l x (hx : x <= 0) : {homo *~%R x : x y /~ x <= y}.",
            "VernacStartTheoremProof",
            "6f17b47978409ea6534f1ca9a1fd49a9ea7ac672"
        ],
        [
            "by move=> m n /= hmn; rewrite -subr_ge0 -mulrzBr mulrz_le0 // subr_le0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pmulz2l x (hx : 0 < x) : {mono *~%R x : x y / x <= y}.",
            "VernacStartTheoremProof",
            "ccea503dfed55d8f298287917cd5e24ac5932a00"
        ],
        [
            "move=> m n /=; rewrite real_mono ?num_real // => {m n}.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by move=> m n /= hmn; rewrite -subr_gt0 -mulrzBr pmulrz_lgt0 // subr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nmulz2l x (hx : x < 0) : {mono *~%R x : x y /~ x <= y}.",
            "VernacStartTheoremProof",
            "e4462f6183cc447d980f2662655738351a1be8fb"
        ],
        [
            "move=> m n /=; rewrite real_nmono ?num_real // => {m n}.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by move=> m n /= hmn; rewrite -subr_gt0 -mulrzBr nmulrz_lgt0 // subr_lt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pmulz2l x (hx : 0 < x) : {mono *~%R x : x y / x < y}.",
            "VernacStartTheoremProof",
            "258676a78adf39aa4f25f5e7996eb4a9ad6b9442"
        ],
        [
            "exact: lerW_mono (ler_pmulz2l _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nmulz2l x (hx : x < 0) : {mono *~%R x : x y /~ x < y}.",
            "VernacStartTheoremProof",
            "3d297c39e4cb83e23ef800df041fc65e794506fc"
        ],
        [
            "exact: lerW_nmono (ler_nmulz2l _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrz_rgt0 x n (x0 : 0 < x) : 0 < x *~ n = (0 < n).",
            "VernacStartTheoremProof",
            "3fa097d0c10e3b50722cf12a23bc6ce4190c5cdc"
        ],
        [
            "by rewrite -(mulr0z x) ltr_pmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrz_rgt0 x n (x0 : x < 0) : 0 < x *~ n = (n < 0).",
            "VernacStartTheoremProof",
            "1abd63eaed2902db22b63ef3a87cbd7c2ac57c4b"
        ],
        [
            "by rewrite -(mulr0z x) ltr_nmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrz_rlt0 x n (x0 : 0 < x) : x *~ n < 0 = (n < 0).",
            "VernacStartTheoremProof",
            "3a280aeb6ddc305e6d4c1f09e3df831f43e7a1ac"
        ],
        [
            "by rewrite -(mulr0z x) ltr_pmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrz_rlt0 x n (x0 : x < 0) : x *~ n < 0 = (0 < n).",
            "VernacStartTheoremProof",
            "0cdb71f3f7c16ffad21d7b8c4c5f0a69ec76774a"
        ],
        [
            "by rewrite -(mulr0z x) ltr_nmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrz_rge0 x n (x0 : 0 < x) : 0 <= x *~ n = (0 <= n).",
            "VernacStartTheoremProof",
            "dbfa24246f97542bd3e5bc18b8fa9c24184eff67"
        ],
        [
            "by rewrite -(mulr0z x) ler_pmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrz_rge0 x n (x0 : x < 0) : 0 <= x *~ n = (n <= 0).",
            "VernacStartTheoremProof",
            "5fab4b07527dceb6b428154261725917c3db4126"
        ],
        [
            "by rewrite -(mulr0z x) ler_nmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrz_rle0 x n (x0 : 0 < x) : x *~ n <= 0 = (n <= 0).",
            "VernacStartTheoremProof",
            "ecd64d26886a8149ecfa9a3ed8d4e7b6a6b56aa4"
        ],
        [
            "by rewrite -(mulr0z x) ler_pmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrz_rle0 x n (x0 : x < 0) : x *~ n <= 0 = (0 <= n).",
            "VernacStartTheoremProof",
            "c42564a9436373e25f41301b47f159076b104553"
        ],
        [
            "by rewrite -(mulr0z x) ler_nmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrIz x (hx : x != 0) : injective ( *~%R x).",
            "VernacStartTheoremProof",
            "d7e17f1e52450004872d89c99a486c0ff02c44b4"
        ],
        [
            "move=> y z; rewrite -![x *~ _]mulrzr => /(mulfI hx).",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by apply: incr_inj y z; apply: ler_pmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_int m n : (m%:~R <= n%:~R :> R) = (m <= n).",
            "VernacStartTheoremProof",
            "d21ddd6e9430681df3ab4971deac03f5c2ef1036"
        ],
        [
            "by rewrite ler_pmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_int m n : (m%:~R < n%:~R :> R) = (m < n).",
            "VernacStartTheoremProof",
            "41b03948ff85d4562ed809957a8c8547d3c7cb12"
        ],
        [
            "by rewrite ltr_pmulz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_int m n : (m%:~R == n%:~R :> R) = (m == n).",
            "VernacStartTheoremProof",
            "1f3742222ff9671102564d17fc6b39b37d20bc96"
        ],
        [
            "by rewrite (inj_eq (mulrIz _)) ?oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler0z n : (0 <= n%:~R :> R) = (0 <= n).",
            "VernacStartTheoremProof",
            "1d0a3bedf5718a43c35e74476df1ac638ab86bfc"
        ],
        [
            "by rewrite pmulrz_rge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr0z n : (0 < n%:~R :> R) = (0 < n).",
            "VernacStartTheoremProof",
            "6c76c9f70b5965c34c866afd6d893c53ca42774e"
        ],
        [
            "by rewrite pmulrz_rgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerz0 n : (n%:~R <= 0 :> R) = (n <= 0).",
            "VernacStartTheoremProof",
            "e302b467488ff877362c9297caeb7b50edb080c4"
        ],
        [
            "by rewrite pmulrz_rle0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrz0 n : (n%:~R < 0 :> R) = (n < 0).",
            "VernacStartTheoremProof",
            "7d8d2e86ec359259781c37bfc9041ec6722b9721"
        ],
        [
            "by rewrite pmulrz_rlt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler1z (n : int) : (1 <= n%:~R :> R) = (1 <= n).",
            "VernacStartTheoremProof",
            "4fbe3ee6d39a68ad7eedd9b5c4bf87cfdb9ddd36"
        ],
        [
            "by rewrite -[1]/(1%:~R) ler_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr1z (n : int) : (1 < n%:~R :> R) = (1 < n).",
            "VernacStartTheoremProof",
            "b68670cf891a004b618de9e5a1d04184fb883702"
        ],
        [
            "by rewrite -[1]/(1%:~R) ltr_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerz1 n : (n%:~R <= 1 :> R) = (n <= 1).",
            "VernacStartTheoremProof",
            "aede9882c636d8fd2b48bcdcd0e1fac58def70c1"
        ],
        [
            "by rewrite -[1]/(1%:~R) ler_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrz1 n : (n%:~R < 1 :> R) = (n < 1).",
            "VernacStartTheoremProof",
            "28e98de066b4c0a3a451696cb2a2212a66a5217d"
        ],
        [
            "by rewrite -[1]/(1%:~R) ltr_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intr_eq0 n : (n%:~R == 0 :> R) = (n == 0).",
            "VernacStartTheoremProof",
            "7a54e58c10dfe0492e98f7417ed2fd99e66a4aff"
        ],
        [
            "by rewrite -(mulr0z 1) (inj_eq (mulrIz _)) // oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrz_eq0 x n : (x *~ n == 0) = ((n == 0) || (x == 0)).",
            "VernacStartTheoremProof",
            "07bea3925c6515b0085ef79642e5444ed95c3bb5"
        ],
        [
            "by rewrite -mulrzl mulf_eq0 intr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrz_neq0 x n : x *~ n != 0 = ((n != 0) && (x != 0)).",
            "VernacStartTheoremProof",
            "8b770dbae0fd1006f44b8a6936cf39f21c402b4b"
        ],
        [
            "by rewrite mulrz_eq0 negb_or.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realz n : (n%:~R : R) \\in Num.real.",
            "VernacStartTheoremProof",
            "ee4aef38bf3d0208e2dc44802fcb150b1449b2c6"
        ],
        [
            "by rewrite -topredE /Num.real /= ler0z lerz0 ler_total.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve realz : core.",
            "VernacHints",
            "92020a253e71b747c0294039b41be8cbbcd1527f"
        ],
        [
            "Definition intr_inj := @mulrIz 1 (oner_neq0 R).",
            "VernacDefinition",
            "66906f49535a50255f1ab32236d98ee339591fcf"
        ],
        [
            "End PO.",
            "VernacEndSegment",
            "3f848fdce948f07192f27a4cb392a35babcac383"
        ],
        [
            "End NumMorphism.",
            "VernacEndSegment",
            "8e3d227fa78ab930de4ed86e7e458bfea93f6ab7"
        ],
        [
            "End MorphTheory.",
            "VernacEndSegment",
            "86e0c3745b6ca40f5035c4d861da23362a7705d6"
        ],
        [
            "Arguments intr_inj {R} [x1 x2].",
            "VernacArguments",
            "5897daeda4af2a2ef089d9520683b628b292fead"
        ],
        [
            "Definition exprz (R : unitRingType) (x : R) (n : int) := nosimpl match n with | Posz n => x ^+ n | Negz n => x ^- (n.+1) end.",
            "VernacDefinition",
            "963f06215e91f1e6412c9a872197a909e6d68797"
        ],
        [
            "Notation \"x ^ n\" := (exprz x n) : ring_scope.",
            "VernacNotation",
            "b6b8d12c9730c0852a3403326a259192de621659"
        ],
        [
            "Section ExprzUnitRing.",
            "VernacBeginSection",
            "2bd321572a69359248c78b6b1f4adfdab09d6c0e"
        ],
        [
            "Variable R : unitRingType.",
            "VernacAssumption",
            "7091a2a91a14247c9bb358aacf762b043d2cb667"
        ],
        [
            "Implicit Types x y : R.",
            "VernacReserve",
            "a698213249308a1927c4fb90fb6e1fbc35157508"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma exprnP x (n : nat) : x ^+ n = x ^ n.",
            "VernacStartTheoremProof",
            "e85705bc4854617e762b34017ceb01cac366fe5c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprnN x (n : nat) : x ^- n = x ^ -n%:Z.",
            "VernacStartTheoremProof",
            "dc515755046aeae53163a00b64d6c618f2f9207a"
        ],
        [
            "by case: n=> //; rewrite oppr0 expr0 invr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expr0z x : x ^ 0 = 1.",
            "VernacStartTheoremProof",
            "f1d062ffcac00e508c9e5cf77ae9143e5a2307df"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expr1z x : x ^ 1 = x.",
            "VernacStartTheoremProof",
            "248b0f9baad3ce96c3a598d923d3229dd4865e90"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprN1 x : x ^ (-1) = x^-1.",
            "VernacStartTheoremProof",
            "ab89b4870390cbd95f38fb564a6e874a904820d8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invr_expz x n : (x ^ n)^-1 = x ^ (- n).",
            "VernacStartTheoremProof",
            "39806a6715ff1171627811b8356062338521cfa9"
        ],
        [
            "by case: (intP n)=> // [|m]; rewrite ?opprK ?expr0z ?invr1 // invrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprz_inv x n : (x^-1) ^ n = x ^ (- n).",
            "VernacStartTheoremProof",
            "a6bf0d4fc24a69e93062ea10cd23e0d0c34e7a34"
        ],
        [
            "by case: (intP n)=> // m; rewrite -[_ ^ (- _)]exprVn ?opprK ?invrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exp1rz n : 1 ^ n = 1 :> R.",
            "VernacStartTheoremProof",
            "a41e23de6a09b291bdaaf096fc14e91bb717a82e"
        ],
        [
            "by case: (intP n)=> // m; rewrite -?exprz_inv ?invr1; apply: expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprSz x (n : nat) : x ^ n.+1 = x * x ^ n.",
            "VernacStartTheoremProof",
            "8143dd65481777c9d0372367d1c34c94cd97db2a"
        ],
        [
            "exact: exprS.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprSzr x (n : nat) : x ^ n.+1 = x ^ n * x.",
            "VernacStartTheoremProof",
            "dc5c1656193249afa2a50801242688688d038fd4"
        ],
        [
            "exact: exprSr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact exprzD_nat x (m n : nat) : x ^ (m%:Z + n) = x ^ m * x ^ n.",
            "VernacStartTheoremProof",
            "4928661825bf7dde83eda367da12d0be4fa0570c"
        ],
        [
            "exact: exprD.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact exprzD_Nnat x (m n : nat) : x ^ (-m%:Z + -n%:Z) = x ^ (-m%:Z) * x ^ (-n%:Z).",
            "VernacStartTheoremProof",
            "616eb85a8ec9bde00bac4821a0d629eea64ac143"
        ],
        [
            "by rewrite -opprD -!exprz_inv exprzD_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprzD_ss x m n : (0 <= m) && (0 <= n) || (m <= 0) && (n <= 0) -> x ^ (m + n) = x ^ m * x ^ n.",
            "VernacStartTheoremProof",
            "0af6fce695ad727f60ea958ac13addd6baa7d5de"
        ],
        [
            "case: (intP m)=> {m} [|m|m]; case: (intP n)=> {n} [|n|n] //= _; by rewrite ?expr0z ?mul1r ?exprzD_nat ?exprzD_Nnat ?sub0r ?addr0 ?mulr1.",
            "VernacExtend",
            "05928a9db4d7951ab20c19816b8485c23bd4e06c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exp0rz n : 0 ^ n = (n == 0)%:~R :> R.",
            "VernacStartTheoremProof",
            "da60325b2c44fa668d3a7b75785e9c588c30da8b"
        ],
        [
            "by case: (intP n)=> // m; rewrite -?exprz_inv ?invr0 exprSz mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma commrXz x y n : GRing.comm x y -> GRing.comm x (y ^ n).",
            "VernacStartTheoremProof",
            "ea66dd0a20c38740f9181f69822e726f4b26424b"
        ],
        [
            "rewrite /GRing.comm; elim: n x y=> [|n ihn|n ihn] x y com_xy //=.",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "by rewrite expr0z mul1r mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "by rewrite -exprnP commrX //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -exprz_inv -exprnP commrX //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (boolP (y \\is a GRing.unit))=> uy; last by rewrite invr_out.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/eqP; rewrite (can2_eq (mulrVK _) (mulrK _)) // -mulrA com_xy mulKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprMz_comm x y n : x \\is a GRing.unit -> y \\is a GRing.unit -> GRing.comm x y -> (x * y) ^ n = x ^ n * y ^ n.",
            "VernacStartTheoremProof",
            "46de7d365c130af1f77cdbad7e31fa0191172e71"
        ],
        [
            "move=> ux uy com_xy; elim: n => [|n _|n _]; first by rewrite expr0z mulr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -!exprnP exprMn_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -!exprnN -!exprVn com_xy -exprMn_comm ?invrM//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact/commrV/commr_sym/commrV.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma commrXz_wmulls x y n : 0 <= n -> GRing.comm x y -> (x * y) ^ n = x ^ n * y ^ n.",
            "VernacStartTheoremProof",
            "925bc58982e05ff7fc64070733f7d5ae2325ce21"
        ],
        [
            "move=> n0 com_xy; elim: n n0 => [|n _|n _] //; first by rewrite expr0z mulr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -!exprnP exprMn_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitrXz x n (ux : x \\is a GRing.unit) : x ^ n \\is a GRing.unit.",
            "VernacStartTheoremProof",
            "73cfa93406e87fd11b7df5c57bdd15146810adeb"
        ],
        [
            "case: (intP n)=> {n} [|n|n]; rewrite ?expr0z ?unitr1 ?unitrX //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite -invr_expz unitrV unitrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprzDr x (ux : x \\is a GRing.unit) m n : x ^ (m + n) = x ^ m * x ^ n.",
            "VernacStartTheoremProof",
            "9610961c919267fc16a884ce8ff46b08a1917ffb"
        ],
        [
            "move: n m; apply: wlog_ler=> n m hnm.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite addrC hnm commrXz //; apply: commr_sym; apply: commrXz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (intP m) hnm=> {m} [|m|m]; rewrite ?mul1r ?add0r //; case: (intP n)=> {n} [|n|n _]; rewrite ?mulr1 ?addr0 //; do ?by rewrite exprzD_ss.",
            "VernacExtend",
            "a86e19a36cd89520bbe3a8ac8a58451250b2a32b"
        ],
        [
            "rewrite -invr_expz subzSS !exprSzr invrM ?unitrX // -mulrA mulVKr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (leqP n m)=> [|/ltnW] hmn; rewrite -{2}(subnK hmn) exprzD_nat -subzn //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite mulrK ?unitrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite invrM ?unitrXz // mulVKr ?unitrXz // -opprB -invr_expz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprz_exp x m n : (x ^ m) ^ n = (x ^ (m * n)).",
            "VernacStartTheoremProof",
            "f4f4a29252f3abe956a16cb6c55e0b47384794c0"
        ],
        [
            "wlog: n / 0 <= n.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "by case: n=> [n -> //|n]; rewrite ?NegzE mulrN -?invr_expz=> -> /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: n x m=> [|n ihn|n ihn] x m // _; first by rewrite mulr0 !expr0z.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite exprSz ihn // intS mulrDr mulr1 exprzD_ss //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (intP m)=> // m'; rewrite ?oppr_le0 //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprzAC x m n : (x ^ m) ^ n = (x ^ n) ^ m.",
            "VernacStartTheoremProof",
            "332203c68e47870febde3ec09e6c1eaa0a41d869"
        ],
        [
            "by rewrite !exprz_exp mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprz_out x n (nux : x \\isn't a GRing.unit) (hn : 0 <= n) : x ^ (- n) = x ^ n.",
            "VernacStartTheoremProof",
            "8a2c1ead64d2ff4f0dc1acd732c933642f82b96d"
        ],
        [
            "by case: (intP n) hn=> //= m; rewrite -exprnN -exprVn invr_out.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExprzUnitRing.",
            "VernacEndSegment",
            "8ebf1bef86a2681a0a827350d94da2fd87e98dbf"
        ],
        [
            "Section Exprz_Zint_UnitRing.",
            "VernacBeginSection",
            "8c8766a1a0d45fc9e313ab4aea4a6f2340827d79"
        ],
        [
            "Variable R : unitRingType.",
            "VernacAssumption",
            "7091a2a91a14247c9bb358aacf762b043d2cb667"
        ],
        [
            "Implicit Types x y : R.",
            "VernacReserve",
            "a698213249308a1927c4fb90fb6e1fbc35157508"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma exprz_pmulzl x m n : 0 <= n -> (x *~ m) ^ n = x ^ n *~ (m ^ n).",
            "VernacStartTheoremProof",
            "c40f0c959ad6c25ddd83d8973bf13f5c9a79c598"
        ],
        [
            "by elim: n=> [|n ihn|n _] // _; rewrite !exprSz ihn // mulrzAr mulrzAl -mulrzA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprz_pintl m n (hn : 0 <= n) : m%:~R ^ n = (m ^ n)%:~R :> R.",
            "VernacStartTheoremProof",
            "bb209505b5f0e7c1e4f0befbc0fcd0be33464853"
        ],
        [
            "by rewrite exprz_pmulzl // exp1rz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprzMzl x m n (ux : x \\is a GRing.unit) (um : m%:~R \\is a @GRing.unit R): (x *~ m) ^ n = (m%:~R ^ n) * x ^ n :> R.",
            "VernacStartTheoremProof",
            "537eb781a022353d24ff3b3d66000bc1ecf6cb8a"
        ],
        [
            "rewrite -[x *~ _]mulrzl exprMz_comm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: commr_sym; apply: commr_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expNrz x n : (- x) ^ n = (-1) ^ n * x ^ n :> R.",
            "VernacStartTheoremProof",
            "8365dce5b6dd22c1c23f29d39bbf8158d7e2b737"
        ],
        [
            "case: n=> [] n; rewrite ?NegzE; first by apply: exprNn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -!exprz_inv !invrN invr1; apply: exprNn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitr_n0expz x n : n != 0 -> (x ^ n \\is a GRing.unit) = (x \\is a GRing.unit).",
            "VernacStartTheoremProof",
            "808a020061c67ffc9c33d36d993d09410d49289e"
        ],
        [
            "by case: n => *; rewrite ?NegzE -?exprz_inv ?unitrX_pos ?unitrV ?lt0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intrV (n : int) : n \\in [:: 0; 1; -1] -> n%:~R ^-1 = n%:~R :> R.",
            "VernacStartTheoremProof",
            "ee940e4ac72a69b27fd4613a51e640d287fcda92"
        ],
        [
            "by case: (intP n)=> // [|[]|[]] //; rewrite ?rmorphN ?invrN (invr0, invr1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmorphXz (R' : unitRingType) (f : {rmorphism R -> R'}) n : {in GRing.unit, {morph f : x / x ^ n}}.",
            "VernacStartTheoremProof",
            "482173a11b4eb3429f90f9f7eae24b00cca4b498"
        ],
        [
            "by case: n => n x Ux; rewrite ?rmorphV ?rpredX ?rmorphX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exprz_Zint_UnitRing.",
            "VernacEndSegment",
            "2d0421810c4f061944c416ab8f8a4dba6e18e875"
        ],
        [
            "Section ExprzIdomain.",
            "VernacBeginSection",
            "99c4dab0828e8d5459d03d2906a7a7853ed4c377"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Implicit Types x y : R.",
            "VernacReserve",
            "a698213249308a1927c4fb90fb6e1fbc35157508"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma expfz_eq0 x n : (x ^ n == 0) = (n != 0) && (x == 0).",
            "VernacStartTheoremProof",
            "f70c3efc3ab6799e9d2fcf58051743c0aeb0a9a6"
        ],
        [
            "by case: n=> n; rewrite ?NegzE -?exprz_inv ?expf_eq0 ?lt0n ?invr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expfz_neq0 x n : x != 0 -> x ^ n != 0.",
            "VernacStartTheoremProof",
            "b16e8e501acf6edb112942252b1fce679d52fe56"
        ],
        [
            "by move=> x_nz; rewrite expfz_eq0; apply/nandP; right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprzMl x y n (ux : x \\is a GRing.unit) (uy : y \\is a GRing.unit) : (x * y) ^ n = x ^ n * y ^ n.",
            "VernacStartTheoremProof",
            "414e63db991e5570927aca4be796f7b82f0eee23"
        ],
        [
            "by rewrite exprMz_comm //; apply: mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expfV (x : R) (i : int) : (x ^ i) ^-1 = (x ^-1) ^ i.",
            "VernacStartTheoremProof",
            "a4414bbb2450f446c3ec5e6f6c9ebd120de6f4e2"
        ],
        [
            "by rewrite invr_expz exprz_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExprzIdomain.",
            "VernacEndSegment",
            "4b3728fd80959c022f17f6326cce5f783d046d1c"
        ],
        [
            "Section ExprzField.",
            "VernacBeginSection",
            "d6965bb815181b8312f7d9a3e05e4ab722a847ee"
        ],
        [
            "Variable F : fieldType.",
            "VernacAssumption",
            "dfbeb3104cff90ac5c843c17124389867a4c6a4a"
        ],
        [
            "Implicit Types x y : F.",
            "VernacReserve",
            "7cadf5e84ccc82fdd8236672c79612628679ff75"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma expfzDr x m n : x != 0 -> x ^ (m + n) = x ^ m * x ^ n.",
            "VernacStartTheoremProof",
            "394ea3949f144c774401cd52833b20258f6ff4ac"
        ],
        [
            "by move=> hx; rewrite exprzDr ?unitfE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expfz_n0addr x m n : m + n != 0 -> x ^ (m + n) = x ^ m * x ^ n.",
            "VernacStartTheoremProof",
            "8272b81e8c0fed8720a3ea2a1624eab48a08b1f6"
        ],
        [
            "have [-> hmn|nx0 _] := eqVneq x 0; last exact: expfzDr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !exp0rz (negPf hmn).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (altP (m =P 0)) hmn=> [->|]; rewrite (mul0r, mul1r) //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite add0r=> /negPf->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expfzMl x y n : (x * y) ^ n = x ^ n * y ^ n.",
            "VernacStartTheoremProof",
            "e8059d6cad11023ea6d2a813af70e4dfa9fb0146"
        ],
        [
            "have [->|/negPf n0] := eqVneq n 0; first by rewrite !expr0z mulr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (boolP ((x * y) == 0)); rewrite ?mulf_eq0.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case/orP=> /eqP->; rewrite ?(mul0r, mulr0, exp0rz, n0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/norP=> x0 y0; rewrite exprzMl ?unitfE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmorphXz (R : unitRingType) (f : {rmorphism F -> R}) n : {morph f : x / x ^ n}.",
            "VernacStartTheoremProof",
            "0b4ef1e5f3d63d2d2cba5afecc8b318abd3e5485"
        ],
        [
            "by case: n => n x; rewrite ?fmorphV rmorphX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExprzField.",
            "VernacEndSegment",
            "80e16ec5cd1d4f2ea51cff89e1719e4b41e6be5a"
        ],
        [
            "Section ExprzOrder.",
            "VernacBeginSection",
            "9920829c3f2b65011624cd59f166663680f4458d"
        ],
        [
            "Variable R : realFieldType.",
            "VernacAssumption",
            "2ec8fa3b764d568880ba283a56fc160c854db4c6"
        ],
        [
            "Implicit Types x y : R.",
            "VernacReserve",
            "a698213249308a1927c4fb90fb6e1fbc35157508"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma exprz_ge0 n x (hx : 0 <= x) : (0 <= x ^ n).",
            "VernacStartTheoremProof",
            "ddb66e0ea6f3fd25160819d140069b27bf86f3aa"
        ],
        [
            "by case: n=> n; rewrite ?NegzE -?invr_expz ?invr_ge0 ?exprn_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprz_gt0 n x (hx : 0 < x) : (0 < x ^ n).",
            "VernacStartTheoremProof",
            "0e7e3726578f0a5c68840e66e2181b3058e080e4"
        ],
        [
            "by case: n=> n; rewrite ?NegzE -?invr_expz ?invr_gt0 ?exprn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition exprz_gte0 := (exprz_ge0, exprz_gt0).",
            "VernacDefinition",
            "205641faf5849b8244995617cc22a9e564f09c30"
        ],
        [
            "Lemma ler_wpiexpz2l x (x0 : 0 <= x) (x1 : x <= 1) : {in >= 0 &, {homo (exprz x) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "5b72b3f1319c36f9f25e06dee35de978122f9f73"
        ],
        [
            "move=> [] m [] n; rewrite -!topredE /= ?oppr_cp0 ?ltz_nat // => _ _.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite lez_nat -?exprnP=> /ler_wiexpn2l; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wniexpz2l x (x0 : 0 <= x) (x1 : x <= 1) : {in < 0 &, {homo (exprz x) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "9d5697685fca69b22a9e2a9f46341cfd5de74a31"
        ],
        [
            "move=> [] m [] n; rewrite ?NegzE -!topredE /= ?oppr_cp0 ?ltz_nat // => _ _.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite ler_opp2 lez_nat -?invr_expz=> hmn; move: (x0).",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "rewrite le0r=> /orP [/eqP->|lx0]; first by rewrite !exp0rz invr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lef_pinv -?topredE /= ?exprz_gt0 // ler_wiexpn2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact ler_wpeexpz2l x (x1 : 1 <= x) : {in >= 0 &, {homo (exprz x) : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "0b37fb0061e9cbe7a359876cf373df92cd2c46b0"
        ],
        [
            "move=> [] m [] n; rewrite -!topredE /= ?oppr_cp0 ?ltz_nat // => _ _.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite lez_nat -?exprnP=> /ler_weexpn2l; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact ler_wneexpz2l x (x1 : 1 <= x) : {in <= 0 &, {homo (exprz x) : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "5d0f852107536a9c036c48ffa7518eb9af622730"
        ],
        [
            "move=> m n hm hn /= hmn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -lef_pinv -?topredE /= ?exprz_gt0 ?(ltr_le_trans ltr01) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !invr_expz ler_wpeexpz2l ?ler_opp2 -?topredE //= oppr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_weexpz2l x (x1 : 1 <= x) : {homo (exprz x) : x y / x <= y}.",
            "VernacStartTheoremProof",
            "9819903f92b78824b0c05915d6ddec554c485959"
        ],
        [
            "move=> m n /= hmn; case: (lerP 0 m)=> [|/ltrW] hm.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite ler_wpeexpz2l // [_ \\in _](ler_trans hm).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (lerP n 0)=> [|/ltrW] hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite ler_wneexpz2l // [_ \\in _](ler_trans hmn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (@ler_trans _ (x ^ 0)); first by rewrite ler_wneexpz2l.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ler_wpeexpz2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pexprz_eq1 x n (x0 : 0 <= x) : (x ^ n == 1) = ((n == 0) || (x == 1)).",
            "VernacStartTheoremProof",
            "b64bc41d51ac1216e1c4078b366f9f49bb1a4e01"
        ],
        [
            "case: n=> n; rewrite ?NegzE -?exprz_inv ?oppr_eq0 pexprn_eq1 // ?invr_eq1 //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite invr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ieexprIz x (x0 : 0 < x) (nx1 : x != 1) : injective (exprz x).",
            "VernacStartTheoremProof",
            "c1de5d6086d0d59ee757846d76ba67173693af64"
        ],
        [
            "apply: wlog_ltr=> // m n hmn; first by move=> hmn'; rewrite hmn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> /(f_equal ( *%R^~ (x ^ (- n)))).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -!expfzDr ?gtr_eqF // subrr expr0z=> /eqP.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite pexprz_eq1 ?(ltrW x0) // (negPf nx1) subr_eq0 orbF=> /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_piexpz2l x (x0 : 0 < x) (x1 : x < 1) : {in >= 0 &, {mono (exprz x) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "e66243242f4155c6d7339e3dcc285d578c074e2e"
        ],
        [
            "apply: (ler_nmono_in (inj_nhomo_ltr_in _ _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move=> n m hn hm /=; apply: ieexprIz; rewrite // ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: ler_wpiexpz2l; rewrite ?ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_piexpz2l x (x0 : 0 < x) (x1 : x < 1) : {in >= 0 &, {mono (exprz x) : x y /~ x < y}}.",
            "VernacStartTheoremProof",
            "57b0747ab270529fcc3d671e4d0ad7313ebac12e"
        ],
        [
            "exact: (lerW_nmono_in (ler_piexpz2l _ _)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_niexpz2l x (x0 : 0 < x) (x1 : x < 1) : {in < 0 &, {mono (exprz x) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "eaaf79e9cd52189e66fb30839a65189c283b720d"
        ],
        [
            "apply: (ler_nmono_in (inj_nhomo_ltr_in _ _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move=> n m hn hm /=; apply: ieexprIz; rewrite // ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: ler_wniexpz2l; rewrite ?ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_niexpz2l x (x0 : 0 < x) (x1 : x < 1) : {in < 0 &, {mono (exprz x) : x y /~ x < y}}.",
            "VernacStartTheoremProof",
            "a14125cc3664e55671fd18b39c74d738e3b6a7af"
        ],
        [
            "exact: (lerW_nmono_in (ler_niexpz2l _ _)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_eexpz2l x (x1 : 1 < x) : {mono (exprz x) : x y / x <= y}.",
            "VernacStartTheoremProof",
            "9cfaa7cfb6284d29d0b05c79b665cb4f27529ade"
        ],
        [
            "apply: (ler_mono (inj_homo_ltr _ _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: ieexprIz; rewrite ?(ltr_trans ltr01) // gtr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: ler_weexpz2l; rewrite ?ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_eexpz2l x (x1 : 1 < x) : {mono (exprz x) : x y / x < y}.",
            "VernacStartTheoremProof",
            "da9af7b24a494bfd54c00f659c86fff30b47588e"
        ],
        [
            "exact: (lerW_mono (ler_eexpz2l _)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wpexpz2r n (hn : 0 <= n) : {in >= 0 & , {homo ((@exprz R)^~ n) : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "57fc699f97c0dda92a95ad820cfdf30f104dff90"
        ],
        [
            "by case: n hn=> // n _; apply: ler_expn2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wnexpz2r n (hn : n <= 0) : {in > 0 & , {homo ((@exprz R)^~ n) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "b637622d42a1d5ee1d441b4d83293bc94a9d4d3f"
        ],
        [
            "move=> x y /= hx hy hxy; rewrite -lef_pinv ?[_ \\in _]exprz_gt0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !invr_expz ler_wpexpz2r ?[_ \\in _]ltrW // oppr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pexpIrz n (n0 : n != 0) : {in >= 0 &, injective ((@exprz R)^~ n)}.",
            "VernacStartTheoremProof",
            "54da08b0002deaa0b6d7db8dde60543abd66d74b"
        ],
        [
            "move=> x y; rewrite ![_ \\in _]le0r=> /orP [/eqP-> _ /eqP|hx].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite exp0rz ?(negPf n0) eq_sym expfz_eq0=> /andP [_ /eqP->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/orP=> [/eqP-> /eqP|hy].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite exp0rz ?(negPf n0) expfz_eq0=> /andP [_ /eqP].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> /(f_equal ( *%R^~ (y ^ (- n)))) /eqP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -expfzDr ?(gtr_eqF hy) // subrr expr0z -exprz_inv -expfzMl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite pexprz_eq1 ?(negPf n0) /= ?mulr_ge0 ?invr_ge0 ?ltrW //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (can2_eq (mulrVK _) (mulrK _)) ?unitfE ?(gtr_eqF hy) // mul1r=> /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nexpIrz n (n0 : n != 0) : {in <= 0 &, injective ((@exprz R)^~ n)}.",
            "VernacStartTheoremProof",
            "f04570616da0f37b86f1a32a80397bebda06037f"
        ],
        [
            "move=> x y; rewrite ![_ \\in _]ler_eqVlt => /orP [/eqP -> _ /eqP|hx].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite exp0rz ?(negPf n0) eq_sym expfz_eq0=> /andP [_ /eqP->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/orP=> [/eqP -> /eqP|hy].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite exp0rz ?(negPf n0) expfz_eq0=> /andP [_ /eqP].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> /(f_equal ( *%R^~ (y ^ (- n)))) /eqP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -expfzDr ?(ltr_eqF hy) // subrr expr0z -exprz_inv -expfzMl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite pexprz_eq1 ?(negPf n0) /= ?mulr_le0 ?invr_le0 ?ltrW //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (can2_eq (mulrVK _) (mulrK _)) ?unitfE ?(ltr_eqF hy) // mul1r=> /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pexpz2r n (hn : 0 < n) : {in >= 0 & , {mono ((@exprz R)^~ n) : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "f14db14c9b2092616aa7f4b5dc4725ed3702029d"
        ],
        [
            "apply: ler_mono_in (inj_homo_ltr_in _ _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move=> x y hx hy /=; apply: pexpIrz; rewrite // gtr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: ler_wpexpz2r; rewrite ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pexpz2r n (hn : 0 < n) : {in >= 0 & , {mono ((@exprz R)^~ n) : x y / x < y}}.",
            "VernacStartTheoremProof",
            "cd8e893ca0ff0b680ab10949bc17293fb9277c0c"
        ],
        [
            "exact: lerW_mono_in (ler_pexpz2r _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nexpz2r n (hn : n < 0) : {in > 0 & , {mono ((@exprz R)^~ n) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "c2dade9b8ef0f49130c12ac9e9e2bd3e58fd8cfe"
        ],
        [
            "apply: ler_nmono_in (inj_nhomo_ltr_in _ _); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: ler_wnexpz2r; rewrite ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> x y hx hy /=; apply: pexpIrz; rewrite ?[_ \\in _]ltrW ?ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nexpz2r n (hn : n < 0) : {in > 0 & , {mono ((@exprz R)^~ n) : x y /~ x < y}}.",
            "VernacStartTheoremProof",
            "9431425733412057f42021c0d6baa20753b7c4f2"
        ],
        [
            "exact: lerW_nmono_in (ler_nexpz2r _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_expz2 n x y : n != 0 -> 0 <= x -> 0 <= y -> (x ^ n == y ^ n) = (x == y).",
            "VernacStartTheoremProof",
            "037b3a2c6891ae89b0ee862e82a9a473213524a0"
        ],
        [
            "by move=> *; rewrite (inj_in_eq (pexpIrz _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExprzOrder.",
            "VernacEndSegment",
            "869e25fd65af104f3a05affe05b386eaf6e280a9"
        ],
        [
            "Local Notation sgr := Num.sg.",
            "VernacSyntacticDefinition",
            "aa1afb5115a11c3c6c03bdc015075f5f472109d6"
        ],
        [
            "Section Sgz.",
            "VernacBeginSection",
            "2eafde5576b0777b537f16d00c568c4039a04da2"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Implicit Types x y z : R.",
            "VernacReserve",
            "5b53950eef16c05b6d76b95a2bc590b36e66d08e"
        ],
        [
            "Implicit Types m n p : int.",
            "VernacReserve",
            "9da828c445e36d67364f4b10ccd07ba21167d126"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Definition sgz x : int := if x == 0 then 0 else if x < 0 then -1 else 1.",
            "VernacDefinition",
            "9c7d6d875e183a50527c6f21f409332bad13047e"
        ],
        [
            "Lemma sgz_def x : sgz x = (-1) ^+ (x < 0)%R *+ (x != 0).",
            "VernacStartTheoremProof",
            "4a0f173835942a3c9bb8e985e091e778c7e0edfe"
        ],
        [
            "by rewrite /sgz; case: (_ == _); case: (_ < _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgrEz x : sgr x = (sgz x)%:~R.",
            "VernacStartTheoremProof",
            "397cab737f58674dbacbf9bbd7cbdebe863b25aa"
        ],
        [
            "by rewrite !(fun_if intr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr0_sgz x : 0 < x -> sgz x = 1.",
            "VernacStartTheoremProof",
            "d4f5cba308fbda553f90786a7e9a1c647f1b6621"
        ],
        [
            "by move=> x_gt0; rewrite /sgz ltr_neqAle andbC eqr_le ltr_geF //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr0_sgz x : x < 0 -> sgz x = -1.",
            "VernacStartTheoremProof",
            "29a896a393266264424ba2299c7bdb3a63cf72fd"
        ],
        [
            "by move=> x_lt0; rewrite /sgz eq_sym eqr_le x_lt0 ltr_geF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz0 : sgz (0 : R) = 0.",
            "VernacStartTheoremProof",
            "c9abecba7191def3d8ec56da95a41f702cae74fa"
        ],
        [
            "by rewrite /sgz eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz1 : sgz (1 : R) = 1.",
            "VernacStartTheoremProof",
            "42fd5699a91cd46bbc8a8895128cbde2d0403680"
        ],
        [
            "by rewrite gtr0_sgz // ltr01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgzN1 : sgz (-1 : R) = -1.",
            "VernacStartTheoremProof",
            "d6c72945f2d2ecece9504c975c69eb15b4515532"
        ],
        [
            "by rewrite ltr0_sgz // ltrN10.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sgzE := (sgz0, sgz1, sgzN1).",
            "VernacDefinition",
            "b916813e6053f55173fa09f601375e2729b5e94d"
        ],
        [
            "Lemma sgz_sgr x : sgz (sgr x) = sgz x.",
            "VernacStartTheoremProof",
            "37b5e05fbcee6eeeffa00e9b5634f79f425c037b"
        ],
        [
            "by rewrite !(fun_if sgz) !sgzE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_sgz x : `|sgz x| = (x != 0).",
            "VernacStartTheoremProof",
            "9f8c4f44765a6c28556a4c7b56c6c45f77e448db"
        ],
        [
            "by rewrite sgz_def -mulr_natr normrMsign normr_nat natz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_sg x : `|sgr x| = (x != 0)%:~R.",
            "VernacStartTheoremProof",
            "3fe70aa36e032c1c91642e7022da9ee82dbabb3d"
        ],
        [
            "by rewrite sgr_def -mulr_natr normrMsign normr_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sgz.",
            "VernacEndSegment",
            "fd182a68efa971ff3c3a39d7a697ca7b07e56993"
        ],
        [
            "Section MoreSgz.",
            "VernacBeginSection",
            "a76bdb01e4db0d10626f289bffae996cbb873a41"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Lemma sgz_int m : sgz (m%:~R : R) = sgz m.",
            "VernacStartTheoremProof",
            "0a550c71cf9a4048eea9610e423be9b873d0ed61"
        ],
        [
            "by rewrite /sgz intr_eq0 ltrz0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgrz (n : int) : sgr n = sgz n.",
            "VernacStartTheoremProof",
            "c151cba75c649d1d637e550e1ac4b84bd8093ccf"
        ],
        [
            "by rewrite sgrEz intz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intr_sg m : (sgr m)%:~R = sgr (m%:~R) :> R.",
            "VernacStartTheoremProof",
            "bd682d76b44a37278097e1e6610dce5c0d5aa6e7"
        ],
        [
            "by rewrite sgrz -sgz_int -sgrEz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz_id (x : R) : sgz (sgz x) = sgz x.",
            "VernacStartTheoremProof",
            "e28cb11feb27879dc3c9713d2b672b14d6fbc2ca"
        ],
        [
            "by rewrite !(fun_if (@sgz _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MoreSgz.",
            "VernacEndSegment",
            "059bb01888bf31a051e346ca14302382e21c00bb"
        ],
        [
            "Section SgzReal.",
            "VernacBeginSection",
            "4648fa247565898a82fd084e3447b90ea58e1cb4"
        ],
        [
            "Variable R : realDomainType.",
            "VernacAssumption",
            "0693f35b06db2e27c7cf58627c33e70282f912ba"
        ],
        [
            "Implicit Types x y z : R.",
            "VernacReserve",
            "5b53950eef16c05b6d76b95a2bc590b36e66d08e"
        ],
        [
            "Implicit Types m n p : int.",
            "VernacReserve",
            "9da828c445e36d67364f4b10ccd07ba21167d126"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma sgz_cp0 x : ((sgz x == 1) = (0 < x)) * ((sgz x == -1) = (x < 0)) * ((sgz x == 0) = (x == 0)).",
            "VernacStartTheoremProof",
            "b3967e801f5043decda273d15f03c646cfadce9c"
        ],
        [
            "by rewrite /sgz; case: ltrgtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant sgz_val x : bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> R -> R -> int -> Set := | SgzNull of x = 0 : sgz_val x true true true true false false true false false true false false true false false true false false 0 0 0 | SgzPos of x > 0 : sgz_val x false false true false false true false false true false false true false false true false false true x 1 1 | SgzNeg of x < 0 : sgz_val x false true false false true false false true false false true false false true false false true false (-x) (-1) (-1).",
            "VernacInductive",
            "e3960c21c9e14b46e06d17b24dd2d86699236412"
        ],
        [
            "Lemma sgzP x : sgz_val x (0 == x) (x <= 0) (0 <= x) (x == 0) (x < 0) (0 < x) (0 == sgr x) (-1 == sgr x) (1 == sgr x) (sgr x == 0) (sgr x == -1) (sgr x == 1) (0 == sgz x) (-1 == sgz x) (1 == sgz x) (sgz x == 0) (sgz x == -1) (sgz x == 1) `|x| (sgr x) (sgz x).",
            "VernacStartTheoremProof",
            "95a76134e60cb2cf1efc79d31cf47cc6e7a12450"
        ],
        [
            "rewrite ![_ == sgz _]eq_sym ![_ == sgr _]eq_sym !sgr_cp0 !sgz_cp0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /sgr /sgz !lerNgt; case: ltrgt0P; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgzN x : sgz (- x) = - sgz x.",
            "VernacStartTheoremProof",
            "897ea9e7271440c3c7b4d240e973eb0180382b0c"
        ],
        [
            "by rewrite /sgz oppr_eq0 oppr_lt0; case: ltrgtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulz_sg x : sgz x * sgz x = (x != 0)%:~R.",
            "VernacStartTheoremProof",
            "760e2027b46c2d9347791dd805dd2c4e7aeee111"
        ],
        [
            "by case: sgzP; rewrite ?(mulr0, mulr1, mulrNN).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulz_sg_eq1 x y : (sgz x * sgz y == 1) = (x != 0) && (sgz x == sgz y).",
            "VernacStartTheoremProof",
            "80c222873259a915dee43f644937d379b36b5e35"
        ],
        [
            "do 2?case: sgzP=> _; rewrite ?(mulr0, mulr1, mulrN1, opprK, oppr0, eqxx); by rewrite ?[0 == 1]eq_sym ?oner_eq0 //= eqr_oppLR oppr0 oner_eq0.",
            "VernacExtend",
            "d1ef1835525210ce0ce7a1499de3ee2f48a00f99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulz_sg_eqN1 x y : (sgz x * sgz y == -1) = (x != 0) && (sgz x == - sgz y).",
            "VernacStartTheoremProof",
            "d615146084fa2a94bbd8314ea1daafe9e84e91d4"
        ],
        [
            "by rewrite -eqr_oppLR -mulrN -sgzN mulz_sg_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgzM x y : sgz (x * y) = sgz x * sgz y.",
            "VernacStartTheoremProof",
            "6a73135ea3bfddc18bbca2ec537c51b3f393bb5c"
        ],
        [
            "case: (sgzP x)=> hx; first by rewrite hx ?mul0r sgz0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (sgzP y)=> hy; first by rewrite hy !mulr0 sgz0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/eqP; rewrite mul1r sgz_cp0 pmulr_rgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/eqP; rewrite mul1r sgz_cp0 nmulr_llt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (sgzP y)=> hy; first by rewrite hy !mulr0 sgz0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/eqP; rewrite mulr1 sgz_cp0 nmulr_rlt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/eqP; rewrite mulN1r opprK sgz_cp0 nmulr_rgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgzX (n : nat) x : sgz (x ^+ n) = (sgz x) ^+ n.",
            "VernacStartTheoremProof",
            "06483540e98b204015c24b82f43d338021b33a7b"
        ],
        [
            "by elim: n => [|n IHn]; rewrite ?sgz1 // !exprS sgzM IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz_eq0 x : (sgz x == 0) = (x == 0).",
            "VernacStartTheoremProof",
            "3b3075039984472e3f5df2c6b93be274de0e2d35"
        ],
        [
            "by rewrite sgz_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz_odd (n : nat) x : x != 0 -> (sgz x) ^+ n = (sgz x) ^+ (odd n).",
            "VernacStartTheoremProof",
            "a11f4a2b91544bc8129ba26d3cd0bfb5790f834e"
        ],
        [
            "by case: sgzP => //=; rewrite ?expr1n // signr_odd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz_gt0 x : (sgz x > 0) = (x > 0).",
            "VernacStartTheoremProof",
            "132dee13f0692dd298192b31a4e71605e5cf6367"
        ],
        [
            "by case: sgzP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz_lt0 x : (sgz x < 0) = (x < 0).",
            "VernacStartTheoremProof",
            "bd1c6c2c20ad3cdf4f3e82d85df515d6cb81f0a7"
        ],
        [
            "by case: sgzP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz_ge0 x : (sgz x >= 0) = (x >= 0).",
            "VernacStartTheoremProof",
            "87cf44e6f1d38a454bf3a7aafdf26ae8a43a4933"
        ],
        [
            "by case: sgzP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz_le0 x : (sgz x <= 0) = (x <= 0).",
            "VernacStartTheoremProof",
            "1bb577b776032d2d77c29faf373a13242c457f4b"
        ],
        [
            "by case: sgzP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgz_smul x y : sgz (y *~ (sgz x)) = (sgz x) * (sgz y).",
            "VernacStartTheoremProof",
            "06ef0dab1d19d7dc31b5073bf0c344840fca667a"
        ],
        [
            "by rewrite -mulrzl sgzM -sgrEz sgz_sgr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgrMz m x : sgr (x *~ m) = sgr x *~ sgr m.",
            "VernacStartTheoremProof",
            "0b765188522a6e46963ab3c399a7d4532274adb7"
        ],
        [
            "by rewrite -mulrzr sgrM -intr_sg mulrzr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SgzReal.",
            "VernacEndSegment",
            "5c6a327fa34cf976359aa250af87c9d4e605a8ef"
        ],
        [
            "Lemma sgz_eq (R R' : realDomainType) (x : R) (y : R') : (sgz x == sgz y) = ((x == 0) == (y == 0)) && ((0 < x) == (0 < y)).",
            "VernacStartTheoremProof",
            "6188263279fbb459020089256a1f577202e173f8"
        ],
        [
            "by do 2!case: sgzP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intr_sign (R : ringType) s : ((-1) ^+ s)%:~R = (-1) ^+ s :> R.",
            "VernacStartTheoremProof",
            "c2b0a070020af03a0bc3c54332ed415ae211fbfe"
        ],
        [
            "exact: rmorph_sign.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Absz.",
            "VernacBeginSection",
            "d39ab322296d4588544cd7bc3564e8f5c13f58e3"
        ],
        [
            "Implicit Types m n p : int.",
            "VernacReserve",
            "9da828c445e36d67364f4b10ccd07ba21167d126"
        ],
        [
            "Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "22a30e2fa4fb58b685066c0106e0f666475aba7e"
        ],
        [
            "Local Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "f24b0334c13588ab938662eeb506ab4946da00e2"
        ],
        [
            "Lemma absz_nat (n : nat) : `|n| = n.",
            "VernacStartTheoremProof",
            "f87df039f86d5f454821efec81e34c15c30a0824"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abszE (m : int) : `|m| = `|m|%R :> int.",
            "VernacStartTheoremProof",
            "d683c0e870491713790aea478cfa7bccc7ccb266"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma absz0 : `|0%R| = 0.",
            "VernacStartTheoremProof",
            "49ada17258ddcc5a1f17e3efd2f9a25a498e192b"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abszN m : `|- m| = `|m|.",
            "VernacStartTheoremProof",
            "fa6cb2dcb1f70704a96c2207c80bfe633a432b30"
        ],
        [
            "by case: (normrN m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma absz_eq0 m : (`|m| == 0) = (m == 0%R).",
            "VernacStartTheoremProof",
            "31d456a98cb0008cd3738d543b01e6670158499e"
        ],
        [
            "by case: (intP m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma absz_gt0 m : (`|m| > 0) = (m != 0%R).",
            "VernacStartTheoremProof",
            "1d1203c0de2763f4a38130ca95bd6137b468f6f8"
        ],
        [
            "by case: (intP m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma absz1 : `|1%R| = 1.",
            "VernacStartTheoremProof",
            "af568f96a8c86e87751516d75fdb60b3d79cfbfd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abszN1 : `|-1%R| = 1.",
            "VernacStartTheoremProof",
            "75f6dfcdc2c455160f866c0b76001323d5678585"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma absz_id m : `|(`|m|)| = `|m|.",
            "VernacStartTheoremProof",
            "747dcd130f2a057898ce08ab3fe62cdc7d8a8483"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abszM m1 m2 : `|(m1 * m2)%R| = `|m1| * `|m2|.",
            "VernacStartTheoremProof",
            "3456fef8ba05cb0f4720f432d747751b66e7b6db"
        ],
        [
            "by case: m1 m2 => [[|m1]|m1] [[|m2]|m2]; rewrite //= mulnS mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abszX (n : nat) m : `|m ^+ n| = `|m| ^ n.",
            "VernacStartTheoremProof",
            "664d6633e1da810fca1a35184c83f55a7e04442c"
        ],
        [
            "by elim: n => // n ihn; rewrite exprS expnS abszM ihn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma absz_sg m : `|sgr m| = (m != 0%R).",
            "VernacStartTheoremProof",
            "0f06d59047e92bad911f7ae89ac8d508886e9d8d"
        ],
        [
            "by case: (intP m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gez0_abs m : (0 <= m)%R -> `|m| = m :> int.",
            "VernacStartTheoremProof",
            "3cbaa16c8fb8fa151f9f0b7acd2fd2d05956d04f"
        ],
        [
            "by case: (intP m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtz0_abs m : (0 < m)%R -> `|m| = m :> int.",
            "VernacStartTheoremProof",
            "6886229e984d2ef20f1d24ea2a298128077d10e1"
        ],
        [
            "by case: (intP m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lez0_abs m : (m <= 0)%R -> `|m| = - m :> int.",
            "VernacStartTheoremProof",
            "6c346b82b02b45b3db357ce202478a3d64d42b35"
        ],
        [
            "by case: (intP m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltz0_abs m : (m < 0)%R -> `|m| = - m :> int.",
            "VernacStartTheoremProof",
            "364829e45eca33f717ab4db865ad91405b16b793"
        ],
        [
            "by case: (intP m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma absz_sign s : `|(-1) ^+ s| = 1.",
            "VernacStartTheoremProof",
            "6aef1a337f61c4e41711e627b2e6259eaad070b3"
        ],
        [
            "by rewrite abszX exp1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abszMsign s m : `|((-1) ^+ s * m)%R| = `|m|.",
            "VernacStartTheoremProof",
            "ca6a3867729313185ebc7c61af661c941693ea25"
        ],
        [
            "by rewrite abszM absz_sign mul1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulz_sign_abs m : ((-1) ^+ (m < 0)%R * `|m|%:Z)%R = m.",
            "VernacStartTheoremProof",
            "8940db9469c55ee4d90a1b7ec8a91652f24af3c0"
        ],
        [
            "by rewrite abszE mulr_sign_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulz_Nsign_abs m : ((-1) ^+ (0 < m)%R * `|m|%:Z)%R = - m.",
            "VernacStartTheoremProof",
            "6d35d173761634720bde2d9fcbdf2902f9fd94a9"
        ],
        [
            "by rewrite abszE mulr_Nsign_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intEsign m : m = ((-1) ^+ (m < 0)%R * `|m|%:Z)%R.",
            "VernacStartTheoremProof",
            "e1d166ec1c9f78da399d5461c47bc5afb77a8ed3"
        ],
        [
            "exact: numEsign.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abszEsign m : `|m|%:Z = ((-1) ^+ (m < 0)%R * m)%R.",
            "VernacStartTheoremProof",
            "45db177405e925617ae29ebe5c664912b5191b18"
        ],
        [
            "exact: normrEsign.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intEsg m : m = (sgz m * `|m|%:Z)%R.",
            "VernacStartTheoremProof",
            "892950d32175f01f3544ad9092306ea6ba495820"
        ],
        [
            "by rewrite -sgrz -numEsg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abszEsg m : (`|m|%:Z = sgz m * m)%R.",
            "VernacStartTheoremProof",
            "1e8fa23cab4026407fd84b701c1dee05ad3f50d3"
        ],
        [
            "by rewrite -sgrz -normrEsg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Absz.",
            "VernacEndSegment",
            "4662e8055245c47a6aea5611c44e1ba176b32e1f"
        ],
        [
            "Module Export IntDist.",
            "VernacDefineModule",
            "38310f3077232c9dec81a1e4e3e3bda44d093513"
        ],
        [
            "Notation \"m - n\" := (@GRing.add int_ZmodType m%N (@GRing.opp int_ZmodType n%N)) : distn_scope.",
            "VernacNotation",
            "bdc575e1e8da9144ddf82b251ce6d469ab8c4eec"
        ],
        [
            "Arguments absz m%distn_scope.",
            "VernacArguments",
            "2eb28b5dca8b89981fd484e5298a76e8db272f51"
        ],
        [
            "Notation \"`| m |\" := (absz m) : nat_scope.",
            "VernacNotation",
            "355d7579b4149e9e2e753d0eca6765179a7860a8"
        ],
        [
            "Coercion Posz : nat >-> int.",
            "VernacCoercion",
            "96f41ae26d495f6710c02105e3517e9fd7f7807f"
        ],
        [
            "Section Distn.",
            "VernacBeginSection",
            "153ad50a31977c557652bee7cf5fb3b0126b288b"
        ],
        [
            "Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "22a30e2fa4fb58b685066c0106e0f666475aba7e"
        ],
        [
            "Implicit Type m : int.",
            "VernacReserve",
            "e7fa23b7fef5aa560c75fe46bf888510dd55cf4d"
        ],
        [
            "Implicit Types n d : nat.",
            "VernacReserve",
            "683c9da8bb8a95e9e599ce6bb9871f8363cd0fa6"
        ],
        [
            "Lemma distnC m1 m2 : `|m1 - m2| = `|m2 - m1|.",
            "VernacStartTheoremProof",
            "f1d380ec801a7522ad5549e59036d29e6c753a0a"
        ],
        [
            "by rewrite -opprB abszN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distnDl d n1 n2 : `|d + n1 - (d + n2)| = `|n1 - n2|.",
            "VernacStartTheoremProof",
            "f53788200f4d539ad3bd50d9a88ebac6e9567796"
        ],
        [
            "by rewrite !PoszD opprD addrCA -addrA addKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distnDr d n1 n2 : `|n1 + d - (n2 + d)| = `|n1 - n2|.",
            "VernacStartTheoremProof",
            "4029ae6becdbfd61043b16d321bb5289b2a13bdf"
        ],
        [
            "by rewrite -!(addnC d) distnDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distnEr n1 n2 : n1 <= n2 -> `|n1 - n2| = n2 - n1.",
            "VernacStartTheoremProof",
            "46739f5572129e5e92f88de8a9c2af1dd5c30540"
        ],
        [
            "by move/subnK=> {1}<-; rewrite distnC PoszD addrK absz_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distnEl n1 n2 : n2 <= n1 -> `|n1 - n2| = n1 - n2.",
            "VernacStartTheoremProof",
            "294d5f010c142ee1e6a1a72468937475169474f4"
        ],
        [
            "by move/distnEr <-; rewrite distnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distn0 n : `|n - 0| = n.",
            "VernacStartTheoremProof",
            "506a1bd0c67a836807fbcc622c978083f82218b6"
        ],
        [
            "by rewrite subr0 absz_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dist0n n : `|0 - n| = n.",
            "VernacStartTheoremProof",
            "1d2b09f4744ea02e78a165136fef28dcffca9b47"
        ],
        [
            "by rewrite distnC distn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distnn m : `|m - m| = 0.",
            "VernacStartTheoremProof",
            "f32c6f3f07d850bb24fe627134e34c59e4406c3d"
        ],
        [
            "by rewrite subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distn_eq0 n1 n2 : (`|n1 - n2| == 0) = (n1 == n2).",
            "VernacStartTheoremProof",
            "392dab35223ff430d74ff15f663da731fa67be53"
        ],
        [
            "by rewrite absz_eq0 subr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distnS n : `|n - n.+1| = 1.",
            "VernacStartTheoremProof",
            "72c4864312030040d708084af1ff6789e31a41b1"
        ],
        [
            "exact: distnDr n 0 1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distSn n : `|n.+1 - n| = 1.",
            "VernacStartTheoremProof",
            "963f33820afaa039b91a742cf94a8e585eccc254"
        ],
        [
            "exact: distnDr n 1 0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distn_eq1 n1 n2 : (`|n1 - n2| == 1) = (if n1 < n2 then n1.+1 == n2 else n1 == n2.+1).",
            "VernacStartTheoremProof",
            "176013bf4ea9897a69fa871ce79d0692854d7117"
        ],
        [
            "case: ltnP => [lt_n12 | le_n21].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite eq_sym -(eqn_add2r n1) distnEr ?subnK // ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -(eqn_add2r n2) distnEl ?subnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_add_dist m1 m2 m3 : `|m1 - m3| <= `|m1 - m2| + `|m2 - m3|.",
            "VernacStartTheoremProof",
            "e4531f434c7fc18b6bc4f977bcec0b8e4c8f349b"
        ],
        [
            "by rewrite -lez_nat PoszD !abszE ler_dist_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leqif_add_distz m1 m2 m3 : `|m1 - m3| <= `|m1 - m2| + `|m2 - m3| ?= iff (m1 <= m2 <= m3)%R || (m3 <= m2 <= m1)%R.",
            "VernacStartTheoremProof",
            "8d2231ec66c19ab3467568f8eaf13992b197b306"
        ],
        [
            "apply/leqifP; rewrite -ltz_nat -eqz_nat PoszD !abszE; apply/lerifP.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "wlog le_m31 : m1 m3 / (m3 <= m1)%R.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "move=> IH; case/orP: (ler_total m1 m3) => /IH //.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite (addrC `|_|)%R orbC !(distrC m1) !(distrC m3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ger0_norm ?subr_ge0 // orb_idl => [|/andP[le_m12 le_m23]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have /eqP->: m2 == m3; rewrite ?lerr // eqr_le le_m23 (ler_trans le_m31).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}(subrK m2 m1) -addrA -subr_ge0 andbC -subr_ge0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: lerif_add; apply/real_lerif_norm/num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leqif_add_dist n1 n2 n3 : `|n1 - n3| <= `|n1 - n2| + `|n2 - n3| ?= iff (n1 <= n2 <= n3) || (n3 <= n2 <= n1).",
            "VernacStartTheoremProof",
            "bf094fa1003a9adad6d4a48d7182be7213fcd37b"
        ],
        [
            "exact: leqif_add_distz.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrn_dist n1 n2 : `|n1 - n2| ^ 2 + 2 * (n1 * n2) = n1 ^ 2 + n2 ^ 2.",
            "VernacStartTheoremProof",
            "f8510afc7c05efa375b24a4e42e99542a9b39d18"
        ],
        [
            "wlog le_n21: n1 n2 / n2 <= n1.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "move=> IH; case/orP: (leq_total n2 n1) => /IH //.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite (addnC (n2 ^ 2)) (mulnC n2) distnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite distnEl ?sqrn_sub ?subnK ?nat_Cauchy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Distn.",
            "VernacEndSegment",
            "8d7cd1d34a7c8a9fff8781213dca84bbbb6703f0"
        ],
        [
            "End IntDist.",
            "VernacEndSegment",
            "6868dc0c2b79d2e46efb68d2cf5a5c5fa66ad2a4"
        ],
        [
            "Section NormInt.",
            "VernacBeginSection",
            "836ea0c0f4637bbec3094944537765d19d93bc10"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Lemma intr_norm m : `|m|%:~R = `|m%:~R| :> R.",
            "VernacStartTheoremProof",
            "65baeeaa4339a63483efd4d952764b3b95a29c1f"
        ],
        [
            "by rewrite {2}[m]intEsign rmorphMsign normrMsign abszE normr_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normrMz m (x : R) : `|x *~ m| = `|x| *~ `|m|.",
            "VernacStartTheoremProof",
            "fc882fe14c0419ee5661b456dad39a7c1141692d"
        ],
        [
            "by rewrite -mulrzl normrM -intr_norm mulrzl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expN1r (i : int) : (-1 : R) ^ i = (-1) ^+ `|i|.",
            "VernacStartTheoremProof",
            "b39cb9d7a2fd5ec38286bf04873c89fcd9c2996c"
        ],
        [
            "case: i => n; first by rewrite exprnP absz_nat.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite NegzE abszN absz_nat -invr_expz expfV invrN1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NormInt.",
            "VernacEndSegment",
            "3fca175fbeff2c376d3a95c5fd9d195a657aa1e4"
        ],
        [
            "Section PolyZintRing.",
            "VernacBeginSection",
            "ae8ea6a159da9f9a1e2b3d0c275389d513c81891"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types x y z: R.",
            "VernacReserve",
            "5b53950eef16c05b6d76b95a2bc590b36e66d08e"
        ],
        [
            "Implicit Types m n : int.",
            "VernacReserve",
            "c36503924c3c26fabc613e0d52f92e9fe3017e30"
        ],
        [
            "Implicit Types i j k : nat.",
            "VernacReserve",
            "7d45b180a3636dc9a707d8e35135768b3a914968"
        ],
        [
            "Implicit Types p q r : {poly R}.",
            "VernacReserve",
            "d6200f44bfb7e7f5b344df8b096cee116bdcc1f1"
        ],
        [
            "Lemma coefMrz : forall p n i, (p *~ n)`_i = (p`_i *~ n).",
            "VernacStartTheoremProof",
            "a4670d76a87be04762cbde3404daaff5a986d7a0"
        ],
        [
            "by move=> p [] n i; rewrite ?NegzE (coefMNn, coefMn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyC_mulrz : forall n, {morph (@polyC R) : c / c *~ n}.",
            "VernacStartTheoremProof",
            "3f0ca1a84e0410c4669674af7e5b56b9d4c8d6f5"
        ],
        [
            "move=> [] n c; rewrite ?NegzE -?pmulrn ?polyC_muln //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite polyC_opp mulrNz polyC_muln nmulrn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerMz : forall n (p : {poly R}) x, (p *~ n).[x] = p.[x] *~ n.",
            "VernacStartTheoremProof",
            "c7997930ab608dd29b43c98e43cdb8405e466ceb"
        ],
        [
            "by case=> *; rewrite ?NegzE ?mulNzr ?(hornerN, hornerMn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_int : forall n x, (n%:~R : {poly R}).[x] = n%:~R.",
            "VernacStartTheoremProof",
            "11be6422e38d7460311514f31fb7cf24c99db2e5"
        ],
        [
            "by move=> n x; rewrite hornerMz hornerC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivMz : forall n p, (p *~ n)^`() = p^`() *~ n.",
            "VernacStartTheoremProof",
            "e80563ede44cd7dcc8b4137509eeab8ba3b4ac73"
        ],
        [
            "by move=> [] n p; rewrite ?NegzE -?pmulrn (derivMn, derivMNn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyZintRing.",
            "VernacEndSegment",
            "c216c1101666daf726de53950094fa990f660037"
        ],
        [
            "Section PolyZintOIdom.",
            "VernacBeginSection",
            "a38987aee8f3cb8d187d1c9f4d51bfed0f15ebfc"
        ],
        [
            "Variable R : realDomainType.",
            "VernacAssumption",
            "0693f35b06db2e27c7cf58627c33e70282f912ba"
        ],
        [
            "Lemma mulpz (p : {poly R}) (n : int) : p *~ n = n%:~R *: p.",
            "VernacStartTheoremProof",
            "889e188a616b7b7e0077a77b8b580aa83e14e6c9"
        ],
        [
            "by rewrite -[p *~ n]mulrzl -mul_polyC polyC_mulrz polyC1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyZintOIdom.",
            "VernacEndSegment",
            "d65608f47c8336b0afa4a78d819ada65b51ff61f"
        ],
        [
            "Section ZnatPred.",
            "VernacBeginSection",
            "2e4092a27abff9d91374c4c26391a69ad01deb9b"
        ],
        [
            "Definition Znat := [qualify a n : int | 0 <= n].",
            "VernacDefinition",
            "f6d3669db7e21226e7a8a858e875648bff9719a2"
        ],
        [
            "Fact Znat_key : pred_key Znat.",
            "VernacStartTheoremProof",
            "53860dd3d3cf6b627cb2e9142c21f1c71772644c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Znat_keyd := KeyedQualifier Znat_key.",
            "VernacDefinition",
            "13fb58fbfc250e2dc1e6381e6dec7ddbcf8f15bd"
        ],
        [
            "Lemma Znat_def n : (n \\is a Znat) = (0 <= n).",
            "VernacStartTheoremProof",
            "eb7e5d3d748c0ffa1420c4c0e89cc4e20c2b83b7"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znat_semiring_closed : semiring_closed Znat.",
            "VernacStartTheoremProof",
            "252e471bd885c3d300c6b8cfd7bc77fd96e8054d"
        ],
        [
            "by do 2?split => //; [apply: addr_ge0 | apply: mulr_ge0].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Znat_addrPred := AddrPred Znat_semiring_closed.",
            "VernacDefinition",
            "89d0a01a57cf76b7d731ec0a4507bc68baeca385"
        ],
        [
            "Canonical Znat_mulrPred := MulrPred Znat_semiring_closed.",
            "VernacDefinition",
            "03c0a6621d942fe4049e51e3900f46e09434f6cb"
        ],
        [
            "Canonical Znat_semiringPred := SemiringPred Znat_semiring_closed.",
            "VernacDefinition",
            "848d6950d2d63b1689c3bbb54e336b96491ea5c6"
        ],
        [
            "Lemma ZnatP (m : int) : reflect (exists n : nat, m = n) (m \\is a Znat).",
            "VernacStartTheoremProof",
            "c714cd52956d234e6e21989c0d82f34fd0dc362f"
        ],
        [
            "by apply: (iffP idP) => [|[n -> //]]; case: m => // n; exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ZnatPred.",
            "VernacEndSegment",
            "1ba4e65c892cea15c665fdbf600214346a3952f7"
        ],
        [
            "Section rpred.",
            "VernacBeginSection",
            "a94556c8713f640c1f242bedc2d487508e3aebf3"
        ],
        [
            "Lemma rpredMz M S (addS : @zmodPred M S) (kS : keyed_pred addS) m : {in kS, forall u, u *~ m \\in kS}.",
            "VernacStartTheoremProof",
            "4b5d6e36f3c2681f14503222ebbcf15a8d1f8760"
        ],
        [
            "by case: m => n u Su; rewrite ?rpredN ?rpredMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rpred_int R S (ringS : @subringPred R S) (kS : keyed_pred ringS) m : m%:~R \\in kS.",
            "VernacStartTheoremProof",
            "0f4d143c481f06e0d2e98f67d21d9c5c4d066e8c"
        ],
        [
            "by rewrite rpredMz ?rpred1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rpredZint (R : ringType) (M : lmodType R) S (addS : @zmodPred M S) (kS : keyed_pred addS) m : {in kS, forall u, m%:~R *: u \\in kS}.",
            "VernacStartTheoremProof",
            "26c5c45411f0c13185a45e4f55a3ce397555255b"
        ],
        [
            "by move=> u Su; rewrite /= scaler_int rpredMz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rpredXz R S (divS : @divrPred R S) (kS : keyed_pred divS) m : {in kS, forall x, x ^ m \\in kS}.",
            "VernacStartTheoremProof",
            "6aca5ec1209600abc64d5925ba91c51b5457968d"
        ],
        [
            "by case: m => n x Sx; rewrite ?rpredV rpredX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rpredXsign R S (divS : @divrPred R S) (kS : keyed_pred divS) n x : (x ^ ((-1) ^+ n) \\in kS) = (x \\in kS).",
            "VernacStartTheoremProof",
            "828c08a93d1777b529e73eafc9a0f795cacd2089"
        ],
        [
            "by rewrite -signr_odd; case: (odd n); rewrite ?rpredV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End rpred.",
            "VernacEndSegment",
            "8e65e2c8a1406c46aac83d6aa8f520d71658dd46"
        ]
    ],
    "proofs": [
        {
            "name": "natsum_of_intK",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqz_nat",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PoszD",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NegzE",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_rect",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by move=> P0 hPp hPn []; elim=> [|n ihn]//; do ?[apply: hPn | apply: hPp].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intP",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "by move: x=> [] []; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addzC",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "by move=> [] m [] n //=; rewrite addnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add0z",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "by move=> [] [|].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppzK",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "by do 2?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppz_add",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "move=> [[|n]|n] [[|m]|m] /=; rewrite ?NegzE ?oppzK ?addnS ?addn0 ?subn0 //; rewrite ?ltnS[m <= n]leqNgt [n <= m]leqNgt; case: ltngtP=> hmn /=; by rewrite ?hmn ?subnn // ?oppzK ?subSS ?subnS ?prednK // ?subn_gt0.",
                        "VernacExtend",
                        "5f0d39b8e08d7cae3fc43b197f4021045a6e6e81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add1Pz",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "by case: (intP n)=> // n' /= _; rewrite ?(subn1, addn0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subSz1",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "by apply: (inv_inj oppzK); rewrite addzC !oppz_add oppzK [_ - n]addzC add1Pz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addSnz",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "move: m n=> [|m] [] [|n] //=; rewrite ?add1n ?subn1 // !(ltnS, subSS).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite [n <= m]leqNgt; case: ltngtP=> hmn /=; rewrite ?hmn ?subnn //.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "by rewrite subnS add1n prednK ?subn_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnS leqn0 subn_eq0 leqNgt hmn /= subnS subn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addPz",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "by apply: (inv_inj oppzK); rewrite !oppz_add oppzK [_ + 1]addzC addSz addzC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addzA",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "elim=> [|m ihm|m ihm] n p; first by rewrite !add0z.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -add1n PoszD !addSz ihm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -add1n addnC PoszD oppz_add !addPz ihm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addNz",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "by do 3?elim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predn_int",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "by case: n=> // n _ /=; rewrite subn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subzn",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "elim: n=> //= [|n ihn] hmn; first by rewrite subr0 subn0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite subnS -addn1 !PoszD opprD addrA ihn 1?ltnW //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite intZmod.predn_int // subn_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subzSS",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "by elim: n m=> [|n ihn] m //; rewrite !subzn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul0z",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "by case=> [n|[|n]] //=; rewrite muln0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulzC",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "by move=> [] m [] n //=; rewrite mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulz0",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "by move=> x; rewrite mulzC mul0z.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulzN",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "by case: (intP m)=> {m} [|m|m]; rewrite ?mul0z //; case: (intP n)=> {n} [|n|n]; rewrite ?mulz0 //= mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulNz",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "by rewrite mulzC mulzN mulzC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulzA",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "by move=> [] m [] n [] p; rewrite ?NegzE ?(mulnA,mulNz,mulzN,opprK) //= ?mulnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul1z",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "by case=> [[|n]|n] //=; rewrite ?mul1n// plusE addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulzS",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "by case: (intP x)=> [|m'|m'] //=; [rewrite mulnS|rewrite mulSn -opprD].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulz_addl",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "move=> x y z; elim: z=> [|n|n]; first by rewrite !(mul0z,mulzC).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulzS=> ->; rewrite !addrA [X in X + _]addrAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !mulzN !mulzS -!opprD=> /oppr_inj->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !addrA [X in X + _]addrAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonzero1z",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PoszM",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intS",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "by rewrite -PoszD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulVz",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "by move=> n /pred2P[] ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulzn_eq1",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "by case: m => m /=; [rewrite -PoszM [_==_]muln_eq1 | case: n].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitzPl",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "rewrite qualifE => /eqP.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by case: m => m; rewrite ?NegzE ?mulrN -?mulNr mulzn_eq1 => /andP[_ /eqP->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invz_out",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "exact.",
                        "VernacExtend",
                        "6f8ef2f79d9f700fa94a7c87b5cc8bcbd915dec6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "idomain_axiomz",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "by case: m n => m [] n //= /eqP; rewrite ?(NegzE, mulrN, mulNr) ?oppr_eq0 -PoszM [_ == _]muln_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lez_norm_add",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "move: x y=> [] m [] n; rewrite /= ?addnS //=; rewrite /GRing.add /GRing.Zmodule.add /=; case: ltnP=> //=; rewrite ?addSn ?ltnS ?leq_subLR ?(addnS, addSn) ?(leq_trans _ (leqnSn _)) //; by rewrite 1?addnCA ?leq_addr ?addnA ?leq_addl.",
                        "VernacExtend",
                        "4b7a19882fa4ece2e4585abd963cc3c6673dbe88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltz_add",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "by move: x y => [] x [] y //= hx hy; rewrite ltn_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq0_normz",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lez_total",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "by move: x y => [] x [] y //=; apply: leq_total.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abszN",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "by case: n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normzM",
            "line_nb": 250,
            "steps": [
                {
                    "command": [
                        "by move=> [] x [] y; rewrite // abszN // mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subz_ge0",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "case: (intP m); case: (intP n)=> // {m n} m n /=; rewrite ?ltnS -?opprD ?opprB ?subzSS; case: leqP=> // hmn; by [ rewrite subzn // | rewrite -opprB subzn ?(ltnW hmn) //; move: hmn; rewrite -subn_gt0; case: (_ - _)%N].",
                        "VernacExtend",
                        "56ba7d491100b30dce64398a81a6f4aa381b450c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lez_def",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "by rewrite -subz_ge0; move: (_ - _) => [] n //=; rewrite eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltz_def",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "by move: x y=> [] x [] y //=; rewrite (ltn_neqAle, leq_eqVlt) // eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lez_nat",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltz_nat",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "by rewrite ltnNge ltrNge lez_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leNz_nat",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "by case: m.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltNz_nat",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "by move: m n=> [|?] [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lezN_nat",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "by move: m n=> [|?] [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltzN_nat",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "by move: m n=> [|?] [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le0z_nat",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lez0_nat",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "by elim: n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtz0_ge1",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "by case: (intP x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lez_add1r",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "by rewrite -subr_gt0 gtz0_ge1 lter_sub_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lez_addr1",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "by rewrite addrC lez_add1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltz_add1r",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "by rewrite -lez_add1r ler_add2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltz_addr1",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "by rewrite -lez_addr1 ler_add2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrn",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrn",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "by case: n=> [] //; rewrite ?oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzA_C",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "elim: m=> [|m _|m _]; elim: n=> [|n _|n _]; rewrite /intmul //=; rewrite ?(muln0, mulr0n, mul0rn, oppr0, mulNrn, opprK) //; do ?by rewrite mulnC mulrnA.",
                        "VernacExtend",
                        "b0762d9432d9888d1cb851fa420e7e81689b58b2"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulrnA mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulrnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzAC",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "by rewrite !mulrzA_C mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr1z",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzDr",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "by elim: m=> [|m _|m _] x y; rewrite ?addr0 /intmul //= ?mulrnDl // opprD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzBl_nat",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "case: (leqP m n)=> hmn; rewrite /intmul //=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite addrC -{1}[m:int]opprK -opprD subzn //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}[n](@subnKC m)// mulrnDr opprD addrA subrr sub0r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case hdmn: (_ - _)%N=> [|dmn] /=; first by rewrite mulr0n oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have hnm := ltnW hmn.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}[m](@subnKC n)// mulrnDr addrAC subrr add0r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite subzn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzDl",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "elim=> [|m _|m _]; elim=> [|n _|n _]; rewrite /intmul //=; rewrite -?(opprD) ?(add0r, addr0, mulrnDr, subn0) //.",
                        "VernacExtend",
                        "a17f559ec6e1c999a9ad082409853e9030982e9f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "by rewrite -/(intmul _ _) mulrzBl_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "by rewrite -/(intmul _ _) addrC mulrzBl_nat addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "by rewrite -addnS -addSn mulrnDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalezrE",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzA",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "by rewrite -!scalezrE scalerA mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr0z",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul0rz",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "by rewrite -scalezrE scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrNz",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "by rewrite -scalezrE scaleNr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrN1z",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "by rewrite -scalezrE scaleN1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulNrz",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "by rewrite -scalezrE scalerN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzBr",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "by rewrite -scalezrE scalerBl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzBl",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "by rewrite -scalezrE scalerBr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_nat",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "by rewrite -scalezrE scaler_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_sumr",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "by rewrite -/M^z; apply: scaler_suml.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_suml",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "by rewrite -/M^z; apply: scaler_sumr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ffunMzE",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "by case: z => n; rewrite ?ffunE ffunMnE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intz",
            "line_nb": 411,
            "steps": [
                {
                    "command": [
                        "elim: n=> //= n ihn; rewrite /intmul /=.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "by rewrite -addn1 mulrnDr /= PoszD -ihn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite nmulrn intS opprD mulrzDl ihn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natz",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "by rewrite pmulrn intz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzAl",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "by elim: n=> //= *; rewrite ?mul0r ?mulr0z // /intmul /= -mulrnAl -?mulNr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzAr",
            "line_nb": 427,
            "steps": [
                {
                    "command": [
                        "by elim: n=> //= *; rewrite ?mulr0 ?mulr0z // /intmul /= -mulrnAr -?mulrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzl",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrzAl mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzr",
            "line_nb": 433,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrzAr mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulNrNz",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "by rewrite mulNrz mulrNz opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrbz",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intrD",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "exact: mulrzDl.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intrM",
            "line_nb": 445,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrzA -mulrzr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intmul1_is_rmorphism",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "by do ?split; move=> // x y /=; rewrite ?intrD ?mulrNz ?intrM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr2z",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "exact: mulr2n.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrzz",
            "line_nb": 456,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulrzr intz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulz2",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulrzz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul2z",
            "line_nb": 462,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrC -mulrzz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scaler_int",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "elim: n=> [|n ihn|n ihn]; first by rewrite scale0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite intS !mulrzDl scalerDl ihn scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite intS opprD !mulrzDl scalerDl ihn scaleN1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalerMzl",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulrzl -scaler_int scalerA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalerMzr",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "by rewrite -!scaler_int !scalerA mulrzr mulrzl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_int",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "by rewrite -scalezrE scaler_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "raddfMz",
            "line_nb": 491,
            "steps": [
                {
                    "command": [
                        "case: n=> n x /=; first exact: raddfMn.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite NegzE !mulrNz; apply: raddfMNn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmorphMz",
            "line_nb": 498,
            "steps": [
                {
                    "command": [
                        "exact: raddfMz.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmorph_int",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "by move=> n; rewrite rmorphMz rmorph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linearMn",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "exact: raddfMz.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "raddf_int_scalable",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "by move=> z u; rewrite -[z]intz !scaler_int raddfMz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "commrMz",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "by rewrite /GRing.comm=> com_xy; rewrite mulrzAr mulrzAl com_xy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "commr_int",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "by apply: commrMz; apply: commr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumMz",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "by apply: big_morph=> // x y; rewrite !pmulrn -rmorphD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodMz",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "by apply: big_morph=> // x y; rewrite !pmulrn PoszM -rmorphM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Frobenius_autMz",
            "line_nb": 539,
            "steps": [
                {
                    "command": [
                        "case: n=> n /=; first exact: Frobenius_autMn.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !NegzE !mulrNz Frobenius_autN Frobenius_autMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Frobenius_aut_int",
            "line_nb": 543,
            "steps": [
                {
                    "command": [
                        "by rewrite Frobenius_autMz Frobenius_aut1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmorphzP",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "move=> n; wlog : n / 0 <= n; case: n=> [] n //; do ?exact.",
                        "VernacExtend",
                        "c2820ca67d58309c18c3527348d97146815ce672"
                    ]
                },
                {
                    "command": [
                        "by rewrite NegzE !rmorphN=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> _; elim: n=> [|n ihn]; first by rewrite rmorph0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite intS !rmorphD !rmorph1 ihn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pmulz2r",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "by move=> x y; case: n hn=> [[]|] // n _; rewrite ler_pmuln2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pmulz2r",
            "line_nb": 561,
            "steps": [
                {
                    "command": [
                        "exact: lerW_mono (ler_pmulz2r _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nmulz2r",
            "line_nb": 564,
            "steps": [
                {
                    "command": [
                        "move=> x y /=; rewrite -![_ *~ n]mulNrNz.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite ler_pmulz2r (oppr_cp0, ler_opp2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nmulz2r",
            "line_nb": 568,
            "steps": [
                {
                    "command": [
                        "exact: lerW_nmono (ler_nmulz2r _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wpmulz2r",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "by move=> x y xy; case: n hn=> [] // n _; rewrite ler_wmuln2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wnmulz2r",
            "line_nb": 574,
            "steps": [
                {
                    "command": [
                        "by move=> x y xy /=; rewrite -ler_opp2 -!mulrNz ler_wpmulz2r // oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_ge0",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ler_wpmulz2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_le0",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ler_wnmulz2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_ge0_le0",
            "line_nb": 583,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ler_wnmulz2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_le0_ge0",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ler_wpmulz2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrz_lgt0",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ltr_pmulz2r // mul0rz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrz_lgt0",
            "line_nb": 592,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ltr_nmulz2r // mul0rz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrz_llt0",
            "line_nb": 595,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ltr_pmulz2r // mul0rz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrz_llt0",
            "line_nb": 598,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ltr_nmulz2r // mul0rz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrz_lge0",
            "line_nb": 601,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ler_pmulz2r // mul0rz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrz_lge0",
            "line_nb": 604,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ler_nmulz2r // mul0rz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrz_lle0",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ler_pmulz2r // mul0rz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrz_lle0",
            "line_nb": 610,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mul0rz _ n) ler_nmulz2r // mul0rz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wpmulz2l",
            "line_nb": 613,
            "steps": [
                {
                    "command": [
                        "by move=> m n /= hmn; rewrite -subr_ge0 -mulrzBr mulrz_ge0 // subr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wnmulz2l",
            "line_nb": 616,
            "steps": [
                {
                    "command": [
                        "by move=> m n /= hmn; rewrite -subr_ge0 -mulrzBr mulrz_le0 // subr_le0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pmulz2l",
            "line_nb": 619,
            "steps": [
                {
                    "command": [
                        "move=> m n /=; rewrite real_mono ?num_real // => {m n}.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by move=> m n /= hmn; rewrite -subr_gt0 -mulrzBr pmulrz_lgt0 // subr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pmulz2l",
            "line_nb": 627,
            "steps": [
                {
                    "command": [
                        "exact: lerW_mono (ler_pmulz2l _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nmulz2l",
            "line_nb": 630,
            "steps": [
                {
                    "command": [
                        "exact: lerW_nmono (ler_nmulz2l _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrz_rgt0",
            "line_nb": 633,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mulr0z x) ltr_pmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrz_rgt0",
            "line_nb": 636,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mulr0z x) ltr_nmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrz_rlt0",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mulr0z x) ltr_pmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrz_rlt0",
            "line_nb": 642,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mulr0z x) ltr_nmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrz_rge0",
            "line_nb": 645,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mulr0z x) ler_pmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrz_rge0",
            "line_nb": 648,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mulr0z x) ler_nmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrz_rle0",
            "line_nb": 651,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mulr0z x) ler_pmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrz_rle0",
            "line_nb": 654,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mulr0z x) ler_nmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrIz",
            "line_nb": 657,
            "steps": [
                {
                    "command": [
                        "move=> y z; rewrite -![x *~ _]mulrzr => /(mulfI hx).",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by apply: incr_inj y z; apply: ler_pmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_int",
            "line_nb": 661,
            "steps": [
                {
                    "command": [
                        "by rewrite ler_pmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_int",
            "line_nb": 664,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_pmulz2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_int",
            "line_nb": 667,
            "steps": [
                {
                    "command": [
                        "by rewrite (inj_eq (mulrIz _)) ?oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler0z",
            "line_nb": 670,
            "steps": [
                {
                    "command": [
                        "by rewrite pmulrz_rge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0z",
            "line_nb": 673,
            "steps": [
                {
                    "command": [
                        "by rewrite pmulrz_rgt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerz0",
            "line_nb": 676,
            "steps": [
                {
                    "command": [
                        "by rewrite pmulrz_rle0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrz0",
            "line_nb": 679,
            "steps": [
                {
                    "command": [
                        "by rewrite pmulrz_rlt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler1z",
            "line_nb": 682,
            "steps": [
                {
                    "command": [
                        "by rewrite -[1]/(1%:~R) ler_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr1z",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "by rewrite -[1]/(1%:~R) ltr_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerz1",
            "line_nb": 688,
            "steps": [
                {
                    "command": [
                        "by rewrite -[1]/(1%:~R) ler_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrz1",
            "line_nb": 691,
            "steps": [
                {
                    "command": [
                        "by rewrite -[1]/(1%:~R) ltr_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intr_eq0",
            "line_nb": 694,
            "steps": [
                {
                    "command": [
                        "by rewrite -(mulr0z 1) (inj_eq (mulrIz _)) // oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_eq0",
            "line_nb": 697,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulrzl mulf_eq0 intr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrz_neq0",
            "line_nb": 700,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrz_eq0 negb_or.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realz",
            "line_nb": 703,
            "steps": [
                {
                    "command": [
                        "by rewrite -topredE /Num.real /= ler0z lerz0 ler_total.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprnP",
            "line_nb": 719,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprnN",
            "line_nb": 722,
            "steps": [
                {
                    "command": [
                        "by case: n=> //; rewrite oppr0 expr0 invr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expr0z",
            "line_nb": 725,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expr1z",
            "line_nb": 728,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprN1",
            "line_nb": 731,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_expz",
            "line_nb": 734,
            "steps": [
                {
                    "command": [
                        "by case: (intP n)=> // [|m]; rewrite ?opprK ?expr0z ?invr1 // invrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprz_inv",
            "line_nb": 737,
            "steps": [
                {
                    "command": [
                        "by case: (intP n)=> // m; rewrite -[_ ^ (- _)]exprVn ?opprK ?invrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp1rz",
            "line_nb": 740,
            "steps": [
                {
                    "command": [
                        "by case: (intP n)=> // m; rewrite -?exprz_inv ?invr1; apply: expr1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprSz",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "exact: exprS.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprSzr",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "exact: exprSr.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprzD_nat",
            "line_nb": 749,
            "steps": [
                {
                    "command": [
                        "exact: exprD.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprzD_Nnat",
            "line_nb": 752,
            "steps": [
                {
                    "command": [
                        "by rewrite -opprD -!exprz_inv exprzD_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprzD_ss",
            "line_nb": 755,
            "steps": [
                {
                    "command": [
                        "case: (intP m)=> {m} [|m|m]; case: (intP n)=> {n} [|n|n] //= _; by rewrite ?expr0z ?mul1r ?exprzD_nat ?exprzD_Nnat ?sub0r ?addr0 ?mulr1.",
                        "VernacExtend",
                        "05928a9db4d7951ab20c19816b8485c23bd4e06c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp0rz",
            "line_nb": 758,
            "steps": [
                {
                    "command": [
                        "by case: (intP n)=> // m; rewrite -?exprz_inv ?invr0 exprSz mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "commrXz",
            "line_nb": 761,
            "steps": [
                {
                    "command": [
                        "rewrite /GRing.comm; elim: n x y=> [|n ihn|n ihn] x y com_xy //=.",
                        "VernacExtend",
                        "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "by rewrite expr0z mul1r mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "by rewrite -exprnP commrX //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -exprz_inv -exprnP commrX //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (boolP (y \\is a GRing.unit))=> uy; last by rewrite invr_out.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite (can2_eq (mulrVK _) (mulrK _)) // -mulrA com_xy mulKr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprMz_comm",
            "line_nb": 771,
            "steps": [
                {
                    "command": [
                        "move=> ux uy com_xy; elim: n => [|n _|n _]; first by rewrite expr0z mulr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!exprnP exprMn_comm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -!exprnN -!exprVn com_xy -exprMn_comm ?invrM//.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact/commrV/commr_sym/commrV.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "commrXz_wmulls",
            "line_nb": 777,
            "steps": [
                {
                    "command": [
                        "move=> n0 com_xy; elim: n n0 => [|n _|n _] //; first by rewrite expr0z mulr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!exprnP exprMn_comm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitrXz",
            "line_nb": 781,
            "steps": [
                {
                    "command": [
                        "case: (intP n)=> {n} [|n|n]; rewrite ?expr0z ?unitr1 ?unitrX //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite -invr_expz unitrV unitrX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprzDr",
            "line_nb": 785,
            "steps": [
                {
                    "command": [
                        "move: n m; apply: wlog_ler=> n m hnm.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite addrC hnm commrXz //; apply: commr_sym; apply: commrXz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (intP m) hnm=> {m} [|m|m]; rewrite ?mul1r ?add0r //; case: (intP n)=> {n} [|n|n _]; rewrite ?mulr1 ?addr0 //; do ?by rewrite exprzD_ss.",
                        "VernacExtend",
                        "a86e19a36cd89520bbe3a8ac8a58451250b2a32b"
                    ]
                },
                {
                    "command": [
                        "rewrite -invr_expz subzSS !exprSzr invrM ?unitrX // -mulrA mulVKr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (leqP n m)=> [|/ltnW] hmn; rewrite -{2}(subnK hmn) exprzD_nat -subzn //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrK ?unitrX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite invrM ?unitrXz // mulVKr ?unitrXz // -opprB -invr_expz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprz_exp",
            "line_nb": 794,
            "steps": [
                {
                    "command": [
                        "wlog: n / 0 <= n.",
                        "VernacExtend",
                        "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
                    ]
                },
                {
                    "command": [
                        "by case: n=> [n -> //|n]; rewrite ?NegzE mulrN -?invr_expz=> -> /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: n x m=> [|n ihn|n ihn] x m // _; first by rewrite mulr0 !expr0z.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite exprSz ihn // intS mulrDr mulr1 exprzD_ss //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (intP m)=> // m'; rewrite ?oppr_le0 //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprzAC",
            "line_nb": 801,
            "steps": [
                {
                    "command": [
                        "by rewrite !exprz_exp mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprz_out",
            "line_nb": 804,
            "steps": [
                {
                    "command": [
                        "by case: (intP n) hn=> //= m; rewrite -exprnN -exprVn invr_out.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprz_pmulzl",
            "line_nb": 813,
            "steps": [
                {
                    "command": [
                        "by elim: n=> [|n ihn|n _] // _; rewrite !exprSz ihn // mulrzAr mulrzAl -mulrzA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprz_pintl",
            "line_nb": 816,
            "steps": [
                {
                    "command": [
                        "by rewrite exprz_pmulzl // exp1rz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprzMzl",
            "line_nb": 819,
            "steps": [
                {
                    "command": [
                        "rewrite -[x *~ _]mulrzl exprMz_comm //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: commr_sym; apply: commr_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expNrz",
            "line_nb": 823,
            "steps": [
                {
                    "command": [
                        "case: n=> [] n; rewrite ?NegzE; first by apply: exprNn.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!exprz_inv !invrN invr1; apply: exprNn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitr_n0expz",
            "line_nb": 827,
            "steps": [
                {
                    "command": [
                        "by case: n => *; rewrite ?NegzE -?exprz_inv ?unitrX_pos ?unitrV ?lt0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intrV",
            "line_nb": 830,
            "steps": [
                {
                    "command": [
                        "by case: (intP n)=> // [|[]|[]] //; rewrite ?rmorphN ?invrN (invr0, invr1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmorphXz",
            "line_nb": 833,
            "steps": [
                {
                    "command": [
                        "by case: n => n x Ux; rewrite ?rmorphV ?rpredX ?rmorphX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expfz_eq0",
            "line_nb": 842,
            "steps": [
                {
                    "command": [
                        "by case: n=> n; rewrite ?NegzE -?exprz_inv ?expf_eq0 ?lt0n ?invr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expfz_neq0",
            "line_nb": 845,
            "steps": [
                {
                    "command": [
                        "by move=> x_nz; rewrite expfz_eq0; apply/nandP; right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprzMl",
            "line_nb": 848,
            "steps": [
                {
                    "command": [
                        "by rewrite exprMz_comm //; apply: mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expfV",
            "line_nb": 851,
            "steps": [
                {
                    "command": [
                        "by rewrite invr_expz exprz_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expfzDr",
            "line_nb": 860,
            "steps": [
                {
                    "command": [
                        "by move=> hx; rewrite exprzDr ?unitfE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expfz_n0addr",
            "line_nb": 863,
            "steps": [
                {
                    "command": [
                        "have [-> hmn|nx0 _] := eqVneq x 0; last exact: expfzDr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !exp0rz (negPf hmn).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (altP (m =P 0)) hmn=> [->|]; rewrite (mul0r, mul1r) //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite add0r=> /negPf->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expfzMl",
            "line_nb": 869,
            "steps": [
                {
                    "command": [
                        "have [->|/negPf n0] := eqVneq n 0; first by rewrite !expr0z mulr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (boolP ((x * y) == 0)); rewrite ?mulf_eq0.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case/orP=> /eqP->; rewrite ?(mul0r, mulr0, exp0rz, n0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/norP=> x0 y0; rewrite exprzMl ?unitfE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmorphXz",
            "line_nb": 875,
            "steps": [
                {
                    "command": [
                        "by case: n => n x; rewrite ?fmorphV rmorphX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprz_ge0",
            "line_nb": 884,
            "steps": [
                {
                    "command": [
                        "by case: n=> n; rewrite ?NegzE -?invr_expz ?invr_ge0 ?exprn_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprz_gt0",
            "line_nb": 887,
            "steps": [
                {
                    "command": [
                        "by case: n=> n; rewrite ?NegzE -?invr_expz ?invr_gt0 ?exprn_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wpiexpz2l",
            "line_nb": 891,
            "steps": [
                {
                    "command": [
                        "move=> [] m [] n; rewrite -!topredE /= ?oppr_cp0 ?ltz_nat // => _ _.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite lez_nat -?exprnP=> /ler_wiexpn2l; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wniexpz2l",
            "line_nb": 895,
            "steps": [
                {
                    "command": [
                        "move=> [] m [] n; rewrite ?NegzE -!topredE /= ?oppr_cp0 ?ltz_nat // => _ _.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite ler_opp2 lez_nat -?invr_expz=> hmn; move: (x0).",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "rewrite le0r=> /orP [/eqP->|lx0]; first by rewrite !exp0rz invr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite lef_pinv -?topredE /= ?exprz_gt0 // ler_wiexpn2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wpeexpz2l",
            "line_nb": 901,
            "steps": [
                {
                    "command": [
                        "move=> [] m [] n; rewrite -!topredE /= ?oppr_cp0 ?ltz_nat // => _ _.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite lez_nat -?exprnP=> /ler_weexpn2l; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wneexpz2l",
            "line_nb": 905,
            "steps": [
                {
                    "command": [
                        "move=> m n hm hn /= hmn.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -lef_pinv -?topredE /= ?exprz_gt0 ?(ltr_le_trans ltr01) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !invr_expz ler_wpeexpz2l ?ler_opp2 -?topredE //= oppr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pexprz_eq1",
            "line_nb": 918,
            "steps": [
                {
                    "command": [
                        "case: n=> n; rewrite ?NegzE -?exprz_inv ?oppr_eq0 pexprn_eq1 // ?invr_eq1 //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite invr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ieexprIz",
            "line_nb": 922,
            "steps": [
                {
                    "command": [
                        "apply: wlog_ltr=> // m n hmn; first by move=> hmn'; rewrite hmn.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=> /(f_equal ( *%R^~ (x ^ (- n)))).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -!expfzDr ?gtr_eqF // subrr expr0z=> /eqP.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite pexprz_eq1 ?(ltrW x0) // (negPf nx1) subr_eq0 orbF=> /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_piexpz2l",
            "line_nb": 933,
            "steps": [
                {
                    "command": [
                        "exact: (lerW_nmono_in (ler_piexpz2l _ _)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_niexpz2l",
            "line_nb": 941,
            "steps": [
                {
                    "command": [
                        "exact: (lerW_nmono_in (ler_niexpz2l _ _)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_eexpz2l",
            "line_nb": 949,
            "steps": [
                {
                    "command": [
                        "exact: (lerW_mono (ler_eexpz2l _)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wpexpz2r",
            "line_nb": 952,
            "steps": [
                {
                    "command": [
                        "by case: n hn=> // n _; apply: ler_expn2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wnexpz2r",
            "line_nb": 955,
            "steps": [
                {
                    "command": [
                        "move=> x y /= hx hy hxy; rewrite -lef_pinv ?[_ \\in _]exprz_gt0 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite !invr_expz ler_wpexpz2r ?[_ \\in _]ltrW // oppr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pexpIrz",
            "line_nb": 959,
            "steps": [
                {
                    "command": [
                        "move=> x y; rewrite ![_ \\in _]le0r=> /orP [/eqP-> _ /eqP|hx].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite exp0rz ?(negPf n0) eq_sym expfz_eq0=> /andP [_ /eqP->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/orP=> [/eqP-> /eqP|hy].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite exp0rz ?(negPf n0) expfz_eq0=> /andP [_ /eqP].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> /(f_equal ( *%R^~ (y ^ (- n)))) /eqP.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -expfzDr ?(gtr_eqF hy) // subrr expr0z -exprz_inv -expfzMl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite pexprz_eq1 ?(negPf n0) /= ?mulr_ge0 ?invr_ge0 ?ltrW //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (can2_eq (mulrVK _) (mulrK _)) ?unitfE ?(gtr_eqF hy) // mul1r=> /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nexpIrz",
            "line_nb": 969,
            "steps": [
                {
                    "command": [
                        "move=> x y; rewrite ![_ \\in _]ler_eqVlt => /orP [/eqP -> _ /eqP|hx].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite exp0rz ?(negPf n0) eq_sym expfz_eq0=> /andP [_ /eqP->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/orP=> [/eqP -> /eqP|hy].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite exp0rz ?(negPf n0) expfz_eq0=> /andP [_ /eqP].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> /(f_equal ( *%R^~ (y ^ (- n)))) /eqP.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -expfzDr ?(ltr_eqF hy) // subrr expr0z -exprz_inv -expfzMl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite pexprz_eq1 ?(negPf n0) /= ?mulr_le0 ?invr_le0 ?ltrW //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (can2_eq (mulrVK _) (mulrK _)) ?unitfE ?(ltr_eqF hy) // mul1r=> /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pexpz2r",
            "line_nb": 984,
            "steps": [
                {
                    "command": [
                        "exact: lerW_mono_in (ler_pexpz2r _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nexpz2r",
            "line_nb": 992,
            "steps": [
                {
                    "command": [
                        "exact: lerW_nmono_in (ler_nexpz2r _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_expz2",
            "line_nb": 995,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite (inj_in_eq (pexpIrz _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_def",
            "line_nb": 1006,
            "steps": [
                {
                    "command": [
                        "by rewrite /sgz; case: (_ == _); case: (_ < _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrEz",
            "line_nb": 1009,
            "steps": [
                {
                    "command": [
                        "by rewrite !(fun_if intr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr0_sgz",
            "line_nb": 1012,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite /sgz ltr_neqAle andbC eqr_le ltr_geF //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0_sgz",
            "line_nb": 1015,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite /sgz eq_sym eqr_le x_lt0 ltr_geF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz0",
            "line_nb": 1018,
            "steps": [
                {
                    "command": [
                        "by rewrite /sgz eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz1",
            "line_nb": 1021,
            "steps": [
                {
                    "command": [
                        "by rewrite gtr0_sgz // ltr01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgzN1",
            "line_nb": 1024,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr0_sgz // ltrN10.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_sgr",
            "line_nb": 1028,
            "steps": [
                {
                    "command": [
                        "by rewrite !(fun_if sgz) !sgzE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_sgz",
            "line_nb": 1031,
            "steps": [
                {
                    "command": [
                        "by rewrite sgz_def -mulr_natr normrMsign normr_nat natz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_sg",
            "line_nb": 1034,
            "steps": [
                {
                    "command": [
                        "by rewrite sgr_def -mulr_natr normrMsign normr_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_int",
            "line_nb": 1040,
            "steps": [
                {
                    "command": [
                        "by rewrite /sgz intr_eq0 ltrz0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrz",
            "line_nb": 1043,
            "steps": [
                {
                    "command": [
                        "by rewrite sgrEz intz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intr_sg",
            "line_nb": 1046,
            "steps": [
                {
                    "command": [
                        "by rewrite sgrz -sgz_int -sgrEz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_id",
            "line_nb": 1049,
            "steps": [
                {
                    "command": [
                        "by rewrite !(fun_if (@sgz _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_cp0",
            "line_nb": 1058,
            "steps": [
                {
                    "command": [
                        "by rewrite /sgz; case: ltrgtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgzP",
            "line_nb": 1062,
            "steps": [
                {
                    "command": [
                        "rewrite ![_ == sgz _]eq_sym ![_ == sgr _]eq_sym !sgr_cp0 !sgz_cp0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite /sgr /sgz !lerNgt; case: ltrgt0P; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgzN",
            "line_nb": 1066,
            "steps": [
                {
                    "command": [
                        "by rewrite /sgz oppr_eq0 oppr_lt0; case: ltrgtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulz_sg",
            "line_nb": 1069,
            "steps": [
                {
                    "command": [
                        "by case: sgzP; rewrite ?(mulr0, mulr1, mulrNN).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulz_sg_eq1",
            "line_nb": 1072,
            "steps": [
                {
                    "command": [
                        "do 2?case: sgzP=> _; rewrite ?(mulr0, mulr1, mulrN1, opprK, oppr0, eqxx); by rewrite ?[0 == 1]eq_sym ?oner_eq0 //= eqr_oppLR oppr0 oner_eq0.",
                        "VernacExtend",
                        "d1ef1835525210ce0ce7a1499de3ee2f48a00f99"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulz_sg_eqN1",
            "line_nb": 1075,
            "steps": [
                {
                    "command": [
                        "by rewrite -eqr_oppLR -mulrN -sgzN mulz_sg_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgzM",
            "line_nb": 1078,
            "steps": [
                {
                    "command": [
                        "case: (sgzP x)=> hx; first by rewrite hx ?mul0r sgz0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (sgzP y)=> hy; first by rewrite hy !mulr0 sgz0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite mul1r sgz_cp0 pmulr_rgt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite mul1r sgz_cp0 nmulr_llt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (sgzP y)=> hy; first by rewrite hy !mulr0 sgz0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite mulr1 sgz_cp0 nmulr_rlt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite mulN1r opprK sgz_cp0 nmulr_rgt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgzX",
            "line_nb": 1087,
            "steps": [
                {
                    "command": [
                        "by elim: n => [|n IHn]; rewrite ?sgz1 // !exprS sgzM IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_eq0",
            "line_nb": 1090,
            "steps": [
                {
                    "command": [
                        "by rewrite sgz_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_odd",
            "line_nb": 1093,
            "steps": [
                {
                    "command": [
                        "by case: sgzP => //=; rewrite ?expr1n // signr_odd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_gt0",
            "line_nb": 1096,
            "steps": [
                {
                    "command": [
                        "by case: sgzP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_lt0",
            "line_nb": 1099,
            "steps": [
                {
                    "command": [
                        "by case: sgzP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_ge0",
            "line_nb": 1102,
            "steps": [
                {
                    "command": [
                        "by case: sgzP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_le0",
            "line_nb": 1105,
            "steps": [
                {
                    "command": [
                        "by case: sgzP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_smul",
            "line_nb": 1108,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulrzl sgzM -sgrEz sgz_sgr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrMz",
            "line_nb": 1111,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulrzr sgrM -intr_sg mulrzr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgz_eq",
            "line_nb": 1115,
            "steps": [
                {
                    "command": [
                        "by do 2!case: sgzP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intr_sign",
            "line_nb": 1118,
            "steps": [
                {
                    "command": [
                        "exact: rmorph_sign.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absz_nat",
            "line_nb": 1125,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abszE",
            "line_nb": 1128,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absz0",
            "line_nb": 1131,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absz_eq0",
            "line_nb": 1137,
            "steps": [
                {
                    "command": [
                        "by case: (intP m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absz_gt0",
            "line_nb": 1140,
            "steps": [
                {
                    "command": [
                        "by case: (intP m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absz1",
            "line_nb": 1143,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abszN1",
            "line_nb": 1146,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absz_id",
            "line_nb": 1149,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abszM",
            "line_nb": 1152,
            "steps": [
                {
                    "command": [
                        "by case: m1 m2 => [[|m1]|m1] [[|m2]|m2]; rewrite //= mulnS mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abszX",
            "line_nb": 1155,
            "steps": [
                {
                    "command": [
                        "by elim: n => // n ihn; rewrite exprS expnS abszM ihn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absz_sg",
            "line_nb": 1158,
            "steps": [
                {
                    "command": [
                        "by case: (intP m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gez0_abs",
            "line_nb": 1161,
            "steps": [
                {
                    "command": [
                        "by case: (intP m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtz0_abs",
            "line_nb": 1164,
            "steps": [
                {
                    "command": [
                        "by case: (intP m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lez0_abs",
            "line_nb": 1167,
            "steps": [
                {
                    "command": [
                        "by case: (intP m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltz0_abs",
            "line_nb": 1170,
            "steps": [
                {
                    "command": [
                        "by case: (intP m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absz_sign",
            "line_nb": 1173,
            "steps": [
                {
                    "command": [
                        "by rewrite abszX exp1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abszMsign",
            "line_nb": 1176,
            "steps": [
                {
                    "command": [
                        "by rewrite abszM absz_sign mul1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulz_sign_abs",
            "line_nb": 1179,
            "steps": [
                {
                    "command": [
                        "by rewrite abszE mulr_sign_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulz_Nsign_abs",
            "line_nb": 1182,
            "steps": [
                {
                    "command": [
                        "by rewrite abszE mulr_Nsign_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intEsign",
            "line_nb": 1185,
            "steps": [
                {
                    "command": [
                        "exact: numEsign.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abszEsign",
            "line_nb": 1188,
            "steps": [
                {
                    "command": [
                        "exact: normrEsign.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intEsg",
            "line_nb": 1191,
            "steps": [
                {
                    "command": [
                        "by rewrite -sgrz -numEsg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abszEsg",
            "line_nb": 1194,
            "steps": [
                {
                    "command": [
                        "by rewrite -sgrz -normrEsg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distnC",
            "line_nb": 1207,
            "steps": [
                {
                    "command": [
                        "by rewrite -opprB abszN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distnDl",
            "line_nb": 1210,
            "steps": [
                {
                    "command": [
                        "by rewrite !PoszD opprD addrCA -addrA addKr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distnDr",
            "line_nb": 1213,
            "steps": [
                {
                    "command": [
                        "by rewrite -!(addnC d) distnDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distnEr",
            "line_nb": 1216,
            "steps": [
                {
                    "command": [
                        "by move/subnK=> {1}<-; rewrite distnC PoszD addrK absz_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distnEl",
            "line_nb": 1219,
            "steps": [
                {
                    "command": [
                        "by move/distnEr <-; rewrite distnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distn0",
            "line_nb": 1222,
            "steps": [
                {
                    "command": [
                        "by rewrite subr0 absz_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dist0n",
            "line_nb": 1225,
            "steps": [
                {
                    "command": [
                        "by rewrite distnC distn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distnn",
            "line_nb": 1228,
            "steps": [
                {
                    "command": [
                        "by rewrite subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distn_eq0",
            "line_nb": 1231,
            "steps": [
                {
                    "command": [
                        "by rewrite absz_eq0 subr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distnS",
            "line_nb": 1234,
            "steps": [
                {
                    "command": [
                        "exact: distnDr n 0 1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distSn",
            "line_nb": 1237,
            "steps": [
                {
                    "command": [
                        "exact: distnDr n 1 0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distn_eq1",
            "line_nb": 1240,
            "steps": [
                {
                    "command": [
                        "case: ltnP => [lt_n12 | le_n21].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym -(eqn_add2r n1) distnEr ?subnK // ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqn_add2r n2) distnEl ?subnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_add_dist",
            "line_nb": 1245,
            "steps": [
                {
                    "command": [
                        "by rewrite -lez_nat PoszD !abszE ler_dist_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leqif_add_dist",
            "line_nb": 1258,
            "steps": [
                {
                    "command": [
                        "exact: leqif_add_distz.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrn_dist",
            "line_nb": 1261,
            "steps": [
                {
                    "command": [
                        "wlog le_n21: n1 n2 / n2 <= n1.",
                        "VernacExtend",
                        "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
                    ]
                },
                {
                    "command": [
                        "move=> IH; case/orP: (leq_total n2 n1) => /IH //.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite (addnC (n2 ^ 2)) (mulnC n2) distnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite distnEl ?sqrn_sub ?subnK ?nat_Cauchy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intr_norm",
            "line_nb": 1271,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}[m]intEsign rmorphMsign normrMsign abszE normr_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normrMz",
            "line_nb": 1274,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulrzl normrM -intr_norm mulrzl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expN1r",
            "line_nb": 1277,
            "steps": [
                {
                    "command": [
                        "case: i => n; first by rewrite exprnP absz_nat.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite NegzE abszN absz_nat -invr_expz expfV invrN1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefMrz",
            "line_nb": 1288,
            "steps": [
                {
                    "command": [
                        "by move=> p [] n i; rewrite ?NegzE (coefMNn, coefMn).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_mulrz",
            "line_nb": 1291,
            "steps": [
                {
                    "command": [
                        "move=> [] n c; rewrite ?NegzE -?pmulrn ?polyC_muln //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite polyC_opp mulrNz polyC_muln nmulrn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerMz",
            "line_nb": 1295,
            "steps": [
                {
                    "command": [
                        "by case=> *; rewrite ?NegzE ?mulNzr ?(hornerN, hornerMn).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_int",
            "line_nb": 1298,
            "steps": [
                {
                    "command": [
                        "by move=> n x; rewrite hornerMz hornerC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivMz",
            "line_nb": 1301,
            "steps": [
                {
                    "command": [
                        "by move=> [] n p; rewrite ?NegzE -?pmulrn (derivMn, derivMNn).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulpz",
            "line_nb": 1307,
            "steps": [
                {
                    "command": [
                        "by rewrite -[p *~ n]mulrzl -mul_polyC polyC_mulrz polyC1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znat_key",
            "line_nb": 1313,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znat_def",
            "line_nb": 1317,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znat_semiring_closed",
            "line_nb": 1320,
            "steps": [
                {
                    "command": [
                        "by do 2?split => //; [apply: addr_ge0 | apply: mulr_ge0].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZnatP",
            "line_nb": 1326,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP idP) => [|[n -> //]]; case: m => // n; exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rpredMz",
            "line_nb": 1331,
            "steps": [
                {
                    "command": [
                        "by case: m => n u Su; rewrite ?rpredN ?rpredMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rpred_int",
            "line_nb": 1334,
            "steps": [
                {
                    "command": [
                        "by rewrite rpredMz ?rpred1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rpredZint",
            "line_nb": 1337,
            "steps": [
                {
                    "command": [
                        "by move=> u Su; rewrite /= scaler_int rpredMz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rpredXz",
            "line_nb": 1340,
            "steps": [
                {
                    "command": [
                        "by case: m => n x Sx; rewrite ?rpredV rpredX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rpredXsign",
            "line_nb": 1343,
            "steps": [
                {
                    "command": [
                        "by rewrite -signr_odd; case: (odd n); rewrite ?rpredV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}