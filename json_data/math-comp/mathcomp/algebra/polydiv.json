{
    "filename": "mathcomp/algebra/polydiv.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq choice fintype.",
            "VernacRequire",
            "6742bd497e3522a1153ce38bc5b3e5f28f9487c8"
        ],
        [
            "From mathcomp Require Import bigop ssralg poly.",
            "VernacRequire",
            "09e7c0602912d15df610cfd831daf335a63fdcbf"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Reserved Notation \"p %= q\" (at level 70, no associativity).",
            "VernacSyntaxExtension",
            "1cd79ca726996394615e66da166ed3d8597a8bb1"
        ],
        [
            "Local Notation simp := Monoid.simpm.",
            "VernacSyntacticDefinition",
            "377cb83857be8bbb2b92076c866dfea02d5a51c0"
        ],
        [
            "Module Pdiv.",
            "VernacDefineModule",
            "456b5d23e52ee58e7c3d6509e90c8897934f1172"
        ],
        [
            "Module CommonRing.",
            "VernacDefineModule",
            "a022c25a560b9fd059cc8e7a0224ab12dce8ebdb"
        ],
        [
            "Section RingPseudoDivision.",
            "VernacBeginSection",
            "936b2375efd15fb72cf314d1d03934b28f2ac95d"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types d p q r : {poly R}.",
            "VernacReserve",
            "6a84b75039e4c443d27aab4c100a6225d5945da7"
        ],
        [
            "Definition redivp_rec (q : {poly R}) := let sq := size q in let cq := lead_coef q in fix loop (k : nat) (qq r : {poly R})(n : nat) {struct n} := if size r < sq then (k, qq, r) else let m := (lead_coef r) *: 'X^(size r - sq) in let qq1 := qq * cq%:P + m in let r1 := r * cq%:P - m * q in if n is n1.+1 then loop k.+1 qq1 r1 n1 else (k.+1, qq1, r1).",
            "VernacDefinition",
            "0d9a618bc5a7c46e7c67bbe9c7fd7f96e110fb77"
        ],
        [
            "Definition redivp_expanded_def p q := if q == 0 then (0%N, 0, p) else redivp_rec q 0 0 p (size p).",
            "VernacDefinition",
            "f6babc947dd57d4ff87891d92a03f6bde7afee01"
        ],
        [
            "Fact redivp_key : unit.",
            "VernacStartTheoremProof",
            "4b32c956e1167af7d82c7686d268a6d508b99733"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition redivp : {poly R} -> {poly R} -> nat * {poly R} * {poly R} := locked_with redivp_key redivp_expanded_def.",
            "VernacDefinition",
            "f93e1bf99e238cb4f8fb4c0f1d26cec9c83c4457"
        ],
        [
            "Canonical redivp_unlockable := [unlockable fun redivp].",
            "VernacDefinition",
            "15974f47b9c7b7449e8054ba68c8b22136261f8f"
        ],
        [
            "Definition rdivp p q := ((redivp p q).1).2.",
            "VernacDefinition",
            "37da14a7e98b0a79ae6912919376101241afe5f9"
        ],
        [
            "Definition rmodp p q := (redivp p q).2.",
            "VernacDefinition",
            "f74d75af5a5099f01354bb3940afc98cc4a10152"
        ],
        [
            "Definition rscalp p q := ((redivp p q).1).1.",
            "VernacDefinition",
            "db6567599a3329a63c4ca2e861336ab2790e0424"
        ],
        [
            "Definition rdvdp p q := rmodp q p == 0.",
            "VernacDefinition",
            "c775458ddca523a45fb7b73b75d6f91d2a5d85b5"
        ],
        [
            "Lemma redivp_def p q : redivp p q = (rscalp p q, rdivp p q, rmodp p q).",
            "VernacStartTheoremProof",
            "074edb0fc0b844431d15fc5ef65b8301dbd99a3a"
        ],
        [
            "by rewrite /rscalp /rdivp /rmodp; case: (redivp p q) => [[]] /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdiv0p p : rdivp 0 p = 0.",
            "VernacStartTheoremProof",
            "ed82129d8fcd5bd6f7c270e06685190efae42915"
        ],
        [
            "rewrite /rdivp unlock; case: ifP => // Hp; rewrite /redivp_rec !size_poly0.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by rewrite polySpred ?Hp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp0 p : rdivp p 0 = 0.",
            "VernacStartTheoremProof",
            "9ccba8a5cb45471d9ecd9c4581545cd44c605448"
        ],
        [
            "by rewrite /rdivp unlock eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp_small p q : size p < size q -> rdivp p q = 0.",
            "VernacStartTheoremProof",
            "0247a73ea84b9a3477caa345f29d5bce365726f4"
        ],
        [
            "rewrite /rdivp unlock; have [-> | _ ltpq] := eqP; first by rewrite size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: (size p) => [|s]; rewrite /= ltpq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_rdivp p q : size (rdivp p q) <= size p.",
            "VernacStartTheoremProof",
            "f33e138a80789fe7a78a8cbd7f0bacfee43b307c"
        ],
        [
            "have [/rdivp_small->|] := ltnP (size p) (size q); first by rewrite size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /rdivp /rmodp /rscalp unlock.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case q0: (q == 0) => /=; first by rewrite size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have: size (0 : {poly R}) <= size p by rewrite size_poly0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (leqnn (size p)); move: {2 3 4 6}(size p) => A.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "elim: (size p) 0%N (0 : {poly R}) {1 3 4}p (leqnn (size p)) => [|n ihn] k q1 r.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by move/size_poly_leq0P->; rewrite /= size_poly0 lt0n size_poly_eq0 q0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> /= hrn hr hq1 hq; case: ltnP => //= hqr.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "have sq: 0 < size q by rewrite size_poly_gt0 q0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sr: 0 < size r by apply: leq_trans sq hqr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: ihn => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/leq_sizeP => j hnj.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite coefB -scalerAl coefZ coefXnM ltn_subRL ltnNge.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have hj : (size r).-1 <= j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: leq_trans hnj; move: hrn; rewrite -{1}(prednK sr) ltnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite polySpred -?size_poly_gt0 // (leq_ltn_trans hj) /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -{1}(add0n j) ltn_add2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (hj); rewrite leq_eqVlt; case/orP.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "move/eqP<-; rewrite (@polySpred _ q) ?q0 // subSS coefMC.",
            "VernacExtend",
            "01eaddc5beea13e116fcc5de5430a824e6e09efb"
        ],
        [
            "rewrite subKn; first by rewrite lead_coefE subrr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltnS -!polySpred // ?q0 -?size_poly_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> {hj} hj; move: (hj); rewrite prednK // coefMC; move/leq_sizeP=> -> //.",
            "VernacExtend",
            "c2a36ed384df272cf6048f45716d1b4f096485fd"
        ],
        [
            "suff: size q <= j - (size r - size q).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite mul0r sub0r; move/leq_sizeP=> -> //; rewrite mulr0 oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite subnBA // addnC -(prednK sq) -(prednK sr) addSn subSS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -addnBA ?(ltnW hj) // -{1}[_.-1]addn0 ltn_add2l subn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: leq_trans (size_add _ _) _; rewrite geq_max; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "apply: leq_trans (size_mul_leq _ _) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite size_polyC lead_coef_eq0 q0 /= addn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_opp; apply: leq_trans (size_mul_leq _ _) _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: leq_trans hr; rewrite -subn1 leq_subLR -{2}(subnK hqr) addnA leq_add2r.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite add1n -(@size_polyXn R) size_scale_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: leq_trans (size_add _ _) _; rewrite geq_max; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "apply: leq_trans (size_mul_leq _ _) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite size_polyC lead_coef_eq0 q0 /= addnS addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: leq_trans (size_scale_leq _ _) _; rewrite size_polyXn.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -subSn // leq_subLR -add1n leq_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmod0p p : rmodp 0 p = 0.",
            "VernacStartTheoremProof",
            "7557ac5e0cb514b594230f7bb86e9e6f821ddecb"
        ],
        [
            "rewrite /rmodp unlock; case: ifP => // Hp; rewrite /redivp_rec !size_poly0.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by rewrite polySpred ?Hp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp0 p : rmodp p 0 = p.",
            "VernacStartTheoremProof",
            "bab88e6678c9770c7c941903c826b2ffd2d9681b"
        ],
        [
            "by rewrite /rmodp unlock eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rscalp_small p q : size p < size q -> rscalp p q = 0%N.",
            "VernacStartTheoremProof",
            "6c80adb7c968965a4076bdd982ae0e5844ff18d9"
        ],
        [
            "rewrite /rscalp unlock; case: eqP => Eq // spq.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case sp: (size p) => [| s] /=; rewrite spq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_rmodp p q : (size (rmodp p q) < size q) = (q != 0).",
            "VernacStartTheoremProof",
            "7f3d1c389da14c1877858f707e0b028e1c6f8173"
        ],
        [
            "rewrite /rdivp /rmodp /rscalp unlock; case q0 : (q == 0).",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite (eqP q0) /= size_poly0 ltn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: (size p) 0%N 0 {1 3}p (leqnn (size p)) => [|n ihn] k q1 r.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite leqn0 size_poly_eq0; move/eqP->; rewrite /= size_poly0 /= lt0n.",
            "VernacExtend",
            "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
        ],
        [
            "by rewrite size_poly_eq0 q0 /= size_poly0 lt0n size_poly_eq0 q0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> hr /=; case: (@ltnP (size r) _) => //= hsrq; rewrite ihn //.",
            "VernacExtend",
            "9c3f4e82a1696e467f5acd1f5c747a8b7b11bee4"
        ],
        [
            "apply/leq_sizeP => j hnj; rewrite coefB.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have sr: 0 < size r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: leq_trans hsrq; apply: neq0_lt0n; rewrite size_poly_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sq: 0 < size q by rewrite size_poly_gt0 q0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have hj : (size r).-1 <= j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: leq_trans hnj; move: hr; rewrite -{1}(prednK sr) ltnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -scalerAl !coefZ coefXnM ltn_subRL ltnNge; move: (sr).",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "move/prednK => {1}<-.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have -> /= : (size r).-1 < size q + j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (@leq_trans ((size q) + (size r).-1)); last by rewrite leq_add2l.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -{1}[_.-1]add0n ltn_add2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (hj); rewrite leq_eqVlt; case/orP.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "move/eqP<-; rewrite -{1}(prednK sq) -{3}(prednK sr) subSS.",
            "VernacExtend",
            "01eaddc5beea13e116fcc5de5430a824e6e09efb"
        ],
        [
            "rewrite subKn; first by rewrite coefMC !lead_coefE subrr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move: hsrq; rewrite -{1}(prednK sq) -{1}(prednK sr) ltnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> {hj} hj; move: (hj); rewrite prednK // coefMC; move/leq_sizeP=> -> //.",
            "VernacExtend",
            "c2a36ed384df272cf6048f45716d1b4f096485fd"
        ],
        [
            "suff: size q <= j - (size r - size q).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite mul0r sub0r; move/leq_sizeP=> -> //; rewrite mulr0 oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite subnBA // addnC -(prednK sq) -(prednK sr) addSn subSS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -addnBA ?(ltnW hj) // -{1}[_.-1]addn0 ltn_add2l subn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_rmodpN0 p q : q != 0 -> size (rmodp p q) < size q.",
            "VernacStartTheoremProof",
            "075715b226be9cf6412c012ba596dd6d9abbbb87"
        ],
        [
            "by rewrite ltn_rmodp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp1 p : rmodp p 1 = 0.",
            "VernacStartTheoremProof",
            "ee16f9f0623f5bc688d1470cf6b8cda096f573a2"
        ],
        [
            "case p0: (p == 0); first by rewrite (eqP p0) rmod0p.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite -size_poly_eq0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by have := (ltn_rmodp p 1); rewrite size_polyC !oner_neq0 ltnS leqn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp_small p q : size p < size q -> rmodp p q = p.",
            "VernacStartTheoremProof",
            "74e258934874b4e70133b403f54f6075d1886abe"
        ],
        [
            "rewrite /rmodp unlock; case: eqP => Eq; first by rewrite Eq size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case sp: (size p) => [| s] Hs /=; rewrite sp Hs /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_rmodp m d : size (rmodp m d) <= size m.",
            "VernacStartTheoremProof",
            "d6055f31f14675e406b17b4ee20837d37191f6f5"
        ],
        [
            "case: (ltnP (size m) (size d)) => [|h]; first by move/rmodp_small->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case d0: (d == 0); first by rewrite (eqP d0) rmodp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: leq_trans h; apply: ltnW; rewrite ltn_rmodp d0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodpC p c : c != 0 -> rmodp p c%:P = 0.",
            "VernacStartTheoremProof",
            "5e0c503d1aa6e173df5012fecb402738d289b69e"
        ],
        [
            "move=> Hc; apply/eqP; rewrite -size_poly_eq0 -leqn0 -ltnS.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "have -> : 1%N = nat_of_bool (c != 0) by rewrite Hc.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -size_polyC ltn_rmodp polyC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdp0 d : rdvdp d 0.",
            "VernacStartTheoremProof",
            "e0f364542ab4be14c26b409ae7cb372f699bde58"
        ],
        [
            "by rewrite /rdvdp rmod0p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvd0p n : (rdvdp 0 n) = (n == 0).",
            "VernacStartTheoremProof",
            "9369031d77597192d1ecb35d8c895ada4ed39efb"
        ],
        [
            "by rewrite /rdvdp rmodp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvd0pP n : reflect (n = 0) (rdvdp 0 n).",
            "VernacStartTheoremProof",
            "8fddd8fcfafc5dc484d646f18baff798c6fc35ca"
        ],
        [
            "by apply: (iffP idP); rewrite rdvd0p; move/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdpN0 p q : rdvdp p q -> q != 0 -> p != 0.",
            "VernacStartTheoremProof",
            "7a391dd277e4ab4174a3349d10d167d70ee3703f"
        ],
        [
            "by move=> pq hq; apply: contraL pq => /eqP ->; rewrite rdvd0p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdp1 d : (rdvdp d 1) = ((size d) == 1%N).",
            "VernacStartTheoremProof",
            "847df797bccefb5789a820d2317973707a4f2fdf"
        ],
        [
            "rewrite /rdvdp; case d0: (d == 0).",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite (eqP d0) rmodp0 size_poly0 (negPf (@oner_neq0 _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= (size_poly_eq0 d); rewrite d0; move/negbT; rewrite -lt0n.",
            "VernacExtend",
            "960a5fd70f1a942037256b0cd1b5d799a4f8c68d"
        ],
        [
            "rewrite leq_eqVlt; case/orP => hd; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite rmodp_small ?size_poly1 // oner_eq0 -(subnKC hd).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eq_sym in hd; rewrite hd; have [c cn0 ->] := size_poly1P _ hd.",
            "VernacExtend",
            "9bbd420a23a97e1177d2d2a4ff67379c083c72b4"
        ],
        [
            "rewrite /rmodp unlock -size_poly_eq0 size_poly1 /= size_poly1 size_polyC cn0 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite polyC_eq0 (negPf cn0) !lead_coefC !scale1r subrr !size_poly0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvd1p m : rdvdp 1 m.",
            "VernacStartTheoremProof",
            "6a4a3afc2e6ff3d16b1b1ca6ca397c1790fd9139"
        ],
        [
            "by rewrite /rdvdp rmodp1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nrdvdp_small (n d : {poly R}) : n != 0 -> size n < size d -> (rdvdp d n) = false.",
            "VernacStartTheoremProof",
            "a424e0994f5d409b5c0c8905ec7a3f7b9edccc3b"
        ],
        [
            "by move=> nn0 hs; rewrite /rdvdp; rewrite (rmodp_small hs); apply: negPf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp_eq0P p q : reflect (rmodp p q = 0) (rdvdp q p).",
            "VernacStartTheoremProof",
            "706d34b876a0c25574da91d7aa32f2ecff76c371"
        ],
        [
            "exact: (iffP eqP).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp_eq0 p q : rdvdp q p -> rmodp p q = 0.",
            "VernacStartTheoremProof",
            "df4351900df7fc84d51763257f02440aa5c966c9"
        ],
        [
            "by move/rmodp_eq0P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdp_leq p q : rdvdp p q -> q != 0 -> size p <= size q.",
            "VernacStartTheoremProof",
            "f72271f5f83bff00ccc7199e323defe42fd72205"
        ],
        [
            "by move=> dvd_pq; rewrite leqNgt; apply: contra => /rmodp_small <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rgcdp p q := let: (p1, q1) := if size p < size q then (q, p) else (p, q) in if p1 == 0 then q1 else let fix loop (n : nat) (pp qq : {poly R}) {struct n} := let rr := rmodp pp qq in if rr == 0 then qq else if n is n1.+1 then loop n1 qq rr else rr in loop (size p1) p1 q1.",
            "VernacDefinition",
            "0bf0c700e3d1f24f6987f28456f6c0eaa9b10d10"
        ],
        [
            "Lemma rgcd0p : left_id 0 rgcdp.",
            "VernacStartTheoremProof",
            "5fa5398aa9304a4b1b1140b733830365d0f47779"
        ],
        [
            "move=> p; rewrite /rgcdp size_poly0 size_poly_gt0 if_neg.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: ifP => /= [_ | nzp]; first by rewrite eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite polySpred !(rmodp0, nzp) //; case: _.-1 => [|m]; rewrite rmod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rgcdp0 : right_id 0 rgcdp.",
            "VernacStartTheoremProof",
            "cc0557de01d815e59dc26d89babf14c6718349e1"
        ],
        [
            "move=> p; have:= rgcd0p p; rewrite /rgcdp size_poly0 size_poly_gt0 if_neg.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "by case: ifP => /= p0; rewrite ?(eqxx, p0) // (eqP p0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rgcdpE p q : rgcdp p q = if size p < size q then rgcdp (rmodp q p) p else rgcdp (rmodp p q) q.",
            "VernacStartTheoremProof",
            "601c2195e2389df18611506e58ae97f6399742f2"
        ],
        [
            "pose rgcdp_rec := fix rgcdp_rec (n : nat) (pp qq : {poly R}) {struct n} := let rr := rmodp pp qq in if rr == 0 then qq else if n is n1.+1 then rgcdp_rec n1 qq rr else rr.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Irec: forall m n p q, size q <= m -> size q <= n -> size q < size p -> rgcdp_rec m p q = rgcdp_rec n p q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "elim=> [|m Hrec] [|n] //= p1 q1.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite leqn0 size_poly_eq0; move/eqP=> -> _.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite size_poly0 size_poly_gt0 rmodp0 => nzp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (negPf nzp); case: n => [|n] /=; rewrite rmod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite leqn0 size_poly_eq0 => _; move/eqP=> ->.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "rewrite size_poly0 size_poly_gt0 rmodp0 => nzp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (negPf nzp); case: m {Hrec} => [|m] /=; rewrite rmod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP => Epq Sm Sn Sq //; rewrite ?Epq //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: (eqVneq q1 0) => [->|nzq].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: n m {Sm Sn Hrec} => [|m] [|n] //=; rewrite rmod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: Hrec; last by rewrite ltn_rmodp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltnS (leq_trans _ Sm) // ltn_rmodp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -ltnS (leq_trans _ Sn) // ltn_rmodp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq p 0) => [-> | nzp].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite rmod0p rmodp0 rgcd0p rgcdp0 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq q 0) => [-> | nzq].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite rmod0p rmodp0 rgcd0p rgcdp0 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /rgcdp -/rgcdp_rec.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ltnP; rewrite (negPf nzp, negPf nzq) //=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "move=> ltpq; rewrite ltn_rmodp (negPf nzp) //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -(ltn_predK ltpq) /=; case: eqP => [->|].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: (size p) => [|[|s]]; rewrite /= rmodp0 (negPf nzp) // rmod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=> nzqp; rewrite (negPf nzp).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: Irec => //; last by rewrite ltn_rmodp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltnS (ltn_predK ltpq) (leq_trans _ ltpq) ?leqW // ltn_rmodp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltnW // ltn_rmodp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> leqp; rewrite ltn_rmodp (negPf nzq) //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have p_gt0: size p > 0 by rewrite size_poly_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(prednK p_gt0) /=; case: eqP => [->|].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: (size q) => [|[|s]]; rewrite /= rmodp0 (negPf nzq) // rmod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=> nzpq; rewrite (negPf nzq).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: Irec => //; last by rewrite ltn_rmodp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltnS (prednK p_gt0) (leq_trans _ leqp) // ltn_rmodp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltnW // ltn_rmodp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant comm_redivp_spec m d : nat * {poly R} * {poly R} -> Type := ComEdivnSpec k (q r : {poly R}) of (GRing.comm d (lead_coef d)%:P -> m * (lead_coef d ^+ k)%:P = q * d + r) & (d != 0 -> size r < size d) : comm_redivp_spec m d (k, q, r).",
            "VernacInductive",
            "b0319352534d99bff9af0f6f38c3aef17f6c2144"
        ],
        [
            "Lemma comm_redivpP m d : comm_redivp_spec m d (redivp m d).",
            "VernacStartTheoremProof",
            "97023ae44c31adab21835cb8e9b5bb2f31a7c470"
        ],
        [
            "rewrite unlock; case: (altP (d =P 0))=> [->| Hd].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by constructor; rewrite !(simp, eqxx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: GRing.comm d (lead_coef d)%:P -> m * (lead_coef d ^+ 0)%:P = 0 * d + m.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: (size m) 0%N 0 {1 4 6}m (leqnn (size m))=> [|n IHn] k q r Hr /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have{Hr} ->: r = 0 by apply/eqP; rewrite -size_poly_eq0; move: Hr; case: size.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff hsd: size (0: {poly R}) < size d by rewrite hsd => /= ?; constructor.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite size_polyC eqxx (polySpred Hd).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ltP=> Hlt Heq; first by constructor=> // _; apply/ltP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: IHn=> [|Cda]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite mulrDl addrAC -addrA subrK exprSr polyC_mul mulrA Heq //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrDl -mulrA Cda mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/leq_sizeP => j Hj.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite coefD coefN coefMC -scalerAl coefZ coefXnM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/ltP: Hlt; rewrite -leqNgt=> Hlt.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move: Hj; rewrite leq_eqVlt; case/predU1P => [<-{j} | Hj]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite nth_default ?(leq_trans Hqq) // ?simp; last by apply: (leq_trans Hr).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite nth_default; first by rewrite if_same !simp oppr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -{1}(subKn Hlt) leq_sub2r // (leq_trans Hr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Hr; rewrite leq_eqVlt ltnS; case/predU1P=> Hqq; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !nth_default ?if_same ?simp ?oppr0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -{1}(subKn Hlt) leq_sub2r // (leq_trans Hqq).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {2}/lead_coef Hqq polySpred // subSS ltnNge leq_subr /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subKn ?addrN // -subn1 leq_subLR add1n -Hqq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodpp p : GRing.comm p (lead_coef p)%:P -> rmodp p p = 0.",
            "VernacStartTheoremProof",
            "73adbf17917b68d5afada72ed9ae657447d456c5"
        ],
        [
            "move=> hC; rewrite /rmodp unlock; case: ifP => hp /=; first by rewrite (eqP hp).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: (hp); rewrite -size_poly_eq0 /redivp_rec; case sp: (size p)=> [|n] // _.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite mul0r sp ltnn add0r subnn expr0 hC alg_polyC subrr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: n sp => [|n] sp; rewrite size_polyC /= eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rcoprimep (p q : {poly R}) := size (rgcdp p q) == 1%N.",
            "VernacDefinition",
            "88d5ed06bfec5a2265280bcd8dbc3875eb322c82"
        ],
        [
            "Fixpoint rgdcop_rec q p n := if n is m.+1 then if rcoprimep p q then p else rgdcop_rec q (rdivp p (rgcdp p q)) m else (q == 0)%:R.",
            "VernacFixpoint",
            "c9f33feaacf8bac264b8be66e0ca8806860c11b4"
        ],
        [
            "Definition rgdcop q p := rgdcop_rec q p (size p).",
            "VernacDefinition",
            "4d6ba905f4696b1d9cd507e150b390cf357fdcfd"
        ],
        [
            "Lemma rgdcop0 q : rgdcop q 0 = (q == 0)%:R.",
            "VernacStartTheoremProof",
            "368dff485b76549aa276f9fab54b83c7adfc9314"
        ],
        [
            "by rewrite /rgdcop size_poly0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RingPseudoDivision.",
            "VernacEndSegment",
            "a74467df42e12906bf03714cbea7941095a29283"
        ],
        [
            "End CommonRing.",
            "VernacEndSegment",
            "c3a33a2e6456afadfac0544532febd8ba7816380"
        ],
        [
            "Module RingComRreg.",
            "VernacDefineModule",
            "2361bcceaee8d32f977b0ba00dfb11b8f2209631"
        ],
        [
            "Import CommonRing.",
            "VernacImport",
            "2774243caa180dbcbd1c2de63adb878953a6983b"
        ],
        [
            "Section ComRegDivisor.",
            "VernacBeginSection",
            "cdc8c6716d5611f54eb2c380397e0b53d521fe16"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Variable d : {poly R}.",
            "VernacAssumption",
            "65a16b7c824c823b469cb11b9fa0bbbf24925349"
        ],
        [
            "Hypothesis Cdl : GRing.comm d (lead_coef d)%:P.",
            "VernacAssumption",
            "7d64016fe9dcad3a61357b6efb5426f7798a118a"
        ],
        [
            "Hypothesis Rreg : GRing.rreg (lead_coef d).",
            "VernacAssumption",
            "cb7d2b534b09c488080f4d4c2eb8fd7386fef736"
        ],
        [
            "Implicit Types p q r : {poly R}.",
            "VernacReserve",
            "d6200f44bfb7e7f5b344df8b096cee116bdcc1f1"
        ],
        [
            "Lemma redivp_eq q r : size r < size d -> let k := (redivp (q * d + r) d).1.1 in let c := (lead_coef d ^+ k)%:P in redivp (q * d + r) d = (k, q * c, r * c).",
            "VernacStartTheoremProof",
            "f90a19b9e898e4a57bc7cef0f749534c701133cf"
        ],
        [
            "move=> lt_rd; case: comm_redivpP=> k q1 r1; move/(_ Cdl)=> Heq.",
            "VernacExtend",
            "76c3997c8dac6e8df224371c30bbe100c52c87c4"
        ],
        [
            "have: d != 0 by case: (size d) lt_rd (size_poly_eq0 d) => // n _ <-.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> dn0; move/(_ dn0)=> Hs.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "have eC : q * d * (lead_coef d ^+ k)%:P = q * (lead_coef d ^+ k)%:P * d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -mulrA polyC_exp (GRing.commrX k Cdl) mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff e1 : q1 = q * (lead_coef d ^+ k)%:P.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "congr (_, _, _) => //=; move/eqP: Heq; rewrite [_ + r1]addrC.",
            "VernacExtend",
            "1772c80bade9b1ecfdf79f05ecb2212707d76e37"
        ],
        [
            "rewrite -subr_eq; move/eqP<-; rewrite e1 mulrDl addrAC -{2}(add0r (r * _)).",
            "VernacExtend",
            "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
        ],
        [
            "by rewrite eC subrr add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : (q1 - q * (lead_coef d ^+ k)%:P) * d = r * (lead_coef d ^+ k)%:P - r1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (@addIr _ r1); rewrite subrK.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: (@addrI _ ((q * (lead_coef d ^+ k)%:P) * d)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite mulrDl mulNr !addrA [_ + (q1 * d)]addrC addrK -eC -mulrDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP; rewrite -[_ == _ - _]subr_eq0 rreg_div0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case/andP; rewrite subr_eq0; move/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_opp; apply: (leq_ltn_trans (size_add _ _)); rewrite size_opp.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "rewrite gtn_max Hs (leq_ltn_trans (size_mul_leq _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite size_polyC; case: (_ == _); last by rewrite addnS addn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite addn0; apply: leq_ltn_trans lt_rd; case: size.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp_eq p : p * (lead_coef d ^+ (rscalp p d))%:P = (rdivp p d) * d + (rmodp p d).",
            "VernacStartTheoremProof",
            "de4501f238c0e421cb270dc398508ed65c858ddc"
        ],
        [
            "by rewrite /rdivp /rmodp /rscalp; case: comm_redivpP=> k q1 r1 Hc _; apply: Hc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_rdvdp k q1 p: p * ((lead_coef d)^+ k)%:P = q1 * d -> rdvdp d p.",
            "VernacStartTheoremProof",
            "fadd88b6eefb5f32e8017379b6584f6a4b586484"
        ],
        [
            "move=> he.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Hnq0 := rreg_lead0 Rreg; set lq := lead_coef d.",
            "VernacExtend",
            "81881a093b2294c76be3b432fbe83612064d7bc9"
        ],
        [
            "pose v := rscalp p d; pose m := maxn v k.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "rewrite /rdvdp -(rreg_polyMC_eq0 _ (@rregX _ _ (m - v) Rreg)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff: ((rdivp p d) * (lq ^+ (m - v))%:P - q1 * (lq ^+ (m - k))%:P) * d + (rmodp p d) * (lq ^+ (m - v))%:P == 0.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "rewrite rreg_div0 //; first by case/andP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite rreg_size ?ltn_rmodp //; apply rregX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulrDl addrAC mulNr -!mulrA polyC_exp -(GRing.commrX (m-v) Cdl).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -polyC_exp mulrA -mulrDl -rdivp_eq // [(_ ^+ (m - k))%:P]polyC_exp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(GRing.commrX (m-k) Cdl) -polyC_exp mulrA -he -!mulrA -!polyC_mul.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/v -!exprD addnC subnK ?leq_maxl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addnC subnK ?subrr ?leq_maxr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant rdvdp_spec p q : {poly R} -> bool -> Type := | Rdvdp k q1 & p * ((lead_coef q)^+ k)%:P = q1 * q : rdvdp_spec p q 0 true | RdvdpN & rmodp p q != 0 : rdvdp_spec p q (rmodp p q) false.",
            "VernacInductive",
            "a15d706a9ec3f0cfdf626443ef08cb5ba456102f"
        ],
        [
            "Lemma rdvdp_eqP p : rdvdp_spec p d (rmodp p d) (rdvdp d p).",
            "VernacStartTheoremProof",
            "1daa0d026ad007c97b3b204b56fe6b5186328e9b"
        ],
        [
            "case hdvd: (rdvdp d p); last by apply: RdvdpN; move/rmodp_eq0P/eqP: hdvd.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/rmodp_eq0P: (hdvd)->; apply: (@Rdvdp _ _ (rscalp p d) (rdivp p d)).",
            "VernacExtend",
            "7a566e0388c49b4f7a6456c1f027537f8ba94bd4"
        ],
        [
            "by rewrite rdivp_eq //; move/rmodp_eq0P: (hdvd)->; rewrite addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdp_mull p : rdvdp d (p * d).",
            "VernacStartTheoremProof",
            "f2713cda9cb17ce1c4c05849d23d46e2ca7a800d"
        ],
        [
            "by apply: (@eq_rdvdp 0%N p); rewrite expr0 mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp_mull p : rmodp (p * d) d = 0.",
            "VernacStartTheoremProof",
            "e9047de67035fa008662485e52f20a09c7ce4525"
        ],
        [
            "case: (d =P 0)=> Hd; first by rewrite Hd simp rmod0p.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/eqP; apply: rdvdp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodpp : rmodp d d = 0.",
            "VernacStartTheoremProof",
            "e56f024901d2f7c4579999bfe1943c1c9b3407f8"
        ],
        [
            "by rewrite -{1}(mul1r d) rmodp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivpp : rdivp d d = (lead_coef d ^+ rscalp d d)%:P.",
            "VernacStartTheoremProof",
            "3336fb876d62598ecce5b7294333235f5475ab82"
        ],
        [
            "have dn0 : d != 0 by rewrite -lead_coef_eq0 rreg_neq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (rdivp_eq d); rewrite rmodpp addr0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "suff ->: GRing.comm d (lead_coef d ^+ rscalp d d)%:P by move/(rreg_lead Rreg)->.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite polyC_exp; apply: commrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdpp : rdvdp d d.",
            "VernacStartTheoremProof",
            "7a05eb53dd89ec89f7127ef469250f525ac0535c"
        ],
        [
            "by apply/eqP; apply: rmodpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivpK p : rdvdp d p -> (rdivp p d) * d = p * (lead_coef d ^+ rscalp p d)%:P.",
            "VernacStartTheoremProof",
            "4cc413dfdb94978bb6d728a7653420760856abd9"
        ],
        [
            "by rewrite rdivp_eq /rdvdp; move/eqP->; rewrite addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ComRegDivisor.",
            "VernacEndSegment",
            "611a2766178d3f478f3216900ae9c0ff5a09866d"
        ],
        [
            "End RingComRreg.",
            "VernacEndSegment",
            "a642836b75cb213c8785fcf66e634975c1878bfe"
        ],
        [
            "Module RingMonic.",
            "VernacDefineModule",
            "0aace191e5a72cd56a3c52ba97aec0d9166d2ce4"
        ],
        [
            "Import CommonRing.",
            "VernacImport",
            "2774243caa180dbcbd1c2de63adb878953a6983b"
        ],
        [
            "Import RingComRreg.",
            "VernacImport",
            "ae631106e9de8b589a98a588f1c66f55a13694d1"
        ],
        [
            "Section MonicDivisor.",
            "VernacBeginSection",
            "54aca5139070f71955593393f9aba17ffb244d30"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types p q r : {poly R}.",
            "VernacReserve",
            "d6200f44bfb7e7f5b344df8b096cee116bdcc1f1"
        ],
        [
            "Variable d : {poly R}.",
            "VernacAssumption",
            "65a16b7c824c823b469cb11b9fa0bbbf24925349"
        ],
        [
            "Hypothesis mond : d \\is monic.",
            "VernacAssumption",
            "f193e4ee42e34d35023b4f0952acd466ae6d26b0"
        ],
        [
            "Lemma redivp_eq q r : size r < size d -> let k := (redivp (q * d + r) d).1.1 in redivp (q * d + r) d = (k, q, r).",
            "VernacStartTheoremProof",
            "ce9e929851f1b29453920dbc7edcdbafa070c53e"
        ],
        [
            "case: (monic_comreg mond)=> Hc Hr; move/(redivp_eq Hc Hr q).",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "by rewrite (eqP mond) => -> /=; rewrite expr1n !mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp_eq p : p = (rdivp p d) * d + (rmodp p d).",
            "VernacStartTheoremProof",
            "eb41622653c58d239cc6f76d1ab27d685e14c96b"
        ],
        [
            "rewrite -rdivp_eq; rewrite (eqP mond); last exact: commr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expr1n mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivpp : rdivp d d = 1.",
            "VernacStartTheoremProof",
            "93c1f91f21271ce2c4e21cf678e978d821dd7dd1"
        ],
        [
            "by case: (monic_comreg mond) => hc hr; rewrite rdivpp // (eqP mond) expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp_addl_mul_small q r : size r < size d -> rdivp (q * d + r) d = q.",
            "VernacStartTheoremProof",
            "43e896552dbb2538d4a2ee73790c10fddf5dd649"
        ],
        [
            "by move=> Hd; case: (monic_comreg mond)=> Hc Hr; rewrite /rdivp redivp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp_addl_mul q r : rdivp (q * d + r) d = q + rdivp r d.",
            "VernacStartTheoremProof",
            "1aa3640007571b9913c96187aec8460dce8baada"
        ],
        [
            "case: (monic_comreg mond)=> Hc Hr; rewrite {1}(rdivp_eq r) addrA.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite -mulrDl rdivp_addl_mul_small // ltn_rmodp monic_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp_addl q r : rdvdp d q -> rdivp (q + r) d = rdivp q d + rdivp r d.",
            "VernacStartTheoremProof",
            "0c841b7c64484e7a0f90c65fddb395a6751c3812"
        ],
        [
            "case: (monic_comreg mond)=> Hc Hr; rewrite {1}(rdivp_eq r) addrA.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite {2}(rdivp_eq q); move/rmodp_eq0P->; rewrite addr0.",
            "VernacExtend",
            "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
        ],
        [
            "by rewrite -mulrDl rdivp_addl_mul_small // ltn_rmodp monic_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp_addr q r : rdvdp d r -> rdivp (q + r) d = rdivp q d + rdivp r d.",
            "VernacStartTheoremProof",
            "d363e5be2ee68bce445380750383b61e4968ddc3"
        ],
        [
            "by rewrite addrC; move/rdivp_addl->; rewrite addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp_mull p : rdivp (p * d) d = p.",
            "VernacStartTheoremProof",
            "16c7bdc16fc13be57ecbef6ccaec26261632b6a9"
        ],
        [
            "by rewrite -[p * d]addr0 rdivp_addl_mul rdiv0p addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp_mull p : rmodp (p * d) d = 0.",
            "VernacStartTheoremProof",
            "e9047de67035fa008662485e52f20a09c7ce4525"
        ],
        [
            "by apply: rmodp_mull; rewrite (eqP mond); [apply: commr1 | apply: rreg1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodpp : rmodp d d = 0.",
            "VernacStartTheoremProof",
            "e56f024901d2f7c4579999bfe1943c1c9b3407f8"
        ],
        [
            "by apply: rmodpp; rewrite (eqP mond); [apply: commr1 | apply: rreg1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp_addl_mul_small q r : size r < size d -> rmodp (q * d + r) d = r.",
            "VernacStartTheoremProof",
            "7f6fc154cb2e0db7b1ab06f4b5f364b7eb2ace77"
        ],
        [
            "by move=> Hd; case: (monic_comreg mond)=> Hc Hr; rewrite /rmodp redivp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp_add p q : rmodp (p + q) d = rmodp p d + rmodp q d.",
            "VernacStartTheoremProof",
            "c06b0acf218f99ed6123f803a6b10047e0eb7af7"
        ],
        [
            "rewrite {1}(rdivp_eq p) {1}(rdivp_eq q).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addrCA 2!addrA -mulrDl (addrC (rdivp q d)) -addrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite rmodp_addl_mul_small //; apply: (leq_ltn_trans (size_add _ _)).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite gtn_max !ltn_rmodp // monic_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmodp_mulmr p q : rmodp (p * (rmodp q d)) d = rmodp (p * q) d.",
            "VernacStartTheoremProof",
            "c5325211a19115e40d9fc7efc5e9573e7aeffc31"
        ],
        [
            "have -> : rmodp q d = q - (rdivp q d) * d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite {2}(rdivp_eq q) addrAC subrr add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulrDr rmodp_add -mulNr mulrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -{2}[rmodp _ _]addr0; congr (_ + _); apply: rmodp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdpp : rdvdp d d.",
            "VernacStartTheoremProof",
            "7a05eb53dd89ec89f7127ef469250f525ac0535c"
        ],
        [
            "by apply: rdvdpp; rewrite (eqP mond); [apply: commr1 | apply: rreg1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_rdvdp q1 p : p = q1 * d -> rdvdp d p.",
            "VernacStartTheoremProof",
            "bae2f69c70a01c7df35c15dc205be0c177443310"
        ],
        [
            "move=> h; apply: (@eq_rdvdp _ _ _ _ 1%N q1); rewrite (eqP mond).",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: commr1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: rreg1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by rewrite expr1n mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdp_mull p : rdvdp d (p * d).",
            "VernacStartTheoremProof",
            "f2713cda9cb17ce1c4c05849d23d46e2ca7a800d"
        ],
        [
            "by apply: rdvdp_mull; rewrite (eqP mond) //; [apply: commr1 | apply: rreg1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdpP p : reflect (exists qq, p = qq * d) (rdvdp d p).",
            "VernacStartTheoremProof",
            "6493765b2327ea7a6b445f43c8e68a0ccdcdac05"
        ],
        [
            "case: (monic_comreg mond)=> Hc Hr; apply: (iffP idP).",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "case: rdvdp_eqP=> // k qq; rewrite (eqP mond) expr1n mulr1 => -> _.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by exists qq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case=> [qq]; move/eq_rdvdp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivpK p : rdvdp d p -> (rdivp p d) * d = p.",
            "VernacStartTheoremProof",
            "5e027cacfabddcc927d80d9af72ef31241b537f8"
        ],
        [
            "by move=> dvddp; rewrite {2}[p]rdivp_eq rmodp_eq0 ?addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MonicDivisor.",
            "VernacEndSegment",
            "9f681880506ece19eadf2c72eadecd4d9bb524ed"
        ],
        [
            "End RingMonic.",
            "VernacEndSegment",
            "c8109e711473c70c2f9c238c58dfcc2df0a67f0e"
        ],
        [
            "Module Ring.",
            "VernacDefineModule",
            "5bf4f69ca3a3fb532f140968d6684a6996ca9694"
        ],
        [
            "Include CommonRing.",
            "VernacInclude",
            "4bb47c56fb05cc2b538d0325b09de716d064dbbc"
        ],
        [
            "Import RingMonic.",
            "VernacImport",
            "5efad2bd957e297d806162dd23882132d1ca5ed1"
        ],
        [
            "Section ExtraMonicDivisor.",
            "VernacBeginSection",
            "bfab8a496520a45409bf3eeabbec4df0f58102da"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types d p q r : {poly R}.",
            "VernacReserve",
            "6a84b75039e4c443d27aab4c100a6225d5945da7"
        ],
        [
            "Lemma rdivp1 p : rdivp p 1 = p.",
            "VernacStartTheoremProof",
            "03da0e12e4a3e236af3be1151ec0d5f6fa40f4dd"
        ],
        [
            "by rewrite -{1}(mulr1 p) rdivp_mull // monic1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdp_XsubCl p x : rdvdp ('X - x%:P) p = root p x.",
            "VernacStartTheoremProof",
            "1f79564073c3c4fc856684fe6176b5fb78948709"
        ],
        [
            "have [HcX Hr] := (monic_comreg (monicXsubC x)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/rmodp_eq0P/factor_theorem; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=> p1 ->; apply: rmodp_mull; apply: monicXsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> e0; exists (rdivp p ('X - x%:P)).",
            "VernacExtend",
            "5e306b103e3863c8043de6d3fb2633bdcccfe543"
        ],
        [
            "by rewrite {1}(rdivp_eq (monicXsubC x) p) e0 addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyXsubCP p x : reflect (p.[x] = 0) (rdvdp ('X - x%:P) p).",
            "VernacStartTheoremProof",
            "2c968cace34e8b4abd050b59d66902042aca10fe"
        ],
        [
            "by apply: (iffP idP); rewrite rdvdp_XsubCl; move/rootP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_factor_theorem p x : root p x = (rdvdp ('X - x%:P) p).",
            "VernacStartTheoremProof",
            "fff03f698aabdfe11b1e17d7bf177457398f19d6"
        ],
        [
            "by rewrite rdvdp_XsubCl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExtraMonicDivisor.",
            "VernacEndSegment",
            "4c04fa3e63e6f2e08fd816b24443cbac3452176a"
        ],
        [
            "End Ring.",
            "VernacEndSegment",
            "7b7590f6c3a2b9e01af4b1d22710ae6db4d7afe7"
        ],
        [
            "Module ComRing.",
            "VernacDefineModule",
            "2c6ee21c188436fd6a6405df31aede4b2ac194c9"
        ],
        [
            "Import Ring.",
            "VernacImport",
            "1690650f69c5028a0c72876741c197144b7ce690"
        ],
        [
            "Import RingComRreg.",
            "VernacImport",
            "ae631106e9de8b589a98a588f1c66f55a13694d1"
        ],
        [
            "Section CommutativeRingPseudoDivision.",
            "VernacBeginSection",
            "1250c5554f8c1220f701cb936252c62d2744de35"
        ],
        [
            "Variable R : comRingType.",
            "VernacAssumption",
            "7f1904bb8d32aac32a2864c2db512ee3df1e5ee6"
        ],
        [
            "Implicit Types d p q m n r : {poly R}.",
            "VernacReserve",
            "ec96a0c04d92d548872b96f4d6adcc9efa978e76"
        ],
        [
            "Variant redivp_spec (m d : {poly R}) : nat * {poly R} * {poly R} -> Type := EdivnSpec k (q r: {poly R}) of (lead_coef d ^+ k) *: m = q * d + r & (d != 0 -> size r < size d) : redivp_spec m d (k, q, r).",
            "VernacInductive",
            "a2791a2854773eda986316035b8db79389624106"
        ],
        [
            "Lemma redivpP m d : redivp_spec m d (redivp m d).",
            "VernacStartTheoremProof",
            "477856fb87e061d9dd5fb87697634d49c06bc11e"
        ],
        [
            "rewrite redivp_def; constructor; last by move=> dn0; rewrite ltn_rmodp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -mul_polyC mulrC rdivp_eq //= /GRing.comm mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdivp_eq d p : (lead_coef d ^+ (rscalp p d)) *: p = (rdivp p d) * d + (rmodp p d).",
            "VernacStartTheoremProof",
            "01b61bb69f0f8fb8c6a9ad507645aa00fcc03ecd"
        ],
        [
            "by rewrite /rdivp /rmodp /rscalp; case: redivpP=> k q1 r1 Hc _; apply: Hc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdp_eqP d p : rdvdp_spec p d (rmodp p d) (rdvdp d p).",
            "VernacStartTheoremProof",
            "83d7e4da8189d14f154da2297e888cf47dfd584d"
        ],
        [
            "case hdvd: (rdvdp d p); last by apply: RdvdpN; move/rmodp_eq0P/eqP: hdvd.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/rmodp_eq0P: (hdvd)->; apply: (@Rdvdp _ _ _ (rscalp p d) (rdivp p d)).",
            "VernacExtend",
            "7a566e0388c49b4f7a6456c1f027537f8ba94bd4"
        ],
        [
            "by rewrite mulrC mul_polyC rdivp_eq; move/rmodp_eq0P: (hdvd)->; rewrite addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdvdp_eq q p : (rdvdp q p) = ((lead_coef q) ^+ (rscalp p q) *: p == (rdivp p q) * q).",
            "VernacStartTheoremProof",
            "f3f8e7fd1aa41b8a18fede430abbd8ae8dac0129"
        ],
        [
            "apply/rmodp_eq0P/eqP; rewrite rdivp_eq; first by move->; rewrite addr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/eqP; rewrite eq_sym addrC -subr_eq subrr; move/eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CommutativeRingPseudoDivision.",
            "VernacEndSegment",
            "03b6257373e86217fd826dbc40103c19d37ae5bc"
        ],
        [
            "End ComRing.",
            "VernacEndSegment",
            "84f10fa8719c4f0a765cd39a06ddbe908e0cff8c"
        ],
        [
            "Module UnitRing.",
            "VernacDefineModule",
            "66da99d9add705f605f03dcf5ec659f11a8aa78e"
        ],
        [
            "Import Ring.",
            "VernacImport",
            "1690650f69c5028a0c72876741c197144b7ce690"
        ],
        [
            "Section UnitRingPseudoDivision.",
            "VernacBeginSection",
            "af381ab61c3ef42f35e055390f4ab51e22c3d862"
        ],
        [
            "Variable R : unitRingType.",
            "VernacAssumption",
            "7091a2a91a14247c9bb358aacf762b043d2cb667"
        ],
        [
            "Implicit Type p q r d : {poly R}.",
            "VernacReserve",
            "4537a4ec4aa7eb2c2f069dab32d678c0385d57f9"
        ],
        [
            "Lemma uniq_roots_rdvdp p rs : all (root p) rs -> uniq_roots rs -> rdvdp (\\prod_(z <- rs) ('X - z%:P)) p.",
            "VernacStartTheoremProof",
            "e2306e4b3347423b38d105e7243c745411ab7619"
        ],
        [
            "move=> rrs; case/(uniq_roots_prod_XsubC rrs)=> q ->.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exact/RingMonic.rdvdp_mull/monic_prod_XsubC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UnitRingPseudoDivision.",
            "VernacEndSegment",
            "3a6049e028290ea7cc9309cacd6fbd374bb6f536"
        ],
        [
            "End UnitRing.",
            "VernacEndSegment",
            "b4d22ffc709e390b56b13a1ba3d45f87f9ab0694"
        ],
        [
            "Module IdomainDefs.",
            "VernacDefineModule",
            "adcf7c4a4935c32958061f5354eccadd20d393a5"
        ],
        [
            "Import Ring.",
            "VernacImport",
            "1690650f69c5028a0c72876741c197144b7ce690"
        ],
        [
            "Section IDomainPseudoDivisionDefs.",
            "VernacBeginSection",
            "c74ec5cf25d386aed21dd1b7c0674e9d23c2c2ad"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Implicit Type p q r d : {poly R}.",
            "VernacReserve",
            "4537a4ec4aa7eb2c2f069dab32d678c0385d57f9"
        ],
        [
            "Definition edivp_expanded_def p q := let: (k, d, r) as edvpq := redivp p q in if lead_coef q \\in GRing.unit then (0%N, (lead_coef q)^-k *: d, (lead_coef q)^-k *: r) else edvpq.",
            "VernacDefinition",
            "540afa895e4f5693bb54c18a5741b59eccffcdc8"
        ],
        [
            "Fact edivp_key : unit.",
            "VernacStartTheoremProof",
            "d25044ebc86b23bcbba04f632d42857886ab9a4f"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition edivp := locked_with edivp_key edivp_expanded_def.",
            "VernacDefinition",
            "c2fbfe3caea7d41c855649e07148e8693baeaa5e"
        ],
        [
            "Canonical edivp_unlockable := [unlockable fun edivp].",
            "VernacDefinition",
            "93d20e1b5c4a61280324bf74c4d3206f54803723"
        ],
        [
            "Definition divp p q := ((edivp p q).1).2.",
            "VernacDefinition",
            "fd4a4ff62680db95d6d6f57c1246a4a22c0cb6fd"
        ],
        [
            "Definition modp p q := (edivp p q).2.",
            "VernacDefinition",
            "3faacbd95720c392443245fbdc85829a288b07da"
        ],
        [
            "Definition scalp p q := ((edivp p q).1).1.",
            "VernacDefinition",
            "8fe64448f4185d5ede8b1a89831a717051ad4bd9"
        ],
        [
            "Definition dvdp p q := modp q p == 0.",
            "VernacDefinition",
            "4e258d3ff6cf5e2a1a73e934bdc42300921e9c7a"
        ],
        [
            "Definition eqp p q := (dvdp p q) && (dvdp q p).",
            "VernacDefinition",
            "39a846ca27cdaf6a917863c62c0c07ac47a8d814"
        ],
        [
            "End IDomainPseudoDivisionDefs.",
            "VernacEndSegment",
            "e07406d804ebfe3c2a009c05c29b9da97c000dbc"
        ],
        [
            "Notation \"m %/ d\" := (divp m d) : ring_scope.",
            "VernacNotation",
            "acdb5457fc03e98eed0eb48d934cfd6a151fc84b"
        ],
        [
            "Notation \"m %% d\" := (modp m d) : ring_scope.",
            "VernacNotation",
            "428f58573aadb25b179c87c1eac539e6f1b06599"
        ],
        [
            "Notation \"p %| q\" := (dvdp p q) : ring_scope.",
            "VernacNotation",
            "548250693abbd5f958c04a1400c5f4c146b87097"
        ],
        [
            "Notation \"p %= q\" := (eqp p q) : ring_scope.",
            "VernacNotation",
            "cdecbd29a7b5ce60f4fd3d7b511d6cbde69050ba"
        ],
        [
            "End IdomainDefs.",
            "VernacEndSegment",
            "15177674ba96f0df21e5b6024a3d753f69249993"
        ],
        [
            "Module WeakIdomain.",
            "VernacDefineModule",
            "12c1d0d7991568d610963512da36df331d11fa63"
        ],
        [
            "Import Ring ComRing UnitRing IdomainDefs.",
            "VernacImport",
            "0daccf655273e4980b447acc4bec4c920fe10bfc"
        ],
        [
            "Section WeakTheoryForIDomainPseudoDivision.",
            "VernacBeginSection",
            "64046c4323dea78855572331d80cd3f2d42690ba"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Implicit Type p q r d : {poly R}.",
            "VernacReserve",
            "4537a4ec4aa7eb2c2f069dab32d678c0385d57f9"
        ],
        [
            "Lemma edivp_def p q : edivp p q = (scalp p q, divp p q, modp p q).",
            "VernacStartTheoremProof",
            "d937b598e35c9699fbd9b58663f949df5509876a"
        ],
        [
            "by rewrite /scalp /divp /modp; case: (edivp p q) => [[]] /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma edivp_redivp p q : (lead_coef q \\in GRing.unit) = false -> edivp p q = redivp p q.",
            "VernacStartTheoremProof",
            "05aafe9ac54b9b23c74127e7699154ce7e0c3d14"
        ],
        [
            "by move=> hu; rewrite unlock hu; case: (redivp p q) => [[? ?] ?].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpE p q : p %/ q = if lead_coef q \\in GRing.unit then (lead_coef q)^-(rscalp p q) *: (rdivp p q) else rdivp p q.",
            "VernacStartTheoremProof",
            "9f1de04a49409b137968a0ca9c2439835e971a9e"
        ],
        [
            "by case ulcq: (lead_coef q \\in GRing.unit); rewrite /divp unlock redivp_def ulcq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modpE p q : p %% q = if lead_coef q \\in GRing.unit then (lead_coef q)^-(rscalp p q) *: (rmodp p q) else rmodp p q.",
            "VernacStartTheoremProof",
            "6aed82073a1059f10a55b78ad2dfcadc0b2c2f6b"
        ],
        [
            "by case ulcq: (lead_coef q \\in GRing.unit); rewrite /modp unlock redivp_def ulcq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalpE p q : scalp p q = if lead_coef q \\in GRing.unit then 0%N else rscalp p q.",
            "VernacStartTheoremProof",
            "9b69e3de953f682194e0aabc5951ce0b00e88842"
        ],
        [
            "by case h: (lead_coef q \\in GRing.unit); rewrite /scalp unlock redivp_def h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdpE p q : p %| q = rdvdp p q.",
            "VernacStartTheoremProof",
            "4ec68491c79732ba54c2adf500b96da39eba32c0"
        ],
        [
            "rewrite /dvdp modpE /rdvdp; case ulcq: (lead_coef p \\in GRing.unit)=> //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite -[_ *: _ == 0]size_poly_eq0 size_scale ?size_poly_eq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite invr_eq0 expf_neq0 //; apply: contraTneq ulcq => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lc_expn_scalp_neq0 p q : lead_coef q ^+ scalp p q != 0.",
            "VernacStartTheoremProof",
            "b0416e236a7e0d5d3235f21f4787fe6cc41d9853"
        ],
        [
            "case: (eqVneq q 0) => [->|nzq]; last by rewrite expf_neq0 ?lead_coef_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /scalp 2!unlock /= eqxx lead_coef0 unitr0 /= oner_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lc_expn_scalp_neq0 : core.",
            "VernacHints",
            "cbb6e46932c3ec8f6c4c8d2f73af942282cd7aa9"
        ],
        [
            "Variant edivp_spec (m d : {poly R}) : nat * {poly R} * {poly R} -> bool -> Type := |Redivp_spec k (q r: {poly R}) of (lead_coef d ^+ k) *: m = q * d + r & lead_coef d \\notin GRing.unit & (d != 0 -> size r < size d) : edivp_spec m d (k, q, r) false |Fedivp_spec (q r: {poly R}) of m = q * d + r & (lead_coef d \\in GRing.unit) & (d != 0 -> size r < size d) : edivp_spec m d (0%N, q, r) true.",
            "VernacInductive",
            "3e588ba6506e738fcc43a08ebf9f3be384408f4c"
        ],
        [
            "Lemma edivpP m d : edivp_spec m d (edivp m d) (lead_coef d \\in GRing.unit).",
            "VernacStartTheoremProof",
            "696ab5b2a2d5d9d836e409242fdac1cff6e3e27c"
        ],
        [
            "have hC : GRing.comm d (lead_coef d)%:P by rewrite /GRing.comm mulrC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case ud: (lead_coef d \\in GRing.unit); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite edivp_redivp // redivp_def; constructor; rewrite ?ltn_rmodp // ?ud //.",
            "VernacExtend",
            "47f23aac936ea2be29ac3e11bec38a0cbf04ac13"
        ],
        [
            "by rewrite rdivp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have cdn0: lead_coef d != 0 by apply: contraTneq ud => ->; rewrite unitr0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite unlock ud redivp_def; constructor => //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite -scalerAl -scalerDr -mul_polyC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have hn0 : (lead_coef d ^+ rscalp m d)%:P != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite polyC_eq0; apply: expf_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (mulfI hn0); rewrite !mulrA -exprVn !polyC_exp -exprMn -polyC_mul.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite divrr // expr1n mul1r -polyC_exp mul_polyC rdivp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> dn0; rewrite size_scale ?ltn_rmodp // -exprVn expf_eq0 negb_and.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite invr_eq0 cdn0 orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma edivp_eq d q r : size r < size d -> lead_coef d \\in GRing.unit -> edivp (q * d + r) d = (0%N, q, r).",
            "VernacStartTheoremProof",
            "097f54b0ed0f13f7605f23ee99d6bf33af71febc"
        ],
        [
            "have hC : GRing.comm d (lead_coef d)%:P by apply: mulrC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> hsrd hu; rewrite unlock hu; case et: (redivp _ _) => [[s qq] rr].",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "have cdn0 : lead_coef d != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move: hu; case d0: (lead_coef d == 0) => //; rewrite (eqP d0) unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (et); rewrite RingComRreg.redivp_eq //; last by apply/rregP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite et /=; case=> e1 e2; rewrite -!mul_polyC -!exprVn !polyC_exp.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "suff h x y: x * (lead_coef d ^+ s)%:P = y -> ((lead_coef d)^-1)%:P ^+ s * y = x.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by congr (_, _, _); apply: h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have hn0 : (lead_coef d)%:P ^+ s != 0 by apply: expf_neq0; rewrite polyC_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> hh; apply: (mulfI hn0); rewrite mulrA -exprMn -polyC_mul divrr //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite expr1n mul1r -polyC_exp mulrC; apply: sym_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_eq p q : (lead_coef q ^+ (scalp p q)) *: p = (p %/ q) * q + (p %% q).",
            "VernacStartTheoremProof",
            "06546f0056c7ee7585e9c1cc6af774e84fa54644"
        ],
        [
            "rewrite divpE modpE scalpE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case uq: (lead_coef q \\in GRing.unit); last by rewrite rdivp_eq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite expr0 scale1r; case: (altP (q =P 0)) => [-> | qn0].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite mulr0 add0r lead_coef0 rmodp0 /rscalp unlock eqxx expr0 invr1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have hn0 : (lead_coef q ^+ rscalp p q)%:P != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite polyC_eq0 expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (mulfI hn0).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -scalerAl -scalerDr !mul_polyC scalerA mulrV ?unitrX //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite scale1r rdivp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_eq q p : (q %| p) = ((lead_coef q) ^+ (scalp p q) *: p == (p %/ q) * q).",
            "VernacStartTheoremProof",
            "889ff09d08e1a38f8e1342731bf3f172a0937391"
        ],
        [
            "rewrite dvdpE rdvdp_eq scalpE divpE; case: ifP => ulcq //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite expr0 scale1r; apply/eqP/eqP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -scalerAl; move<-; rewrite scalerA mulVr ?scale1r // unitrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> {2}->; rewrite scalerAl scalerA mulrV ?scale1r // unitrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpK d p : d %| p -> p %/ d * d = ((lead_coef d) ^+ (scalp p d)) *: p.",
            "VernacStartTheoremProof",
            "c0dee280e64848eda85c03f147c477ead966f511"
        ],
        [
            "by rewrite dvdp_eq; move/eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpKC d p : d %| p -> d * (p %/ d) = ((lead_coef d) ^+ (scalp p d)) *: p.",
            "VernacStartTheoremProof",
            "132f7b75b571bd877115f5d518cc359ccb17d3ee"
        ],
        [
            "by move=> ?; rewrite mulrC divpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdpP q p : reflect (exists2 cqq, cqq.1 != 0 & cqq.1 *: p = cqq.2 * q) (q %| p).",
            "VernacStartTheoremProof",
            "0e74823669836a449c3f2d7688961c02e4dee7f7"
        ],
        [
            "rewrite dvdp_eq; apply: (iffP eqP) => [e | [[c qq] cn0 e]].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by exists (lead_coef q ^+ scalp p q, p %/ q) => //=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite -dvdp_eq dvdpE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have Ecc: c%:P != 0 by rewrite polyC_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (eqVneq p 0) => [->|nz_p]; first by rewrite rdvdp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose p1 : {poly R} := lead_coef q ^+ rscalp p q *: qq - c *: (rdivp p q).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have E1: c *: (rmodp p q) = p1 * q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulrDl {1}mulNr -scalerAl -e scalerA mulrC -scalerA -scalerAl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -scalerBr rdivp_eq addrC addKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /dvdp; apply/idPn=> m_nz.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have: p1 * q != 0 by rewrite -E1 -mul_polyC mulf_neq0 // -/(dvdp q p) dvdpE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulf_eq0; case/norP=> p1_nz q_nz; have:= ltn_rmodp p q.",
            "VernacExtend",
            "c7b5d5b8dfbc53121b4f46ce0816fec04d854bef"
        ],
        [
            "rewrite q_nz -(size_scale _ cn0) E1 size_mul //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite polySpred // ltnNge leq_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulpK p q : q != 0 -> p * q %/ q = lead_coef q ^+ scalp (p * q) q *: p.",
            "VernacStartTheoremProof",
            "54aaff77a9027f53b883459f4dd56ebd418457fc"
        ],
        [
            "move=> qn0; move/rregP: (qn0); apply; rewrite -scalerAl divp_eq.",
            "VernacExtend",
            "b1e149be7fb022c9327d5abd9c45eb24e7c31671"
        ],
        [
            "suff -> : (p * q) %% q = 0 by rewrite addr0.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "rewrite modpE RingComRreg.rmodp_mull ?scaler0 ?if_same //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by red; rewrite mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/rregP; rewrite lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulKp p q : q != 0 -> q * p %/ q = lead_coef q ^+ scalp (p * q) q *: p.",
            "VernacStartTheoremProof",
            "4c5f4835d6f980867a98cc49867ff41c8ccd7855"
        ],
        [
            "by move=> nzq; rewrite mulrC; apply: mulpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpp p : p != 0 -> p %/ p = (lead_coef p ^+ scalp p p)%:P.",
            "VernacStartTheoremProof",
            "9d408b956445a8c31760cd101440bf84e93d912a"
        ],
        [
            "move=> np0; have := (divp_eq p p).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "suff -> : p %% p = 0.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite addr0; move/eqP; rewrite -mul_polyC (inj_eq (mulIf np0)); move/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite modpE Ring.rmodpp; last by red; rewrite mulrC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite scaler0 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End WeakTheoryForIDomainPseudoDivision.",
            "VernacEndSegment",
            "bafb38115a337deec514dee733abdd59cb962246"
        ],
        [
            "Hint Resolve lc_expn_scalp_neq0 : core.",
            "VernacHints",
            "cbb6e46932c3ec8f6c4c8d2f73af942282cd7aa9"
        ],
        [
            "End WeakIdomain.",
            "VernacEndSegment",
            "a7ae92c210da18642c82def9816cdb69b4cf8e2d"
        ],
        [
            "Module CommonIdomain.",
            "VernacDefineModule",
            "c5de60ce23c0128dfc508d4402cc788f746e31a6"
        ],
        [
            "Import Ring ComRing UnitRing IdomainDefs WeakIdomain.",
            "VernacImport",
            "641e9992db533aeb8c721b5baabf53bcd128a4f4"
        ],
        [
            "Section IDomainPseudoDivision.",
            "VernacBeginSection",
            "495649da6197644762dc7039c352ac0181f058d3"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Implicit Type p q r d m n : {poly R}.",
            "VernacReserve",
            "d5fb6df216ed82d2d43e99bfb96920e1fd37a368"
        ],
        [
            "Lemma scalp0 p : scalp p 0 = 0%N.",
            "VernacStartTheoremProof",
            "bb075830790db82ee2076f24aba3315d7f4a8317"
        ],
        [
            "by rewrite /scalp unlock lead_coef0 unitr0 unlock eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_small p q : size p < size q -> p %/ q = 0.",
            "VernacStartTheoremProof",
            "66adb1b66a9b2cbf734d580cfbe9e70ce4fbb5b7"
        ],
        [
            "move=> spq; rewrite /divp unlock redivp_def /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: ifP; rewrite rdivp_small // scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_divp p q : (size (p %/ q) <= size p).",
            "VernacStartTheoremProof",
            "a7a68a5804a0ffa56cb44410cad7d845b3066933"
        ],
        [
            "rewrite /divp unlock redivp_def /=; case: ifP=> /=; rewrite ?leq_rdivp //.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "move=> ulcq; rewrite size_scale ?leq_rdivp //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -exprVn expf_neq0 // invr_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: ulcq; case lcq0: (lead_coef q == 0) => //; rewrite (eqP lcq0) unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div0p p : 0 %/ p = 0.",
            "VernacStartTheoremProof",
            "81688d4613e0f13107df0e149f7fca20bbb6416c"
        ],
        [
            "by rewrite /divp unlock redivp_def /=; case: ifP; rewrite rdiv0p // scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp0 p : p %/ 0 = 0.",
            "VernacStartTheoremProof",
            "c5cdb9ac8e20df3d9b2ec3e063f1cae572a8f947"
        ],
        [
            "by rewrite /divp unlock redivp_def /=; case: ifP; rewrite rdivp0 // scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp1 m : m %/ 1 = m.",
            "VernacStartTheoremProof",
            "6e90fbc0382769599ce5366e7e0a10b4272dde38"
        ],
        [
            "by rewrite divpE lead_coefC unitr1 Ring.rdivp1 expr1n invr1 scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp0 p : p %% 0 = p.",
            "VernacStartTheoremProof",
            "7de0b121d111adba1e6a10151f293960c34f0e86"
        ],
        [
            "rewrite /modp unlock redivp_def; case: ifP; rewrite rmodp0 //= lead_coef0.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod0p p : 0 %% p = 0.",
            "VernacStartTheoremProof",
            "3d6c8522ebd2c6ab89cc099b2541feced81094af"
        ],
        [
            "by rewrite /modp unlock redivp_def /=; case: ifP; rewrite rmod0p // scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp1 p : p %% 1 = 0.",
            "VernacStartTheoremProof",
            "ff12d6d5c6c78851a0925e298a40347d61890a12"
        ],
        [
            "by rewrite /modp unlock redivp_def /=; case: ifP; rewrite rmodp1 // scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divp0 divp1 mod0p modp0 modp1 : core.",
            "VernacHints",
            "d447cc615befd18575be149b69db19649cd71641"
        ],
        [
            "Lemma modp_small p q : size p < size q -> p %% q = p.",
            "VernacStartTheoremProof",
            "0ea1801bcfbe63d1f4bc3d4042a5afd119f0966c"
        ],
        [
            "move=> spq; rewrite /modp unlock redivp_def; case: ifP; rewrite rmodp_small //.",
            "VernacExtend",
            "7cd855b46127b5e4e6df75c3fd6587c8d54114e3"
        ],
        [
            "by rewrite /= rscalp_small // expr0 /= invr1 scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modpC p c : c != 0 -> p %% c%:P = 0.",
            "VernacStartTheoremProof",
            "268021fb4d60d3c852571795103ed9a96cc7c80b"
        ],
        [
            "move=> cn0; rewrite /modp unlock redivp_def /=; case: ifP; rewrite ?rmodpC //.",
            "VernacExtend",
            "7cd855b46127b5e4e6df75c3fd6587c8d54114e3"
        ],
        [
            "by rewrite scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_mull p q : (p * q) %% q = 0.",
            "VernacStartTheoremProof",
            "ca3ce243e56e2a2b292a6de0d79c90ec1c3dfc10"
        ],
        [
            "case: (altP (q =P 0)) => [-> | nq0]; first by rewrite modp0 mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have rlcq : (GRing.rreg (lead_coef q)) by apply/rregP; rewrite lead_coef_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have hC : GRing.comm q (lead_coef q)%:P by red; rewrite mulrC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite modpE; case: ifP => ulcq; rewrite RingComRreg.rmodp_mull // scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_mulr d p : (d * p) %% d = 0.",
            "VernacStartTheoremProof",
            "320622bf6351d48f4014f1d7c83ea4893e744fb0"
        ],
        [
            "by rewrite mulrC modp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modpp d : d %% d = 0.",
            "VernacStartTheoremProof",
            "de933f8547121172d00cf5255a9948eb0c178bb0"
        ],
        [
            "by rewrite -{1}(mul1r d) modp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_modp p q : (size (p %% q) < size q) = (q != 0).",
            "VernacStartTheoremProof",
            "f486d23ae75b07fc7583c29a64b83096795db121"
        ],
        [
            "rewrite /modp unlock redivp_def /=; case: ifP=> /=; rewrite ?ltn_rmodp //.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "move=> ulcq; rewrite size_scale ?ltn_rmodp //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -exprVn expf_neq0 // invr_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: ulcq; case lcq0: (lead_coef q == 0) => //; rewrite (eqP lcq0) unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_divpl d q p : d != 0 -> (size (q %/ d) < size p) = (size q < size (p * d)).",
            "VernacStartTheoremProof",
            "774ab9c3e15b80c70b01f6ded5e41b529dcf156c"
        ],
        [
            "move=> dn0; have sd : size d > 0 by rewrite size_poly_gt0 dn0.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have: (lead_coef d) ^+ (scalp q d) != 0 by apply: lc_expn_scalp_neq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/size_scale; move/(_ q)<-; rewrite divp_eq; case quo0 : (q %/ d == 0).",
            "VernacExtend",
            "f48f1c623377785a68e254e8fbe12fab2f7499a5"
        ],
        [
            "rewrite (eqP quo0) mul0r add0r size_poly0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case p0 : (p == 0); first by rewrite (eqP p0) mul0r size_poly0 ltnn ltn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have sp : size p > 0 by rewrite size_poly_gt0 p0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /= size_mul ?p0 // sp; apply: sym_eq; move/prednK:(sp)<-.",
            "VernacExtend",
            "db0a01b21fb79ed548f39f41dad29d2e5f6e6c81"
        ],
        [
            "by rewrite addSn /= ltn_addl // ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_addl; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_mul ?quo0 //; move/negbT: quo0; rewrite -size_poly_gt0.",
            "VernacExtend",
            "3051a4e8bb68166b140398e2c3c2862857447428"
        ],
        [
            "by move/prednK<-; rewrite addSn /= ltn_addl // ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (altP (p =P 0)) => [-> | pn0]; first by rewrite mul0r size_poly0 !ltn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !size_mul ?quo0 //; move/prednK: sd<-; rewrite !addnS ltn_add2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_divpr d p q : d != 0 -> (size p <= size (q %/ d)) = (size (p * d) <= size q).",
            "VernacStartTheoremProof",
            "035f3c796bcd6973eb9ea993217dcbd70050791e"
        ],
        [
            "by move=> dn0; rewrite leqNgt ltn_divpl // -leqNgt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpN0 d p : d != 0 -> (p %/ d != 0) = (size d <= size p).",
            "VernacStartTheoremProof",
            "652d1adbfe57060a47bb4590daec72cb88189c46"
        ],
        [
            "move=> dn0; rewrite -{2}(mul1r d) -leq_divpr // size_polyC oner_eq0 /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite size_poly_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_divp p q : q != 0 -> size (p %/ q) = ((size p) - (size q).-1)%N.",
            "VernacStartTheoremProof",
            "46ade330523fd6dddd976d71a169ce2e1ac16150"
        ],
        [
            "move=> nq0; case: (leqP (size q) (size p)) => sqp; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: (sqp); rewrite -{1}(ltn_predK sqp) ltnS -subn_eq0 divp_small //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by move/eqP->; rewrite size_poly0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (nq0); rewrite -size_poly_gt0 => lt0sq.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move: (sqp); move/(leq_trans lt0sq) => lt0sp.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "move: (lt0sp); rewrite size_poly_gt0=> p0.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move: (divp_eq p q); move/(congr1 (size \\o (@polyseq R)))=> /=.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite size_scale; last by rewrite expf_eq0 lead_coef_eq0 (negPf nq0) andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq (p %/ q) 0) => [-> | qq0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mul0r add0r=> es; move: nq0; rewrite -(ltn_modp p) -es ltnNge sqp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/negP:(qq0); move/negP; rewrite -size_poly_gt0 => lt0qq.",
            "VernacExtend",
            "59558e378570fadf944f573c466a34c761bc9b23"
        ],
        [
            "rewrite size_addl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite size_mul ?qq0 // => ->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/eqP; rewrite -(eqn_add2r ((size q).-1)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite subnK; first by rewrite -subn1 addnBA // subn1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /leq -(subnDl 1%N) !add1n prednK // (@ltn_predK (size q)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addnC subnDA subnn sub0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -[size q]add0n ltn_add2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_mul ?qq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: nq0; rewrite -(ltn_modp p); move/leq_trans; apply; move/prednK: lt0qq<-.",
            "VernacExtend",
            "ba93d25345c824797228d614d13492f3f6895045"
        ],
        [
            "by rewrite addSn /= leq_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_modpN0 p q : q != 0 -> size (p %% q) < size q.",
            "VernacStartTheoremProof",
            "7a08941b7845cc8991beb3d96c2b96384bac5f7e"
        ],
        [
            "by rewrite ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_mod p q : (p %% q) %% q = p %% q.",
            "VernacStartTheoremProof",
            "feb686d281f2045df04bb4cf0185bf481c0ff0c3"
        ],
        [
            "by case: (eqVneq q 0) => [-> | qn0]; rewrite ?modp0 // modp_small ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_modp m d : size (m %% d) <= size m.",
            "VernacStartTheoremProof",
            "f96c71bc2c42be86e16a8ea66816ce4c8cc07602"
        ],
        [
            "rewrite /modp unlock redivp_def /=; case: ifP; rewrite ?leq_rmodp //.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "move=> ud; rewrite size_scale ?leq_rmodp // invr_eq0 expf_neq0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: contraTneq ud => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp0 d : d %| 0.",
            "VernacStartTheoremProof",
            "122d4454cac1505a322834ceed36649a06c0616a"
        ],
        [
            "by rewrite /dvdp mod0p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dvdp0 : core.",
            "VernacHints",
            "1568941efacc87740f1a9d39aac879d6a507e06d"
        ],
        [
            "Lemma dvd0p p : (0 %| p) = (p == 0).",
            "VernacStartTheoremProof",
            "40b9e3b4245f6f1ff3b5a8141145a2ebdbf03b39"
        ],
        [
            "by rewrite /dvdp modp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvd0pP p : reflect (p = 0) (0 %| p).",
            "VernacStartTheoremProof",
            "3a006fd4922171a9caa7a017142d49f7a41586a9"
        ],
        [
            "by apply: (iffP idP); rewrite dvd0p; move/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdpN0 p q : p %| q -> q != 0 -> p != 0.",
            "VernacStartTheoremProof",
            "1180037c5f6c027ae0f2a359e86431998ba164c6"
        ],
        [
            "by move=> pq hq; apply: contraL pq=> /eqP ->; rewrite dvd0p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp1 d : (d %| 1) = ((size d) == 1%N).",
            "VernacStartTheoremProof",
            "2334f8439f6e127d7d01b02dcc1e7c5db7e3b21a"
        ],
        [
            "rewrite /dvdp modpE; case ud: (lead_coef d \\in GRing.unit); last exact: rdvdp1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -size_poly_eq0 size_scale; first by rewrite size_poly_eq0 -rdvdp1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite invr_eq0 expf_neq0 //; apply: contraTneq ud => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvd1p m : 1 %| m.",
            "VernacStartTheoremProof",
            "fbfcc0acda1bbb3372b9c395b09520a7dcab99d6"
        ],
        [
            "by rewrite /dvdp modp1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtNdvdp p q : p != 0 -> size p < size q -> (q %| p) = false.",
            "VernacStartTheoremProof",
            "de98c2a1b3f3b8ff63dfa24752e8b752e35e272e"
        ],
        [
            "by move=> nn0 hs; rewrite /dvdp; rewrite (modp_small hs); apply: negPf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_eq0P p q : reflect (p %% q = 0) (q %| p).",
            "VernacStartTheoremProof",
            "f9b6eb2bcbe335d70b4888105f4de71b7ad6ab2e"
        ],
        [
            "exact: (iffP eqP).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_eq0 p q : (q %| p) -> p %% q = 0.",
            "VernacStartTheoremProof",
            "d580d4b5395eb0455b4be85eec48a00be0d052ee"
        ],
        [
            "by move/modp_eq0P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_divpl d p q : d %| p -> (size (p %/ d) <= size q) = (size p <= size (q * d)).",
            "VernacStartTheoremProof",
            "bd627a7717a591f79f09478fe16b9b23eb30133c"
        ],
        [
            "case: (eqVneq d 0) => [-> | nd0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by move/dvd0pP->; rewrite divp0 size_poly0 !leq0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> hd; rewrite leq_eqVlt ltn_divpl // (leq_eqVlt (size p)).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case lhs: (size p < size (q * d)); rewrite ?orbT ?orbF //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "have: (lead_coef d) ^+ (scalp p d) != 0 by rewrite expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/size_scale; move/(_ p)<-; rewrite divp_eq.",
            "VernacExtend",
            "83ceb7524b885f8a572ef55cc7b4297da9bb78a5"
        ],
        [
            "move/modp_eq0P: hd->; rewrite addr0; case: (altP (p %/ d =P 0))=> [-> | quon0].",
            "VernacExtend",
            "da193758590dbaf126e1247765c091fa7d3c58ee"
        ],
        [
            "rewrite mul0r size_poly0 eq_sym (eq_sym 0%N) size_poly_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (altP (q =P 0)) => [-> | nq0]; first by rewrite mul0r size_poly0 eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite size_poly_eq0 mulf_eq0 (negPf nq0) (negPf nd0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (altP (q =P 0)) => [-> | nq0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mul0r size_poly0 !size_poly_eq0 mulf_eq0 (negPf nd0) orbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !size_mul //; move: nd0; rewrite -size_poly_gt0; move/prednK<-.",
            "VernacExtend",
            "45d4f42da31c4b3bbf8e33ee95b32d2f172cd3f3"
        ],
        [
            "by rewrite !addnS /= eqn_add2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_leq p q : q != 0 -> p %| q -> size p <= size q.",
            "VernacStartTheoremProof",
            "3074b44ef769154d25dca9b26070f647cd78aa06"
        ],
        [
            "move=> nq0 /modp_eq0P => rpq; case: (ltnP (size p) (size q)).",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "by move/ltnW->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite leq_eqVlt; case/orP; first by move/eqP->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/modp_small; rewrite rpq => h; move: nq0; rewrite h eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_dvdp c quo q p : c != 0 -> c *: p = quo * q -> q %| p.",
            "VernacStartTheoremProof",
            "083a0f03f1453ad347fc1b175df364dbba90bbd7"
        ],
        [
            "move=> cn0; case: (eqVneq p 0) => [->|nz_quo def_quo] //.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "pose p1 : {poly R} := lead_coef q ^+ scalp p q *: quo - c *: (p %/ q).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have E1: c *: (p %% q) = p1 * q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulrDl {1}mulNr-scalerAl -def_quo scalerA mulrC -scalerA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -scalerAl -scalerBr divp_eq addrAC subrr add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /dvdp; apply/idPn=> m_nz.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have: p1 * q != 0 by rewrite -E1 -mul_polyC mulf_neq0 // polyC_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulf_eq0; case/norP=> p1_nz q_nz.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have := (ltn_modp p q); rewrite q_nz -(size_scale (p %% q) cn0) E1.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite size_mul // polySpred // ltnNge leq_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdpp d : d %| d.",
            "VernacStartTheoremProof",
            "4bb91500444ff301e84de782197b2e74ad6d639f"
        ],
        [
            "by rewrite /dvdp modpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dvdpp : core.",
            "VernacHints",
            "62e7030406d2c91cca5eb3e045598a4fb6503e07"
        ],
        [
            "Lemma divp_dvd p q : (p %| q) -> ((q %/ p) %| q).",
            "VernacStartTheoremProof",
            "927896affaaa5ea30a7ed67139205934158e59f2"
        ],
        [
            "case: (eqVneq p 0) => [-> | np0]; first by rewrite divp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite dvdp_eq => /eqP h.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: (@eq_dvdp ((lead_coef p)^+ (scalp q p)) p); last by rewrite mulrC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_mull m d n : d %| n -> d %| m * n.",
            "VernacStartTheoremProof",
            "6be7536b17790eb8a49a933acb0f9faf4a793184"
        ],
        [
            "case: (eqVneq d 0) => [-> |dn0]; first by move/dvd0pP->; rewrite mulr0 dvdpp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite dvdp_eq => /eqP e.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: (@eq_dvdp (lead_coef d ^+ scalp n d) (m * (n %/ d))).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite scalerAr e mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_mulr n d m : d %| m -> d %| m * n.",
            "VernacStartTheoremProof",
            "793c3dfb4add3ecdf687ffb22800682a0928e79b"
        ],
        [
            "by move=> hdm; rewrite mulrC dvdp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dvdp_mull dvdp_mulr : core.",
            "VernacHints",
            "783750c3a0a92b54692421be2784c4fd96f86ce9"
        ],
        [
            "Lemma dvdp_mul d1 d2 m1 m2 : d1 %| m1 -> d2 %| m2 -> d1 * d2 %| m1 * m2.",
            "VernacStartTheoremProof",
            "ba5681b1020ab9cfc4b83ab3d2fb09b470b51d2b"
        ],
        [
            "case: (eqVneq d1 0) => [-> |d1n0]; first by move/dvd0pP->; rewrite !mul0r dvdpp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq d2 0) => [-> |d2n0]; first by move=> _ /dvd0pP ->; rewrite !mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite dvdp_eq; set c1 := _ ^+ _; set q1 := _ %/ _; move/eqP=> Hq1.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "rewrite dvdp_eq; set c2 := _ ^+ _; set q2 := _ %/ _; move/eqP=> Hq2.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "apply: (@eq_dvdp (c1 * c2) (q1 * q2)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite mulf_neq0 // expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -scalerA scalerAr scalerAl Hq1 Hq2 -!mulrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [d1 * (q2 * _)]mulrCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_addr m d n : d %| m -> (d %| m + n) = (d %| n).",
            "VernacStartTheoremProof",
            "0951687cd304a414d25fcecf00789c3a87c1140d"
        ],
        [
            "case: (altP (d =P 0)) => [-> | dn0]; first by move/dvd0pP->; rewrite add0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite dvdp_eq; set c1 := _ ^+ _; set q1 := _ %/ _; move/eqP=> Eq1.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "apply/idP/idP; rewrite dvdp_eq; set c2 := _ ^+ _; set q2 := _ %/ _.",
            "VernacExtend",
            "f787787e1a74e103612b4f455a7f3095b1fef3e8"
        ],
        [
            "have sn0 : c1 * c2 != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !mulf_neq0 // expf_eq0 lead_coef_eq0 (negPf dn0) andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=> Eq2; apply: (@eq_dvdp _ (c1 *: q2 - c2 *: q1) _ _ sn0).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite mulrDl -scaleNr -!scalerAl -Eq1 -Eq2 !scalerA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulNr mulrC scaleNr -scalerBr addrC addKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sn0 : c1 * c2 != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !mulf_neq0 // expf_eq0 lead_coef_eq0 (negPf dn0) andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=> Eq2; apply: (@eq_dvdp _ (c1 *: q2 + c2 *: q1) _ _ sn0).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite mulrDl -!scalerAl -Eq1 -Eq2 !scalerA mulrC addrC scalerDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_addl n d m : d %| n -> (d %| m + n) = (d %| m).",
            "VernacStartTheoremProof",
            "0c54dceab7b9d65c63f6cc4e632f640ae77eaf77"
        ],
        [
            "by rewrite addrC; apply: dvdp_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_add d m n : d %| m -> d %| n -> d %| m + n.",
            "VernacStartTheoremProof",
            "6c7449f76c06ed5af6018e197ff44fbaae462563"
        ],
        [
            "by move/dvdp_addr->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_add_eq d m n : d %| m + n -> (d %| m) = (d %| n).",
            "VernacStartTheoremProof",
            "04bfe0e1c465291510a3595ee7c8c3ab37bf29ef"
        ],
        [
            "by move=> ?; apply/idP/idP; [move/dvdp_addr <-| move/dvdp_addl <-].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_subr d m n : d %| m -> (d %| m - n) = (d %| n).",
            "VernacStartTheoremProof",
            "9eb761d254e7a44e983038aa45b5b2eabab1c516"
        ],
        [
            "by move=> ?; apply dvdp_add_eq; rewrite -addrA addNr simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_subl d m n : d %| n -> (d %| m - n) = (d %| m).",
            "VernacStartTheoremProof",
            "dc2030aa322f106bac0c810ef8569a8c05b6b039"
        ],
        [
            "by move/dvdp_addl<-; rewrite subrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_sub d m n : d %| m -> d %| n -> d %| m - n.",
            "VernacStartTheoremProof",
            "96df13c8087e4dd4fae42bd2593944a1a442802b"
        ],
        [
            "by move=> *; rewrite dvdp_subl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_mod d n m : d %| n -> (d %| m) = (d %| m %% n).",
            "VernacStartTheoremProof",
            "c2cec5c91766bc1cb50dfc6667e6878cf3a7ea71"
        ],
        [
            "case: (altP (n =P 0)) => [-> | nn0]; first by rewrite modp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (altP (d =P 0)) => [-> | dn0]; first by move/dvd0pP->; rewrite modp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite dvdp_eq; set c1 := _ ^+ _; set q1 := _ %/ _; move/eqP=> Eq1.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "apply/idP/idP; rewrite dvdp_eq; set c2 := _ ^+ _; set q2 := _ %/ _.",
            "VernacExtend",
            "f787787e1a74e103612b4f455a7f3095b1fef3e8"
        ],
        [
            "have sn0 : c1 * c2 != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !mulf_neq0 // expf_eq0 lead_coef_eq0 (negPf dn0) andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose quo := (c1 * lead_coef n ^+ scalp m n) *: q2 - c2 *: (m %/ n) * q1.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "move/eqP=> Eq2; apply: (@eq_dvdp _ quo _ _ sn0).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite mulrDl mulNr -!scalerAl -!mulrA -Eq1 -Eq2 -scalerAr !scalerA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulrC [_ * c2]mulrC mulrA -[((_ * _) * _) *: _]scalerA -scalerBr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite divp_eq addrC addKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sn0 : c1 * c2 * lead_coef n ^+ scalp m n != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !mulf_neq0 // expf_eq0 lead_coef_eq0 ?(negPf dn0) ?andbF //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (negPf nn0) andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=> Eq2; apply: (@eq_dvdp _ (c2 *: (m %/ n) * q1 + c1 *: q2) _ _ sn0).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite -scalerA divp_eq scalerDr -!scalerA Eq2 scalerAl scalerAr Eq1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite scalerAl mulrDl mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_trans : transitive (@dvdp R).",
            "VernacStartTheoremProof",
            "158e42645c8d714151c4e4af2931705100f4b653"
        ],
        [
            "move=> n d m.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (altP (d =P 0)) => [-> | dn0]; first by move/dvd0pP->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (altP (n =P 0)) => [-> | nn0]; first by move=> _ /dvd0pP ->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite dvdp_eq; set c1 := _ ^+ _; set q1 := _ %/ _; move/eqP=> Hq1.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "rewrite dvdp_eq; set c2 := _ ^+ _; set q2 := _ %/ _; move/eqP=> Hq2.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "have sn0 : c1 * c2 != 0 by rewrite mulf_neq0 // expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: (@eq_dvdp _ (q2 * q1) _ _ sn0); rewrite -scalerA Hq2 scalerAr Hq1 mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_mulIl p q : p %| p * q.",
            "VernacStartTheoremProof",
            "a321ec8fe1d40f785d42248d4ea1ef0a7af908d4"
        ],
        [
            "by apply: dvdp_mulr; apply: dvdpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_mulIr p q : q %| p * q.",
            "VernacStartTheoremProof",
            "508ad6ed3e738740170a602d4d60fdba97e4ce52"
        ],
        [
            "by apply: dvdp_mull; apply: dvdpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_mul2r r p q : r != 0 -> (p * r %| q * r) = (p %| q).",
            "VernacStartTheoremProof",
            "162d7e1a95f0fbc199c6621dd0e842c5b8ea1d87"
        ],
        [
            "move=> nzr.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (eqVneq p 0) => [-> | pn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mul0r !dvd0p mulf_eq0 (negPf nzr) orbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite mul0r !dvdp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/idP/idP; last by move=> ?; rewrite dvdp_mul ?dvdpp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite dvdp_eq; set c := _ ^+ _; set x := _ %/ _; move/eqP=> Hx.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "apply: (@eq_dvdp c x).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite expf_neq0 // lead_coef_eq0 mulf_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (GRing.mulIf nzr); rewrite -GRing.mulrA -GRing.scalerAl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_mul2l r p q: r != 0 -> (r * p %| r * q) = (p %| q).",
            "VernacStartTheoremProof",
            "b73f241a6b6c0fb0d9e8c7e1148870fd93af537a"
        ],
        [
            "by rewrite ![r * _]GRing.mulrC; apply: dvdp_mul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_divpr d p q : d %| q -> (size p < size (q %/ d)) = (size (p * d) < size q).",
            "VernacStartTheoremProof",
            "78ee018540ff90019a40bf0de0b746e1127a58e9"
        ],
        [
            "by move=> dv_d_q; rewrite !ltnNge leq_divpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_exp d k p : 0 < k -> d %| p -> d %| (p ^+ k).",
            "VernacStartTheoremProof",
            "18d90a2d4c963d37998da9f1a9d96427797daf58"
        ],
        [
            "by case: k => // k _ d_dv_m; rewrite exprS dvdp_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_exp2l d k l : k <= l -> d ^+ k %| d ^+ l.",
            "VernacStartTheoremProof",
            "0242875ac0b49b337dd25a8f07a658192dfc0107"
        ],
        [
            "by move/subnK <-; rewrite exprD dvdp_mull // ?lead_coef_exp ?unitrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_Pexp2l d k l : 1 < size d -> (d ^+ k %| d ^+ l) = (k <= l).",
            "VernacStartTheoremProof",
            "789156de130ab5e041d8fa636aedce1202cfd803"
        ],
        [
            "move=> sd; case: leqP => [|gt_n_m]; first exact: dvdp_exp2l.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have dn0 : d != 0 by rewrite -size_poly_gt0; apply: ltn_trans sd.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite gtNdvdp ?expf_neq0 // polySpred ?expf_neq0 // size_exp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [size (d ^+ k)]polySpred ?expf_neq0 // size_exp ltnS ltn_mul2l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: sd; rewrite -subn_gt0 subn1; move->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_exp2r p q k : p %| q -> p ^+ k %| q ^+ k.",
            "VernacStartTheoremProof",
            "bb54d6b9428cc0e0d36415924081098134b2a231"
        ],
        [
            "case: (eqVneq p 0) => [-> | pn0]; first by move/dvd0pP->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite dvdp_eq; set c := _ ^+ _; set t := _ %/ _; move/eqP=> e.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "apply: (@eq_dvdp (c ^+ k) (t ^+ k)); first by rewrite !expf_neq0 ?lead_coef_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -exprMn -exprZn; congr (_ ^+ k).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_exp_sub p q k l: p != 0 -> (p ^+ k %| q * p ^+ l) = (p ^+ (k - l) %| q).",
            "VernacStartTheoremProof",
            "2165ab8f43b41e1a7d10816c581e8ec015a34aa8"
        ],
        [
            "move=> pn0; case: (leqP k l)=> hkl.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "move: (hkl); rewrite -subn_eq0; move/eqP->; rewrite expr0 dvd1p.",
            "VernacExtend",
            "1c5bed44e136789e69cceefb9ad9e08bc6473cf7"
        ],
        [
            "apply: dvdp_mull; case: (ltnP 1%N (size p)) => sp.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "by rewrite dvdp_Pexp2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: sp; case esp: (size p) => [|sp].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by move/eqP: esp; rewrite size_poly_eq0 (negPf pn0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ltnS leqn0; move/eqP=> sp0; move/eqP: esp; rewrite sp0.",
            "VernacExtend",
            "a2d8dd52a7002ea77bccbdbdac9eb88c7ea43cab"
        ],
        [
            "by case/size_poly1P => c cn0 ->; move/subnK: hkl<-; rewrite exprD dvdp_mulIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}[k](@subnK l) 1?ltnW// exprD dvdp_mul2r//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: l {hkl}=> [|l ihl]; first by rewrite expr0 oner_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS mulf_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_XsubCl p x : ('X - x%:P) %| p = root p x.",
            "VernacStartTheoremProof",
            "8b2784cd0b2f6de0a653b0812a504bce52fec2be"
        ],
        [
            "by rewrite dvdpE; apply: Ring.rdvdp_XsubCl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyXsubCP p x : reflect (p.[x] = 0) (('X - x%:P) %| p).",
            "VernacStartTheoremProof",
            "f8b07de72f4c8d84094a86107c0e89f07fa25951"
        ],
        [
            "by rewrite dvdpE; apply: Ring.polyXsubCP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_div_XsubC p c : (p == (p %/ ('X - c%:P)) * ('X - c%:P)) = ('X - c%:P %| p).",
            "VernacStartTheoremProof",
            "c0a4e1ef847578065705ddc5720f9367aca3e6ad"
        ],
        [
            "by rewrite dvdp_eq lead_coefXsubC expr1n scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_factor_theorem p x : root p x = (('X - x%:P) %| p).",
            "VernacStartTheoremProof",
            "cba2d904799b599d4fefc8fb36e48a5e72a51d0f"
        ],
        [
            "by rewrite dvdp_XsubCl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniq_roots_dvdp p rs : all (root p) rs -> uniq_roots rs -> (\\prod_(z <- rs) ('X - z%:P)) %| p.",
            "VernacStartTheoremProof",
            "8fed065aa427dad9db330af8c717d6ac06abd517"
        ],
        [
            "move=> rrs; case/(uniq_roots_prod_XsubC rrs)=> q ->.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by apply: dvdp_mull; rewrite // (eqP (monic_prod_XsubC _)) unitr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_bigmul : forall x (ps : seq {poly R}), ~~root (\\big[*%R/1]_(p <- ps) p) x = all (fun p => ~~ root p x) ps.",
            "VernacStartTheoremProof",
            "4aa9fd132942cebcd09612caf8d5a9d98236d17c"
        ],
        [
            "move=> x; elim; first by rewrite big_nil root1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> p ps ihp; rewrite big_cons /= rootM negb_or ihp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqpP m n : reflect (exists2 c12, (c12.1 != 0) && (c12.2 != 0) & c12.1 *: m = c12.2 *: n) (m %= n).",
            "VernacStartTheoremProof",
            "7758ef21c208a86a06f3cbf3fd4af4f29247b3b9"
        ],
        [
            "apply: (iffP idP) => [| [[c1 c2]/andP[nz_c1 nz_c2 eq_cmn]]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /eqp (@eq_dvdp c2 c1%:P) -?eq_cmn ?mul_polyC // (@eq_dvdp c1 c2%:P) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eq_cmn mul_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq m 0) => [-> | m_nz].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case/andP => /dvd0pP -> _; exists (1, 1); rewrite ?scaler0 // oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq n 0) => [-> | n_nz].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case/andP => _ /dvd0pP ->; exists (1, 1); rewrite ?scaler0 // oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/andP; rewrite !dvdp_eq; set c1 := _ ^+ _; set c2 := _ ^+ _.",
            "VernacExtend",
            "668bb8c9e3e08249693355e13881fabc92c33514"
        ],
        [
            "set q1 := _ %/ _; set q2 := _ %/ _; move/eqP => Hq1 /eqP Hq2; have Hc1 : c1 != 0 by rewrite expf_eq0 lead_coef_eq0 negb_and m_nz orbT.",
            "VernacExtend",
            "b54a875d451a222b670b12bbdcb56f3ce4ed6142"
        ],
        [
            "have Hc2 : c2 != 0 by rewrite expf_eq0 lead_coef_eq0 negb_and n_nz orbT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_q12: q1 * q2 = (c1 * c2)%:P.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (mulIf m_nz); rewrite mulrAC mulrC -Hq1 -scalerAr -Hq2 scalerA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -mul_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: q1 * q2 != 0 by rewrite def_q12 -size_poly_eq0 size_polyC mulf_neq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulf_eq0; case/norP=> nz_q1 nz_q2.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have: size q2 <= 1%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= size_mul nz_q1 nz_q2; rewrite def_q12 size_polyC mulf_neq0 //=.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite polySpred // => ->; rewrite leq_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite leq_eqVlt ltnS leqn0 size_poly_eq0 (negPf nz_q2) orbF.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/size_poly1P=> c cn0 cqe; exists (c2, c); first by rewrite Hc2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite Hq2 -mul_polyC -cqe.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_eq p q: p %= q -> (lead_coef q) *: p = (lead_coef p) *: q.",
            "VernacStartTheoremProof",
            "86af91be403c33931778867987d459ab1ecac15b"
        ],
        [
            "move=> /eqpP [[c1 c2] /= /andP [nz_c1 nz_c2]] eq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have/(congr1 lead_coef) := eq; rewrite !lead_coefZ.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "move=> eqC; apply/(@mulfI _ c2%:P); rewrite ?polyC_eq0 //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite !mul_polyC scalerA -eqC mulrC -scalerA eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !scalerA mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqpxx : reflexive (@eqp R).",
            "VernacStartTheoremProof",
            "a4924dd4e7040758dbcbf84fbcbfbe52d0e83ff3"
        ],
        [
            "by move=> p; rewrite /eqp dvdpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eqpxx : core.",
            "VernacHints",
            "709a5eaa3751cc91840a9f0059e436c1f2746948"
        ],
        [
            "Lemma eqp_sym : symmetric (@eqp R).",
            "VernacStartTheoremProof",
            "742734097c693355fe404ccedf1a835d315fb7f8"
        ],
        [
            "by move=> p q; rewrite /eqp andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_trans : transitive (@eqp R).",
            "VernacStartTheoremProof",
            "49ed1f783258b6d4dd84a19c421aa2b07a58b4d0"
        ],
        [
            "move=> p q r; case/andP=> Dp pD; case/andP=> Dq qD.",
            "VernacExtend",
            "fd777b019349da348ceeb72ef62c9f8d707a4c0b"
        ],
        [
            "by rewrite /eqp (dvdp_trans Dp) // (dvdp_trans qD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_ltrans : left_transitive (@eqp R).",
            "VernacStartTheoremProof",
            "966aba326578556c50b4eab02ae098368a828f5c"
        ],
        [
            "move=> p q r pq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply/idP/idP=> e; apply: eqp_trans e; rewrite // eqp_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_rtrans : right_transitive (@eqp R).",
            "VernacStartTheoremProof",
            "67c09db89c7e9822cc1dbc1e46e247e0a20eb185"
        ],
        [
            "by move=> x y xy z; rewrite eqp_sym (eqp_ltrans xy) eqp_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp0 : forall p, (p %= 0) = (p == 0).",
            "VernacStartTheoremProof",
            "d449c1e43537472caff32c282292f1293eb1caec"
        ],
        [
            "move=> p; case: eqP; move/eqP=> Ep; first by rewrite (eqP Ep) eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/negP; case/andP=> _; rewrite /dvdp modp0 (negPf Ep).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp01 : 0 %= (1 : {poly R}) = false.",
            "VernacStartTheoremProof",
            "e436af7fca78da792bf1f10406ed1498934b2d21"
        ],
        [
            "case abs : (0 %= 1) => //; case/eqpP: abs=> [[c1 c2]] /andP [c1n0 c2n0] /=.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite scaler0 alg_polyC; move/eqP; rewrite eq_sym polyC_eq0 (negbTE c2n0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_scale p c : c != 0 -> c *: p %= p.",
            "VernacStartTheoremProof",
            "0a21e6287e559edeb3ddbcc6a2da8a03bebeb032"
        ],
        [
            "move=> c0; apply/eqpP; exists (1, c); first by rewrite c0 oner_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_size p q : p %= q -> size p = size q.",
            "VernacStartTheoremProof",
            "b42a0f7fb0dd33ac6192fc62c8f5c4daaff3b5b2"
        ],
        [
            "case: (q =P 0); move/eqP => Eq; first by rewrite (eqP Eq) eqp0; move/eqP->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite eqp_sym; case: (p =P 0); move/eqP => Ep.",
            "VernacExtend",
            "f0b646e3773567ccd6c4a75851abf71dbc3ffe2d"
        ],
        [
            "by rewrite (eqP Ep) eqp0; move/eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/andP => Dp Dq; apply: anti_leq; rewrite !dvdp_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly_eq1 p : (size p == 1%N) = (p %= 1).",
            "VernacStartTheoremProof",
            "7983885dcaf8e4dd5231b63e3091a112633fa41f"
        ],
        [
            "apply/size_poly1P/idP=> [[c cn0 ep] |].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/eqpP; exists (1, c); rewrite ?oner_eq0 // alg_polyC scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/eqp_size; rewrite size_poly1; move/eqP; move/size_poly1P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyXsubC_eqp1 (x : R) : ('X - x%:P %= 1) = false.",
            "VernacStartTheoremProof",
            "dd2bd8e0991079ee231447fbdf6d1757bbab8e35"
        ],
        [
            "by rewrite -size_poly_eq1 size_XsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_eqp1 p q : p %| q -> q %= 1 -> p %= 1.",
            "VernacStartTheoremProof",
            "cc9a275bd5cb0609c582b9a8eb672b77dab70af7"
        ],
        [
            "move=> dpq hq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have sizeq : size q == 1%N by rewrite size_poly_eq1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have n0q : q != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case abs: (q == 0) => //; move: hq; rewrite (eqP abs) eqp01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -size_poly_eq1 eqn_leq -{1}(eqP sizeq) dvdp_leq //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case p0 : (size p == 0%N); last by rewrite neq0_lt0n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move: dpq; rewrite size_poly_eq0 in p0; rewrite (eqP p0) dvd0p (negbTE n0q).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_dvdr q p d: p %= q -> d %| p = (d %| q).",
            "VernacStartTheoremProof",
            "d85668a830ddb1c1ee0e79ee31f4def7dc158025"
        ],
        [
            "suff Hmn m n: m %= n -> (d %| m) -> (d %| n).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by move=> mn; apply/idP/idP; apply: Hmn=> //; rewrite eqp_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /eqp; case/andP=> pq qp dp; apply: (dvdp_trans dp).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_dvdl d2 d1 p : d1 %= d2 -> d1 %| p = (d2 %| p).",
            "VernacStartTheoremProof",
            "20d1e9d551ea9e52911559186c9a2cbcf6bcf1ca"
        ],
        [
            "suff Hmn m n: m %= n -> (m %| p) -> (n %| p).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by move=> ?; apply/idP/idP; apply: Hmn; rewrite // eqp_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /eqp; case/andP=> dd' d'd dp; apply: (dvdp_trans d'd).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_scaler c m n : c != 0 -> m %| c *: n = (m %| n).",
            "VernacStartTheoremProof",
            "4847b2cd91990a86618285c1087e499d4862b7df"
        ],
        [
            "by move=> cn0; apply: eqp_dvdr; apply: eqp_scale.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_scalel c m n : c != 0 -> (c *: m %| n) = (m %| n).",
            "VernacStartTheoremProof",
            "9e7464cde091e79beec8ec330de84c9a0330867f"
        ],
        [
            "by move=> cn0; apply: eqp_dvdl; apply: eqp_scale.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_opp d p : d %| (- p) = (d %| p).",
            "VernacStartTheoremProof",
            "af979d6e97deca7a5761fb36eed2cba8259baadc"
        ],
        [
            "by apply: eqp_dvdr; rewrite -scaleN1r eqp_scale ?oppr_eq0 ?oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_mul2r r p q : r != 0 -> (p * r %= q * r) = (p %= q).",
            "VernacStartTheoremProof",
            "fa041d4373b94395f4515225ba1343e94a8bc974"
        ],
        [
            "by move=> nz_r; rewrite /eqp !dvdp_mul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_mul2l r p q: r != 0 -> (r * p %= r * q) = (p %= q).",
            "VernacStartTheoremProof",
            "793e0c744d23a763822dbd527a08fef4d73b2ffc"
        ],
        [
            "by move=> nz_r; rewrite /eqp !dvdp_mul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_mull r p q: (q %= r) -> (p * q %= p * r).",
            "VernacStartTheoremProof",
            "f27389ce19e137ad1201694f461227f1294bbada"
        ],
        [
            "case/eqpP=> [[c d]] /andP [c0 d0 e]; apply/eqpP; exists (c, d); rewrite ?c0 //.",
            "VernacExtend",
            "3dab1f2aa3b54de0becb7cd4ca16f5b41088b5c2"
        ],
        [
            "by rewrite scalerAr e -scalerAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_mulr q p r : (p %= q) -> (p * r %= q * r).",
            "VernacStartTheoremProof",
            "93781b26b54614ed204def8792478d543298a633"
        ],
        [
            "by move=> epq; rewrite ![_ * r]mulrC eqp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_exp p q k : p %= q -> p ^+ k %= q ^+ k.",
            "VernacStartTheoremProof",
            "0fb21e81cf94c0aa1f8bd2bcc2a62b59207b0577"
        ],
        [
            "move=> pq; elim: k=> [|k ihk]; first by rewrite !expr0 eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !exprS (@eqp_trans (q * p ^+ k)) // (eqp_mulr, eqp_mull).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyC_eqp1 (c : R) : (c%:P %= 1) = (c != 0).",
            "VernacStartTheoremProof",
            "a001b9488b72a5d60fd49045eac4018c1fd939d4"
        ],
        [
            "apply/eqpP/idP => [[[x y]] |nc0] /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case c0: (c == 0); rewrite // alg_polyC (eqP c0) scaler0.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case/andP=> _ /=; move/negbTE<-; move/eqP; rewrite eq_sym polyC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (1, c); first by rewrite nc0 /= oner_neq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite alg_polyC scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdUp d p: d %= 1 -> d %| p.",
            "VernacStartTheoremProof",
            "55ea353e1b02e2ffc07f27081c52a0dd4a26daf4"
        ],
        [
            "by move/eqp_dvdl->; rewrite dvd1p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_size_eqp p q : p %| q -> size p == size q = (p %= q).",
            "VernacStartTheoremProof",
            "302e38b44e3e04fd7c5a278a09dbbd0c8a0f4e91"
        ],
        [
            "move=> pq; apply/idP/idP; last by move/eqp_size->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case (q =P 0)=> [->|]; [|move/eqP => Hq].",
            "VernacExtend",
            "62072245a2d8f2b4c710b130e274204ec2076f54"
        ],
        [
            "by rewrite size_poly0 size_poly_eq0; move/eqP->; rewrite eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case (p =P 0)=> [->|]; [|move/eqP => Hp].",
            "VernacExtend",
            "62072245a2d8f2b4c710b130e274204ec2076f54"
        ],
        [
            "by rewrite size_poly0 eq_sym size_poly_eq0; move/eqP->; rewrite eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: pq; rewrite dvdp_eq; set c := _ ^+ _; set x := _ %/ _; move/eqP=> eqpq.",
            "VernacExtend",
            "ba9da30135320950a56c136338967173a9c3f995"
        ],
        [
            "move: (eqpq); move/(congr1 (size \\o (@polyseq R)))=> /=.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "have cn0 : c != 0 by rewrite expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (@eqp_size _ q); last by apply: eqp_scale.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_mul ?p0 // => [-> HH|]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP=> HH; move: eqpq; rewrite HH mul0r.",
            "VernacExtend",
            "892743169f9b7a8d1078a131ab1583767aafbf69"
        ],
        [
            "by move/eqP; rewrite scale_poly_eq0 (negPf Hq) (negPf cn0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff: size x == 1%N.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case/size_poly1P=> y H1y H2y.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply/eqpP; exists (y, c); rewrite ?H1y // eqpq H2y mul_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (size p) HH (size_poly_eq0 p)=> [|n]; first by case: eqP Hp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite addnS -add1n eqn_add2r; move/eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_root p q : p %= q -> root p =1 root q.",
            "VernacStartTheoremProof",
            "199eef28eb1c9bf0d9d029af8a10f64b8e700819"
        ],
        [
            "move/eqpP=> [[c d]] /andP [c0 d0 e] x; move/negPf:c0=>c0; move/negPf:d0=>d0.",
            "VernacExtend",
            "e0ac37cc297cc328730d6b7eadc79537d4e2c654"
        ],
        [
            "rewrite rootE -[_==_]orFb -c0 -mulf_eq0 -hornerZ e hornerZ.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulf_eq0 d0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_rmod_mod p q : rmodp p q %= modp p q.",
            "VernacStartTheoremProof",
            "19b6a2b45a587de52e1958c8611c61047828afc2"
        ],
        [
            "rewrite modpE eqp_sym; case: ifP => ulcq //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply: eqp_scale; rewrite invr_eq0 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: expf_neq0; apply: contraTneq ulcq => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_rdiv_div p q : rdivp p q %= divp p q.",
            "VernacStartTheoremProof",
            "add252eaa766c2cd4945b0efbe7a0f5bfb6474e6"
        ],
        [
            "rewrite divpE eqp_sym; case: ifP=> ulcq //; apply: eqp_scale; rewrite invr_eq0 //.",
            "VernacExtend",
            "4d8ad0c5bfdce14e3dba8ce7548f739db16606e9"
        ],
        [
            "by apply: expf_neq0; apply: contraTneq ulcq => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvd_eqp_divl d p q (dvd_dp : d %| q) (eq_pq : p %= q) : p %/ d %= q %/ d.",
            "VernacStartTheoremProof",
            "3c4acd494e060219b56b1d555c2310bd266ad65b"
        ],
        [
            "case: (eqVneq q 0) eq_pq=> [->|q_neq0]; first by rewrite eqp0=> /eqP->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have d_neq0: d != 0 by apply: contraL dvd_dp=> /eqP->; rewrite dvd0p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> eq_pq; rewrite -(@eqp_mul2r d) // !divpK // ?(eqp_dvdr _ eq_pq) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite (eqp_ltrans (eqp_scale _ _)) ?lc_expn_scalp_neq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (eqp_rtrans (eqp_scale _ _)) ?lc_expn_scalp_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gcdp_rec p q := let: (p1, q1) := if size p < size q then (q, p) else (p, q) in if p1 == 0 then q1 else let fix loop (n : nat) (pp qq : {poly R}) {struct n} := let rr := modp pp qq in if rr == 0 then qq else if n is n1.+1 then loop n1 qq rr else rr in loop (size p1) p1 q1.",
            "VernacDefinition",
            "79089ae88195110a6cac9672c5cf3d477b9386df"
        ],
        [
            "Definition gcdp := nosimpl gcdp_rec.",
            "VernacDefinition",
            "bddd60e2334f35f88f29dd8d1d1dde3428cd7a61"
        ],
        [
            "Lemma gcd0p : left_id 0 gcdp.",
            "VernacStartTheoremProof",
            "44f0bcaeff492e11e343ca3ab3c249686741ae97"
        ],
        [
            "move=> p; rewrite /gcdp /gcdp_rec size_poly0 size_poly_gt0 if_neg.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: ifP => /= [_ | nzp]; first by rewrite eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite polySpred !(modp0, nzp) //; case: _.-1 => [|m]; rewrite mod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp0 : right_id 0 gcdp.",
            "VernacStartTheoremProof",
            "3f8402914d58b70e7ba1f02e8d6232d4adb0a412"
        ],
        [
            "move=> p; have:= gcd0p p; rewrite /gcdp /gcdp_rec size_poly0 size_poly_gt0.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "by rewrite if_neg; case: ifP => /= p0; rewrite ?(eqxx, p0) // (eqP p0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdpE p q : gcdp p q = if size p < size q then gcdp (modp q p) p else gcdp (modp p q) q.",
            "VernacStartTheoremProof",
            "05a3609317fe066c446fda64ce6dda1c456c5318"
        ],
        [
            "pose gcdpE_rec := fix gcdpE_rec (n : nat) (pp qq : {poly R}) {struct n} := let rr := modp pp qq in if rr == 0 then qq else if n is n1.+1 then gcdpE_rec n1 qq rr else rr.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Irec: forall k l p q, size q <= k -> size q <= l -> size q < size p -> gcdpE_rec k p q = gcdpE_rec l p q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "elim=> [|m Hrec] [|n] //= p1 q1.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite leqn0 size_poly_eq0; move/eqP=> -> _.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite size_poly0 size_poly_gt0 modp0 => nzp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (negPf nzp); case: n => [|n] /=; rewrite mod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite leqn0 size_poly_eq0 => _; move/eqP=> ->.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "rewrite size_poly0 size_poly_gt0 modp0 => nzp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (negPf nzp); case: m {Hrec} => [|m] /=; rewrite mod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP => Epq Sm Sn Sq //; rewrite ?Epq //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: (eqVneq q1 0) => [->|nzq].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: n m {Sm Sn Hrec} => [|m] [|n] //=; rewrite mod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: Hrec; last by rewrite ltn_modp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltnS (leq_trans _ Sm) // ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -ltnS (leq_trans _ Sn) // ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq p 0) => [-> | nzp].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mod0p modp0 gcd0p gcdp0 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq q 0) => [-> | nzq].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mod0p modp0 gcd0p gcdp0 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /gcdp /gcdp_rec.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ltnP; rewrite (negPf nzp, negPf nzq) //=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "move=> ltpq; rewrite ltn_modp (negPf nzp) //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -(ltn_predK ltpq) /=; case: eqP => [->|].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: (size p) => [|[|s]]; rewrite /= modp0 (negPf nzp) // mod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=> nzqp; rewrite (negPf nzp).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: Irec => //; last by rewrite ltn_modp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltnS (ltn_predK ltpq) (leq_trans _ ltpq) ?leqW // ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltnW // ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> leqp; rewrite ltn_modp (negPf nzq) //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have p_gt0: size p > 0 by rewrite size_poly_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(prednK p_gt0) /=; case: eqP => [->|].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: (size q) => [|[|s]]; rewrite /= modp0 (negPf nzq) // mod0p eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=> nzpq; rewrite (negPf nzq); apply: Irec => //; rewrite ?ltn_modp //.",
            "VernacExtend",
            "291cbed887ee44aa2a2133906ee031c937159d58"
        ],
        [
            "by rewrite -ltnS (prednK p_gt0) (leq_trans _ leqp) // ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltnW // ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_gcd1p p : size (gcdp 1 p) = 1%N.",
            "VernacStartTheoremProof",
            "6997bb3652c35cbea14ddfb937513cf8ce2ab263"
        ],
        [
            "rewrite gcdpE size_polyC oner_eq0 /= modp1; case: ltnP.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite gcd0p size_polyC oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/size1_polyC=> e; rewrite e.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case p00: (p`_0 == 0); first by rewrite (eqP p00) modp0 gcdp0 size_poly1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite modpC ?p00 // gcd0p size_polyC p00.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_gcdp1 p : size (gcdp p 1) = 1%N.",
            "VernacStartTheoremProof",
            "7011dfc00eaa09f5c224678974077ed8616cde2c"
        ],
        [
            "rewrite gcdpE size_polyC oner_eq0 /= modp1; case: ltnP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gcd0p size_polyC oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ltnS leqn0 size_poly_eq0; move/eqP->; rewrite gcdp0 modp0 size_polyC.",
            "VernacExtend",
            "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
        ],
        [
            "by rewrite oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdpp : idempotent gcdp.",
            "VernacStartTheoremProof",
            "25ba1aaba12f15f51bb866415e3a8ca502c5910e"
        ],
        [
            "by move=> p; rewrite gcdpE ltnn modpp gcd0p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_gcdlr p q : (gcdp p q %| p) && (gcdp p q %| q).",
            "VernacStartTheoremProof",
            "932c8bcdfc7b015c5cbbf16788472d88ca2d2ca4"
        ],
        [
            "elim: {p q}minn {-2}p {-2}q (leqnn (minn (size q) (size p))) => [|r Hrec] p q.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite geq_min !leqn0 !size_poly_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/pred2P=> ->; rewrite (gcdp0, gcd0p) dvdpp ?andbT /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq p 0) => [-> _|nz_p]; first by rewrite gcd0p dvdpp andbT.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq q 0) => [->|nz_q]; first by rewrite gcdp0 dvdpp /=.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite gcdpE minnC /minn; case: ltnP => [lt_pq | le_pq] le_qr.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "suffices: minn (size p) (size (q %% p)) <= r.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by move/Hrec; case/andP => E1 E2; rewrite E2 (dvdp_mod _ E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite geq_min orbC -ltnS (leq_trans _ le_qr) ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices: minn (size q) (size (p %% q)) <= r.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by move/Hrec; case/andP => E1 E2; rewrite E2 andbT (dvdp_mod _ E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite geq_min orbC -ltnS (leq_trans _ le_qr) ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_gcdl p q : gcdp p q %| p.",
            "VernacStartTheoremProof",
            "991600b9cb24f569b3b2dcb5f42c90fa347cc85f"
        ],
        [
            "by case/andP: (dvdp_gcdlr p q).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_gcdr p q :gcdp p q %| q.",
            "VernacStartTheoremProof",
            "346186e509250831b9ed0c7522abe199d6645d41"
        ],
        [
            "by case/andP: (dvdp_gcdlr p q).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_gcdpl p q : p != 0 -> size (gcdp p q) <= size p.",
            "VernacStartTheoremProof",
            "a78e7c7ef95fd09d558c0dc14821f804a479b2e7"
        ],
        [
            "by move=> pn0; move: (dvdp_gcdl p q); apply: dvdp_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_gcdpr p q : q != 0 -> size (gcdp p q) <= size q.",
            "VernacStartTheoremProof",
            "e8f4df92921066b2613da078ea70fa18c1b464e1"
        ],
        [
            "by move=> qn0; move: (dvdp_gcdr p q); apply: dvdp_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_gcd p m n : p %| gcdp m n = (p %| m) && (p %| n).",
            "VernacStartTheoremProof",
            "ff6b5ce055d0d5fbd79599b2f97d1c04b501b914"
        ],
        [
            "apply/idP/andP=> [dv_pmn | [dv_pm dv_pn]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite ?(dvdp_trans dv_pmn) ?dvdp_gcdl ?dvdp_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (leqnn (minn (size n) (size m))) dv_pm dv_pn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: {m n}minn {-2}m {-2}n => [|r Hrec] m n.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite geq_min !leqn0 !size_poly_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/pred2P=> ->; rewrite (gcdp0, gcd0p).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq m 0) => [-> _|nz_m]; first by rewrite gcd0p /=.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq n 0) => [->|nz_n]; first by rewrite gcdp0 /=.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite gcdpE minnC /minn; case: ltnP => Cnm le_r dv_m dv_n.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply: Hrec => //; last by rewrite -(dvdp_mod _ dv_m).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite geq_min orbC -ltnS (leq_trans _ le_r) ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: Hrec => //; last by rewrite -(dvdp_mod _ dv_n).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite geq_min orbC -ltnS (leq_trans _ le_r) ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdpC : forall p q, gcdp p q %= gcdp q p.",
            "VernacStartTheoremProof",
            "e7c64261199faf7bffe14490ed1ce7449b3df877"
        ],
        [
            "by move=> p q; rewrite /eqp !dvdp_gcd !dvdp_gcdl !dvdp_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd1p p : gcdp 1 p %= 1.",
            "VernacStartTheoremProof",
            "1e8cd5b4c96a2feb72873b5233acf93599dff1bb"
        ],
        [
            "rewrite -size_poly_eq1 gcdpE size_poly1; case: ltnP.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite modp1 gcd0p size_poly1 eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/size1_polyC=> e; rewrite e.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case p00: (p`_0 == 0); first by rewrite (eqP p00) modp0 gcdp0 size_poly1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite modpC ?p00 // gcd0p size_polyC p00.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp1 p : gcdp p 1 %= 1.",
            "VernacStartTheoremProof",
            "e490cf82d600040fd73ddc71b9074f173fb32d2d"
        ],
        [
            "by rewrite (eqp_ltrans (gcdpC _ _)) gcd1p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_addl_mul p q r: gcdp r (p * r + q) %= gcdp r q.",
            "VernacStartTheoremProof",
            "d946e55e83cc903dd8444292c4cbc191a1c57380"
        ],
        [
            "suff h m n d : gcdp d n %| gcdp d (m * d + n).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "apply/andP; split => //; rewrite {2}(_: q = (-p) * r + (p * r + q)) ?H //.",
            "VernacExtend",
            "945ac9810113bf938ceefee9ae4e6b3a8be91952"
        ],
        [
            "by rewrite GRing.mulNr GRing.addKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite dvdp_gcd dvdp_gcdl /= dvdp_addr ?dvdp_gcdr ?dvdp_mull ?dvdp_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_addl m n : gcdp m (m + n) %= gcdp m n.",
            "VernacStartTheoremProof",
            "1a46961dd085223b12a0e8d09d37f096e61a68c1"
        ],
        [
            "by rewrite -{2}(mul1r m) gcdp_addl_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_addr m n : gcdp m (n + m) %= gcdp m n.",
            "VernacStartTheoremProof",
            "9743915cf34aa894cb3f373f13fd1bcec0cd1afe"
        ],
        [
            "by rewrite addrC gcdp_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_mull m n : gcdp n (m * n) %= n.",
            "VernacStartTheoremProof",
            "1fd7b85808a5cae1e2ad2ad7a0a1bcb9b0de6aba"
        ],
        [
            "case: (eqVneq n 0) => [-> | nn0]; first by rewrite gcd0p mulr0 eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq m 0) => [-> | mn0]; first by rewrite mul0r gcdp0 eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite gcdpE modp_mull gcd0p size_mul //; case: ifP; first by rewrite eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (polySpred mn0) addSn /= -{1}[size n]add0n ltn_add2r; move/negbT.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite -ltnNge prednK ?size_poly_gt0 // leq_eqVlt ltnS leqn0 size_poly_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (negPf mn0) orbF; case/size_poly1P=> c cn0 -> {mn0 m}; rewrite mul_polyC.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "suff -> : n %% (c *: n) = 0 by rewrite gcd0p; apply: eqp_scale.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by apply/modp_eq0P; rewrite dvdp_scalel.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_mulr m n : gcdp n (n * m) %= n.",
            "VernacStartTheoremProof",
            "0c650074df055ee638b864a8c3b7f409093f749d"
        ],
        [
            "by rewrite mulrC gcdp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_scalel c m n : c != 0 -> gcdp (c *: m) n %= gcdp m n.",
            "VernacStartTheoremProof",
            "673c01a35208f288fdbdf631651dbe4d5ed5379e"
        ],
        [
            "move=> cn0; rewrite /eqp dvdp_gcd [gcdp m n %| _]dvdp_gcd !dvdp_gcdr !andbT.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: dvdp_trans (dvdp_gcdl _ _) _; rewrite dvdp_scaler.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: dvdp_trans (dvdp_gcdl _ _) _; rewrite dvdp_scalel.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_scaler c m n : c != 0 -> gcdp m (c *: n) %= gcdp m n.",
            "VernacStartTheoremProof",
            "0f91dd839ea44ff622f9f3f36375f1afbecc0ab5"
        ],
        [
            "move=> cn0; apply: eqp_trans (gcdpC _ _) _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply: eqp_trans (gcdp_scalel _ _ _) _ => //; apply: gcdpC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_gcd_idl m n : m %| n -> gcdp m n %= m.",
            "VernacStartTheoremProof",
            "ce3ff9b677aeff65ab636d08a8705a4c6f9b8886"
        ],
        [
            "case: (eqVneq m 0) => [-> | mn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite dvd0p => /eqP ->; rewrite gcdp0 eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite dvdp_eq; move/eqP; move/(f_equal (gcdp m)) => h.",
            "VernacExtend",
            "c7c6b04948d79e6319f20eded75ce409c4b19c77"
        ],
        [
            "apply: eqp_trans (gcdp_mull (n %/ m) _); rewrite -h eqp_sym gcdp_scaler //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_gcd_idr m n : n %| m -> gcdp m n %= n.",
            "VernacStartTheoremProof",
            "f07a3e6b3273f5ecfe41b2e920b1640206690f19"
        ],
        [
            "by move/dvdp_gcd_idl => h; apply: eqp_trans h; apply: gcdpC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_exp p k l : gcdp (p ^+ k) (p ^+ l) %= p ^+ minn k l.",
            "VernacStartTheoremProof",
            "60c3cdea54722d3f3032d63d2a33faa5df66cea3"
        ],
        [
            "wlog leqmn: k l / k <= l.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "move=> hwlog; case: (leqP k l); first exact: hwlog.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/ltnW; rewrite minnC; move/hwlog=> h; apply: eqp_trans h; apply: gcdpC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (minn_idPl leqmn); move/subnK: leqmn<-; rewrite exprD.",
            "VernacExtend",
            "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
        ],
        [
            "by apply: eqp_trans (gcdp_mull _ _) _; apply: eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_eq0 p q : gcdp p q == 0 = (p == 0) && (q == 0).",
            "VernacStartTheoremProof",
            "ff591433d10780cd93e356e496ae97fa0ee0068a"
        ],
        [
            "apply/idP/idP; last by case/andP => /eqP -> /eqP ->; rewrite gcdp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have h m n: gcdp m n == 0 -> (m == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(dvd0p m); move/eqP<-; rewrite dvdp_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> ?; rewrite (h _ q) // (h _ p) // -eqp0 (eqp_ltrans (gcdpC _ _)) eqp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_gcdr p q r : q %= r -> gcdp p q %= gcdp p r.",
            "VernacStartTheoremProof",
            "66ba75580222b9855ea0b245e8cfd01ab24800bd"
        ],
        [
            "move=> eqr; rewrite /eqp !(dvdp_gcd, dvdp_gcdl, andbT) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -(eqp_dvdr _ eqr) dvdp_gcdr (eqp_dvdr _ eqr) dvdp_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_gcdl r p q : p %= q -> gcdp p r %= gcdp q r.",
            "VernacStartTheoremProof",
            "4d35452c60f8224da0c9caa4e8e87006f765f63a"
        ],
        [
            "move=> eqr; rewrite /eqp !(dvdp_gcd, dvdp_gcdr, andbT) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -(eqp_dvdr _ eqr) dvdp_gcdl (eqp_dvdr _ eqr) dvdp_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_gcd p1 p2 q1 q2 : p1 %= p2 -> q1 %= q2 -> gcdp p1 q1 %= gcdp p2 q2.",
            "VernacStartTheoremProof",
            "124461c6b4778fcf79681cbd1aa0f92064986673"
        ],
        [
            "move=> e1 e2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: eqp_trans (eqp_gcdr _ e2); apply: eqp_trans (eqp_gcdl _ e1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_rgcd_gcd p q : rgcdp p q %= gcdp p q.",
            "VernacStartTheoremProof",
            "53e7b9a6a9b21fc78c1b7748259a24ff9c176ba7"
        ],
        [
            "move: (leqnn (minn (size p) (size q))); move: {2}(minn (size p) (size q)) => n.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "elim: n p q => [p q|n ihn p q hs].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite leqn0 /minn; case: ltnP => _; rewrite size_poly_eq0; move/eqP->.",
            "VernacExtend",
            "93c092d6be68728a11e9ce714facd312e8cffccb"
        ],
        [
            "by rewrite gcd0p rgcd0p eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite gcdp0 rgcdp0 eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq p 0) => [-> | pn0]; first by rewrite gcd0p rgcd0p eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite gcdp0 rgcdp0 eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite gcdpE rgcdpE; case: ltnP => sp.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have e := (eqp_rmod_mod q p); move: (e); move/(eqp_gcdl p) => h.",
            "VernacExtend",
            "a8c4fc8ec1ffc028ce913d95a3c0a77b489ac69c"
        ],
        [
            "apply: eqp_trans h; apply: ihn; rewrite (eqp_size e) geq_min.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by rewrite -ltnS (leq_trans _ hs) // (minn_idPl (ltnW _)) ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have e := (eqp_rmod_mod p q); move: (e); move/(eqp_gcdl q) => h.",
            "VernacExtend",
            "a8c4fc8ec1ffc028ce913d95a3c0a77b489ac69c"
        ],
        [
            "apply: eqp_trans h; apply: ihn; rewrite (eqp_size e) geq_min.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by rewrite -ltnS (leq_trans _ hs) // (minn_idPr _) ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_modr m n : gcdp m (n %% m) %= gcdp m n.",
            "VernacStartTheoremProof",
            "888fcc42c760015852ebb54cbc1b6bbc0a743c72"
        ],
        [
            "case: (eqVneq m 0) => [-> | mn0]; first by rewrite modp0 eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have : (lead_coef m) ^+ (scalp n m) != 0 by rewrite expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/gcdp_scaler; move/(_ m n) => h; apply: eqp_trans h; rewrite divp_eq.",
            "VernacExtend",
            "82c03c822051373d1c31f3edf57e67664d9dee3d"
        ],
        [
            "by rewrite eqp_sym gcdp_addl_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_modl m n : gcdp (m %% n) n %= gcdp m n.",
            "VernacStartTheoremProof",
            "750eb201f69de68e061620a2def999a0d02f2546"
        ],
        [
            "apply: eqp_trans (gcdpC _ _) _; apply: eqp_trans (gcdp_modr _ _) _.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "exact: gcdpC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_def d m n : d %| m -> d %| n -> (forall d', d' %| m -> d' %| n -> d' %| d) -> gcdp m n %= d.",
            "VernacStartTheoremProof",
            "5c1d964c3334681784f0797879ca62f55adb45ac"
        ],
        [
            "move=> dm dn h; rewrite /eqp dvdp_gcd dm dn !andbT.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: h; [apply: dvdp_gcdl | apply: dvdp_gcdr].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition coprimep p q := size (gcdp p q) == 1%N.",
            "VernacDefinition",
            "5e1d1005a49630ba06f4ccc6fe7355abf1aa9efd"
        ],
        [
            "Lemma coprimep_size_gcd p q : coprimep p q -> size (gcdp p q) = 1%N.",
            "VernacStartTheoremProof",
            "a96929dc95ed7157a2488c580578c74f47600aee"
        ],
        [
            "by rewrite /coprimep=> /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_def p q : (coprimep p q) = (size (gcdp p q) == 1%N).",
            "VernacStartTheoremProof",
            "a752642107f35a05cc74c5051497665765e2cfd5"
        ],
        [
            "done.",
            "VernacExtend",
            "095062641163274af3d1e226cbd993f0dbb6e000"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_scalel c m n : c != 0 -> coprimep (c *: m) n = coprimep m n.",
            "VernacStartTheoremProof",
            "8968307c4d96161b988825e7b7b190b5b709fa01"
        ],
        [
            "by move=> ?; rewrite !coprimep_def (eqp_size (gcdp_scalel _ _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_scaler c m n: c != 0 -> coprimep m (c *: n) = coprimep m n.",
            "VernacStartTheoremProof",
            "dc3a5aad37c6e2c5cc3e783b2900edb0a0a9cb30"
        ],
        [
            "by move=> ?; rewrite !coprimep_def (eqp_size (gcdp_scaler _ _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimepp p : coprimep p p = (size p == 1%N).",
            "VernacStartTheoremProof",
            "98335925baac964e6c434c1fb71d8fe6ae3a93cc"
        ],
        [
            "by rewrite coprimep_def gcdpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_eqp1 p q : gcdp p q %= 1 = (coprimep p q).",
            "VernacStartTheoremProof",
            "ca7ce45ec2e926c2a7c87c5262b17a96fe5f08d1"
        ],
        [
            "by rewrite coprimep_def size_poly_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_sym p q : coprimep p q = coprimep q p.",
            "VernacStartTheoremProof",
            "4b715e484c400ad3b395fae05bd489cafb927844"
        ],
        [
            "by rewrite -!gcdp_eqp1; apply: eqp_ltrans; rewrite gcdpC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime1p p : coprimep 1 p.",
            "VernacStartTheoremProof",
            "6532dee586e4bcd72841b7578077e9bde8274094"
        ],
        [
            "rewrite /coprimep -[1%N](size_poly1 R); apply/eqP; apply: eqp_size.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "exact: gcd1p.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep1 p : coprimep p 1.",
            "VernacStartTheoremProof",
            "956e63c063eae73c87aec98b85d01d9fae014eb6"
        ],
        [
            "by rewrite coprimep_sym; apply: coprime1p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep0 p : coprimep p 0 = (p %= 1).",
            "VernacStartTheoremProof",
            "130acebb96e70aab55b6899994bd769808503361"
        ],
        [
            "by rewrite /coprimep gcdp0 size_poly_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime0p p : coprimep 0 p = (p %= 1).",
            "VernacStartTheoremProof",
            "8411f4da004cb5764b082a76d0a0c8f5aa859763"
        ],
        [
            "by rewrite coprimep_sym coprimep0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimepP p q : reflect (forall d, d %| p -> d %| q -> d %= 1) (coprimep p q).",
            "VernacStartTheoremProof",
            "4d4e681418423f69280ed9830ee8881e80e9dfd9"
        ],
        [
            "apply: (iffP idP)=> [|h].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite /coprimep; move/eqP=> hs d dvddp dvddq.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "have dvddg: d %| gcdp p q by rewrite dvdp_gcd dvddp dvddq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: (dvdp_eqp1 dvddg); rewrite -size_poly_eq1; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/andP: (dvdp_gcdlr p q)=> h1 h2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite /coprimep size_poly_eq1; apply: h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimepPn p q : p != 0 -> reflect (exists d, (d %| gcdp p q) && ~~ (d %= 1)) (~~ coprimep p q).",
            "VernacStartTheoremProof",
            "e9a016fbceb355382d0b7d2a1face5421a995517"
        ],
        [
            "move=> p0; apply: (iffP idP).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -gcdp_eqp1=> ng1; exists (gcdp p q); rewrite dvdpp /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=> d; case/andP=> dg; apply: contra; rewrite -gcdp_eqp1=> g1.",
            "VernacExtend",
            "fd4637e60916e96e1fa667c167ac90f860df3bd9"
        ],
        [
            "by move: dg; rewrite (eqp_dvdr _ g1) dvdp1 size_poly_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_dvdl q p r : r %| q -> coprimep p q -> coprimep p r.",
            "VernacStartTheoremProof",
            "16bea44d3150c4c0b6617b9ee332b017fe80108e"
        ],
        [
            "move=> rq cpq; apply/coprimepP=> d dp dr; move/coprimepP:cpq=> cpq'.",
            "VernacExtend",
            "dffee33afc6977d6aca43b282561ec7ced1503c9"
        ],
        [
            "by apply: cpq'; rewrite // (dvdp_trans dr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_dvdr p q r : r %| p -> coprimep p q -> coprimep r q.",
            "VernacStartTheoremProof",
            "d1bf724207e4392714e89ee7f6409e9fee29135e"
        ],
        [
            "move=> rp; rewrite ![coprimep _ q]coprimep_sym.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by move/coprimep_dvdl; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_modl p q : coprimep (p %% q) q = coprimep p q.",
            "VernacStartTheoremProof",
            "95dfe33379cba2c767e7b6dcfe9e23b23c14e5fb"
        ],
        [
            "symmetry; rewrite !coprimep_def.",
            "VernacExtend",
            "ba28bca3513f9c0c3709417402c25d3b87653c7a"
        ],
        [
            "case: (ltnP (size p) (size q))=> hpq; first by rewrite modp_small.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gcdpE ltnNge hpq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_modr q p : coprimep q (p %% q) = coprimep q p.",
            "VernacStartTheoremProof",
            "07d6cfbe77ac6c8a499219d3d18ae86068a1cda2"
        ],
        [
            "by rewrite ![coprimep q _]coprimep_sym coprimep_modl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rcoprimep_coprimep q p : rcoprimep q p = coprimep q p.",
            "VernacStartTheoremProof",
            "26118bbcc6ba71886264b8b33b135934ea754411"
        ],
        [
            "by rewrite /coprimep /rcoprimep; rewrite (eqp_size (eqp_rgcd_gcd _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_coprimepr p q r : q %= r -> coprimep p q = coprimep p r.",
            "VernacStartTheoremProof",
            "34bf0de5e5f00981c4fd90f43d9e9833d4cba684"
        ],
        [
            "by rewrite -!gcdp_eqp1; move/(eqp_gcdr p) => h1; apply: (eqp_ltrans h1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_coprimepl p q r : q %= r -> coprimep q p = coprimep r p.",
            "VernacStartTheoremProof",
            "8b9ee81105cb94aa07b8d278123eb52c6bd60f01"
        ],
        [
            "by rewrite !(coprimep_sym _ p); apply: eqp_coprimepr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint egcdp_rec p q k {struct k} : {poly R} * {poly R} := if k is k'.+1 then if q == 0 then (1, 0) else let: (u, v) := egcdp_rec q (p %% q) k' in (lead_coef q ^+ scalp p q *: v, (u - v * (p %/ q))) else (1, 0).",
            "VernacFixpoint",
            "e443a7e4b5631dd5a90ee244d8b382ecd83d6991"
        ],
        [
            "Definition egcdp p q := if size q <= size p then egcdp_rec p q (size q) else let e := egcdp_rec q p (size p) in (e.2, e.1).",
            "VernacDefinition",
            "ac38e9ddb95e83e11a18e610c4188a67b7524de9"
        ],
        [
            "Lemma egcdp0 p : egcdp p 0 = (1, 0).",
            "VernacStartTheoremProof",
            "17c174c7377b45507f7ad9fe43c88112b906f214"
        ],
        [
            "by rewrite /egcdp size_poly0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma egcdp_recP : forall k p q, q != 0 -> size q <= k -> size q <= size p -> let e := (egcdp_rec p q k) in [/\\ size e.1 <= size q, size e.2 <= size p & gcdp p q %= e.1 * p + e.2 * q].",
            "VernacStartTheoremProof",
            "30878af02e5b48ad72bde451b7c72f10447831cc"
        ],
        [
            "elim=> [|k ihk] p q /= qn0; first by rewrite leqn0 size_poly_eq0 (negPf qn0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> sqSn qsp; case: (eqVneq q 0)=> q0; first by rewrite q0 eqxx in qn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (negPf qn0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have sp : size p > 0 by apply: leq_trans qsp; rewrite size_poly_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (eqVneq (p %% q) 0) => [r0 | rn0] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite r0 /egcdp_rec; case: k ihk sqSn => [|n] ihn sqSn /=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite !scaler0 !mul0r subr0 add0r mul1r size_poly0 size_poly1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite dvdp_gcd_idr /dvdp ?r0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !eqxx mul0r scaler0 /= mul0r add0r subr0 mul1r size_poly0 size_poly1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite dvdp_gcd_idr /dvdp ?r0 //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have h1 : size (p %% q) <= k.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -ltnS; apply: leq_trans sqSn; rewrite ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have h2 : size (p %% q) <= size q by rewrite ltnW // ltn_modp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have := (ihk q (p %% q) rn0 h1 h2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (egcdp_rec _ _)=> u v /= => [[ihn'1 ihn'2 ihn'3]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite gcdpE ltnNge qsp //= (eqp_ltrans (gcdpC _ _)); split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (eqp_trans ihn'3).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite mulrBl addrCA -scalerAl scalerAr -mulrA -mulrBr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite divp_eq addrAC subrr add0r eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (leq_trans (size_add _ _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case: (eqVneq v 0)=> [-> | vn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite mul0r size_opp size_poly0 maxn0; apply: leq_trans ihn'1 _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "exact: leq_modp.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "case: (eqVneq (p %/ q) 0)=> [-> | qqn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite mulr0 size_opp size_poly0 maxn0; apply: leq_trans ihn'1 _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "exact: leq_modp.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite geq_max (leq_trans ihn'1) ?leq_modp //= size_opp size_mul //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (ihn'2); rewrite -(leq_add2r (size (p %/ q))).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have : size v + size (p %/ q) > 0 by rewrite addn_gt0 size_poly_gt0 vn0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have : size q + size (p %/ q) > 0 by rewrite addn_gt0 size_poly_gt0 qn0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "do 2!move/prednK=> {1}<-; rewrite ltnS => h; apply: leq_trans h _.",
            "VernacExtend",
            "ad29fb1d44717b0c40d907d6ed6652ea489edc36"
        ],
        [
            "rewrite size_divp // addnBA; last by apply: leq_trans qsp; apply: leq_pred.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite addnC -addnBA ?leq_pred //; move: qn0; rewrite -size_poly_eq0 -lt0n.",
            "VernacExtend",
            "3051a4e8bb68166b140398e2c3c2862857447428"
        ],
        [
            "by move/prednK=> {1}<-; rewrite subSnn addn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite size_scale // lc_expn_scalp_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma egcdpP p q : p != 0 -> q != 0 -> forall (e := egcdp p q), [/\\ size e.1 <= size q, size e.2 <= size p & gcdp p q %= e.1 * p + e.2 * q].",
            "VernacStartTheoremProof",
            "d32baec36d37c15d5abf31db3cab085f304b21bd"
        ],
        [
            "move=> pn0 qn0; rewrite /egcdp; case: (leqP (size q) (size p)) => /= hp.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by apply: egcdp_recP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/ltnW: hp => hp; case: (egcdp_recP pn0 (leqnn (size p)) hp) => h1 h2 h3.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by split => //; rewrite (eqp_ltrans (gcdpC _ _)) addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma egcdpE p q (e := egcdp p q) : gcdp p q %= e.1 * p + e.2 * q.",
            "VernacStartTheoremProof",
            "8eb91c6b97599e34635e65adada2539a23931458"
        ],
        [
            "rewrite {}/e; have [-> /= | qn0] := eqVneq q 0.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by rewrite gcdp0 egcdp0 mul1r mulr0 addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [p0 | pn0] := eqVneq p 0; last by case: (egcdpP pn0 qn0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite p0 gcd0p mulr0 add0r /egcdp size_poly0 leqn0 size_poly_eq0 (negPf qn0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /= mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bezoutp p q : exists u, u.1 * p + u.2 * q %= (gcdp p q).",
            "VernacStartTheoremProof",
            "76d489b799aeeb92646f4b4c48b6deda11f25af8"
        ],
        [
            "case: (eqVneq p 0) => [-> | pn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite gcd0p; exists (0, 1); rewrite mul0r mul1r add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite gcdp0; exists (1, 0); rewrite mul0r mul1r addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose e := egcdp p q; exists e; rewrite eqp_sym.",
            "VernacExtend",
            "99a0779df2100325fa1c35013f9828ff0e7f1c8b"
        ],
        [
            "by case: (egcdpP pn0 qn0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bezout_coprimepP : forall p q, reflect (exists u, u.1 * p + u.2 * q %= 1) (coprimep p q).",
            "VernacStartTheoremProof",
            "1b3dee85afcf1c7e28dab6e5dc1190df28c084a3"
        ],
        [
            "move=> p q; rewrite -gcdp_eqp1; apply: (iffP idP)=> [g1|].",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by case: (Bezoutp p q) => [[u v] Puv]; exists (u, v); apply: eqp_trans g1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=> [[u v]]; rewrite eqp_sym=> Puv; rewrite /eqp (eqp_dvdr _ Puv).",
            "VernacExtend",
            "542210a47a00777c20d1f6f8652bacd8b220a943"
        ],
        [
            "by rewrite dvdp_addr dvdp_mull ?dvdp_gcdl ?dvdp_gcdr //= dvd1p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_root p q x : coprimep p q -> root p x -> q.[x] != 0.",
            "VernacStartTheoremProof",
            "08162cc4bdc8ad7fa4f7750c4d5989c3e939134d"
        ],
        [
            "case/Bezout_coprimepP=> [[u v] euv] px0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move/eqpP: euv => [[c1 c2]] /andP /= [c1n0 c2n0 e].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suffices: c1 * (v.[x] * q.[x]) != 0.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite !mulf_eq0 !negb_or c1n0 /=; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/(f_equal (fun t => horner t x)): e; rewrite /= !hornerZ hornerD.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !hornerM (eqP px0) mulr0 add0r hornerC mulr1; move->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_dvdpl p q d: coprimep d q -> (d %| p * q) = (d %| p).",
            "VernacStartTheoremProof",
            "e0605fc293c287ddbc00d837d13cf4ed99567897"
        ],
        [
            "move/Bezout_coprimepP=>[[u v] Puv]; apply/idP/idP; last exact: dvdp_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: Puv; move/(eqp_mull p); rewrite mulr1 mulrDr eqp_sym=> peq dpq.",
            "VernacExtend",
            "59558e378570fadf944f573c466a34c761bc9b23"
        ],
        [
            "rewrite (eqp_dvdr _ peq) dvdp_addr; first by rewrite mulrA mulrAC dvdp_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mulrA dvdp_mull ?dvdpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_dvdpr p q d: coprimep d q -> (d %| q * p) = (d %| p).",
            "VernacStartTheoremProof",
            "8630b31070cd751ccbcf1b0ac8394a2307a192f6"
        ],
        [
            "by rewrite mulrC; apply: Gauss_dvdpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_dvdp m n p : coprimep m n -> (m * n %| p) = (m %| p) && (n %| p).",
            "VernacStartTheoremProof",
            "1e074a1a445d11874db16f401f58fc0410ffc6ae"
        ],
        [
            "case: (eqVneq m 0) => [-> | mn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite coprime0p => /eqp_dvdl->; rewrite !mul0r dvd0p dvd1p andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq n 0) => [-> | nn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite coprimep0 => /eqp_dvdl->; rewrite !mulr0 dvd1p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> hc; apply/idP/idP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "move/Gauss_dvdpl: hc => <- h; move/(dvdp_mull m): (h); rewrite dvdp_mul2l //.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "move->; move/(dvdp_mulr n): (h); rewrite dvdp_mul2r // andbT.",
            "VernacExtend",
            "bc49f0c89e0c8688a1d03f4dcdf7064bfc50c322"
        ],
        [
            "exact: dvdp_mulr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "case/andP => dmp dnp; move: (dnp); rewrite dvdp_eq.",
            "VernacExtend",
            "dfdf77d8d0d45996a42afec59fe3d2256fc04454"
        ],
        [
            "set c2 := _ ^+ _; set q2 := _ %/ _; move/eqP=> e2.",
            "VernacExtend",
            "a898aca20117b30b0248c4e6d190c1896e0e9b00"
        ],
        [
            "have := (sym_eq (Gauss_dvdpl q2 hc)); rewrite -e2.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have -> : m %| c2 *: p by rewrite -mul_polyC dvdp_mull.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite dvdp_eq; set c3 := _ ^+ _; set q3 := _ %/ _; move/eqP=> e3.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "apply: (@eq_dvdp (c3 * c2) q3).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite mulf_neq0 // expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mulrA -e3 -scalerAl -e2 scalerA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_gcdpr p m n : coprimep p m -> gcdp p (m * n) %= gcdp p n.",
            "VernacStartTheoremProof",
            "bea211a161800a656f3115939e7e69f2281ab006"
        ],
        [
            "move=> co_pm; apply/eqP; rewrite /eqp !dvdp_gcd !dvdp_gcdl /= andbC.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite dvdp_mull ?dvdp_gcdr // -(@Gauss_dvdpl _ m).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrC dvdp_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/coprimepP=> d; rewrite dvdp_gcd; case/andP=> hdp _ hdm.",
            "VernacExtend",
            "5caed936835e366e9e533d8f19382dcfedbf86d4"
        ],
        [
            "by move/coprimepP: co_pm; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_gcdpl p m n : coprimep p n -> gcdp p (m * n) %= gcdp p m.",
            "VernacStartTheoremProof",
            "ac63ad414018b3b1db6bf7fd257f727f80dc4ec0"
        ],
        [
            "by move=> co_pn; rewrite mulrC Gauss_gcdpr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_mulr p q r : coprimep p (q * r) = (coprimep p q && coprimep p r).",
            "VernacStartTheoremProof",
            "ae9e88043a07ebb7672f4c338ad74845c26855f0"
        ],
        [
            "apply/coprimepP/andP=> [hp | [/coprimepP-hq hr]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by split; apply/coprimepP=> d dp dq; rewrite hp //; [apply/dvdp_mulr | apply/dvdp_mull].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> d dp dqr; move/(_ _ dp) in hq.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite Gauss_dvdpl in dqr; first exact: hq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/coprimep_dvdr: hr; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_mull p q r: coprimep (q * r) p = (coprimep q p && coprimep r p).",
            "VernacStartTheoremProof",
            "fbd1b13a02971779c205781fd4caf567a3968a48"
        ],
        [
            "by rewrite ![coprimep _ p]coprimep_sym coprimep_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_coprime k u n : k != 0 -> (k * u) %% n %= 1 -> coprimep k n.",
            "VernacStartTheoremProof",
            "910c0a87dc7d7540956a9046282fd159403799b2"
        ],
        [
            "move=> kn0 hmod; apply/Bezout_coprimepP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "exists (((lead_coef n)^+(scalp (k * u) n) *: u), (- (k * u %/ n))).",
            "VernacExtend",
            "b899e21d01a5a61d25dc85bf76c7bc3b5f271560"
        ],
        [
            "rewrite -scalerAl mulrC (divp_eq (u * k) n) mulNr -addrAC subrr add0r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_pexpl k m n : 0 < k -> coprimep (m ^+ k) n = coprimep m n.",
            "VernacStartTheoremProof",
            "2d039f1a3274baa5cb34fff858fea054f572ddcc"
        ],
        [
            "case: k => // k _; elim: k => [|k IHk]; first by rewrite expr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS coprimep_mull -IHk andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_pexpr k m n : 0 < k -> coprimep m (n ^+ k) = coprimep m n.",
            "VernacStartTheoremProof",
            "54b7719b0294503a539bcedaa9a9e78eacf2fa22"
        ],
        [
            "by move=> k_gt0; rewrite !(coprimep_sym m) coprimep_pexpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_expl k m n : coprimep m n -> coprimep (m ^+ k) n.",
            "VernacStartTheoremProof",
            "007f9e1e271e3154a4f1f158afb2dc5422d28684"
        ],
        [
            "by case: k => [|k] co_pm; rewrite ?coprime1p // coprimep_pexpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_expr k m n : coprimep m n -> coprimep m (n ^+ k).",
            "VernacStartTheoremProof",
            "eefb6b411ac302c8f936e4b610e144cba680f244"
        ],
        [
            "by rewrite !(coprimep_sym m); apply: coprimep_expl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_mul2l p q r : gcdp (p * q) (p * r) %= (p * gcdp q r).",
            "VernacStartTheoremProof",
            "bb6c7e68fbf24f0f50f752e062a413fa8ed5585b"
        ],
        [
            "case: (eqVneq p 0)=> [->|hp]; first by rewrite !mul0r gcdp0 eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /eqp !dvdp_gcd !dvdp_mul2l // dvdp_gcdr dvdp_gcdl !andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (Bezoutp q r) => [[u v]] huv.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite eqp_sym in huv; rewrite (eqp_dvdr _ (eqp_mull _ huv)).",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite mulrDr ![p * (_ * _)]mulrCA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: dvdp_add; rewrite dvdp_mull// (dvdp_gcdr, dvdp_gcdl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_mul2r q r p : gcdp (q * p) (r * p) %= (gcdp q r * p).",
            "VernacStartTheoremProof",
            "65ae9d3ecaa719e4cda07a82cd808e540b8ebd67"
        ],
        [
            "by rewrite ![_ * p]GRing.mulrC gcdp_mul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulp_gcdr p q r : r * (gcdp p q) %= gcdp (r * p) (r * q).",
            "VernacStartTheoremProof",
            "7905e1dac519028b6069ed85c78b51e4964f595e"
        ],
        [
            "by rewrite eqp_sym gcdp_mul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulp_gcdl p q r : (gcdp p q) * r %= gcdp (p * r) (q * r).",
            "VernacStartTheoremProof",
            "9b4ac2ac668b1449a75dd2be04abaf83c49e3701"
        ],
        [
            "by rewrite eqp_sym gcdp_mul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_div_gcd p q : (p != 0) || (q != 0) -> coprimep (p %/ (gcdp p q)) (q %/ gcdp p q).",
            "VernacStartTheoremProof",
            "8ade646f32683d0161bd7402ed1103945ec29aa9"
        ],
        [
            "move=> hpq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have gpq0: gcdp p q != 0 by rewrite gcdp_eq0 negb_and.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -gcdp_eqp1 -(@eqp_mul2r (gcdp p q)) // mul1r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have: gcdp p q %| p by rewrite dvdp_gcdl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: gcdp p q %| q by rewrite dvdp_gcdr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !dvdp_eq eq_sym; move/eqP=> hq; rewrite eq_sym; move/eqP=> hp.",
            "VernacExtend",
            "167d522d3692415b2103f7027c3ef892dc09b539"
        ],
        [
            "rewrite (eqp_ltrans (mulp_gcdl _ _ _)) hq hp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have lcn0 k : (lead_coef (gcdp p q)) ^+ k != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite expf_neq0 ?lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: eqp_gcd; rewrite ?eqp_scale.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_eq0 p q : (p %/ q == 0) = [|| p == 0, q ==0 | size p < size q].",
            "VernacStartTheoremProof",
            "be56f02e2c30f63c043213d718fe61439c1701bd"
        ],
        [
            "apply/eqP/idP=> [d0|]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/or3P; [by move/eqP->; rewrite div0p| by move/eqP->; rewrite divp0|].",
            "VernacExtend",
            "6148700c32a2b1286f1639cfa47160fa5d1d79ea"
        ],
        [
            "by move/divp_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq p 0) => [->|pn0]; first by rewrite eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite eqxx orbT.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: (divp_eq p q); rewrite d0 mul0r add0r.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/(f_equal (fun x : {poly R} => size x)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite size_scale ?lc_expn_scalp_neq0 // => ->; rewrite ltn_modp qn0 !orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_div_eq0 p q : q %| p -> (p %/ q == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "1cb88864ab6a16af5674587b6cd7063e2a9597aa"
        ],
        [
            "move=> dvdp_qp; have [->|p_neq0] := altP (p =P 0); first by rewrite div0p eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite divp_eq0 ltnNge dvdp_leq // (negPf p_neq0) orbF /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: contraTF dvdp_qp=> /eqP ->; rewrite dvd0p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bezout_coprimepPn p q : p != 0 -> q != 0 -> reflect (exists2 uv : {poly R} * {poly R}, (0 < size uv.1 < size q) && (0 < size uv.2 < size p) & uv.1 * p = uv.2 * q) (~~ (coprimep p q)).",
            "VernacStartTheoremProof",
            "f37b87151f3a2a0465f9923ac3b52c18b6cf60b6"
        ],
        [
            "move=> pn0 qn0; apply: (iffP idP); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=> [[u v] /= /andP [/andP [ps1 s1] /andP [ps2 s2]] e].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have: ~~(size (q * p) <= size (u * p)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -ltnNge !size_mul // -?size_poly_gt0 // (polySpred pn0) !addnS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ltn_add2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: contra => ?; apply: dvdp_leq; rewrite ?mulf_neq0 // -?size_poly_gt0 //.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by rewrite mulrC Gauss_dvdp // dvdp_mull // e dvdp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite coprimep_def neq_ltn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/orP; first by rewrite ltnS leqn0 size_poly_eq0 gcdp_eq0 -[p == 0]negbK pn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case sg: (size (gcdp p q)) => [|n] //; case: n sg=> [|n] // sg _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "move: (dvdp_gcdl p q); rewrite dvdp_eq; set c1 := _ ^+ _; move/eqP=> hu1.",
            "VernacExtend",
            "32dc4334c1228788e53c93d8e3de0f7a9ff78fe7"
        ],
        [
            "move: (dvdp_gcdr p q); rewrite dvdp_eq; set c2 := _ ^+ _; move/eqP=> hv1.",
            "VernacExtend",
            "32dc4334c1228788e53c93d8e3de0f7a9ff78fe7"
        ],
        [
            "exists (c1 *: (q %/ gcdp p q), c2 *: (p %/ gcdp p q)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -!{1}scalerAl !scalerAr hu1 hv1 mulrCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !{1}size_scale ?lc_expn_scalp_neq0 //= !size_poly_gt0 !divp_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite gcdp_eq0 !(negPf pn0) !(negPf qn0) /= -!leqNgt leq_gcdpl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite leq_gcdpr //= !ltn_divpl -?size_poly_eq0 ?sg //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !size_mul // -?size_poly_eq0 ?sg // ![(_ + n.+2)%N]addnS /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -{1}(addn0 (size p)) -{1}(addn0 (size q)) !ltn_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_pexp2r m n k : k > 0 -> (m ^+ k %| n ^+ k) = (m %| n).",
            "VernacStartTheoremProof",
            "33a010d2192e24a10951ffaf9007c5672b9e536d"
        ],
        [
            "move=> k_gt0; apply/idP/idP; last exact: dvdp_exp2r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq n 0) => [-> | nn0] //; case: (eqVneq m 0) => [-> | mn0].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "move/prednK: k_gt0=> {1}<-; rewrite exprS mul0r //= !dvd0p expf_eq0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case/andP=> _ ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set d := gcdp m n; have := (dvdp_gcdr m n); rewrite -/d dvdp_eq.",
            "VernacExtend",
            "c3d6390c847b2f2f52c2113e271e063253f4a494"
        ],
        [
            "set c1 := _ ^+ _; set n' := _ %/ _; move/eqP=> def_n.",
            "VernacExtend",
            "a898aca20117b30b0248c4e6d190c1896e0e9b00"
        ],
        [
            "have := (dvdp_gcdl m n); rewrite -/d dvdp_eq.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "set c2 := _ ^+ _; set m' := _ %/ _; move/eqP=> def_m.",
            "VernacExtend",
            "a898aca20117b30b0248c4e6d190c1896e0e9b00"
        ],
        [
            "have dn0 : d != 0 by rewrite gcdp_eq0 negb_and nn0 orbT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have c1n0 : c1 != 0 by rewrite !expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have c2n0 : c2 != 0 by rewrite !expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(@dvdp_scaler (c1 ^+ k)) ?expf_neq0 ?lead_coef_eq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have c2k_n0 : c2 ^+ k != 0 by rewrite !expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(@dvdp_scalel (c2 ^+k)) // -!exprZn def_m def_n !exprMn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite dvdp_mul2r ?expf_neq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have: coprimep (m' ^+ k) (n' ^+ k).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite coprimep_pexpl // coprimep_pexpr //; apply: coprimep_div_gcd.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite nn0 orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/coprimepP=> hc hd.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have /size_poly1P [c cn0 em'] : size m' == 1%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (eqVneq m' 0) => [m'0 |m'_n0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move/eqP: def_m; rewrite m'0 mul0r scale_poly_eq0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (negPf mn0) (negPf c2n0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have := (hc _ (dvdpp _) hd); rewrite -size_poly_eq1.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite polySpred; last by rewrite expf_eq0 negb_and m'_n0 orbT.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_exp eqSS muln_eq0; move: k_gt0; rewrite lt0n; move/negPf->.",
            "VernacExtend",
            "45d4f42da31c4b3bbf8e33ee95b32d2f172cd3f3"
        ],
        [
            "by rewrite orbF -{2}(@prednK (size m')) ?lt0n // size_poly_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(@dvdp_scalel c2) // def_m em' mul_polyC dvdp_scalel //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(@dvdp_scaler c1) // def_n dvdp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_gcd p q x : root (gcdp p q) x = root p x && root q x.",
            "VernacStartTheoremProof",
            "4530b260eb13e412b890b54c8cdd509ee96c8c9a"
        ],
        [
            "rewrite /= !root_factor_theorem; apply/idP/andP=> [dg| [dp dq]].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by split; apply: dvdp_trans dg _; rewrite ?(dvdp_gcdl, dvdp_gcdr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= (Bezoutp p q)=> [[[u v]]]; rewrite eqp_sym=> e.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "by rewrite (eqp_dvdr _ e) dvdp_addl dvdp_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_biggcd : forall x (ps : seq {poly R}), root (\\big[gcdp/0]_(p <- ps) p) x = all (fun p => root p x) ps.",
            "VernacStartTheoremProof",
            "693cb562ecfa5941b43eb0af07745a3f702ceb8f"
        ],
        [
            "move=> x; elim; first by rewrite big_nil root0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> p ps ihp; rewrite big_cons /= root_gcd ihp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint gdcop_rec q p k := if k is m.+1 then if coprimep p q then p else gdcop_rec q (divp p (gcdp p q)) m else (q == 0)%:R.",
            "VernacFixpoint",
            "8c43140e310c66413faa8c3c510866db079db0fa"
        ],
        [
            "Definition gdcop q p := gdcop_rec q p (size p).",
            "VernacDefinition",
            "675cff564b4fc231bf2cf6d065297020df1f41c8"
        ],
        [
            "Variant gdcop_spec q p : {poly R} -> Type := GdcopSpec r of (dvdp r p) & ((coprimep r q) || (p == 0)) & (forall d, dvdp d p -> coprimep d q -> dvdp d r) : gdcop_spec q p r.",
            "VernacInductive",
            "9e9ef59e9a031a4ff1f55413bbdc859c5545c6fb"
        ],
        [
            "Lemma gdcop0 q : gdcop q 0 = (q == 0)%:R.",
            "VernacStartTheoremProof",
            "ada304c8049a2b1cd680bf57275f55d7abd76eb0"
        ],
        [
            "by rewrite /gdcop size_poly0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gdcop_recP : forall q p k, size p <= k -> gdcop_spec q p (gdcop_rec q p k).",
            "VernacStartTheoremProof",
            "a790920c3a0221c5dbba5eef7a7a8e424f7fbc89"
        ],
        [
            "move=> q p k; elim: k p => [p | k ihk p] /=.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "rewrite leqn0 size_poly_eq0; move/eqP->.",
            "VernacExtend",
            "9d45b3f5079bd11fa9301fef8a859fbbb0c29729"
        ],
        [
            "case q0: (_ == _); split; rewrite ?coprime1p // ?eqxx ?orbT //.",
            "VernacExtend",
            "7490335248ac33c0aa69698a687c1a5cbe9f554e"
        ],
        [
            "by move=> d _; rewrite (eqP q0) coprimep0 dvdp1 size_poly_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> hs; case cop : (coprimep _ _); first by split; rewrite ?dvdpp ?cop.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case (eqVneq p 0) => [-> | p0].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite div0p; apply: ihk; rewrite size_poly0 leq0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq q 0) => [-> | q0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite gcdp0 divpp ?p0 //= => {hs ihk}; case: k=> /=.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "rewrite eqxx; split; rewrite ?dvd1p ?coprimep0 ?eqpxx //=.",
            "VernacExtend",
            "debf65256af0a985ce0d9106047a9d33f2ce903a"
        ],
        [
            "by move=> d _; rewrite coprimep0 dvdp1 size_poly_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> n; rewrite coprimep0 polyC_eqp1 //; rewrite lc_expn_scalp_neq0.",
            "VernacExtend",
            "e05f4a56f17e4b341df19faa23614b9e0a1c72d3"
        ],
        [
            "split; first by rewrite (@eqp_dvdl 1) ?dvd1p // polyC_eqp1 lc_expn_scalp_neq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite coprimep0 polyC_eqp1 // ?lc_expn_scalp_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> d _; rewrite coprimep0; move/eqp_dvdl->; rewrite dvd1p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (dvdp_gcdl p q); rewrite dvdp_eq; move/eqP=> e.",
            "VernacExtend",
            "40075a671b142e70c4190413219df8981418e910"
        ],
        [
            "have sgp : size (gcdp p q) <= size p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: dvdp_leq; rewrite ?gcdp_eq0 ?p0 ?q0 // dvdp_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : p %/ gcdp p q != 0; last move/negPf=>p'n0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: (dvdp_mulIl (p %/ gcdp p q) (gcdp p q)); move/dvdpN0; apply; rewrite -e.",
            "VernacExtend",
            "b1e149be7fb022c9327d5abd9c45eb24e7c31671"
        ],
        [
            "by rewrite scale_poly_eq0 negb_or lc_expn_scalp_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have gn0 : gcdp p q != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (dvdp_mulIr (p %/ gcdp p q) (gcdp p q)); move/dvdpN0; apply; rewrite -e.",
            "VernacExtend",
            "b1e149be7fb022c9327d5abd9c45eb24e7c31671"
        ],
        [
            "by rewrite scale_poly_eq0 negb_or lc_expn_scalp_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sp' : size (p %/ (gcdp p q)) <= k.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite size_divp ?sgp // leq_subLR (leq_trans hs)//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -subn_gt0 addnK -subn1 ltn_subRL addn0 ltnNge leq_eqVlt.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [_ == _]cop ltnS leqn0 size_poly_eq0 (negPf gn0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case (ihk _ sp')=> r' dr'p'; first rewrite p'n0 orbF=> cr'q maxr'.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "constructor=> //=; rewrite ?(negPf p0) ?orbF //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "exact/(dvdp_trans dr'p')/divp_dvd/dvdp_gcdl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move=> d dp cdq; apply: maxr'; last by rewrite cdq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case dpq: (d %| gcdp p q).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (dpq); rewrite dvdp_gcd dp /= => dq; apply: dvdUp; move: cdq.",
            "VernacExtend",
            "5a04e277f2febe84c90636c66d30f3d882f429f6"
        ],
        [
            "apply: contraLR=> nd1; apply/coprimepPn; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists d; rewrite dvdp_gcd dvdpp dq nd1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/negP: p0; move/negP; apply: contra=> d0; move: dp; rewrite (eqP d0).",
            "VernacExtend",
            "5f384409d6e94469379d36a0a390bd2faaedb9e2"
        ],
        [
            "by rewrite dvd0p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (dp); apply: contraLR=> ndp'.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite (@eqp_dvdr ((lead_coef (gcdp p q) ^+ scalp p (gcdp p q))*:p)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite e; rewrite Gauss_dvdpl //; apply: (coprimep_dvdl (dvdp_gcdr _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite eqp_sym eqp_scale // lc_expn_scalp_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gdcopP q p : gdcop_spec q p (gdcop q p).",
            "VernacStartTheoremProof",
            "2cd5a9700003a25c6de76f14e2f24ced269d961f"
        ],
        [
            "by rewrite /gdcop; apply: gdcop_recP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_gdco p q : (q != 0)%B -> coprimep (gdcop p q) p.",
            "VernacStartTheoremProof",
            "28b610f0f7393d04ee21b220c22d7d52f6cb4bd6"
        ],
        [
            "by move=> q_neq0; case: gdcopP=> d; rewrite (negPf q_neq0) orbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size2_dvdp_gdco p q d : p != 0 -> size d = 2%N -> (d %| (gdcop q p)) = (d %| p) && ~~(d %| q).",
            "VernacStartTheoremProof",
            "06d8e186e8cfe4c88c0203fad5a9667427f120c0"
        ],
        [
            "case: (eqVneq d 0) => [-> | dn0]; first by rewrite size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> p0 sd; apply/idP/idP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "case: gdcopP=> r rp crq maxr dr; move/negPf: (p0)=> p0f.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "rewrite (dvdp_trans dr) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: crq; apply: contraL=> dq; rewrite p0f orbF; apply/coprimepPn.",
            "VernacExtend",
            "42e188f64c1b305ed274c1704aedbf73891c3017"
        ],
        [
            "by move: p0; apply: contra=> r0; move: rp; rewrite (eqP r0) dvd0p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists d; rewrite dvdp_gcd dr dq -size_poly_eq1 sd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/andP=> dp dq; case: gdcopP=> r rp crq maxr; apply: maxr=> //.",
            "VernacExtend",
            "d2380c5ddfa1ceeb28b65f11c73d20f7b7f618ea"
        ],
        [
            "apply/coprimepP=> x xd xq.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move: (dvdp_leq dn0 xd); rewrite leq_eqVlt sd; case/orP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite ltnS leq_eqVlt; case/orP; first by rewrite -size_poly_eq1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite ltnS leqn0 size_poly_eq0; move/eqP=> x0; move: xd; rewrite x0 dvd0p.",
            "VernacExtend",
            "a2d8dd52a7002ea77bccbdbdac9eb88c7ea43cab"
        ],
        [
            "by rewrite (negPf dn0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -sd dvdp_size_eqp //; move/(eqp_dvdl q); rewrite xq (negPf dq).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_gdco p q : (gdcop p q) %| q.",
            "VernacStartTheoremProof",
            "90b504e151c89a376c09e4dd3aa6b80a8bb040db"
        ],
        [
            "by case: gdcopP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_gdco p q x : p != 0 -> root (gdcop q p) x = root p x && ~~(root q x).",
            "VernacStartTheoremProof",
            "4c0f15c189ef2b72539a8718bbb9fe6e067ce385"
        ],
        [
            "move=> p0 /=; rewrite !root_factor_theorem.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: size2_dvdp_gdco; rewrite ?p0 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite size_addl size_polyX // size_opp size_polyC ltnS; case: (x != 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_comp_poly r p q : (p %| q) -> (p \\Po r) %| (q \\Po r).",
            "VernacStartTheoremProof",
            "f720584bac6aa9568b5428295c9d3cd8c40d21b7"
        ],
        [
            "case: (eqVneq p 0) => [-> | pn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite comp_poly0 !dvd0p; move/eqP->; rewrite comp_poly0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite dvdp_eq; set c := _ ^+ _; set s := _ %/ _; move/eqP=> Hq.",
            "VernacExtend",
            "95aab7297d3809dacf819524463cf67310f6682c"
        ],
        [
            "apply: (@eq_dvdp c (s \\Po r)); first by rewrite expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -comp_polyZ Hq comp_polyM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_comp_poly r p q : gcdp p q \\Po r %= gcdp (p \\Po r) (q \\Po r).",
            "VernacStartTheoremProof",
            "0c7b1d7a25b3af10020d61a7d484673abcbccebd"
        ],
        [
            "apply/andP; split.",
            "VernacExtend",
            "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
        ],
        [
            "by rewrite dvdp_gcd !dvdp_comp_poly ?dvdp_gcdl ?dvdp_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Bezoutp p q) => [[u v]] /andP [].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move/(dvdp_comp_poly r) => Huv _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (dvdp_trans _ Huv) // comp_polyD !comp_polyM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite dvdp_add // dvdp_mull // (dvdp_gcdl,dvdp_gcdr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_comp_poly r p q : coprimep p q -> coprimep (p \\Po r) (q \\Po r).",
            "VernacStartTheoremProof",
            "5e7a48e60257df0d522e9ef4cf26b3a3aa7169aa"
        ],
        [
            "rewrite -!gcdp_eqp1 -!size_poly_eq1 -!dvdp1; move/(dvdp_comp_poly r).",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite comp_polyC => Hgcd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply: dvdp_trans Hgcd; case/andP: (gcdp_comp_poly r p q).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_addl_mul p q r : coprimep r (p * r + q) = coprimep r q.",
            "VernacStartTheoremProof",
            "d30cb560dee1c44dfde39137390914b010f32587"
        ],
        [
            "by rewrite !coprimep_def (eqp_size (gcdp_addl_mul _ _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition irreducible_poly p := (size p > 1) * (forall q, size q != 1%N -> q %| p -> q %= p) : Prop.",
            "VernacDefinition",
            "b50c14aa9ff0b8634006d5ba4f62d76a30df28e6"
        ],
        [
            "Lemma irredp_neq0 p : irreducible_poly p -> p != 0.",
            "VernacStartTheoremProof",
            "67b9eb67ca175a312fc2f8925c9fb51438789c39"
        ],
        [
            "by rewrite -size_poly_eq0 -lt0n => [[/ltnW]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition apply_irredp p (irr_p : irreducible_poly p) := irr_p.2.",
            "VernacDefinition",
            "996ef61df7673728c79cac7733c1a356fae33fa1"
        ],
        [
            "Coercion apply_irredp : irreducible_poly >-> Funclass.",
            "VernacCoercion",
            "33bd02a9452a51d799ea96387c3b4f23b38cd8d2"
        ],
        [
            "Lemma modp_XsubC p c : p %% ('X - c%:P) = p.[c]%:P.",
            "VernacStartTheoremProof",
            "aa91a004e21e9b9886343039395c402b622da34e"
        ],
        [
            "have: root (p - p.[c]%:P) c by rewrite /root !hornerE subrr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/factor_theorem=> q /(canRL (subrK _)) Dp; rewrite modpE /= lead_coefXsubC.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite GRing.unitr1 expr1n invr1 scale1r {1}Dp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite RingMonic.rmodp_addl_mul_small // ?monicXsubC // size_XsubC size_polyC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (p.[c] == 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_XsubC p c : coprimep p ('X - c%:P) = ~~ root p c.",
            "VernacStartTheoremProof",
            "ceccfd0f8b7324250778339cffad78c2ca360918"
        ],
        [
            "rewrite -coprimep_modl modp_XsubC /root -alg_polyC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [-> | /coprimep_scalel->] := altP eqP; last exact: coprime1p.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite scale0r /coprimep gcd0p size_XsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimepX p : coprimep p 'X = ~~ root p 0.",
            "VernacStartTheoremProof",
            "51e66702b38610bd92db1a03e1333104607e3253"
        ],
        [
            "by rewrite -['X]subr0 coprimep_XsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_monic : {in monic &, forall p q, (p %= q) = (p == q)}.",
            "VernacStartTheoremProof",
            "a98fec51f2476d80b864be94fed093ad29e3747f"
        ],
        [
            "move=> p q monic_p monic_q; apply/idP/eqP=> [|-> //].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "case/eqpP=> [[a b] /= /andP[a_neq0 _] eq_pq].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply: (@mulfI _ a%:P); first by rewrite polyC_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !mul_polyC eq_pq; congr (_ *: q); apply: (mulIf (oner_neq0 _)).",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "by rewrite -{1}(monicP monic_q) -(monicP monic_p) -!lead_coefZ eq_pq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_mul_XsubC p q c : (p %| ('X - c%:P) * q) = ((if root p c then p %/ ('X - c%:P) else p) %| q).",
            "VernacStartTheoremProof",
            "c6667065684635c39a56dcf3081af29480e6ab77"
        ],
        [
            "case: ifPn => [| not_pc0]; last by rewrite Gauss_dvdpr ?coprimep_XsubC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite root_factor_theorem -eqp_div_XsubC mulrC => /eqP{1}->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite dvdp_mul2l ?polyXsubC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_prod_XsubC (I : Type) (r : seq I) (F : I -> R) p : p %| \\prod_(i <- r) ('X - (F i)%:P) -> {m | p %= \\prod_(i <- mask m r) ('X - (F i)%:P)}.",
            "VernacStartTheoremProof",
            "6479c330db4085fb3bff253ccea291a4407edbc7"
        ],
        [
            "elim: r => [|i r IHr] in p *.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite big_nil dvdp1; exists nil; rewrite // big_nil -size_poly_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite big_cons dvdp_mul_XsubC root_factor_theorem -eqp_div_XsubC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: eqP => [{2}-> | _] /IHr[m Dp]; last by exists (false :: m).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists (true :: m); rewrite /= mulrC big_cons eqp_mul2l ?polyXsubC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irredp_XsubC (x : R) : irreducible_poly ('X - x%:P).",
            "VernacStartTheoremProof",
            "6e2091eb3eaa4b5a76c41e898de06f9688221ebb"
        ],
        [
            "split=> [|d size_d d_dv_Xx]; first by rewrite size_XsubC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have: ~ d %= 1 by apply/negP; rewrite -size_poly_eq1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [|m /=] := @dvdp_prod_XsubC _ [:: x] id d; first by rewrite big_seq1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: m => [|[] [|_ _] /=]; rewrite (big_nil, big_seq1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irredp_XsubCP d p : irreducible_poly p -> d %| p -> {d %= 1} + {d %= p}.",
            "VernacStartTheoremProof",
            "b567d4721038bb0828fdbc69b6c5d692ca153cec"
        ],
        [
            "move=> irred_p dvd_dp; have [] := boolP (_ %= 1); first by left.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -size_poly_eq1=> /irred_p /(_ dvd_dp); right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IDomainPseudoDivision.",
            "VernacEndSegment",
            "7ebf8baddca44f514135a9f82c6b908fedf3cb2c"
        ],
        [
            "Hint Resolve eqpxx divp0 divp1 mod0p modp0 modp1 dvdp_mull dvdp_mulr dvdpp : core.",
            "VernacHints",
            "4982376ebd623e86ab3b23e5170df6bfa9063e38"
        ],
        [
            "Hint Resolve dvdp0 : core.",
            "VernacHints",
            "1568941efacc87740f1a9d39aac879d6a507e06d"
        ],
        [
            "End CommonIdomain.",
            "VernacEndSegment",
            "145fa4dbda708346a49145970b14b82e6f96034b"
        ],
        [
            "Module Idomain.",
            "VernacDefineModule",
            "f0adf0e03fd203fb2360c15f634551f00924344a"
        ],
        [
            "Include IdomainDefs.",
            "VernacInclude",
            "6e6cd8959fae10a63ac27c61f15818f8e6bc8db6"
        ],
        [
            "Export IdomainDefs.",
            "VernacImport",
            "54a916130f188dd44e5cc757c7e15319c8c970fc"
        ],
        [
            "Include WeakIdomain.",
            "VernacInclude",
            "a0f38f2b9731909b7f26501e588f1de370eb27c3"
        ],
        [
            "Include CommonIdomain.",
            "VernacInclude",
            "e6c6852a3d0366289c7ecccc86ef72a93f24dcc0"
        ],
        [
            "End Idomain.",
            "VernacEndSegment",
            "b9015956bfea5d3aa94ee70109f52094a6f74277"
        ],
        [
            "Module IdomainMonic.",
            "VernacDefineModule",
            "b7ef3a4b9a503cf14938f0a9fb8549f97be7eb53"
        ],
        [
            "Import Ring ComRing UnitRing IdomainDefs Idomain.",
            "VernacImport",
            "2dc4513676e66adbf9e3f1df79d07a1e6f40588d"
        ],
        [
            "Section MonicDivisor.",
            "VernacBeginSection",
            "54aca5139070f71955593393f9aba17ffb244d30"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Variable q : {poly R}.",
            "VernacAssumption",
            "25efc21f963b27302d55fa6d1f21f6595166106b"
        ],
        [
            "Hypothesis monq : q \\is monic.",
            "VernacAssumption",
            "dab3efefc2c9f48b92c92af2b3300bb28a336355"
        ],
        [
            "Implicit Type p d r : {poly R}.",
            "VernacReserve",
            "e64a86921d42c7b423abc9c2187f13d9a884eb8a"
        ],
        [
            "Lemma divpE p : p %/ q = rdivp p q.",
            "VernacStartTheoremProof",
            "dfb4b23e0877ee06f47acdebaa0d88b30b8eb2a1"
        ],
        [
            "by rewrite divpE (eqP monq) unitr1 expr1n invr1 scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modpE p : p %% q = rmodp p q.",
            "VernacStartTheoremProof",
            "b828e72ce9f2b8a4d961a4e1b92eab00638c11ed"
        ],
        [
            "by rewrite modpE (eqP monq) unitr1 expr1n invr1 scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalpE p : scalp p q = 0%N.",
            "VernacStartTheoremProof",
            "28bf2752a65d56500e52a5c47baa6d42569936b0"
        ],
        [
            "by rewrite scalpE (eqP monq) unitr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_eq p : p = (p %/ q) * q + (p %% q).",
            "VernacStartTheoremProof",
            "5b48b9d69b0e7d57ea002286c45b9baedc4691d4"
        ],
        [
            "by rewrite -divp_eq (eqP monq) expr1n scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpp p : q %/ q = 1.",
            "VernacStartTheoremProof",
            "1cd406d5da66551a3c254feb84aa82c5440682ac"
        ],
        [
            "by rewrite divpp ?monic_neq0 // (eqP monq) expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_eq p : (q %| p) = (p == (p %/ q) * q).",
            "VernacStartTheoremProof",
            "968c6abf9735ee7acc425f7e0a96d3d2d4455d22"
        ],
        [
            "by rewrite dvdp_eq (eqP monq) expr1n scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdpP p : reflect (exists qq, p = qq * q) (q %| p).",
            "VernacStartTheoremProof",
            "22faf1c02932dc74bb38bd4d8d7a1e7e6a50bd15"
        ],
        [
            "apply: (iffP idP); first by rewrite dvdp_eq; move/eqP=> e; exists (p %/ q).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=> qq ->; rewrite dvdp_mull // dvdpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulpK p : p * q %/ q = p.",
            "VernacStartTheoremProof",
            "61954d9d19e751793efc50cfb986f8ab2f924d9b"
        ],
        [
            "by rewrite mulpK ?monic_neq0 // (eqP monq) expr1n scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulKp p : q * p %/ q = p.",
            "VernacStartTheoremProof",
            "ce6ca374f86b238775af7229c5f797b747030a31"
        ],
        [
            "by rewrite mulrC; apply: mulpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MonicDivisor.",
            "VernacEndSegment",
            "9f681880506ece19eadf2c72eadecd4d9bb524ed"
        ],
        [
            "End IdomainMonic.",
            "VernacEndSegment",
            "348ed9a0a4d49a9b603ff716a9f9e7c6d45f12c6"
        ],
        [
            "Module IdomainUnit.",
            "VernacDefineModule",
            "0088b85749ce97a5f695627632018744bdf23bda"
        ],
        [
            "Import Ring ComRing UnitRing IdomainDefs Idomain.",
            "VernacImport",
            "2dc4513676e66adbf9e3f1df79d07a1e6f40588d"
        ],
        [
            "Section UnitDivisor.",
            "VernacBeginSection",
            "96a9638dbaaeb0b3b881495709f28ad79af23e82"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Variable d : {poly R}.",
            "VernacAssumption",
            "65a16b7c824c823b469cb11b9fa0bbbf24925349"
        ],
        [
            "Hypothesis ulcd : lead_coef d \\in GRing.unit.",
            "VernacAssumption",
            "2fb1efe07aaf137eb761e567b8f869c34a4bc947"
        ],
        [
            "Implicit Type p q r : {poly R}.",
            "VernacReserve",
            "d6200f44bfb7e7f5b344df8b096cee116bdcc1f1"
        ],
        [
            "Lemma divp_eq p : p = (p %/ d) * d + (p %% d).",
            "VernacStartTheoremProof",
            "44eb2b9341b1f9e094c94e9ee7370f249067d8a5"
        ],
        [
            "by have := (divp_eq p d); rewrite scalpE ulcd expr0 scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma edivpP p q r : p = q * d + r -> size r < size d -> q = (p %/ d) /\\ r = p %% d.",
            "VernacStartTheoremProof",
            "a8b704403ca1cadeb455bfaf024bd6f5f14d583c"
        ],
        [
            "move=> ep srd; have := (divp_eq p); rewrite {1}ep.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "move/eqP; rewrite -subr_eq -addrA addrC eq_sym -subr_eq -mulrBl; move/eqP.",
            "VernacExtend",
            "40075a671b142e70c4190413219df8981418e910"
        ],
        [
            "have lcdn0 : lead_coef d != 0 by apply: contraTneq ulcd => ->; rewrite unitr0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case abs: (p %/ d - q == 0).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: abs; rewrite subr_eq0; move/eqP->; rewrite subrr mul0r; move/eqP.",
            "VernacExtend",
            "2f6947b4bb3cd946dd8cbb42ca6f102338279a51"
        ],
        [
            "by rewrite eq_sym subr_eq0; move/eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have hleq : size d <= size ((p %/ d - q) * d).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite size_proper_mul; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mulf_eq0 (negPf lcdn0) orbF lead_coef_eq0 abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: abs; rewrite -size_poly_eq0; move/negbT; rewrite -lt0n; move/prednK<-.",
            "VernacExtend",
            "236681a4f9e3c7cc7f90226d2e92df6be60ab5bc"
        ],
        [
            "by rewrite addSn /= leq_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have hlt : size (r - p %% d) < size d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: leq_ltn_trans (size_add _ _) _; rewrite size_opp.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite gtn_max srd ltn_modp /= -lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> e; have:= (leq_trans hlt hleq); rewrite e ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpP p q r : p = q * d + r -> size r < size d -> q = (p %/ d).",
            "VernacStartTheoremProof",
            "9bc305b5aca282a16a2ce6fa96427edda9597dd4"
        ],
        [
            "by move/edivpP=> h; case/h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modpP p q r : p = q * d + r -> size r < size d -> r = (p %% d).",
            "VernacStartTheoremProof",
            "ebab9e9a56d9870529677b77c3ceb55c6e9b69d7"
        ],
        [
            "by move/edivpP=> h; case/h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ulc_eqpP p q : lead_coef q \\is a GRing.unit -> reflect (exists2 c : R, c != 0 & p = c *: q) (p %= q).",
            "VernacStartTheoremProof",
            "93a7ccad85397e6dbbe992ca4b37c0a2d8b3eeec"
        ],
        [
            "case: (altP (lead_coef q =P 0)) => [->|]; first by rewrite unitr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite lead_coef_eq0 => nz_q ulcq; apply: (iffP idP).",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "case: (altP (p =P 0)) => [->|nz_p].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite eqp_sym eqp0 (negbTE nz_q).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqp_eq=> eq; exists (lead_coef p / lead_coef q).",
            "VernacExtend",
            "d5517d7a72bddc159a42c4fb60dd8817ab810178"
        ],
        [
            "by rewrite mulf_neq0 // ?invr_eq0 lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/(scaler_injl ulcq); rewrite scalerA mulrCA divrr // mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case=> c nz_c ->; apply/eqpP; exists (1, c); rewrite ?scale1r ?oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_eq p : (d %| p) = (p == p %/ d * d).",
            "VernacStartTheoremProof",
            "4e64bb55fbd53cd5841d8f25aa82dbe576bde2ae"
        ],
        [
            "apply/eqP/eqP=> [modp0 | ->]; last exact: modp_mull.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite {1}(divp_eq p) modp0 addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucl_eqp_eq p q : lead_coef q \\is a GRing.unit -> p %= q -> p = (lead_coef p / lead_coef q) *: q.",
            "VernacStartTheoremProof",
            "b7aa313a0ebd9e9c41702e163036a84c36537db2"
        ],
        [
            "move=> ulcq /eqp_eq; move/(congr1 ( *:%R (lead_coef q)^-1 )).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by rewrite !scalerA mulrC divrr // scale1r mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_scalel c p : (c *: p) %% d = c *: (p %% d).",
            "VernacStartTheoremProof",
            "2f1e77c87740b49464d6a1eedb22f7013c1f3a34"
        ],
        [
            "case: (altP (c =P 0)) => [-> | cn0]; first by rewrite !scale0r mod0p.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have e : (c *: p) = (c *: (p %/ d)) * d + c *: (p %% d).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -scalerAl -scalerDr -divp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have s: size (c *: (p %% d)) < size d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -mul_polyC; apply: leq_ltn_trans (size_mul_leq _ _) _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite size_polyC cn0 addSn add0n /= ltn_modp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -lead_coef_eq0; apply: contraTneq ulcd => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: (edivpP e s) => _ ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_scalel c p : (c *: p) %/ d = c *: (p %/ d).",
            "VernacStartTheoremProof",
            "00cf9541ce048b608f04be37f0bdf746e028ead7"
        ],
        [
            "case: (altP (c =P 0)) => [-> | cn0]; first by rewrite !scale0r div0p.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have e : (c *: p) = (c *: (p %/ d)) * d + c *: (p %% d).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -scalerAl -scalerDr -divp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have s: size (c *: (p %% d)) < size d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -mul_polyC; apply: leq_ltn_trans (size_mul_leq _ _) _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite size_polyC cn0 addSn add0n /= ltn_modp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -lead_coef_eq0; apply: contraTneq ulcd => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: (edivpP e s) => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_modpl p q : p %= q -> (p %% d) %= (q %% d).",
            "VernacStartTheoremProof",
            "af6d8218ac31f2b1d9a9f083e68f4ca8f0fccb3b"
        ],
        [
            "case/eqpP=> [[c1 c2]] /andP /= [c1n0 c2n0 e].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply/eqpP; exists (c1, c2); rewrite ?c1n0 //= -!modp_scalel e.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_divl p q : p %= q -> (p %/ d) %= (q %/ d).",
            "VernacStartTheoremProof",
            "fb6c4ae298c57d76fc01a55279ecbae265602e52"
        ],
        [
            "case/eqpP=> [[c1 c2]] /andP /= [c1n0 c2n0 e].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply/eqpP; exists (c1, c2); rewrite ?c1n0 // -!divp_scalel e.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_opp p : (- p) %% d = - (p %% d).",
            "VernacStartTheoremProof",
            "64352a073f15bc5e701303fa356961bd15d4571d"
        ],
        [
            "by rewrite -mulN1r -[- (_ %% _)]mulN1r -polyC_opp !mul_polyC modp_scalel.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_opp p : (- p) %/ d = - (p %/ d).",
            "VernacStartTheoremProof",
            "e84f3d598ce7010ea3299abfd9ca0843347f087e"
        ],
        [
            "by rewrite -mulN1r -[- (_ %/ _)]mulN1r -polyC_opp !mul_polyC divp_scalel.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_add p q : (p + q) %% d = p %% d + q %% d.",
            "VernacStartTheoremProof",
            "c1c92fb20c7b18b9fbb6ffc5d2c09ce8a227565d"
        ],
        [
            "have hs : size (p %% d + q %% d) < size d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: leq_ltn_trans (size_add _ _) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite gtn_max !ltn_modp andbb -lead_coef_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: contraTneq ulcd => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have he : (p + q) = (p %/ d + q %/ d) * d + (p %% d + q %% d).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {1}(divp_eq p) {1}(divp_eq q) addrAC addrA -mulrDl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [_ %% _ + _]addrC addrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: (edivpP he hs).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_add p q : (p + q) %/ d = p %/ d + q %/ d.",
            "VernacStartTheoremProof",
            "d3f2f5bde27b5e49900770d8ded00f7d6f0f779e"
        ],
        [
            "have hs : size (p %% d + q %% d) < size d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: leq_ltn_trans (size_add _ _) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite gtn_max !ltn_modp andbb -lead_coef_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: contraTneq ulcd => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have he : (p + q) = (p %/ d + q %/ d) * d + (p %% d + q %% d).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {1}(divp_eq p) {1}(divp_eq q) addrAC addrA -mulrDl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [_ %% _ + _]addrC addrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: (edivpP he hs).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulpK q : (q * d) %/ d = q.",
            "VernacStartTheoremProof",
            "4ffb26a0a6a128be7582427ca7e324892c2ed32d"
        ],
        [
            "case/edivpP: (sym_eq (addr0 (q * d))); rewrite // size_poly0 size_poly_gt0.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite -lead_coef_eq0; apply: contraTneq ulcd => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulKp q : (d * q) %/ d = q.",
            "VernacStartTheoremProof",
            "c56e54a8b30eb5e9b870fe84d04568887216b7da"
        ],
        [
            "by rewrite mulrC; apply: mulpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_addl_mul_small q r : size r < size d -> (q * d + r) %/ d = q.",
            "VernacStartTheoremProof",
            "e66a0e32dfcda315584af4fbbcd3a73b434a5230"
        ],
        [
            "by move=> srd; rewrite divp_add (divp_small srd) addr0 mulpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_addl_mul_small q r : size r < size d -> (q * d + r) %% d = r.",
            "VernacStartTheoremProof",
            "c4015371fd2bad122bf0c7f5a38900f8ac609d92"
        ],
        [
            "by move=> srd; rewrite modp_add modp_mull add0r modp_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_addl_mul q r : (q * d + r) %/ d = q + r %/ d.",
            "VernacStartTheoremProof",
            "027d334216e85a8e9e51b69ed31c32a049b65be8"
        ],
        [
            "by rewrite divp_add mulpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpp : d %/ d = 1.",
            "VernacStartTheoremProof",
            "fbce327e64b38839dd8f1cfb09c9f4d2005d953a"
        ],
        [
            "by rewrite -{1}(mul1r d) mulpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_trunc_divp m : size (m %/ d * d) <= size m.",
            "VernacStartTheoremProof",
            "378cf2ece0de2621302a342ddeb47d2205c8b608"
        ],
        [
            "have dn0 : d != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -lead_coef_eq0; apply: contraTneq ulcd => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case q0 : (m %/ d == 0); first by rewrite (eqP q0) mul0r size_poly0 leq0n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite {2}(divp_eq m) size_addl // size_mul ?q0 //; move/negbT: q0.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite -size_poly_gt0; move/prednK<-; rewrite addSn /=.",
            "VernacExtend",
            "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
        ],
        [
            "by move: dn0; rewrite -(ltn_modp m); move/ltn_addl->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdpP p : reflect (exists q, p = q * d) (d %| p).",
            "VernacStartTheoremProof",
            "26aebeda57e37de78b7a0f8f1cb16d474fa5c534"
        ],
        [
            "apply: (iffP idP) => [| [k ->]]; last by apply/eqP; rewrite modp_mull.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite dvdp_eq; move/eqP->; exists (p %/ d).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpK p : d %| p -> p %/ d * d = p.",
            "VernacStartTheoremProof",
            "8b8552fe1529edf8e35fdbcb007e559410a07a8c"
        ],
        [
            "by rewrite dvdp_eq; move/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpKC p : d %| p -> d * (p %/ d) = p.",
            "VernacStartTheoremProof",
            "9205a92363e3e061d7c2275c3eff2709d37d22ac"
        ],
        [
            "by move=> ?; rewrite mulrC divpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_eq_div p q : d %| p -> (q == p %/ d) = (q * d == p).",
            "VernacStartTheoremProof",
            "b0ec6e92c139ba5d9a8e3bd8c583c6057fbd6094"
        ],
        [
            "move/divpK=> {2}<-; apply/eqP/eqP; first by move->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "suff dn0 : d != 0 by move/(mulIf dn0).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite -lead_coef_eq0; apply: contraTneq ulcd => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_eq_mul p q : d %| p -> (p == q * d) = (p %/ d == q).",
            "VernacStartTheoremProof",
            "f511df44d40c05187e155dc7e6c68840e76ec634"
        ],
        [
            "by move=> dv_d_p; rewrite eq_sym -dvdp_eq_div // eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_mulA p q : d %| q -> p * (q %/ d) = p * q %/ d.",
            "VernacStartTheoremProof",
            "71877c49f37d7d1b5f6e975e66e03aa22edf6672"
        ],
        [
            "move=> hdm; apply/eqP; rewrite eq_sym -dvdp_eq_mul.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -mulrA divpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/divpK: hdm<-; rewrite mulrA dvdp_mull // dvdpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_mulAC m n : d %| m -> m %/ d * n = m * n %/ d.",
            "VernacStartTheoremProof",
            "1a551aa45b4fd3911f8a39c2f08c3762754a8a49"
        ],
        [
            "by move=> hdm; rewrite mulrC (mulrC m); apply: divp_mulA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_mulCA p q : d %| p -> d %| q -> p * (q %/ d) = q * (p %/ d).",
            "VernacStartTheoremProof",
            "598fbc4b6df26e53803f05aa3dcce6fe79de6cfa"
        ],
        [
            "by move=> hdp hdq; rewrite mulrC divp_mulAC // divp_mulA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_mul p q : (p * (q %% d)) %% d = (p * q) %% d.",
            "VernacStartTheoremProof",
            "ffba3f022080997351c485b3d57af5571fc513a1"
        ],
        [
            "have -> : q %% d = q - q %/ d * d by rewrite {2}(divp_eq q) -addrA addrC subrK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulrDr modp_add // -mulNr mulrA -{2}[_ %% _]addr0; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply/eqP; apply: dvdp_mull; apply: dvdpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UnitDivisor.",
            "VernacEndSegment",
            "e38dd1426899ded3d27c5853c15b001deb266269"
        ],
        [
            "Section MoreUnitDivisor.",
            "VernacBeginSection",
            "27b86bc433560a36791156a31f5c9a232d463c32"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Variable d : {poly R}.",
            "VernacAssumption",
            "65a16b7c824c823b469cb11b9fa0bbbf24925349"
        ],
        [
            "Hypothesis ulcd : lead_coef d \\in GRing.unit.",
            "VernacAssumption",
            "2fb1efe07aaf137eb761e567b8f869c34a4bc947"
        ],
        [
            "Implicit Types p q : {poly R}.",
            "VernacReserve",
            "e955cd8bb2af797f65cbef5dadd14cef37523981"
        ],
        [
            "Lemma expp_sub m n : n <= m -> (d ^+ (m - n))%N = d ^+ m %/ d ^+ n.",
            "VernacStartTheoremProof",
            "d114617451a60174b9c61d43f519e3cbe3cd0511"
        ],
        [
            "by move/subnK=> {2}<-; rewrite exprD mulpK // lead_coef_exp unitrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_pmul2l p q : lead_coef q \\in GRing.unit -> d * p %/ (d * q) = p %/ q.",
            "VernacStartTheoremProof",
            "8bffd389ccb84ddce8a203c532a7a966c8f7b447"
        ],
        [
            "move=> uq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have udq: lead_coef (d * q) \\in GRing.unit.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite lead_coefM unitrM_comm ?ulcd //; red; rewrite mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}(divp_eq uq p) mulrDr mulrCA divp_addl_mul //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have dn0 : d != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -lead_coef_eq0; apply: contraTneq ulcd => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have qn0 : q != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -lead_coef_eq0; apply: contraTneq uq => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have dqn0 : d * q != 0 by rewrite mulf_eq0 negb_or dn0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff : size (d * (p %% q)) < size (d * q).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite ltnNge -divpN0 // negbK => /eqP ->; rewrite addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (altP ( (p %% q) =P 0)) => [-> | rn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mulr0 size_poly0 size_poly_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !size_mul //; move: dn0; rewrite -size_poly_gt0.",
            "VernacExtend",
            "3051a4e8bb68166b140398e2c3c2862857447428"
        ],
        [
            "by move/prednK<-; rewrite !addSn /= ltn_add2l ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_pmul2r p q : lead_coef p \\in GRing.unit -> q * d %/ (p * d) = q %/ p.",
            "VernacStartTheoremProof",
            "3e2dff2ecc299844f88d40040d9867916a752120"
        ],
        [
            "by move=> uq; rewrite -!(mulrC d) divp_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_divl r p q : lead_coef r \\in GRing.unit -> lead_coef p \\in GRing.unit -> q %/ p %/ r = q %/ (p * r).",
            "VernacStartTheoremProof",
            "c267f02206a28e93cbb9318a7c85585ecfa119a1"
        ],
        [
            "move=> ulcr ulcp.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have e : q = (q %/ p %/ r) * (p * r) + ((q %/ p) %% r * p + q %% p).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite addrA (mulrC p) mulrA -mulrDl; rewrite -divp_eq //; apply: divp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pn0 : p != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -lead_coef_eq0; apply: contraTneq ulcp => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have rn0 : r != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -lead_coef_eq0; apply: contraTneq ulcr => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have s : size ((q %/ p) %% r * p + q %% p) < size (p * r).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (altP ((q %/ p) %% r =P 0)) => [-> | qn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite mul0r add0r size_mul // (polySpred rn0) addnS /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: leq_trans (leq_addr _ _); rewrite ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_addl mulrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !size_mul // (polySpred pn0) !addSn /= ltn_add2l ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_mul // (polySpred qn0) addnS /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: leq_trans (leq_addr _ _); rewrite ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (edivpP _ e s) => //; rewrite lead_coefM unitrM_comm ?ulcp //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by red; rewrite mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpAC p q : lead_coef p \\in GRing.unit -> q %/ d %/ p = q %/ p %/ d.",
            "VernacStartTheoremProof",
            "3cc8edcab8e0a495539482e0fe31dd8a4d679166"
        ],
        [
            "by move=> ulcp; rewrite !divp_divl // mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_scaler c p : c \\in GRing.unit -> p %% (c *: d) = (p %% d).",
            "VernacStartTheoremProof",
            "4ddb95d29b6afb002866230e5a58963195d3ce1a"
        ],
        [
            "move=> cn0; case: (eqVneq d 0) => [-> | dn0]; first by rewrite scaler0 !modp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have e : p = (c^-1 *: (p %/ d)) * (c *: d) + (p %% d).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite scalerCA scalerA mulVr // scale1r -(divp_eq ulcd).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff s : size (p %% d) < size (c *: d).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite (modpP _ e s) // -mul_polyC lead_coefM lead_coefC unitrM cn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite size_scale ?ltn_modp //; apply: contraTneq cn0 => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_scaler c p : c \\in GRing.unit -> p %/ (c *: d) = c^-1 *: (p %/ d).",
            "VernacStartTheoremProof",
            "9b35b2b05b700cbb7167cad358c38074f715f349"
        ],
        [
            "move=> cn0; case: (eqVneq d 0) => [-> | dn0].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite scaler0 !divp0 scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have e : p = (c^-1 *: (p %/ d)) * (c *: d) + (p %% d).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite scalerCA scalerA mulVr // scale1r -(divp_eq ulcd).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff s : size (p %% d) < size (c *: d).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite (divpP _ e s) // -mul_polyC lead_coefM lead_coefC unitrM cn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite size_scale ?ltn_modp //; apply: contraTneq cn0 => ->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MoreUnitDivisor.",
            "VernacEndSegment",
            "c4f504d5c70e62b4157f14e1f34feb900a5de411"
        ],
        [
            "End IdomainUnit.",
            "VernacEndSegment",
            "c7797a3d862a758be4cb33702e4f9f9b1aa4eae0"
        ],
        [
            "Module Field.",
            "VernacDefineModule",
            "1e22a8b26476316f68df1c1ef3452c0e53a9f8ad"
        ],
        [
            "Import Ring ComRing UnitRing.",
            "VernacImport",
            "0a70babc9126b026442aaaafaa679e78dcb16845"
        ],
        [
            "Include IdomainDefs.",
            "VernacInclude",
            "6e6cd8959fae10a63ac27c61f15818f8e6bc8db6"
        ],
        [
            "Export IdomainDefs.",
            "VernacImport",
            "54a916130f188dd44e5cc757c7e15319c8c970fc"
        ],
        [
            "Include CommonIdomain.",
            "VernacInclude",
            "e6c6852a3d0366289c7ecccc86ef72a93f24dcc0"
        ],
        [
            "Section FieldDivision.",
            "VernacBeginSection",
            "dbeaf01b06d3491396837bff3c6f740062abff35"
        ],
        [
            "Variable F : fieldType.",
            "VernacAssumption",
            "dfbeb3104cff90ac5c843c17124389867a4c6a4a"
        ],
        [
            "Implicit Type p q r d : {poly F}.",
            "VernacReserve",
            "6d150dab613b4fc93222bc6308b362bd1500fcfc"
        ],
        [
            "Lemma divp_eq p q : p = (p %/ q) * q + (p %% q).",
            "VernacStartTheoremProof",
            "4b384f6e127badf1d3e753f6274478f9357c60a2"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite modp0 mulr0 add0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.divp_eq; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_modpP p q d r : p = q * d + r -> size r < size d -> q = (p %/ d) /\\ r = p %% d.",
            "VernacStartTheoremProof",
            "2d5c0e54737d420b4507b17a1250ca2d98a137a6"
        ],
        [
            "move=> he hs; apply: IdomainUnit.edivpP => //; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -size_poly_gt0; apply: leq_trans hs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpP p q d r : p = q * d + r -> size r < size d -> q = (p %/ d).",
            "VernacStartTheoremProof",
            "d6e6e1bb3a5216e4c4700e629db212042502e671"
        ],
        [
            "by move/divp_modpP=> h; case/h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modpP p q d r : p = q * d + r -> size r < size d -> r = (p %% d).",
            "VernacStartTheoremProof",
            "319516451535cafe2b1898fe68f8c7a4c4f716ed"
        ],
        [
            "by move/divp_modpP=> h; case/h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqpfP p q : p %= q -> p = (lead_coef p / lead_coef q) *: q.",
            "VernacStartTheoremProof",
            "09ea355f5d1310fba9e8a349caa70e2815241e61"
        ],
        [
            "have [->|nz_q] := altP (q =P 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite eqp0 => /eqP ->; rewrite scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/IdomainUnit.ucl_eqp_eq; apply; rewrite unitfE.",
            "VernacExtend",
            "23f9f92699e2f1e05351cd880f320976b7cb1633"
        ],
        [
            "by move: nz_q; rewrite -lead_coef_eq0 => nz_qT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_eq q p : (q %| p) = (p == p %/ q * q).",
            "VernacStartTheoremProof",
            "46c2e84d70885d90017faf1b7a5ff70d84782659"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite dvd0p mulr0 eq_sym.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.dvdp_eq; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqpf_eq p q : reflect (exists2 c, c != 0 & p = c *: q) (p %= q).",
            "VernacStartTheoremProof",
            "a113463a6362e5cccccb398153061307a4fd9a1b"
        ],
        [
            "apply: (iffP idP); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=> c nz_c ->; apply/eqpP.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by exists (1, c); rewrite ?scale1r ?oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [->|nz_q] := altP (q =P 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite eqp0=> /eqP ->; exists 1; rewrite ?scale1r ?oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/IdomainUnit.ulc_eqpP; first by rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> c nz_c ->; exists c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_scalel c p q : (c *: p) %% q = c *: (p %% q).",
            "VernacStartTheoremProof",
            "352e51d4a10f5cd051368af1f9aba02b68ac2f77"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite !modp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.modp_scalel; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulpK p q : q != 0 -> p * q %/ q = p.",
            "VernacStartTheoremProof",
            "7e74493d592001da0c15fabc604253fe9c275cc7"
        ],
        [
            "by move=> qn0; rewrite IdomainUnit.mulpK // unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulKp p q : q != 0 -> q * p %/ q = p.",
            "VernacStartTheoremProof",
            "717ce7d516a7caee35dbf051738640d61a9a5360"
        ],
        [
            "by rewrite mulrC; apply: mulpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_scalel c p q : (c *: p) %/ q = c *: (p %/ q).",
            "VernacStartTheoremProof",
            "2510d183af6e666deac83d099981826eff1e02f3"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite !divp0 scaler0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.divp_scalel; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_scaler c p d : c != 0 -> p %% (c *: d) = (p %% d).",
            "VernacStartTheoremProof",
            "a5fd40a21c279d2726307e9d5665156e75365006"
        ],
        [
            "move=> cn0; case: (eqVneq d 0) => [-> | dn0]; first by rewrite scaler0 !modp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have e : p = (c^-1 *: (p %/ d)) * (c *: d) + (p %% d).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite scalerCA scalerA mulVf // scale1r -divp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff s : size (p %% d) < size (c *: d) by rewrite (modpP e s).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite size_scale ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_scaler c p d : c != 0 -> p %/ (c *: d) = c^-1 *: (p %/ d).",
            "VernacStartTheoremProof",
            "4812235717ea8762022b4aa81a6f87d58d767336"
        ],
        [
            "move=> cn0; case: (eqVneq d 0) => [-> | dn0].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite scaler0 !divp0 scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have e : p = (c^-1 *: (p %/ d)) * (c *: d) + (p %% d).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite scalerCA scalerA mulVf // scale1r -divp_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff s : size (p %% d) < size (c *: d) by rewrite (divpP e s).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite size_scale ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_modpl d p q : p %= q -> (p %% d) %= (q %% d).",
            "VernacStartTheoremProof",
            "8280b7b9be5c3b41f2ebbc2a65f88d4bf42295d7"
        ],
        [
            "case/eqpP=> [[c1 c2]] /andP /= [c1n0 c2n0 e].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply/eqpP; exists (c1, c2); rewrite ?c1n0 // -!modp_scalel e.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_divl d p q : p %= q -> (p %/ d) %= (q %/ d).",
            "VernacStartTheoremProof",
            "8bafdfdf6c094344d8b246030d6dea249eba6f8b"
        ],
        [
            "case/eqpP=> [[c1 c2]] /andP /= [c1n0 c2n0 e].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply/eqpP; exists (c1, c2); rewrite ?c1n0 // -!divp_scalel e.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_modpr d p q : p %= q -> (d %% p) %= (d %% q).",
            "VernacStartTheoremProof",
            "c1b9fa5d2aa887ef1cd57583e8a2a7af28f20fdb"
        ],
        [
            "case/eqpP=> [[c1 c2]] /andP [c1n0 c2n0 e].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have -> : p = (c1^-1 * c2) *: q by rewrite -scalerA -e scalerA mulVf // scale1r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite modp_scaler ?eqpxx // mulf_eq0 negb_or invr_eq0 c1n0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_mod p1 p2 q1 q2 : p1 %= p2 -> q1 %= q2 -> p1 %% q1 %= p2 %% q2.",
            "VernacStartTheoremProof",
            "6784383054c8c03e94c2ffc5ebd14004aaf6b876"
        ],
        [
            "move=> e1 e2; apply: eqp_trans (eqp_modpr _ e2).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply: eqp_trans (eqp_modpl _ e1); apply: eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_divr (d m n : {poly F}) : m %= n -> (d %/ m) %= (d %/ n).",
            "VernacStartTheoremProof",
            "952243caa097e2a70d6573821541fcd2352269cf"
        ],
        [
            "case/eqpP=> [[c1 c2]] /andP [c1n0 c2n0 e].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have -> : m = (c1^-1 * c2) *: n by rewrite -scalerA -e scalerA mulVf // scale1r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite divp_scaler ?eqp_scale // ?invr_eq0 mulf_eq0 negb_or invr_eq0 c1n0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_div p1 p2 q1 q2 : p1 %= p2 -> q1 %= q2 -> p1 %/ q1 %= p2 %/ q2.",
            "VernacStartTheoremProof",
            "e9a3e66ea5768f360a99b3e94c1e5185d7a12e84"
        ],
        [
            "move=> e1 e2; apply: eqp_trans (eqp_divr _ e2).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply: eqp_trans (eqp_divl _ e1); apply: eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_gdcor p q r : q %= r -> gdcop p q %= gdcop p r.",
            "VernacStartTheoremProof",
            "7dbcaa7c5c272bc5457b4b25c38e6bf568c87e15"
        ],
        [
            "move=> eqr; rewrite /gdcop (eqp_size eqr).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (size r)=> n; elim: n p q r eqr => [|n ihn] p q r; first by rewrite eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> eqr /=; rewrite (eqp_coprimepl p eqr); case: ifP => _ //; apply: ihn.",
            "VernacExtend",
            "baf26b2a0e43ffbfbf3d72e47e92908480589ac4"
        ],
        [
            "by apply: eqp_div => //; apply: eqp_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_gdcol p q r : q %= r -> gdcop q p %= gdcop r p.",
            "VernacStartTheoremProof",
            "e011e80dc34847b863b53138859a77ef8b0f0a40"
        ],
        [
            "move=> eqr; rewrite /gdcop; move: (size p)=> n.",
            "VernacExtend",
            "40075a671b142e70c4190413219df8981418e910"
        ],
        [
            "elim: n p q r eqr {1 3}p (eqpxx p) => [|n ihn] p q r eqr s esp /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "move: eqr; case: (eqVneq q 0)=> [-> | nq0 eqr] /=.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite eqp_sym eqp0; move->; rewrite eqxx eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff rn0 : r != 0 by rewrite (negPf nq0) (negPf rn0) eqpxx.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by apply: contraTneq eqr => ->; rewrite eqp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (eqp_coprimepr _ eqr) (eqp_coprimepl _ esp); case: ifP=> _ //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply: ihn => //; apply: eqp_div => //; apply: eqp_gcd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_rgdco_gdco q p : rgdcop q p %= gdcop q p.",
            "VernacStartTheoremProof",
            "1ebbe942071fe0d300f97097a9b189f5293a7a0b"
        ],
        [
            "rewrite /rgdcop /gdcop; move: (size p)=> n.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "elim: n p q {1 3}p {1 3}q (eqpxx p) (eqpxx q) => [|n ihn] p q s t /= sp tq.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "move: tq; case: (eqVneq t 0)=> [-> | nt0 etq].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite eqp_sym eqp0; move->; rewrite eqxx eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff qn0 : q != 0 by rewrite (negPf nt0) (negPf qn0) eqpxx.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by apply: contraTneq etq => ->; rewrite eqp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite rcoprimep_coprimep (eqp_coprimepl t sp) (eqp_coprimepr p tq).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ifP=> // _; apply: ihn => //; apply: eqp_trans (eqp_rdiv_div _ _) _.",
            "VernacExtend",
            "d0ca9c3fd2da32fc51e6c7224f197d333e09c6a3"
        ],
        [
            "by apply: eqp_div => //; apply: eqp_trans (eqp_rgcd_gcd _ _) _; apply: eqp_gcd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_opp p q : (- p) %% q = - (p %% q).",
            "VernacStartTheoremProof",
            "efc8b22f298cfa516be5ba24b4889ecd87498984"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite !modp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.modp_opp; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_opp p q : (- p) %/ q = - (p %/ q).",
            "VernacStartTheoremProof",
            "a98f37a0d6fffb70dfaf1e42a99e6a8b9d2b81c2"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite !divp0 oppr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.divp_opp; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_add d p q : (p + q) %% d = p %% d + q %% d.",
            "VernacStartTheoremProof",
            "6487ff9c433325d14d312c96e499666fe401789d"
        ],
        [
            "case: (eqVneq d 0) => [-> | dn0]; first by rewrite !modp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.modp_add; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modNp p q : (- p) %% q = - (p %% q).",
            "VernacStartTheoremProof",
            "dfe18469141a16356520fd827834ab2cfff308a4"
        ],
        [
            "by apply/eqP; rewrite -addr_eq0 -modp_add addNr mod0p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_add d p q : (p + q) %/ d = p %/ d + q %/ d.",
            "VernacStartTheoremProof",
            "ff4d07f897a4099662b7cc448649a67335f6af97"
        ],
        [
            "case: (eqVneq d 0) => [-> | dn0]; first by rewrite !divp0 addr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.divp_add; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_addl_mul_small d q r : size r < size d -> (q * d + r) %/ d = q.",
            "VernacStartTheoremProof",
            "6a7e77cfc3cac1c37aa3edb675a2881406dee206"
        ],
        [
            "move=> srd; rewrite divp_add (divp_small srd) addr0 mulpK //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -size_poly_gt0; apply: leq_trans srd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_addl_mul_small d q r : size r < size d -> (q * d + r) %% d = r.",
            "VernacStartTheoremProof",
            "e198f21230090f2e2b60a20cbfceb3eec7eb6c23"
        ],
        [
            "by move=> srd; rewrite modp_add modp_mull add0r modp_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_addl_mul d q r : d != 0 -> (q * d + r) %/ d = q + r %/ d.",
            "VernacStartTheoremProof",
            "b7135a7028817de21b203fbc2c844a659573ad16"
        ],
        [
            "by move=> dn0; rewrite divp_add mulpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpp d : d != 0 -> d %/ d = 1.",
            "VernacStartTheoremProof",
            "0a2d06dce8edadb7f1ad77e6d2a405e47e40d6b0"
        ],
        [
            "by move=> dn0; apply: IdomainUnit.divpp; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_trunc_divp d m : size (m %/ d * d) <= size m.",
            "VernacStartTheoremProof",
            "3f14751724fde56c1e42d548faa893cbcd004ba0"
        ],
        [
            "case: (eqVneq d 0) => [-> | dn0]; first by rewrite mulr0 size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.leq_trunc_divp; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpK d p : d %| p -> p %/ d * d = p.",
            "VernacStartTheoremProof",
            "f59c770c524e0f403b354188b5782eb184b1d12d"
        ],
        [
            "case: (eqVneq d 0) => [-> | dn0]; first by move/dvd0pP->; rewrite mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.divpK; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpKC d p : d %| p -> d * (p %/ d) = p.",
            "VernacStartTheoremProof",
            "40b0047ad1a70afb362a769c00d997df43a58425"
        ],
        [
            "by move=> ?; rewrite mulrC divpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_eq_div d p q : d != 0 -> d %| p -> (q == p %/ d) = (q * d == p).",
            "VernacStartTheoremProof",
            "2f6ec340c6cf47f6e21a40c99e614c139a622a6d"
        ],
        [
            "by move=> dn0; apply: IdomainUnit.dvdp_eq_div; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_eq_mul d p q : d != 0 -> d %| p -> (p == q * d) = (p %/ d == q).",
            "VernacStartTheoremProof",
            "e75194eaa57c8e86c97a4cd2c1cae6c8d1b3d861"
        ],
        [
            "by move=> dn0 dv_d_p; rewrite eq_sym -dvdp_eq_div // eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_mulA d p q : d %| q -> p * (q %/ d) = p * q %/ d.",
            "VernacStartTheoremProof",
            "354f3af10cb4cadc667c868382550daf0d457879"
        ],
        [
            "case: (eqVneq d 0) => [-> | dn0]; first by move/dvd0pP->; rewrite !divp0 mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.divp_mulA; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_mulAC d m n : d %| m -> m %/ d * n = m * n %/ d.",
            "VernacStartTheoremProof",
            "10c14ada4ec29a16a071cf700036d67b2304d708"
        ],
        [
            "by move=> hdm; rewrite mulrC (mulrC m); apply: divp_mulA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_mulCA d p q : d %| p -> d %| q -> p * (q %/ d) = q * (p %/ d).",
            "VernacStartTheoremProof",
            "fca3bf987896b6fa5e17923e9b57ddcdf9540922"
        ],
        [
            "by move=> hdp hdq; rewrite mulrC divp_mulAC // divp_mulA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expp_sub d m n : d != 0 -> m >= n -> (d ^+ (m - n))%N = d ^+ m %/ d ^+ n.",
            "VernacStartTheoremProof",
            "4c31664aa47aa8cf213076d85367ff6af257bb90"
        ],
        [
            "by move=> dn0 /subnK=> {2}<-; rewrite exprD mulpK // expf_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_pmul2l d q p : d != 0 -> q != 0 -> d * p %/ (d * q) = p %/ q.",
            "VernacStartTheoremProof",
            "0ca063cefdc892017891e7315b5d46ba41a7808d"
        ],
        [
            "by move=> dn0 qn0; apply: IdomainUnit.divp_pmul2l; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_pmul2r d p q : d != 0 -> p != 0 -> q * d %/ (p * d) = q %/ p.",
            "VernacStartTheoremProof",
            "af7d4f48e31d4cb3133c612d3854ea70b85096a8"
        ],
        [
            "by move=> dn0 qn0; rewrite -!(mulrC d) divp_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divp_divl r p q : q %/ p %/ r = q %/ (p * r).",
            "VernacStartTheoremProof",
            "6019de0eacc11254315c9cdc35243917120ca8c1"
        ],
        [
            "case: (eqVneq r 0) => [-> | rn0]; first by rewrite mulr0 !divp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq p 0) => [-> | pn0]; first by rewrite mul0r !divp0 div0p.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.divp_divl; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpAC d p q : q %/ d %/ p = q %/ p %/ d.",
            "VernacStartTheoremProof",
            "ce3a99d6c8146820ebc0beb0a9d15dd2469fa17c"
        ],
        [
            "by rewrite !divp_divl // mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma edivp_def p q : edivp p q = (0%N, p %/ q, p %% q).",
            "VernacStartTheoremProof",
            "992440c5d6b55b2e14c4cc9be5293e85d9a4c00f"
        ],
        [
            "rewrite Idomain.edivp_def; congr (_, _, _); rewrite /scalp 2!unlock /=.",
            "VernacExtend",
            "9d78117f9fa00d8b79d08aff717709f8d084ba84"
        ],
        [
            "case (eqVneq q 0) => [-> | qn0]; first by rewrite eqxx lead_coef0 unitr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (negPf qn0) /= unitfE lead_coef_eq0 qn0 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (redivp_rec _ _ _ _) => [[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divpE p q : p %/ q = (lead_coef q)^-(rscalp p q) *: (rdivp p q).",
            "VernacStartTheoremProof",
            "f6a8598e7cf156775f55add5dcdd2aa67c05c917"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite rdivp0 divp0 scaler0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite Idomain.divpE unitfE lead_coef_eq0 qn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modpE p q : p %% q = (lead_coef q)^-(rscalp p q) *: (rmodp p q).",
            "VernacStartTheoremProof",
            "57c3d49846f7be76784156f2f6b4743f55ee5f03"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite rmodp0 modp0 /rscalp unlock eqxx lead_coef0 expr0 invr1 scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Idomain.modpE unitfE lead_coef_eq0 qn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalpE p q : scalp p q = 0%N.",
            "VernacStartTheoremProof",
            "229bec44aa90c2a2875d818b0ae7c7505c32f030"
        ],
        [
            "case: (eqVneq q 0) => [-> | qn0]; first by rewrite scalp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite Idomain.scalpE unitfE lead_coef_eq0 qn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdpE p q : p %| q = rdvdp p q.",
            "VernacStartTheoremProof",
            "4ec68491c79732ba54c2adf500b96da39eba32c0"
        ],
        [
            "exact: Idomain.dvdpE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant edivp_spec m d : nat * {poly F} * {poly F} -> Type := EdivpSpec n q r of m = q * d + r & (d != 0) ==> (size r < size d) : edivp_spec m d (n, q, r).",
            "VernacInductive",
            "6726a69967a443bbc91f42d15d7ffece3c2a27d3"
        ],
        [
            "Lemma edivpP m d : edivp_spec m d (edivp m d).",
            "VernacStartTheoremProof",
            "24e10f8fd788eca7182cd9d5472b0755bc356939"
        ],
        [
            "rewrite edivp_def; constructor; first exact: divp_eq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/implyP=> dn0; rewrite ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma edivp_eq d q r : size r < size d -> edivp (q * d + r) d = (0%N, q, r).",
            "VernacStartTheoremProof",
            "7696255184b8fbe5c69607964f835ab14e7cc3f7"
        ],
        [
            "move=> srd; apply: Idomain.edivp_eq; rewrite // unitfE lead_coef_eq0.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -size_poly_gt0; apply: leq_trans srd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modp_mul p q m : (p * (q %% m)) %% m = (p * q) %% m.",
            "VernacStartTheoremProof",
            "cd93146ad0ed3537b41fb2740ee6b687648c0a66"
        ],
        [
            "have ->: q %% m = q - q %/ m * m by rewrite {2}(divp_eq q m) -addrA addrC subrK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulrDr modp_add // -mulNr mulrA -{2}[_ %% _]addr0; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply/eqP; apply: dvdp_mull; apply: dvdpp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdpP p q : reflect (exists qq, p = qq * q) (q %| p).",
            "VernacStartTheoremProof",
            "7da94de8c88acf8245fffd740e16f392a2201626"
        ],
        [
            "case: (eqVneq q 0)=> [-> | qn0]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IdomainUnit.dvdpP; rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite dvd0p.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (iffP idP) => [/eqP->| [? ->]]; [exists 1|]; rewrite mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bezout_eq1_coprimepP : forall p q, reflect (exists u, u.1 * p + u.2 * q = 1) (coprimep p q).",
            "VernacStartTheoremProof",
            "6a858f3e1238f2307969c8b681ace69d6ccaf782"
        ],
        [
            "move=> p q; apply: (iffP idP)=> [hpq|]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=> [[u v]] /= e; apply/Bezout_coprimepP; exists (u, v); rewrite e eqpxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/Bezout_coprimepP: hpq => [[u v]] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/eqpP=> [[c1 c2]] /andP /= [c1n0 c2n0] e.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (c2^-1 *: (c1 *: u), c2^-1 *: (c1 *: v)); rewrite /= -!scalerAl.",
            "VernacExtend",
            "7a796217ea9f8158d2d20274ed2d19bc4709309b"
        ],
        [
            "by rewrite -!scalerDr e scalerA mulVf // scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_gdcor p q : q != 0 -> p %| (gdcop q p) * (q ^+ size p).",
            "VernacStartTheoremProof",
            "027a4e1fd55af5d7c1c5fd96896ba89a6837c615"
        ],
        [
            "move=> q_neq0; rewrite /gdcop.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "elim: (size p) {-2 5}p (leqnn (size p))=> {p} [|n ihn] p.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite size_poly_leq0; move/eqP->.",
            "VernacExtend",
            "9d45b3f5079bd11fa9301fef8a859fbbb0c29729"
        ],
        [
            "by rewrite size_poly0 /= dvd0p expr0 mulr1 (negPf q_neq0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> hsp /=; have [->|p_neq0] := altP (p =P 0).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite size_poly0 /= dvd0p expr0 mulr1 div0p /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ifP=> // _; have := (ihn 0).",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "by rewrite size_poly0 expr0 mulr1 dvd0p=> /(_ isT).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [|ncop_pq] := boolP (coprimep _ _); first by rewrite dvdp_mulr ?dvdpp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have g_gt1: (1 < size (gcdp p q))%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [|//|/eqP] := ltngtP; last by rewrite -coprimep_def (negPf ncop_pq).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltnS leqn0 size_poly_eq0 gcdp_eq0 (negPf p_neq0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sd : (size (p %/ gcdp p q) < size p)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite size_divp -?size_poly_eq0 -(subnKC g_gt1) // add2n /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[size _]prednK ?size_poly_gt0 // ltnS subSS leq_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}[p](divpK (dvdp_gcdl _ q)) -(subnKC sd) addSnnS exprD mulrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite dvdp_mul ?ihn //; first by rewrite -ltnS (leq_trans sd).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS dvdp_mulr // dvdp_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducible_cubic_root p q : size p <= 4 -> 1 < size q < size p -> q %| p -> {r | root p r}.",
            "VernacStartTheoremProof",
            "d65ee2dea014afbad7ef00ebd01efd6e119a8128"
        ],
        [
            "move=> p_le4 /andP[]; rewrite leq_eqVlt eq_sym.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have [/poly2_root[x qx0] _ _ | _ /= q_gt2 p_gt_q] := size q =P 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists x; rewrite -!dvdp_XsubCl in qx0 *; apply: (dvdp_trans qx0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/dvdpP/sig_eqW=> r def_p; rewrite def_p.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "suffices /poly2_root[x rx0]: size r = 2 by exists x; rewrite rootM rx0.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have /norP[nz_r nz_q]: ~~ [|| r == 0 | q == 0].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -mulf_eq0 -def_p -size_poly_gt0 (leq_ltn_trans _ p_gt_q).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite def_p size_mul // -subn1 leq_subLR ltn_subRL in p_gt_q p_le4.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/eqP; rewrite -(eqn_add2r (size q)) eqn_leq (leq_trans p_le4).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cubic_irreducible p : 1 < size p <= 4 -> (forall x, ~~ root p x) -> irreducible_poly p.",
            "VernacStartTheoremProof",
            "85a6fd9adab03736851af61dd39c5b842579cd2f"
        ],
        [
            "move=> /andP[p_gt1 p_le4] root'p; split=> // q sz_q_neq1 q_dv_p.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have nz_p: p != 0 by rewrite -size_poly_gt0 ltnW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nz_q: q != 0 by apply: contraTneq q_dv_p => ->; rewrite dvd0p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have q_gt1: size q > 1 by rewrite ltn_neqAle eq_sym sz_q_neq1 size_poly_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -dvdp_size_eqp // eqn_leq dvdp_leq //= leqNgt; apply/negP=> p_gt_q.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by have [|x /idPn//] := reducible_cubic_root p_le4 _ q_dv_p; rewrite q_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section FieldRingMap.",
            "VernacBeginSection",
            "76d441c6bf5ed39eb1c61582dbf71afe3f69eb67"
        ],
        [
            "Variable rR : ringType.",
            "VernacAssumption",
            "dd3900892ee5424faae201bbedc1323726a61d15"
        ],
        [
            "Variable f : {rmorphism F -> rR}.",
            "VernacAssumption",
            "98163a1db4ea05d1cf0a7a9b1c8ec5d78328adc4"
        ],
        [
            "Local Notation \"p ^f\" := (map_poly f p) : ring_scope.",
            "VernacNotation",
            "c14b79639352dde330b182be50ae72e13930a45f"
        ],
        [
            "Implicit Type a b : {poly F}.",
            "VernacReserve",
            "a4bf075ff486fd8804eb5fede63f80f9a985abe1"
        ],
        [
            "Lemma redivp_map a b : redivp a^f b^f = (rscalp a b, (rdivp a b)^f, (rmodp a b)^f).",
            "VernacStartTheoremProof",
            "13d318d0a58e62c451227657127e1fed313e7af6"
        ],
        [
            "rewrite /rdivp /rscalp /rmodp !unlock map_poly_eq0 size_map_poly.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: eqP; rewrite /= -(rmorph0 (map_poly_rmorphism f)) //; move/eqP=> q_nz.",
            "VernacExtend",
            "c5cb6672fdde6b3af11f77240bf9bbcee9174e45"
        ],
        [
            "move: (size a) => m; elim: m 0%N 0 a => [|m IHm] qq r a /=.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "rewrite -!mul_polyC !size_map_poly !lead_coef_map // -(map_polyXn f).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!(map_polyC f) -!rmorphM -rmorphB -rmorphD; case: (_ < _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -!mul_polyC !size_map_poly !lead_coef_map // -(map_polyXn f).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!(map_polyC f) -!rmorphM -rmorphB -rmorphD /= IHm; case: (_ < _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FieldRingMap.",
            "VernacEndSegment",
            "5bcb2957dec6088337bdcb446f0eeaefcba573b8"
        ],
        [
            "Section FieldMap.",
            "VernacBeginSection",
            "49cea3d2576900aa9145c623f904a5ae221c970c"
        ],
        [
            "Variable rR : idomainType.",
            "VernacAssumption",
            "3c6a64606356b796597de9f3ec61895da2536477"
        ],
        [
            "Variable f : {rmorphism F -> rR}.",
            "VernacAssumption",
            "98163a1db4ea05d1cf0a7a9b1c8ec5d78328adc4"
        ],
        [
            "Local Notation \"p ^f\" := (map_poly f p) : ring_scope.",
            "VernacNotation",
            "c14b79639352dde330b182be50ae72e13930a45f"
        ],
        [
            "Implicit Type a b : {poly F}.",
            "VernacReserve",
            "a4bf075ff486fd8804eb5fede63f80f9a985abe1"
        ],
        [
            "Lemma edivp_map a b : edivp a^f b^f = (0%N, (a %/ b)^f, (a %% b)^f).",
            "VernacStartTheoremProof",
            "03f742b2edb227ac5b613d98e187b0108a4394b6"
        ],
        [
            "case: (eqVneq b 0) => [-> | bn0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite (rmorph0 (map_poly_rmorphism f)) WeakIdomain.edivp_def !modp0 !divp0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (rmorph0 (map_poly_rmorphism f)) scalp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite unlock redivp_map lead_coef_map rmorph_unit; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite unitfE lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite modpE divpE !map_polyZ !rmorphV ?rmorphX // unitfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite expf_neq0 // lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalp_map p q : scalp p^f q^f = scalp p q.",
            "VernacStartTheoremProof",
            "13894a6d57442d39b04c7ba29da6cbe7bbbb6d2e"
        ],
        [
            "by rewrite /scalp edivp_map edivp_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_divp p q : (p %/ q)^f = p^f %/ q^f.",
            "VernacStartTheoremProof",
            "5d34be48fb1727ef6d64817db6dd61fecb54c455"
        ],
        [
            "by rewrite /divp edivp_map edivp_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_modp p q : (p %% q)^f = p^f %% q^f.",
            "VernacStartTheoremProof",
            "72d7411d334e64dfdf46d18def10dcc11294d96a"
        ],
        [
            "by rewrite /modp edivp_map edivp_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma egcdp_map p q : egcdp (map_poly f p) (map_poly f q) = (map_poly f (egcdp p q).1, map_poly f (egcdp p q).2).",
            "VernacStartTheoremProof",
            "b4e46e1d886c2c429bd8564e8cb265f88d6568aa"
        ],
        [
            "wlog le_qp: p q / size q <= size p.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "move=> IH; have [/IH// | lt_qp] := leqP (size q) (size p).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have /IH := ltnW lt_qp; rewrite /egcdp !size_map_poly ltnW // leqNgt lt_qp /=.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by case: (egcdp_rec _ _ _) => u v [-> ->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /egcdp !size_map_poly {}le_qp; move: (size q) => n.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "elim: n => /= [|n IHn] in p q *; first by rewrite rmorph1 rmorph0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite map_poly_eq0; have [_ | nz_q] := ifPn; first by rewrite rmorph1 rmorph0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -map_modp (IHn q (p %% q)); case: (egcdp_rec _ _ n) => u v /=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite map_polyZ lead_coef_map -rmorphX scalp_map rmorphB rmorphM -map_divp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdp_map p q : (p^f %| q^f) = (p %| q).",
            "VernacStartTheoremProof",
            "1ee9db0a133ab8c74f5a7c2d1c17814e181cfa07"
        ],
        [
            "by rewrite /dvdp -map_modp map_poly_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_map p q : (p^f %= q^f) = (p %= q).",
            "VernacStartTheoremProof",
            "0ae5efebfb4271b53978387c805c5d8c4754ecd9"
        ],
        [
            "by rewrite /eqp !dvdp_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdp_map p q : (gcdp p q)^f = gcdp p^f q^f.",
            "VernacStartTheoremProof",
            "7d99e63cbf25f721d702ff058c51fa921b9ecb5a"
        ],
        [
            "wlog lt_p_q: p q / size p < size q.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "move=> IHpq; case: (ltnP (size p) (size q)) => [|le_q_p]; first exact: IHpq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite gcdpE (gcdpE p^f) !size_map_poly ltnNge le_q_p /= -map_modp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (eqVneq q 0) => [-> | q_nz]; first by rewrite rmorph0 !gcdp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite IHpq ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: {q}_.+1 p {-2}q (ltnSn (size q)) lt_p_q => // m IHm p q le_q_m lt_p_q.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite gcdpE (gcdpE p^f) !size_map_poly lt_p_q -map_modp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (eqVneq p 0) => [-> | q_nz]; first by rewrite rmorph0 !gcdp0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite IHm ?(leq_trans lt_p_q) ?ltn_modp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimep_map p q : coprimep p^f q^f = coprimep p q.",
            "VernacStartTheoremProof",
            "c003ad5027a93f6e56b1a0f693858ad903d4199b"
        ],
        [
            "by rewrite -!gcdp_eqp1 -eqp_map rmorph1 gcdp_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gdcop_rec_map p q n : (gdcop_rec p q n)^f = (gdcop_rec p^f q^f n).",
            "VernacStartTheoremProof",
            "f9e132b030099ea88e538cf7281a8051390669bb"
        ],
        [
            "elim: n p q => [|n IH] => /= p q.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite map_poly_eq0; case: eqP; rewrite ?rmorph1 ?rmorph0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /coprimep -gcdp_map size_map_poly.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: eqP => Hq0 //; rewrite -map_divp -IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gdcop_map p q : (gdcop p q)^f = (gdcop p^f q^f).",
            "VernacStartTheoremProof",
            "f954fd069ad940c0e810aa029c7ded7062baa755"
        ],
        [
            "by rewrite /gdcop gdcop_rec_map !size_map_poly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FieldMap.",
            "VernacEndSegment",
            "75a9bf6e24d5370131752f76cf89444df8023181"
        ],
        [
            "End FieldDivision.",
            "VernacEndSegment",
            "466fc180a20893b7125d6c4dca46c468596f18b3"
        ],
        [
            "End Field.",
            "VernacEndSegment",
            "a3b24fe94a35f8c814b540732719f98810a7a91d"
        ],
        [
            "Module ClosedField.",
            "VernacDefineModule",
            "dbb3493a79e743a5293733f6ed64030b59e22bc9"
        ],
        [
            "Import Field.",
            "VernacImport",
            "f5e0f47670248cbd4afc1151fdabdcffb3fde6a2"
        ],
        [
            "Section closed.",
            "VernacBeginSection",
            "9b352a42c065a43e3545f9460b85cf577ed41514"
        ],
        [
            "Variable F : closedFieldType.",
            "VernacAssumption",
            "fd638bbd122fe7fca85649eafc49337e70b155c4"
        ],
        [
            "Lemma root_coprimep (p q : {poly F}): (forall x, root p x -> q.[x] != 0) -> coprimep p q.",
            "VernacStartTheoremProof",
            "9946f0ef98d686a3658066d831c1dfb5f42ec3ae"
        ],
        [
            "move=> Ncmn; rewrite -gcdp_eqp1 -size_poly_eq1; apply/closed_rootP.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by case=> r; rewrite root_gcd !rootE=> /andP [/Ncmn/negbTE->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimepP (p q : {poly F}): reflect (forall x, root p x -> q.[x] != 0) (coprimep p q).",
            "VernacStartTheoremProof",
            "a6bf541280809bba02ef7516db37d95f1e9feae9"
        ],
        [
            "by apply: (iffP idP)=> [/coprimep_root|/root_coprimep].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End closed.",
            "VernacEndSegment",
            "e78c91c9f0dbaef1b0c4d7f92aaa48b34aee980d"
        ],
        [
            "End ClosedField.",
            "VernacEndSegment",
            "cc7b395c5d4a2febf205a006b1ebc3411123c7c4"
        ],
        [
            "End Pdiv.",
            "VernacEndSegment",
            "705533b5f06cca76a5e66bb67caa4c5436854e8e"
        ],
        [
            "Export Pdiv.Field.",
            "VernacImport",
            "5ceadcb33cdb1c3e68273640943aa554656c00dc"
        ]
    ],
    "proofs": [
        {
            "name": "redivp_key",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "redivp_def",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "by rewrite /rscalp /rdivp /rmodp; case: (redivp p q) => [[]] /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdiv0p",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "rewrite /rdivp unlock; case: ifP => // Hp; rewrite /redivp_rec !size_poly0.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "by rewrite polySpred ?Hp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivp0",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "by rewrite /rdivp unlock eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivp_small",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "rewrite /rdivp unlock; have [-> | _ ltpq] := eqP; first by rewrite size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: (size p) => [|s]; rewrite /= ltpq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmod0p",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "rewrite /rmodp unlock; case: ifP => // Hp; rewrite /redivp_rec !size_poly0.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "by rewrite polySpred ?Hp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodp0",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "by rewrite /rmodp unlock eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rscalp_small",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "rewrite /rscalp unlock; case: eqP => Eq // spq.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by case sp: (size p) => [| s] /=; rewrite spq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_rmodpN0",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_rmodp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodp1",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "case p0: (p == 0); first by rewrite (eqP p0) rmod0p.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -size_poly_eq0.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by have := (ltn_rmodp p 1); rewrite size_polyC !oner_neq0 ltnS leqn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodp_small",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "rewrite /rmodp unlock; case: eqP => Eq; first by rewrite Eq size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case sp: (size p) => [| s] Hs /=; rewrite sp Hs /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_rmodp",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "case: (ltnP (size m) (size d)) => [|h]; first by move/rmodp_small->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case d0: (d == 0); first by rewrite (eqP d0) rmodp0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans h; apply: ltnW; rewrite ltn_rmodp d0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodpC",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "move=> Hc; apply/eqP; rewrite -size_poly_eq0 -leqn0 -ltnS.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "have -> : 1%N = nat_of_bool (c != 0) by rewrite Hc.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -size_polyC ltn_rmodp polyC_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvdp0",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "by rewrite /rdvdp rmod0p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvd0p",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "by rewrite /rdvdp rmodp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvd0pP",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP idP); rewrite rdvd0p; move/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvdpN0",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "by move=> pq hq; apply: contraL pq => /eqP ->; rewrite rdvd0p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvdp1",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "rewrite /rdvdp; case d0: (d == 0).",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP d0) rmodp0 size_poly0 (negPf (@oner_neq0 _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have:= (size_poly_eq0 d); rewrite d0; move/negbT; rewrite -lt0n.",
                        "VernacExtend",
                        "960a5fd70f1a942037256b0cd1b5d799a4f8c68d"
                    ]
                },
                {
                    "command": [
                        "rewrite leq_eqVlt; case/orP => hd; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite rmodp_small ?size_poly1 // oner_eq0 -(subnKC hd).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_sym in hd; rewrite hd; have [c cn0 ->] := size_poly1P _ hd.",
                        "VernacExtend",
                        "9bbd420a23a97e1177d2d2a4ff67379c083c72b4"
                    ]
                },
                {
                    "command": [
                        "rewrite /rmodp unlock -size_poly_eq0 size_poly1 /= size_poly1 size_polyC cn0 /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite polyC_eq0 (negPf cn0) !lead_coefC !scale1r subrr !size_poly0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvd1p",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "by rewrite /rdvdp rmodp1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nrdvdp_small",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "by move=> nn0 hs; rewrite /rdvdp; rewrite (rmodp_small hs); apply: negPf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodp_eq0P",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "exact: (iffP eqP).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodp_eq0",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "by move/rmodp_eq0P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvdp_leq",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "by move=> dvd_pq; rewrite leqNgt; apply: contra => /rmodp_small <-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rgcd0p",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "move=> p; rewrite /rgcdp size_poly0 size_poly_gt0 if_neg.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: ifP => /= [_ | nzp]; first by rewrite eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite polySpred !(rmodp0, nzp) //; case: _.-1 => [|m]; rewrite rmod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rgcdp0",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "move=> p; have:= rgcd0p p; rewrite /rgcdp size_poly0 size_poly_gt0 if_neg.",
                        "VernacExtend",
                        "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => /= p0; rewrite ?(eqxx, p0) // (eqP p0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rgcdpE",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "pose rgcdp_rec := fix rgcdp_rec (n : nat) (pp qq : {poly R}) {struct n} := let rr := rmodp pp qq in if rr == 0 then qq else if n is n1.+1 then rgcdp_rec n1 qq rr else rr.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have Irec: forall m n p q, size q <= m -> size q <= n -> size q < size p -> rgcdp_rec m p q = rgcdp_rec n p q.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "elim=> [|m Hrec] [|n] //= p1 q1.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite leqn0 size_poly_eq0; move/eqP=> -> _.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "rewrite size_poly0 size_poly_gt0 rmodp0 => nzp.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negPf nzp); case: n => [|n] /=; rewrite rmod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite leqn0 size_poly_eq0 => _; move/eqP=> ->.",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "rewrite size_poly0 size_poly_gt0 rmodp0 => nzp.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negPf nzp); case: m {Hrec} => [|m] /=; rewrite rmod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: ifP => Epq Sm Sn Sq //; rewrite ?Epq //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq q1 0) => [->|nzq].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: n m {Sm Sn Hrec} => [|m] [|n] //=; rewrite rmod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: Hrec; last by rewrite ltn_rmodp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans _ Sm) // ltn_rmodp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans _ Sn) // ltn_rmodp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq p 0) => [-> | nzp].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rmod0p rmodp0 rgcd0p rgcdp0 if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq q 0) => [-> | nzq].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rmod0p rmodp0 rgcd0p rgcdp0 if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /rgcdp -/rgcdp_rec.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ltnP; rewrite (negPf nzp, negPf nzq) //=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "move=> ltpq; rewrite ltn_rmodp (negPf nzp) //=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite -(ltn_predK ltpq) /=; case: eqP => [->|].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by case: (size p) => [|[|s]]; rewrite /= rmodp0 (negPf nzp) // rmod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/eqP=> nzqp; rewrite (negPf nzp).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply: Irec => //; last by rewrite ltn_rmodp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (ltn_predK ltpq) (leq_trans _ ltpq) ?leqW // ltn_rmodp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnW // ltn_rmodp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> leqp; rewrite ltn_rmodp (negPf nzq) //=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have p_gt0: size p > 0 by rewrite size_poly_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(prednK p_gt0) /=; case: eqP => [->|].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by case: (size q) => [|[|s]]; rewrite /= rmodp0 (negPf nzq) // rmod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/eqP=> nzpq; rewrite (negPf nzq).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply: Irec => //; last by rewrite ltn_rmodp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (prednK p_gt0) (leq_trans _ leqp) // ltn_rmodp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnW // ltn_rmodp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comm_redivpP",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "rewrite unlock; case: (altP (d =P 0))=> [->| Hd].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by constructor; rewrite !(simp, eqxx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: GRing.comm d (lead_coef d)%:P -> m * (lead_coef d ^+ 0)%:P = 0 * d + m.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: (size m) 0%N 0 {1 4 6}m (leqnn (size m))=> [|n IHn] k q r Hr /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "have{Hr} ->: r = 0 by apply/eqP; rewrite -size_poly_eq0; move: Hr; case: size.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suff hsd: size (0: {poly R}) < size d by rewrite hsd => /= ?; constructor.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_polyC eqxx (polySpred Hd).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: ltP=> Hlt Heq; first by constructor=> // _; apply/ltP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: IHn=> [|Cda]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrDl addrAC -addrA subrK exprSr polyC_mul mulrA Heq //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrDl -mulrA Cda mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/leq_sizeP => j Hj.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite coefD coefN coefMC -scalerAl coefZ coefXnM.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move/ltP: Hlt; rewrite -leqNgt=> Hlt.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "move: Hj; rewrite leq_eqVlt; case/predU1P => [<-{j} | Hj]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_default ?(leq_trans Hqq) // ?simp; last by apply: (leq_trans Hr).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_default; first by rewrite if_same !simp oppr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}(subKn Hlt) leq_sub2r // (leq_trans Hr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: Hr; rewrite leq_eqVlt ltnS; case/predU1P=> Hqq; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !nth_default ?if_same ?simp ?oppr0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}(subKn Hlt) leq_sub2r // (leq_trans Hqq).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}/lead_coef Hqq polySpred // subSS ltnNge leq_subr /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite subKn ?addrN // -subn1 leq_subLR add1n -Hqq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodpp",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "move=> hC; rewrite /rmodp unlock; case: ifP => hp /=; first by rewrite (eqP hp).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move: (hp); rewrite -size_poly_eq0 /redivp_rec; case sp: (size p)=> [|n] // _.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "rewrite mul0r sp ltnn add0r subnn expr0 hC alg_polyC subrr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: n sp => [|n] sp; rewrite size_polyC /= eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rgdcop0",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "by rewrite /rgdcop size_poly0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivp_eq",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "by rewrite /rdivp /rmodp /rscalp; case: comm_redivpP=> k q1 r1 Hc _; apply: Hc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rdvdp",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "move=> he.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have Hnq0 := rreg_lead0 Rreg; set lq := lead_coef d.",
                        "VernacExtend",
                        "81881a093b2294c76be3b432fbe83612064d7bc9"
                    ]
                },
                {
                    "command": [
                        "pose v := rscalp p d; pose m := maxn v k.",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "rewrite /rdvdp -(rreg_polyMC_eq0 _ (@rregX _ _ (m - v) Rreg)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suff: ((rdivp p d) * (lq ^+ (m - v))%:P - q1 * (lq ^+ (m - k))%:P) * d + (rmodp p d) * (lq ^+ (m - v))%:P == 0.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "rewrite rreg_div0 //; first by case/andP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite rreg_size ?ltn_rmodp //; apply rregX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrDl addrAC mulNr -!mulrA polyC_exp -(GRing.commrX (m-v) Cdl).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -polyC_exp mulrA -mulrDl -rdivp_eq // [(_ ^+ (m - k))%:P]polyC_exp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(GRing.commrX (m-k) Cdl) -polyC_exp mulrA -he -!mulrA -!polyC_mul.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -/v -!exprD addnC subnK ?leq_maxl //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addnC subnK ?subrr ?leq_maxr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvdp_mull",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "by apply: (@eq_rdvdp 0%N p); rewrite expr0 mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodp_mull",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "case: (d =P 0)=> Hd; first by rewrite Hd simp rmod0p.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; apply: rdvdp_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivpp",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "have dn0 : d != 0 by rewrite -lead_coef_eq0 rreg_neq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move: (rdivp_eq d); rewrite rmodpp addr0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "suff ->: GRing.comm d (lead_coef d ^+ rscalp d d)%:P by move/(rreg_lead Rreg)->.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite polyC_exp; apply: commrX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvdpp",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; apply: rmodpp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivpK",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "by rewrite rdivp_eq /rdvdp; move/eqP->; rewrite addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivp_addl_mul_small",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "by move=> Hd; case: (monic_comreg mond)=> Hc Hr; rewrite /rdivp redivp_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivp_addl_mul",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "case: (monic_comreg mond)=> Hc Hr; rewrite {1}(rdivp_eq r) addrA.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulrDl rdivp_addl_mul_small // ltn_rmodp monic_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivp_addl",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "case: (monic_comreg mond)=> Hc Hr; rewrite {1}(rdivp_eq r) addrA.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}(rdivp_eq q); move/rmodp_eq0P->; rewrite addr0.",
                        "VernacExtend",
                        "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulrDl rdivp_addl_mul_small // ltn_rmodp monic_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivp_addr",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "by rewrite addrC; move/rdivp_addl->; rewrite addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivp_mull",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "by rewrite -[p * d]addr0 rdivp_addl_mul rdiv0p addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodp_addl_mul_small",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "by move=> Hd; case: (monic_comreg mond)=> Hc Hr; rewrite /rmodp redivp_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmodp_mulmr",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "have -> : rmodp q d = q - (rdivp q d) * d.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite {2}(rdivp_eq q) addrAC subrr add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrDr rmodp_add -mulNr mulrA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{2}[rmodp _ _]addr0; congr (_ + _); apply: rmodp_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdivp1",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}(mulr1 p) rdivp_mull // monic1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyXsubCP",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP idP); rewrite rdvdp_XsubCl; move/rootP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_factor_theorem",
            "line_nb": 449,
            "steps": [
                {
                    "command": [
                        "by rewrite rdvdp_XsubCl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "redivpP",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "rewrite redivp_def; constructor; last by move=> dn0; rewrite ltn_rmodp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mul_polyC mulrC rdivp_eq //= /GRing.comm mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdvdp_eq",
            "line_nb": 473,
            "steps": [
                {
                    "command": [
                        "apply/rmodp_eq0P/eqP; rewrite rdivp_eq; first by move->; rewrite addr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/eqP; rewrite eq_sym addrC -subr_eq subrr; move/eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_roots_rdvdp",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "move=> rrs; case/(uniq_roots_prod_XsubC rrs)=> q ->.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exact/RingMonic.rdvdp_mull/monic_prod_XsubC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "edivp_key",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "edivp_def",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "by rewrite /scalp /divp /modp; case: (edivp p q) => [[]] /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "edivp_redivp",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "by move=> hu; rewrite unlock hu; case: (redivp p q) => [[? ?] ?].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divpE",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "by case ulcq: (lead_coef q \\in GRing.unit); rewrite /divp unlock redivp_def ulcq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modpE",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "by case ulcq: (lead_coef q \\in GRing.unit); rewrite /modp unlock redivp_def ulcq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalpE",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "by case h: (lead_coef q \\in GRing.unit); rewrite /scalp unlock redivp_def h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdpE",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "rewrite /dvdp modpE /rdvdp; case ulcq: (lead_coef p \\in GRing.unit)=> //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite -[_ *: _ == 0]size_poly_eq0 size_scale ?size_poly_eq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite invr_eq0 expf_neq0 //; apply: contraTneq ulcq => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lc_expn_scalp_neq0",
            "line_nb": 537,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq q 0) => [->|nzq]; last by rewrite expf_neq0 ?lead_coef_eq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /scalp 2!unlock /= eqxx lead_coef0 unitr0 /= oner_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "edivpP",
            "line_nb": 543,
            "steps": [
                {
                    "command": [
                        "have hC : GRing.comm d (lead_coef d)%:P by rewrite /GRing.comm mulrC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case ud: (lead_coef d \\in GRing.unit); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite edivp_redivp // redivp_def; constructor; rewrite ?ltn_rmodp // ?ud //.",
                        "VernacExtend",
                        "47f23aac936ea2be29ac3e11bec38a0cbf04ac13"
                    ]
                },
                {
                    "command": [
                        "by rewrite rdivp_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have cdn0: lead_coef d != 0 by apply: contraTneq ud => ->; rewrite unitr0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite unlock ud redivp_def; constructor => //.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "rewrite -scalerAl -scalerDr -mul_polyC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have hn0 : (lead_coef d ^+ rscalp m d)%:P != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite polyC_eq0; apply: expf_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: (mulfI hn0); rewrite !mulrA -exprVn !polyC_exp -exprMn -polyC_mul.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite divrr // expr1n mul1r -polyC_exp mul_polyC rdivp_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> dn0; rewrite size_scale ?ltn_rmodp // -exprVn expf_eq0 negb_and.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite invr_eq0 cdn0 orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "edivp_eq",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "have hC : GRing.comm d (lead_coef d)%:P by apply: mulrC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> hsrd hu; rewrite unlock hu; case et: (redivp _ _) => [[s qq] rr].",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "have cdn0 : lead_coef d != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move: hu; case d0: (lead_coef d == 0) => //; rewrite (eqP d0) unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (et); rewrite RingComRreg.redivp_eq //; last by apply/rregP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite et /=; case=> e1 e2; rewrite -!mul_polyC -!exprVn !polyC_exp.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "suff h x y: x * (lead_coef d ^+ s)%:P = y -> ((lead_coef d)^-1)%:P ^+ s * y = x.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by congr (_, _, _); apply: h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have hn0 : (lead_coef d)%:P ^+ s != 0 by apply: expf_neq0; rewrite polyC_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> hh; apply: (mulfI hn0); rewrite mulrA -exprMn -polyC_mul divrr //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite expr1n mul1r -polyC_exp mulrC; apply: sym_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divpK",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "by rewrite dvdp_eq; move/eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divpKC",
            "line_nb": 592,
            "steps": [
                {
                    "command": [
                        "by move=> ?; rewrite mulrC divpK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdpP",
            "line_nb": 595,
            "steps": [
                {
                    "command": [
                        "rewrite dvdp_eq; apply: (iffP eqP) => [e | [[c qq] cn0 e]].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by exists (lead_coef q ^+ scalp p q, p %/ q) => //=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -dvdp_eq dvdpE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have Ecc: c%:P != 0 by rewrite polyC_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq p 0) => [->|nz_p]; first by rewrite rdvdp0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "pose p1 : {poly R} := lead_coef q ^+ rscalp p q *: qq - c *: (rdivp p q).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have E1: c *: (rmodp p q) = p1 * q.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrDl {1}mulNr -scalerAl -e scalerA mulrC -scalerA -scalerAl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -scalerBr rdivp_eq addrC addKr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /dvdp; apply/idPn=> m_nz.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have: p1 * q != 0 by rewrite -E1 -mul_polyC mulf_neq0 // -/(dvdp q p) dvdpE.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mulf_eq0; case/norP=> p1_nz q_nz; have:= ltn_rmodp p q.",
                        "VernacExtend",
                        "c7b5d5b8dfbc53121b4f46ce0816fec04d854bef"
                    ]
                },
                {
                    "command": [
                        "rewrite q_nz -(size_scale _ cn0) E1 size_mul //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite polySpred // ltnNge leq_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulpK",
            "line_nb": 611,
            "steps": [
                {
                    "command": [
                        "move=> qn0; move/rregP: (qn0); apply; rewrite -scalerAl divp_eq.",
                        "VernacExtend",
                        "b1e149be7fb022c9327d5abd9c45eb24e7c31671"
                    ]
                },
                {
                    "command": [
                        "suff -> : (p * q) %% q = 0 by rewrite addr0.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "rewrite modpE RingComRreg.rmodp_mull ?scaler0 ?if_same //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by red; rewrite mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/rregP; rewrite lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulKp",
            "line_nb": 618,
            "steps": [
                {
                    "command": [
                        "by move=> nzq; rewrite mulrC; apply: mulpK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divpp",
            "line_nb": 621,
            "steps": [
                {
                    "command": [
                        "move=> np0; have := (divp_eq p p).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "suff -> : p %% p = 0.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite addr0; move/eqP; rewrite -mul_polyC (inj_eq (mulIf np0)); move/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite modpE Ring.rmodpp; last by red; rewrite mulrC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite scaler0 if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalp0",
            "line_nb": 636,
            "steps": [
                {
                    "command": [
                        "by rewrite /scalp unlock lead_coef0 unitr0 unlock eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_small",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "move=> spq; rewrite /divp unlock redivp_def /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: ifP; rewrite rdivp_small // scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_divp",
            "line_nb": 643,
            "steps": [
                {
                    "command": [
                        "rewrite /divp unlock redivp_def /=; case: ifP=> /=; rewrite ?leq_rdivp //.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "move=> ulcq; rewrite size_scale ?leq_rdivp //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite -exprVn expf_neq0 // invr_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move: ulcq; case lcq0: (lead_coef q == 0) => //; rewrite (eqP lcq0) unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div0p",
            "line_nb": 649,
            "steps": [
                {
                    "command": [
                        "by rewrite /divp unlock redivp_def /=; case: ifP; rewrite rdiv0p // scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp0",
            "line_nb": 652,
            "steps": [
                {
                    "command": [
                        "by rewrite /divp unlock redivp_def /=; case: ifP; rewrite rdivp0 // scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp1",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "by rewrite divpE lead_coefC unitr1 Ring.rdivp1 expr1n invr1 scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp0",
            "line_nb": 658,
            "steps": [
                {
                    "command": [
                        "rewrite /modp unlock redivp_def; case: ifP; rewrite rmodp0 //= lead_coef0.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "by rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod0p",
            "line_nb": 662,
            "steps": [
                {
                    "command": [
                        "by rewrite /modp unlock redivp_def /=; case: ifP; rewrite rmod0p // scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp1",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "by rewrite /modp unlock redivp_def /=; case: ifP; rewrite rmodp1 // scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_small",
            "line_nb": 669,
            "steps": [
                {
                    "command": [
                        "move=> spq; rewrite /modp unlock redivp_def; case: ifP; rewrite rmodp_small //.",
                        "VernacExtend",
                        "7cd855b46127b5e4e6df75c3fd6587c8d54114e3"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= rscalp_small // expr0 /= invr1 scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modpC",
            "line_nb": 673,
            "steps": [
                {
                    "command": [
                        "move=> cn0; rewrite /modp unlock redivp_def /=; case: ifP; rewrite ?rmodpC //.",
                        "VernacExtend",
                        "7cd855b46127b5e4e6df75c3fd6587c8d54114e3"
                    ]
                },
                {
                    "command": [
                        "by rewrite scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_mull",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "case: (altP (q =P 0)) => [-> | nq0]; first by rewrite modp0 mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have rlcq : (GRing.rreg (lead_coef q)) by apply/rregP; rewrite lead_coef_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have hC : GRing.comm q (lead_coef q)%:P by red; rewrite mulrC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite modpE; case: ifP => ulcq; rewrite RingComRreg.rmodp_mull // scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_mulr",
            "line_nb": 683,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrC modp_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modpp",
            "line_nb": 686,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}(mul1r d) modp_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_modp",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "rewrite /modp unlock redivp_def /=; case: ifP=> /=; rewrite ?ltn_rmodp //.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "move=> ulcq; rewrite size_scale ?ltn_rmodp //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite -exprVn expf_neq0 // invr_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move: ulcq; case lcq0: (lead_coef q == 0) => //; rewrite (eqP lcq0) unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_divpl",
            "line_nb": 695,
            "steps": [
                {
                    "command": [
                        "move=> dn0; have sd : size d > 0 by rewrite size_poly_gt0 dn0.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have: (lead_coef d) ^+ (scalp q d) != 0 by apply: lc_expn_scalp_neq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move/size_scale; move/(_ q)<-; rewrite divp_eq; case quo0 : (q %/ d == 0).",
                        "VernacExtend",
                        "f48f1c623377785a68e254e8fbe12fab2f7499a5"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqP quo0) mul0r add0r size_poly0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case p0 : (p == 0); first by rewrite (eqP p0) mul0r size_poly0 ltnn ltn0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have sp : size p > 0 by rewrite size_poly_gt0 p0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /= size_mul ?p0 // sp; apply: sym_eq; move/prednK:(sp)<-.",
                        "VernacExtend",
                        "db0a01b21fb79ed548f39f41dad29d2e5f6e6c81"
                    ]
                },
                {
                    "command": [
                        "by rewrite addSn /= ltn_addl // ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite size_addl; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite size_mul ?quo0 //; move/negbT: quo0; rewrite -size_poly_gt0.",
                        "VernacExtend",
                        "3051a4e8bb68166b140398e2c3c2862857447428"
                    ]
                },
                {
                    "command": [
                        "by move/prednK<-; rewrite addSn /= ltn_addl // ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (altP (p =P 0)) => [-> | pn0]; first by rewrite mul0r size_poly0 !ltn0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !size_mul ?quo0 //; move/prednK: sd<-; rewrite !addnS ltn_add2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_divpr",
            "line_nb": 710,
            "steps": [
                {
                    "command": [
                        "by move=> dn0; rewrite leqNgt ltn_divpl // -leqNgt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divpN0",
            "line_nb": 713,
            "steps": [
                {
                    "command": [
                        "move=> dn0; rewrite -{2}(mul1r d) -leq_divpr // size_polyC oner_eq0 /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_poly_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_divp",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "move=> nq0; case: (leqP (size q) (size p)) => sqp; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move: (sqp); rewrite -{1}(ltn_predK sqp) ltnS -subn_eq0 divp_small //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by move/eqP->; rewrite size_poly0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (nq0); rewrite -size_poly_gt0 => lt0sq.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "move: (sqp); move/(leq_trans lt0sq) => lt0sp.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "move: (lt0sp); rewrite size_poly_gt0=> p0.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "move: (divp_eq p q); move/(congr1 (size \\o (@polyseq R)))=> /=.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "rewrite size_scale; last by rewrite expf_eq0 lead_coef_eq0 (negPf nq0) andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq (p %/ q) 0) => [-> | qq0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul0r add0r=> es; move: nq0; rewrite -(ltn_modp p) -es ltnNge sqp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/negP:(qq0); move/negP; rewrite -size_poly_gt0 => lt0qq.",
                        "VernacExtend",
                        "59558e378570fadf944f573c466a34c761bc9b23"
                    ]
                },
                {
                    "command": [
                        "rewrite size_addl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite size_mul ?qq0 // => ->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -(eqn_add2r ((size q).-1)).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite subnK; first by rewrite -subn1 addnBA // subn1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /leq -(subnDl 1%N) !add1n prednK // (@ltn_predK (size q)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addnC subnDA subnn sub0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[size q]add0n ltn_add2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite size_mul ?qq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: nq0; rewrite -(ltn_modp p); move/leq_trans; apply; move/prednK: lt0qq<-.",
                        "VernacExtend",
                        "ba93d25345c824797228d614d13492f3f6895045"
                    ]
                },
                {
                    "command": [
                        "by rewrite addSn /= leq_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_modpN0",
            "line_nb": 740,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_mod",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "by case: (eqVneq q 0) => [-> | qn0]; rewrite ?modp0 // modp_small ?ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_modp",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "rewrite /modp unlock redivp_def /=; case: ifP; rewrite ?leq_rmodp //.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "move=> ud; rewrite size_scale ?leq_rmodp // invr_eq0 expf_neq0 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: contraTneq ud => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp0",
            "line_nb": 751,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdp mod0p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvd0p",
            "line_nb": 755,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdp modp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvd0pP",
            "line_nb": 758,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP idP); rewrite dvd0p; move/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdpN0",
            "line_nb": 761,
            "steps": [
                {
                    "command": [
                        "by move=> pq hq; apply: contraL pq=> /eqP ->; rewrite dvd0p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp1",
            "line_nb": 764,
            "steps": [
                {
                    "command": [
                        "rewrite /dvdp modpE; case ud: (lead_coef d \\in GRing.unit); last exact: rdvdp1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -size_poly_eq0 size_scale; first by rewrite size_poly_eq0 -rdvdp1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite invr_eq0 expf_neq0 //; apply: contraTneq ud => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvd1p",
            "line_nb": 769,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdp modp1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtNdvdp",
            "line_nb": 772,
            "steps": [
                {
                    "command": [
                        "by move=> nn0 hs; rewrite /dvdp; rewrite (modp_small hs); apply: negPf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_eq0P",
            "line_nb": 775,
            "steps": [
                {
                    "command": [
                        "exact: (iffP eqP).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_eq0",
            "line_nb": 778,
            "steps": [
                {
                    "command": [
                        "by move/modp_eq0P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_divpl",
            "line_nb": 781,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq d 0) => [-> | nd0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by move/dvd0pP->; rewrite divp0 size_poly0 !leq0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> hd; rewrite leq_eqVlt ltn_divpl // (leq_eqVlt (size p)).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case lhs: (size p < size (q * d)); rewrite ?orbT ?orbF //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "have: (lead_coef d) ^+ (scalp p d) != 0 by rewrite expf_neq0 // lead_coef_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move/size_scale; move/(_ p)<-; rewrite divp_eq.",
                        "VernacExtend",
                        "83ceb7524b885f8a572ef55cc7b4297da9bb78a5"
                    ]
                },
                {
                    "command": [
                        "move/modp_eq0P: hd->; rewrite addr0; case: (altP (p %/ d =P 0))=> [-> | quon0].",
                        "VernacExtend",
                        "da193758590dbaf126e1247765c091fa7d3c58ee"
                    ]
                },
                {
                    "command": [
                        "rewrite mul0r size_poly0 eq_sym (eq_sym 0%N) size_poly_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (altP (q =P 0)) => [-> | nq0]; first by rewrite mul0r size_poly0 eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_poly_eq0 mulf_eq0 (negPf nq0) (negPf nd0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (altP (q =P 0)) => [-> | nq0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul0r size_poly0 !size_poly_eq0 mulf_eq0 (negPf nd0) orbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !size_mul //; move: nd0; rewrite -size_poly_gt0; move/prednK<-.",
                        "VernacExtend",
                        "45d4f42da31c4b3bbf8e33ee95b32d2f172cd3f3"
                    ]
                },
                {
                    "command": [
                        "by rewrite !addnS /= eqn_add2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_leq",
            "line_nb": 797,
            "steps": [
                {
                    "command": [
                        "move=> nq0 /modp_eq0P => rpq; case: (ltnP (size p) (size q)).",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "by move/ltnW->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite leq_eqVlt; case/orP; first by move/eqP->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/modp_small; rewrite rpq => h; move: nq0; rewrite h eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_dvdp",
            "line_nb": 803,
            "steps": [
                {
                    "command": [
                        "move=> cn0; case: (eqVneq p 0) => [->|nz_quo def_quo] //.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "pose p1 : {poly R} := lead_coef q ^+ scalp p q *: quo - c *: (p %/ q).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have E1: c *: (p %% q) = p1 * q.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrDl {1}mulNr-scalerAl -def_quo scalerA mulrC -scalerA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -scalerAl -scalerBr divp_eq addrAC subrr add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /dvdp; apply/idPn=> m_nz.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have: p1 * q != 0 by rewrite -E1 -mul_polyC mulf_neq0 // polyC_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mulf_eq0; case/norP=> p1_nz q_nz.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "have := (ltn_modp p q); rewrite q_nz -(size_scale (p %% q) cn0) E1.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_mul // polySpred // ltnNge leq_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdpp",
            "line_nb": 815,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdp modpp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_mulr",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "by move=> hdm; rewrite mulrC dvdp_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_addl",
            "line_nb": 860,
            "steps": [
                {
                    "command": [
                        "by rewrite addrC; apply: dvdp_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_add",
            "line_nb": 863,
            "steps": [
                {
                    "command": [
                        "by move/dvdp_addr->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_add_eq",
            "line_nb": 866,
            "steps": [
                {
                    "command": [
                        "by move=> ?; apply/idP/idP; [move/dvdp_addr <-| move/dvdp_addl <-].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_subr",
            "line_nb": 869,
            "steps": [
                {
                    "command": [
                        "by move=> ?; apply dvdp_add_eq; rewrite -addrA addNr simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_subl",
            "line_nb": 872,
            "steps": [
                {
                    "command": [
                        "by move/dvdp_addl<-; rewrite subrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_sub",
            "line_nb": 875,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite dvdp_subl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_trans",
            "line_nb": 897,
            "steps": [
                {
                    "command": [
                        "move=> n d m.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (altP (d =P 0)) => [-> | dn0]; first by move/dvd0pP->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (altP (n =P 0)) => [-> | nn0]; first by move=> _ /dvd0pP ->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdp_eq; set c1 := _ ^+ _; set q1 := _ %/ _; move/eqP=> Hq1.",
                        "VernacExtend",
                        "95aab7297d3809dacf819524463cf67310f6682c"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdp_eq; set c2 := _ ^+ _; set q2 := _ %/ _; move/eqP=> Hq2.",
                        "VernacExtend",
                        "95aab7297d3809dacf819524463cf67310f6682c"
                    ]
                },
                {
                    "command": [
                        "have sn0 : c1 * c2 != 0 by rewrite mulf_neq0 // expf_neq0 // lead_coef_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: (@eq_dvdp _ (q2 * q1) _ _ sn0); rewrite -scalerA Hq2 scalerAr Hq1 mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_mulIl",
            "line_nb": 906,
            "steps": [
                {
                    "command": [
                        "by apply: dvdp_mulr; apply: dvdpp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_mulIr",
            "line_nb": 909,
            "steps": [
                {
                    "command": [
                        "by apply: dvdp_mull; apply: dvdpp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_mul2l",
            "line_nb": 923,
            "steps": [
                {
                    "command": [
                        "by rewrite ![r * _]GRing.mulrC; apply: dvdp_mul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_divpr",
            "line_nb": 926,
            "steps": [
                {
                    "command": [
                        "by move=> dv_d_q; rewrite !ltnNge leq_divpl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_exp",
            "line_nb": 929,
            "steps": [
                {
                    "command": [
                        "by case: k => // k _ d_dv_m; rewrite exprS dvdp_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_exp2l",
            "line_nb": 932,
            "steps": [
                {
                    "command": [
                        "by move/subnK <-; rewrite exprD dvdp_mull // ?lead_coef_exp ?unitrX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_Pexp2l",
            "line_nb": 935,
            "steps": [
                {
                    "command": [
                        "move=> sd; case: leqP => [|gt_n_m]; first exact: dvdp_exp2l.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have dn0 : d != 0 by rewrite -size_poly_gt0; apply: ltn_trans sd.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite gtNdvdp ?expf_neq0 // polySpred ?expf_neq0 // size_exp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite [size (d ^+ k)]polySpred ?expf_neq0 // size_exp ltnS ltn_mul2l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move: sd; rewrite -subn_gt0 subn1; move->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_exp_sub",
            "line_nb": 948,
            "steps": [
                {
                    "command": [
                        "move=> pn0; case: (leqP k l)=> hkl.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "move: (hkl); rewrite -subn_eq0; move/eqP->; rewrite expr0 dvd1p.",
                        "VernacExtend",
                        "1c5bed44e136789e69cceefb9ad9e08bc6473cf7"
                    ]
                },
                {
                    "command": [
                        "apply: dvdp_mull; case: (ltnP 1%N (size p)) => sp.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdp_Pexp2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: sp; case esp: (size p) => [|sp].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by move/eqP: esp; rewrite size_poly_eq0 (negPf pn0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS leqn0; move/eqP=> sp0; move/eqP: esp; rewrite sp0.",
                        "VernacExtend",
                        "a2d8dd52a7002ea77bccbdbdac9eb88c7ea43cab"
                    ]
                },
                {
                    "command": [
                        "by case/size_poly1P => c cn0 ->; move/subnK: hkl<-; rewrite exprD dvdp_mulIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}[k](@subnK l) 1?ltnW// exprD dvdp_mul2r//.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: l {hkl}=> [|l ihl]; first by rewrite expr0 oner_eq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS mulf_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_XsubCl",
            "line_nb": 961,
            "steps": [
                {
                    "command": [
                        "by rewrite dvdpE; apply: Ring.rdvdp_XsubCl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_div_XsubC",
            "line_nb": 967,
            "steps": [
                {
                    "command": [
                        "by rewrite dvdp_eq lead_coefXsubC expr1n scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_roots_dvdp",
            "line_nb": 973,
            "steps": [
                {
                    "command": [
                        "move=> rrs; case/(uniq_roots_prod_XsubC rrs)=> q ->.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by apply: dvdp_mull; rewrite // (eqP (monic_prod_XsubC _)) unitr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_bigmul",
            "line_nb": 977,
            "steps": [
                {
                    "command": [
                        "move=> x; elim; first by rewrite big_nil root1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=> p ps ihp; rewrite big_cons /= rootM negb_or ihp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqpxx",
            "line_nb": 1011,
            "steps": [
                {
                    "command": [
                        "by move=> p; rewrite /eqp dvdpp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_sym",
            "line_nb": 1015,
            "steps": [
                {
                    "command": [
                        "by move=> p q; rewrite /eqp andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_trans",
            "line_nb": 1018,
            "steps": [
                {
                    "command": [
                        "move=> p q r; case/andP=> Dp pD; case/andP=> Dq qD.",
                        "VernacExtend",
                        "fd777b019349da348ceeb72ef62c9f8d707a4c0b"
                    ]
                },
                {
                    "command": [
                        "by rewrite /eqp (dvdp_trans Dp) // (dvdp_trans qD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_ltrans",
            "line_nb": 1022,
            "steps": [
                {
                    "command": [
                        "move=> p q r pq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply/idP/idP=> e; apply: eqp_trans e; rewrite // eqp_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_rtrans",
            "line_nb": 1026,
            "steps": [
                {
                    "command": [
                        "by move=> x y xy z; rewrite eqp_sym (eqp_ltrans xy) eqp_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp0",
            "line_nb": 1029,
            "steps": [
                {
                    "command": [
                        "move=> p; case: eqP; move/eqP=> Ep; first by rewrite (eqP Ep) eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/negP; case/andP=> _; rewrite /dvdp modp0 (negPf Ep).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp01",
            "line_nb": 1033,
            "steps": [
                {
                    "command": [
                        "case abs : (0 %= 1) => //; case/eqpP: abs=> [[c1 c2]] /andP [c1n0 c2n0] /=.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite scaler0 alg_polyC; move/eqP; rewrite eq_sym polyC_eq0 (negbTE c2n0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_scale",
            "line_nb": 1037,
            "steps": [
                {
                    "command": [
                        "move=> c0; apply/eqpP; exists (1, c); first by rewrite c0 oner_eq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_size",
            "line_nb": 1041,
            "steps": [
                {
                    "command": [
                        "case: (q =P 0); move/eqP => Eq; first by rewrite (eqP Eq) eqp0; move/eqP->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite eqp_sym; case: (p =P 0); move/eqP => Ep.",
                        "VernacExtend",
                        "f0b646e3773567ccd6c4a75851abf71dbc3ffe2d"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP Ep) eqp0; move/eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/andP => Dp Dq; apply: anti_leq; rewrite !dvdp_leq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyXsubC_eqp1",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "by rewrite -size_poly_eq1 size_XsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_eqp1",
            "line_nb": 1055,
            "steps": [
                {
                    "command": [
                        "move=> dpq hq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have sizeq : size q == 1%N by rewrite size_poly_eq1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have n0q : q != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case abs: (q == 0) => //; move: hq; rewrite (eqP abs) eqp01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -size_poly_eq1 eqn_leq -{1}(eqP sizeq) dvdp_leq //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case p0 : (size p == 0%N); last by rewrite neq0_lt0n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move: dpq; rewrite size_poly_eq0 in p0; rewrite (eqP p0) dvd0p (negbTE n0q).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_dvdr",
            "line_nb": 1064,
            "steps": [
                {
                    "command": [
                        "suff Hmn m n: m %= n -> (d %| m) -> (d %| n).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by move=> mn; apply/idP/idP; apply: Hmn=> //; rewrite eqp_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /eqp; case/andP=> pq qp dp; apply: (dvdp_trans dp).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_dvdl",
            "line_nb": 1069,
            "steps": [
                {
                    "command": [
                        "suff Hmn m n: m %= n -> (m %| p) -> (n %| p).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by move=> ?; apply/idP/idP; apply: Hmn; rewrite // eqp_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /eqp; case/andP=> dd' d'd dp; apply: (dvdp_trans d'd).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_scaler",
            "line_nb": 1074,
            "steps": [
                {
                    "command": [
                        "by move=> cn0; apply: eqp_dvdr; apply: eqp_scale.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_scalel",
            "line_nb": 1077,
            "steps": [
                {
                    "command": [
                        "by move=> cn0; apply: eqp_dvdl; apply: eqp_scale.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_opp",
            "line_nb": 1080,
            "steps": [
                {
                    "command": [
                        "by apply: eqp_dvdr; rewrite -scaleN1r eqp_scale ?oppr_eq0 ?oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_mul2r",
            "line_nb": 1083,
            "steps": [
                {
                    "command": [
                        "by move=> nz_r; rewrite /eqp !dvdp_mul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_mul2l",
            "line_nb": 1086,
            "steps": [
                {
                    "command": [
                        "by move=> nz_r; rewrite /eqp !dvdp_mul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_mull",
            "line_nb": 1089,
            "steps": [
                {
                    "command": [
                        "case/eqpP=> [[c d]] /andP [c0 d0 e]; apply/eqpP; exists (c, d); rewrite ?c0 //.",
                        "VernacExtend",
                        "3dab1f2aa3b54de0becb7cd4ca16f5b41088b5c2"
                    ]
                },
                {
                    "command": [
                        "by rewrite scalerAr e -scalerAr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_mulr",
            "line_nb": 1093,
            "steps": [
                {
                    "command": [
                        "by move=> epq; rewrite ![_ * r]mulrC eqp_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_exp",
            "line_nb": 1096,
            "steps": [
                {
                    "command": [
                        "move=> pq; elim: k=> [|k ihk]; first by rewrite !expr0 eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !exprS (@eqp_trans (q * p ^+ k)) // (eqp_mulr, eqp_mull).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_eqp1",
            "line_nb": 1100,
            "steps": [
                {
                    "command": [
                        "apply/eqpP/idP => [[[x y]] |nc0] /=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "case c0: (c == 0); rewrite // alg_polyC (eqP c0) scaler0.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case/andP=> _ /=; move/negbTE<-; move/eqP; rewrite eq_sym polyC_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (1, c); first by rewrite nc0 /= oner_neq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite alg_polyC scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdUp",
            "line_nb": 1107,
            "steps": [
                {
                    "command": [
                        "by move/eqp_dvdl->; rewrite dvd1p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_root",
            "line_nb": 1129,
            "steps": [
                {
                    "command": [
                        "move/eqpP=> [[c d]] /andP [c0 d0 e] x; move/negPf:c0=>c0; move/negPf:d0=>d0.",
                        "VernacExtend",
                        "e0ac37cc297cc328730d6b7eadc79537d4e2c654"
                    ]
                },
                {
                    "command": [
                        "rewrite rootE -[_==_]orFb -c0 -mulf_eq0 -hornerZ e hornerZ.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulf_eq0 d0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_rmod_mod",
            "line_nb": 1134,
            "steps": [
                {
                    "command": [
                        "rewrite modpE eqp_sym; case: ifP => ulcq //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply: eqp_scale; rewrite invr_eq0 //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: expf_neq0; apply: contraTneq ulcq => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_rdiv_div",
            "line_nb": 1139,
            "steps": [
                {
                    "command": [
                        "rewrite divpE eqp_sym; case: ifP=> ulcq //; apply: eqp_scale; rewrite invr_eq0 //.",
                        "VernacExtend",
                        "4d8ad0c5bfdce14e3dba8ce7548f739db16606e9"
                    ]
                },
                {
                    "command": [
                        "by apply: expf_neq0; apply: contraTneq ulcq => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvd_eqp_divl",
            "line_nb": 1143,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq q 0) eq_pq=> [->|q_neq0]; first by rewrite eqp0=> /eqP->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have d_neq0: d != 0 by apply: contraL dvd_dp=> /eqP->; rewrite dvd0p.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> eq_pq; rewrite -(@eqp_mul2r d) // !divpK // ?(eqp_dvdr _ eq_pq) //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqp_ltrans (eqp_scale _ _)) ?lc_expn_scalp_neq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqp_rtrans (eqp_scale _ _)) ?lc_expn_scalp_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd0p",
            "line_nb": 1152,
            "steps": [
                {
                    "command": [
                        "move=> p; rewrite /gcdp /gcdp_rec size_poly0 size_poly_gt0 if_neg.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: ifP => /= [_ | nzp]; first by rewrite eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite polySpred !(modp0, nzp) //; case: _.-1 => [|m]; rewrite mod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp0",
            "line_nb": 1157,
            "steps": [
                {
                    "command": [
                        "move=> p; have:= gcd0p p; rewrite /gcdp /gcdp_rec size_poly0 size_poly_gt0.",
                        "VernacExtend",
                        "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
                    ]
                },
                {
                    "command": [
                        "by rewrite if_neg; case: ifP => /= p0; rewrite ?(eqxx, p0) // (eqP p0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdpE",
            "line_nb": 1161,
            "steps": [
                {
                    "command": [
                        "pose gcdpE_rec := fix gcdpE_rec (n : nat) (pp qq : {poly R}) {struct n} := let rr := modp pp qq in if rr == 0 then qq else if n is n1.+1 then gcdpE_rec n1 qq rr else rr.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have Irec: forall k l p q, size q <= k -> size q <= l -> size q < size p -> gcdpE_rec k p q = gcdpE_rec l p q.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "elim=> [|m Hrec] [|n] //= p1 q1.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite leqn0 size_poly_eq0; move/eqP=> -> _.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "rewrite size_poly0 size_poly_gt0 modp0 => nzp.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negPf nzp); case: n => [|n] /=; rewrite mod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite leqn0 size_poly_eq0 => _; move/eqP=> ->.",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "rewrite size_poly0 size_poly_gt0 modp0 => nzp.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negPf nzp); case: m {Hrec} => [|m] /=; rewrite mod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: ifP => Epq Sm Sn Sq //; rewrite ?Epq //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq q1 0) => [->|nzq].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: n m {Sm Sn Hrec} => [|m] [|n] //=; rewrite mod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: Hrec; last by rewrite ltn_modp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans _ Sm) // ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans _ Sn) // ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq p 0) => [-> | nzp].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mod0p modp0 gcd0p gcdp0 if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq q 0) => [-> | nzq].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mod0p modp0 gcd0p gcdp0 if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /gcdp /gcdp_rec.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ltnP; rewrite (negPf nzp, negPf nzq) //=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "move=> ltpq; rewrite ltn_modp (negPf nzp) //=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite -(ltn_predK ltpq) /=; case: eqP => [->|].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by case: (size p) => [|[|s]]; rewrite /= modp0 (negPf nzp) // mod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/eqP=> nzqp; rewrite (negPf nzp).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply: Irec => //; last by rewrite ltn_modp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (ltn_predK ltpq) (leq_trans _ ltpq) ?leqW // ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnW // ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> leqp; rewrite ltn_modp (negPf nzq) //=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have p_gt0: size p > 0 by rewrite size_poly_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(prednK p_gt0) /=; case: eqP => [->|].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by case: (size q) => [|[|s]]; rewrite /= modp0 (negPf nzq) // mod0p eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/eqP=> nzpq; rewrite (negPf nzq); apply: Irec => //; rewrite ?ltn_modp //.",
                        "VernacExtend",
                        "291cbed887ee44aa2a2133906ee031c937159d58"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (prednK p_gt0) (leq_trans _ leqp) // ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnW // ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_gcd1p",
            "line_nb": 1201,
            "steps": [
                {
                    "command": [
                        "rewrite gcdpE size_polyC oner_eq0 /= modp1; case: ltnP.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcd0p size_polyC oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/size1_polyC=> e; rewrite e.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case p00: (p`_0 == 0); first by rewrite (eqP p00) modp0 gcdp0 size_poly1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite modpC ?p00 // gcd0p size_polyC p00.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_gcdp1",
            "line_nb": 1208,
            "steps": [
                {
                    "command": [
                        "rewrite gcdpE size_polyC oner_eq0 /= modp1; case: ltnP; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcd0p size_polyC oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS leqn0 size_poly_eq0; move/eqP->; rewrite gcdp0 modp0 size_polyC.",
                        "VernacExtend",
                        "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
                    ]
                },
                {
                    "command": [
                        "by rewrite oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdpp",
            "line_nb": 1214,
            "steps": [
                {
                    "command": [
                        "by move=> p; rewrite gcdpE ltnn modpp gcd0p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_gcdlr",
            "line_nb": 1217,
            "steps": [
                {
                    "command": [
                        "elim: {p q}minn {-2}p {-2}q (leqnn (minn (size q) (size p))) => [|r Hrec] p q.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite geq_min !leqn0 !size_poly_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case/pred2P=> ->; rewrite (gcdp0, gcd0p) dvdpp ?andbT /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq p 0) => [-> _|nz_p]; first by rewrite gcd0p dvdpp andbT.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq q 0) => [->|nz_q]; first by rewrite gcdp0 dvdpp /=.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdpE minnC /minn; case: ltnP => [lt_pq | le_pq] le_qr.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "suffices: minn (size p) (size (q %% p)) <= r.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by move/Hrec; case/andP => E1 E2; rewrite E2 (dvdp_mod _ E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_min orbC -ltnS (leq_trans _ le_qr) ?ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suffices: minn (size q) (size (p %% q)) <= r.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by move/Hrec; case/andP => E1 E2; rewrite E2 andbT (dvdp_mod _ E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_min orbC -ltnS (leq_trans _ le_qr) ?ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_gcdl",
            "line_nb": 1231,
            "steps": [
                {
                    "command": [
                        "by case/andP: (dvdp_gcdlr p q).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_gcdr",
            "line_nb": 1234,
            "steps": [
                {
                    "command": [
                        "by case/andP: (dvdp_gcdlr p q).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_gcdpl",
            "line_nb": 1237,
            "steps": [
                {
                    "command": [
                        "by move=> pn0; move: (dvdp_gcdl p q); apply: dvdp_leq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_gcdpr",
            "line_nb": 1240,
            "steps": [
                {
                    "command": [
                        "by move=> qn0; move: (dvdp_gcdr p q); apply: dvdp_leq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_gcd",
            "line_nb": 1243,
            "steps": [
                {
                    "command": [
                        "apply/idP/andP=> [dv_pmn | [dv_pm dv_pn]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ?(dvdp_trans dv_pmn) ?dvdp_gcdl ?dvdp_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (leqnn (minn (size n) (size m))) dv_pm dv_pn.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: {m n}minn {-2}m {-2}n => [|r Hrec] m n.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite geq_min !leqn0 !size_poly_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case/pred2P=> ->; rewrite (gcdp0, gcd0p).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq m 0) => [-> _|nz_m]; first by rewrite gcd0p /=.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq n 0) => [->|nz_n]; first by rewrite gcdp0 /=.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdpE minnC /minn; case: ltnP => Cnm le_r dv_m dv_n.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply: Hrec => //; last by rewrite -(dvdp_mod _ dv_m).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_min orbC -ltnS (leq_trans _ le_r) ?ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: Hrec => //; last by rewrite -(dvdp_mod _ dv_n).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_min orbC -ltnS (leq_trans _ le_r) ?ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdpC",
            "line_nb": 1258,
            "steps": [
                {
                    "command": [
                        "by move=> p q; rewrite /eqp !dvdp_gcd !dvdp_gcdl !dvdp_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd1p",
            "line_nb": 1261,
            "steps": [
                {
                    "command": [
                        "rewrite -size_poly_eq1 gcdpE size_poly1; case: ltnP.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite modp1 gcd0p size_poly1 eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/size1_polyC=> e; rewrite e.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case p00: (p`_0 == 0); first by rewrite (eqP p00) modp0 gcdp0 size_poly1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite modpC ?p00 // gcd0p size_polyC p00.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp1",
            "line_nb": 1268,
            "steps": [
                {
                    "command": [
                        "by rewrite (eqp_ltrans (gcdpC _ _)) gcd1p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_addl_mul",
            "line_nb": 1271,
            "steps": [
                {
                    "command": [
                        "suff h m n d : gcdp d n %| gcdp d (m * d + n).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "apply/andP; split => //; rewrite {2}(_: q = (-p) * r + (p * r + q)) ?H //.",
                        "VernacExtend",
                        "945ac9810113bf938ceefee9ae4e6b3a8be91952"
                    ]
                },
                {
                    "command": [
                        "by rewrite GRing.mulNr GRing.addKr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdp_gcd dvdp_gcdl /= dvdp_addr ?dvdp_gcdr ?dvdp_mull ?dvdp_gcdl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_addl",
            "line_nb": 1277,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}(mul1r m) gcdp_addl_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_addr",
            "line_nb": 1280,
            "steps": [
                {
                    "command": [
                        "by rewrite addrC gcdp_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_mull",
            "line_nb": 1283,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq n 0) => [-> | nn0]; first by rewrite gcd0p mulr0 eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq m 0) => [-> | mn0]; first by rewrite mul0r gcdp0 eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdpE modp_mull gcd0p size_mul //; case: ifP; first by rewrite eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite (polySpred mn0) addSn /= -{1}[size n]add0n ltn_add2r; move/negbT.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "rewrite -ltnNge prednK ?size_poly_gt0 // leq_eqVlt ltnS leqn0 size_poly_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (negPf mn0) orbF; case/size_poly1P=> c cn0 -> {mn0 m}; rewrite mul_polyC.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "suff -> : n %% (c *: n) = 0 by rewrite gcd0p; apply: eqp_scale.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by apply/modp_eq0P; rewrite dvdp_scalel.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_mulr",
            "line_nb": 1293,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrC gcdp_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_scalel",
            "line_nb": 1296,
            "steps": [
                {
                    "command": [
                        "move=> cn0; rewrite /eqp dvdp_gcd [gcdp m n %| _]dvdp_gcd !dvdp_gcdr !andbT.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply/andP; split; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: dvdp_trans (dvdp_gcdl _ _) _; rewrite dvdp_scaler.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: dvdp_trans (dvdp_gcdl _ _) _; rewrite dvdp_scalel.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_gcd_idl",
            "line_nb": 1306,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq m 0) => [-> | mn0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvd0p => /eqP ->; rewrite gcdp0 eqpxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdp_eq; move/eqP; move/(f_equal (gcdp m)) => h.",
                        "VernacExtend",
                        "c7c6b04948d79e6319f20eded75ce409c4b19c77"
                    ]
                },
                {
                    "command": [
                        "apply: eqp_trans (gcdp_mull (n %/ m) _); rewrite -h eqp_sym gcdp_scaler //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite expf_neq0 // lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_gcd_idr",
            "line_nb": 1313,
            "steps": [
                {
                    "command": [
                        "by move/dvdp_gcd_idl => h; apply: eqp_trans h; apply: gcdpC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_exp",
            "line_nb": 1316,
            "steps": [
                {
                    "command": [
                        "wlog leqmn: k l / k <= l.",
                        "VernacExtend",
                        "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
                    ]
                },
                {
                    "command": [
                        "move=> hwlog; case: (leqP k l); first exact: hwlog.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/ltnW; rewrite minnC; move/hwlog=> h; apply: eqp_trans h; apply: gcdpC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (minn_idPl leqmn); move/subnK: leqmn<-; rewrite exprD.",
                        "VernacExtend",
                        "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
                    ]
                },
                {
                    "command": [
                        "by apply: eqp_trans (gcdp_mull _ _) _; apply: eqpxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_gcdr",
            "line_nb": 1329,
            "steps": [
                {
                    "command": [
                        "move=> eqr; rewrite /eqp !(dvdp_gcd, dvdp_gcdl, andbT) /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqp_dvdr _ eqr) dvdp_gcdr (eqp_dvdr _ eqr) dvdp_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_gcdl",
            "line_nb": 1333,
            "steps": [
                {
                    "command": [
                        "move=> eqr; rewrite /eqp !(dvdp_gcd, dvdp_gcdr, andbT) /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqp_dvdr _ eqr) dvdp_gcdl (eqp_dvdr _ eqr) dvdp_gcdl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_gcd",
            "line_nb": 1337,
            "steps": [
                {
                    "command": [
                        "move=> e1 e2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply: eqp_trans (eqp_gcdr _ e2); apply: eqp_trans (eqp_gcdl _ e1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_rgcd_gcd",
            "line_nb": 1341,
            "steps": [
                {
                    "command": [
                        "move: (leqnn (minn (size p) (size q))); move: {2}(minn (size p) (size q)) => n.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "elim: n p q => [p q|n ihn p q hs].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite leqn0 /minn; case: ltnP => _; rewrite size_poly_eq0; move/eqP->.",
                        "VernacExtend",
                        "93c092d6be68728a11e9ce714facd312e8cffccb"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcd0p rgcd0p eqpxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdp0 rgcdp0 eqpxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq p 0) => [-> | pn0]; first by rewrite gcd0p rgcd0p eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq q 0) => [-> | qn0]; first by rewrite gcdp0 rgcdp0 eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdpE rgcdpE; case: ltnP => sp.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "have e := (eqp_rmod_mod q p); move: (e); move/(eqp_gcdl p) => h.",
                        "VernacExtend",
                        "a8c4fc8ec1ffc028ce913d95a3c0a77b489ac69c"
                    ]
                },
                {
                    "command": [
                        "apply: eqp_trans h; apply: ihn; rewrite (eqp_size e) geq_min.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans _ hs) // (minn_idPl (ltnW _)) ?ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have e := (eqp_rmod_mod p q); move: (e); move/(eqp_gcdl q) => h.",
                        "VernacExtend",
                        "a8c4fc8ec1ffc028ce913d95a3c0a77b489ac69c"
                    ]
                },
                {
                    "command": [
                        "apply: eqp_trans h; apply: ihn; rewrite (eqp_size e) geq_min.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans _ hs) // (minn_idPr _) ?ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_modr",
            "line_nb": 1357,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq m 0) => [-> | mn0]; first by rewrite modp0 eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have : (lead_coef m) ^+ (scalp n m) != 0 by rewrite expf_neq0 // lead_coef_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move/gcdp_scaler; move/(_ m n) => h; apply: eqp_trans h; rewrite divp_eq.",
                        "VernacExtend",
                        "82c03c822051373d1c31f3edf57e67664d9dee3d"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqp_sym gcdp_addl_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_def",
            "line_nb": 1367,
            "steps": [
                {
                    "command": [
                        "move=> dm dn h; rewrite /eqp dvdp_gcd dm dn !andbT.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: h; [apply: dvdp_gcdl | apply: dvdp_gcdr].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_size_gcd",
            "line_nb": 1372,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprimep=> /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_def",
            "line_nb": 1375,
            "steps": [
                {
                    "command": [
                        "done.",
                        "VernacExtend",
                        "095062641163274af3d1e226cbd993f0dbb6e000"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_scalel",
            "line_nb": 1378,
            "steps": [
                {
                    "command": [
                        "by move=> ?; rewrite !coprimep_def (eqp_size (gcdp_scalel _ _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_scaler",
            "line_nb": 1381,
            "steps": [
                {
                    "command": [
                        "by move=> ?; rewrite !coprimep_def (eqp_size (gcdp_scaler _ _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimepp",
            "line_nb": 1384,
            "steps": [
                {
                    "command": [
                        "by rewrite coprimep_def gcdpp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_eqp1",
            "line_nb": 1387,
            "steps": [
                {
                    "command": [
                        "by rewrite coprimep_def size_poly_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_sym",
            "line_nb": 1390,
            "steps": [
                {
                    "command": [
                        "by rewrite -!gcdp_eqp1; apply: eqp_ltrans; rewrite gcdpC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep1",
            "line_nb": 1397,
            "steps": [
                {
                    "command": [
                        "by rewrite coprimep_sym; apply: coprime1p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep0",
            "line_nb": 1400,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprimep gcdp0 size_poly_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime0p",
            "line_nb": 1403,
            "steps": [
                {
                    "command": [
                        "by rewrite coprimep_sym coprimep0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_dvdl",
            "line_nb": 1420,
            "steps": [
                {
                    "command": [
                        "move=> rq cpq; apply/coprimepP=> d dp dr; move/coprimepP:cpq=> cpq'.",
                        "VernacExtend",
                        "dffee33afc6977d6aca43b282561ec7ced1503c9"
                    ]
                },
                {
                    "command": [
                        "by apply: cpq'; rewrite // (dvdp_trans dr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_dvdr",
            "line_nb": 1424,
            "steps": [
                {
                    "command": [
                        "move=> rp; rewrite ![coprimep _ q]coprimep_sym.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by move/coprimep_dvdl; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_modl",
            "line_nb": 1428,
            "steps": [
                {
                    "command": [
                        "symmetry; rewrite !coprimep_def.",
                        "VernacExtend",
                        "ba28bca3513f9c0c3709417402c25d3b87653c7a"
                    ]
                },
                {
                    "command": [
                        "case: (ltnP (size p) (size q))=> hpq; first by rewrite modp_small.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdpE ltnNge hpq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_modr",
            "line_nb": 1433,
            "steps": [
                {
                    "command": [
                        "by rewrite ![coprimep q _]coprimep_sym coprimep_modl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcoprimep_coprimep",
            "line_nb": 1436,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprimep /rcoprimep; rewrite (eqp_size (eqp_rgcd_gcd _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_coprimepr",
            "line_nb": 1439,
            "steps": [
                {
                    "command": [
                        "by rewrite -!gcdp_eqp1; move/(eqp_gcdr p) => h1; apply: (eqp_ltrans h1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_coprimepl",
            "line_nb": 1442,
            "steps": [
                {
                    "command": [
                        "by rewrite !(coprimep_sym _ p); apply: eqp_coprimepr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcdp0",
            "line_nb": 1447,
            "steps": [
                {
                    "command": [
                        "by rewrite /egcdp size_poly0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcdpP",
            "line_nb": 1490,
            "steps": [
                {
                    "command": [
                        "move=> pn0 qn0; rewrite /egcdp; case: (leqP (size q) (size p)) => /= hp.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "by apply: egcdp_recP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/ltnW: hp => hp; case: (egcdp_recP pn0 (leqnn (size p)) hp) => h1 h2 h3.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by split => //; rewrite (eqp_ltrans (gcdpC _ _)) addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcdpE",
            "line_nb": 1496,
            "steps": [
                {
                    "command": [
                        "rewrite {}/e; have [-> /= | qn0] := eqVneq q 0.",
                        "VernacExtend",
                        "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdp0 egcdp0 mul1r mulr0 addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [p0 | pn0] := eqVneq p 0; last by case: (egcdpP pn0 qn0).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite p0 gcd0p mulr0 add0r /egcdp size_poly0 leqn0 size_poly_eq0 (negPf qn0).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bezoutp",
            "line_nb": 1503,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq p 0) => [-> | pn0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcd0p; exists (0, 1); rewrite mul0r mul1r add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq q 0) => [-> | qn0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdp0; exists (1, 0); rewrite mul0r mul1r addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose e := egcdp p q; exists e; rewrite eqp_sym.",
                        "VernacExtend",
                        "99a0779df2100325fa1c35013f9828ff0e7f1c8b"
                    ]
                },
                {
                    "command": [
                        "by case: (egcdpP pn0 qn0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_root",
            "line_nb": 1517,
            "steps": [
                {
                    "command": [
                        "case/Bezout_coprimepP=> [[u v] euv] px0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move/eqpP: euv => [[c1 c2]] /andP /= [c1n0 c2n0 e].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suffices: c1 * (v.[x] * q.[x]) != 0.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulf_eq0 !negb_or c1n0 /=; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/(f_equal (fun t => horner t x)): e; rewrite /= !hornerZ hornerD.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite !hornerM (eqP px0) mulr0 add0r hornerC mulr1; move->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_dvdpr",
            "line_nb": 1531,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrC; apply: Gauss_dvdpl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_gcdpr",
            "line_nb": 1552,
            "steps": [
                {
                    "command": [
                        "move=> co_pm; apply/eqP; rewrite /eqp !dvdp_gcd !dvdp_gcdl /= andbC.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdp_mull ?dvdp_gcdr // -(@Gauss_dvdpl _ m).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrC dvdp_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/coprimepP=> d; rewrite dvdp_gcd; case/andP=> hdp _ hdm.",
                        "VernacExtend",
                        "5caed936835e366e9e533d8f19382dcfedbf86d4"
                    ]
                },
                {
                    "command": [
                        "by move/coprimepP: co_pm; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_gcdpl",
            "line_nb": 1559,
            "steps": [
                {
                    "command": [
                        "by move=> co_pn; rewrite mulrC Gauss_gcdpr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_mulr",
            "line_nb": 1562,
            "steps": [
                {
                    "command": [
                        "apply/coprimepP/andP=> [hp | [/coprimepP-hq hr]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by split; apply/coprimepP=> d dp dq; rewrite hp //; [apply/dvdp_mulr | apply/dvdp_mull].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> d dp dqr; move/(_ _ dp) in hq.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "rewrite Gauss_dvdpl in dqr; first exact: hq.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/coprimep_dvdr: hr; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_mull",
            "line_nb": 1569,
            "steps": [
                {
                    "command": [
                        "by rewrite ![coprimep _ p]coprimep_sym coprimep_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_pexpl",
            "line_nb": 1578,
            "steps": [
                {
                    "command": [
                        "case: k => // k _; elim: k => [|k IHk]; first by rewrite expr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS coprimep_mull -IHk andbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_pexpr",
            "line_nb": 1582,
            "steps": [
                {
                    "command": [
                        "by move=> k_gt0; rewrite !(coprimep_sym m) coprimep_pexpl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_expl",
            "line_nb": 1585,
            "steps": [
                {
                    "command": [
                        "by case: k => [|k] co_pm; rewrite ?coprime1p // coprimep_pexpl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_expr",
            "line_nb": 1588,
            "steps": [
                {
                    "command": [
                        "by rewrite !(coprimep_sym m); apply: coprimep_expl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_mul2l",
            "line_nb": 1591,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq p 0)=> [->|hp]; first by rewrite !mul0r gcdp0 eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /eqp !dvdp_gcd !dvdp_mul2l // dvdp_gcdr dvdp_gcdl !andbT.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: (Bezoutp q r) => [[u v]] huv.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite eqp_sym in huv; rewrite (eqp_dvdr _ (eqp_mull _ huv)).",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrDr ![p * (_ * _)]mulrCA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: dvdp_add; rewrite dvdp_mull// (dvdp_gcdr, dvdp_gcdl).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_mul2r",
            "line_nb": 1599,
            "steps": [
                {
                    "command": [
                        "by rewrite ![_ * p]GRing.mulrC gcdp_mul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulp_gcdr",
            "line_nb": 1602,
            "steps": [
                {
                    "command": [
                        "by rewrite eqp_sym gcdp_mul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulp_gcdl",
            "line_nb": 1605,
            "steps": [
                {
                    "command": [
                        "by rewrite eqp_sym gcdp_mul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_div_gcd",
            "line_nb": 1608,
            "steps": [
                {
                    "command": [
                        "move=> hpq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have gpq0: gcdp p q != 0 by rewrite gcdp_eq0 negb_and.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -gcdp_eqp1 -(@eqp_mul2r (gcdp p q)) // mul1r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have: gcdp p q %| p by rewrite dvdp_gcdl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have: gcdp p q %| q by rewrite dvdp_gcdr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !dvdp_eq eq_sym; move/eqP=> hq; rewrite eq_sym; move/eqP=> hp.",
                        "VernacExtend",
                        "167d522d3692415b2103f7027c3ef892dc09b539"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqp_ltrans (mulp_gcdl _ _ _)) hq hp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have lcn0 k : (lead_coef (gcdp p q)) ^+ k != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite expf_neq0 ?lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: eqp_gcd; rewrite ?eqp_scale.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_div_eq0",
            "line_nb": 1630,
            "steps": [
                {
                    "command": [
                        "move=> dvdp_qp; have [->|p_neq0] := altP (p =P 0); first by rewrite div0p eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite divp_eq0 ltnNge dvdp_leq // (negPf p_neq0) orbF /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: contraTF dvdp_qp=> /eqP ->; rewrite dvd0p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_gcd",
            "line_nb": 1687,
            "steps": [
                {
                    "command": [
                        "rewrite /= !root_factor_theorem; apply/idP/andP=> [dg| [dp dq]].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by split; apply: dvdp_trans dg _; rewrite ?(dvdp_gcdl, dvdp_gcdr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have:= (Bezoutp p q)=> [[[u v]]]; rewrite eqp_sym=> e.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqp_dvdr _ e) dvdp_addl dvdp_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_biggcd",
            "line_nb": 1693,
            "steps": [
                {
                    "command": [
                        "move=> x; elim; first by rewrite big_nil root0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=> p ps ihp; rewrite big_cons /= root_gcd ihp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gdcop0",
            "line_nb": 1700,
            "steps": [
                {
                    "command": [
                        "by rewrite /gdcop size_poly0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gdcopP",
            "line_nb": 1747,
            "steps": [
                {
                    "command": [
                        "by rewrite /gdcop; apply: gdcop_recP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_gdco",
            "line_nb": 1750,
            "steps": [
                {
                    "command": [
                        "by move=> q_neq0; case: gdcopP=> d; rewrite (negPf q_neq0) orbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_gdco",
            "line_nb": 1769,
            "steps": [
                {
                    "command": [
                        "by case: gdcopP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_comp_poly",
            "line_nb": 1784,
            "steps": [
                {
                    "command": [
                        "apply/andP; split.",
                        "VernacExtend",
                        "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdp_gcd !dvdp_comp_poly ?dvdp_gcdl ?dvdp_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (Bezoutp p q) => [[u v]] /andP [].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move/(dvdp_comp_poly r) => Huv _.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite (dvdp_trans _ Huv) // comp_polyD !comp_polyM.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdp_add // dvdp_mull // (dvdp_gcdl,dvdp_gcdr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_comp_poly",
            "line_nb": 1792,
            "steps": [
                {
                    "command": [
                        "rewrite -!gcdp_eqp1 -!size_poly_eq1 -!dvdp1; move/(dvdp_comp_poly r).",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "rewrite comp_polyC => Hgcd.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply: dvdp_trans Hgcd; case/andP: (gcdp_comp_poly r p q).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_addl_mul",
            "line_nb": 1797,
            "steps": [
                {
                    "command": [
                        "by rewrite !coprimep_def (eqp_size (gcdp_addl_mul _ _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irredp_neq0",
            "line_nb": 1801,
            "steps": [
                {
                    "command": [
                        "by rewrite -size_poly_eq0 -lt0n => [[/ltnW]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_XsubC",
            "line_nb": 1806,
            "steps": [
                {
                    "command": [
                        "have: root (p - p.[c]%:P) c by rewrite /root !hornerE subrr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/factor_theorem=> q /(canRL (subrK _)) Dp; rewrite modpE /= lead_coefXsubC.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite GRing.unitr1 expr1n invr1 scale1r {1}Dp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite RingMonic.rmodp_addl_mul_small // ?monicXsubC // size_XsubC size_polyC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (p.[c] == 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_XsubC",
            "line_nb": 1813,
            "steps": [
                {
                    "command": [
                        "rewrite -coprimep_modl modp_XsubC /root -alg_polyC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [-> | /coprimep_scalel->] := altP eqP; last exact: coprime1p.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite scale0r /coprimep gcd0p size_XsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimepX",
            "line_nb": 1818,
            "steps": [
                {
                    "command": [
                        "by rewrite -['X]subr0 coprimep_XsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_mul_XsubC",
            "line_nb": 1828,
            "steps": [
                {
                    "command": [
                        "case: ifPn => [| not_pc0]; last by rewrite Gauss_dvdpr ?coprimep_XsubC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite root_factor_theorem -eqp_div_XsubC mulrC => /eqP{1}->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdp_mul2l ?polyXsubC_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_prod_XsubC",
            "line_nb": 1833,
            "steps": [
                {
                    "command": [
                        "elim: r => [|i r IHr] in p *.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite big_nil dvdp1; exists nil; rewrite // big_nil -size_poly_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite big_cons dvdp_mul_XsubC root_factor_theorem -eqp_div_XsubC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: eqP => [{2}-> | _] /IHr[m Dp]; last by exists (false :: m).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists (true :: m); rewrite /= mulrC big_cons eqp_mul2l ?polyXsubC_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irredp_XsubC",
            "line_nb": 1840,
            "steps": [
                {
                    "command": [
                        "split=> [|d size_d d_dv_Xx]; first by rewrite size_XsubC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have: ~ d %= 1 by apply/negP; rewrite -size_poly_eq1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [|m /=] := @dvdp_prod_XsubC _ [:: x] id d; first by rewrite big_seq1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: m => [|[] [|_ _] /=]; rewrite (big_nil, big_seq1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irredp_XsubCP",
            "line_nb": 1846,
            "steps": [
                {
                    "command": [
                        "move=> irred_p dvd_dp; have [] := boolP (_ %= 1); first by left.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -size_poly_eq1=> /irred_p /(_ dvd_dp); right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divpP",
            "line_nb": 1924,
            "steps": [
                {
                    "command": [
                        "by move/edivpP=> h; case/h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modpP",
            "line_nb": 1927,
            "steps": [
                {
                    "command": [
                        "by move/edivpP=> h; case/h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucl_eqp_eq",
            "line_nb": 1944,
            "steps": [
                {
                    "command": [
                        "move=> ulcq /eqp_eq; move/(congr1 ( *:%R (lead_coef q)^-1 )).",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by rewrite !scalerA mulrC divrr // scale1r mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_modpl",
            "line_nb": 1968,
            "steps": [
                {
                    "command": [
                        "case/eqpP=> [[c1 c2]] /andP /= [c1n0 c2n0 e].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply/eqpP; exists (c1, c2); rewrite ?c1n0 //= -!modp_scalel e.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_divl",
            "line_nb": 1972,
            "steps": [
                {
                    "command": [
                        "case/eqpP=> [[c1 c2]] /andP /= [c1n0 c2n0 e].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply/eqpP; exists (c1, c2); rewrite ?c1n0 // -!divp_scalel e.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_opp",
            "line_nb": 1976,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulN1r -[- (_ %% _)]mulN1r -polyC_opp !mul_polyC modp_scalel.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_opp",
            "line_nb": 1979,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulN1r -[- (_ %/ _)]mulN1r -polyC_opp !mul_polyC divp_scalel.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_addl_mul_small",
            "line_nb": 2009,
            "steps": [
                {
                    "command": [
                        "by move=> srd; rewrite divp_add (divp_small srd) addr0 mulpK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_addl_mul_small",
            "line_nb": 2012,
            "steps": [
                {
                    "command": [
                        "by move=> srd; rewrite modp_add modp_mull add0r modp_small.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_addl_mul",
            "line_nb": 2015,
            "steps": [
                {
                    "command": [
                        "by rewrite divp_add mulpK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_trunc_divp",
            "line_nb": 2021,
            "steps": [
                {
                    "command": [
                        "have dn0 : d != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lead_coef_eq0; apply: contraTneq ulcd => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case q0 : (m %/ d == 0); first by rewrite (eqP q0) mul0r size_poly0 leq0n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}(divp_eq m) size_addl // size_mul ?q0 //; move/negbT: q0.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "rewrite -size_poly_gt0; move/prednK<-; rewrite addSn /=.",
                        "VernacExtend",
                        "67b0af898ebb30c50dab4ce26afe7bc4066d8aea"
                    ]
                },
                {
                    "command": [
                        "by move: dn0; rewrite -(ltn_modp m); move/ltn_addl->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_eq_mul",
            "line_nb": 2044,
            "steps": [
                {
                    "command": [
                        "by move=> dv_d_p; rewrite eq_sym -dvdp_eq_div // eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_mulA",
            "line_nb": 2047,
            "steps": [
                {
                    "command": [
                        "move=> hdm; apply/eqP; rewrite eq_sym -dvdp_eq_mul.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulrA divpK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move/divpK: hdm<-; rewrite mulrA dvdp_mull // dvdpp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_mulAC",
            "line_nb": 2052,
            "steps": [
                {
                    "command": [
                        "by move=> hdm; rewrite mulrC (mulrC m); apply: divp_mulA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_mulCA",
            "line_nb": 2055,
            "steps": [
                {
                    "command": [
                        "by move=> hdp hdq; rewrite mulrC divp_mulAC // divp_mulA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expp_sub",
            "line_nb": 2069,
            "steps": [
                {
                    "command": [
                        "by move/subnK=> {2}<-; rewrite exprD mulpK // lead_coef_exp unitrX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_pmul2l",
            "line_nb": 2072,
            "steps": [
                {
                    "command": [
                        "move=> uq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have udq: lead_coef (d * q) \\in GRing.unit.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite lead_coefM unitrM_comm ?ulcd //; red; rewrite mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}(divp_eq uq p) mulrDr mulrCA divp_addl_mul //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have dn0 : d != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lead_coef_eq0; apply: contraTneq ulcd => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have qn0 : q != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lead_coef_eq0; apply: contraTneq uq => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have dqn0 : d * q != 0 by rewrite mulf_eq0 negb_or dn0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suff : size (d * (p %% q)) < size (d * q).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnNge -divpN0 // negbK => /eqP ->; rewrite addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (altP ( (p %% q) =P 0)) => [-> | rn0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr0 size_poly0 size_poly_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !size_mul //; move: dn0; rewrite -size_poly_gt0.",
                        "VernacExtend",
                        "3051a4e8bb68166b140398e2c3c2862857447428"
                    ]
                },
                {
                    "command": [
                        "by move/prednK<-; rewrite !addSn /= ltn_add2l ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_pmul2r",
            "line_nb": 2089,
            "steps": [
                {
                    "command": [
                        "by move=> uq; rewrite -!(mulrC d) divp_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_divl",
            "line_nb": 2092,
            "steps": [
                {
                    "command": [
                        "move=> ulcr ulcp.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have e : q = (q %/ p %/ r) * (p * r) + ((q %/ p) %% r * p + q %% p).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite addrA (mulrC p) mulrA -mulrDl; rewrite -divp_eq //; apply: divp_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have pn0 : p != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lead_coef_eq0; apply: contraTneq ulcp => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have rn0 : r != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lead_coef_eq0; apply: contraTneq ulcr => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have s : size ((q %/ p) %% r * p + q %% p) < size (p * r).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (altP ((q %/ p) %% r =P 0)) => [-> | qn0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite mul0r add0r size_mul // (polySpred rn0) addnS /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans (leq_addr _ _); rewrite ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite size_addl mulrC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !size_mul // (polySpred pn0) !addSn /= ltn_add2l ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite size_mul // (polySpred qn0) addnS /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans (leq_addr _ _); rewrite ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (edivpP _ e s) => //; rewrite lead_coefM unitrM_comm ?ulcp //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by red; rewrite mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divpAC",
            "line_nb": 2111,
            "steps": [
                {
                    "command": [
                        "by move=> ulcp; rewrite !divp_divl // mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modp_scaler",
            "line_nb": 2114,
            "steps": [
                {
                    "command": [
                        "move=> cn0; case: (eqVneq d 0) => [-> | dn0]; first by rewrite scaler0 !modp0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have e : p = (c^-1 *: (p %/ d)) * (c *: d) + (p %% d).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite scalerCA scalerA mulVr // scale1r -(divp_eq ulcd).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff s : size (p %% d) < size (c *: d).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite (modpP _ e s) // -mul_polyC lead_coefM lead_coefC unitrM cn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_scale ?ltn_modp //; apply: contraTneq cn0 => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_scaler",
            "line_nb": 2122,
            "steps": [
                {
                    "command": [
                        "move=> cn0; case: (eqVneq d 0) => [-> | dn0].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite scaler0 !divp0 scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have e : p = (c^-1 *: (p %/ d)) * (c *: d) + (p %% d).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite scalerCA scalerA mulVr // scale1r -(divp_eq ulcd).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff s : size (p %% d) < size (c *: d).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite (divpP _ e s) // -mul_polyC lead_coefM lead_coefC unitrM cn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_scale ?ltn_modp //; apply: contraTneq cn0 => ->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divp_modpP",
            "line_nb": 2145,
            "steps": [
                {
                    "command": [
                        "move=> he hs; apply: IdomainUnit.edivpP => //; rewrite unitfE lead_coef_eq0.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite -size_poly_gt0; apply: leq_trans hs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqpfP",
            "line_nb": 2155,
            "steps": [
                {
                    "command": [
                        "have [->|nz_q] := altP (q =P 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqp0 => /eqP ->; rewrite scaler0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/IdomainUnit.ucl_eqp_eq; apply; rewrite unitfE.",
                        "VernacExtend",
                        "23f9f92699e2f1e05351cd880f320976b7cb1633"
                    ]
                },
                {
                    "command": [
                        "by move: nz_q; rewrite -lead_coef_eq0 => nz_qT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_modpr",
            "line_nb": 2211,
            "steps": [
                {
                    "command": [
                        "case/eqpP=> [[c1 c2]] /andP [c1n0 c2n0 e].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have -> : p = (c1^-1 * c2) *: q by rewrite -scalerA -e scalerA mulVf // scale1r.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite modp_scaler ?eqpxx // mulf_eq0 negb_or invr_eq0 c1n0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_divr",
            "line_nb": 2220,
            "steps": [
                {
                    "command": [
                        "case/eqpP=> [[c1 c2]] /andP [c1n0 c2n0 e].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have -> : m = (c1^-1 * c2) *: n by rewrite -scalerA -e scalerA mulVf // scale1r.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite divp_scaler ?eqp_scale // ?invr_eq0 mulf_eq0 negb_or invr_eq0 c1n0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_gdcor",
            "line_nb": 2229,
            "steps": [
                {
                    "command": [
                        "move=> eqr; rewrite /gdcop (eqp_size eqr).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move: (size r)=> n; elim: n p q r eqr => [|n ihn] p q r; first by rewrite eqpxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=> eqr /=; rewrite (eqp_coprimepl p eqr); case: ifP => _ //; apply: ihn.",
                        "VernacExtend",
                        "baf26b2a0e43ffbfbf3d72e47e92908480589ac4"
                    ]
                },
                {
                    "command": [
                        "by apply: eqp_div => //; apply: eqp_gcdl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_gdcol",
            "line_nb": 2235,
            "steps": [
                {
                    "command": [
                        "move=> eqr; rewrite /gdcop; move: (size p)=> n.",
                        "VernacExtend",
                        "40075a671b142e70c4190413219df8981418e910"
                    ]
                },
                {
                    "command": [
                        "elim: n p q r eqr {1 3}p (eqpxx p) => [|n ihn] p q r eqr s esp /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "move: eqr; case: (eqVneq q 0)=> [-> | nq0 eqr] /=.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqp_sym eqp0; move->; rewrite eqxx eqpxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff rn0 : r != 0 by rewrite (negPf nq0) (negPf rn0) eqpxx.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by apply: contraTneq eqr => ->; rewrite eqp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqp_coprimepr _ eqr) (eqp_coprimepl _ esp); case: ifP=> _ //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by apply: ihn => //; apply: eqp_div => //; apply: eqp_gcd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modNp",
            "line_nb": 2268,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite -addr_eq0 -modp_add addNr mod0p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_gdcor",
            "line_nb": 2382,
            "steps": [
                {
                    "command": [
                        "move=> q_neq0; rewrite /gdcop.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "elim: (size p) {-2 5}p (leqnn (size p))=> {p} [|n ihn] p.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite size_poly_leq0; move/eqP->.",
                        "VernacExtend",
                        "9d45b3f5079bd11fa9301fef8a859fbbb0c29729"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_poly0 /= dvd0p expr0 mulr1 (negPf q_neq0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> hsp /=; have [->|p_neq0] := altP (p =P 0).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite size_poly0 /= dvd0p expr0 mulr1 div0p /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ifP=> // _; have := (ihn 0).",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_poly0 expr0 mulr1 dvd0p=> /(_ isT).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [|ncop_pq] := boolP (coprimep _ _); first by rewrite dvdp_mulr ?dvdpp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have g_gt1: (1 < size (gcdp p q))%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [|//|/eqP] := ltngtP; last by rewrite -coprimep_def (negPf ncop_pq).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnS leqn0 size_poly_eq0 gcdp_eq0 (negPf p_neq0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have sd : (size (p %/ gcdp p q) < size p)%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite size_divp -?size_poly_eq0 -(subnKC g_gt1) // add2n /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[size _]prednK ?size_poly_gt0 // ltnS subSS leq_subr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}[p](divpK (dvdp_gcdl _ q)) -(subnKC sd) addSnnS exprD mulrA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdp_mul ?ihn //; first by rewrite -ltnS (leq_trans sd).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS dvdp_mulr // dvdp_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reducible_cubic_root",
            "line_nb": 2402,
            "steps": [
                {
                    "command": [
                        "move=> p_le4 /andP[]; rewrite leq_eqVlt eq_sym.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have [/poly2_root[x qx0] _ _ | _ /= q_gt2 p_gt_q] := size q =P 2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists x; rewrite -!dvdp_XsubCl in qx0 *; apply: (dvdp_trans qx0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/dvdpP/sig_eqW=> r def_p; rewrite def_p.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "suffices /poly2_root[x rx0]: size r = 2 by exists x; rewrite rootM rx0.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "have /norP[nz_r nz_q]: ~~ [|| r == 0 | q == 0].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulf_eq0 -def_p -size_poly_gt0 (leq_ltn_trans _ p_gt_q).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite def_p size_mul // -subn1 leq_subLR ltn_subRL in p_gt_q p_le4.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite -(eqn_add2r (size q)) eqn_leq (leq_trans p_le4).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cubic_irreducible",
            "line_nb": 2413,
            "steps": [
                {
                    "command": [
                        "move=> /andP[p_gt1 p_le4] root'p; split=> // q sz_q_neq1 q_dv_p.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "have nz_p: p != 0 by rewrite -size_poly_gt0 ltnW.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nz_q: q != 0 by apply: contraTneq q_dv_p => ->; rewrite dvd0p.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have q_gt1: size q > 1 by rewrite ltn_neqAle eq_sym sz_q_neq1 size_poly_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -dvdp_size_eqp // eqn_leq dvdp_leq //= leqNgt; apply/negP=> p_gt_q.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by have [|x /idPn//] := reducible_cubic_root p_le4 _ q_dv_p; rewrite q_gt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "redivp_map",
            "line_nb": 2426,
            "steps": [
                {
                    "command": [
                        "rewrite /rdivp /rscalp /rmodp !unlock map_poly_eq0 size_map_poly.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: eqP; rewrite /= -(rmorph0 (map_poly_rmorphism f)) //; move/eqP=> q_nz.",
                        "VernacExtend",
                        "c5cb6672fdde6b3af11f77240bf9bbcee9174e45"
                    ]
                },
                {
                    "command": [
                        "move: (size a) => m; elim: m 0%N 0 a => [|m IHm] qq r a /=.",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "rewrite -!mul_polyC !size_map_poly !lead_coef_map // -(map_polyXn f).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!(map_polyC f) -!rmorphM -rmorphB -rmorphD; case: (_ < _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -!mul_polyC !size_map_poly !lead_coef_map // -(map_polyXn f).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!(map_polyC f) -!rmorphM -rmorphB -rmorphD /= IHm; case: (_ < _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "edivp_map",
            "line_nb": 2441,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq b 0) => [-> | bn0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite (rmorph0 (map_poly_rmorphism f)) WeakIdomain.edivp_def !modp0 !divp0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (rmorph0 (map_poly_rmorphism f)) scalp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite unlock redivp_map lead_coef_map rmorph_unit; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite unitfE lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite modpE divpE !map_polyZ !rmorphV ?rmorphX // unitfE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite expf_neq0 // lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalp_map",
            "line_nb": 2450,
            "steps": [
                {
                    "command": [
                        "by rewrite /scalp edivp_map edivp_def.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_divp",
            "line_nb": 2453,
            "steps": [
                {
                    "command": [
                        "by rewrite /divp edivp_map edivp_def.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_modp",
            "line_nb": 2456,
            "steps": [
                {
                    "command": [
                        "by rewrite /modp edivp_map edivp_def.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcdp_map",
            "line_nb": 2459,
            "steps": [
                {
                    "command": [
                        "wlog le_qp: p q / size q <= size p.",
                        "VernacExtend",
                        "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
                    ]
                },
                {
                    "command": [
                        "move=> IH; have [/IH// | lt_qp] := leqP (size q) (size p).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have /IH := ltnW lt_qp; rewrite /egcdp !size_map_poly ltnW // leqNgt lt_qp /=.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by case: (egcdp_rec _ _ _) => u v [-> ->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /egcdp !size_map_poly {}le_qp; move: (size q) => n.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "elim: n => /= [|n IHn] in p q *; first by rewrite rmorph1 rmorph0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite map_poly_eq0; have [_ | nz_q] := ifPn; first by rewrite rmorph1 rmorph0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -map_modp (IHn q (p %% q)); case: (egcdp_rec _ _ n) => u v /=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite map_polyZ lead_coef_map -rmorphX scalp_map rmorphB rmorphM -map_divp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdp_map",
            "line_nb": 2470,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdp -map_modp map_poly_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_map",
            "line_nb": 2473,
            "steps": [
                {
                    "command": [
                        "by rewrite /eqp !dvdp_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdp_map",
            "line_nb": 2476,
            "steps": [
                {
                    "command": [
                        "wlog lt_p_q: p q / size p < size q.",
                        "VernacExtend",
                        "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
                    ]
                },
                {
                    "command": [
                        "move=> IHpq; case: (ltnP (size p) (size q)) => [|le_q_p]; first exact: IHpq.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdpE (gcdpE p^f) !size_map_poly ltnNge le_q_p /= -map_modp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq q 0) => [-> | q_nz]; first by rewrite rmorph0 !gcdp0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite IHpq ?ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: {q}_.+1 p {-2}q (ltnSn (size q)) lt_p_q => // m IHm p q le_q_m lt_p_q.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdpE (gcdpE p^f) !size_map_poly lt_p_q -map_modp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq p 0) => [-> | q_nz]; first by rewrite rmorph0 !gcdp0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite IHm ?(leq_trans lt_p_q) ?ltn_modp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimep_map",
            "line_nb": 2487,
            "steps": [
                {
                    "command": [
                        "by rewrite -!gcdp_eqp1 -eqp_map rmorph1 gcdp_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gdcop_rec_map",
            "line_nb": 2490,
            "steps": [
                {
                    "command": [
                        "elim: n p q => [|n IH] => /= p q.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite map_poly_eq0; case: eqP; rewrite ?rmorph1 ?rmorph0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /coprimep -gcdp_map size_map_poly.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: eqP => Hq0 //; rewrite -map_divp -IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gdcop_map",
            "line_nb": 2496,
            "steps": [
                {
                    "command": [
                        "by rewrite /gdcop gdcop_rec_map !size_map_poly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}