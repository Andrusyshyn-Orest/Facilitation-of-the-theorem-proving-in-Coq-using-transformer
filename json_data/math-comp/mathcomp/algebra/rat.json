{
    "filename": "mathcomp/algebra/rat.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq choice fintype.",
            "VernacRequire",
            "6742bd497e3522a1153ce38bc5b3e5f28f9487c8"
        ],
        [
            "From mathcomp Require Import bigop ssralg countalg div ssrnum ssrint.",
            "VernacRequire",
            "713b2f3744adb7fc147ee7fbd152c03cdc034c81"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Import Num.Theory.",
            "VernacImport",
            "108d2bb9dfc34407f97035ab47500daf208b6212"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Local Notation sgr := Num.sg.",
            "VernacSyntacticDefinition",
            "aa1afb5115a11c3c6c03bdc015075f5f472109d6"
        ],
        [
            "Record rat : Set := Rat { valq : (int * int); _ : (0 < valq.2) && coprime `|valq.1| `|valq.2| }.",
            "VernacInductive",
            "eb3eeefb5d0bf5986a2cf7e3afb6c3892bfb89d0"
        ],
        [
            "Bind Scope ring_scope with rat.",
            "VernacBindScope",
            "cbc4dcdaeb509986e070cd7f8861c9f17d707ab7"
        ],
        [
            "Delimit Scope rat_scope with Q.",
            "VernacDelimiters",
            "01389470a8aab6d6ed54543bd9ce6a988776ba26"
        ],
        [
            "Definition ratz (n : int) := @Rat (n, 1) (coprimen1 _).",
            "VernacDefinition",
            "d6851c57a6611671cb46596834e925fdf50cf7b9"
        ],
        [
            "Canonical rat_subType := Eval hnf in [subType for valq].",
            "VernacDefinition",
            "c2343f66b16f7d5d5bdf817c68214068803c8462"
        ],
        [
            "Definition rat_eqMixin := [eqMixin of rat by <:].",
            "VernacDefinition",
            "955c434dc622cf9cd1fa68f1c1bd7d825a09b4e1"
        ],
        [
            "Canonical rat_eqType := EqType rat rat_eqMixin.",
            "VernacDefinition",
            "6b190eedca10a69308f9bb5c0693084a2f1e4f41"
        ],
        [
            "Definition rat_choiceMixin := [choiceMixin of rat by <:].",
            "VernacDefinition",
            "2e38c16590691fd3080849148aca2b1ba2293ff9"
        ],
        [
            "Canonical rat_choiceType := ChoiceType rat rat_choiceMixin.",
            "VernacDefinition",
            "24d235211f6e01dbebe9e80d66064f46f0b056ed"
        ],
        [
            "Definition rat_countMixin := [countMixin of rat by <:].",
            "VernacDefinition",
            "9d2fd445e0be0405263cf7fa37eb5e4e4a309514"
        ],
        [
            "Canonical rat_countType := CountType rat rat_countMixin.",
            "VernacDefinition",
            "054959026cb2a59fb02a57b044c3a73159a4f92d"
        ],
        [
            "Canonical rat_subCountType := [subCountType of rat].",
            "VernacDefinition",
            "b8729ccbbb1ba4671785672429243c86dc5e3ebc"
        ],
        [
            "Definition numq x := nosimpl ((valq x).1).",
            "VernacDefinition",
            "f74df244b139e187721375415dad826df6c7c814"
        ],
        [
            "Definition denq x := nosimpl ((valq x).2).",
            "VernacDefinition",
            "85651459bf3d03847fa2f1b98db0c08d25d97111"
        ],
        [
            "Lemma denq_gt0 x : 0 < denq x.",
            "VernacStartTheoremProof",
            "71e3ac0082b574ae4a71f875c4372a3acf51d0d1"
        ],
        [
            "by rewrite /denq; case: x=> [[a b] /= /andP []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve denq_gt0 : core.",
            "VernacHints",
            "f6da8b48a715d7bb42b8764f33514d9bc19a3235"
        ],
        [
            "Definition denq_ge0 x := ltrW (denq_gt0 x).",
            "VernacDefinition",
            "07447b2678ddb744f29344b37d54f46b51832b2d"
        ],
        [
            "Lemma denq_lt0 x : (denq x < 0) = false.",
            "VernacStartTheoremProof",
            "b10191f7f9db881a0f21616f00e24b211fe36520"
        ],
        [
            "by rewrite ltr_gtF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denq_neq0 x : denq x != 0.",
            "VernacStartTheoremProof",
            "74199eb01fd2dfb04bb35a9f4b95bfece4a17d79"
        ],
        [
            "by rewrite /denq gtr_eqF ?denq_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve denq_neq0 : core.",
            "VernacHints",
            "cee6b0b685657a52878d359697e2428334493c56"
        ],
        [
            "Lemma denq_eq0 x : (denq x == 0) = false.",
            "VernacStartTheoremProof",
            "25958fbaec8f3e97a09ff3d08ba27857cf567bd1"
        ],
        [
            "exact: negPf (denq_neq0 _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_num_den x : coprime `|numq x| `|denq x|.",
            "VernacStartTheoremProof",
            "3ce922adc508483596ac99a9ab2720d0713bdc2e"
        ],
        [
            "by rewrite /numq /denq; case: x=> [[a b] /= /andP []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact RatK x P : @Rat (numq x, denq x) P = x.",
            "VernacStartTheoremProof",
            "68ccfc77922244bd3e06c58e5d9e0eb1c36bbf2a"
        ],
        [
            "by move: x P => [[a b] P'] P; apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact fracq_subproof : forall x : int * int, let n := if x.2 == 0 then 0 else (-1) ^ ((x.2 < 0) (+) (x.1 < 0)) * (`|x.1| %/ gcdn `|x.1| `|x.2|)%:Z in let d := if x.2 == 0 then 1 else (`|x.2| %/ gcdn `|x.1| `|x.2|)%:Z in (0 < d) && (coprime `|n| `|d|).",
            "VernacStartTheoremProof",
            "05ec76c4630d7fcb70fa43027d8cacad38617b25"
        ],
        [
            "move=> [m n] /=; case: (altP (n =P 0))=> [//|n0].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite ltz_nat divn_gt0 ?gcdn_gt0 ?absz_gt0 ?n0 ?orbT //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite dvdn_leq ?absz_gt0 ?dvdn_gcdr //= !abszM absz_sign mul1n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [->|m0] := altP (m =P 0); first by rewrite div0n gcd0n divnn absz_gt0 n0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: n0 m0; rewrite -!absz_gt0 absz_nat.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: `|_|%N `|_|%N => {m n} [|m] [|n] // _ _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /coprime -(@eqn_pmul2l (gcdn m.+1 n.+1)) ?gcdn_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite muln_gcdr; do 2!rewrite muln_divCA ?(dvdn_gcdl, dvdn_gcdr) ?divnn //.",
            "VernacExtend",
            "6a72213b8ff230d3c557d3c0d5b7e6e6d5c919ed"
        ],
        [
            "by rewrite ?gcdn_gt0 ?muln1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fracq (x : int * int) := nosimpl (@Rat (_, _) (fracq_subproof x)).",
            "VernacDefinition",
            "a3bb1b13a52933872f64c0fa23cdc6a97d34258b"
        ],
        [
            "Fact ratz_frac n : ratz n = fracq (n, 1).",
            "VernacStartTheoremProof",
            "634daae30b5a17708bf829447fcbb56b154f2efb"
        ],
        [
            "by apply: val_inj; rewrite /= gcdn1 !divn1 abszE mulr_sign_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact valqK x : fracq (valq x) = x.",
            "VernacStartTheoremProof",
            "67e790319080003e85e6082451ffb1aacb62adad"
        ],
        [
            "move: x => [[n d] /= Pnd]; apply: val_inj=> /=.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "move: Pnd; rewrite /coprime /fracq /= => /andP[] hd -/eqP hnd.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite ltr_gtF ?gtr_eqF //= hnd !divn1 mulz_sign_abs abszE gtr0_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact scalq_key : unit.",
            "VernacStartTheoremProof",
            "ac9d3cfa064587b39b9f6df3769e42881d63e1e2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition scalq_def x := sgr x.2 * (gcdn `|x.1| `|x.2|)%:Z.",
            "VernacDefinition",
            "335f9f0d5279349890f6c7890ec27cd61029b36f"
        ],
        [
            "Definition scalq := locked_with scalq_key scalq_def.",
            "VernacDefinition",
            "496a9812f5dbd69cf13afcfb3483be793701d99a"
        ],
        [
            "Canonical scalq_unlockable := [unlockable fun scalq].",
            "VernacDefinition",
            "fb54a550d25c7d87a7f0f58f9f44b914b6379eb9"
        ],
        [
            "Fact scalq_eq0 x : (scalq x == 0) = (x.2 == 0).",
            "VernacStartTheoremProof",
            "0ffebb25b2a651a512497cf00d8665971b63f6d4"
        ],
        [
            "case: x => n d; rewrite unlock /= mulf_eq0 sgr_eq0 /= eqz_nat.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite -[gcdn _ _ == 0%N]negbK -lt0n gcdn_gt0 ?absz_gt0 [X in ~~ X]orbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: sgrP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_scalq x : sgr (scalq x) = sgr x.2.",
            "VernacStartTheoremProof",
            "6167dec2e60e76cbb05cf0aa04f9b0e0f7067982"
        ],
        [
            "rewrite unlock sgrM sgr_id -[(gcdn _ _)%:Z]intz sgr_nat.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -lt0n gcdn_gt0 ?absz_gt0 orbC; case: sgrP; rewrite // mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma signr_scalq x : (scalq x < 0) = (x.2 < 0).",
            "VernacStartTheoremProof",
            "3b474619b518e3979e549dd8f9a9f02b6e8935fa"
        ],
        [
            "by rewrite -!sgr_cp0 sgr_scalq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalqE x : x.2 != 0 -> scalq x = (-1) ^+ (x.2 < 0)%R * (gcdn `|x.1| `|x.2|)%:Z.",
            "VernacStartTheoremProof",
            "af90a9dfd4e7372df93cc62784dcedaa436a6af9"
        ],
        [
            "by rewrite unlock; case: sgrP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact valq_frac x : x.2 != 0 -> x = (scalq x * numq (fracq x), scalq x * denq (fracq x)).",
            "VernacStartTheoremProof",
            "8c62b1c8a10bd9dccbd0296dde27c7f972420272"
        ],
        [
            "case: x => [n d] /= d_neq0; rewrite /denq /numq scalqE //= (negPf d_neq0).",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite mulr_signM -mulrA -!PoszM addKb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "do 2!rewrite muln_divCA ?(dvdn_gcdl, dvdn_gcdr) // divnn.",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "by rewrite gcdn_gt0 !absz_gt0 d_neq0 orbT !muln1 !mulz_sign_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition zeroq := fracq (0, 1).",
            "VernacDefinition",
            "2f1aeeba400dc1c3640793d4867b8d08eda62c7d"
        ],
        [
            "Definition oneq := fracq (1, 1).",
            "VernacDefinition",
            "39c665ec6977192ca3abaad1b53b233c2a88297b"
        ],
        [
            "Fact frac0q x : fracq (0, x) = zeroq.",
            "VernacStartTheoremProof",
            "07ebf1b78f3b66f5b82c7a22ad546a99c6cfb730"
        ],
        [
            "apply: val_inj; rewrite //= div0n !gcd0n !mulr0 !divnn.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by have [//|x_neq0] := altP eqP; rewrite absz_gt0 x_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact fracq0 x : fracq (x, 0) = zeroq.",
            "VernacStartTheoremProof",
            "c2871db9bb06cff0882ec5f3fdaeff4653b470c8"
        ],
        [
            "exact/eqP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant fracq_spec (x : int * int) : int * int -> rat -> Type := | FracqSpecN of x.2 = 0 : fracq_spec x (x.1, 0) zeroq | FracqSpecP k fx of k != 0 : fracq_spec x (k * numq fx, k * denq fx) fx.",
            "VernacInductive",
            "971f66600deb82a7829da0855cd95fafb57465f1"
        ],
        [
            "Fact fracqP x : fracq_spec x x (fracq x).",
            "VernacStartTheoremProof",
            "17ea587d1694281f67d430212a4d17f317ddc66a"
        ],
        [
            "case: x => n d /=; have [d_eq0 | d_neq0] := eqVneq d 0.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "by rewrite d_eq0 fracq0; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite {2}[(_, _)]valq_frac //; constructor; rewrite scalq_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rat_eqE x y : (x == y) = (numq x == numq y) && (denq x == denq y).",
            "VernacStartTheoremProof",
            "4fe6f7c1713c01b92c2263dadbf5fb67756b1cd4"
        ],
        [
            "rewrite -val_eqE [val x]surjective_pairing [val y]surjective_pairing /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite xpair_eqE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_denq x : sgr (denq x) = 1.",
            "VernacStartTheoremProof",
            "c7f553d62b7c6f54c62d6f7dbaf6fdfef69c06b4"
        ],
        [
            "by apply/eqP; rewrite sgr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_denq x : `|denq x| = denq x.",
            "VernacStartTheoremProof",
            "4840b68bf9c668a15c2f6a0083fdf49a3dd5d83e"
        ],
        [
            "by rewrite gtr0_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma absz_denq x : `|denq x|%N = denq x :> int.",
            "VernacStartTheoremProof",
            "88b402cd8b77fb6988fb45cd88a6cd590eb5c8d7"
        ],
        [
            "by rewrite abszE normr_denq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rat_eq x y : (x == y) = (numq x * denq y == numq y * denq x).",
            "VernacStartTheoremProof",
            "031a54317e614564af665700410137dc11562ef4"
        ],
        [
            "symmetry; rewrite rat_eqE andbC.",
            "VernacExtend",
            "ba28bca3513f9c0c3709417402c25d3b87653c7a"
        ],
        [
            "have [->|] /= := altP (denq _ =P _); first by rewrite (inj_eq (mulIf _)).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: contraNF => /eqP hxy; rewrite -absz_denq -[X in _ == X]absz_denq.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite eqz_nat /= eqn_dvd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(@Gauss_dvdr _ `|numq x|) 1?coprime_sym ?coprime_num_den // andbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(@Gauss_dvdr _ `|numq y|) 1?coprime_sym ?coprime_num_den //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!abszM hxy -{1}hxy !abszM !dvdn_mull ?dvdnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact fracq_eq x y : x.2 != 0 -> y.2 != 0 -> (fracq x == fracq y) = (x.1 * y.2 == y.1 * x.2).",
            "VernacStartTheoremProof",
            "aad19b6fd627a5bd08b021f2a9397801280a21e1"
        ],
        [
            "case: fracqP=> //= u fx u_neq0 _; case: fracqP=> //= v fy v_neq0 _; symmetry.",
            "VernacExtend",
            "b3b59542d8a7bed6d84577104daf7ec3945e5f80"
        ],
        [
            "rewrite [X in (_ == X)]mulrC mulrACA [X in (_ == X)]mulrACA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [denq _ * _]mulrC (inj_eq (mulfI _)) ?mulf_neq0 // rat_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact fracq_eq0 x : (fracq x == zeroq) = (x.1 == 0) || (x.2 == 0).",
            "VernacStartTheoremProof",
            "6bafa59fe79f110fa3308f1f11e250c60caea3a3"
        ],
        [
            "move: x=> [n d] /=; have [->|d0] := altP (d =P 0).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite fracq0 eqxx orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite orbF fracq_eq ?d0 //= mulr1 mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact fracqMM x n d : x != 0 -> fracq (x * n, x * d) = fracq (n, d).",
            "VernacStartTheoremProof",
            "b989e46f7de49e67ab1058c7e0a9f6144d04d6e8"
        ],
        [
            "move=> x_neq0; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "have [->|d_neq0] := eqVneq d 0; first by rewrite mulr0 !fracq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite fracq_eq ?mulf_neq0 //= mulrCA mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition addq_subdef (x y : int * int) := (x.1 * y.2 + y.1 * x.2, x.2 * y.2).",
            "VernacDefinition",
            "cf0fa75094ba814477e3efb85c74e0cdda2e2f45"
        ],
        [
            "Definition addq (x y : rat) := nosimpl fracq (addq_subdef (valq x) (valq y)).",
            "VernacDefinition",
            "e335bc45d9e718c21f50aa8dc27afae890c5d6e8"
        ],
        [
            "Definition oppq_subdef (x : int * int) := (- x.1, x.2).",
            "VernacDefinition",
            "2c7549639674a14ab06634943321ef867a8f8955"
        ],
        [
            "Definition oppq (x : rat) := nosimpl fracq (oppq_subdef (valq x)).",
            "VernacDefinition",
            "124c7f4d1b47551ea7a90f872243f4f57229ce84"
        ],
        [
            "Fact addq_subdefC : commutative addq_subdef.",
            "VernacStartTheoremProof",
            "3b469f964ff5d94490dd92290cf43d3b33b10c3f"
        ],
        [
            "by move=> x y; rewrite /addq_subdef addrC [_.2 * _]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact addq_subdefA : associative addq_subdef.",
            "VernacStartTheoremProof",
            "eb2ad510813afc1e28c1b3f1f3f685cc06be6c96"
        ],
        [
            "move=> x y z; rewrite /addq_subdef.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !mulrA !mulrDl addrA ![_ * x.2]mulrC !mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact addq_frac x y : x.2 != 0 -> y.2 != 0 -> (addq (fracq x) (fracq y)) = fracq (addq_subdef x y).",
            "VernacStartTheoremProof",
            "c0fcc50b63e091399384d4a87097aede82dd2a81"
        ],
        [
            "case: fracqP => // u fx u_neq0 _; case: fracqP => // v fy v_neq0 _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite /addq_subdef /= ![(_ * numq _) * _]mulrACA [(_ * denq _) * _]mulrACA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [v * _]mulrC -mulrDr fracqMM ?mulf_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact ratzD : {morph ratz : x y / x + y >-> addq x y}.",
            "VernacStartTheoremProof",
            "70bc6e94a992d3a02dccf77c7907c900534950ff"
        ],
        [
            "by move=> x y /=; rewrite !ratz_frac addq_frac // /addq_subdef /= !mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact oppq_frac x : oppq (fracq x) = fracq (oppq_subdef x).",
            "VernacStartTheoremProof",
            "5681ee4e8081ac8d5b69fcc6dbc0fa2404138426"
        ],
        [
            "rewrite /oppq_subdef; case: fracqP => /= [|u fx u_neq0].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite fracq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -mulrN fracqMM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact ratzN : {morph ratz : x / - x >-> oppq x}.",
            "VernacStartTheoremProof",
            "021bb98f8158cef25de72c1d7f47b6b6d46786e8"
        ],
        [
            "by move=> x /=; rewrite !ratz_frac oppq_frac // /add /= !mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact addqC : commutative addq.",
            "VernacStartTheoremProof",
            "64809892964f00e6e9afe6746a969091c8976138"
        ],
        [
            "by move=> x y; rewrite /addq /=; rewrite addq_subdefC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact addqA : associative addq.",
            "VernacStartTheoremProof",
            "5a7b94fb56b6a91055344dd3d14be8098fffd8fa"
        ],
        [
            "move=> x y z; rewrite -[x]valqK -[y]valqK -[z]valqK.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !addq_frac ?mulf_neq0 ?denq_neq0 // addq_subdefA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact add0q : left_id zeroq addq.",
            "VernacStartTheoremProof",
            "eae87a1ea8d5f264ee58f58715a51d27df5d15b7"
        ],
        [
            "move=> x; rewrite -[x]valqK addq_frac ?denq_neq0 // /addq_subdef /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite mul0r add0r mulr1 mul1r -surjective_pairing.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact addNq : left_inverse (fracq (0, 1)) oppq addq.",
            "VernacStartTheoremProof",
            "81341d2e484c9aaa92a02162d6318850cc7ea771"
        ],
        [
            "move=> x; rewrite -[x]valqK !(addq_frac, oppq_frac) ?denq_neq0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite /addq_subdef /oppq_subdef //= mulNr addNr; apply/eqP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite fracq_eq ?mulf_neq0 ?denq_neq0 //= !mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rat_ZmodMixin := ZmodMixin addqA addqC add0q addNq.",
            "VernacDefinition",
            "563deff10466f485d1894c26ca1ec52992f831a6"
        ],
        [
            "Canonical rat_ZmodType := ZmodType rat rat_ZmodMixin.",
            "VernacDefinition",
            "93e3d5ea369a3a81d8c504b63e4354e87ddcde1c"
        ],
        [
            "Definition mulq_subdef (x y : int * int) := nosimpl (x.1 * y.1, x.2 * y.2).",
            "VernacDefinition",
            "d0cadc00c2d36301aca8f6368e669c95a8b9f537"
        ],
        [
            "Definition mulq (x y : rat) := nosimpl fracq (mulq_subdef (valq x) (valq y)).",
            "VernacDefinition",
            "6c8736854cb5c84ff56af814f3318087ca676344"
        ],
        [
            "Fact mulq_subdefC : commutative mulq_subdef.",
            "VernacStartTheoremProof",
            "8127a3fa4676b76ed349364e281f177a2860df23"
        ],
        [
            "by move=> x y; rewrite /mulq_subdef mulrC [_ * x.2]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mul_subdefA : associative mulq_subdef.",
            "VernacStartTheoremProof",
            "79b77087211fe498cb9f30daff2de56e73afda6a"
        ],
        [
            "by move=> x y z; rewrite /mulq_subdef !mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition invq_subdef (x : int * int) := nosimpl (x.2, x.1).",
            "VernacDefinition",
            "d28b3b2da368cf7daf4c6a5446c810447067ea01"
        ],
        [
            "Definition invq (x : rat) := nosimpl fracq (invq_subdef (valq x)).",
            "VernacDefinition",
            "8866f20eb8f76c1a07a1ec16cf30dc9f88c39bf8"
        ],
        [
            "Fact mulq_frac x y : (mulq (fracq x) (fracq y)) = fracq (mulq_subdef x y).",
            "VernacStartTheoremProof",
            "b6718837ee1b81b44fe8527e23025103293af516"
        ],
        [
            "rewrite /mulq_subdef; case: fracqP => /= [|u fx u_neq0].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite mul0r fracq0 /mulq /mulq_subdef /= mul0r frac0q.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: fracqP=> /= [|v fy v_neq0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mulr0 fracq0 /mulq /mulq_subdef /= mulr0 frac0q.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ![_ * (v * _)]mulrACA fracqMM ?mulf_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact ratzM : {morph ratz : x y / x * y >-> mulq x y}.",
            "VernacStartTheoremProof",
            "3e74f49a550f3c54a50586f3a64b9ee2981c1d26"
        ],
        [
            "by move=> x y /=; rewrite !ratz_frac mulq_frac // /= !mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact invq_frac x : x.1 != 0 -> x.2 != 0 -> invq (fracq x) = fracq (invq_subdef x).",
            "VernacStartTheoremProof",
            "99343ff2c5c9c20f2c5f1d2cd72b58a449c8da12"
        ],
        [
            "by rewrite /invq_subdef; case: fracqP => // k {x} x k0; rewrite fracqMM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mulqC : commutative mulq.",
            "VernacStartTheoremProof",
            "57ce2abc4e862c12bb200405a507cabd37dda40e"
        ],
        [
            "by move=> x y; rewrite /mulq mulq_subdefC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mulqA : associative mulq.",
            "VernacStartTheoremProof",
            "e686e6b9a34dc1ea13772341657c634f9a65a7e7"
        ],
        [
            "by move=> x y z; rewrite -[x]valqK -[y]valqK -[z]valqK !mulq_frac mul_subdefA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mul1q : left_id oneq mulq.",
            "VernacStartTheoremProof",
            "c505628e1f350fbfdbbe2b643cd81f3ab1564948"
        ],
        [
            "move=> x; rewrite -[x]valqK; rewrite mulq_frac /mulq_subdef.",
            "VernacExtend",
            "e05f4a56f17e4b341df19faa23614b9e0a1c72d3"
        ],
        [
            "by rewrite !mul1r -surjective_pairing.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mulq_addl : left_distributive mulq addq.",
            "VernacStartTheoremProof",
            "e5d3d141f9fa5b344f38da71bb014fdff448a7d0"
        ],
        [
            "move=> x y z; rewrite -[x]valqK -[y]valqK -[z]valqK /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite !(mulq_frac, addq_frac) ?mulf_neq0 ?denq_neq0 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/eqP; rewrite fracq_eq ?mulf_neq0 ?denq_neq0 //= !mulrDl; apply/eqP.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite !mulrA ![_ * (valq z).1]mulrC !mulrA ![_ * (valq x).2]mulrC !mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact nonzero1q : oneq != zeroq.",
            "VernacStartTheoremProof",
            "9cca9a857e3cfcf6831ca923b71d6067e7723f76"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rat_comRingMixin := ComRingMixin mulqA mulqC mul1q mulq_addl nonzero1q.",
            "VernacDefinition",
            "3cc3bfabaaf3866b90c888fc92b42b876737b86a"
        ],
        [
            "Canonical rat_Ring := Eval hnf in RingType rat rat_comRingMixin.",
            "VernacDefinition",
            "33fef06aea325554787ac605ab0124256674788d"
        ],
        [
            "Canonical rat_comRing := Eval hnf in ComRingType rat mulqC.",
            "VernacDefinition",
            "caed7586ab514469bc22fef57f4cbe25bbfe65af"
        ],
        [
            "Fact mulVq x : x != 0 -> mulq (invq x) x = 1.",
            "VernacStartTheoremProof",
            "98ae4b739052c518a9939ba0d25b4a587dfed3cd"
        ],
        [
            "rewrite -[x]valqK fracq_eq ?denq_neq0 //= mulr1 mul0r=> nx0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !(mulq_frac, invq_frac) ?denq_neq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/eqP; rewrite fracq_eq ?mulf_neq0 ?denq_neq0 //= mulr1 mul1r mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact invq0 : invq 0 = 0.",
            "VernacStartTheoremProof",
            "9c0679f7405aa9362dc8788a75846588bc0e43f8"
        ],
        [
            "by apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition RatFieldUnitMixin := FieldUnitMixin mulVq invq0.",
            "VernacDefinition",
            "3fa212bf7053f6121a7d27324378232ef08dfc94"
        ],
        [
            "Canonical rat_unitRing := Eval hnf in UnitRingType rat RatFieldUnitMixin.",
            "VernacDefinition",
            "cbd07c8cf79774e31f286117091d3eb78360b5af"
        ],
        [
            "Canonical rat_comUnitRing := Eval hnf in [comUnitRingType of rat].",
            "VernacDefinition",
            "fd623366dce18e70c56ea0365515bdca000cd537"
        ],
        [
            "Fact rat_field_axiom : GRing.Field.mixin_of rat_unitRing.",
            "VernacStartTheoremProof",
            "af6a8c8de046c42959589a2bf4111e99799fa1e7"
        ],
        [
            "exact.",
            "VernacExtend",
            "6f8ef2f79d9f700fa94a7c87b5cc8bcbd915dec6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition RatFieldIdomainMixin := (FieldIdomainMixin rat_field_axiom).",
            "VernacDefinition",
            "a846b9037395ae0d23b43f12b592634eea48275b"
        ],
        [
            "Canonical rat_iDomain := Eval hnf in IdomainType rat (FieldIdomainMixin rat_field_axiom).",
            "VernacDefinition",
            "8e58f73fa9ac509f829c6650c2c319c4210992b9"
        ],
        [
            "Canonical rat_fieldType := FieldType rat rat_field_axiom.",
            "VernacDefinition",
            "0539d82275d9a6e76aa74535610d27b36498e08c"
        ],
        [
            "Canonical rat_countZmodType := [countZmodType of rat].",
            "VernacDefinition",
            "2d259c9c3bbf6778b67f839e0ff7fde9c10f7139"
        ],
        [
            "Canonical rat_countRingType := [countRingType of rat].",
            "VernacDefinition",
            "8f6b6b2d12c3b52c433350ce0493dce81b3a722b"
        ],
        [
            "Canonical rat_countComRingType := [countComRingType of rat].",
            "VernacDefinition",
            "8f841286df01c5c2d52aad91e329fd6bf95b9416"
        ],
        [
            "Canonical rat_countUnitRingType := [countUnitRingType of rat].",
            "VernacDefinition",
            "5e7ac9b4afd33dfb59b14db4e376d0a8f0eafd22"
        ],
        [
            "Canonical rat_countComUnitRingType := [countComUnitRingType of rat].",
            "VernacDefinition",
            "0deacf1544f8dee89abfe7579c5355a2d5da2923"
        ],
        [
            "Canonical rat_countIdomainType := [countIdomainType of rat].",
            "VernacDefinition",
            "ca574734f8067657abe21b9cb72873995bff89c7"
        ],
        [
            "Canonical rat_countFieldType := [countFieldType of rat].",
            "VernacDefinition",
            "a315684c37ddb397533f4210440df7f4e53bdc50"
        ],
        [
            "Lemma numq_eq0 x : (numq x == 0) = (x == 0).",
            "VernacStartTheoremProof",
            "852214fd4ca34da3a1f0d50f12851a161132762f"
        ],
        [
            "rewrite -[x]valqK fracq_eq0; case: fracqP=> /= [|k {x} x k0].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite eqxx orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite !mulf_eq0 (negPf k0) /= denq_eq0 orbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation \"n %:Q\" := ((n : int)%:~R : rat) (at level 2, left associativity, format \"n %:Q\") : ring_scope.",
            "VernacNotation",
            "45e3aadd72b40db3c7420b7c68d2b7978a6109a2"
        ],
        [
            "Hint Resolve denq_neq0 denq_gt0 denq_ge0 : core.",
            "VernacHints",
            "26e991d424402ca011f4263bdf5f1e5c8be8f224"
        ],
        [
            "Definition subq (x y : rat) : rat := (addq x (oppq y)).",
            "VernacDefinition",
            "8304fcf2eef84d286b5a9d8cc0ee775ee8a6a286"
        ],
        [
            "Definition divq (x y : rat) : rat := (mulq x (invq y)).",
            "VernacDefinition",
            "49c945d205ae49e6220c02bf7661952a28b99865"
        ],
        [
            "Notation \"0\" := zeroq : rat_scope.",
            "VernacNotation",
            "9d6691813a80b99565ce6c7b11e10c3c91faf416"
        ],
        [
            "Notation \"1\" := oneq : rat_scope.",
            "VernacNotation",
            "52ec5e960302fb26f1db4eca802dbbed89a74775"
        ],
        [
            "Infix \"+\" := addq : rat_scope.",
            "VernacInfix",
            "17069d9f19efd6d0169f8463af4bb6bccd93e24e"
        ],
        [
            "Notation \"- x\" := (oppq x) : rat_scope.",
            "VernacNotation",
            "a64fa70871e5cf7c4650e21d3f2ce446a3e29a71"
        ],
        [
            "Infix \"*\" := mulq : rat_scope.",
            "VernacInfix",
            "04ca6c8b9b91c33b4340ab8a1ae5d66836db4fc4"
        ],
        [
            "Notation \"x ^-1\" := (invq x) : rat_scope.",
            "VernacNotation",
            "beb8beb3d98d2ee3f6b4b56d63e6f07572a100b8"
        ],
        [
            "Infix \"-\" := subq : rat_scope.",
            "VernacInfix",
            "41d2567a4053de9d497614b710086bfdc91e3d2f"
        ],
        [
            "Infix \"/\" := divq : rat_scope.",
            "VernacInfix",
            "7c403f2532d02adbe2b50e154ea1538d9df9ca3f"
        ],
        [
            "Lemma ratzE n : ratz n = n%:Q.",
            "VernacStartTheoremProof",
            "c49ef7522739c366e47e123b4b04bcb1dd3d3d9f"
        ],
        [
            "elim: n=> [|n ihn|n ihn]; first by rewrite mulr0z ratz_frac.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite intS mulrzDl ratzD ihn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite intS opprD mulrzDl ratzD ihn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numq_int n : numq n%:Q = n.",
            "VernacStartTheoremProof",
            "d815e6d71bb8cefcae26ef1aa2f9680d27d89531"
        ],
        [
            "by rewrite -ratzE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denq_int n : denq n%:Q = 1.",
            "VernacStartTheoremProof",
            "88216b1d4f204628f1564332a8eb6d4dbeb08aad"
        ],
        [
            "by rewrite -ratzE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rat0 : 0%:Q = 0.",
            "VernacStartTheoremProof",
            "1b0c0708ce44cb4cf7be5b8f59b799b206bfb3cd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rat1 : 1%:Q = 1.",
            "VernacStartTheoremProof",
            "87492fdc162474b6f2e354d249304b1d1b8c010a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numqN x : numq (- x) = - numq x.",
            "VernacStartTheoremProof",
            "2facc4241cb041615519d9d561e850136081249d"
        ],
        [
            "rewrite /numq; case: x=> [[a b] /= /andP [hb]]; rewrite /coprime=> /eqP hab.",
            "VernacExtend",
            "2253759ff5c580854290fce82296a80357452125"
        ],
        [
            "by rewrite ltr_gtF ?gtr_eqF // {2}abszN hab divn1 mulz_sign_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denqN x : denq (- x) = denq x.",
            "VernacStartTheoremProof",
            "8aae50107369026b353fa2571e1e4579d0665b10"
        ],
        [
            "rewrite /denq; case: x=> [[a b] /= /andP [hb]]; rewrite /coprime=> /eqP hab.",
            "VernacExtend",
            "2253759ff5c580854290fce82296a80357452125"
        ],
        [
            "by rewrite gtr_eqF // abszN hab divn1 gtz0_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact intq_eq0 n : (n%:~R == 0 :> rat) = (n == 0)%N.",
            "VernacStartTheoremProof",
            "572f2c3ddf55b9665902e84f86b7226abb653eeb"
        ],
        [
            "by rewrite -ratzE /ratz rat_eqE /numq /denq /= mulr0 eqxx andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fracqE x : fracq x = x.1%:Q / x.2%:Q.",
            "VernacStartTheoremProof",
            "14364ac08e3a3013ccce189988ebb62371da30df"
        ],
        [
            "move: x => [m n] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case n0: (n == 0); first by rewrite (eqP n0) fracq0 rat0 invr0 mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -[m%:Q]valqK -[n%:Q]valqK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [_^-1]invq_frac ?(denq_neq0, numq_eq0, n0, intq_eq0) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [_ / _]mulq_frac /= /invq_subdef /mulq_subdef /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!/(numq _) -!/(denq _) !numq_int !denq_int mul1r mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divq_num_den x : (numq x)%:Q / (denq x)%:Q = x.",
            "VernacStartTheoremProof",
            "b378c067cb3551476f08ec24254476845eea6fd9"
        ],
        [
            "by rewrite -{3}[x]valqK [valq _]surjective_pairing /= fracqE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant divq_spec (n d : int) : int -> int -> rat -> Type := | DivqSpecN of d = 0 : divq_spec n d n 0 0 | DivqSpecP k x of k != 0 : divq_spec n d (k * numq x) (k * denq x) x.",
            "VernacInductive",
            "e39074f38d85292a99508788c58cccb25053f58b"
        ],
        [
            "Lemma divqP n d : divq_spec n d n d (n%:Q / d%:Q).",
            "VernacStartTheoremProof",
            "523b6e69b7a0d4ef254c6eaaeb27a55294e85d95"
        ],
        [
            "set x := (n, d); rewrite -[n]/x.1 -[d]/x.2 -fracqE.",
            "VernacExtend",
            "8460a73fe74726b8e94ff0752da65e8d48f68f26"
        ],
        [
            "by case: fracqP => [_|k fx k_neq0] /=; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divq_eq (nx dx ny dy : rat) : dx != 0 -> dy != 0 -> (nx / dx == ny / dy) = (nx * dy == ny * dx).",
            "VernacStartTheoremProof",
            "dc9c3ba55252754e099b3d6a3907df488ea6f0d7"
        ],
        [
            "move=> dx_neq0 dy_neq0; rewrite -(inj_eq (@mulIf _ (dx * dy) _)) ?mulf_neq0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite mulrA divfK // mulrCA divfK // [dx * _ ]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant rat_spec : rat -> int -> int -> Type := Rat_spec (n : int) (d : nat) & coprime `|n| d.+1 : rat_spec (n%:Q / d.+1%:Q) n d.+1.",
            "VernacInductive",
            "82ea1cf9ae97380ceb1c9644373f58e4c4d84fcb"
        ],
        [
            "Lemma ratP x : rat_spec x (numq x) (denq x).",
            "VernacStartTheoremProof",
            "54536e0c7a7c81829f310bd7213a87555787198c"
        ],
        [
            "rewrite -{1}[x](divq_num_den); case hd: denq => [p|n].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have: 0 < p%:Z by rewrite -hd denq_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: p hd=> //= n hd; constructor; rewrite -?hd ?divq_num_den //.",
            "VernacExtend",
            "2d56c942035865c5f6f26dbcc47b477f811d515c"
        ],
        [
            "by rewrite -[n.+1]/`|n.+1|%N -hd coprime_num_den.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move: (denq_gt0 x); rewrite hd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeq_num n d : coprime `|n| `|d| -> numq (n%:~R / d%:~R) = sgr d * n.",
            "VernacStartTheoremProof",
            "4d0099ef04f4a66c5bdaddfbc2ee0661dcb5a037"
        ],
        [
            "move=> cnd /=; have <- := fracqE (n, d).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite /numq /= (eqP (cnd : _ == 1%N)) divn1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [|d_gt0|d_lt0] := sgrP d; by rewrite (mul0r, mul1r, mulN1r) //= ?[_ ^ _]signrN ?mulNr mulz_sign_abs.",
            "VernacExtend",
            "cccfb1bf1ad16c29c01cb81c89290714e430c436"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeq_den n d : coprime `|n| `|d| -> denq (n%:~R / d%:~R) = (if d == 0 then 1 else `|d|).",
            "VernacStartTheoremProof",
            "b155f0a35dd993d0e62ebe7ace78ef5d3372c9b7"
        ],
        [
            "move=> cnd; have <- := fracqE (n, d).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite /denq /= (eqP (cnd : _ == 1%N)) divn1; case: d {cnd}.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denqVz (i : int) : i != 0 -> denq (i%:~R^-1) = `|i|.",
            "VernacStartTheoremProof",
            "3e0f968d81614256241041f244db118f1f9f4384"
        ],
        [
            "move=> h; rewrite -div1r -[1]/(1%:~R).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite coprimeq_den /= ?coprime1n // (negPf h).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numqE x : (numq x)%:~R = x * (denq x)%:~R.",
            "VernacStartTheoremProof",
            "3132ec24c30cbf5e019fc32c47d822f57993accc"
        ],
        [
            "by rewrite -{2}[x]divq_num_den divfK // intq_eq0 denq_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denqP x : {d | denq x = d.+1}.",
            "VernacStartTheoremProof",
            "1851debc631341dcd60d2abab9b90ef4033d11a8"
        ],
        [
            "by rewrite /denq; case: x => [[_ [[|d]|]] //= _]; exists d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition normq (x : rat) : rat := `|numq x|%:~R / (denq x)%:~R.",
            "VernacDefinition",
            "c4b33ac2923bd69dee132c6b418c9c54c0d77d44"
        ],
        [
            "Definition le_rat (x y : rat) := numq x * denq y <= numq y * denq x.",
            "VernacDefinition",
            "c4b51b36ab5f08d4f8728688ea00f600b81671cc"
        ],
        [
            "Definition lt_rat (x y : rat) := numq x * denq y < numq y * denq x.",
            "VernacDefinition",
            "aff415179b82321efb745eb0e45e9c2c20f3e79c"
        ],
        [
            "Lemma gt_rat0 x : lt_rat 0 x = (0 < numq x).",
            "VernacStartTheoremProof",
            "9baff36bcdd71604ceebd3dd0c36ed0aad4e9c1a"
        ],
        [
            "by rewrite /lt_rat mul0r mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_rat0 x : lt_rat x 0 = (numq x < 0).",
            "VernacStartTheoremProof",
            "6074dbbaa48ea0b5650a6ed0e2a323c27cb8170e"
        ],
        [
            "by rewrite /lt_rat mul0r mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_rat0 x : le_rat 0 x = (0 <= numq x).",
            "VernacStartTheoremProof",
            "d994d5a2055ad651ad68b3b2f488554accca3fed"
        ],
        [
            "by rewrite /le_rat mul0r mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_rat0 x : le_rat x 0 = (numq x <= 0).",
            "VernacStartTheoremProof",
            "61239198a00d3ab6427fa64492dc80aa354911ab"
        ],
        [
            "by rewrite /le_rat mul0r mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact le_rat0D x y : le_rat 0 x -> le_rat 0 y -> le_rat 0 (x + y).",
            "VernacStartTheoremProof",
            "d6cd5ee9983291deb0c7cb17deeef8ecee9202cd"
        ],
        [
            "rewrite !ge_rat0 => hnx hny.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have hxy: (0 <= numq x * denq y + numq y * denq x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite addr_ge0 ?mulr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /numq /= -!/(denq _) ?mulf_eq0 ?denq_eq0 !ler_gtF ?mulr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact le_rat0M x y : le_rat 0 x -> le_rat 0 y -> le_rat 0 (x * y).",
            "VernacStartTheoremProof",
            "a5ce6ef937c7c4d99dfa3799adaa2b2f403c4fca"
        ],
        [
            "rewrite !ge_rat0 => hnx hny.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have hxy: (0 <= numq x * denq y + numq y * denq x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite addr_ge0 ?mulr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /numq /= -!/(denq _) ?mulf_eq0 ?denq_eq0 !ler_gtF ?mulr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact le_rat0_anti x : le_rat 0 x -> le_rat x 0 -> x = 0.",
            "VernacStartTheoremProof",
            "c93496752e5c42074391a66f53b5d8d5026a2904"
        ],
        [
            "by move=> hx hy; apply/eqP; rewrite -numq_eq0 eqr_le -ge_rat0 -le_rat0 hx hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_numq_div (n d : int) : sgr (numq (n%:Q / d%:Q)) = sgr n * sgr d.",
            "VernacStartTheoremProof",
            "ffcdcf356cbc1a1295a48b04f6e544db958f0526"
        ],
        [
            "set x := (n, d); rewrite -[n]/x.1 -[d]/x.2 -fracqE.",
            "VernacExtend",
            "8460a73fe74726b8e94ff0752da65e8d48f68f26"
        ],
        [
            "case: fracqP => [|k fx k_neq0] /=; first by rewrite mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !sgrM mulrACA -expr2 sqr_sg k_neq0 sgr_denq mulr1 mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subq_ge0 x y : le_rat 0 (y - x) = le_rat x y.",
            "VernacStartTheoremProof",
            "3b1efc1665ab909d6e6f997c13baec280a57da4b"
        ],
        [
            "symmetry; rewrite ge_rat0 /le_rat -subr_ge0.",
            "VernacExtend",
            "ba28bca3513f9c0c3709417402c25d3b87653c7a"
        ],
        [
            "case: ratP => nx dx cndx; case: ratP => ny dy cndy.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite -!mulNr addf_div ?intq_eq0 // !mulNr -!rmorphM -rmorphB /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "symmetry; rewrite !lerNgt -sgr_cp0 sgr_numq_div mulrC gtr0_sg //.",
            "VernacExtend",
            "ba28bca3513f9c0c3709417402c25d3b87653c7a"
        ],
        [
            "by rewrite mul1r sgr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact le_rat_total : total le_rat.",
            "VernacStartTheoremProof",
            "8ccd762eb33915c9f477d21263379b36c96ffa8c"
        ],
        [
            "by move=> x y; apply: ler_total.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact numq_sign_mul (b : bool) x : numq ((-1) ^+ b * x) = (-1) ^+ b * numq x.",
            "VernacStartTheoremProof",
            "259cdb679c04b8e5ee288f8d2e92fd6738c6757d"
        ],
        [
            "by case: b; rewrite ?(mul1r, mulN1r) // numqN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact numq_div_lt0 n d : n != 0 -> d != 0 -> (numq (n%:~R / d%:~R) < 0)%R = (n < 0)%R (+) (d < 0)%R.",
            "VernacStartTheoremProof",
            "c3cc34e28e48bde1ad3faf049ecf7b80920e07e6"
        ],
        [
            "move=> n0 d0; rewrite -sgr_cp0 sgr_numq_div !sgr_def n0 d0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !mulr1n -signr_addb; case: (_ (+) _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_num_div n d : `|numq (n%:~R / d%:~R)| = numq (`|n|%:~R / `|d|%:~R).",
            "VernacStartTheoremProof",
            "8f0f286334b38894c797042c091931124bd9d8a8"
        ],
        [
            "rewrite (normrEsg n) (normrEsg d) !rmorphM /= invfM mulrACA !sgr_def.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [->|n_neq0] := altP eqP; first by rewrite mul0r mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [->|d_neq0] := altP eqP; first by rewrite invr0 !mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !intr_sign invr_sign -signr_addb numq_sign_mul -numq_div_lt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (canRL (signrMK _)); rewrite mulz_sign_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact norm_ratN x : normq (- x) = normq x.",
            "VernacStartTheoremProof",
            "fdf4da4f069bc8fbaa0010a8732342d43332b20a"
        ],
        [
            "by rewrite /normq numqN denqN normrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact ge_rat0_norm x : le_rat 0 x -> normq x = x.",
            "VernacStartTheoremProof",
            "4a65d5318fc25914a6f3fb8867f521de8c08d333"
        ],
        [
            "rewrite ge_rat0; case: ratP=> [] // n d cnd n_ge0.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite /normq /= normr_num_div ?ger0_norm // divq_num_den.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lt_rat_def x y : (lt_rat x y) = (y != x) && (le_rat x y).",
            "VernacStartTheoremProof",
            "147b929ee974b63d3f533d7443d9f2abc02439a6"
        ],
        [
            "by rewrite /lt_rat ltr_def rat_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ratLeMixin := RealLeMixin le_rat0D le_rat0M le_rat0_anti subq_ge0 (@le_rat_total 0) norm_ratN ge_rat0_norm lt_rat_def.",
            "VernacDefinition",
            "b84755ae1dff15206db0a592867c760e85c28951"
        ],
        [
            "Canonical rat_numDomainType := NumDomainType rat ratLeMixin.",
            "VernacDefinition",
            "09f41dc768a8b20c0658d8cbce90cf7e82e6d88a"
        ],
        [
            "Canonical rat_numFieldType := [numFieldType of rat].",
            "VernacDefinition",
            "f2ce987c980908945ba4da57368601ca301cd4fd"
        ],
        [
            "Canonical rat_realDomainType := RealDomainType rat (@le_rat_total 0).",
            "VernacDefinition",
            "57875a3b4557e371b19c84f7d065e59304b0dc9f"
        ],
        [
            "Canonical rat_realFieldType := [realFieldType of rat].",
            "VernacDefinition",
            "537a3c342f051fb8d31d3f5f57e5b06713eb0406"
        ],
        [
            "Lemma numq_ge0 x : (0 <= numq x) = (0 <= x).",
            "VernacStartTheoremProof",
            "ce0ccbe3b3e439db5332430691b0569ba060f454"
        ],
        [
            "by case: ratP => n d cnd; rewrite ?pmulr_lge0 ?invr_gt0 (ler0z, ltr0z).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numq_le0 x : (numq x <= 0) = (x <= 0).",
            "VernacStartTheoremProof",
            "98deac6f41ecb5a9784f5b6b48dfd1d51459865a"
        ],
        [
            "by rewrite -oppr_ge0 -numqN numq_ge0 oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numq_gt0 x : (0 < numq x) = (0 < x).",
            "VernacStartTheoremProof",
            "59d8b3fb27a327fbd6754004a0b448e028dfd055"
        ],
        [
            "by rewrite !ltrNge numq_le0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numq_lt0 x : (numq x < 0) = (x < 0).",
            "VernacStartTheoremProof",
            "92268d84ed83bd55e2ba65e35d3c5aa016dbecb1"
        ],
        [
            "by rewrite !ltrNge numq_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_numq x : sgz (numq x) = sgz x.",
            "VernacStartTheoremProof",
            "8d4fde5c3cc6378e385225711ae6c9ef2e19e3a9"
        ],
        [
            "apply/eqP; case: (sgzP x); rewrite sgz_cp0 ?(numq_gt0, numq_lt0) //.",
            "VernacExtend",
            "cbc4844cce0ad896dcb7bc2a887cf6aae5047c5f"
        ],
        [
            "by move->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denq_mulr_sign (b : bool) x : denq ((-1) ^+ b * x) = denq x.",
            "VernacStartTheoremProof",
            "abc45c4f588ba1b01f2cc4e269c02121a07e5b3a"
        ],
        [
            "by case: b; rewrite ?(mul1r, mulN1r) // denqN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denq_norm x : denq `|x| = denq x.",
            "VernacStartTheoremProof",
            "812320b4676b149bacd5eb0d4d236f3c697794f6"
        ],
        [
            "by rewrite normrEsign denq_mulr_sign.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact rat_archimedean : Num.archimedean_axiom [numDomainType of rat].",
            "VernacStartTheoremProof",
            "8a190e058c7e996d4bed04bdfef736a1ebfbce5d"
        ],
        [
            "move=> x; exists `|numq x|.+1; rewrite mulrS ltr_spaddl //.",
            "VernacExtend",
            "c445c0ada2d15b521a9f49ac27038314f1bef1fb"
        ],
        [
            "rewrite pmulrn abszE intr_norm numqE normrM ler_pemulr ?norm_ge0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -intr_norm ler1n absz_gt0 denq_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical archiType := ArchiFieldType rat rat_archimedean.",
            "VernacDefinition",
            "93e42d2e807c6e759ab8bdc27426cd3096d8a9ef"
        ],
        [
            "Section QintPred.",
            "VernacBeginSection",
            "b30865c9db7d71cb6b4c7038268badb45f85cd34"
        ],
        [
            "Definition Qint := [qualify a x : rat | denq x == 1].",
            "VernacDefinition",
            "ace44f61ae0b5fb94d784e2f86e225fc74037e15"
        ],
        [
            "Fact Qint_key : pred_key Qint.",
            "VernacStartTheoremProof",
            "e9874ddea279491a7aed7c3ea5b859f3ca7f3194"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Qint_keyed := KeyedQualifier Qint_key.",
            "VernacDefinition",
            "906141f9b176dc18a12c93dcc0a8512e3cf2708b"
        ],
        [
            "Lemma Qint_def x : (x \\is a Qint) = (denq x == 1).",
            "VernacStartTheoremProof",
            "82c7b58784e3dac09b3ba5bf44a11243d696a280"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numqK : {in Qint, cancel (fun x => numq x) intr}.",
            "VernacStartTheoremProof",
            "5a807a3129a3eb3288bfdf9c63e5f3254f4ab26b"
        ],
        [
            "by move=> x /(_ =P 1 :> int) Zx; rewrite numqE Zx rmorph1 mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma QintP x : reflect (exists z, x = z%:~R) (x \\in Qint).",
            "VernacStartTheoremProof",
            "0a4cf951bf5d3424562d77bc77d1ec28cb7a0770"
        ],
        [
            "apply: (iffP idP) => [/numqK <- | [z ->]]; first by exists (numq x).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite Qint_def denq_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Qint_subring_closed : subring_closed Qint.",
            "VernacStartTheoremProof",
            "98bff8a4ecbdb5222fa34431a26a68edf839edc0"
        ],
        [
            "split=> // _ _ /QintP[x ->] /QintP[y ->]; apply/QintP.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by exists (x - y); rewrite -rmorphB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists (x * y); rewrite -rmorphM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Qint_opprPred := OpprPred Qint_subring_closed.",
            "VernacDefinition",
            "7055331885ffe7f12c19b63cb6746968860534d0"
        ],
        [
            "Canonical Qint_addrPred := AddrPred Qint_subring_closed.",
            "VernacDefinition",
            "1c77234f9b9419034f429988bf0540877105fe11"
        ],
        [
            "Canonical Qint_mulrPred := MulrPred Qint_subring_closed.",
            "VernacDefinition",
            "4232866271736d797423c57289f05bcb6be2fe6e"
        ],
        [
            "Canonical Qint_zmodPred := ZmodPred Qint_subring_closed.",
            "VernacDefinition",
            "c41e6dc62cc28924ad7e48935fc73902d0cf5cd4"
        ],
        [
            "Canonical Qint_semiringPred := SemiringPred Qint_subring_closed.",
            "VernacDefinition",
            "5bf180ef99e461452add05e9acaaf73c796f3fdb"
        ],
        [
            "Canonical Qint_smulrPred := SmulrPred Qint_subring_closed.",
            "VernacDefinition",
            "1319c9ae4fab1e9c6e8ae50bd6c0a9fb1e4ba237"
        ],
        [
            "Canonical Qint_subringPred := SubringPred Qint_subring_closed.",
            "VernacDefinition",
            "32a3f04e74a6c006f8707963baa998371a8a16a6"
        ],
        [
            "End QintPred.",
            "VernacEndSegment",
            "e85e831786df6ca29ada1a405049c2c5796521a8"
        ],
        [
            "Section QnatPred.",
            "VernacBeginSection",
            "4036c1fa38475337aae7034b40abae386d69059b"
        ],
        [
            "Definition Qnat := [qualify a x : rat | (x \\is a Qint) && (0 <= x)].",
            "VernacDefinition",
            "f731afb5664fd9f3f4bb5dc66eb97af4d9d04bb6"
        ],
        [
            "Fact Qnat_key : pred_key Qnat.",
            "VernacStartTheoremProof",
            "28854577904cd715db926a1eaf4ea3c40ba7b0e3"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Qnat_keyed := KeyedQualifier Qnat_key.",
            "VernacDefinition",
            "d59dc3bf0a501673582c74815403575ba7670695"
        ],
        [
            "Lemma Qnat_def x : (x \\is a Qnat) = (x \\is a Qint) && (0 <= x).",
            "VernacStartTheoremProof",
            "b2213e5de9c1bfd67fe760436169e129abf30e63"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma QnatP x : reflect (exists n : nat, x = n%:R) (x \\in Qnat).",
            "VernacStartTheoremProof",
            "a1749fa0b6613aadeeba5e4607c6a85ef986b984"
        ],
        [
            "rewrite Qnat_def; apply: (iffP idP) => [/andP []|[n ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite Qint_def pmulrn denq_int eqxx ler0z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> /QintP [] [] n ->; rewrite ?ler0z // => _; exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Qnat_semiring_closed : semiring_closed Qnat.",
            "VernacStartTheoremProof",
            "30659eaf283355500fb3e5e865ff9c575f91aa40"
        ],
        [
            "do 2?split; move=> // x y; rewrite !Qnat_def => /andP[xQ hx] /andP[yQ hy].",
            "VernacExtend",
            "24c2559caa04d2e8dc17021336915d215b46361c"
        ],
        [
            "by rewrite rpredD // addr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite rpredM // mulr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Qnat_addrPred := AddrPred Qnat_semiring_closed.",
            "VernacDefinition",
            "b495e34ce161352f8cce392ed8364f64208d322d"
        ],
        [
            "Canonical Qnat_mulrPred := MulrPred Qnat_semiring_closed.",
            "VernacDefinition",
            "b1dfa8dabde2a9eab3546a8bc208ea7dc9bc6237"
        ],
        [
            "Canonical Qnat_semiringPred := SemiringPred Qnat_semiring_closed.",
            "VernacDefinition",
            "f5f473a055f7b66f4672ba378896eb37e20ef207"
        ],
        [
            "End QnatPred.",
            "VernacEndSegment",
            "3aa6e2017673aa06385f091c38c6994c67aec2a0"
        ],
        [
            "Lemma natq_div m n : n %| m -> (m %/ n)%:R = m%:R / n%:R :> rat.",
            "VernacStartTheoremProof",
            "b66f32652dcdca88ce0902ff71343e0530905375"
        ],
        [
            "by apply: char0_natf_div; apply: char_num.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section InRing.",
            "VernacBeginSection",
            "806f8071013a923b59e56528129bceee13b5ceb1"
        ],
        [
            "Variable R : unitRingType.",
            "VernacAssumption",
            "7091a2a91a14247c9bb358aacf762b043d2cb667"
        ],
        [
            "Definition ratr x : R := (numq x)%:~R / (denq x)%:~R.",
            "VernacDefinition",
            "71985e654ceb02a5427ee790dc4b33f096d69d9b"
        ],
        [
            "Lemma ratr_int z : ratr z%:~R = z%:~R.",
            "VernacStartTheoremProof",
            "8e1346cd10a57a2948bcd134ea354abc77f5a8e3"
        ],
        [
            "by rewrite /ratr numq_int denq_int divr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ratr_nat n : ratr n%:R = n%:R.",
            "VernacStartTheoremProof",
            "4f561f41b0500a72e387a05de4e1b7a1db9da87f"
        ],
        [
            "exact: (ratr_int n).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rpred_rat S (ringS : @divringPred R S) (kS : keyed_pred ringS) a : ratr a \\in kS.",
            "VernacStartTheoremProof",
            "31e1ecc2b359a331adebecea1367126a8c4a7ac0"
        ],
        [
            "by rewrite rpred_div ?rpred_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InRing.",
            "VernacEndSegment",
            "7e682ec8d320f7439988085a8a046bf48ce9facf"
        ],
        [
            "Section Fmorph.",
            "VernacBeginSection",
            "051a9204caf2235faca50c57ddec1f50f077f1d1"
        ],
        [
            "Implicit Type rR : unitRingType.",
            "VernacReserve",
            "dbac084d9de631b2ea58182ec1de714c9f4705b8"
        ],
        [
            "Lemma fmorph_rat (aR : fieldType) rR (f : {rmorphism aR -> rR}) a : f (ratr _ a) = ratr _ a.",
            "VernacStartTheoremProof",
            "0a9739f89713646cbc2c275464cf04fc16a3bf67"
        ],
        [
            "by rewrite fmorph_div !rmorph_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmorph_eq_rat rR (f : {rmorphism rat -> rR}) : f =1 ratr _.",
            "VernacStartTheoremProof",
            "efca3cdd97587a773608aa98c79f8566b8bf3059"
        ],
        [
            "by move=> a; rewrite -{1}[a]divq_num_den fmorph_div !rmorph_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fmorph.",
            "VernacEndSegment",
            "8971b103ebb3d8be562a70425b7d4ea8a484d0de"
        ],
        [
            "Section Linear.",
            "VernacBeginSection",
            "809989470d97d23f25d2454249711ce952aef9dc"
        ],
        [
            "Implicit Types (U V : lmodType rat) (A B : lalgType rat).",
            "VernacReserve",
            "4420e26649fba1e5368ab2ef91ad4104768b068e"
        ],
        [
            "Lemma rat_linear U V (f : U -> V) : additive f -> linear f.",
            "VernacStartTheoremProof",
            "eff334261b9f78ab655ddfd217843b2745a530d7"
        ],
        [
            "move=> fB a u v; pose phi := Additive fB; rewrite [f _](raddfD phi).",
            "VernacExtend",
            "73c843a1f4c0cf8664256bee2febe0b542eae469"
        ],
        [
            "congr (_ + _); rewrite -{2}[a]divq_num_den mulrC -scalerA.",
            "VernacExtend",
            "90723b7805fdae0b93bd8b98ae215a5658363919"
        ],
        [
            "apply: canRL (scalerK _) _; first by rewrite intr_eq0 denq_neq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !scaler_int -raddfMz scalerMzl -mulrzr -numqE scaler_int raddfMz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rat_lrmorphism A B (f : A -> B) : rmorphism f -> lrmorphism f.",
            "VernacStartTheoremProof",
            "d338c29c516b34b18f859ab98332e4b011ec9a00"
        ],
        [
            "by case=> /rat_linear fZ fM; do ?split=> //; apply: fZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Linear.",
            "VernacEndSegment",
            "650f655f21276c75f543f8ea3c6de3cbb24f6f06"
        ],
        [
            "Section InPrealField.",
            "VernacBeginSection",
            "853e98c47abfaf02b6f0ddea763a7a13e61b144f"
        ],
        [
            "Variable F : numFieldType.",
            "VernacAssumption",
            "54a2a87fd83f87f32f2019148f109eace8d8a33f"
        ],
        [
            "Fact ratr_is_rmorphism : rmorphism (@ratr F).",
            "VernacStartTheoremProof",
            "740f78e3ec5ce1555e49243648f5415f08acee48"
        ],
        [
            "have injZtoQ: @injective rat int intr by apply: intr_inj.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nz_den x: (denq x)%:~R != 0 :> F by rewrite intr_eq0 denq_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "do 2?split; rewrite /ratr ?divr1 // => x y; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite mulrC mulrAC; apply: canLR (mulKf (nz_den _)) _; rewrite !mulrA.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "do 2!apply: canRL (mulfK (nz_den _)) _; rewrite -!rmorphM; congr _%:~R.",
            "VernacExtend",
            "73fc7ee6d43f2ff52afd1267d539f543577272e2"
        ],
        [
            "apply: injZtoQ; rewrite !rmorphM [x * y]lock /= !numqE -lock.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -!mulrA mulrA mulrCA -!mulrA (mulrCA y).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (canLR (mulfK (nz_den _))); apply: (mulIf (nz_den x)).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite mulrAC mulrBl divfK ?nz_den // mulrAC -!rmorphM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: (mulIf (nz_den y)); rewrite mulrAC mulrBl divfK ?nz_den //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -!(rmorphM, rmorphB); congr _%:~R; apply: injZtoQ.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "rewrite !(rmorphM, rmorphB) [_ - _]lock /= -lock !numqE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (mulrAC y) -!mulrBl -mulrA mulrAC !mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical ratr_additive := Additive ratr_is_rmorphism.",
            "VernacDefinition",
            "1690abebe81bcf4e09d52b7ad839fc65b0b0d3f8"
        ],
        [
            "Canonical ratr_rmorphism := RMorphism ratr_is_rmorphism.",
            "VernacDefinition",
            "4bb058acd24ed7e7bd621ba36c39c875ba56aafb"
        ],
        [
            "Lemma ler_rat : {mono (@ratr F) : x y / x <= y}.",
            "VernacStartTheoremProof",
            "b08c91578eeb8aa8cbde9593f4e4fac04bc95299"
        ],
        [
            "move=> x y /=; case: (ratP x) => nx dx cndx; case: (ratP y) => ny dy cndy.",
            "VernacExtend",
            "fd777b019349da348ceeb72ef62c9f8d707a4c0b"
        ],
        [
            "rewrite !fmorph_div /= !ratr_int !ler_pdivl_mulr ?ltr0z //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ![_ / _ * _]mulrAC !ler_pdivr_mulr ?ltr0z // -!rmorphM /= !ler_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_rat : {mono (@ratr F) : x y / x < y}.",
            "VernacStartTheoremProof",
            "61f6b34ea0ebdb2dc5ce7fbce3267c6244906f77"
        ],
        [
            "exact: lerW_mono ler_rat.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler0q x : (0 <= ratr F x) = (0 <= x).",
            "VernacStartTheoremProof",
            "6107245b6fce6c5f8d2e9cf144b398fe3a3e15a4"
        ],
        [
            "by rewrite (_ : 0 = ratr F 0) ?ler_rat ?rmorph0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerq0 x : (ratr F x <= 0) = (x <= 0).",
            "VernacStartTheoremProof",
            "24c303edee7a2026b27c6a15d17cc99eb68a27f0"
        ],
        [
            "by rewrite (_ : 0 = ratr F 0) ?ler_rat ?rmorph0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr0q x : (0 < ratr F x) = (0 < x).",
            "VernacStartTheoremProof",
            "4672d4257bfcde4fb19004d6bc4c3ab2615ca1fe"
        ],
        [
            "by rewrite (_ : 0 = ratr F 0) ?ltr_rat ?rmorph0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrq0 x : (ratr F x < 0) = (x < 0).",
            "VernacStartTheoremProof",
            "bd15020a0bca69ff9f53bcb232f4db987ccc7619"
        ],
        [
            "by rewrite (_ : 0 = ratr F 0) ?ltr_rat ?rmorph0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ratr_sg x : ratr F (sgr x) = sgr (ratr F x).",
            "VernacStartTheoremProof",
            "7a9757465ffdda6a6fb6961de15b866cc8772837"
        ],
        [
            "by rewrite !sgr_def fmorph_eq0 ltrq0 rmorphMn rmorph_sign.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ratr_norm x : ratr F `|x| = `|ratr F x|.",
            "VernacStartTheoremProof",
            "81c871935c5bfb19793a178d3fd689b6bff0a318"
        ],
        [
            "rewrite {2}[x]numEsign rmorphMsign normrMsign [`|ratr F _|]ger0_norm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ler0q ?normr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InPrealField.",
            "VernacEndSegment",
            "ac9f9c3e53cfc5b9b4103a2b4f48c86fcf2c8c5b"
        ],
        [
            "Arguments ratr {R}.",
            "VernacArguments",
            "3079c5eead18a3df41bb6b6388af3b9d383b8ee1"
        ],
        [
            "Ltac rat_to_ring := rewrite -?[0%Q]/(0 : rat)%R -?[1%Q]/(1 : rat)%R -?[(_ - _)%Q]/(_ - _ : rat)%R -?[(_ / _)%Q]/(_ / _ : rat)%R -?[(_ + _)%Q]/(_ + _ : rat)%R -?[(_ * _)%Q]/(_ * _ : rat)%R -?[(- _)%Q]/(- _ : rat)%R -?[(_ ^-1)%Q]/(_ ^-1 : rat)%R /=.",
            "VernacExtend",
            "32b9283d0330fb9de4d0b0cd71433a77f08b3235"
        ],
        [
            "Ltac ring_to_rat := rewrite -?[0%R]/0%Q -?[1%R]/1%Q -?[(_ - _)%R]/(_ - _)%Q -?[(_ / _)%R]/(_ / _)%Q -?[(_ + _)%R]/(_ + _)%Q -?[(_ * _)%R]/(_ * _)%Q -?[(- _)%R]/(- _)%Q -?[(_ ^-1)%R]/(_ ^-1)%Q /=.",
            "VernacExtend",
            "08aedae5e4c2961235e20362ba7ce9fb38c1e318"
        ],
        [
            "Lemma rat_ring_theory : (ring_theory 0%Q 1%Q addq mulq subq oppq eq).",
            "VernacStartTheoremProof",
            "946f6127dfebc315f120793d3e4be964c931bc9e"
        ],
        [
            "split => * //; rat_to_ring; by rewrite ?(add0r, addrA, mul1r, mulrA, mulrDl, subrr) // (addrC, mulrC).",
            "VernacExtend",
            "591c7dd4e2a7fa7a72fd2211072d1c7df272e428"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require setoid_ring.Field_theory setoid_ring.Field_tac.",
            "VernacRequire",
            "93b6fa43b5bd8b98f8c280e5019fb4601a5c24d4"
        ],
        [
            "Lemma rat_field_theory : Field_theory.field_theory 0%Q 1%Q addq mulq subq oppq divq invq eq.",
            "VernacStartTheoremProof",
            "498b8a56a2d7b1f08c9b1e7471cb0a6012b846ba"
        ],
        [
            "split => //; first exact rat_ring_theory.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> p /eqP p_neq0; rat_to_ring; rewrite mulVf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Field rat_field : rat_field_theory.",
            "VernacExtend",
            "d0dbaeb66e437d909a0dea8da9e1241491ed13e0"
        ]
    ],
    "proofs": [
        {
            "name": "denq_gt0",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "by rewrite /denq; case: x=> [[a b] /= /andP []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denq_lt0",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_gtF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denq_neq0",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "by rewrite /denq gtr_eqF ?denq_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denq_eq0",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "exact: negPf (denq_neq0 _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_num_den",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "by rewrite /numq /denq; case: x=> [[a b] /= /andP []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RatK",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "by move: x P => [[a b] P'] P; apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fracq_subproof",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "move=> [m n] /=; case: (altP (n =P 0))=> [//|n0].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "rewrite ltz_nat divn_gt0 ?gcdn_gt0 ?absz_gt0 ?n0 ?orbT //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdn_leq ?absz_gt0 ?dvdn_gcdr //= !abszM absz_sign mul1n.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [->|m0] := altP (m =P 0); first by rewrite div0n gcd0n divnn absz_gt0 n0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move: n0 m0; rewrite -!absz_gt0 absz_nat.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move: `|_|%N `|_|%N => {m n} [|m] [|n] // _ _.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /coprime -(@eqn_pmul2l (gcdn m.+1 n.+1)) ?gcdn_gt0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite muln_gcdr; do 2!rewrite muln_divCA ?(dvdn_gcdl, dvdn_gcdr) ?divnn //.",
                        "VernacExtend",
                        "6a72213b8ff230d3c557d3c0d5b7e6e6d5c919ed"
                    ]
                },
                {
                    "command": [
                        "by rewrite ?gcdn_gt0 ?muln1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratz_frac",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "by apply: val_inj; rewrite /= gcdn1 !divn1 abszE mulr_sign_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valqK",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "move: x => [[n d] /= Pnd]; apply: val_inj=> /=.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "move: Pnd; rewrite /coprime /fracq /= => /andP[] hd -/eqP hnd.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr_gtF ?gtr_eqF //= hnd !divn1 mulz_sign_abs abszE gtr0_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalq_key",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalq_eq0",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "case: x => n d; rewrite unlock /= mulf_eq0 sgr_eq0 /= eqz_nat.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite -[gcdn _ _ == 0%N]negbK -lt0n gcdn_gt0 ?absz_gt0 [X in ~~ X]orbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: sgrP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_scalq",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "rewrite unlock sgrM sgr_id -[(gcdn _ _)%:Z]intz sgr_nat.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lt0n gcdn_gt0 ?absz_gt0 orbC; case: sgrP; rewrite // mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signr_scalq",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "by rewrite -!sgr_cp0 sgr_scalq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalqE",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock; case: sgrP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valq_frac",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "case: x => [n d] /= d_neq0; rewrite /denq /numq scalqE //= (negPf d_neq0).",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite mulr_signM -mulrA -!PoszM addKb.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "do 2!rewrite muln_divCA ?(dvdn_gcdl, dvdn_gcdr) // divnn.",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdn_gt0 !absz_gt0 d_neq0 orbT !muln1 !mulz_sign_abs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "frac0q",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "apply: val_inj; rewrite //= div0n !gcd0n !mulr0 !divnn.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by have [//|x_neq0] := altP eqP; rewrite absz_gt0 x_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fracq0",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "exact/eqP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fracqP",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "case: x => n d /=; have [d_eq0 | d_neq0] := eqVneq d 0.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "by rewrite d_eq0 fracq0; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite {2}[(_, _)]valq_frac //; constructor; rewrite scalq_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rat_eqE",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "rewrite -val_eqE [val x]surjective_pairing [val y]surjective_pairing /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite xpair_eqE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_denq",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite sgr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_denq",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "by rewrite gtr0_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absz_denq",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "by rewrite abszE normr_denq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rat_eq",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "symmetry; rewrite rat_eqE andbC.",
                        "VernacExtend",
                        "ba28bca3513f9c0c3709417402c25d3b87653c7a"
                    ]
                },
                {
                    "command": [
                        "have [->|] /= := altP (denq _ =P _); first by rewrite (inj_eq (mulIf _)).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: contraNF => /eqP hxy; rewrite -absz_denq -[X in _ == X]absz_denq.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite eqz_nat /= eqn_dvd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(@Gauss_dvdr _ `|numq x|) 1?coprime_sym ?coprime_num_den // andbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(@Gauss_dvdr _ `|numq y|) 1?coprime_sym ?coprime_num_den //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!abszM hxy -{1}hxy !abszM !dvdn_mull ?dvdnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fracq_eq",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "case: fracqP=> //= u fx u_neq0 _; case: fracqP=> //= v fy v_neq0 _; symmetry.",
                        "VernacExtend",
                        "b3b59542d8a7bed6d84577104daf7ec3945e5f80"
                    ]
                },
                {
                    "command": [
                        "rewrite [X in (_ == X)]mulrC mulrACA [X in (_ == X)]mulrACA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite [denq _ * _]mulrC (inj_eq (mulfI _)) ?mulf_neq0 // rat_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fracq_eq0",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "move: x=> [n d] /=; have [->|d0] := altP (d =P 0).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite fracq0 eqxx orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite orbF fracq_eq ?d0 //= mulr1 mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addq_subdefC",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /addq_subdef addrC [_.2 * _]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addq_subdefA",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "move=> x y z; rewrite /addq_subdef.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulrA !mulrDl addrA ![_ * x.2]mulrC !mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addq_frac",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "case: fracqP => // u fx u_neq0 _; case: fracqP => // v fy v_neq0 _.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "rewrite /addq_subdef /= ![(_ * numq _) * _]mulrACA [(_ * denq _) * _]mulrACA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite [v * _]mulrC -mulrDr fracqMM ?mulf_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratzD",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "by move=> x y /=; rewrite !ratz_frac addq_frac // /addq_subdef /= !mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppq_frac",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "rewrite /oppq_subdef; case: fracqP => /= [|u fx u_neq0].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite fracq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulrN fracqMM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratzN",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "by move=> x /=; rewrite !ratz_frac oppq_frac // /add /= !mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addqC",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /addq /=; rewrite addq_subdefC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addqA",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "move=> x y z; rewrite -[x]valqK -[y]valqK -[z]valqK.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite !addq_frac ?mulf_neq0 ?denq_neq0 // addq_subdefA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add0q",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "move=> x; rewrite -[x]valqK addq_frac ?denq_neq0 // /addq_subdef /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul0r add0r mulr1 mul1r -surjective_pairing.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulq_subdefC",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /mulq_subdef mulrC [_ * x.2]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_subdefA",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; rewrite /mulq_subdef !mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulq_frac",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "rewrite /mulq_subdef; case: fracqP => /= [|u fx u_neq0].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul0r fracq0 /mulq /mulq_subdef /= mul0r frac0q.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: fracqP=> /= [|v fy v_neq0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr0 fracq0 /mulq /mulq_subdef /= mulr0 frac0q.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ![_ * (v * _)]mulrACA fracqMM ?mulf_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratzM",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "by move=> x y /=; rewrite !ratz_frac mulq_frac // /= !mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invq_frac",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "by rewrite /invq_subdef; case: fracqP => // k {x} x k0; rewrite fracqMM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulqC",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /mulq mulq_subdefC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulqA",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; rewrite -[x]valqK -[y]valqK -[z]valqK !mulq_frac mul_subdefA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul1q",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "move=> x; rewrite -[x]valqK; rewrite mulq_frac /mulq_subdef.",
                        "VernacExtend",
                        "e05f4a56f17e4b341df19faa23614b9e0a1c72d3"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mul1r -surjective_pairing.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonzero1q",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulVq",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "rewrite -[x]valqK fracq_eq ?denq_neq0 //= mulr1 mul0r=> nx0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite !(mulq_frac, invq_frac) ?denq_neq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite fracq_eq ?mulf_neq0 ?denq_neq0 //= mulr1 mul1r mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invq0",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "by apply/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rat_field_axiom",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "exact.",
                        "VernacExtend",
                        "6f8ef2f79d9f700fa94a7c87b5cc8bcbd915dec6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numq_eq0",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "rewrite -[x]valqK fracq_eq0; case: fracqP=> /= [|k {x} x k0].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqxx orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulf_eq0 (negPf k0) /= denq_eq0 orbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratzE",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "elim: n=> [|n ihn|n ihn]; first by rewrite mulr0z ratz_frac.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite intS mulrzDl ratzD ihn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite intS opprD mulrzDl ratzD ihn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numq_int",
            "line_nb": 280,
            "steps": [
                {
                    "command": [
                        "by rewrite -ratzE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denq_int",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "by rewrite -ratzE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rat0",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rat1",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numqN",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "rewrite /numq; case: x=> [[a b] /= /andP [hb]]; rewrite /coprime=> /eqP hab.",
                        "VernacExtend",
                        "2253759ff5c580854290fce82296a80357452125"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr_gtF ?gtr_eqF // {2}abszN hab divn1 mulz_sign_abs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denqN",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "rewrite /denq; case: x=> [[a b] /= /andP [hb]]; rewrite /coprime=> /eqP hab.",
                        "VernacExtend",
                        "2253759ff5c580854290fce82296a80357452125"
                    ]
                },
                {
                    "command": [
                        "by rewrite gtr_eqF // abszN hab divn1 gtz0_abs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intq_eq0",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "by rewrite -ratzE /ratz rat_eqE /numq /denq /= mulr0 eqxx andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fracqE",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "move: x => [m n] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case n0: (n == 0); first by rewrite (eqP n0) fracq0 rat0 invr0 mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -[m%:Q]valqK -[n%:Q]valqK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite [_^-1]invq_frac ?(denq_neq0, numq_eq0, n0, intq_eq0) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite [_ / _]mulq_frac /= /invq_subdef /mulq_subdef /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!/(numq _) -!/(denq _) !numq_int !denq_int mul1r mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divq_num_den",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "by rewrite -{3}[x]valqK [valq _]surjective_pairing /= fracqE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divqP",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "set x := (n, d); rewrite -[n]/x.1 -[d]/x.2 -fracqE.",
                        "VernacExtend",
                        "8460a73fe74726b8e94ff0752da65e8d48f68f26"
                    ]
                },
                {
                    "command": [
                        "by case: fracqP => [_|k fx k_neq0] /=; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divq_eq",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "move=> dx_neq0 dy_neq0; rewrite -(inj_eq (@mulIf _ (dx * dy) _)) ?mulf_neq0 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrA divfK // mulrCA divfK // [dx * _ ]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratP",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "rewrite -{1}[x](divq_num_den); case hd: denq => [p|n].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "have: 0 < p%:Z by rewrite -hd denq_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: p hd=> //= n hd; constructor; rewrite -?hd ?divq_num_den //.",
                        "VernacExtend",
                        "2d56c942035865c5f6f26dbcc47b477f811d515c"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[n.+1]/`|n.+1|%N -hd coprime_num_den.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move: (denq_gt0 x); rewrite hd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeq_num",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "move=> cnd /=; have <- := fracqE (n, d).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite /numq /= (eqP (cnd : _ == 1%N)) divn1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [|d_gt0|d_lt0] := sgrP d; by rewrite (mul0r, mul1r, mulN1r) //= ?[_ ^ _]signrN ?mulNr mulz_sign_abs.",
                        "VernacExtend",
                        "cccfb1bf1ad16c29c01cb81c89290714e430c436"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeq_den",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "move=> cnd; have <- := fracqE (n, d).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite /denq /= (eqP (cnd : _ == 1%N)) divn1; case: d {cnd}.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denqVz",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "move=> h; rewrite -div1r -[1]/(1%:~R).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite coprimeq_den /= ?coprime1n // (negPf h).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numqE",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}[x]divq_num_den divfK // intq_eq0 denq_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denqP",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "by rewrite /denq; case: x => [[_ [[|d]|]] //= _]; exists d.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_rat0",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "by rewrite /lt_rat mul0r mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_rat0",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "by rewrite /lt_rat mul0r mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_rat0",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "by rewrite /le_rat mul0r mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_rat0",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "by rewrite /le_rat mul0r mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_rat0D",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "rewrite !ge_rat0 => hnx hny.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have hxy: (0 <= numq x * denq y + numq y * denq x).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite addr_ge0 ?mulr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /numq /= -!/(denq _) ?mulf_eq0 ?denq_eq0 !ler_gtF ?mulr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_rat0M",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "rewrite !ge_rat0 => hnx hny.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have hxy: (0 <= numq x * denq y + numq y * denq x).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite addr_ge0 ?mulr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /numq /= -!/(denq _) ?mulf_eq0 ?denq_eq0 !ler_gtF ?mulr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_rat0_anti",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "by move=> hx hy; apply/eqP; rewrite -numq_eq0 eqr_le -ge_rat0 -le_rat0 hx hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_numq_div",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "set x := (n, d); rewrite -[n]/x.1 -[d]/x.2 -fracqE.",
                        "VernacExtend",
                        "8460a73fe74726b8e94ff0752da65e8d48f68f26"
                    ]
                },
                {
                    "command": [
                        "case: fracqP => [|k fx k_neq0] /=; first by rewrite mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !sgrM mulrACA -expr2 sqr_sg k_neq0 sgr_denq mulr1 mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subq_ge0",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "symmetry; rewrite ge_rat0 /le_rat -subr_ge0.",
                        "VernacExtend",
                        "ba28bca3513f9c0c3709417402c25d3b87653c7a"
                    ]
                },
                {
                    "command": [
                        "case: ratP => nx dx cndx; case: ratP => ny dy cndy.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "rewrite -!mulNr addf_div ?intq_eq0 // !mulNr -!rmorphM -rmorphB /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "symmetry; rewrite !lerNgt -sgr_cp0 sgr_numq_div mulrC gtr0_sg //.",
                        "VernacExtend",
                        "ba28bca3513f9c0c3709417402c25d3b87653c7a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul1r sgr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_rat_total",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "by move=> x y; apply: ler_total.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numq_sign_mul",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "by case: b; rewrite ?(mul1r, mulN1r) // numqN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numq_div_lt0",
            "line_nb": 398,
            "steps": [
                {
                    "command": [
                        "move=> n0 d0; rewrite -sgr_cp0 sgr_numq_div !sgr_def n0 d0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulr1n -signr_addb; case: (_ (+) _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_num_div",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "rewrite (normrEsg n) (normrEsg d) !rmorphM /= invfM mulrACA !sgr_def.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [->|n_neq0] := altP eqP; first by rewrite mul0r mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [->|d_neq0] := altP eqP; first by rewrite invr0 !mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !intr_sign invr_sign -signr_addb numq_sign_mul -numq_div_lt0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: (canRL (signrMK _)); rewrite mulz_sign_abs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_ratN",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "by rewrite /normq numqN denqN normrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_rat0_norm",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "rewrite ge_rat0; case: ratP=> [] // n d cnd n_ge0.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite /normq /= normr_num_div ?ger0_norm // divq_num_den.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_rat_def",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "by rewrite /lt_rat ltr_def rat_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numq_ge0",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "by case: ratP => n d cnd; rewrite ?pmulr_lge0 ?invr_gt0 (ler0z, ltr0z).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numq_le0",
            "line_nb": 427,
            "steps": [
                {
                    "command": [
                        "by rewrite -oppr_ge0 -numqN numq_ge0 oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numq_gt0",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "by rewrite !ltrNge numq_le0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numq_lt0",
            "line_nb": 433,
            "steps": [
                {
                    "command": [
                        "by rewrite !ltrNge numq_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_numq",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "apply/eqP; case: (sgzP x); rewrite sgz_cp0 ?(numq_gt0, numq_lt0) //.",
                        "VernacExtend",
                        "cbc4844cce0ad896dcb7bc2a887cf6aae5047c5f"
                    ]
                },
                {
                    "command": [
                        "by move->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denq_mulr_sign",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "by case: b; rewrite ?(mul1r, mulN1r) // denqN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denq_norm",
            "line_nb": 443,
            "steps": [
                {
                    "command": [
                        "by rewrite normrEsign denq_mulr_sign.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rat_archimedean",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "move=> x; exists `|numq x|.+1; rewrite mulrS ltr_spaddl //.",
                        "VernacExtend",
                        "c445c0ada2d15b521a9f49ac27038314f1bef1fb"
                    ]
                },
                {
                    "command": [
                        "rewrite pmulrn abszE intr_norm numqE normrM ler_pemulr ?norm_ge0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -intr_norm ler1n absz_gt0 denq_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qint_key",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qint_def",
            "line_nb": 458,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numqK",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "by move=> x /(_ =P 1 :> int) Zx; rewrite numqE Zx rmorph1 mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "QintP",
            "line_nb": 464,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [/numqK <- | [z ->]]; first by exists (numq x).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite Qint_def denq_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qnat_key",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qnat_def",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "QnatP",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "rewrite Qnat_def; apply: (iffP idP) => [/andP []|[n ->]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite Qint_def pmulrn denq_int eqxx ler0z.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=> /QintP [] [] n ->; rewrite ?ler0z // => _; exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qnat_semiring_closed",
            "line_nb": 495,
            "steps": [
                {
                    "command": [
                        "do 2?split; move=> // x y; rewrite !Qnat_def => /andP[xQ hx] /andP[yQ hy].",
                        "VernacExtend",
                        "24c2559caa04d2e8dc17021336915d215b46361c"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredD // addr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM // mulr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natq_div",
            "line_nb": 504,
            "steps": [
                {
                    "command": [
                        "by apply: char0_natf_div; apply: char_num.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratr_int",
            "line_nb": 510,
            "steps": [
                {
                    "command": [
                        "by rewrite /ratr numq_int denq_int divr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratr_nat",
            "line_nb": 513,
            "steps": [
                {
                    "command": [
                        "exact: (ratr_int n).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rpred_rat",
            "line_nb": 516,
            "steps": [
                {
                    "command": [
                        "by rewrite rpred_div ?rpred_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmorph_rat",
            "line_nb": 522,
            "steps": [
                {
                    "command": [
                        "by rewrite fmorph_div !rmorph_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmorph_eq_rat",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "by move=> a; rewrite -{1}[a]divq_num_den fmorph_div !rmorph_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rat_lrmorphism",
            "line_nb": 537,
            "steps": [
                {
                    "command": [
                        "by case=> /rat_linear fZ fM; do ?split=> //; apply: fZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_rat",
            "line_nb": 560,
            "steps": [
                {
                    "command": [
                        "move=> x y /=; case: (ratP x) => nx dx cndx; case: (ratP y) => ny dy cndy.",
                        "VernacExtend",
                        "fd777b019349da348ceeb72ef62c9f8d707a4c0b"
                    ]
                },
                {
                    "command": [
                        "rewrite !fmorph_div /= !ratr_int !ler_pdivl_mulr ?ltr0z //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ![_ / _ * _]mulrAC !ler_pdivr_mulr ?ltr0z // -!rmorphM /= !ler_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_rat",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "exact: lerW_mono ler_rat.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler0q",
            "line_nb": 568,
            "steps": [
                {
                    "command": [
                        "by rewrite (_ : 0 = ratr F 0) ?ler_rat ?rmorph0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerq0",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "by rewrite (_ : 0 = ratr F 0) ?ler_rat ?rmorph0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0q",
            "line_nb": 574,
            "steps": [
                {
                    "command": [
                        "by rewrite (_ : 0 = ratr F 0) ?ltr_rat ?rmorph0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratr_sg",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "by rewrite !sgr_def fmorph_eq0 ltrq0 rmorphMn rmorph_sign.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ratr_norm",
            "line_nb": 583,
            "steps": [
                {
                    "command": [
                        "rewrite {2}[x]numEsign rmorphMsign normrMsign [`|ratr F _|]ger0_norm //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ler0q ?normr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rat_ring_theory",
            "line_nb": 591,
            "steps": [
                {
                    "command": [
                        "split => * //; rat_to_ring; by rewrite ?(add0r, addrA, mul1r, mulrA, mulrDl, subrr) // (addrC, mulrC).",
                        "VernacExtend",
                        "591c7dd4e2a7fa7a72fd2211072d1c7df272e428"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rat_field_theory",
            "line_nb": 595,
            "steps": [
                {
                    "command": [
                        "split => //; first exact rat_ring_theory.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=> p /eqP p_neq0; rat_to_ring; rewrite mulVf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}