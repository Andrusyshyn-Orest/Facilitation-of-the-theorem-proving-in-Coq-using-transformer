{
    "filename": "mathcomp/algebra/vector.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq choice fintype bigop.",
            "VernacRequire",
            "c9f4ff63c99010e76aded74cba395fce537c4b2a"
        ],
        [
            "From mathcomp Require Import finfun tuple ssralg matrix mxalgebra zmodp.",
            "VernacRequire",
            "86611397936816cd5b67485d5141013183505c38"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Reserved Notation \"{ 'vspace' T }\" (at level 0, format \"{ 'vspace' T }\").",
            "VernacSyntaxExtension",
            "8c187e261d459f629ce486907e7fc15a5e36cab9"
        ],
        [
            "Reserved Notation \"''Hom' ( T , rT )\" (at level 8, format \"''Hom' ( T , rT )\").",
            "VernacSyntaxExtension",
            "5d1b5fef700292626edf5ed8296fa57b4b1953ce"
        ],
        [
            "Reserved Notation \"''End' ( T )\" (at level 8, format \"''End' ( T )\").",
            "VernacSyntaxExtension",
            "1ff079121daa34e6ea8fa211f8d50fcb2514d044"
        ],
        [
            "Reserved Notation \"\\dim A\" (at level 10, A at level 8, format \"\\dim A\").",
            "VernacSyntaxExtension",
            "991c28193c4202c967f0297c24ba40e76d0c98be"
        ],
        [
            "Delimit Scope vspace_scope with VS.",
            "VernacDelimiters",
            "1d0d847014d222c665e0b199a8f1633b14413ebd"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Module Vector.",
            "VernacDefineModule",
            "9d68850be0c3398967e4a27c960d745ed73592bd"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Definition axiom_def n (V : lmodType R) of phant V := {v2r : V -> 'rV[R]_n | linear v2r & bijective v2r}.",
            "VernacDefinition",
            "e5c88918f3df7633a87689150088183acd028c7e"
        ],
        [
            "Inductive mixin_of (V : lmodType R) := Mixin dim & axiom_def dim (Phant V).",
            "VernacInductive",
            "f33d75ef250df2ee035fc595e297454e679a57f5"
        ],
        [
            "Structure class_of V := Class { base : GRing.Lmodule.class_of R V; mixin : mixin_of (GRing.Lmodule.Pack _ base) }.",
            "VernacInductive",
            "42c5455925324f151e46023c630ae1925015ab89"
        ],
        [
            "Local Coercion base : class_of >-> GRing.Lmodule.class_of.",
            "VernacCoercion",
            "665968c28cc67d7afc2e8c313151e187ed8b029f"
        ],
        [
            "Structure type (phR : phant R) := Pack {sort; _ : class_of sort}.",
            "VernacInductive",
            "78bfdb22887f748fe58a15d412ea69b6a323083f"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (phR : phant R) (T : Type) (cT : type phR).",
            "VernacAssumption",
            "c29c1b47135afbce9a566505b9ed44f41969b316"
        ],
        [
            "Definition class := let: Pack _ c := cT return class_of cT in c.",
            "VernacDefinition",
            "037d2d3a3fb5f93be0dcb742c7cc8b0f16e89227"
        ],
        [
            "Definition clone c of phant_id class c := @Pack phR T c.",
            "VernacDefinition",
            "37d5147ec25756853db3ea8f93466e928b7aedd0"
        ],
        [
            "Let xT := let: Pack T _ := cT in T.",
            "VernacDefinition",
            "0a87c77e3a5ac8febf0910b95d7b998b7cb9cf6d"
        ],
        [
            "Notation xclass := (class : class_of xT).",
            "VernacSyntacticDefinition",
            "e136614fedd7b331a23b54adad5b0bce11895ed4"
        ],
        [
            "Definition dim := let: Mixin n _ := mixin class in n.",
            "VernacDefinition",
            "c237ba8ff172d227c068f1354cac19f050ac1a44"
        ],
        [
            "Definition pack b0 (m0 : mixin_of (@GRing.Lmodule.Pack R _ T b0)) := fun bT b & phant_id (@GRing.Lmodule.class _ phR bT) b => fun m & phant_id m0 m => Pack phR (@Class T b m).",
            "VernacDefinition",
            "a07201bacddc903f7eef2d265041f40498358eb0"
        ],
        [
            "Definition eqType := @Equality.Pack cT xclass.",
            "VernacDefinition",
            "6139f412b89e62ff13c9c707c885de4b39151e9d"
        ],
        [
            "Definition choiceType := @Choice.Pack cT xclass.",
            "VernacDefinition",
            "f62d3090382a5ea70b978e0633e0376c4558db55"
        ],
        [
            "Definition zmodType := @GRing.Zmodule.Pack cT xclass.",
            "VernacDefinition",
            "55ca79fd57642c05c60d387b339e6f79f04a3ff3"
        ],
        [
            "Definition lmodType := @GRing.Lmodule.Pack R phR cT xclass.",
            "VernacDefinition",
            "4ce82a63418d58bd951d43f4534526d1a6795b8f"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Notation axiom n V := (axiom_def n (Phant V)).",
            "VernacSyntacticDefinition",
            "b361946ff241d4e945e15619a587cc25113bab33"
        ],
        [
            "Section OtherDefs.",
            "VernacBeginSection",
            "bbd87f08d86cc20dd338d90c63269aa5cb98b40e"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Local Coercion dim : type >-> nat.",
            "VernacCoercion",
            "2f01b1bb8bdd756ac46119a38edf9de9e947bf4b"
        ],
        [
            "Inductive space (K : fieldType) (vT : type (Phant K)) (phV : phant vT) := Space (mx : 'M[K]_vT) & <<mx>>%MS == mx.",
            "VernacInductive",
            "8be057b9aac0bbf6dbafa264cd57391be8be3b36"
        ],
        [
            "Inductive hom (R : ringType) (vT wT : type (Phant R)) := Hom of 'M[R]_(vT, wT).",
            "VernacInductive",
            "7a60a69b3caaac3c9b0d0da4cbf278a9cae72e63"
        ],
        [
            "End OtherDefs.",
            "VernacEndSegment",
            "0289d16237a644179c7409566874fb82e61f6fa1"
        ],
        [
            "Module Import Exports.",
            "VernacDefineModule",
            "f5a1035b94691e963f68c6f9e1df4c47bb9f27d8"
        ],
        [
            "Coercion base : class_of >-> GRing.Lmodule.class_of.",
            "VernacCoercion",
            "7e19016984afead5ec3871a6f1f03bb75a8bd218"
        ],
        [
            "Coercion mixin : class_of >-> mixin_of.",
            "VernacCoercion",
            "6e94763ee53fdac946511987d81c3f6daccc67c3"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Coercion eqType: type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Bind Scope ring_scope with sort.",
            "VernacBindScope",
            "ac04d07dda43f0036576b2a438f8490c7ac4d59b"
        ],
        [
            "Canonical eqType.",
            "VernacCanonical",
            "dd1ac877a396f552e2a8f23e59be45903d8b15ad"
        ],
        [
            "Coercion choiceType: type >-> Choice.type.",
            "VernacCoercion",
            "bdc8d608f4b963a8606cd33ad18b1977a8bcb78d"
        ],
        [
            "Canonical choiceType.",
            "VernacCanonical",
            "af7a1759ddd13e2b7e4e1ce16b6a3595a77b5659"
        ],
        [
            "Coercion zmodType: type >-> GRing.Zmodule.type.",
            "VernacCoercion",
            "e060cc1ea9f61e5bb007225650e27649c68e297c"
        ],
        [
            "Canonical zmodType.",
            "VernacCanonical",
            "9a6f278270af4b6ced100d8e0c90c7719a960a86"
        ],
        [
            "Coercion lmodType: type>-> GRing.Lmodule.type.",
            "VernacCoercion",
            "014d973b99594bc27a520662d56df3f3465eb961"
        ],
        [
            "Canonical lmodType.",
            "VernacCanonical",
            "2508a378d00cff399685e05d31698f84cdfa1eb3"
        ],
        [
            "Notation vectType R := (@type _ (Phant R)).",
            "VernacSyntacticDefinition",
            "edbcf5f617e114140c16641677ca52e55374a618"
        ],
        [
            "Notation VectType R V mV := (@pack _ (Phant R) V _ mV _ _ id _ id).",
            "VernacSyntacticDefinition",
            "bcd4897ca28adb52df69c97da6d85e9b36496938"
        ],
        [
            "Notation VectMixin := Mixin.",
            "VernacSyntacticDefinition",
            "95ca06ea09806609c1631f6a306e527f39a16a84"
        ],
        [
            "Notation \"[ 'vectType' R 'of' T 'for' cT ]\" := (@clone _ (Phant R) T cT _ idfun) (at level 0, format \"[ 'vectType' R 'of' T 'for' cT ]\") : form_scope.",
            "VernacNotation",
            "12d337483213b18b01e79a3182dea74a73c77b0c"
        ],
        [
            "Notation \"[ 'vectType' R 'of' T ]\" := (@clone _ (Phant R) T _ _ idfun) (at level 0, format \"[ 'vectType' R 'of' T ]\") : form_scope.",
            "VernacNotation",
            "7182f93bf5ea3d40ae38e1448e25b03b6a792d6b"
        ],
        [
            "Notation \"{ 'vspace' vT }\" := (space (Phant vT)) : type_scope.",
            "VernacNotation",
            "009a8fc7b973bc79a642f3fcb90777eb2903b9f8"
        ],
        [
            "Notation \"''Hom' ( aT , rT )\" := (hom aT rT) : type_scope.",
            "VernacNotation",
            "ae9808b755dfbc4b4b73a603657fb9c8c0d67d51"
        ],
        [
            "Notation \"''End' ( vT )\" := (hom vT vT) : type_scope.",
            "VernacNotation",
            "599239b5d28a1e9f75a5fe984a93e4e52cfccb35"
        ],
        [
            "Prenex Implicits Hom.",
            "VernacExtend",
            "005594158f87d0cf16d185c0956e75c04f2e635c"
        ],
        [
            "Delimit Scope vspace_scope with VS.",
            "VernacDelimiters",
            "1d0d847014d222c665e0b199a8f1633b14413ebd"
        ],
        [
            "Bind Scope vspace_scope with space.",
            "VernacBindScope",
            "f71d078eba85b42f183398ce99f467020c626aae"
        ],
        [
            "Delimit Scope lfun_scope with VF.",
            "VernacDelimiters",
            "cf978c7f23561fe9a429b7ed0bed82a9d84c3862"
        ],
        [
            "Bind Scope lfun_scope with hom.",
            "VernacBindScope",
            "b0a9b0737b13fd862a907f9e931c5df836513e56"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "Module InternalTheory.",
            "VernacDefineModule",
            "b1b31f12a236afd704272d32312fc407de016987"
        ],
        [
            "Section Iso.",
            "VernacBeginSection",
            "e8b4c36067ed13727abfaded9e118627a3cbcd84"
        ],
        [
            "Variables (R : ringType) (vT rT : vectType R).",
            "VernacAssumption",
            "4dfc92ce685f8e3ec6ac11f53c1b67308be6b6f9"
        ],
        [
            "Local Coercion dim : vectType >-> nat.",
            "VernacCoercion",
            "d0677b1b41f4a11c3a7045123155bcded3f9fab0"
        ],
        [
            "Fact v2r_subproof : axiom vT vT.",
            "VernacStartTheoremProof",
            "00e3222bd24ecebbd36e0120cf610f084443e23f"
        ],
        [
            "by case: vT => T [bT []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition v2r := s2val v2r_subproof.",
            "VernacDefinition",
            "26755d25046c16d60de4edfaadd7df04f4058fd6"
        ],
        [
            "Let v2r_bij : bijective v2r := s2valP' v2r_subproof.",
            "VernacDefinition",
            "ef2ec8526d4f1107d200535b04c10a89dbe9fcd4"
        ],
        [
            "Fact r2v_subproof : {r2v | cancel r2v v2r}.",
            "VernacStartTheoremProof",
            "627f15f9efc7cda03f5ee47ffcde29e53ed986e6"
        ],
        [
            "have r2vP r: {v | v2r v = r}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: sig_eqW; have [v _ vK] := v2r_bij; exists (v r).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists (fun r => sval (r2vP r)) => r; case: (r2vP r).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition r2v := sval r2v_subproof.",
            "VernacDefinition",
            "da7441f690407e032e20f6d34a8a08fc61bafe90"
        ],
        [
            "Lemma r2vK : cancel r2v v2r.",
            "VernacStartTheoremProof",
            "bc5628a08468c15e62f72847cfa95393b56068c4"
        ],
        [
            "exact: (svalP r2v_subproof).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r2v_inj : injective r2v.",
            "VernacStartTheoremProof",
            "3d5f6aa39b182c95d6b42839bc552c837cac7319"
        ],
        [
            "exact: can_inj r2vK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma v2rK : cancel v2r r2v.",
            "VernacStartTheoremProof",
            "0de06c409de03d6fdaf8a92e3271d56cfd1b3404"
        ],
        [
            "by have/bij_can_sym:= r2vK; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma v2r_inj : injective v2r.",
            "VernacStartTheoremProof",
            "07e0e538a8b38c2440d9b9ffaf78f3fe4f7478c8"
        ],
        [
            "exact: can_inj v2rK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical v2r_linear := Linear (s2valP v2r_subproof : linear v2r).",
            "VernacDefinition",
            "a0bdd6197f56c145381fa61e9cf83cebbccb5148"
        ],
        [
            "Canonical r2v_linear := Linear (can2_linear v2rK r2vK).",
            "VernacDefinition",
            "8f116193c5c029106d2e7ba803190c4eccbdccef"
        ],
        [
            "End Iso.",
            "VernacEndSegment",
            "59952472c34f1026cc2634fab25f67f4be3908f7"
        ],
        [
            "Section Vspace.",
            "VernacBeginSection",
            "b3de531036d0ae6f91444275d0ff081b8be98aee"
        ],
        [
            "Variables (K : fieldType) (vT : vectType K).",
            "VernacAssumption",
            "ae2931e0fcfddeea462f043df3f53dc914a4cf3f"
        ],
        [
            "Local Coercion dim : vectType >-> nat.",
            "VernacCoercion",
            "d0677b1b41f4a11c3a7045123155bcded3f9fab0"
        ],
        [
            "Definition b2mx n (X : n.-tuple vT) := \\matrix_i v2r (tnth X i).",
            "VernacDefinition",
            "b20f1b8bd4f950f46b67c635a71731fc107cc4ad"
        ],
        [
            "Lemma b2mxK n (X : n.-tuple vT) i : r2v (row i (b2mx X)) = X`_i.",
            "VernacStartTheoremProof",
            "ed2c9850919a064dd04dee501cf4346183a9a3fc"
        ],
        [
            "by rewrite rowK v2rK -tnth_nth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition vs2mx {phV} (U : @space K vT phV) := let: Space mx _ := U in mx.",
            "VernacDefinition",
            "1d892ee7fecd8854d45a7efddaabd6b3a5b46a5e"
        ],
        [
            "Lemma gen_vs2mx (U : {vspace vT}) : <<vs2mx U>>%MS = vs2mx U.",
            "VernacStartTheoremProof",
            "9ebbcb5cb814c450266aa00c9db5fa89777c857a"
        ],
        [
            "by apply/eqP; rewrite /vs2mx; case: U.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mx2vs_subproof m (A : 'M[K]_(m, vT)) : <<(<<A>>)>>%MS == <<A>>%MS.",
            "VernacStartTheoremProof",
            "ab3552cb6e9abcc4b9bcfb61c344cb259af0a13c"
        ],
        [
            "by rewrite genmx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mx2vs {m} A : {vspace vT} := Space _ (@mx2vs_subproof m A).",
            "VernacDefinition",
            "d48ef0b817bc6b78dc6c589dd5ad502b6c8b30b6"
        ],
        [
            "Canonical space_subType := [subType for @vs2mx (Phant vT)].",
            "VernacDefinition",
            "5018a0c022edb742d2242a9edbe76452bde2b63c"
        ],
        [
            "Lemma vs2mxK : cancel vs2mx mx2vs.",
            "VernacStartTheoremProof",
            "d5d48fab7bccbab8ced615d327265505d0b8518e"
        ],
        [
            "by move=> v; apply: val_inj; rewrite /= gen_vs2mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx2vsK m (M : 'M_(m, vT)) : (vs2mx (mx2vs M) :=: M)%MS.",
            "VernacStartTheoremProof",
            "9880c8e790d54097e94ead5702ee4f1ccd0bc7a0"
        ],
        [
            "exact: genmxE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Vspace.",
            "VernacEndSegment",
            "d721a6bb00d4bbf8dc34dfc30c8d0c1699970592"
        ],
        [
            "Section Hom.",
            "VernacBeginSection",
            "a9f226bbfd2d74d779eb92c4ae4f70b35e08ec3f"
        ],
        [
            "Variables (R : ringType) (aT rT : vectType R).",
            "VernacAssumption",
            "fd9a510d622c555db0db95fa0443b63bb7a21d38"
        ],
        [
            "Definition f2mx (f : 'Hom(aT, rT)) := let: Hom A := f in A.",
            "VernacDefinition",
            "90f385fd2d2e8d3803e33cf628590c341cd6bce9"
        ],
        [
            "Canonical hom_subType := [newType for f2mx].",
            "VernacDefinition",
            "e1e8f1a0803fe9f915d0d06b148426a164810d1d"
        ],
        [
            "End Hom.",
            "VernacEndSegment",
            "416d5654c7f3e72b253a9e7625b8dfdbf6abb7e5"
        ],
        [
            "Arguments mx2vs {K vT m%N} A%MS.",
            "VernacArguments",
            "0a366717069733955e9420ec383161586afb5968"
        ],
        [
            "Prenex Implicits v2r r2v v2rK r2vK b2mx vs2mx vs2mxK f2mx.",
            "VernacExtend",
            "1c3fd173cf2a8f12dd87fc823751e6627b7ec794"
        ],
        [
            "End InternalTheory.",
            "VernacEndSegment",
            "62d1ea14562bf621bb7525f4c342d38c0cd44071"
        ],
        [
            "End Vector.",
            "VernacEndSegment",
            "604ff1634b93fff5783f9ce821f3bc0c46f688fb"
        ],
        [
            "Export Vector.Exports.",
            "VernacImport",
            "71a89d7126fae3e3049e8979b8e15188a4f0da89"
        ],
        [
            "Import Vector.InternalTheory.",
            "VernacImport",
            "e0b0b41bcce02614b619fff784a46cb0153926c7"
        ],
        [
            "Section VspaceDefs.",
            "VernacBeginSection",
            "70e0fa231b53605d4d1cacecb1fe389a12b19a3e"
        ],
        [
            "Variables (K : fieldType) (vT : vectType K).",
            "VernacAssumption",
            "ae2931e0fcfddeea462f043df3f53dc914a4cf3f"
        ],
        [
            "Implicit Types (u : vT) (X : seq vT) (U V : {vspace vT}).",
            "VernacReserve",
            "6fb21bf188f1786bb14ae7162b6c4fcdf28afa9a"
        ],
        [
            "Definition space_eqMixin := Eval hnf in [eqMixin of {vspace vT} by <:].",
            "VernacDefinition",
            "d87164d3f8b6ecb4d1255289e1998481c41f2508"
        ],
        [
            "Canonical space_eqType := EqType {vspace vT} space_eqMixin.",
            "VernacDefinition",
            "91862b8fb1a1d511f83245fbe8bcd3bad9ec7570"
        ],
        [
            "Definition space_choiceMixin := Eval hnf in [choiceMixin of {vspace vT} by <:].",
            "VernacDefinition",
            "20a556dda0fb02444ec2c9a73f4797c04c5d3394"
        ],
        [
            "Canonical space_choiceType := ChoiceType {vspace vT} space_choiceMixin.",
            "VernacDefinition",
            "be7d100964caa05005cd3552c0c4055498ff442e"
        ],
        [
            "Definition dimv U := \\rank (vs2mx U).",
            "VernacDefinition",
            "b86ef66f3e75fb1136200d455b07aba77bdddca3"
        ],
        [
            "Definition subsetv U V := (vs2mx U <= vs2mx V)%MS.",
            "VernacDefinition",
            "f4358bcc4e281abf23f9a4dc77b6f1a28ee5bd4c"
        ],
        [
            "Definition vline u := mx2vs (v2r u).",
            "VernacDefinition",
            "d1127340fe659208b911b8206c45fe0bdec872f2"
        ],
        [
            "Definition pred_of_vspace phV (U : Vector.space phV) : pred_class := fun v => (vs2mx (vline v) <= vs2mx U)%MS.",
            "VernacDefinition",
            "f1940d761a4e4dcd9370e748ae45374c94a1bc31"
        ],
        [
            "Canonical vspace_predType := @mkPredType _ (unkeyed {vspace vT}) (@pred_of_vspace _).",
            "VernacDefinition",
            "87ca69a794009e84d4f6ee8509608236dad998b1"
        ],
        [
            "Definition fullv : {vspace vT} := mx2vs 1%:M.",
            "VernacDefinition",
            "87b450e375cf4fa5a6656ee041e771a4582f03fa"
        ],
        [
            "Definition addv U V := mx2vs (vs2mx U + vs2mx V).",
            "VernacDefinition",
            "87d3439ce50c5ec5795c3edbe71e709e9ec2865a"
        ],
        [
            "Definition capv U V := mx2vs (vs2mx U :&: vs2mx V).",
            "VernacDefinition",
            "723cf2df91a01e32519daf0c2f0a5aec28940dee"
        ],
        [
            "Definition complv U := mx2vs (vs2mx U)^C.",
            "VernacDefinition",
            "0c49ddac4460c84a9ff34863cc184d276744276f"
        ],
        [
            "Definition diffv U V := mx2vs (vs2mx U :\\: vs2mx V).",
            "VernacDefinition",
            "063dc5eca89551156bd41fd21e8b158cef8d5e58"
        ],
        [
            "Definition vpick U := r2v (nz_row (vs2mx U)).",
            "VernacDefinition",
            "d23dd8272e835af3c0bf53ef13fea7721e37c1a5"
        ],
        [
            "Fact span_key : unit.",
            "VernacStartTheoremProof",
            "bb7a90a0ed9eef9baf413e5a3e6accf1aaf3272a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition span_expanded_def X := mx2vs (b2mx (in_tuple X)).",
            "VernacDefinition",
            "4b6b89806ce92337aea54040d3683b3a2c51fec7"
        ],
        [
            "Definition span := locked_with span_key span_expanded_def.",
            "VernacDefinition",
            "d92eb729f2ca2530d046d5c6818d3e9323bcd465"
        ],
        [
            "Canonical span_unlockable := [unlockable fun span].",
            "VernacDefinition",
            "55e15c7f7f808f3f33e8540ba2ead2b9c0d744a6"
        ],
        [
            "Definition vbasis_def U := [tuple r2v (row i (row_base (vs2mx U))) | i < dimv U].",
            "VernacDefinition",
            "af0640c9c1e674109873084da222ea1e3e4374a2"
        ],
        [
            "Definition vbasis := locked_with span_key vbasis_def.",
            "VernacDefinition",
            "a92c7d9e50058f8218ffb92c9ca8fd268dd32f7d"
        ],
        [
            "Canonical vbasis_unlockable := [unlockable fun vbasis].",
            "VernacDefinition",
            "5a9f132bbda66672e28a1962aa7e37bf7b30eb82"
        ],
        [
            "Definition free X := dimv (span X) == size X.",
            "VernacDefinition",
            "c30992022d1d5d232faa39a496186ec6b627ea48"
        ],
        [
            "Definition basis_of U X := (span X == U) && free X.",
            "VernacDefinition",
            "418738cca42d06581c3f734cf9694a1a17b9c223"
        ],
        [
            "End VspaceDefs.",
            "VernacEndSegment",
            "69ecf465c7fba7fb2020a1985f34a5ac8a00be9e"
        ],
        [
            "Coercion pred_of_vspace : Vector.space >-> pred_class.",
            "VernacCoercion",
            "7945584b7f2e45e20d3472e576da040c88b37093"
        ],
        [
            "Notation \"\\dim U\" := (dimv U) : nat_scope.",
            "VernacNotation",
            "6858aafc754dedd08d639c06f05933753750a744"
        ],
        [
            "Notation \"U <= V\" := (subsetv U V) : vspace_scope.",
            "VernacNotation",
            "308fb732e43d1b6767f82fa9e83895bad7fee139"
        ],
        [
            "Notation \"U <= V <= W\" := (subsetv U V && subsetv V W) : vspace_scope.",
            "VernacNotation",
            "b21bf6605a7f3f033f7f0dabce448e07fc2d9963"
        ],
        [
            "Notation \"<[ v ] >\" := (vline v) : vspace_scope.",
            "VernacNotation",
            "5ec4d26805a07eb5e581308d4fbb21fee91421a9"
        ],
        [
            "Notation \"<< X >>\" := (span X) : vspace_scope.",
            "VernacNotation",
            "dd5cca60e88d80d744b0a195f46271d76dda0007"
        ],
        [
            "Notation \"0\" := (vline 0) : vspace_scope.",
            "VernacNotation",
            "2950c3fac05275967c2a7635b2a26be6c2dc5448"
        ],
        [
            "Arguments fullv {K vT}.",
            "VernacArguments",
            "aeb547283307e32a4704e479c61be08b19e7673e"
        ],
        [
            "Prenex Implicits subsetv addv capv complv diffv span free basis_of.",
            "VernacExtend",
            "fa9acbcb956f3df2960003ae7edbd9ca2fdcb5a0"
        ],
        [
            "Notation \"U + V\" := (addv U V) : vspace_scope.",
            "VernacNotation",
            "d7d051547c154341391b54fd5df5214670677207"
        ],
        [
            "Notation \"U :&: V\" := (capv U V) : vspace_scope.",
            "VernacNotation",
            "4fa39e6231f52c76a911ae46fdcd1e501650665e"
        ],
        [
            "Notation \"U ^C\" := (complv U) (at level 8, format \"U ^C\") : vspace_scope.",
            "VernacNotation",
            "3b2399551fc1de71e5a817c81775dcfb4782e460"
        ],
        [
            "Notation \"U :\\: V\" := (diffv U V) : vspace_scope.",
            "VernacNotation",
            "cef0b7debcf73be33bd635f51332ade9018f7c89"
        ],
        [
            "Notation \"{ : vT }\" := (@fullv _ vT) (only parsing) : vspace_scope.",
            "VernacNotation",
            "a9b21d136a1f76592f9622332ebe9470d86e9fe7"
        ],
        [
            "Notation \"\\sum_ ( i <- r | P ) U\" := (\\big[addv/0%VS]_(i <- r | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "1990017cd4602d4e02ef3ebca781eccd14e6bc76"
        ],
        [
            "Notation \"\\sum_ ( i <- r ) U\" := (\\big[addv/0%VS]_(i <- r) U%VS) : vspace_scope.",
            "VernacNotation",
            "91cdb0d6086c1f87efbdcd632caafd20d2c5ec88"
        ],
        [
            "Notation \"\\sum_ ( m <= i < n | P ) U\" := (\\big[addv/0%VS]_(m <= i < n | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "657ef5ab2c0229e5320313080216004805cfd000"
        ],
        [
            "Notation \"\\sum_ ( m <= i < n ) U\" := (\\big[addv/0%VS]_(m <= i < n) U%VS) : vspace_scope.",
            "VernacNotation",
            "fe5c0b872bbbd1f782cc1651f3f637121b632a99"
        ],
        [
            "Notation \"\\sum_ ( i | P ) U\" := (\\big[addv/0%VS]_(i | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "28438f6f9a73c5c6c94f0b721b6575892fc2d95c"
        ],
        [
            "Notation \"\\sum_ i U\" := (\\big[addv/0%VS]_i U%VS) : vspace_scope.",
            "VernacNotation",
            "808345adadf9f5bc7fd757e42ec83d63e24f6d40"
        ],
        [
            "Notation \"\\sum_ ( i : t | P ) U\" := (\\big[addv/0%VS]_(i : t | P%B) U%VS) (only parsing) : vspace_scope.",
            "VernacNotation",
            "035613d7c6f63c6b1d991f3931eb406f8b044c9b"
        ],
        [
            "Notation \"\\sum_ ( i : t ) U\" := (\\big[addv/0%VS]_(i : t) U%VS) (only parsing) : vspace_scope.",
            "VernacNotation",
            "740b9290b6d5464b05e24e75ce138347aac5ef0e"
        ],
        [
            "Notation \"\\sum_ ( i < n | P ) U\" := (\\big[addv/0%VS]_(i < n | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "b007fa5566742dde6d90cb54822dbe9139f65eb3"
        ],
        [
            "Notation \"\\sum_ ( i < n ) U\" := (\\big[addv/0%VS]_(i < n) U%VS) : vspace_scope.",
            "VernacNotation",
            "88865fec911ad2a76a5de59c124f0f94579067cd"
        ],
        [
            "Notation \"\\sum_ ( i 'in' A | P ) U\" := (\\big[addv/0%VS]_(i in A | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "57d077ba864042737a6c1b11c38e6eb8f32833cd"
        ],
        [
            "Notation \"\\sum_ ( i 'in' A ) U\" := (\\big[addv/0%VS]_(i in A) U%VS) : vspace_scope.",
            "VernacNotation",
            "502def118613714bea33daf631d2db2a0c161e0f"
        ],
        [
            "Notation \"\\bigcap_ ( i <- r | P ) U\" := (\\big[capv/fullv]_(i <- r | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "8422b5ecf999c45a8f9064b8d1a58c7e7a69d195"
        ],
        [
            "Notation \"\\bigcap_ ( i <- r ) U\" := (\\big[capv/fullv]_(i <- r) U%VS) : vspace_scope.",
            "VernacNotation",
            "65319a4e59a5756170034b5bfaea33ac5e34cb30"
        ],
        [
            "Notation \"\\bigcap_ ( m <= i < n | P ) U\" := (\\big[capv/fullv]_(m <= i < n | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "a0fd0a86d5721b6dfec77ef5ea99c9bd00ecfd1e"
        ],
        [
            "Notation \"\\bigcap_ ( m <= i < n ) U\" := (\\big[capv/fullv]_(m <= i < n) U%VS) : vspace_scope.",
            "VernacNotation",
            "e708c057725c41cc07a6a38d50bfb0c73c74816c"
        ],
        [
            "Notation \"\\bigcap_ ( i | P ) U\" := (\\big[capv/fullv]_(i | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "f73619cb088fae609ca3ba82a2755f953b330e7d"
        ],
        [
            "Notation \"\\bigcap_ i U\" := (\\big[capv/fullv]_i U%VS) : vspace_scope.",
            "VernacNotation",
            "19eedec7e99714bd6e08f2245c5948c6c5b410ea"
        ],
        [
            "Notation \"\\bigcap_ ( i : t | P ) U\" := (\\big[capv/fullv]_(i : t | P%B) U%VS) (only parsing) : vspace_scope.",
            "VernacNotation",
            "191a980ec2a6b3e0ad552fa5ad2f4c09e614c6fb"
        ],
        [
            "Notation \"\\bigcap_ ( i : t ) U\" := (\\big[capv/fullv]_(i : t) U%VS) (only parsing) : vspace_scope.",
            "VernacNotation",
            "3f587d219e4accfa6b179a92a0a54c95417cd714"
        ],
        [
            "Notation \"\\bigcap_ ( i < n | P ) U\" := (\\big[capv/fullv]_(i < n | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "e7fcd2f02e611612e0d610394d9c877b26b7ce99"
        ],
        [
            "Notation \"\\bigcap_ ( i < n ) U\" := (\\big[capv/fullv]_(i < n) U%VS) : vspace_scope.",
            "VernacNotation",
            "277f7f4df8be6cd9de2c0fb5c9e2a445ec754526"
        ],
        [
            "Notation \"\\bigcap_ ( i 'in' A | P ) U\" := (\\big[capv/fullv]_(i in A | P%B) U%VS) : vspace_scope.",
            "VernacNotation",
            "bcc0c43b22bcbfb64204e49dee11e888887042a3"
        ],
        [
            "Notation \"\\bigcap_ ( i 'in' A ) U\" := (\\big[capv/fullv]_(i in A) U%VS) : vspace_scope.",
            "VernacNotation",
            "c08053aa14641547b0511acaa7c3cb52254bbb3b"
        ],
        [
            "Section VectorTheory.",
            "VernacBeginSection",
            "d4b0e16d81c559f80a28cb131e467ab84ab2adb3"
        ],
        [
            "Variables (K : fieldType) (vT : vectType K).",
            "VernacAssumption",
            "ae2931e0fcfddeea462f043df3f53dc914a4cf3f"
        ],
        [
            "Implicit Types (a : K) (u v w : vT) (X Y : seq vT) (U V W : {vspace vT}).",
            "VernacReserve",
            "326b33d398a0ed60a0d0065cfd59d143cecbac03"
        ],
        [
            "Local Notation subV := (@subsetv K vT) (only parsing).",
            "VernacSyntacticDefinition",
            "ce7ec90380d050ef6067e4b0ab83758816bb8bc9"
        ],
        [
            "Local Notation addV := (@addv K vT) (only parsing).",
            "VernacSyntacticDefinition",
            "0ddbfcbcac8877bd0080a1e6b44fcadd339ab057"
        ],
        [
            "Local Notation capV := (@capv K vT) (only parsing).",
            "VernacSyntacticDefinition",
            "3de5ac15e2e5d09dc1fda96a178ffd270f17c66a"
        ],
        [
            "Let vs2mxP U V : reflect (U = V) (vs2mx U == vs2mx V)%MS.",
            "VernacDefinition",
            "72b6ebf6218f37e33c3d4a1ac1749333744dbeb4"
        ],
        [
            "by rewrite (sameP genmxP eqP) !gen_vs2mx; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let memvK v U : (v \\in U) = (v2r v <= vs2mx U)%MS.",
            "VernacDefinition",
            "b78cfcd52abf19d34cff69b8cc7271cfe522bea1"
        ],
        [
            "by rewrite -genmxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let mem_r2v rv U : (r2v rv \\in U) = (rv <= vs2mx U)%MS.",
            "VernacDefinition",
            "cc2aa9ccd8292da36ebb3f6e9228b745ea0910e8"
        ],
        [
            "by rewrite memvK r2vK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let vs2mx0 : @vs2mx K vT _ 0 = 0.",
            "VernacDefinition",
            "c9021934c98528da620b994175b10c7a192db7ba"
        ],
        [
            "by rewrite /= linear0 genmx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let vs2mxD U V : vs2mx (U + V) = (vs2mx U + vs2mx V)%MS.",
            "VernacDefinition",
            "d0eae23a5088c7c633bfc3682dd17558a786f7f8"
        ],
        [
            "by rewrite /= genmx_adds !gen_vs2mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let vs2mx_sum := big_morph _ vs2mxD vs2mx0.",
            "VernacDefinition",
            "745a79093c807e61f470e89f2e365442564b66f6"
        ],
        [
            "Let vs2mxI U V : vs2mx (U :&: V) = (vs2mx U :&: vs2mx V)%MS.",
            "VernacDefinition",
            "0247705b824c15077cb9d1bbc87e4a7f34e38788"
        ],
        [
            "by rewrite /= genmx_cap !gen_vs2mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let vs2mxF : vs2mx {:vT} = 1%:M.",
            "VernacDefinition",
            "20570b9f01d9e1338d440d5550651ffad23efc44"
        ],
        [
            "by rewrite /= genmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let row_b2mx n (X : n.-tuple vT) i : row i (b2mx X) = v2r X`_i.",
            "VernacDefinition",
            "86e0f584f3b3edaba6e5acd37bddcfe67ba8a484"
        ],
        [
            "by rewrite -tnth_nth rowK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let span_b2mx n (X : n.-tuple vT) : span X = mx2vs (b2mx X).",
            "VernacDefinition",
            "5ed1e90a91a836cb1ac839ba6b5e8d5b84c43cb1"
        ],
        [
            "by rewrite unlock tvalK; case: _ / (esym _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let mul_b2mx n (X : n.-tuple vT) (rk : 'rV_n) : \\sum_i rk 0 i *: X`_i = r2v (rk *m b2mx X).",
            "VernacDefinition",
            "4c628e2842a9a776f6e353fb929e30edf41aaca9"
        ],
        [
            "rewrite mulmx_sum_row linear_sum; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite row_b2mx linearZ /= v2rK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let lin_b2mx n (X : n.-tuple vT) k : \\sum_(i < n) k i *: X`_i = r2v (\\row_i k i *m b2mx X).",
            "VernacDefinition",
            "f4ff7264233ee07d1e776769e696951bc6bca9a5"
        ],
        [
            "by rewrite -mul_b2mx; apply: eq_bigr => i _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let free_b2mx n (X : n.-tuple vT) : free X = row_free (b2mx X).",
            "VernacDefinition",
            "2407704a3a29eea8e8694a37a6e3f57bd0e79fe7"
        ],
        [
            "by rewrite /free /dimv span_b2mx genmxE size_tuple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact vspace_key U : pred_key U.",
            "VernacStartTheoremProof",
            "6eeae529504c54b7aae149595abbc37180681a21"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical vspace_keyed U := KeyedPred (vspace_key U).",
            "VernacDefinition",
            "f41d98e8555a0160bd66457f9a00772f29485b1c"
        ],
        [
            "Lemma memvE v U : (v \\in U) = (<[v]> <= U)%VS.",
            "VernacStartTheoremProof",
            "124e8d4e587b1a6687ff5f14f4f3df9f58fa1159"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vlineP v1 v2 : reflect (exists k, v1 = k *: v2) (v1 \\in <[v2]>)%VS.",
            "VernacStartTheoremProof",
            "92e9198a096bd328dfdc7ccda6028dc4d618ced6"
        ],
        [
            "apply: (iffP idP) => [|[k ->]]; rewrite memvK genmxE ?linearZ ?scalemx_sub //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case/sub_rVP=> k; rewrite -linearZ => /v2r_inj->; exists k.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact memv_submod_closed U : submod_closed U.",
            "VernacStartTheoremProof",
            "29c5bfec7c523eb3e502e33eec75902d6042afdd"
        ],
        [
            "split=> [|a u v]; rewrite !memvK ?linear0 ?sub0mx // => Uu Uv.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "by rewrite linearP addmx_sub ?scalemx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical memv_opprPred U := OpprPred (memv_submod_closed U).",
            "VernacDefinition",
            "5e17dcbe518f11e95a9b68e293ac902fd0210311"
        ],
        [
            "Canonical memv_addrPred U := AddrPred (memv_submod_closed U).",
            "VernacDefinition",
            "7adbedcda614c779196d1e982b73abfa7d671698"
        ],
        [
            "Canonical memv_zmodPred U := ZmodPred (memv_submod_closed U).",
            "VernacDefinition",
            "b03a44095b9d463369ec72bc7f2c0228a21f283f"
        ],
        [
            "Canonical memv_submodPred U := SubmodPred (memv_submod_closed U).",
            "VernacDefinition",
            "c388f24f34781d7c28254809f9c924fc1f6271e8"
        ],
        [
            "Lemma mem0v U : 0 \\in U.",
            "VernacStartTheoremProof",
            "bf032384b5819da7fa1c643fdfd04bde06f10971"
        ],
        [
            "exact : rpred0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memvN U v : (- v \\in U) = (v \\in U).",
            "VernacStartTheoremProof",
            "77f8a46af6618395ac4fc0f7bb98e84defc1ae32"
        ],
        [
            "exact: rpredN.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memvD U : {in U &, forall u v, u + v \\in U}.",
            "VernacStartTheoremProof",
            "e912ba7d434f92ccd111e7997e2a70ffb8d8482f"
        ],
        [
            "exact : rpredD.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memvB U : {in U &, forall u v, u - v \\in U}.",
            "VernacStartTheoremProof",
            "f5b8b04ac124e83a08b32847befccc40fde59fc8"
        ],
        [
            "exact : rpredB.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memvZ U k : {in U, forall v, k *: v \\in U}.",
            "VernacStartTheoremProof",
            "132d7022dcefb0904c39fd825cf21cbdd54ecf00"
        ],
        [
            "exact : rpredZ.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_suml I r (P : pred I) vs U : (forall i, P i -> vs i \\in U) -> \\sum_(i <- r | P i) vs i \\in U.",
            "VernacStartTheoremProof",
            "82bb5f254aafc3a631ddaa4d4608e1ed76a06a5d"
        ],
        [
            "exact: rpred_sum.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_line u : u \\in <[u]>%VS.",
            "VernacStartTheoremProof",
            "ed1f7a751cd520da03881e15527eaa8d35ebd79f"
        ],
        [
            "by apply/vlineP; exists 1; rewrite scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subvP U V : reflect {subset U <= V} (U <= V)%VS.",
            "VernacStartTheoremProof",
            "11c5e85fc6810b5b0af68955ceb1c14cb11a5c5a"
        ],
        [
            "apply: (iffP rV_subP) => sU12 u.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !memvE /subsetv !genmxE => /sU12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by have:= sU12 (r2v u); rewrite !memvE /subsetv !genmxE r2vK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subvv U : (U <= U)%VS.",
            "VernacStartTheoremProof",
            "08b9b87143189c1dd0a9281ab6dd0f2e02dd0ab8"
        ],
        [
            "exact/subvP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve subvv : core.",
            "VernacHints",
            "c88b29ef90421ee7808d37b425495d6ec2fda35e"
        ],
        [
            "Lemma subv_trans : transitive subV.",
            "VernacStartTheoremProof",
            "5617d93a7f94e1cbbc59f5a097c7df68de8eb787"
        ],
        [
            "by move=> U V W /subvP sUV /subvP sVW; apply/subvP=> u /sUV/sVW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subv_anti : antisymmetric subV.",
            "VernacStartTheoremProof",
            "2e57740d99e318a1efd96beea6592b3c66b25b40"
        ],
        [
            "by move=> U V; apply/vs2mxP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqEsubv U V : (U == V) = (U <= V <= U)%VS.",
            "VernacStartTheoremProof",
            "3d03e0fdad2268ec7e44848de4c4928bbae07537"
        ],
        [
            "by apply/eqP/idP=> [-> | /subv_anti//]; rewrite subvv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vspaceP U V : U =i V <-> U = V.",
            "VernacStartTheoremProof",
            "a5fc85b98c6a7b63bccd123ecac59ec8fb013f9d"
        ],
        [
            "split=> [eqUV | -> //]; apply/subv_anti/andP.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by split; apply/subvP=> v; rewrite eqUV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subvPn {U V} : reflect (exists2 u, u \\in U & u \\notin V) (~~ (U <= V)%VS).",
            "VernacStartTheoremProof",
            "f654eed9a7536b344ea3274b71d8484d8ed59dbb"
        ],
        [
            "apply: (iffP idP) => [|[u Uu]]; last by apply: contra => /subvP->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/row_subPn=> i; set vi := row i _ => V'vi.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by exists (r2v vi); rewrite memvK r2vK ?row_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub0v U : (0 <= U)%VS.",
            "VernacStartTheoremProof",
            "13f9eca2ceace5b8123ad153ced8eea5146372ca"
        ],
        [
            "exact: mem0v.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subv0 U : (U <= 0)%VS = (U == 0%VS).",
            "VernacStartTheoremProof",
            "0cea021793ccdc3744a15d7f23e3ba4ee83d9df8"
        ],
        [
            "by rewrite eqEsubv sub0v andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv0 v : v \\in 0%VS = (v == 0).",
            "VernacStartTheoremProof",
            "bda37f0883893850b0622271a85b488da7f3446c"
        ],
        [
            "by apply/idP/eqP=> [/vlineP[k ->] | ->]; rewrite (scaler0, mem0v).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subvf U : (U <= fullv)%VS.",
            "VernacStartTheoremProof",
            "50e2399f3fa9a1d127c2c8bd002a78e7eceee78b"
        ],
        [
            "by rewrite /subsetv vs2mxF submx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memvf v : v \\in fullv.",
            "VernacStartTheoremProof",
            "86193f07c1df6893eb023bab6bacf73a82b92cab"
        ],
        [
            "exact: subvf.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_pick U : vpick U \\in U.",
            "VernacStartTheoremProof",
            "feb98c2ee77c66c1d0a72b6379eb4064be8f84b2"
        ],
        [
            "by rewrite mem_r2v nz_row_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vpick0 U : (vpick U == 0) = (U == 0%VS).",
            "VernacStartTheoremProof",
            "b3f8d66d7c25aed66bbaba9a913264c9d3635c4c"
        ],
        [
            "by rewrite -memv0 mem_r2v -subv0 /subV vs2mx0 !submx0 nz_row_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subv_add U V W : (U + V <= W)%VS = (U <= W)%VS && (V <= W)%VS.",
            "VernacStartTheoremProof",
            "4b17e22a28884706a817f017275fc8f15d92327f"
        ],
        [
            "by rewrite /subV vs2mxD addsmx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addvS U1 U2 V1 V2 : (U1 <= U2 -> V1 <= V2 -> U1 + V1 <= U2 + V2)%VS.",
            "VernacStartTheoremProof",
            "9e4b1230db6875c9c409f3bef5b2a6c5d54da20e"
        ],
        [
            "by rewrite /subV !vs2mxD; apply: addsmxS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addvSl U V : (U <= U + V)%VS.",
            "VernacStartTheoremProof",
            "241578621001836fc80b6230a7debfa703190b4d"
        ],
        [
            "by rewrite /subV vs2mxD addsmxSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addvSr U V : (V <= U + V)%VS.",
            "VernacStartTheoremProof",
            "75decdea544882a5e21aa842b27f6c4c6d3ad29c"
        ],
        [
            "by rewrite /subV vs2mxD addsmxSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addvC : commutative addV.",
            "VernacStartTheoremProof",
            "b1653aa42fbe8e31bf2b2f6af1231ebfb65d24fb"
        ],
        [
            "by move=> U V; apply/vs2mxP; rewrite !vs2mxD addsmxC submx_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addvA : associative addV.",
            "VernacStartTheoremProof",
            "ef4ec813d3016968465d47b7962bba0cd10badb5"
        ],
        [
            "by move=> U V W; apply/vs2mxP; rewrite !vs2mxD addsmxA submx_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addv_idPl {U V}: reflect (U + V = U)%VS (V <= U)%VS.",
            "VernacStartTheoremProof",
            "443832ce80a76bb6a4d59a949453c70161237985"
        ],
        [
            "by rewrite /subV (sameP addsmx_idPl eqmxP) -vs2mxD; apply: vs2mxP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addv_idPr {U V} : reflect (U + V = V)%VS (U <= V)%VS.",
            "VernacStartTheoremProof",
            "f1b8e91bfc94115d2ed5daa2f270f5d90031d1ad"
        ],
        [
            "by rewrite addvC; apply: addv_idPl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addvv : idempotent addV.",
            "VernacStartTheoremProof",
            "78029af63ad7f04f8587998698752bef5775ebb8"
        ],
        [
            "by move=> U; apply/addv_idPl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add0v : left_id 0%VS addV.",
            "VernacStartTheoremProof",
            "06d1c5d502ef9fa35bc7e09adfea5a822598bb24"
        ],
        [
            "by move=> U; apply/addv_idPr/sub0v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addv0 : right_id 0%VS addV.",
            "VernacStartTheoremProof",
            "361f89bf3003f76a66675ea3be4d7e6ce1050b3c"
        ],
        [
            "by move=> U; apply/addv_idPl/sub0v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumfv : left_zero fullv addV.",
            "VernacStartTheoremProof",
            "ab161281166c64163be82af35bdb16463b53fa4d"
        ],
        [
            "by move=> U; apply/addv_idPl/subvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addvf : right_zero fullv addV.",
            "VernacStartTheoremProof",
            "f1bd8e5a9609f71e90c62066a889dd22570aae37"
        ],
        [
            "by move=> U; apply/addv_idPr/subvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical addv_monoid := Monoid.Law addvA add0v addv0.",
            "VernacDefinition",
            "8684210e45d631316cc955c9d1161bf50c15e90c"
        ],
        [
            "Canonical addv_comoid := Monoid.ComLaw addvC.",
            "VernacDefinition",
            "96387ed23b2652d0e9557387eb199264926f82fe"
        ],
        [
            "Lemma memv_add u v U V : u \\in U -> v \\in V -> u + v \\in (U + V)%VS.",
            "VernacStartTheoremProof",
            "d315499cd41cd2ec2a409e259cb645af9c86346d"
        ],
        [
            "by rewrite !memvK genmxE linearD; apply: addmx_sub_adds.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_addP {w U V} : reflect (exists2 u, u \\in U & exists2 v, v \\in V & w = u + v) (w \\in U + V)%VS.",
            "VernacStartTheoremProof",
            "bd38a251159ef02a579f8144b9e3a044f8e287cf"
        ],
        [
            "apply: (iffP idP) => [|[u Uu [v Vv ->]]]; last exact: memv_add.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite memvK genmxE => /sub_addsmxP[r /(canRL v2rK)->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite linearD /=; set u := r2v _; set v := r2v _.",
            "VernacExtend",
            "f45836f1382b287f5cb0d23d87b8ff8985cc615b"
        ],
        [
            "by exists u; last exists v; rewrite // mem_r2v submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section BigSum.",
            "VernacBeginSection",
            "3e09ceeeeed251b129a21f111934b061d16a4f45"
        ],
        [
            "Variable I : finType.",
            "VernacAssumption",
            "856be18b55de00e7335ba4b72e8c9c11fdcf1b9c"
        ],
        [
            "Implicit Type P : pred I.",
            "VernacReserve",
            "f0631cda8f869743c295189070e37edf36c8a7e6"
        ],
        [
            "Lemma sumv_sup i0 P U Vs : P i0 -> (U <= Vs i0)%VS -> (U <= \\sum_(i | P i) Vs i)%VS.",
            "VernacStartTheoremProof",
            "c07534732d92904d9eb0442cef77e782fac63218"
        ],
        [
            "by move=> Pi0 /subv_trans-> //; rewrite (bigD1 i0) ?addvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments sumv_sup i0 [P U Vs].",
            "VernacArguments",
            "80c053e279902dfa6244dec051e5baca2fd21f71"
        ],
        [
            "Lemma subv_sumP {P Us V} : reflect (forall i, P i -> Us i <= V)%VS (\\sum_(i | P i) Us i <= V)%VS.",
            "VernacStartTheoremProof",
            "ae09547c7353cf319cf946fed8c165144539be4a"
        ],
        [
            "apply: (iffP idP) => [sUV i Pi | sUV].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: subv_trans sUV; apply: sumv_sup Pi _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by elim/big_rec: _ => [|i W Pi sWV]; rewrite ?sub0v // subv_add sUV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_sumr P vs (Us : I -> {vspace vT}) : (forall i, P i -> vs i \\in Us i) -> \\sum_(i | P i) vs i \\in (\\sum_(i | P i) Us i)%VS.",
            "VernacStartTheoremProof",
            "31528bf7360cda2d20ebba8ce848fe555b2edbd5"
        ],
        [
            "by move=> Uv; apply/rpred_sum=> i Pi; apply/(sumv_sup i Pi)/Uv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_sumP {P} {Us : I -> {vspace vT}} {v} : reflect (exists2 vs, forall i, P i -> vs i \\in Us i & v = \\sum_(i | P i) vs i) (v \\in \\sum_(i | P i) Us i)%VS.",
            "VernacStartTheoremProof",
            "ccf62c279f8818886c5e6451517dab22c7dedb0e"
        ],
        [
            "apply: (iffP idP) => [|[vs Uv ->]]; last exact: memv_sumr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite memvK vs2mx_sum => /sub_sumsmxP[r /(canRL v2rK)->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "pose f i := r2v (r i *m vs2mx (Us i)); rewrite linear_sum /=.",
            "VernacExtend",
            "de7a4b42b1ef81b17722dd81c9c5b9378b46a6e7"
        ],
        [
            "by exists f => //= i _; rewrite mem_r2v submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BigSum.",
            "VernacEndSegment",
            "c53b554468fe8dbeaeb1898f209f53cee7229e10"
        ],
        [
            "Lemma subv_cap U V W : (U <= V :&: W)%VS = (U <= V)%VS && (U <= W)%VS.",
            "VernacStartTheoremProof",
            "75a460ad6690a6fa388f75e44385a8692b78b386"
        ],
        [
            "by rewrite /subV vs2mxI sub_capmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capvS U1 U2 V1 V2 : (U1 <= U2 -> V1 <= V2 -> U1 :&: V1 <= U2 :&: V2)%VS.",
            "VernacStartTheoremProof",
            "ca7430cacc86e420ac9915bec7c1b03b02e1a8ea"
        ],
        [
            "by rewrite /subV !vs2mxI; apply: capmxS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capvSl U V : (U :&: V <= U)%VS.",
            "VernacStartTheoremProof",
            "5d6a90f1f1748831e48ad67d01d72233f9419331"
        ],
        [
            "by rewrite /subV vs2mxI capmxSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capvSr U V : (U :&: V <= V)%VS.",
            "VernacStartTheoremProof",
            "80798933da54d7fa8c4564e1ef61c648b43c0323"
        ],
        [
            "by rewrite /subV vs2mxI capmxSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capvC : commutative capV.",
            "VernacStartTheoremProof",
            "1fca9283b0b98befa32853edf49d349f322bf82e"
        ],
        [
            "by move=> U V; apply/vs2mxP; rewrite !vs2mxI capmxC submx_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capvA : associative capV.",
            "VernacStartTheoremProof",
            "829e987c55af98dcb8973d5b555821ba91bad0c4"
        ],
        [
            "by move=> U V W; apply/vs2mxP; rewrite !vs2mxI capmxA submx_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capv_idPl {U V} : reflect (U :&: V = U)%VS (U <= V)%VS.",
            "VernacStartTheoremProof",
            "ab725135b9c9d1541d1383b3df3624850ac8a0bf"
        ],
        [
            "by rewrite /subV(sameP capmx_idPl eqmxP) -vs2mxI; apply: vs2mxP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capv_idPr {U V} : reflect (U :&: V = V)%VS (V <= U)%VS.",
            "VernacStartTheoremProof",
            "b12182a3f81c28daff1cbe61e15d1e283f047c26"
        ],
        [
            "by rewrite capvC; apply: capv_idPl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capvv : idempotent capV.",
            "VernacStartTheoremProof",
            "392a31fde3c84a09a8e42ea9bbba508d5148d003"
        ],
        [
            "by move=> U; apply/capv_idPl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cap0v : left_zero 0%VS capV.",
            "VernacStartTheoremProof",
            "2e05249663f1ff7acbe63aa11f28a37fda0a536e"
        ],
        [
            "by move=> U; apply/capv_idPl/sub0v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capv0 : right_zero 0%VS capV.",
            "VernacStartTheoremProof",
            "6c9ef2a8b2138a1b8b184e15f336b66105ab3564"
        ],
        [
            "by move=> U; apply/capv_idPr/sub0v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capfv : left_id fullv capV.",
            "VernacStartTheoremProof",
            "4684699a6549c3fb90f3ce94bae72585eb7c83a8"
        ],
        [
            "by move=> U; apply/capv_idPr/subvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capvf : right_id fullv capV.",
            "VernacStartTheoremProof",
            "703529a3a6082c7d029f9b9cdbaa23906038c6cf"
        ],
        [
            "by move=> U; apply/capv_idPl/subvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical capv_monoid := Monoid.Law capvA capfv capvf.",
            "VernacDefinition",
            "d8fa2028c8a49fa3e348a1622ceeef96377c197c"
        ],
        [
            "Canonical capv_comoid := Monoid.ComLaw capvC.",
            "VernacDefinition",
            "2fbb0f0f11b767744d19b5c2ac54eebd33862f2c"
        ],
        [
            "Lemma memv_cap w U V : (w \\in U :&: V)%VS = (w \\in U) && (w \\in V).",
            "VernacStartTheoremProof",
            "bf28d6cef67399c7539027b41b00dc4975741674"
        ],
        [
            "by rewrite !memvE subv_cap.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_capP {w U V} : reflect (w \\in U /\\ w \\in V) (w \\in U :&: V)%VS.",
            "VernacStartTheoremProof",
            "f61262ec9bf278507702bce1b401caa8b2d2d29b"
        ],
        [
            "by rewrite memv_cap; apply: andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vspace_modl U V W : (U <= W -> U + (V :&: W) = (U + V) :&: W)%VS.",
            "VernacStartTheoremProof",
            "55bc7977eb6305bed647bbb7581ca91b0f9edac4"
        ],
        [
            "by move=> sUV; apply/vs2mxP; rewrite !(vs2mxD, vs2mxI); apply/eqmxP/matrix_modl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vspace_modr U V W : (W <= U -> (U :&: V) + W = U :&: (V + W))%VS.",
            "VernacStartTheoremProof",
            "13c595f1f1662753aa649c758146da0422f2abfa"
        ],
        [
            "by rewrite -!(addvC W) !(capvC U); apply: vspace_modl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section BigCap.",
            "VernacBeginSection",
            "2fda03a3122157b9ae906a639aec8005451f9e1c"
        ],
        [
            "Variable I : finType.",
            "VernacAssumption",
            "856be18b55de00e7335ba4b72e8c9c11fdcf1b9c"
        ],
        [
            "Implicit Type P : pred I.",
            "VernacReserve",
            "f0631cda8f869743c295189070e37edf36c8a7e6"
        ],
        [
            "Lemma bigcapv_inf i0 P Us V : P i0 -> (Us i0 <= V -> \\bigcap_(i | P i) Us i <= V)%VS.",
            "VernacStartTheoremProof",
            "4f2955af8916aae223525493e9ee1dbfd603fdac"
        ],
        [
            "by move=> Pi0; apply: subv_trans; rewrite (bigD1 i0) ?capvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subv_bigcapP {P U Vs} : reflect (forall i, P i -> U <= Vs i)%VS (U <= \\bigcap_(i | P i) Vs i)%VS.",
            "VernacStartTheoremProof",
            "65cae68411ea5d2f2d190b78966f10ae9ffb1d8f"
        ],
        [
            "apply: (iffP idP) => [sUV i Pi | sUV].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite (subv_trans sUV) ?(bigcapv_inf Pi).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by elim/big_rec: _ => [|i W Pi]; rewrite ?subvf // subv_cap sUV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BigCap.",
            "VernacEndSegment",
            "b4d8cf0bf43cf8141c36ad2451487d3b19661291"
        ],
        [
            "Lemma addv_complf U : (U + U^C)%VS = fullv.",
            "VernacStartTheoremProof",
            "626f8e3f0b4725374005e0b71c5489e9886a8ac4"
        ],
        [
            "apply/vs2mxP; rewrite vs2mxD -gen_vs2mx -genmx_adds !genmxE submx1 sub1mx.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "exact: addsmx_compl_full.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capv_compl U : (U :&: U^C = 0)%VS.",
            "VernacStartTheoremProof",
            "87cb2d292a78d97776f85b6a65e106dac17105da"
        ],
        [
            "apply/val_inj; rewrite [val]/= vs2mx0 vs2mxI -gen_vs2mx -genmx_cap.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite capmx_compl genmx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diffvSl U V : (U :\\: V <= U)%VS.",
            "VernacStartTheoremProof",
            "fadfdc9737d7e74ba4d3acff8e13a5a974673114"
        ],
        [
            "by rewrite /subV genmxE diffmxSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capv_diff U V : ((U :\\: V) :&: V = 0)%VS.",
            "VernacStartTheoremProof",
            "94ca7d28019486eb5a4aed6b4e1c55248f3e2af9"
        ],
        [
            "apply/val_inj; rewrite [val]/= vs2mx0 vs2mxI -(gen_vs2mx V) -genmx_cap.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite capmx_diff genmx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addv_diff_cap U V : (U :\\: V + U :&: V)%VS = U.",
            "VernacStartTheoremProof",
            "cb8b5c0c64b99eeffea93d77f2de29a74f654b91"
        ],
        [
            "apply/vs2mxP; rewrite vs2mxD -genmx_adds !genmxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "exact/eqmxP/addsmx_diff_cap_eq.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addv_diff U V : (U :\\: V + V = U + V)%VS.",
            "VernacStartTheoremProof",
            "2536fb68ee2f7162db96712153faa3bfaf827396"
        ],
        [
            "by rewrite -{2}(addv_diff_cap U V) -addvA (addv_idPr (capvSr U V)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv0 : \\dim (0%VS : {vspace vT}) = 0%N.",
            "VernacStartTheoremProof",
            "a48a1a23f6c06afed788e28bba3c314343fd9b54"
        ],
        [
            "by rewrite /dimv vs2mx0 mxrank0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_eq0 U : (\\dim U == 0%N) = (U == 0%VS).",
            "VernacStartTheoremProof",
            "af9ce64585c2e9322fde4afc0a52fe510e938ab0"
        ],
        [
            "by rewrite /dimv /= mxrank_eq0 {2}/eq_op /= linear0 genmx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimvf : \\dim {:vT} = Vector.dim vT.",
            "VernacStartTheoremProof",
            "f8299f112e898962a8e4d6ebefea114961e54120"
        ],
        [
            "by rewrite /dimv vs2mxF mxrank1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dim_vline v : \\dim <[v]> = (v != 0).",
            "VernacStartTheoremProof",
            "95fda6ef748f98de1afb8991fb3228094acec5ad"
        ],
        [
            "by rewrite /dimv mxrank_gen rank_rV (can2_eq v2rK r2vK) linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimvS U V : (U <= V)%VS -> \\dim U <= \\dim V.",
            "VernacStartTheoremProof",
            "ba458b2e03ae9bb10b3af6a517ec2a3917c9e174"
        ],
        [
            "exact: mxrankS.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_leqif_sup U V : (U <= V)%VS -> \\dim U <= \\dim V ?= iff (V <= U)%VS.",
            "VernacStartTheoremProof",
            "cfebbc7d463ba694c9d923793285467ff48c02ec"
        ],
        [
            "exact: mxrank_leqif_sup.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_leqif_eq U V : (U <= V)%VS -> \\dim U <= \\dim V ?= iff (U == V).",
            "VernacStartTheoremProof",
            "fdde03e8e16f58a8950842ed1c6300af5c9a3891"
        ],
        [
            "by rewrite eqEsubv; apply: mxrank_leqif_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqEdim U V : (U == V) = (U <= V)%VS && (\\dim V <= \\dim U).",
            "VernacStartTheoremProof",
            "143732343ce3422b40603ceefea5b14b99a477b7"
        ],
        [
            "by apply/idP/andP=> [/eqP | [/dimv_leqif_eq/geq_leqif]] ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_compl U : \\dim U^C = (\\dim {:vT} - \\dim U)%N.",
            "VernacStartTheoremProof",
            "b081cbb0ad3910cb7ad0578a0b26ff0e528e5c92"
        ],
        [
            "by rewrite dimvf /dimv mxrank_gen mxrank_compl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_cap_compl U V : (\\dim (U :&: V) + \\dim (U :\\: V))%N = \\dim U.",
            "VernacStartTheoremProof",
            "a7721283fc7fe0ac48d45e7e2212f15f1950a319"
        ],
        [
            "by rewrite /dimv !mxrank_gen mxrank_cap_compl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_sum_cap U V : (\\dim (U + V) + \\dim (U :&: V) = \\dim U + \\dim V)%N.",
            "VernacStartTheoremProof",
            "1b17c64f07887d7f42dd750a5c363f64ccf3c3b7"
        ],
        [
            "by rewrite /dimv !mxrank_gen mxrank_sum_cap.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_disjoint_sum U V : (U :&: V = 0)%VS -> \\dim (U + V) = (\\dim U + \\dim V)%N.",
            "VernacStartTheoremProof",
            "21a447ef9ea3ea2957cddaf4061e7978f845a10a"
        ],
        [
            "by move=> dxUV; rewrite -dimv_sum_cap dxUV dimv0 addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_add_leqif U V : \\dim (U + V) <= \\dim U + \\dim V ?= iff (U :&: V <= 0)%VS.",
            "VernacStartTheoremProof",
            "7a83822a7e1da11b2fa42c2aa9580394c6cbd742"
        ],
        [
            "by rewrite /dimv /subV !mxrank_gen vs2mx0 genmxE; apply: mxrank_adds_leqif.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diffv_eq0 U V : (U :\\: V == 0)%VS = (U <= V)%VS.",
            "VernacStartTheoremProof",
            "a52f37cf0c9b69ca5d59bda7fadb6b463f379c97"
        ],
        [
            "rewrite -dimv_eq0 -(eqn_add2l (\\dim (U :&: V))) addn0 dimv_cap_compl eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (dimv_leqif_eq (capvSl _ _)) (sameP capv_idPl eqP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_leq_sum I r (P : pred I) (Us : I -> {vspace vT}) : \\dim (\\sum_(i <- r | P i) Us i) <= \\sum_(i <- r | P i) \\dim (Us i).",
            "VernacStartTheoremProof",
            "56941c919e1a0dee1966783e67524498fc0918f0"
        ],
        [
            "elim/big_rec2: _ => [|i d vs _ le_vs_d]; first by rewrite dim_vline eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: (leq_trans (dimv_add_leqif _ _)); rewrite leq_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section SumExpr.",
            "VernacBeginSection",
            "747769b7917665a44bf45181589e4c14ede3be83"
        ],
        [
            "Structure addv_expr := Sumv { addv_val :> wrapped {vspace vT}; addv_dim : wrapped nat; _ : mxsum_spec (vs2mx (unwrap addv_val)) (unwrap addv_dim) }.",
            "VernacInductive",
            "fcb7eccdbd7737b911c508c466f39e37ac65454c"
        ],
        [
            "Definition vs2mx_sum_expr_subproof (S : addv_expr) : mxsum_spec (vs2mx (unwrap S)) (unwrap (addv_dim S)).",
            "VernacDefinition",
            "063a45dd21e351e6f15aab95e4e5512d3f9eedd9"
        ],
        [
            "by case: S.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical vs2mx_sum_expr S := ProperMxsumExpr (vs2mx_sum_expr_subproof S).",
            "VernacDefinition",
            "a02123763772f2c2f71b46aaf6ec8ebfa627cda5"
        ],
        [
            "Canonical trivial_addv U := @Sumv (Wrap U) (Wrap (\\dim U)) (TrivialMxsum _).",
            "VernacDefinition",
            "c703f91e9d3b2854dbc9062b800e14a654a99380"
        ],
        [
            "Structure proper_addv_expr := ProperSumvExpr { proper_addv_val :> {vspace vT}; proper_addv_dim :> nat; _ : mxsum_spec (vs2mx proper_addv_val) proper_addv_dim }.",
            "VernacInductive",
            "bce0a3078014b8a28db974d81af8a4a45681b5a6"
        ],
        [
            "Definition proper_addvP (S : proper_addv_expr) := let: ProperSumvExpr _ _ termS := S return mxsum_spec (vs2mx S) S in termS.",
            "VernacDefinition",
            "b771b8bcf655150bcba3ad732e88724b74c7f4e6"
        ],
        [
            "Canonical proper_addv (S : proper_addv_expr) := @Sumv (wrap (S : {vspace vT})) (wrap (S : nat)) (proper_addvP S).",
            "VernacDefinition",
            "24e7255368b6f9d29ada9f56a00b56b11d6ba896"
        ],
        [
            "Section Binary.",
            "VernacBeginSection",
            "8908223fcd57007ccd5be8ab84562ce4be8ccef9"
        ],
        [
            "Variables S1 S2 : addv_expr.",
            "VernacAssumption",
            "9b38a856ba51e2165a7a7970be6fd5d25340e4ce"
        ],
        [
            "Fact binary_addv_subproof : mxsum_spec (vs2mx (unwrap S1 + unwrap S2)) (unwrap (addv_dim S1) + unwrap (addv_dim S2)).",
            "VernacStartTheoremProof",
            "dd229028e53e93a1b0d8e89c25a03fa779a3db13"
        ],
        [
            "by rewrite vs2mxD; apply: proper_mxsumP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical binary_addv_expr := ProperSumvExpr binary_addv_subproof.",
            "VernacDefinition",
            "388c3fa3abb69f982ad39cbe24c163d32d2f5c13"
        ],
        [
            "End Binary.",
            "VernacEndSegment",
            "ad4494d99314ec118c96d237505ebf72e4b52437"
        ],
        [
            "Section Nary.",
            "VernacBeginSection",
            "575038350397523abef95ce5c70a1ce5ba69c34d"
        ],
        [
            "Variables (I : Type) (r : seq I) (P : pred I) (S_ : I -> addv_expr).",
            "VernacAssumption",
            "bcc06fee5e120739fd4c43df13fab4c00f1cb59c"
        ],
        [
            "Fact nary_addv_subproof : mxsum_spec (vs2mx (\\sum_(i <- r | P i) unwrap (S_ i))) (\\sum_(i <- r | P i) unwrap (addv_dim (S_ i))).",
            "VernacStartTheoremProof",
            "28cb18087d447f6670470c5ff2719b7fe6423001"
        ],
        [
            "by rewrite vs2mx_sum; apply: proper_mxsumP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical nary_addv_expr := ProperSumvExpr nary_addv_subproof.",
            "VernacDefinition",
            "7b5a9babb750eb017baf240e58f6d2cc665dabd8"
        ],
        [
            "End Nary.",
            "VernacEndSegment",
            "35b40e13f5a9cb9b00711ca2374790fc599203d2"
        ],
        [
            "Definition directv_def S of phantom {vspace vT} (unwrap (addv_val S)) := \\dim (unwrap S) == unwrap (addv_dim S).",
            "VernacDefinition",
            "0bee28c097f5173e86d395a544d4df133abab1d5"
        ],
        [
            "End SumExpr.",
            "VernacEndSegment",
            "fb122c36b7c1a32116925c09a99e28127d665e34"
        ],
        [
            "Local Notation directv A := (directv_def (Phantom {vspace _} A%VS)).",
            "VernacSyntacticDefinition",
            "dc8cbcf69e6b3724ea2f7b088940e60df7ae41fa"
        ],
        [
            "Lemma directvE (S : addv_expr) : directv (unwrap S) = (\\dim (unwrap S) == unwrap (addv_dim S)).",
            "VernacStartTheoremProof",
            "7210fc7dcb7ca0cddac6eff8dc2ae06b9216c83c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma directvP {S : proper_addv_expr} : reflect (\\dim S = S :> nat) (directv S).",
            "VernacStartTheoremProof",
            "f0e944764cbcb6ae21ea3c4385003146483101fa"
        ],
        [
            "exact: eqnP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma directv_trivial U : directv (unwrap (@trivial_addv U)).",
            "VernacStartTheoremProof",
            "9ee0b121ad03d6661b0b56ce6188370cb739c1a2"
        ],
        [
            "exact: eqxx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv_sum_leqif (S : addv_expr) : \\dim (unwrap S) <= unwrap (addv_dim S) ?= iff directv (unwrap S).",
            "VernacStartTheoremProof",
            "4bffb3a84094fd28c712eb6c0707142d39256762"
        ],
        [
            "rewrite directvE; case: S => [[U] [d] /= defUd]; split=> //=.",
            "VernacExtend",
            "2253759ff5c580854290fce82296a80357452125"
        ],
        [
            "rewrite /dimv; elim: {1}_ {U}_ d / defUd => // m1 m2 A1 A2 r1 r2 _ leA1 _ leA2.",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "by apply: leq_trans (leq_add leA1 leA2); rewrite mxrank_adds_leqif.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma directvEgeq (S : addv_expr) : directv (unwrap S) = (\\dim (unwrap S) >= unwrap (addv_dim S)).",
            "VernacStartTheoremProof",
            "7eace32b8359e0ac07e164e493507eb2b06e3700"
        ],
        [
            "by rewrite leq_eqVlt ltnNge eq_sym !dimv_sum_leqif orbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section BinaryDirect.",
            "VernacBeginSection",
            "8f8c7a402dcd85d763ef56d331fa3bd3fb4a3341"
        ],
        [
            "Lemma directv_addE (S1 S2 : addv_expr) : directv (unwrap S1 + unwrap S2) = [&& directv (unwrap S1), directv (unwrap S2) & unwrap S1 :&: unwrap S2 == 0]%VS.",
            "VernacStartTheoremProof",
            "70a81f3d82558390b4c56c127c98956063dfd8bc"
        ],
        [
            "by rewrite /directv_def /dimv vs2mxD -mxdirectE mxdirect_addsE -vs2mxI -vs2mx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma directv_addP {U V} : reflect (U :&: V = 0)%VS (directv (U + V)).",
            "VernacStartTheoremProof",
            "f8c7832ad6c9ad4bc291f2071c60cc1eda817ed9"
        ],
        [
            "by rewrite directv_addE !directv_trivial; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma directv_add_unique {U V} : reflect (forall u1 u2 v1 v2, u1 \\in U -> u2 \\in U -> v1 \\in V -> v2 \\in V -> (u1 + v1 == u2 + v2) = ((u1, v1) == (u2, v2))) (directv (U + V)).",
            "VernacStartTheoremProof",
            "6fe88adba22d50ace84dcdd72863f7fc735b080e"
        ],
        [
            "apply: (iffP directv_addP) => [dxUV u1 u2 v1 v2 Uu1 Uu2 Vv1 Vv2 | dxUV].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/idP/idP=> [| /eqP[-> ->] //]; rewrite -subr_eq0 opprD addrACA addr_eq0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "move/eqP=> eq_uv; rewrite xpair_eqE -subr_eq0 eq_uv oppr_eq0 subr_eq0 andbb.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -subr_eq0 -memv0 -dxUV memv_cap -memvN -eq_uv !memvB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite -subv0; apply/subvP=> v /memv_capP[U1v U2v].",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite memv0 -[v == 0]andbb {1}eq_sym -xpair_eqE -dxUV ?mem0v // addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BinaryDirect.",
            "VernacEndSegment",
            "07ff5c9a889bbf74b00246681676dba071fc8b54"
        ],
        [
            "Section NaryDirect.",
            "VernacBeginSection",
            "8ed36cf162e318db1783d9f05b5739bdc71017bf"
        ],
        [
            "Context {I : finType} {P : pred I}.",
            "VernacContext",
            "dc176faafaec2ff86088ffb81d5888ab96a2f30d"
        ],
        [
            "Lemma directv_sumP {Us : I -> {vspace vT}} : reflect (forall i, P i -> Us i :&: (\\sum_(j | P j && (j != i)) Us j) = 0)%VS (directv (\\sum_(i | P i) Us i)).",
            "VernacStartTheoremProof",
            "4cbd099d6d6858e3b996796e699b78ed61ae9a66"
        ],
        [
            "rewrite directvE /= /dimv vs2mx_sum -mxdirectE; apply: (equivP mxdirect_sumsP).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by do [split=> dxU i /dxU; rewrite -vs2mx_sum -vs2mxI -vs2mx0] => [/val_inj|->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma directv_sumE {Ss : I -> addv_expr} (xunwrap := unwrap) : reflect [/\\ forall i, P i -> directv (unwrap (Ss i)) & directv (\\sum_(i | P i) xunwrap (Ss i))] (directv (\\sum_(i | P i) unwrap (Ss i))).",
            "VernacStartTheoremProof",
            "0409d28b9c53b4d8e1358fadaac40d2378cdaf37"
        ],
        [
            "by rewrite !directvE /= /dimv 2!{1}vs2mx_sum -!mxdirectE; apply: mxdirect_sumsE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma directv_sum_independent {Us : I -> {vspace vT}} : reflect (forall us, (forall i, P i -> us i \\in Us i) -> \\sum_(i | P i) us i = 0 -> (forall i, P i -> us i = 0)) (directv (\\sum_(i | P i) Us i)).",
            "VernacStartTheoremProof",
            "61c3089ba8ae5ea8c441d61b5d513f24676ea61e"
        ],
        [
            "apply: (iffP directv_sumP) => [dxU us Uu u_0 i Pi | dxU i Pi].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/eqP; rewrite -memv0 -(dxU i Pi) memv_cap Uu //= -memvN -sub0r -{1}u_0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (bigD1 i) //= addrC addKr memv_sumr // => j /andP[/Uu].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite -subv0; apply/subvP=> v.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite memv_cap memv0 => /andP[Uiv /memv_sumP[us Uu Dv]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have: \\sum_(j | P j) [eta us with i |-> - v] j = 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (bigD1 i) //= eqxx {1}Dv addrC -sumrB big1 // => j /andP[_ i'j].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (negPf i'j) subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/dxU/(_ i Pi); rewrite /= eqxx -oppr_eq0 => -> // j Pj.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by have [-> | i'j] := altP eqP; rewrite ?memvN // Uu ?Pj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma directv_sum_unique {Us : I -> {vspace vT}} : reflect (forall us vs, (forall i, P i -> us i \\in Us i) -> (forall i, P i -> vs i \\in Us i) -> (\\sum_(i | P i) us i == \\sum_(i | P i) vs i) = [forall (i | P i), us i == vs i]) (directv (\\sum_(i | P i) Us i)).",
            "VernacStartTheoremProof",
            "49d54bfab27ac47d2f18d3c56c94615131ea7b61"
        ],
        [
            "apply: (iffP directv_sum_independent) => [dxU us vs Uu Uv | dxU us Uu u_0 i Pi].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/idP/forall_inP=> [|eq_uv]; last by apply/eqP/eq_bigr => i /eq_uv/eqP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -subr_eq0 -sumrB => /eqP/dxU eq_uv i Pi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -subr_eq0 eq_uv // => j Pj; apply: memvB; move: j Pj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; have:= esym (dxU us \\0 Uu _); rewrite u_0 big1_eq eqxx.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "by move/(_ _)/forall_inP=> -> // j _; apply: mem0v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NaryDirect.",
            "VernacEndSegment",
            "edd2841af8e4a3baa456dae58d866a1312074d8e"
        ],
        [
            "Lemma memv_span X v : v \\in X -> v \\in <<X>>%VS.",
            "VernacStartTheoremProof",
            "3e5fa16d283352c11b63438360b7a779dedc859d"
        ],
        [
            "by case/seq_tnthP=> i {v}->; rewrite unlock memvK genmxE (eq_row_sub i) // rowK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_span1 v : v \\in <<[:: v]>>%VS.",
            "VernacStartTheoremProof",
            "8f77aa7963af092bc72f4774f91296b8cac04759"
        ],
        [
            "by rewrite memv_span ?mem_head.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dim_span X : \\dim <<X>> <= size X.",
            "VernacStartTheoremProof",
            "fa36093376d7d40a907ca8531c0266a70147eb3a"
        ],
        [
            "by rewrite unlock /dimv genmxE rank_leq_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma span_subvP {X U} : reflect {subset X <= U} (<<X>> <= U)%VS.",
            "VernacStartTheoremProof",
            "fa55a73eb2ebe402589a308d671b761c3ca66779"
        ],
        [
            "rewrite /subV [@span _ _]unlock genmxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: (iffP row_subP) => /= [sXU | sXU i].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move=> _ /seq_tnthP[i ->]; have:= sXU i; rewrite rowK memvK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite rowK -memvK sXU ?mem_tnth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_span X Y : {subset X <= Y} -> (<<X>> <= <<Y>>)%VS.",
            "VernacStartTheoremProof",
            "13fdf3f8f662f1b3b3065943b3bf9769ceee62da"
        ],
        [
            "by move=> sXY; apply/span_subvP=> v /sXY/memv_span.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_span X Y : X =i Y -> (<<X>> = <<Y>>)%VS.",
            "VernacStartTheoremProof",
            "d983f10c0a33f2f864a04882aea7fbb043d70f82"
        ],
        [
            "by move=> eqXY; apply: subv_anti; rewrite !sub_span // => u; rewrite eqXY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma span_def X : span X = (\\sum_(u <- X) <[u]>)%VS.",
            "VernacStartTheoremProof",
            "9b2c62003365a322a3ea2c74cee23feb2fd40b90"
        ],
        [
            "apply/subv_anti/andP; split.",
            "VernacExtend",
            "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
        ],
        [
            "by apply/span_subvP=> v Xv; rewrite (big_rem v) // memvE addvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite big_tnth; apply/subv_sumP=> i _; rewrite -memvE memv_span ?mem_tnth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma span_nil : (<<Nil vT>> = 0)%VS.",
            "VernacStartTheoremProof",
            "d98caf1b05088533b3bac0ef6dc6cea03f02b75f"
        ],
        [
            "by rewrite span_def big_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma span_seq1 v : (<<[:: v]>> = <[v]>)%VS.",
            "VernacStartTheoremProof",
            "2f01d97f0746cd67a61cecf97d3b89bdfb88dcf1"
        ],
        [
            "by rewrite span_def big_seq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma span_cons v X : (<<v :: X>> = <[v]> + <<X>>)%VS.",
            "VernacStartTheoremProof",
            "52596ade6fca26304f1558077b3264e95cf967d6"
        ],
        [
            "by rewrite !span_def big_cons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma span_cat X Y : (<<X ++ Y>> = <<X>> + <<Y>>)%VS.",
            "VernacStartTheoremProof",
            "cf1a70844b2ff0445cbf1140163a123a8993ae0d"
        ],
        [
            "by rewrite !span_def big_cat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition coord_expanded_def n (X : n.-tuple vT) i v := (v2r v *m pinvmx (b2mx X)) 0 i.",
            "VernacDefinition",
            "2a999d0bdbfe68c01a4095c7e5ed002aa6d0e905"
        ],
        [
            "Definition coord := locked_with span_key coord_expanded_def.",
            "VernacDefinition",
            "95b0492c98bdef29638bfe6e6e331cd3fa06a606"
        ],
        [
            "Canonical coord_unlockable := [unlockable fun coord].",
            "VernacDefinition",
            "85d162f2d4ad595d88e98e7e772efc35a8de9c02"
        ],
        [
            "Fact coord_is_scalar n (X : n.-tuple vT) i : scalar (coord X i).",
            "VernacStartTheoremProof",
            "f348611fa09998368f7cf41d1cd1818ac60b8dd5"
        ],
        [
            "by move=> k u v; rewrite unlock linearP mulmxDl -scalemxAl !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical coord_addidive n Xn i := Additive (@coord_is_scalar n Xn i).",
            "VernacDefinition",
            "5bca070293770fd7e5cf411ac345f5a8e9b2216d"
        ],
        [
            "Canonical coord_linear n Xn i := AddLinear (@coord_is_scalar n Xn i).",
            "VernacDefinition",
            "af1a4399189bd18e0582a645cd17e24e21f0e2d3"
        ],
        [
            "Lemma coord_span n (X : n.-tuple vT) v : v \\in span X -> v = \\sum_i coord X i v *: X`_i.",
            "VernacStartTheoremProof",
            "af604c404ec43562a85c0097cb430481f5bb65c3"
        ],
        [
            "rewrite memvK span_b2mx genmxE => Xv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite unlock_with mul_b2mx mulmxKpV ?v2rK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coord0 i v : coord [tuple 0] i v = 0.",
            "VernacStartTheoremProof",
            "9ca4763e27f6de6f6b81b05e0fa9f7a3a34acfca"
        ],
        [
            "rewrite unlock /pinvmx rank_rV; case: negP => [[] | _].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply/eqP/rowP=> j; rewrite !mxE (tnth_nth 0) /= linear0 mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite pid_mx_0 !(mulmx0, mul0mx) mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_free : free (Nil vT).",
            "VernacStartTheoremProof",
            "8fea417e95789db08b4276c456db183d0e951ccb"
        ],
        [
            "by rewrite /free span_nil dimv0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma seq1_free v : free [:: v] = (v != 0).",
            "VernacStartTheoremProof",
            "8af79057e818073a7b5f1a992ebef37c72dbc224"
        ],
        [
            "by rewrite /free span_seq1 dim_vline; case: (~~ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_free X Y : perm_eq X Y -> free X = free Y.",
            "VernacStartTheoremProof",
            "c1d31504e2a2e6eb648879ecc87ccc18e8fc67f7"
        ],
        [
            "by move=> eqX; rewrite /free (perm_eq_size eqX) (eq_span (perm_eq_mem eqX)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_directv X : free X = (0 \\notin X) && directv (\\sum_(v <- X) <[v]>).",
            "VernacStartTheoremProof",
            "f3178640ca7706b9b36e0b336ff0c5dbab94edfb"
        ],
        [
            "have leXi i (v := tnth (in_tuple X) i): true -> \\dim <[v]> <= 1 ?= iff (v != 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -seq1_free -span_seq1 => _; apply/leqif_eq/dim_span.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [_ /=] := leqif_trans (dimv_sum_leqif _) (leqif_sum leXi).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite sum1_card card_ord !directvE /= /free andbC span_def !(big_tnth _ _ X).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by congr (_ = _ && _); rewrite -has_pred1 -all_predC -big_all big_tnth big_andE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_not0 v X : free X -> v \\in X -> v != 0.",
            "VernacStartTheoremProof",
            "0bac170a3002b1f12319e92b6074b48cf5195fba"
        ],
        [
            "by rewrite free_directv andbC => /andP[_ /memPn]; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeP n (X : n.-tuple vT) : reflect (forall k, \\sum_(i < n) k i *: X`_i = 0 -> (forall i, k i = 0)) (free X).",
            "VernacStartTheoremProof",
            "619f1e4dfe58e62e3895557c06e4d9183f6d182a"
        ],
        [
            "rewrite free_b2mx; apply: (iffP idP) => [t_free k kt0 i | t_free].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "suffices /rowP/(_ i): \\row_i k i = 0 by rewrite !mxE.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by apply/(row_free_inj t_free)/r2v_inj; rewrite mul0mx -lin_b2mx kt0 linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -kermx_eq0; apply/rowV0P=> rk /sub_kermxP kt0.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply/rowP=> i; rewrite mxE {}t_free // mul_b2mx kt0 linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coord_free n (X : n.-tuple vT) (i j : 'I_n) : free X -> coord X j (X`_i) = (i == j)%:R.",
            "VernacStartTheoremProof",
            "9207970753d6e63cd44e70687693d8c3d1ebc699"
        ],
        [
            "rewrite unlock free_b2mx => /row_freeP[Ct CtK]; rewrite -row_b2mx.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite -row_mul -[pinvmx _]mulmx1 -CtK 2!mulmxA mulmxKpV // CtK !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coord_sum_free n (X : n.-tuple vT) k j : free X -> coord X j (\\sum_(i < n) k i *: X`_i) = k j.",
            "VernacStartTheoremProof",
            "ca9d9cad02fea851d99aee4f730991206be6cf63"
        ],
        [
            "move=> Xfree; rewrite linear_sum (bigD1 j) ?linearZ //= coord_free // eqxx.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite mulr1 big1 ?addr0 // => i /negPf j'i.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite linearZ /= coord_free // j'i mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cat_free X Y : free (X ++ Y) = [&& free X, free Y & directv (<<X>> + <<Y>>)].",
            "VernacStartTheoremProof",
            "00aa2c5cc776012d0fb701d7f84155d00af08d28"
        ],
        [
            "rewrite !free_directv mem_cat directvE /= !big_cat -directvE directv_addE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite negb_or -!andbA; do !bool_congr; rewrite -!span_def.",
            "VernacExtend",
            "77727a14a632d1fc59f513955776bf7c29b79629"
        ],
        [
            "by rewrite (sameP eqP directv_addP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma catl_free Y X : free (X ++ Y) -> free X.",
            "VernacStartTheoremProof",
            "f43ce890151f32fc5e36e235cc008542daf5f896"
        ],
        [
            "by rewrite cat_free => /and3P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma catr_free X Y : free (X ++ Y) -> free Y.",
            "VernacStartTheoremProof",
            "c198bfb764bfafb2c6f86aded3c40e790f002b1a"
        ],
        [
            "by rewrite cat_free => /and3P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_free p X : free X -> free (filter p X).",
            "VernacStartTheoremProof",
            "b5ffe8c247715079089397aeae57e3266c831535"
        ],
        [
            "rewrite -(perm_free (etrans (perm_filterC p X _) (perm_eq_refl X))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: catl_free.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_cons v X : free (v :: X) = (v \\notin <<X>>)%VS && free X.",
            "VernacStartTheoremProof",
            "6be5efcb70a24447eaaf6c7265a42fd91e70efd5"
        ],
        [
            "rewrite (cat_free [:: v]) seq1_free directvEgeq /= span_seq1 dim_vline.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: eqP => [-> | _] /=; first by rewrite mem0v.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite andbC ltnNge (geq_leqif (dimv_leqif_sup _)) ?addvSr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subv_add subvv andbT -memvE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeE n (X : n.-tuple vT) : free X = [forall i : 'I_n, X`_i \\notin <<drop i.+1 X>>%VS].",
            "VernacStartTheoremProof",
            "8f114948a0dcd9bfd72ff3ae53844c02e2dd91c2"
        ],
        [
            "case: X => X /= /eqP <-{n}; rewrite -(big_andE xpredT) /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "elim: X => [|v X IH_X] /=; first by rewrite nil_free big_ord0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite free_cons IH_X big_ord_recl drop0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeNE n (X : n.-tuple vT) : ~~ free X = [exists i : 'I_n, X`_i \\in <<drop i.+1 X>>%VS].",
            "VernacStartTheoremProof",
            "4c2e80533e4819a9b56be67f64fb3d25c5dc33b4"
        ],
        [
            "by rewrite freeE -negb_exists negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_uniq X : free X -> uniq X.",
            "VernacStartTheoremProof",
            "bae7e036c690f0f3573f16f1cc07118cb871e443"
        ],
        [
            "elim: X => //= v b IH_X; rewrite free_cons => /andP[X'v /IH_X->].",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "by rewrite (contra _ X'v) // => /memv_span.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_span X v (sumX := fun k => \\sum_(x <- X) k x *: x) : free X -> v \\in <<X>>%VS -> {k | v = sumX k & forall k1, v = sumX k1 -> {in X, k1 =1 k}}.",
            "VernacStartTheoremProof",
            "fa0afcdbd14bb5c8cc555308e79fda99fd8f70c2"
        ],
        [
            "rewrite -{2}[X]in_tupleE => freeX /coord_span def_v.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "pose k x := oapp (fun i => coord (in_tuple X) i v) 0 (insub (index x X)).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "exists k => [|k1 {def_v}def_v _ /(nthP 0)[i ltiX <-]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /sumX (big_nth 0) big_mkord def_v; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite /k index_uniq ?free_uniq // valK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /k /= index_uniq ?free_uniq // insubT //= def_v.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /sumX (big_nth 0) big_mkord coord_sum_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_of_free (rT : lmodType K) X (fX : seq rT) : {f : {linear vT -> rT} | free X -> size fX = size X -> map f X = fX}.",
            "VernacStartTheoremProof",
            "b61f9a085036fc74cf16781577e64295d0d92062"
        ],
        [
            "pose f u := \\sum_i coord (in_tuple X) i u *: fX`_i.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have lin_f: linear f.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> k u v; rewrite scaler_sumr -big_split; apply: eq_bigr => i _.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite /= scalerA -scalerDl linearP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (Linear lin_f) => freeX eq_szX.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/esym/(@eq_from_nth _ 0); rewrite ?size_map eq_szX // => i ltiX.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite (nth_map 0) //= /f (bigD1 (Ordinal ltiX)) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big1 => [|j /negbTE neqji]; rewrite (coord_free (Ordinal _)) //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite eqxx scale1r addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite eq_sym neqji scale0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma span_basis U X : basis_of U X -> <<X>>%VS = U.",
            "VernacStartTheoremProof",
            "d0e4964da1def6ae387912d642cd02aff4e89171"
        ],
        [
            "by case/andP=> /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma basis_free U X : basis_of U X -> free X.",
            "VernacStartTheoremProof",
            "2d390ea0852e43decad52b08549dfe868acfe89a"
        ],
        [
            "by case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coord_basis U n (X : n.-tuple vT) v : basis_of U X -> v \\in U -> v = \\sum_i coord X i v *: X`_i.",
            "VernacStartTheoremProof",
            "411efae8788762ed03260f43d39e88da895956c0"
        ],
        [
            "by move/span_basis <-; apply: coord_span.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_basis : basis_of 0 (Nil vT).",
            "VernacStartTheoremProof",
            "2e924b3caef25d8c45d724c69c1bf696f565b85e"
        ],
        [
            "by rewrite /basis_of span_nil eqxx nil_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma seq1_basis v : v != 0 -> basis_of <[v]> [:: v].",
            "VernacStartTheoremProof",
            "dffc453eb564ccd574e455d4b274b2fe9954c840"
        ],
        [
            "by move=> nz_v; rewrite /basis_of span_seq1 // eqxx seq1_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma basis_not0 x U X : basis_of U X -> x \\in X -> x != 0.",
            "VernacStartTheoremProof",
            "1b71e72e718be6a6877c8e6b6d5c731ba7b645a8"
        ],
        [
            "by move/basis_free/free_not0; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma basis_mem x U X : basis_of U X -> x \\in X -> x \\in U.",
            "VernacStartTheoremProof",
            "a293f8e1eabb469ca897d4f3f38def3b2a877f56"
        ],
        [
            "by move/span_basis=> <- /memv_span.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cat_basis U V X Y : directv (U + V) -> basis_of U X -> basis_of V Y -> basis_of (U + V) (X ++ Y).",
            "VernacStartTheoremProof",
            "1a752f8a61bf61d4a42aa853e1ae0a7273d9f27a"
        ],
        [
            "move=> dxUV /andP[/eqP defU freeX] /andP[/eqP defV freeY].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /basis_of span_cat cat_free defU defV // eqxx freeX freeY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_basis U n (X : n.-tuple vT) : basis_of U X -> \\dim U = n.",
            "VernacStartTheoremProof",
            "d5b1a39aa9f9be35474fe74dafdd6cd29b2da35e"
        ],
        [
            "by case/andP=> /eqP <- /eqnP->; apply: size_tuple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma basisEdim X U : basis_of U X = (U <= <<X>>)%VS && (size X <= \\dim U).",
            "VernacStartTheoremProof",
            "2caaf6c022cf8218b2d2c6f0c65bd1859b23a507"
        ],
        [
            "apply/andP/idP=> [[defU /eqnP <-]| ]; first by rewrite -eqEdim eq_sym.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=> sUX leXU; have leXX := dim_span X.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "rewrite /free eq_sym eqEdim sUX eqn_leq !(leq_trans leXX) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (leq_trans leXU) ?dimvS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma basisEfree X U : basis_of U X = [&& free X, (<<X>> <= U)%VS & \\dim U <= size X].",
            "VernacStartTheoremProof",
            "9e767c3109e00bcffc8a23cefb504b8a86ebee21"
        ],
        [
            "by rewrite andbC; apply: andb_id2r => freeX; rewrite eqEdim (eqnP freeX).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_basis X Y U : perm_eq X Y -> basis_of U X = basis_of U Y.",
            "VernacStartTheoremProof",
            "1f495d006848daffff3517e14940da8a5d9536c9"
        ],
        [
            "move=> eqXY; congr ((_ == _) && _); last exact: perm_free.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/eq_span; apply: perm_eq_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vbasisP U : basis_of U (vbasis U).",
            "VernacStartTheoremProof",
            "ac38748dd6b8dea9dada952f92762905f770f5b6"
        ],
        [
            "rewrite /basis_of free_b2mx span_b2mx (sameP eqP (vs2mxP _ _)) !genmxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have ->: b2mx (vbasis U) = row_base (vs2mx U).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/row_matrixP=> i; rewrite unlock rowK tnth_mktuple r2vK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite row_base_free !eq_row_base submx_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vbasis_mem v U : v \\in (vbasis U) -> v \\in U.",
            "VernacStartTheoremProof",
            "ecf2fc7a22a13148b03a9adb4b41aed07e8549fd"
        ],
        [
            "exact: (basis_mem (vbasisP _)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coord_vbasis v U : v \\in U -> v = \\sum_(i < \\dim U) coord (vbasis U) i v *: (vbasis U)`_i.",
            "VernacStartTheoremProof",
            "0596bf8373cc2f65ba1708dd319d8e50bbc00675"
        ],
        [
            "exact: coord_basis (vbasisP U).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section BigSumBasis.",
            "VernacBeginSection",
            "bca50992ebc367c7edc1567baae737bf572e5a75"
        ],
        [
            "Variables (I : finType) (P : pred I) (Xs : I -> seq vT).",
            "VernacAssumption",
            "4cbc9b9193a76858fce33eeac55604d8c2b9c3a7"
        ],
        [
            "Lemma span_bigcat : (<<\\big[cat/[::]]_(i | P i) Xs i>> = \\sum_(i | P i) <<Xs i>>)%VS.",
            "VernacStartTheoremProof",
            "9d5a43a4a805803ccbd3fcbbbe9b1c77ad4b9780"
        ],
        [
            "by rewrite (big_morph _ span_cat span_nil).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bigcat_free : directv (\\sum_(i | P i) <<Xs i>>) -> (forall i, P i -> free (Xs i)) -> free (\\big[cat/[::]]_(i | P i) Xs i).",
            "VernacStartTheoremProof",
            "a3d7420a6d246fa39e72114f27da7c4558e4ce1f"
        ],
        [
            "rewrite /free directvE /= span_bigcat => /directvP-> /= freeXs.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (big_morph _ (@size_cat _) (erefl _)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/eqP/eq_bigr=> i /freeXs/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bigcat_basis Us (U := (\\sum_(i | P i) Us i)%VS) : directv U -> (forall i, P i -> basis_of (Us i) (Xs i)) -> basis_of U (\\big[cat/[::]]_(i | P i) Xs i).",
            "VernacStartTheoremProof",
            "1c3765a6a4aef89cdd076ecb51405801df01ca52"
        ],
        [
            "move=> dxU XsUs; rewrite /basis_of span_bigcat.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have defUs i: P i -> span (Xs i) = Us i by case/XsUs/andP=> /eqP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (eq_bigr _ defUs) eqxx bigcat_free // => [|_ /XsUs/andP[]//].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/directvP; rewrite /= (eq_bigr _ defUs) (directvP dxU) /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/eq_bigr=> i /defUs->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BigSumBasis.",
            "VernacEndSegment",
            "806aba58b76a7cc4ab48726c9983788a557e2551"
        ],
        [
            "End VectorTheory.",
            "VernacEndSegment",
            "9c195a5686f164d3a4b59cfecb608388bbf39188"
        ],
        [
            "Hint Resolve subvv : core.",
            "VernacHints",
            "c88b29ef90421ee7808d37b425495d6ec2fda35e"
        ],
        [
            "Arguments subvP {K vT U V}.",
            "VernacArguments",
            "f1069bed4f81b7a978b0bfb8e3e0057a5f82d7d0"
        ],
        [
            "Arguments addv_idPl {K vT U V}.",
            "VernacArguments",
            "6d474b6ba7dcbaca6e52daf7135c9f5ae8080218"
        ],
        [
            "Arguments addv_idPr {K vT U V}.",
            "VernacArguments",
            "19589b5dcec5547f07d5a7145f67f891d72c081a"
        ],
        [
            "Arguments memv_addP {K vT w U V }.",
            "VernacArguments",
            "8bd39c92844a47b7ce6eb05db32d24ead04a850c"
        ],
        [
            "Arguments sumv_sup [K vT I] i0 [P U Vs].",
            "VernacArguments",
            "9f27fc61155223819ad015f153ea5cc0f04226ce"
        ],
        [
            "Arguments memv_sumP {K vT I P Us v}.",
            "VernacArguments",
            "951a42518a98c9d7886e584d9d0456f6e9301f97"
        ],
        [
            "Arguments subv_sumP {K vT I P Us V}.",
            "VernacArguments",
            "a413bf4e92780a8beeebdc55fb1a1333526194de"
        ],
        [
            "Arguments capv_idPl {K vT U V}.",
            "VernacArguments",
            "187685baa09b0953c934667a5e88a8c20832f534"
        ],
        [
            "Arguments capv_idPr {K vT U V}.",
            "VernacArguments",
            "150709e036da5053efafb7571a39aac78104bc33"
        ],
        [
            "Arguments memv_capP {K vT w U V}.",
            "VernacArguments",
            "150b0cb4d3883c6177c2e05d4f7c05d9b9776962"
        ],
        [
            "Arguments bigcapv_inf [K vT I] i0 [P Us V].",
            "VernacArguments",
            "48349c86e65a4ce8f6d0dfe5cd189680621ebb7f"
        ],
        [
            "Arguments subv_bigcapP {K vT I P U Vs}.",
            "VernacArguments",
            "ce3f26749615a002fd061a5e0fdc17ce307eb660"
        ],
        [
            "Arguments directvP {K vT S}.",
            "VernacArguments",
            "ed201966979a29f7ea347d3e508ffbecaf9a4b48"
        ],
        [
            "Arguments directv_addP {K vT U V}.",
            "VernacArguments",
            "7ba6fd37b2b6b565072179cba2a929e167050350"
        ],
        [
            "Arguments directv_add_unique {K vT U V}.",
            "VernacArguments",
            "4f70852b9ea1d76997bcc4e56850afecedb3e2c3"
        ],
        [
            "Arguments directv_sumP {K vT I P Us}.",
            "VernacArguments",
            "67bda98c97949f93ca05fe50f881e425f4eb1c79"
        ],
        [
            "Arguments directv_sumE {K vT I P Ss}.",
            "VernacArguments",
            "5c127b8b8028e3f061eb0cd3e03870a70296010e"
        ],
        [
            "Arguments directv_sum_independent {K vT I P Us}.",
            "VernacArguments",
            "f87c31175ba7c5676fab83b9a5af444abf962438"
        ],
        [
            "Arguments directv_sum_unique {K vT I P Us}.",
            "VernacArguments",
            "09cbc9a7c932f357b29747243a133e2897623fc1"
        ],
        [
            "Arguments span_subvP {K vT X U}.",
            "VernacArguments",
            "84529031488fb60561acbbe494dea4744dc6dfa3"
        ],
        [
            "Arguments freeP {K vT n X}.",
            "VernacArguments",
            "c50b26d2b740d3bf5223ec0a7991f12a63f35104"
        ],
        [
            "Prenex Implicits coord.",
            "VernacExtend",
            "5ec70eb7753adaaafff084cb6788c293ca7b2dcf"
        ],
        [
            "Notation directv S := (directv_def (Phantom _ S%VS)).",
            "VernacSyntacticDefinition",
            "012db0f1f7bd347959999dee9cba6a7da3c1b846"
        ],
        [
            "Section LfunDefs.",
            "VernacBeginSection",
            "486c5830057dbed4d25a3fe00c64b312411d779d"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types aT vT rT : vectType R.",
            "VernacReserve",
            "bfa42e28e649d6ea42254108a94ec66ebaaabc77"
        ],
        [
            "Fact lfun_key : unit.",
            "VernacStartTheoremProof",
            "8afc2441a5daa63c96bf082dc15c2082c565ca59"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fun_of_lfun_def aT rT (f : 'Hom(aT, rT)) := r2v \\o mulmxr (f2mx f) \\o v2r.",
            "VernacDefinition",
            "70d784b5c4aa48291ddb811d054b5e4e75d716f9"
        ],
        [
            "Definition fun_of_lfun := locked_with lfun_key fun_of_lfun_def.",
            "VernacDefinition",
            "ff4db45ee6d8f1dd5cf26d78e677e635a0442b6c"
        ],
        [
            "Canonical fun_of_lfun_unlockable := [unlockable fun fun_of_lfun].",
            "VernacDefinition",
            "05809f5888d9628ec52baedcc35cfc0b90a7ca69"
        ],
        [
            "Definition linfun_def aT rT (f : aT -> rT) := Vector.Hom (lin1_mx (v2r \\o f \\o r2v)).",
            "VernacDefinition",
            "b8302cc868ff33ac13287a7486f0aa806f91d54f"
        ],
        [
            "Definition linfun := locked_with lfun_key linfun_def.",
            "VernacDefinition",
            "8d8a3249ff2a96f06b8b775d7760c98d858508a9"
        ],
        [
            "Canonical linfun_unlockable := [unlockable fun linfun].",
            "VernacDefinition",
            "f0d337466d5f55305c25774cb4d3ee2912e58023"
        ],
        [
            "Definition id_lfun vT := @linfun vT vT idfun.",
            "VernacDefinition",
            "857518c5bed69de086bd0286f292985b9f39dd60"
        ],
        [
            "Definition comp_lfun aT vT rT (f : 'Hom(vT, rT)) (g : 'Hom(aT, vT)) := linfun (fun_of_lfun f \\o fun_of_lfun g).",
            "VernacDefinition",
            "4332b4a81046d512b791b6cf673c12777fadbdba"
        ],
        [
            "End LfunDefs.",
            "VernacEndSegment",
            "2946df8f8adaf1478094eed44dbc7e2aceeaf4ea"
        ],
        [
            "Coercion fun_of_lfun : Vector.hom >-> Funclass.",
            "VernacCoercion",
            "6e59a5a60ef320219f01a7954b1731e84611d5f8"
        ],
        [
            "Notation \"\\1\" := (@id_lfun _ _) : lfun_scope.",
            "VernacNotation",
            "9fce32bfaf054bd7964db79035cf9df7526c3976"
        ],
        [
            "Notation \"f \\o g\" := (comp_lfun f g) : lfun_scope.",
            "VernacNotation",
            "59eafc560f086d1158e13f94e1245b8f0f5cbfe7"
        ],
        [
            "Section LfunVspaceDefs.",
            "VernacBeginSection",
            "32fed22460ee3a15d5c9baba3eae9ed3e28c7660"
        ],
        [
            "Variable K : fieldType.",
            "VernacAssumption",
            "83ed4b6bdeec2bdda33f3147d1f70c4d3e116cd1"
        ],
        [
            "Implicit Types aT rT : vectType K.",
            "VernacReserve",
            "de70494f24c530df8d77a6869b3c8af66064424d"
        ],
        [
            "Definition inv_lfun aT rT (f : 'Hom(aT, rT)) := Vector.Hom (pinvmx (f2mx f)).",
            "VernacDefinition",
            "ea41fb18dd26577cf39a6de87f22ef3c0b2e71c4"
        ],
        [
            "Definition lker aT rT (f : 'Hom(aT, rT)) := mx2vs (kermx (f2mx f)).",
            "VernacDefinition",
            "6e02e4e4a609ad002a6f0334f0dd9f74b59a7242"
        ],
        [
            "Fact lfun_img_key : unit.",
            "VernacStartTheoremProof",
            "1ed65c7f295f738d519973883a12b5b78853ff6c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lfun_img_def aT rT f (U : {vspace aT}) : {vspace rT} := mx2vs (vs2mx U *m f2mx f).",
            "VernacDefinition",
            "7199e83401a011d01bdad91c381f1da10ffc230b"
        ],
        [
            "Definition lfun_img := locked_with lfun_img_key lfun_img_def.",
            "VernacDefinition",
            "03d75a43a3776e52d3a1bc554f15131c7985428c"
        ],
        [
            "Canonical lfun_img_unlockable := [unlockable fun lfun_img].",
            "VernacDefinition",
            "5df2e826505eb791b8a70ce0169107d6292acd43"
        ],
        [
            "Definition lfun_preim aT rT (f : 'Hom(aT, rT)) W := (lfun_img (inv_lfun f) (W :&: lfun_img f fullv) + lker f)%VS.",
            "VernacDefinition",
            "7c87c15bd3a0fa282d33bba5fb4dc0b8a923a279"
        ],
        [
            "End LfunVspaceDefs.",
            "VernacEndSegment",
            "4f9be68388a0439d5ffd291618a7627df41a8420"
        ],
        [
            "Prenex Implicits linfun lfun_img lker lfun_preim.",
            "VernacExtend",
            "107712d5625b8833a0dc9b6c6a6eddb336bd7f7f"
        ],
        [
            "Notation \"f ^-1\" := (inv_lfun f) : lfun_scope.",
            "VernacNotation",
            "4ee0bce44ba39233b2f5ee46a7dbe5703629f3b8"
        ],
        [
            "Notation \"f @: U\" := (lfun_img f%VF%R U) (at level 24) : vspace_scope.",
            "VernacNotation",
            "71db8fdbd1b8a4919fcbfbd849c19ad49739e645"
        ],
        [
            "Notation \"f @^-1: W\" := (lfun_preim f%VF%R W) (at level 24) : vspace_scope.",
            "VernacNotation",
            "c982850b94830c96731a5bf15ea149560288cf96"
        ],
        [
            "Notation limg f := (lfun_img f fullv).",
            "VernacSyntacticDefinition",
            "4f0f7f6c0c4f9912b586fa4fadd2ff5e8050cc62"
        ],
        [
            "Section LfunZmodType.",
            "VernacBeginSection",
            "a71128145aa6929ea16602d02243e6c16b4c55f5"
        ],
        [
            "Variables (R : ringType) (aT rT : vectType R).",
            "VernacAssumption",
            "fd9a510d622c555db0db95fa0443b63bb7a21d38"
        ],
        [
            "Implicit Types f g h : 'Hom(aT, rT).",
            "VernacReserve",
            "48d54b326a7eedfa5de914159cb47f6a85885727"
        ],
        [
            "Definition lfun_eqMixin := Eval hnf in [eqMixin of 'Hom(aT, rT) by <:].",
            "VernacDefinition",
            "2ebaab9709cb923a0c15c5d2cd920b94f06b5e1d"
        ],
        [
            "Canonical lfun_eqType := EqType 'Hom(aT, rT) lfun_eqMixin.",
            "VernacDefinition",
            "66d85f0437f4885a0f00d1bbf9fe6bb011d8c603"
        ],
        [
            "Definition lfun_choiceMixin := [choiceMixin of 'Hom(aT, rT) by <:].",
            "VernacDefinition",
            "9b993f303dd2e226f7436724eac49ce65a1a7966"
        ],
        [
            "Canonical lfun_choiceType := ChoiceType 'Hom(aT, rT) lfun_choiceMixin.",
            "VernacDefinition",
            "cc5b8f09f9f1a7d83f9a47c0d2eba1cdbb5993cf"
        ],
        [
            "Fact lfun_is_linear f : linear f.",
            "VernacStartTheoremProof",
            "a5415c86fb7181648c5b297e98cc555763863b78"
        ],
        [
            "by rewrite unlock; apply: linearP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical lfun_additive f := Additive (lfun_is_linear f).",
            "VernacDefinition",
            "e8e78e26950ccb345e5974f80f3fcf0fe9fe3662"
        ],
        [
            "Canonical lfun_linear f := AddLinear (lfun_is_linear f).",
            "VernacDefinition",
            "d0e6b3e7ae490b4d1fcb42372e12f0a476d61e90"
        ],
        [
            "Lemma lfunE (ff : {linear aT -> rT}) : linfun ff =1 ff.",
            "VernacStartTheoremProof",
            "526cbea91a59ba2a6b2bceb177ce2d21fdd6f1b2"
        ],
        [
            "by move=> v; rewrite 2!unlock /= mul_rV_lin1 /= !v2rK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fun_of_lfunK : cancel (@fun_of_lfun R aT rT) linfun.",
            "VernacStartTheoremProof",
            "9a9e15ae39c8cd3a21569c1add356a609df97652"
        ],
        [
            "move=> f; apply/val_inj/row_matrixP=> i.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite 2!unlock /= !rowE mul_rV_lin1 /= !r2vK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lfunP f g : f =1 g <-> f = g.",
            "VernacStartTheoremProof",
            "4aa49f38204bc08c66958a99cfab83a262032e58"
        ],
        [
            "split=> [eq_fg | -> //]; rewrite -[f]fun_of_lfunK -[g]fun_of_lfunK unlock.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by apply/val_inj/row_matrixP=> i; rewrite !rowE !mul_rV_lin1 /= eq_fg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition zero_lfun : 'Hom(aT, rT) := linfun \\0.",
            "VernacDefinition",
            "90b53cfe2043358c2456ddd5ab66d31eefa927fa"
        ],
        [
            "Definition add_lfun f g := linfun (f \\+ g).",
            "VernacDefinition",
            "e0e43e0c2105e45b55395c380ef5271eb3975790"
        ],
        [
            "Definition opp_lfun f := linfun (-%R \\o f).",
            "VernacDefinition",
            "f867b8aae583ad481af96e320878475882883190"
        ],
        [
            "Fact lfun_addA : associative add_lfun.",
            "VernacStartTheoremProof",
            "0335e91016a560b4f4cbc7bafd7be442524f49a3"
        ],
        [
            "by move=> f g h; apply/lfunP=> v; rewrite !lfunE /= !lfunE addrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lfun_addC : commutative add_lfun.",
            "VernacStartTheoremProof",
            "1695a762b740557129b02419c8dc91294cd82666"
        ],
        [
            "by move=> f g; apply/lfunP=> v; rewrite !lfunE /= addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lfun_add0 : left_id zero_lfun add_lfun.",
            "VernacStartTheoremProof",
            "01ff998bb6b456207752a1a19cf1be53cb990ae9"
        ],
        [
            "by move=> f; apply/lfunP=> v; rewrite lfunE /= lfunE add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lfun_addN : left_inverse zero_lfun opp_lfun add_lfun.",
            "VernacStartTheoremProof",
            "ee9dc5e36a81c89635b4274e3fa3c3f9a18fe994"
        ],
        [
            "by move=> f; apply/lfunP=> v; rewrite !lfunE /= lfunE addNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lfun_zmodMixin := ZmodMixin lfun_addA lfun_addC lfun_add0 lfun_addN.",
            "VernacDefinition",
            "e1b3d8d56d061508605e96566d1a4e9fdd6732cb"
        ],
        [
            "Canonical lfun_zmodType := Eval hnf in ZmodType 'Hom(aT, rT) lfun_zmodMixin.",
            "VernacDefinition",
            "c45c38ffd785f6e68c43d0b1cc5ee8de8c835a00"
        ],
        [
            "Lemma zero_lfunE x : (0 : 'Hom(aT, rT)) x = 0.",
            "VernacStartTheoremProof",
            "778d9c43ccf1044c812ec0b99c0f3091a70e18b3"
        ],
        [
            "exact: lfunE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_lfunE f g x : (f + g) x = f x + g x.",
            "VernacStartTheoremProof",
            "013efebbf43be7ed2b1f9bf6cdd386190029c812"
        ],
        [
            "exact: lfunE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_lfunE f x : (- f) x = - f x.",
            "VernacStartTheoremProof",
            "0e7b2a103df10dd5dcdb3eee36839b42e5ad8e99"
        ],
        [
            "exact: lfunE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_lfunE I (r : seq I) (P : pred I) (fs : I -> 'Hom(aT, rT)) x : (\\sum_(i <- r | P i) fs i) x = \\sum_(i <- r | P i) fs i x.",
            "VernacStartTheoremProof",
            "dfd84a84b21eae2b2353f1344068d519fc522075"
        ],
        [
            "by elim/big_rec2: _ => [|i _ f _ <-]; rewrite lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LfunZmodType.",
            "VernacEndSegment",
            "327f0d7c5bebc380ab29bf1551bafb7d3573b1b3"
        ],
        [
            "Arguments fun_of_lfunK {R aT rT}.",
            "VernacArguments",
            "138d6bdbc82b3f5315057aa4c2e15d72484d7fcb"
        ],
        [
            "Section LfunVectType.",
            "VernacBeginSection",
            "943910ccab258fbba8f2b3bfb0e8d8a3d2a47586"
        ],
        [
            "Variables (R : comRingType) (aT rT : vectType R).",
            "VernacAssumption",
            "400a01108c87419be8549fe17355712440c103e9"
        ],
        [
            "Implicit Types f : 'Hom(aT, rT).",
            "VernacReserve",
            "5ebfaaed5e52abb5012b10a8580c0f7c79391d4f"
        ],
        [
            "Definition scale_lfun k f := linfun (k \\*: f).",
            "VernacDefinition",
            "79585680d1d32104c5a34960a5d4ad42f7e25b5b"
        ],
        [
            "Local Infix \"*:l\" := scale_lfun (at level 40).",
            "VernacInfix",
            "978844d88e67492b0361afa442029fd08178f59c"
        ],
        [
            "Fact lfun_scaleA k1 k2 f : k1 *:l (k2 *:l f) = (k1 * k2) *:l f.",
            "VernacStartTheoremProof",
            "5f7375a2bfc54da6e32dc065124725d623b07a84"
        ],
        [
            "by apply/lfunP=> v; rewrite !lfunE /= lfunE scalerA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lfun_scale1 f : 1 *:l f = f.",
            "VernacStartTheoremProof",
            "6c72fa09253fafa261580ad517c3a9b1b05aec7c"
        ],
        [
            "by apply/lfunP=> v; rewrite lfunE /= scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lfun_scaleDr k f1 f2 : k *:l (f1 + f2) = k *:l f1 + k *:l f2.",
            "VernacStartTheoremProof",
            "15b8882cdc874674e4d5232388e6471d04d71cd2"
        ],
        [
            "by apply/lfunP=> v; rewrite !lfunE /= !lfunE scalerDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lfun_scaleDl f k1 k2 : (k1 + k2) *:l f = k1 *:l f + k2 *:l f.",
            "VernacStartTheoremProof",
            "7a524fe99413206a600eaaf1dfe86c4d32f538bf"
        ],
        [
            "by apply/lfunP=> v; rewrite !lfunE /= !lfunE scalerDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lfun_lmodMixin := LmodMixin lfun_scaleA lfun_scale1 lfun_scaleDr lfun_scaleDl.",
            "VernacDefinition",
            "fc49a191187862d9637eda1b3155d2966a5cfe17"
        ],
        [
            "Canonical lfun_lmodType := Eval hnf in LmodType R 'Hom(aT, rT) lfun_lmodMixin.",
            "VernacDefinition",
            "f0f02156b67f27391c889b6d2db85f1744cf62d3"
        ],
        [
            "Lemma scale_lfunE k f x : (k *: f) x = k *: f x.",
            "VernacStartTheoremProof",
            "e721820bae0020a88811d0328e77fcf683d27c0f"
        ],
        [
            "exact: lfunE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lfun_vect_iso : Vector.axiom (Vector.dim aT * Vector.dim rT) 'Hom(aT, rT).",
            "VernacStartTheoremProof",
            "555d2b2d8e5648abce0b6e6cd3a8f435c6cb7c9f"
        ],
        [
            "exists (mxvec \\o f2mx) => [a f g|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /= -linearP /= -[A in _ = mxvec A]/(f2mx (Vector.Hom _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (mxvec (f2mx _)); apply/lfunP=> v; do 2!rewrite lfunE /=.",
            "VernacExtend",
            "dd179f31dfb2145b6c2eb66ca4f826a6b00a1cfb"
        ],
        [
            "by rewrite unlock /= -linearP mulmxDr scalemxAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: Bijective (Vector.Hom \\o vec_mx) _ _ => [[A]|A] /=; last exact: vec_mxK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lfun_vectMixin := VectMixin lfun_vect_iso.",
            "VernacDefinition",
            "b687173c817c43f8394d709445d9e2efd95a1dfe"
        ],
        [
            "Canonical lfun_vectType := VectType R 'Hom(aT, rT) lfun_vectMixin.",
            "VernacDefinition",
            "5a766ba0d8399eab55e4a2c29e5754c440f5a488"
        ],
        [
            "End LfunVectType.",
            "VernacEndSegment",
            "e77173a60044c17455b2662587fa7c1637193f6e"
        ],
        [
            "Section CompLfun.",
            "VernacBeginSection",
            "8c938dd62416538639d1b51f3e6e992072610b16"
        ],
        [
            "Variables (R : ringType) (wT aT vT rT : vectType R).",
            "VernacAssumption",
            "0206a1724a25a8f0eed7503792ab2d42c1bd2bb2"
        ],
        [
            "Implicit Types (f : 'Hom(vT, rT)) (g : 'Hom(aT, vT)) (h : 'Hom(wT, aT)).",
            "VernacReserve",
            "885018bf7a3b498d964bec1c011eaca3179e671b"
        ],
        [
            "Lemma id_lfunE u: \\1%VF u = u :> aT.",
            "VernacStartTheoremProof",
            "aa33a3cc32ab02a8e13aed12adb4e22a42b73f9d"
        ],
        [
            "exact: lfunE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfunE f g u : (f \\o g)%VF u = f (g u).",
            "VernacStartTheoremProof",
            "4db75547492ff7e834ad1363a9c110a5dd3c9494"
        ],
        [
            "exact: lfunE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfunA f g h : (f \\o (g \\o h) = (f \\o g) \\o h)%VF.",
            "VernacStartTheoremProof",
            "4a1545fcc0c84abf3929d0dd5aa308013fc6593c"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfun1l f : (\\1 \\o f)%VF = f.",
            "VernacStartTheoremProof",
            "88b1e289dfbb617d15b24f87b119e02c06db17b6"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfun1r f : (f \\o \\1)%VF = f.",
            "VernacStartTheoremProof",
            "15075cc2715c3f2222a6d3f796ca6802c7440d75"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfun0l g : (0 \\o g)%VF = 0 :> 'Hom(aT, rT).",
            "VernacStartTheoremProof",
            "d0ecb50cb1791eaf061a219292945121565c37e3"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfun0r f : (f \\o 0)%VF = 0 :> 'Hom(aT, rT).",
            "VernacStartTheoremProof",
            "18f910306f304c795f73f7e2edce3313122fd528"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=; rewrite linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfunDl f1 f2 g : ((f1 + f2) \\o g = (f1 \\o g) + (f2 \\o g))%VF.",
            "VernacStartTheoremProof",
            "885b7e0e639a970553148deff8ee3f13e008543c"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfunDr f g1 g2 : (f \\o (g1 + g2) = (f \\o g1) + (f \\o g2))%VF.",
            "VernacStartTheoremProof",
            "a42000dea4064350ef1516e76a7a3ece4731d43f"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=; rewrite linearD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfunNl f g : ((- f) \\o g = - (f \\o g))%VF.",
            "VernacStartTheoremProof",
            "856ba4d6a508c1747ef743a922ba127af8a74aef"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfunNr f g : (f \\o (- g) = - (f \\o g))%VF.",
            "VernacStartTheoremProof",
            "ace8d5937342d38ff329ab184804785d879c19ee"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=; rewrite linearN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CompLfun.",
            "VernacEndSegment",
            "c84567499e3d1b4a2b7d34d1c0fccff8f43b4e72"
        ],
        [
            "Definition lfun_simp := (comp_lfunE, scale_lfunE, opp_lfunE, add_lfunE, sum_lfunE, lfunE).",
            "VernacDefinition",
            "7c8380217b3c381a55c3e42accc5a71d1986f598"
        ],
        [
            "Section ScaleCompLfun.",
            "VernacBeginSection",
            "8f09133c34a9d5a4bb8a666158dd38be24427028"
        ],
        [
            "Variables (R : comRingType) (aT vT rT : vectType R).",
            "VernacAssumption",
            "b975695972f7aa0b3392d38e2454710f1d967993"
        ],
        [
            "Implicit Types (f : 'Hom(vT, rT)) (g : 'Hom(aT, vT)).",
            "VernacReserve",
            "3e350419b10957a9584429fffcac3df0fc0ec01d"
        ],
        [
            "Lemma comp_lfunZl k f g : (k *: (f \\o g) = (k *: f) \\o g)%VF.",
            "VernacStartTheoremProof",
            "7ed2095c0e926e8d5f7ee63bdb35507c554bd1d4"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_lfunZr k f g : (k *: (f \\o g) = f \\o (k *: g))%VF.",
            "VernacStartTheoremProof",
            "3cd4fcc987d8ddf81ae655e752f060597d032f3e"
        ],
        [
            "by apply/lfunP=> u; do !rewrite lfunE /=; rewrite linearZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ScaleCompLfun.",
            "VernacEndSegment",
            "b3314fede96ebeeaa59d7dcb52f3edb425b4507d"
        ],
        [
            "Section LinearImage.",
            "VernacBeginSection",
            "cb52d3f5ee96fbf5480d9f9536857ad0f1ea7cac"
        ],
        [
            "Variables (K : fieldType) (aT rT : vectType K).",
            "VernacAssumption",
            "05dbc1c97fd4d4e39095da16d73682926ce8c618"
        ],
        [
            "Implicit Types (f g : 'Hom(aT, rT)) (U V : {vspace aT}) (W : {vspace rT}).",
            "VernacReserve",
            "21f8e5c0f6c4f7d316072607115058566864b9ca"
        ],
        [
            "Lemma limgS f U V : (U <= V)%VS -> (f @: U <= f @: V)%VS.",
            "VernacStartTheoremProof",
            "c71c41c0df94a6a65219a8d0827ce2d6a61d4554"
        ],
        [
            "by rewrite unlock /subsetv !genmxE; apply: submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_line f v : (f @: <[v]> = <[f v]>)%VS.",
            "VernacStartTheoremProof",
            "d3fc183c6cbd8e9db122ca8483f3701a17795a7c"
        ],
        [
            "apply/eqP; rewrite 2!unlock eqEsubv /subsetv /= r2vK !genmxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite !(eqmxMr _ (genmxE _)) submx_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg0 f : (f @: 0 = 0)%VS.",
            "VernacStartTheoremProof",
            "c11930fba67cf4292f4b9f65fd4f55e5f8574f6f"
        ],
        [
            "by rewrite limg_line linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_img f v U : v \\in U -> f v \\in (f @: U)%VS.",
            "VernacStartTheoremProof",
            "c552996cad259115da7672f5602d3ea1e339b9fe"
        ],
        [
            "by move=> Uv; rewrite memvE -limg_line limgS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_imgP f w U : reflect (exists2 u, u \\in U & w = f u) (w \\in f @: U)%VS.",
            "VernacStartTheoremProof",
            "6b86c7a05f8d8e60e40c841ac983d7cdca3531e8"
        ],
        [
            "apply: (iffP idP) => [|[u Uu ->]]; last exact: memv_img.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite 2!unlock memvE /subsetv !genmxE => /submxP[ku Drw].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists (r2v (ku *m vs2mx U)); last by rewrite /= r2vK -mulmxA -Drw v2rK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite memvE /subsetv !genmxE r2vK submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lim0g U : (0 @: U = 0 :> {vspace rT})%VS.",
            "VernacStartTheoremProof",
            "b9b1ae12c5e33f0dc2d02a3741b21c140259acbc"
        ],
        [
            "apply/eqP; rewrite -subv0; apply/subvP=> _ /memv_imgP[u _ ->].",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite lfunE rpred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_in_limg V f g : {in V, f =1 g} -> (f @: V = g @: V)%VS.",
            "VernacStartTheoremProof",
            "76b0231ae1fda869c4edb8ca9b6a0c024f3069aa"
        ],
        [
            "move=> eq_fg; apply/vspaceP=> y.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply/memv_imgP/memv_imgP=> [][x Vx ->]; exists x; rewrite ?eq_fg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_add f : {morph lfun_img f : U V / U + V}%VS.",
            "VernacStartTheoremProof",
            "d8c6b0f84d99d7323876de95df6b597276b0ca72"
        ],
        [
            "move=> U V; apply/eqP; rewrite unlock eqEsubv /subsetv /= -genmx_adds.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite !genmxE !(eqmxMr _ (genmxE _)) !addsmxMr submx_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_sum f I r (P : pred I) Us : (f @: (\\sum_(i <- r | P i) Us i) = \\sum_(i <- r | P i) f @: Us i)%VS.",
            "VernacStartTheoremProof",
            "6d104fd0593484c686f68d68a7e2e6c54a6202aa"
        ],
        [
            "exact: (big_morph _ (limg_add f) (limg0 f)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_cap f U V : (f @: (U :&: V) <= f @: U :&: f @: V)%VS.",
            "VernacStartTheoremProof",
            "46efd665a4941b9b9d9cef2f1efd39e8ec8204b3"
        ],
        [
            "by rewrite subv_cap !limgS ?capvSl ?capvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_bigcap f I r (P : pred I) Us : (f @: (\\bigcap_(i <- r | P i) Us i) <= \\bigcap_(i <- r | P i) f @: Us i)%VS.",
            "VernacStartTheoremProof",
            "438c871841dd5b80ac13f1619d3a5bc386de3dc9"
        ],
        [
            "elim/big_rec2: _ => [|i V U _ sUV]; first exact: subvf.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (subv_trans (limg_cap f _ U)) ?capvS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_span f X : (f @: <<X>> = <<map f X>>)%VS.",
            "VernacStartTheoremProof",
            "e27d4f33cd5de1d207babf220569c0513dd8941c"
        ],
        [
            "by rewrite !span_def big_map limg_sum; apply: eq_bigr => x _; rewrite limg_line.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lfunPn f g : reflect (exists u, f u != g u) (f != g).",
            "VernacStartTheoremProof",
            "1998289b0dbe3090ac3db017f8bb87f3e544d796"
        ],
        [
            "apply: (iffP idP) => [f'g|[x]]; last by apply: contraNneq => /lfunP->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "suffices /subvPn[_ /memv_imgP[u _ ->]]: ~~ (limg (f - g) <= 0)%VS.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite lfunE /= lfunE /= memv0 subr_eq0; exists u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: contra f'g => /subvP fg0; apply/eqP/lfunP=> u; apply/eqP.",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "by rewrite -subr_eq0 -opp_lfunE -add_lfunE -memv0 fg0 ?memv_img ?memvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inv_lfun_def f : (f \\o f^-1 \\o f)%VF = f.",
            "VernacStartTheoremProof",
            "a4acdf83be6055a5133a94d6f3a6dae734b355b7"
        ],
        [
            "apply/lfunP=> u; do !rewrite lfunE /=; rewrite unlock /= !r2vK.",
            "VernacExtend",
            "2c9df44fb22c7f945c4b383196682830f710c550"
        ],
        [
            "by rewrite mulmxKpV ?submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_lfunVK f : {in limg f, cancel f^-1%VF f}.",
            "VernacStartTheoremProof",
            "2c58754d94294c611f16eb9328ac52679d28ee8e"
        ],
        [
            "by move=> _ /memv_imgP[u _ ->]; rewrite -!comp_lfunE inv_lfun_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lkerE f U : (U <= lker f)%VS = (f @: U == 0)%VS.",
            "VernacStartTheoremProof",
            "a581dd9feb16f764aeee6d57fd3efee2baa7c1cf"
        ],
        [
            "rewrite unlock -dimv_eq0 /dimv /subsetv !genmxE mxrank_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (sameP sub_kermxP eqP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_ker f v : (v \\in lker f) = (f v == 0).",
            "VernacStartTheoremProof",
            "8f67888c3e120c9c5ba8d463c0dcafb32f01e1c6"
        ],
        [
            "by rewrite -memv0 !memvE subv0 lkerE limg_line.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqlfunP f g v : reflect (f v = g v) (v \\in lker (f - g)).",
            "VernacStartTheoremProof",
            "e1d13a199a00b27ce0bc0e9238a5c1b219e56588"
        ],
        [
            "by rewrite memv_ker !lfun_simp subr_eq0; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqlfun_inP V f g : reflect {in V, f =1 g} (V <= lker (f - g))%VS.",
            "VernacStartTheoremProof",
            "7b68fd898eaeb6eca6b992ab2b69d3d64181def4"
        ],
        [
            "by apply: (iffP subvP) => E x /E/eqlfunP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_ker_compl f U : (f @: (U :\\: lker f) = f @: U)%VS.",
            "VernacStartTheoremProof",
            "2b270f94bd9da0b0f53e9f6e263878214f499bb8"
        ],
        [
            "rewrite -{2}(addv_diff_cap U (lker f)) limg_add; apply/esym/addv_idPl.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite (subv_trans _ (sub0v _)) // subv0 -lkerE capvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_ker_dim f U : (\\dim (U :&: lker f) + \\dim (f @: U) = \\dim U)%N.",
            "VernacStartTheoremProof",
            "0d34d126f575067c75c12e2ee44cc9ae2c6c7777"
        ],
        [
            "rewrite unlock /dimv /= genmx_cap genmx_id -genmx_cap !genmxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addnC mxrank_mul_ker.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_dim_eq f U : (U :&: lker f = 0)%VS -> \\dim (f @: U) = \\dim U.",
            "VernacStartTheoremProof",
            "ecfb7918a69580c8c7efc8df08cc686006ec8b49"
        ],
        [
            "by rewrite -(limg_ker_dim f U) => ->; rewrite dimv0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_basis_of f U X : (U :&: lker f = 0)%VS -> basis_of U X -> basis_of (f @: U) (map f X).",
            "VernacStartTheoremProof",
            "88976750265b2fc40202c345ec61cd08a444629e"
        ],
        [
            "move=> injUf /andP[/eqP defU /eqnP freeX].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /basis_of /free size_map -limg_span -freeX defU limg_dim_eq ?eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0P f : reflect (injective f) (lker f == 0%VS).",
            "VernacStartTheoremProof",
            "e651c54d2a2549c7620e5b0ad79fa112c3cacb75"
        ],
        [
            "rewrite -subv0; apply: (iffP subvP) => [injf u v eq_fuv | injf u].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply/eqP; rewrite -subr_eq0 -memv0 injf //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite memv_ker linearB /= eq_fuv subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite memv_ker memv0 -(inj_eq injf) linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_ker0 f U V : lker f == 0%VS -> (f @: U <= f @: V)%VS = (U <= V)%VS.",
            "VernacStartTheoremProof",
            "516cbc0495c6a0cc602a5c2de6ef6b1fa27a4635"
        ],
        [
            "move/lker0P=> injf; apply/idP/idP=> [/subvP sfUV | ]; last exact: limgS.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/subvP=> u Uu; have /memv_imgP[v Vv /injf->] := sfUV _ (memv_img f Uu).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_limg_ker0 f U V : lker f == 0%VS -> (f @: U == f @: V)%VS = (U == V).",
            "VernacStartTheoremProof",
            "c64b8c841afcd0c5a921974ee6ec09e920b62443"
        ],
        [
            "by move=> injf; rewrite !eqEsubv !limg_ker0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0_lfunK f : lker f == 0%VS -> cancel f f^-1%VF.",
            "VernacStartTheoremProof",
            "e49699f50eb9ac11ad818c561ace59508b9d287f"
        ],
        [
            "by move/lker0P=> injf u; apply: injf; rewrite limg_lfunVK ?memv_img ?memvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0_compVf f : lker f == 0%VS -> (f^-1 \\o f = \\1)%VF.",
            "VernacStartTheoremProof",
            "7194777f9744490f8bfc99fb2d09f17a1571b4fb"
        ],
        [
            "by move/lker0_lfunK=> fK; apply/lfunP=> u; rewrite !lfunE /= fK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LinearImage.",
            "VernacEndSegment",
            "2041d758bc7701f5b19e6b2d7eea76798f1d2e54"
        ],
        [
            "Arguments memv_imgP {K aT rT f w U}.",
            "VernacArguments",
            "a41a2c9507fea5fccad37663306efa36371b9456"
        ],
        [
            "Arguments lfunPn {K aT rT f g}.",
            "VernacArguments",
            "a403cc7f66bc15265badc6051454bb84a048eee8"
        ],
        [
            "Arguments lker0P {K aT rT f}.",
            "VernacArguments",
            "bdc6e962d76cb1696b167328333096d3d04a4c84"
        ],
        [
            "Arguments eqlfunP {K aT rT f g v}.",
            "VernacArguments",
            "a7f830cd6a7b514b53387e5e86a456ae82b3926b"
        ],
        [
            "Arguments eqlfun_inP {K aT rT V f g}.",
            "VernacArguments",
            "7d7187d096cecf6bd9933b54fb4f5169274de535"
        ],
        [
            "Arguments limg_lfunVK {K aT rT f} [x] f_x.",
            "VernacArguments",
            "5ed42c45c749252b48b5d95b8cb9b2530714513e"
        ],
        [
            "Section FixedSpace.",
            "VernacBeginSection",
            "0b931799774deae6af3824090e4d1ea14c7ad044"
        ],
        [
            "Variables (K : fieldType) (vT : vectType K).",
            "VernacAssumption",
            "ae2931e0fcfddeea462f043df3f53dc914a4cf3f"
        ],
        [
            "Implicit Types (f : 'End(vT)) (U : {vspace vT}).",
            "VernacReserve",
            "2ba2117a75b15db5b3cc72db59485896d1f99fea"
        ],
        [
            "Definition fixedSpace f : {vspace vT} := lker (f - \\1%VF).",
            "VernacDefinition",
            "63b1a512ad1536fc667e16283c2563b98f556ff6"
        ],
        [
            "Lemma fixedSpaceP f a : reflect (f a = a) (a \\in fixedSpace f).",
            "VernacStartTheoremProof",
            "a590427035ad42760f6cc4da7dc095bda07535a7"
        ],
        [
            "by rewrite memv_ker add_lfunE opp_lfunE id_lfunE subr_eq0; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fixedSpacesP f U : reflect {in U, f =1 id} (U <= fixedSpace f)%VS.",
            "VernacStartTheoremProof",
            "dfe56fd2556ca5fcd2312d3d0316b5d8d7ec08af"
        ],
        [
            "by apply: (iffP subvP) => cUf x /cUf/fixedSpaceP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fixedSpace_limg f U : (U <= fixedSpace f -> f @: U = U)%VS.",
            "VernacStartTheoremProof",
            "fe0c14b0eea364f9d396b9e87a0d074cd09eb86e"
        ],
        [
            "move/fixedSpacesP=> cUf; apply/vspaceP=> x.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply/memv_imgP/idP=> [[{x} x Ux ->] | Ux]; last exists x; rewrite ?cUf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fixedSpace_id : fixedSpace \\1 = {:vT}%VS.",
            "VernacStartTheoremProof",
            "c8a10c5154f7f2f5842a66b5b90011be9c763b1d"
        ],
        [
            "by apply/vspaceP=> x; rewrite memvf; apply/fixedSpaceP; rewrite lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FixedSpace.",
            "VernacEndSegment",
            "46efe1b963b2e0cc219d00c85f4dca19e23deeed"
        ],
        [
            "Arguments fixedSpaceP {K vT f a}.",
            "VernacArguments",
            "8a6fc9cd472cb56a1c4d083bb4c690a2e9ee52dd"
        ],
        [
            "Arguments fixedSpacesP {K vT f U}.",
            "VernacArguments",
            "4714a527f75e6847c1b102db874b007d597e68d5"
        ],
        [
            "Section LinAut.",
            "VernacBeginSection",
            "cb9ef6864de5725c83de4e46007393a26e3ee77b"
        ],
        [
            "Variables (K : fieldType) (vT : vectType K) (f : 'End(vT)).",
            "VernacAssumption",
            "820925bc5d98cff7da1f1c15f3cc21cb6f5433e0"
        ],
        [
            "Hypothesis kerf0 : lker f == 0%VS.",
            "VernacAssumption",
            "bbdcf8a1dc4042e389f4377167f61dc2944f8eb8"
        ],
        [
            "Lemma lker0_limgf : limg f = fullv.",
            "VernacStartTheoremProof",
            "5572c6cdf9cfcc76bda58c05ba8c0dd38d0998d1"
        ],
        [
            "by apply/eqP; rewrite eqEdim subvf limg_dim_eq //= (eqP kerf0) capv0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0_lfunVK : cancel f^-1%VF f.",
            "VernacStartTheoremProof",
            "bac9f148a89448ee0b72fcd692f5e94aa19e0096"
        ],
        [
            "by move=> u; rewrite limg_lfunVK // lker0_limgf memvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0_compfV : (f \\o f^-1 = \\1)%VF.",
            "VernacStartTheoremProof",
            "9a98b7862c4d3829de41f743c0a8827e9a43934a"
        ],
        [
            "by apply/lfunP=> u; rewrite !lfunE /= lker0_lfunVK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0_compVKf aT g : (f \\o (f^-1 \\o g))%VF = g :> 'Hom(aT, vT).",
            "VernacStartTheoremProof",
            "c7fa9ab31f296d455e9a6c0b3e91221d3f822483"
        ],
        [
            "by rewrite comp_lfunA lker0_compfV comp_lfun1l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0_compKf aT g : (f^-1 \\o (f \\o g))%VF = g :> 'Hom(aT, vT).",
            "VernacStartTheoremProof",
            "7db21deb05cd6df0b9cf8af919335dd29d3046ba"
        ],
        [
            "by rewrite comp_lfunA lker0_compVf ?comp_lfun1l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0_compfK rT h : ((h \\o f) \\o f^-1)%VF = h :> 'Hom(vT, rT).",
            "VernacStartTheoremProof",
            "857c58a61560102a0db8e1d32cd7392ffa2f04f6"
        ],
        [
            "by rewrite -comp_lfunA lker0_compfV comp_lfun1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0_compfVK rT h : ((h \\o f^-1) \\o f)%VF = h :> 'Hom(vT, rT).",
            "VernacStartTheoremProof",
            "afd009ccf960009f97fdb87b25681e50db787d0e"
        ],
        [
            "by rewrite -comp_lfunA lker0_compVf ?comp_lfun1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LinAut.",
            "VernacEndSegment",
            "e4523b098c767ec2add94c41a7b60abfbf98ddf2"
        ],
        [
            "Section LinearImageComp.",
            "VernacBeginSection",
            "2eeca024a886f2447c98d13e6da51bd1f6dc138e"
        ],
        [
            "Variables (K : fieldType) (aT vT rT : vectType K).",
            "VernacAssumption",
            "8f924f5d4b03074025577e9f65e1e67d109a4bd8"
        ],
        [
            "Implicit Types (f : 'Hom(aT, vT)) (g : 'Hom(vT, rT)) (U : {vspace aT}).",
            "VernacReserve",
            "85a0a4148a0a524c976eb210caf10a8c2faa0375"
        ],
        [
            "Lemma lim1g U : (\\1 @: U)%VS = U.",
            "VernacStartTheoremProof",
            "98166dae28e80b50ccb3f811b25a54e5b70b02f2"
        ],
        [
            "have /andP[/eqP <- _] := vbasisP U; rewrite limg_span map_id_in // => u _.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "by rewrite lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_comp f g U : ((g \\o f) @: U = g @: (f @: U))%VS.",
            "VernacStartTheoremProof",
            "26ab5c09c4e4cea8e602c5bb4f2b09c344de0a1a"
        ],
        [
            "have /andP[/eqP <- _] := vbasisP U; rewrite !limg_span; congr (span _).",
            "VernacExtend",
            "1e925688e8f7368c64efe6c9559cfc3601316b91"
        ],
        [
            "by rewrite -map_comp; apply/eq_map => u; rewrite lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LinearImageComp.",
            "VernacEndSegment",
            "3fa4beadec32b015684e68a0cc17e32502745ca0"
        ],
        [
            "Section LinearPreimage.",
            "VernacBeginSection",
            "97f2a4b3a74bfcf322ce6b9282b083c9f7663dc7"
        ],
        [
            "Variables (K : fieldType) (aT rT : vectType K).",
            "VernacAssumption",
            "05dbc1c97fd4d4e39095da16d73682926ce8c618"
        ],
        [
            "Implicit Types (f : 'Hom(aT, rT)) (U : {vspace aT}) (V W : {vspace rT}).",
            "VernacReserve",
            "46fa7e3e4ce9ccec2bf01bdf841c1d3abc68dade"
        ],
        [
            "Lemma lpreim_cap_limg f W : (f @^-1: (W :&: limg f))%VS = (f @^-1: W)%VS.",
            "VernacStartTheoremProof",
            "0aa1120194b984d9014f75046c17e9b46f161c1b"
        ],
        [
            "by rewrite /lfun_preim -capvA capvv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lpreim0 f : (f @^-1: 0)%VS = lker f.",
            "VernacStartTheoremProof",
            "9a36bdd4e4f5360a7b79fe8204d0a52a8a5c99d2"
        ],
        [
            "by rewrite /lfun_preim cap0v limg0 add0v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lpreimS f V W : (V <= W)%VS-> (f @^-1: V <= f @^-1: W)%VS.",
            "VernacStartTheoremProof",
            "8678fa39c25125106988de3676416bf1b0626839"
        ],
        [
            "by move=> sVW; rewrite addvS // limgS // capvS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lpreimK f W : (W <= limg f)%VS -> (f @: (f @^-1: W))%VS = W.",
            "VernacStartTheoremProof",
            "1cf88a4615108cac6735927ed04d8ebef10a171f"
        ],
        [
            "move=> sWf; rewrite limg_add (capv_idPl sWf) // -limg_comp.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have /eqP->: (f @: lker f == 0)%VS by rewrite -lkerE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /andP[/eqP defW _] := vbasisP W; rewrite addv0 -defW limg_span.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite map_id_in // => x Xx; rewrite lfunE /= limg_lfunVK //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by apply: span_subvP Xx; rewrite defW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_preim f u W : (f u \\in W) = (u \\in f @^-1: W)%VS.",
            "VernacStartTheoremProof",
            "2fd90aceed4d12620567d974960756a806dab3ad"
        ],
        [
            "apply/idP/idP=> [Wfu | /(memv_img f)]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -lpreim_cap_limg lpreimK ?capvSr // => /memv_capP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[u](addNKr (f^-1%VF (f u))) memv_add ?memv_img //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite memv_cap Wfu memv_img ?memvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite memv_ker addrC linearB /= subr_eq0 limg_lfunVK ?memv_img ?memvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LinearPreimage.",
            "VernacEndSegment",
            "4d74822d8dc8b28f8a22cdd2a424009fbd7cd417"
        ],
        [
            "Arguments lpreimK {K aT rT f} [W] fW.",
            "VernacArguments",
            "2b23f5c298062bf71d41eb3adba6f9007c02301f"
        ],
        [
            "Section LfunAlgebra.",
            "VernacBeginSection",
            "9f0f5981665de73adb70d7fd15a34af3d9840f7a"
        ],
        [
            "Variables (R : comRingType) (vT : vectType R).",
            "VernacAssumption",
            "c2ee677de149d50dc94d501f35849420b8a53688"
        ],
        [
            "Hypothesis vT_proper : Vector.dim vT > 0.",
            "VernacAssumption",
            "004c5638b1763f944b9aa2b8339253d694659294"
        ],
        [
            "Fact lfun1_neq0 : \\1%VF != 0 :> 'End(vT).",
            "VernacStartTheoremProof",
            "e8691e996956b26b716b124bdc13696af9860e5f"
        ],
        [
            "apply/eqP=> /lfunP/(_ (r2v (const_mx 1))); rewrite !lfunE /= => /(canRL r2vK).",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by move=> /rowP/(_ (Ordinal vT_proper))/eqP; rewrite linear0 !mxE oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Prenex Implicits comp_lfunA comp_lfun1l comp_lfun1r comp_lfunDl comp_lfunDr.",
            "VernacExtend",
            "d7fe479087040c22f62ebfb4a23e4be1f8941c05"
        ],
        [
            "Definition lfun_comp_ringMixin := RingMixin comp_lfunA comp_lfun1l comp_lfun1r comp_lfunDl comp_lfunDr lfun1_neq0.",
            "VernacDefinition",
            "905f96a317e62c40a48186b3391ce6d9b526c686"
        ],
        [
            "Definition lfun_comp_ringType := RingType 'End(vT) lfun_comp_ringMixin.",
            "VernacDefinition",
            "3dcaeff51bbc1d90ff0de3e562eb469cdbd39cc9"
        ],
        [
            "Definition lfun_ringMixin : GRing.Ring.mixin_of (lfun_zmodType vT vT) := GRing.converse_ringMixin lfun_comp_ringType.",
            "VernacDefinition",
            "417541b877a7f1af5e7b903f1d865a2c6d1b1b80"
        ],
        [
            "Definition lfun_ringType := Eval hnf in RingType 'End(vT) lfun_ringMixin.",
            "VernacDefinition",
            "c1489f5229416883e9fbb86bb6b7a719832fbe2b"
        ],
        [
            "Definition lfun_lalgType := Eval hnf in [lalgType R of 'End(vT) for LalgType R lfun_ringType (fun k x y => comp_lfunZr k y x)].",
            "VernacDefinition",
            "bcd5f43d9a1725780287569d200cba9e0c52faa5"
        ],
        [
            "Definition lfun_algType := Eval hnf in [algType R of 'End(vT) for AlgType R _ (fun k (x y : lfun_lalgType) => comp_lfunZl k y x)].",
            "VernacDefinition",
            "af0538b6d42b3db21087363a554693a4afbd5e40"
        ],
        [
            "End LfunAlgebra.",
            "VernacEndSegment",
            "c60daba06ba965d0c6f1d60f2c04340ea85941fe"
        ],
        [
            "Section Projection.",
            "VernacBeginSection",
            "b931c437da1ea3045126395bdbc76d3116e4aa1c"
        ],
        [
            "Variables (K : fieldType) (vT : vectType K).",
            "VernacAssumption",
            "ae2931e0fcfddeea462f043df3f53dc914a4cf3f"
        ],
        [
            "Implicit Types U V : {vspace vT}.",
            "VernacReserve",
            "45fa99d867914eef13e8512ae7fc36edeb1f5a13"
        ],
        [
            "Definition daddv_pi U V := Vector.Hom (proj_mx (vs2mx U) (vs2mx V)).",
            "VernacDefinition",
            "506f988edc657b87e419d6529ddcc57067534e87"
        ],
        [
            "Definition projv U := daddv_pi U U^C.",
            "VernacDefinition",
            "c62cd96e49c3abac09b369c5671470f508f4df9d"
        ],
        [
            "Definition addv_pi1 U V := daddv_pi (U :\\: V) V.",
            "VernacDefinition",
            "465b8f44116b26787684eca8f15d5069bbf242c2"
        ],
        [
            "Definition addv_pi2 U V := daddv_pi V (U :\\: V).",
            "VernacDefinition",
            "8b038da5eda0e55573cd2be8bf33ddeb9f0f525e"
        ],
        [
            "Lemma memv_pi U V w : (daddv_pi U V) w \\in U.",
            "VernacStartTheoremProof",
            "d008d6e2e18f89d7f381e505944cd56d3b437357"
        ],
        [
            "by rewrite unlock memvE /subsetv genmxE /= r2vK proj_mx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_proj U w : projv U w \\in U.",
            "VernacStartTheoremProof",
            "fe30c51856d72850439b6828f620d236a6d80abe"
        ],
        [
            "exact: memv_pi.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_pi1 U V w : (addv_pi1 U V) w \\in U.",
            "VernacStartTheoremProof",
            "58863b44ffe9d2dd92b561e0ee3279db0a62ee4a"
        ],
        [
            "by rewrite (subvP (diffvSl U V)) ?memv_pi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_pi2 U V w : (addv_pi2 U V) w \\in V.",
            "VernacStartTheoremProof",
            "e4af73dda8596f918d970dc0dd1419f1a3cd4337"
        ],
        [
            "exact: memv_pi.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma daddv_pi_id U V u : (U :&: V = 0)%VS -> u \\in U -> daddv_pi U V u = u.",
            "VernacStartTheoremProof",
            "00aa289fe79ee92ffec6c22b944e402c909f7845"
        ],
        [
            "move/eqP; rewrite -dimv_eq0 memvE /subsetv /dimv !genmxE mxrank_eq0 => /eqP.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by move=> dxUV Uu; rewrite unlock /= proj_mx_id ?v2rK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma daddv_pi_proj U V w (pi := daddv_pi U V) : (U :&: V = 0)%VS -> pi (pi w) = pi w.",
            "VernacStartTheoremProof",
            "1df66084d242018d7cb6c7424a3284d5ffab7b54"
        ],
        [
            "by move/daddv_pi_id=> -> //; apply: memv_pi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma daddv_pi_add U V w : (U :&: V = 0)%VS -> (w \\in U + V)%VS -> daddv_pi U V w + daddv_pi V U w = w.",
            "VernacStartTheoremProof",
            "9b8037a56bc94cd23be6fcdd69bf836b40721d51"
        ],
        [
            "move/eqP; rewrite -dimv_eq0 memvE /subsetv /dimv !genmxE mxrank_eq0 => /eqP.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by move=> dxUW UVw; rewrite unlock /= -linearD /= add_proj_mx ?v2rK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma projv_id U u : u \\in U -> projv U u = u.",
            "VernacStartTheoremProof",
            "f9aa8af7fc03f96d0a00fc485454340270d411de"
        ],
        [
            "exact: daddv_pi_id (capv_compl _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma projv_proj U w : projv U (projv U w) = projv U w.",
            "VernacStartTheoremProof",
            "884f6b24758c3e9cb995a45c582f9cf5465d8ce5"
        ],
        [
            "exact: daddv_pi_proj (capv_compl _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_projC U w : w - projv U w \\in (U^C)%VS.",
            "VernacStartTheoremProof",
            "13fa7e930c0a86d27178b5f89227872e99a4caac"
        ],
        [
            "rewrite -{1}[w](daddv_pi_add (capv_compl U)) ?addv_complf ?memvf //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addrC addKr memv_pi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_proj U : limg (projv U) = U.",
            "VernacStartTheoremProof",
            "b1f99b74d898204fbb30d65b467f45bcc1f7ab60"
        ],
        [
            "apply/vspaceP=> u; apply/memv_imgP/idP=> [[u1 _ ->] | ]; first exact: memv_proj.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists (projv U u); rewrite ?projv_id ?memv_img ?memvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker_proj U : lker (projv U) = (U^C)%VS.",
            "VernacStartTheoremProof",
            "a68de8b79dddcee6883d308efcb3a3dc31ec2056"
        ],
        [
            "apply/eqP; rewrite eqEdim andbC; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "by rewrite dimv_compl -(limg_ker_dim (projv U) fullv) limg_proj addnK capfv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/subvP=> v; rewrite memv_ker -{2}[v]subr0 => /eqP <-; apply: memv_projC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addv_pi1_proj U V w (pi1 := addv_pi1 U V) : pi1 (pi1 w) = pi1 w.",
            "VernacStartTheoremProof",
            "39fc9b050275004d509229a9db850ed2b843a9f0"
        ],
        [
            "by rewrite daddv_pi_proj // capv_diff.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addv_pi2_id U V v : v \\in V -> addv_pi2 U V v = v.",
            "VernacStartTheoremProof",
            "143c234dea7698270bd1504d11f5e107b3b11851"
        ],
        [
            "by apply: daddv_pi_id; rewrite capvC capv_diff.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addv_pi2_proj U V w (pi2 := addv_pi2 U V) : pi2 (pi2 w) = pi2 w.",
            "VernacStartTheoremProof",
            "983424ecd75f8ce41f9686c84fa1b8a9b5d01171"
        ],
        [
            "by rewrite addv_pi2_id ?memv_pi2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addv_pi1_pi2 U V w : w \\in (U + V)%VS -> addv_pi1 U V w + addv_pi2 U V w = w.",
            "VernacStartTheoremProof",
            "87df1229430227c03833fe5e666c70c886e880d3"
        ],
        [
            "by rewrite -addv_diff; apply: daddv_pi_add; apply: capv_diff.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Sumv_Pi.",
            "VernacBeginSection",
            "80caed74a91595937a726127c02c5766b2de1f91"
        ],
        [
            "Variables (I : eqType) (r0 : seq I) (P : pred I) (Vs : I -> {vspace vT}).",
            "VernacAssumption",
            "2bc2bbef19114dee67b946d6e63efb94f98a5cb6"
        ],
        [
            "Let sumv_pi_rec i := fix loop r := if r is j :: r1 then let V1 := (\\sum_(k <- r1) Vs k)%VS in if j == i then addv_pi1 (Vs j) V1 else (loop r1 \\o addv_pi2 (Vs j) V1)%VF else 0.",
            "VernacDefinition",
            "39f69f8900b5d109395e230d1a8213d96e571d0e"
        ],
        [
            "Notation sumV := (\\sum_(i <- r0 | P i) Vs i)%VS.",
            "VernacSyntacticDefinition",
            "01f683a0a87ab62b25172002c31690415fe2f36a"
        ],
        [
            "Definition sumv_pi_for V of V = sumV := fun i => sumv_pi_rec i (filter P r0).",
            "VernacDefinition",
            "50e03d51a13887e5d0f4c55d785dc0e14f8f793b"
        ],
        [
            "Variables (V : {vspace vT}) (defV : V = sumV).",
            "VernacAssumption",
            "3e461ec39ab05c94a86830aaacfb934f1510e085"
        ],
        [
            "Lemma memv_sum_pi i v : sumv_pi_for defV i v \\in Vs i.",
            "VernacStartTheoremProof",
            "61827448a9ff31868fc9aa60be22033c3193a0b5"
        ],
        [
            "rewrite /sumv_pi_for.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (filter P r0) v => [|j r IHr] v /=; first by rewrite lfunE mem0v.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: eqP => [->|_]; rewrite ?lfunE ?memv_pi1 /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumv_pi_uniq_sum v : uniq (filter P r0) -> v \\in V -> \\sum_(i <- r0 | P i) sumv_pi_for defV i v = v.",
            "VernacStartTheoremProof",
            "4d78e8c7fad357ef7a75a2d4f968a5d0d8d6969a"
        ],
        [
            "rewrite /sumv_pi_for defV -!(big_filter r0 P).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (filter P r0) v => [|i r IHr] v /= => [_ | /andP[r'i /IHr{IHr}IHr]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !big_nil memv0 => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !big_cons eqxx => /addv_pi1_pi2; congr (_ + _ = v).",
            "VernacExtend",
            "d95da12c0095726885402a7f0e86738a30a8e464"
        ],
        [
            "rewrite -[_ v]IHr ?memv_pi2 //; apply: eq_big_seq => j /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by case: eqP => [<- /idPn | _]; rewrite ?lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sumv_Pi.",
            "VernacEndSegment",
            "3896ea15dfaf0454a80c739d89e2bb9da44d002b"
        ],
        [
            "End Projection.",
            "VernacEndSegment",
            "0cff60ee4cd72f54a7bd0f6c592a82d79b650f0a"
        ],
        [
            "Prenex Implicits daddv_pi projv addv_pi1 addv_pi2.",
            "VernacExtend",
            "9ff0150ee016cac4179985b805cd35136f195d93"
        ],
        [
            "Notation sumv_pi V := (sumv_pi_for (erefl V)).",
            "VernacSyntacticDefinition",
            "54548f059afa20e965e91936743124e0361621cd"
        ],
        [
            "Section SumvPi.",
            "VernacBeginSection",
            "64aacbcfb6a1bc9a59e009064deb399fa175fda4"
        ],
        [
            "Variable (K : fieldType) (vT : vectType K).",
            "VernacAssumption",
            "ae2931e0fcfddeea462f043df3f53dc914a4cf3f"
        ],
        [
            "Lemma sumv_pi_sum (I : finType) (P : pred I) Vs v (V : {vspace vT}) (defV : V = (\\sum_(i | P i) Vs i)%VS) : v \\in V -> \\sum_(i | P i) sumv_pi_for defV i v = v :> vT.",
            "VernacStartTheoremProof",
            "51cdc0191356ccc20e261851de892ad88e1484be"
        ],
        [
            "by apply: sumv_pi_uniq_sum; apply: enum_uniq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumv_pi_nat_sum m n (P : pred nat) Vs v (V : {vspace vT}) (defV : V = (\\sum_(m <= i < n | P i) Vs i)%VS) : v \\in V -> \\sum_(m <= i < n | P i) sumv_pi_for defV i v = v :> vT.",
            "VernacStartTheoremProof",
            "19a4923f0d577fc76ef6c5e19cfb50489b39378c"
        ],
        [
            "by apply: sumv_pi_uniq_sum; apply/filter_uniq/iota_uniq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SumvPi.",
            "VernacEndSegment",
            "7a0d6dc3a9147aca27ca6e6c72e49c62c607af27"
        ],
        [
            "Section SubVector.",
            "VernacBeginSection",
            "a7f0b40aa0542470eac090292b55e5c3717b83e5"
        ],
        [
            "Variable (K : fieldType) (vT : vectType K) (U : {vspace vT}).",
            "VernacAssumption",
            "12cd49c4ef60af6f0ccc43db46f1cfc39d52cfb8"
        ],
        [
            "Inductive subvs_of : predArgType := Subvs u & u \\in U.",
            "VernacInductive",
            "3aff005808dd21ebda6f326a51ac1f5cf10c7625"
        ],
        [
            "Definition vsval w := let: Subvs u _ := w in u.",
            "VernacDefinition",
            "36c4e866be8ac5f795b11d58784aaa426c87ba5b"
        ],
        [
            "Canonical subvs_subType := Eval hnf in [subType for vsval].",
            "VernacDefinition",
            "94b31609a978dc128360c97558fcf8b31d8deec4"
        ],
        [
            "Definition subvs_eqMixin := Eval hnf in [eqMixin of subvs_of by <:].",
            "VernacDefinition",
            "11c84c092b3e208b37032e280f978b739fea5c6f"
        ],
        [
            "Canonical subvs_eqType := Eval hnf in EqType subvs_of subvs_eqMixin.",
            "VernacDefinition",
            "0eb19d6d97ed7febc4c006063b5115f0346cd5ba"
        ],
        [
            "Definition subvs_choiceMixin := [choiceMixin of subvs_of by <:].",
            "VernacDefinition",
            "ef84e8a9c6317c412a9d4538ba976dd0c43ade7b"
        ],
        [
            "Canonical subvs_choiceType := ChoiceType subvs_of subvs_choiceMixin.",
            "VernacDefinition",
            "f76b2c0ce18cc0ced8a80b92cbc4c5012adf9898"
        ],
        [
            "Definition subvs_zmodMixin := [zmodMixin of subvs_of by <:].",
            "VernacDefinition",
            "e545c3b3754c76a3d2716942c33112755a76f8eb"
        ],
        [
            "Canonical subvs_zmodType := ZmodType subvs_of subvs_zmodMixin.",
            "VernacDefinition",
            "2014555844ecb7d2427ec69ced4ab269032117bb"
        ],
        [
            "Definition subvs_lmodMixin := [lmodMixin of subvs_of by <:].",
            "VernacDefinition",
            "ddf20d083f3ab4898c2af44a67cf5cc831974754"
        ],
        [
            "Canonical subvs_lmodType := LmodType K subvs_of subvs_lmodMixin.",
            "VernacDefinition",
            "761722b9d27ad4b76ef40fe9eb01e6643c03365b"
        ],
        [
            "Lemma subvsP w : vsval w \\in U.",
            "VernacStartTheoremProof",
            "edb87c0a0d2a2b3c83601d2466f25ef95fa36b95"
        ],
        [
            "exact: valP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subvs_inj : injective vsval.",
            "VernacStartTheoremProof",
            "90247ad76d4a5d458f7e809df6457247c13384e6"
        ],
        [
            "exact: val_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma congr_subvs u v : u = v -> vsval u = vsval v.",
            "VernacStartTheoremProof",
            "95c505c256b1245fdfc262d0e2444cac7e1a52b6"
        ],
        [
            "exact: congr1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vsval_is_linear : linear vsval.",
            "VernacStartTheoremProof",
            "bae2a9e8b5c01747fcb8a5bd7c91072e9455f730"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical vsval_additive := Additive vsval_is_linear.",
            "VernacDefinition",
            "4356a0ed7c9eeedf4fbdc821c292597acc666610"
        ],
        [
            "Canonical vsval_linear := AddLinear vsval_is_linear.",
            "VernacDefinition",
            "80deab991e067936638ce09ee5fe444b3af4e27c"
        ],
        [
            "Fact vsproj_key : unit.",
            "VernacStartTheoremProof",
            "325d1ea266958a9faecb83b2c9eaa2d40f980948"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition vsproj_def u := Subvs (memv_proj U u).",
            "VernacDefinition",
            "8fcacd464af813ae18605a6f7de5298a40378696"
        ],
        [
            "Definition vsproj := locked_with vsproj_key vsproj_def.",
            "VernacDefinition",
            "4b8a4fb8c3aa9a89339f98ffd236d6e790adc463"
        ],
        [
            "Canonical vsproj_unlockable := [unlockable fun vsproj].",
            "VernacDefinition",
            "f0f692b34014521158c9ba46b5ef77bdb87ac7b8"
        ],
        [
            "Lemma vsprojK : {in U, cancel vsproj vsval}.",
            "VernacStartTheoremProof",
            "ebce15edaf17098f8d31e8971c20afc4bfa6ee1e"
        ],
        [
            "by rewrite unlock; apply: projv_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vsvalK : cancel vsval vsproj.",
            "VernacStartTheoremProof",
            "38c38260695534128100c7245d671c0664092657"
        ],
        [
            "by move=> w; apply/val_inj/vsprojK/subvsP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vsproj_is_linear : linear vsproj.",
            "VernacStartTheoremProof",
            "c15326c91abab66bced74e824486dd087970e3a1"
        ],
        [
            "by move=> k w1 w2; apply: val_inj; rewrite unlock /= linearP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical vsproj_additive := Additive vsproj_is_linear.",
            "VernacDefinition",
            "3599678779b86447f5398f04d76b634d43fac8be"
        ],
        [
            "Canonical vsproj_linear := AddLinear vsproj_is_linear.",
            "VernacDefinition",
            "8e85ef243b9e59d9b9fd87e8dfe3f34a4e62def8"
        ],
        [
            "Fact subvs_vect_iso : Vector.axiom (\\dim U) subvs_of.",
            "VernacStartTheoremProof",
            "a1546a1b296bd002ff4e0703d0f5dfca1baeba02"
        ],
        [
            "exists (fun w => \\row_i coord (vbasis U) i (vsval w)).",
            "VernacExtend",
            "263c0e73cada86382b725640438360a2e6039462"
        ],
        [
            "by move=> k w1 w2; apply/rowP=> i; rewrite !mxE linearP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (fun rw : 'rV_(\\dim U) => vsproj (\\sum_i rw 0 i *: (vbasis U)`_i)).",
            "VernacExtend",
            "c7256987d2c3a7d4502172ca2a67cb0ee52a278f"
        ],
        [
            "move=> w /=; congr (vsproj _ = w): (vsvalK w).",
            "VernacExtend",
            "891b4e47d01d65b54df65493918a5af5df35b545"
        ],
        [
            "by rewrite {1}(coord_vbasis (subvsP w)); apply: eq_bigr => i _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> rw; apply/rowP=> i; rewrite mxE vsprojK.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite coord_sum_free ?(basis_free (vbasisP U)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: rpred_sum => j _; rewrite rpredZ ?vbasis_mem ?memt_nth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subvs_vectMixin := VectMixin subvs_vect_iso.",
            "VernacDefinition",
            "d24ba328acf467ffa60450a79f8b113c0a49198a"
        ],
        [
            "Canonical subvs_vectType := VectType K subvs_of subvs_vectMixin.",
            "VernacDefinition",
            "2daa7e2715a828add7833857f4f139f20a3c8ad8"
        ],
        [
            "End SubVector.",
            "VernacEndSegment",
            "5fb27a6aff047ee5244dc736b59edbb99375fa89"
        ],
        [
            "Prenex Implicits vsval vsproj vsvalK.",
            "VernacExtend",
            "097a7b4ae9522dd046be287a05d25166d9048075"
        ],
        [
            "Arguments subvs_inj {K vT U} [x1 x2].",
            "VernacArguments",
            "0fb1f1b1aba72fdbb32355a420f9f1f77cc5ac5d"
        ],
        [
            "Arguments vsprojK {K vT U} [x] Ux.",
            "VernacArguments",
            "95da0e078164ce84ed4b2ec18be1befc4fe692bb"
        ],
        [
            "Section MatrixVectType.",
            "VernacBeginSection",
            "f092ff369cd165fb9992012bb216fcb47a282254"
        ],
        [
            "Variables (R : ringType) (m n : nat).",
            "VernacAssumption",
            "3eba95e7117800fbf47ee803018086719cf39451"
        ],
        [
            "Fact matrix_vect_iso : Vector.axiom (m * n) 'M[R]_(m, n).",
            "VernacStartTheoremProof",
            "de9aea6cc94f190bec52d9c651066282984ce49b"
        ],
        [
            "exists mxvec => /=; first exact: linearP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists vec_mx; [apply: mxvecK | apply: vec_mxK].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition matrix_vectMixin := VectMixin matrix_vect_iso.",
            "VernacDefinition",
            "e467080bfee9d146e30bec385a11225b29c541f3"
        ],
        [
            "Canonical matrix_vectType := VectType R 'M[R]_(m, n) matrix_vectMixin.",
            "VernacDefinition",
            "373ac54d94255a99a7814b22287d163ba265c077"
        ],
        [
            "End MatrixVectType.",
            "VernacEndSegment",
            "0d2a6f2ef802133d46ed23794430e2dc5802d66c"
        ],
        [
            "Section RegularVectType.",
            "VernacBeginSection",
            "f2f8c9225e5f33c00fd3174e0fee15de1337ada0"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Fact regular_vect_iso : Vector.axiom 1 R^o.",
            "VernacStartTheoremProof",
            "109e1dfc87c59cb9eeecd3da52735899897149ef"
        ],
        [
            "exists (fun a => a%:M) => [a b c|]; first by rewrite rmorphD scale_scalar_mx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists (fun A : 'M_1 => A 0 0) => [a | A]; rewrite ?mxE // -mx11_scalar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition regular_vectMixin := VectMixin regular_vect_iso.",
            "VernacDefinition",
            "0d8406385e34ffca36426455b47d95164dce3e0d"
        ],
        [
            "Canonical regular_vectType := VectType R R^o regular_vectMixin.",
            "VernacDefinition",
            "f497f64ed0fafea0eaa7b7c373b329587d8b551a"
        ],
        [
            "End RegularVectType.",
            "VernacEndSegment",
            "6f78866333cbb672519eda57f1872aeef5cc32f3"
        ],
        [
            "Section ProdVector.",
            "VernacBeginSection",
            "80324461eba27f647d63e5c1c8f11b3b30274940"
        ],
        [
            "Variables (R : ringType) (vT1 vT2 : vectType R).",
            "VernacAssumption",
            "0f4c488baed2c6912f664e323b37ba534e83a175"
        ],
        [
            "Fact pair_vect_iso : Vector.axiom (Vector.dim vT1 + Vector.dim vT2) (vT1 * vT2).",
            "VernacStartTheoremProof",
            "ddd45dab7e4e34f97d2117214b90a27a93d813eb"
        ],
        [
            "pose p2r (u : vT1 * vT2) := row_mx (v2r u.1) (v2r u.2).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose r2p w := (r2v (lsubmx w) : vT1, r2v (rsubmx w) : vT2).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have r2pK : cancel r2p p2r by move=> w; rewrite /p2r !r2vK hsubmxK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have p2rK : cancel p2r r2p by case=> u v; rewrite /r2p row_mxKl row_mxKr !v2rK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have r2p_lin: linear r2p by move=> a u v; congr (_ , _); rewrite /= !linearP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists p2r; [apply: (@can2_linear _ _ _ (Linear r2p_lin)) | exists r2p].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pair_vectMixin := VectMixin pair_vect_iso.",
            "VernacDefinition",
            "a4eaf0a1872982ca3ad27f1987b0d06b29841a11"
        ],
        [
            "Canonical pair_vectType := VectType R (vT1 * vT2) pair_vectMixin.",
            "VernacDefinition",
            "101493cc8dc1a7d25d1582ad936b19a07bcc0bab"
        ],
        [
            "End ProdVector.",
            "VernacEndSegment",
            "19d5f5612b67a132e4e6c50b996a09ebc50d5cce"
        ],
        [
            "Section FunVectType.",
            "VernacBeginSection",
            "17ee2ecb1054c43081dbe45f4fcbdecbfb8f6514"
        ],
        [
            "Variable (I : finType) (R : ringType) (vT : vectType R).",
            "VernacAssumption",
            "b36145296f024e715cd277dbc7a032ede9da997e"
        ],
        [
            "Fact ffun_vect_iso : Vector.axiom (#|I| * Vector.dim vT) {ffun I -> vT}.",
            "VernacStartTheoremProof",
            "11092ee4ba482b219006156b38eb8d12ad78316b"
        ],
        [
            "pose fr (f : {ffun I -> vT}) := mxvec (\\matrix_(i < #|I|) v2r (f (enum_val i))).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "exists fr => /= [k f g|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /fr -linearP; congr (mxvec _); apply/matrixP=> i j.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "by rewrite !mxE /= !ffunE linearP !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (fun r => [ffun i => r2v (row (enum_rank i) (vec_mx r)) : vT]) => [g|r].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply/ffunP=> i; rewrite ffunE mxvecK rowK v2rK enum_rankK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/(canLR vec_mxK)/matrixP=> i j; rewrite mxE ffunE r2vK enum_valK mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ffun_vectMixin := VectMixin ffun_vect_iso.",
            "VernacDefinition",
            "ec5b371f3081a59f848e78827d4014048185a66e"
        ],
        [
            "Canonical ffun_vectType := VectType R {ffun I -> vT} ffun_vectMixin.",
            "VernacDefinition",
            "52006bac71cfaca3fd38ecda1fbc077320691896"
        ],
        [
            "End FunVectType.",
            "VernacEndSegment",
            "46003dbadb93c0d5e428704363e9ea82d0e94709"
        ],
        [
            "Canonical exp_vectType (K : fieldType) (vT : vectType K) n := [vectType K of vT ^ n].",
            "VernacDefinition",
            "4ed82ac28758cbf2252517b2556d9ca2b0136690"
        ],
        [
            "Section Solver.",
            "VernacBeginSection",
            "7f99c007eb2a37eadc26ec7bef27848a2d6bb81b"
        ],
        [
            "Variable (K : fieldType) (vT : vectType K).",
            "VernacAssumption",
            "ae2931e0fcfddeea462f043df3f53dc914a4cf3f"
        ],
        [
            "Variables (n : nat) (lhs : n.-tuple 'End(vT)) (rhs : n.-tuple vT).",
            "VernacAssumption",
            "54342ebcb2b29632e3e2db17565c83a453217668"
        ],
        [
            "Let lhsf u := finfun ((tnth lhs)^~ u).",
            "VernacDefinition",
            "3eb8a0b2d964e4813c5f5310a887d986f743b9a0"
        ],
        [
            "Definition vsolve_eq U := finfun (tnth rhs) \\in (linfun lhsf @: U)%VS.",
            "VernacDefinition",
            "ada6ecb131bfe51c39e603dd60fe3371573e344e"
        ],
        [
            "Lemma vsolve_eqP (U : {vspace vT}) : reflect (exists2 u, u \\in U & forall i, tnth lhs i u = tnth rhs i) (vsolve_eq U).",
            "VernacStartTheoremProof",
            "2ebaab3e75c4e4e2924ded8d94918a1fcbe9d80d"
        ],
        [
            "have lhsZ: linear lhsf by move=> a u v; apply/ffunP=> i; rewrite !ffunE linearP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (iffP memv_imgP) => [] [u Uu sol_u]; exists u => //.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by move=> i; rewrite -[tnth rhs i]ffunE sol_u (lfunE (Linear lhsZ)) ffunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/ffunP=> i; rewrite (lfunE (Linear lhsZ)) !ffunE sol_u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Solver.",
            "VernacEndSegment",
            "c4ef20cc073f767a36fa19724a694fae7c7619e1"
        ]
    ],
    "proofs": [
        {
            "name": "v2r_subproof",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "by case: vT => T [bT []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r2v_subproof",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "have r2vP r: {v | v2r v = r}.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: sig_eqW; have [v _ vK] := v2r_bij; exists (v r).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists (fun r => sval (r2vP r)) => r; case: (r2vP r).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r2vK",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "exact: (svalP r2v_subproof).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r2v_inj",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "exact: can_inj r2vK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "v2r_inj",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "exact: can_inj v2rK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "b2mxK",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "by rewrite rowK v2rK -tnth_nth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_vs2mx",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite /vs2mx; case: U.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx2vs_subproof",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "by rewrite genmx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vs2mxK",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "by move=> v; apply: val_inj; rewrite /= gen_vs2mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx2vsK",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "exact: genmxE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_key",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vs2mxP",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "by rewrite (sameP genmxP eqP) !gen_vs2mx; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memvK",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "by rewrite -genmxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_r2v",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "by rewrite memvK r2vK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vs2mx0",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "by rewrite /= linear0 genmx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vs2mxD",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "by rewrite /= genmx_adds !gen_vs2mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vs2mxI",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "by rewrite /= genmx_cap !gen_vs2mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vs2mxF",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "by rewrite /= genmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_b2mx",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "by rewrite -tnth_nth rowK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_b2mx",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock tvalK; case: _ / (esym _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_b2mx",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "rewrite mulmx_sum_row linear_sum; apply: eq_bigr => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite row_b2mx linearZ /= v2rK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_b2mx",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "by rewrite -mul_b2mx; apply: eq_bigr => i _; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_b2mx",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "by rewrite /free /dimv span_b2mx genmxE size_tuple.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vspace_key",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memvE",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vlineP",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [|[k ->]]; rewrite memvK genmxE ?linearZ ?scalemx_sub //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case/sub_rVP=> k; rewrite -linearZ => /v2r_inj->; exists k.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_submod_closed",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "split=> [|a u v]; rewrite !memvK ?linear0 ?sub0mx // => Uu Uv.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "by rewrite linearP addmx_sub ?scalemx_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem0v",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "exact : rpred0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memvN",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "exact: rpredN.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memvD",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "exact : rpredD.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memvB",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "exact : rpredB.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memvZ",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "exact : rpredZ.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_suml",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "exact: rpred_sum.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_line",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "by apply/vlineP; exists 1; rewrite scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvP",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "apply: (iffP rV_subP) => sU12 u.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !memvE /subsetv !genmxE => /sU12.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by have:= sU12 (r2v u); rewrite !memvE /subsetv !genmxE r2vK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvv",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "exact/subvP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv_trans",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "by move=> U V W /subvP sUV /subvP sVW; apply/subvP=> u /sUV/sVW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv_anti",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "by move=> U V; apply/vs2mxP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqEsubv",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "by apply/eqP/idP=> [-> | /subv_anti//]; rewrite subvv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub0v",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "exact: mem0v.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv0",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "by rewrite eqEsubv sub0v andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv0",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "by apply/idP/eqP=> [/vlineP[k ->] | ->]; rewrite (scaler0, mem0v).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvf",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "by rewrite /subsetv vs2mxF submx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memvf",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "exact: subvf.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_pick",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "by rewrite mem_r2v nz_row_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vpick0",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "by rewrite -memv0 mem_r2v -subv0 /subV vs2mx0 !submx0 nz_row_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv_add",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV vs2mxD addsmx_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addvS",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV !vs2mxD; apply: addsmxS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addvSl",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV vs2mxD addsmxSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addvSr",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV vs2mxD addsmxSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addvC",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "by move=> U V; apply/vs2mxP; rewrite !vs2mxD addsmxC submx_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addvA",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "by move=> U V W; apply/vs2mxP; rewrite !vs2mxD addsmxA submx_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv_idPl",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV (sameP addsmx_idPl eqmxP) -vs2mxD; apply: vs2mxP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv_idPr",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "by rewrite addvC; apply: addv_idPl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addvv",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/addv_idPl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add0v",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/addv_idPr/sub0v.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv0",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/addv_idPl/sub0v.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumfv",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/addv_idPl/subvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addvf",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/addv_idPr/subvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_add",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "by rewrite !memvK genmxE linearD; apply: addmx_sub_adds.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumv_sup",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "by move=> Pi0 /subv_trans-> //; rewrite (bigD1 i0) ?addvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv_sumP",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [sUV i Pi | sUV].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply: subv_trans sUV; apply: sumv_sup Pi _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by elim/big_rec: _ => [|i W Pi sWV]; rewrite ?sub0v // subv_add sUV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_sumr",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "by move=> Uv; apply/rpred_sum=> i Pi; apply/(sumv_sup i Pi)/Uv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv_cap",
            "line_nb": 404,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV vs2mxI sub_capmx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capvS",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV !vs2mxI; apply: capmxS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capvSl",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV vs2mxI capmxSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capvSr",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV vs2mxI capmxSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capvC",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "by move=> U V; apply/vs2mxP; rewrite !vs2mxI capmxC submx_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capvA",
            "line_nb": 419,
            "steps": [
                {
                    "command": [
                        "by move=> U V W; apply/vs2mxP; rewrite !vs2mxI capmxA submx_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capv_idPl",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV(sameP capmx_idPl eqmxP) -vs2mxI; apply: vs2mxP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capv_idPr",
            "line_nb": 425,
            "steps": [
                {
                    "command": [
                        "by rewrite capvC; apply: capv_idPl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capvv",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/capv_idPl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cap0v",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/capv_idPl/sub0v.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capv0",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/capv_idPr/sub0v.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capfv",
            "line_nb": 437,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/capv_idPr/subvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capvf",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "by move=> U; apply/capv_idPl/subvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_cap",
            "line_nb": 445,
            "steps": [
                {
                    "command": [
                        "by rewrite !memvE subv_cap.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_capP",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "by rewrite memv_cap; apply: andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vspace_modl",
            "line_nb": 451,
            "steps": [
                {
                    "command": [
                        "by move=> sUV; apply/vs2mxP; rewrite !(vs2mxD, vs2mxI); apply/eqmxP/matrix_modl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vspace_modr",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "by rewrite -!(addvC W) !(capvC U); apply: vspace_modl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bigcapv_inf",
            "line_nb": 460,
            "steps": [
                {
                    "command": [
                        "by move=> Pi0; apply: subv_trans; rewrite (bigD1 i0) ?capvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv_bigcapP",
            "line_nb": 463,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [sUV i Pi | sUV].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subv_trans sUV) ?(bigcapv_inf Pi).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by elim/big_rec: _ => [|i W Pi]; rewrite ?subvf // subv_cap sUV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv_complf",
            "line_nb": 469,
            "steps": [
                {
                    "command": [
                        "apply/vs2mxP; rewrite vs2mxD -gen_vs2mx -genmx_adds !genmxE submx1 sub1mx.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "exact: addsmx_compl_full.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capv_compl",
            "line_nb": 473,
            "steps": [
                {
                    "command": [
                        "apply/val_inj; rewrite [val]/= vs2mx0 vs2mxI -gen_vs2mx -genmx_cap.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite capmx_compl genmx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diffvSl",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "by rewrite /subV genmxE diffmxSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capv_diff",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "apply/val_inj; rewrite [val]/= vs2mx0 vs2mxI -(gen_vs2mx V) -genmx_cap.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite capmx_diff genmx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv_diff_cap",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "apply/vs2mxP; rewrite vs2mxD -genmx_adds !genmxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "exact/eqmxP/addsmx_diff_cap_eq.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv_diff",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}(addv_diff_cap U V) -addvA (addv_idPr (capvSr U V)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv0",
            "line_nb": 491,
            "steps": [
                {
                    "command": [
                        "by rewrite /dimv vs2mx0 mxrank0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_eq0",
            "line_nb": 494,
            "steps": [
                {
                    "command": [
                        "by rewrite /dimv /= mxrank_eq0 {2}/eq_op /= linear0 genmx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimvf",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "by rewrite /dimv vs2mxF mxrank1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dim_vline",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "by rewrite /dimv mxrank_gen rank_rV (can2_eq v2rK r2vK) linear0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimvS",
            "line_nb": 503,
            "steps": [
                {
                    "command": [
                        "exact: mxrankS.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_leqif_sup",
            "line_nb": 506,
            "steps": [
                {
                    "command": [
                        "exact: mxrank_leqif_sup.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_leqif_eq",
            "line_nb": 509,
            "steps": [
                {
                    "command": [
                        "by rewrite eqEsubv; apply: mxrank_leqif_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqEdim",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "by apply/idP/andP=> [/eqP | [/dimv_leqif_eq/geq_leqif]] ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_compl",
            "line_nb": 515,
            "steps": [
                {
                    "command": [
                        "by rewrite dimvf /dimv mxrank_gen mxrank_compl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_cap_compl",
            "line_nb": 518,
            "steps": [
                {
                    "command": [
                        "by rewrite /dimv !mxrank_gen mxrank_cap_compl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_sum_cap",
            "line_nb": 521,
            "steps": [
                {
                    "command": [
                        "by rewrite /dimv !mxrank_gen mxrank_sum_cap.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_disjoint_sum",
            "line_nb": 524,
            "steps": [
                {
                    "command": [
                        "by move=> dxUV; rewrite -dimv_sum_cap dxUV dimv0 addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_add_leqif",
            "line_nb": 527,
            "steps": [
                {
                    "command": [
                        "by rewrite /dimv /subV !mxrank_gen vs2mx0 genmxE; apply: mxrank_adds_leqif.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diffv_eq0",
            "line_nb": 530,
            "steps": [
                {
                    "command": [
                        "rewrite -dimv_eq0 -(eqn_add2l (\\dim (U :&: V))) addn0 dimv_cap_compl eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (dimv_leqif_eq (capvSl _ _)) (sameP capv_idPl eqP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_leq_sum",
            "line_nb": 534,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ => [|i d vs _ le_vs_d]; first by rewrite dim_vline eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: (leq_trans (dimv_add_leqif _ _)); rewrite leq_add2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vs2mx_sum_expr_subproof",
            "line_nb": 540,
            "steps": [
                {
                    "command": [
                        "by case: S.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "binary_addv_subproof",
            "line_nb": 550,
            "steps": [
                {
                    "command": [
                        "by rewrite vs2mxD; apply: proper_mxsumP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nary_addv_subproof",
            "line_nb": 557,
            "steps": [
                {
                    "command": [
                        "by rewrite vs2mx_sum; apply: proper_mxsumP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "directvE",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "directvP",
            "line_nb": 568,
            "steps": [
                {
                    "command": [
                        "exact: eqnP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "directv_trivial",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "exact: eqxx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv_sum_leqif",
            "line_nb": 574,
            "steps": [
                {
                    "command": [
                        "rewrite directvE; case: S => [[U] [d] /= defUd]; split=> //=.",
                        "VernacExtend",
                        "2253759ff5c580854290fce82296a80357452125"
                    ]
                },
                {
                    "command": [
                        "rewrite /dimv; elim: {1}_ {U}_ d / defUd => // m1 m2 A1 A2 r1 r2 _ leA1 _ leA2.",
                        "VernacExtend",
                        "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans (leq_add leA1 leA2); rewrite mxrank_adds_leqif.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "directvEgeq",
            "line_nb": 579,
            "steps": [
                {
                    "command": [
                        "by rewrite leq_eqVlt ltnNge eq_sym !dimv_sum_leqif orbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "directv_addE",
            "line_nb": 583,
            "steps": [
                {
                    "command": [
                        "by rewrite /directv_def /dimv vs2mxD -mxdirectE mxdirect_addsE -vs2mxI -vs2mx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "directv_addP",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "by rewrite directv_addE !directv_trivial; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "directv_add_unique",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "apply: (iffP directv_addP) => [dxUV u1 u2 v1 v2 Uu1 Uu2 Vv1 Vv2 | dxUV].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply/idP/idP=> [| /eqP[-> ->] //]; rewrite -subr_eq0 opprD addrACA addr_eq0.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "move/eqP=> eq_uv; rewrite xpair_eqE -subr_eq0 eq_uv oppr_eq0 subr_eq0 andbb.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -subr_eq0 -memv0 -dxUV memv_cap -memvN -eq_uv !memvB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -subv0; apply/subvP=> v /memv_capP[U1v U2v].",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv0 -[v == 0]andbb {1}eq_sym -xpair_eqE -dxUV ?mem0v // addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "directv_sumE",
            "line_nb": 604,
            "steps": [
                {
                    "command": [
                        "by rewrite !directvE /= /dimv 2!{1}vs2mx_sum -!mxdirectE; apply: mxdirect_sumsE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "directv_sum_independent",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "apply: (iffP directv_sumP) => [dxU us Uu u_0 i Pi | dxU i Pi].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -memv0 -(dxU i Pi) memv_cap Uu //= -memvN -sub0r -{1}u_0.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (bigD1 i) //= addrC addKr memv_sumr // => j /andP[/Uu].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -subv0; apply/subvP=> v.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "rewrite memv_cap memv0 => /andP[Uiv /memv_sumP[us Uu Dv]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have: \\sum_(j | P j) [eta us with i |-> - v] j = 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (bigD1 i) //= eqxx {1}Dv addrC -sumrB big1 // => j /andP[_ i'j].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negPf i'j) subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/dxU/(_ i Pi); rewrite /= eqxx -oppr_eq0 => -> // j Pj.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by have [-> | i'j] := altP eqP; rewrite ?memvN // Uu ?Pj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_span",
            "line_nb": 628,
            "steps": [
                {
                    "command": [
                        "by case/seq_tnthP=> i {v}->; rewrite unlock memvK genmxE (eq_row_sub i) // rowK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_span1",
            "line_nb": 631,
            "steps": [
                {
                    "command": [
                        "by rewrite memv_span ?mem_head.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dim_span",
            "line_nb": 634,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock /dimv genmxE rank_leq_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_subvP",
            "line_nb": 637,
            "steps": [
                {
                    "command": [
                        "rewrite /subV [@span _ _]unlock genmxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: (iffP row_subP) => /= [sXU | sXU i].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by move=> _ /seq_tnthP[i ->]; have:= sXU i; rewrite rowK memvK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rowK -memvK sXU ?mem_tnth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_span",
            "line_nb": 643,
            "steps": [
                {
                    "command": [
                        "by move=> sXY; apply/span_subvP=> v /sXY/memv_span.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_span",
            "line_nb": 646,
            "steps": [
                {
                    "command": [
                        "by move=> eqXY; apply: subv_anti; rewrite !sub_span // => u; rewrite eqXY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_def",
            "line_nb": 649,
            "steps": [
                {
                    "command": [
                        "apply/subv_anti/andP; split.",
                        "VernacExtend",
                        "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
                    ]
                },
                {
                    "command": [
                        "by apply/span_subvP=> v Xv; rewrite (big_rem v) // memvE addvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite big_tnth; apply/subv_sumP=> i _; rewrite -memvE memv_span ?mem_tnth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_nil",
            "line_nb": 654,
            "steps": [
                {
                    "command": [
                        "by rewrite span_def big_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_seq1",
            "line_nb": 657,
            "steps": [
                {
                    "command": [
                        "by rewrite span_def big_seq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_cons",
            "line_nb": 660,
            "steps": [
                {
                    "command": [
                        "by rewrite !span_def big_cons.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_cat",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "by rewrite !span_def big_cat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coord_is_scalar",
            "line_nb": 669,
            "steps": [
                {
                    "command": [
                        "by move=> k u v; rewrite unlock linearP mulmxDl -scalemxAl !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coord_span",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "rewrite memvK span_b2mx genmxE => Xv.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite unlock_with mul_b2mx mulmxKpV ?v2rK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coord0",
            "line_nb": 678,
            "steps": [
                {
                    "command": [
                        "rewrite unlock /pinvmx rank_rV; case: negP => [[] | _].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP/rowP=> j; rewrite !mxE (tnth_nth 0) /= linear0 mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite pid_mx_0 !(mulmx0, mul0mx) mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_free",
            "line_nb": 683,
            "steps": [
                {
                    "command": [
                        "by rewrite /free span_nil dimv0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "seq1_free",
            "line_nb": 686,
            "steps": [
                {
                    "command": [
                        "by rewrite /free span_seq1 dim_vline; case: (~~ _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_free",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "by move=> eqX; rewrite /free (perm_eq_size eqX) (eq_span (perm_eq_mem eqX)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_directv",
            "line_nb": 692,
            "steps": [
                {
                    "command": [
                        "have leXi i (v := tnth (in_tuple X) i): true -> \\dim <[v]> <= 1 ?= iff (v != 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -seq1_free -span_seq1 => _; apply/leqif_eq/dim_span.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [_ /=] := leqif_trans (dimv_sum_leqif _) (leqif_sum leXi).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite sum1_card card_ord !directvE /= /free andbC span_def !(big_tnth _ _ X).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by congr (_ = _ && _); rewrite -has_pred1 -all_predC -big_all big_tnth big_andE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_not0",
            "line_nb": 699,
            "steps": [
                {
                    "command": [
                        "by rewrite free_directv andbC => /andP[_ /memPn]; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeP",
            "line_nb": 702,
            "steps": [
                {
                    "command": [
                        "rewrite free_b2mx; apply: (iffP idP) => [t_free k kt0 i | t_free].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "suffices /rowP/(_ i): \\row_i k i = 0 by rewrite !mxE.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by apply/(row_free_inj t_free)/r2v_inj; rewrite mul0mx -lin_b2mx kt0 linear0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -kermx_eq0; apply/rowV0P=> rk /sub_kermxP kt0.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by apply/rowP=> i; rewrite mxE {}t_free // mul_b2mx kt0 linear0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coord_free",
            "line_nb": 709,
            "steps": [
                {
                    "command": [
                        "rewrite unlock free_b2mx => /row_freeP[Ct CtK]; rewrite -row_b2mx.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite -row_mul -[pinvmx _]mulmx1 -CtK 2!mulmxA mulmxKpV // CtK !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coord_sum_free",
            "line_nb": 713,
            "steps": [
                {
                    "command": [
                        "move=> Xfree; rewrite linear_sum (bigD1 j) ?linearZ //= coord_free // eqxx.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite mulr1 big1 ?addr0 // => i /negPf j'i.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite linearZ /= coord_free // j'i mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cat_free",
            "line_nb": 718,
            "steps": [
                {
                    "command": [
                        "rewrite !free_directv mem_cat directvE /= !big_cat -directvE directv_addE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_or -!andbA; do !bool_congr; rewrite -!span_def.",
                        "VernacExtend",
                        "77727a14a632d1fc59f513955776bf7c29b79629"
                    ]
                },
                {
                    "command": [
                        "by rewrite (sameP eqP directv_addP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "catl_free",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "by rewrite cat_free => /and3P[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "catr_free",
            "line_nb": 726,
            "steps": [
                {
                    "command": [
                        "by rewrite cat_free => /and3P[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_free",
            "line_nb": 729,
            "steps": [
                {
                    "command": [
                        "rewrite -(perm_free (etrans (perm_filterC p X _) (perm_eq_refl X))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: catl_free.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_cons",
            "line_nb": 733,
            "steps": [
                {
                    "command": [
                        "rewrite (cat_free [:: v]) seq1_free directvEgeq /= span_seq1 dim_vline.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: eqP => [-> | _] /=; first by rewrite mem0v.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite andbC ltnNge (geq_leqif (dimv_leqif_sup _)) ?addvSr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite subv_add subvv andbT -memvE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeE",
            "line_nb": 739,
            "steps": [
                {
                    "command": [
                        "case: X => X /= /eqP <-{n}; rewrite -(big_andE xpredT) /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "elim: X => [|v X IH_X] /=; first by rewrite nil_free big_ord0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite free_cons IH_X big_ord_recl drop0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeNE",
            "line_nb": 744,
            "steps": [
                {
                    "command": [
                        "by rewrite freeE -negb_exists negbK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_uniq",
            "line_nb": 747,
            "steps": [
                {
                    "command": [
                        "elim: X => //= v b IH_X; rewrite free_cons => /andP[X'v /IH_X->].",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "by rewrite (contra _ X'v) // => /memv_span.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_span",
            "line_nb": 751,
            "steps": [
                {
                    "command": [
                        "rewrite -{2}[X]in_tupleE => freeX /coord_span def_v.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "pose k x := oapp (fun i => coord (in_tuple X) i v) 0 (insub (index x X)).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "exists k => [|k1 {def_v}def_v _ /(nthP 0)[i ltiX <-]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /sumX (big_nth 0) big_mkord def_v; apply: eq_bigr => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite /k index_uniq ?free_uniq // valK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /k /= index_uniq ?free_uniq // insubT //= def_v.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite /sumX (big_nth 0) big_mkord coord_sum_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linear_of_free",
            "line_nb": 760,
            "steps": [
                {
                    "command": [
                        "pose f u := \\sum_i coord (in_tuple X) i u *: fX`_i.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have lin_f: linear f.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> k u v; rewrite scaler_sumr -big_split; apply: eq_bigr => i _.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= scalerA -scalerDl linearP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (Linear lin_f) => freeX eq_szX.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/esym/(@eq_from_nth _ 0); rewrite ?size_map eq_szX // => i ltiX.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "rewrite (nth_map 0) //= /f (bigD1 (Ordinal ltiX)) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite big1 => [|j /negbTE neqji]; rewrite (coord_free (Ordinal _)) //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqxx scale1r addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym neqji scale0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_basis",
            "line_nb": 772,
            "steps": [
                {
                    "command": [
                        "by case/andP=> /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "basis_free",
            "line_nb": 775,
            "steps": [
                {
                    "command": [
                        "by case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coord_basis",
            "line_nb": 778,
            "steps": [
                {
                    "command": [
                        "by move/span_basis <-; apply: coord_span.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_basis",
            "line_nb": 781,
            "steps": [
                {
                    "command": [
                        "by rewrite /basis_of span_nil eqxx nil_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "seq1_basis",
            "line_nb": 784,
            "steps": [
                {
                    "command": [
                        "by move=> nz_v; rewrite /basis_of span_seq1 // eqxx seq1_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "basis_not0",
            "line_nb": 787,
            "steps": [
                {
                    "command": [
                        "by move/basis_free/free_not0; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "basis_mem",
            "line_nb": 790,
            "steps": [
                {
                    "command": [
                        "by move/span_basis=> <- /memv_span.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cat_basis",
            "line_nb": 793,
            "steps": [
                {
                    "command": [
                        "move=> dxUV /andP[/eqP defU freeX] /andP[/eqP defV freeY].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite /basis_of span_cat cat_free defU defV // eqxx freeX freeY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_basis",
            "line_nb": 797,
            "steps": [
                {
                    "command": [
                        "by case/andP=> /eqP <- /eqnP->; apply: size_tuple.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "basisEfree",
            "line_nb": 806,
            "steps": [
                {
                    "command": [
                        "by rewrite andbC; apply: andb_id2r => freeX; rewrite eqEdim (eqnP freeX).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vbasisP",
            "line_nb": 813,
            "steps": [
                {
                    "command": [
                        "rewrite /basis_of free_b2mx span_b2mx (sameP eqP (vs2mxP _ _)) !genmxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have ->: b2mx (vbasis U) = row_base (vs2mx U).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/row_matrixP=> i; rewrite unlock rowK tnth_mktuple r2vK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite row_base_free !eq_row_base submx_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vbasis_mem",
            "line_nb": 819,
            "steps": [
                {
                    "command": [
                        "exact: (basis_mem (vbasisP _)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coord_vbasis",
            "line_nb": 822,
            "steps": [
                {
                    "command": [
                        "exact: coord_basis (vbasisP U).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "span_bigcat",
            "line_nb": 827,
            "steps": [
                {
                    "command": [
                        "by rewrite (big_morph _ span_cat span_nil).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bigcat_free",
            "line_nb": 830,
            "steps": [
                {
                    "command": [
                        "rewrite /free directvE /= span_bigcat => /directvP-> /= freeXs.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (big_morph _ (@size_cat _) (erefl _)) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP/eq_bigr=> i /freeXs/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bigcat_basis",
            "line_nb": 835,
            "steps": [
                {
                    "command": [
                        "move=> dxU XsUs; rewrite /basis_of span_bigcat.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have defUs i: P i -> span (Xs i) = Us i by case/XsUs/andP=> /eqP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_bigr _ defUs) eqxx bigcat_free // => [|_ /XsUs/andP[]//].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/directvP; rewrite /= (eq_bigr _ defUs) (directvP dxU) /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply/eq_bigr=> i /defUs->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_key",
            "line_nb": 871,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_img_key",
            "line_nb": 891,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_is_linear",
            "line_nb": 911,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock; apply: linearP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfunE",
            "line_nb": 916,
            "steps": [
                {
                    "command": [
                        "by move=> v; rewrite 2!unlock /= mul_rV_lin1 /= !v2rK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_of_lfunK",
            "line_nb": 919,
            "steps": [
                {
                    "command": [
                        "move=> f; apply/val_inj/row_matrixP=> i.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2!unlock /= !rowE mul_rV_lin1 /= !r2vK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfunP",
            "line_nb": 923,
            "steps": [
                {
                    "command": [
                        "split=> [eq_fg | -> //]; rewrite -[f]fun_of_lfunK -[g]fun_of_lfunK unlock.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by apply/val_inj/row_matrixP=> i; rewrite !rowE !mul_rV_lin1 /= eq_fg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_addA",
            "line_nb": 930,
            "steps": [
                {
                    "command": [
                        "by move=> f g h; apply/lfunP=> v; rewrite !lfunE /= !lfunE addrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_addC",
            "line_nb": 933,
            "steps": [
                {
                    "command": [
                        "by move=> f g; apply/lfunP=> v; rewrite !lfunE /= addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_add0",
            "line_nb": 936,
            "steps": [
                {
                    "command": [
                        "by move=> f; apply/lfunP=> v; rewrite lfunE /= lfunE add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_addN",
            "line_nb": 939,
            "steps": [
                {
                    "command": [
                        "by move=> f; apply/lfunP=> v; rewrite !lfunE /= lfunE addNr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_lfunE",
            "line_nb": 944,
            "steps": [
                {
                    "command": [
                        "exact: lfunE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_lfunE",
            "line_nb": 947,
            "steps": [
                {
                    "command": [
                        "exact: lfunE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_lfunE",
            "line_nb": 950,
            "steps": [
                {
                    "command": [
                        "exact: lfunE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_lfunE",
            "line_nb": 953,
            "steps": [
                {
                    "command": [
                        "by elim/big_rec2: _ => [|i _ f _ <-]; rewrite lfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_scaleA",
            "line_nb": 963,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> v; rewrite !lfunE /= lfunE scalerA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_scale1",
            "line_nb": 966,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> v; rewrite lfunE /= scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_scaleDr",
            "line_nb": 969,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> v; rewrite !lfunE /= !lfunE scalerDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_scaleDl",
            "line_nb": 972,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> v; rewrite !lfunE /= !lfunE scalerDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_lfunE",
            "line_nb": 977,
            "steps": [
                {
                    "command": [
                        "exact: lfunE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_vect_iso",
            "line_nb": 980,
            "steps": [
                {
                    "command": [
                        "exists (mxvec \\o f2mx) => [a f g|].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /= -linearP /= -[A in _ = mxvec A]/(f2mx (Vector.Hom _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "congr (mxvec (f2mx _)); apply/lfunP=> v; do 2!rewrite lfunE /=.",
                        "VernacExtend",
                        "dd179f31dfb2145b6c2eb66ca4f826a6b00a1cfb"
                    ]
                },
                {
                    "command": [
                        "by rewrite unlock /= -linearP mulmxDr scalemxAr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: Bijective (Vector.Hom \\o vec_mx) _ _ => [[A]|A] /=; last exact: vec_mxK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxvecK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "id_lfunE",
            "line_nb": 994,
            "steps": [
                {
                    "command": [
                        "exact: lfunE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfunE",
            "line_nb": 997,
            "steps": [
                {
                    "command": [
                        "exact: lfunE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfunA",
            "line_nb": 1000,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfun1l",
            "line_nb": 1003,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfun1r",
            "line_nb": 1006,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfun0l",
            "line_nb": 1009,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfun0r",
            "line_nb": 1012,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=; rewrite linear0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfunDl",
            "line_nb": 1015,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfunDr",
            "line_nb": 1018,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=; rewrite linearD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfunNl",
            "line_nb": 1021,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfunNr",
            "line_nb": 1024,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=; rewrite linearN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfunZl",
            "line_nb": 1032,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_lfunZr",
            "line_nb": 1035,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; do !rewrite lfunE /=; rewrite linearZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limgS",
            "line_nb": 1042,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock /subsetv !genmxE; apply: submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_line",
            "line_nb": 1045,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite 2!unlock eqEsubv /subsetv /= r2vK !genmxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(eqmxMr _ (genmxE _)) submx_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg0",
            "line_nb": 1049,
            "steps": [
                {
                    "command": [
                        "by rewrite limg_line linear0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_img",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "by move=> Uv; rewrite memvE -limg_line limgS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lim0g",
            "line_nb": 1061,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite -subv0; apply/subvP=> _ /memv_imgP[u _ ->].",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite lfunE rpred0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_in_limg",
            "line_nb": 1065,
            "steps": [
                {
                    "command": [
                        "move=> eq_fg; apply/vspaceP=> y.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by apply/memv_imgP/memv_imgP=> [][x Vx ->]; exists x; rewrite ?eq_fg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_add",
            "line_nb": 1069,
            "steps": [
                {
                    "command": [
                        "move=> U V; apply/eqP; rewrite unlock eqEsubv /subsetv /= -genmx_adds.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite !genmxE !(eqmxMr _ (genmxE _)) !addsmxMr submx_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_sum",
            "line_nb": 1073,
            "steps": [
                {
                    "command": [
                        "exact: (big_morph _ (limg_add f) (limg0 f)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_cap",
            "line_nb": 1076,
            "steps": [
                {
                    "command": [
                        "by rewrite subv_cap !limgS ?capvSl ?capvSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_bigcap",
            "line_nb": 1079,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ => [|i V U _ sUV]; first exact: subvf.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subv_trans (limg_cap f _ U)) ?capvS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_span",
            "line_nb": 1083,
            "steps": [
                {
                    "command": [
                        "by rewrite !span_def big_map limg_sum; apply: eq_bigr => x _; rewrite limg_line.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inv_lfun_def",
            "line_nb": 1093,
            "steps": [
                {
                    "command": [
                        "apply/lfunP=> u; do !rewrite lfunE /=; rewrite unlock /= !r2vK.",
                        "VernacExtend",
                        "2c9df44fb22c7f945c4b383196682830f710c550"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmxKpV ?submxMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_lfunVK",
            "line_nb": 1097,
            "steps": [
                {
                    "command": [
                        "by move=> _ /memv_imgP[u _ ->]; rewrite -!comp_lfunE inv_lfun_def.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lkerE",
            "line_nb": 1100,
            "steps": [
                {
                    "command": [
                        "rewrite unlock -dimv_eq0 /dimv /subsetv !genmxE mxrank_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (sameP sub_kermxP eqP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_ker",
            "line_nb": 1104,
            "steps": [
                {
                    "command": [
                        "by rewrite -memv0 !memvE subv0 lkerE limg_line.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqlfunP",
            "line_nb": 1107,
            "steps": [
                {
                    "command": [
                        "by rewrite memv_ker !lfun_simp subr_eq0; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqlfun_inP",
            "line_nb": 1110,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP subvP) => E x /E/eqlfunP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_ker_dim",
            "line_nb": 1117,
            "steps": [
                {
                    "command": [
                        "rewrite unlock /dimv /= genmx_cap genmx_id -genmx_cap !genmxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addnC mxrank_mul_ker.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_dim_eq",
            "line_nb": 1121,
            "steps": [
                {
                    "command": [
                        "by rewrite -(limg_ker_dim f U) => ->; rewrite dimv0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_basis_of",
            "line_nb": 1124,
            "steps": [
                {
                    "command": [
                        "move=> injUf /andP[/eqP defU /eqnP freeX].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite /basis_of /free size_map -limg_span -freeX defU limg_dim_eq ?eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0P",
            "line_nb": 1128,
            "steps": [
                {
                    "command": [
                        "rewrite -subv0; apply: (iffP subvP) => [injf u v eq_fuv | injf u].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -subr_eq0 -memv0 injf //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv_ker linearB /= eq_fuv subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv_ker memv0 -(inj_eq injf) linear0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_ker0",
            "line_nb": 1134,
            "steps": [
                {
                    "command": [
                        "move/lker0P=> injf; apply/idP/idP=> [/subvP sfUV | ]; last exact: limgS.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/subvP=> u Uu; have /memv_imgP[v Vv /injf->] := sfUV _ (memv_img f Uu).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_limg_ker0",
            "line_nb": 1138,
            "steps": [
                {
                    "command": [
                        "by move=> injf; rewrite !eqEsubv !limg_ker0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_lfunK",
            "line_nb": 1141,
            "steps": [
                {
                    "command": [
                        "by move/lker0P=> injf u; apply: injf; rewrite limg_lfunVK ?memv_img ?memvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_compVf",
            "line_nb": 1144,
            "steps": [
                {
                    "command": [
                        "by move/lker0_lfunK=> fK; apply/lfunP=> u; rewrite !lfunE /= fK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixedSpaceP",
            "line_nb": 1158,
            "steps": [
                {
                    "command": [
                        "by rewrite memv_ker add_lfunE opp_lfunE id_lfunE subr_eq0; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixedSpacesP",
            "line_nb": 1161,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP subvP) => cUf x /cUf/fixedSpaceP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixedSpace_limg",
            "line_nb": 1164,
            "steps": [
                {
                    "command": [
                        "move/fixedSpacesP=> cUf; apply/vspaceP=> x.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by apply/memv_imgP/idP=> [[{x} x Ux ->] | Ux]; last exists x; rewrite ?cUf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixedSpace_id",
            "line_nb": 1168,
            "steps": [
                {
                    "command": [
                        "by apply/vspaceP=> x; rewrite memvf; apply/fixedSpaceP; rewrite lfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_limgf",
            "line_nb": 1177,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite eqEdim subvf limg_dim_eq //= (eqP kerf0) capv0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_lfunVK",
            "line_nb": 1180,
            "steps": [
                {
                    "command": [
                        "by move=> u; rewrite limg_lfunVK // lker0_limgf memvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_compfV",
            "line_nb": 1183,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP=> u; rewrite !lfunE /= lker0_lfunVK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_compVKf",
            "line_nb": 1186,
            "steps": [
                {
                    "command": [
                        "by rewrite comp_lfunA lker0_compfV comp_lfun1l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_compKf",
            "line_nb": 1189,
            "steps": [
                {
                    "command": [
                        "by rewrite comp_lfunA lker0_compVf ?comp_lfun1l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_compfK",
            "line_nb": 1192,
            "steps": [
                {
                    "command": [
                        "by rewrite -comp_lfunA lker0_compfV comp_lfun1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_compfVK",
            "line_nb": 1195,
            "steps": [
                {
                    "command": [
                        "by rewrite -comp_lfunA lker0_compVf ?comp_lfun1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lim1g",
            "line_nb": 1202,
            "steps": [
                {
                    "command": [
                        "have /andP[/eqP <- _] := vbasisP U; rewrite limg_span map_id_in // => u _.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "by rewrite lfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lpreim_cap_limg",
            "line_nb": 1214,
            "steps": [
                {
                    "command": [
                        "by rewrite /lfun_preim -capvA capvv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lpreim0",
            "line_nb": 1217,
            "steps": [
                {
                    "command": [
                        "by rewrite /lfun_preim cap0v limg0 add0v.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lpreimS",
            "line_nb": 1220,
            "steps": [
                {
                    "command": [
                        "by move=> sVW; rewrite addvS // limgS // capvS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lpreimK",
            "line_nb": 1223,
            "steps": [
                {
                    "command": [
                        "move=> sWf; rewrite limg_add (capv_idPl sWf) // -limg_comp.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have /eqP->: (f @: lker f == 0)%VS by rewrite -lkerE.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have /andP[/eqP defW _] := vbasisP W; rewrite addv0 -defW limg_span.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "rewrite map_id_in // => x Xx; rewrite lfunE /= limg_lfunVK //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by apply: span_subvP Xx; rewrite defW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_preim",
            "line_nb": 1230,
            "steps": [
                {
                    "command": [
                        "apply/idP/idP=> [Wfu | /(memv_img f)]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lpreim_cap_limg lpreimK ?capvSr // => /memv_capP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -[u](addNKr (f^-1%VF (f u))) memv_add ?memv_img //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv_cap Wfu memv_img ?memvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv_ker addrC linearB /= subr_eq0 limg_lfunVK ?memv_img ?memvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun1_neq0",
            "line_nb": 1242,
            "steps": [
                {
                    "command": [
                        "apply/eqP=> /lfunP/(_ (r2v (const_mx 1))); rewrite !lfunE /= => /(canRL r2vK).",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by move=> /rowP/(_ (Ordinal vT_proper))/eqP; rewrite linear0 !mxE oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_pi",
            "line_nb": 1261,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock memvE /subsetv genmxE /= r2vK proj_mx_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_proj",
            "line_nb": 1264,
            "steps": [
                {
                    "command": [
                        "exact: memv_pi.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_pi1",
            "line_nb": 1267,
            "steps": [
                {
                    "command": [
                        "by rewrite (subvP (diffvSl U V)) ?memv_pi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_pi2",
            "line_nb": 1270,
            "steps": [
                {
                    "command": [
                        "exact: memv_pi.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "daddv_pi_id",
            "line_nb": 1273,
            "steps": [
                {
                    "command": [
                        "move/eqP; rewrite -dimv_eq0 memvE /subsetv /dimv !genmxE mxrank_eq0 => /eqP.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by move=> dxUV Uu; rewrite unlock /= proj_mx_id ?v2rK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "daddv_pi_proj",
            "line_nb": 1277,
            "steps": [
                {
                    "command": [
                        "by move/daddv_pi_id=> -> //; apply: memv_pi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "daddv_pi_add",
            "line_nb": 1280,
            "steps": [
                {
                    "command": [
                        "move/eqP; rewrite -dimv_eq0 memvE /subsetv /dimv !genmxE mxrank_eq0 => /eqP.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by move=> dxUW UVw; rewrite unlock /= -linearD /= add_proj_mx ?v2rK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projv_id",
            "line_nb": 1284,
            "steps": [
                {
                    "command": [
                        "exact: daddv_pi_id (capv_compl _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projv_proj",
            "line_nb": 1287,
            "steps": [
                {
                    "command": [
                        "exact: daddv_pi_proj (capv_compl _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_projC",
            "line_nb": 1290,
            "steps": [
                {
                    "command": [
                        "rewrite -{1}[w](daddv_pi_add (capv_compl U)) ?addv_complf ?memvf //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addrC addKr memv_pi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker_proj",
            "line_nb": 1298,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqEdim andbC; apply/andP; split.",
                        "VernacExtend",
                        "c6080ad6de433b4aac1c6523f45011ac63415378"
                    ]
                },
                {
                    "command": [
                        "by rewrite dimv_compl -(limg_ker_dim (projv U) fullv) limg_proj addnK capfv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/subvP=> v; rewrite memv_ker -{2}[v]subr0 => /eqP <-; apply: memv_projC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv_pi1_proj",
            "line_nb": 1303,
            "steps": [
                {
                    "command": [
                        "by rewrite daddv_pi_proj // capv_diff.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv_pi2_id",
            "line_nb": 1306,
            "steps": [
                {
                    "command": [
                        "by apply: daddv_pi_id; rewrite capvC capv_diff.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv_pi2_proj",
            "line_nb": 1309,
            "steps": [
                {
                    "command": [
                        "by rewrite addv_pi2_id ?memv_pi2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addv_pi1_pi2",
            "line_nb": 1312,
            "steps": [
                {
                    "command": [
                        "by rewrite -addv_diff; apply: daddv_pi_add; apply: capv_diff.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_sum_pi",
            "line_nb": 1321,
            "steps": [
                {
                    "command": [
                        "rewrite /sumv_pi_for.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: (filter P r0) v => [|j r IHr] v /=; first by rewrite lfunE mem0v.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: eqP => [->|_]; rewrite ?lfunE ?memv_pi1 /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumv_pi_sum",
            "line_nb": 1340,
            "steps": [
                {
                    "command": [
                        "by apply: sumv_pi_uniq_sum; apply: enum_uniq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumv_pi_nat_sum",
            "line_nb": 1343,
            "steps": [
                {
                    "command": [
                        "by apply: sumv_pi_uniq_sum; apply/filter_uniq/iota_uniq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvsP",
            "line_nb": 1360,
            "steps": [
                {
                    "command": [
                        "exact: valP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvs_inj",
            "line_nb": 1363,
            "steps": [
                {
                    "command": [
                        "exact: val_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "congr_subvs",
            "line_nb": 1366,
            "steps": [
                {
                    "command": [
                        "exact: congr1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vsval_is_linear",
            "line_nb": 1369,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vsproj_key",
            "line_nb": 1374,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vsprojK",
            "line_nb": 1380,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock; apply: projv_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vsvalK",
            "line_nb": 1383,
            "steps": [
                {
                    "command": [
                        "by move=> w; apply/val_inj/vsprojK/subvsP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vsproj_is_linear",
            "line_nb": 1386,
            "steps": [
                {
                    "command": [
                        "by move=> k w1 w2; apply: val_inj; rewrite unlock /= linearP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "matrix_vect_iso",
            "line_nb": 1409,
            "steps": [
                {
                    "command": [
                        "exists mxvec => /=; first exact: linearP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists vec_mx; [apply: mxvecK | apply: vec_mxK].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "regular_vect_iso",
            "line_nb": 1418,
            "steps": [
                {
                    "command": [
                        "exists (fun a => a%:M) => [a b c|]; first by rewrite rmorphD scale_scalar_mx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists (fun A : 'M_1 => A 0 0) => [a | A]; rewrite ?mxE // -mx11_scalar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pair_vect_iso",
            "line_nb": 1427,
            "steps": [
                {
                    "command": [
                        "pose p2r (u : vT1 * vT2) := row_mx (v2r u.1) (v2r u.2).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "pose r2p w := (r2v (lsubmx w) : vT1, r2v (rsubmx w) : vT2).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have r2pK : cancel r2p p2r by move=> w; rewrite /p2r !r2vK hsubmxK.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have p2rK : cancel p2r r2p by case=> u v; rewrite /r2p row_mxKl row_mxKr !v2rK.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have r2p_lin: linear r2p by move=> a u v; congr (_ , _); rewrite /= !linearP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists p2r; [apply: (@can2_linear _ _ _ (Linear r2p_lin)) | exists r2p].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ffun_vect_iso",
            "line_nb": 1440,
            "steps": [
                {
                    "command": [
                        "pose fr (f : {ffun I -> vT}) := mxvec (\\matrix_(i < #|I|) v2r (f (enum_val i))).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "exists fr => /= [k f g|].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /fr -linearP; congr (mxvec _); apply/matrixP=> i j.",
                        "VernacExtend",
                        "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE /= !ffunE linearP !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (fun r => [ffun i => r2v (row (enum_rank i) (vec_mx r)) : vT]) => [g|r].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply/ffunP=> i; rewrite ffunE mxvecK rowK v2rK enum_rankK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/(canLR vec_mxK)/matrixP=> i j; rewrite mxE ffunE r2vK enum_valK mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vsolve_eqP",
            "line_nb": 1458,
            "steps": [
                {
                    "command": [
                        "have lhsZ: linear lhsf by move=> a u v; apply/ffunP=> i; rewrite !ffunE linearP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: (iffP memv_imgP) => [] [u Uu sol_u]; exists u => //.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by move=> i; rewrite -[tnth rhs i]ffunE sol_u (lfunE (Linear lhsZ)) ffunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/ffunP=> i; rewrite (lfunE (Linear lhsZ)) !ffunE sol_u.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}