{
    "filename": "mathcomp/algebra/matrix.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq div choice fintype.",
            "VernacRequire",
            "e665c6902e70ac801e5b749428ba09cedb8a2b75"
        ],
        [
            "From mathcomp Require Import finfun bigop prime binomial ssralg finset fingroup finalg.",
            "VernacRequire",
            "8235a382c70902fcb0205a0c4f79a0cccaafb41a"
        ],
        [
            "From mathcomp Require Import perm zmodp countalg.",
            "VernacRequire",
            "e2f4b0c973f4b550b474bf4301139b18144cbf06"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Reserved Notation \"''M_' n\" (at level 8, n at level 2, format \"''M_' n\").",
            "VernacSyntaxExtension",
            "7d695c390a2d9309ffe8bd412f2b6c02fc0fc624"
        ],
        [
            "Reserved Notation \"''rV_' n\" (at level 8, n at level 2, format \"''rV_' n\").",
            "VernacSyntaxExtension",
            "1e13bbea95a706dbf7124b57ed4ecabc9d379e83"
        ],
        [
            "Reserved Notation \"''cV_' n\" (at level 8, n at level 2, format \"''cV_' n\").",
            "VernacSyntaxExtension",
            "bc82a3623ad289bddf722c7e9d8d5d862ca9e168"
        ],
        [
            "Reserved Notation \"''M_' ( n )\" (at level 8, only parsing).",
            "VernacSyntaxExtension",
            "31c943cfb39cd7a120d3d1eb084a1def7263705c"
        ],
        [
            "Reserved Notation \"''M_' ( m , n )\" (at level 8, format \"''M_' ( m , n )\").",
            "VernacSyntaxExtension",
            "d0b3ae4216e0a2ad40dcc51a250d558a0a8b1405"
        ],
        [
            "Reserved Notation \"''M[' R ]_ n\" (at level 8, n at level 2, only parsing).",
            "VernacSyntaxExtension",
            "2a199b8d735b9f30849271639039861c565de73b"
        ],
        [
            "Reserved Notation \"''rV[' R ]_ n\" (at level 8, n at level 2, only parsing).",
            "VernacSyntaxExtension",
            "8da4a2866559209127b559e559c3f404de8321fd"
        ],
        [
            "Reserved Notation \"''cV[' R ]_ n\" (at level 8, n at level 2, only parsing).",
            "VernacSyntaxExtension",
            "859e17253722402e08642d4cdec6b92171c73e4c"
        ],
        [
            "Reserved Notation \"''M[' R ]_ ( n )\" (at level 8, only parsing).",
            "VernacSyntaxExtension",
            "6366c321fdfe5962fa30afabb2a6cf9fef9bbce1"
        ],
        [
            "Reserved Notation \"''M[' R ]_ ( m , n )\" (at level 8, only parsing).",
            "VernacSyntaxExtension",
            "1be7a7829ad31232ca6c7fdd36ed262b1994044c"
        ],
        [
            "Reserved Notation \"\\matrix_ i E\" (at level 36, E at level 36, i at level 2, format \"\\matrix_ i E\").",
            "VernacSyntaxExtension",
            "0343d5fe2e837bda4703e0499b9bbce879920884"
        ],
        [
            "Reserved Notation \"\\matrix_ ( i < n ) E\" (at level 36, E at level 36, i, n at level 50, only parsing).",
            "VernacSyntaxExtension",
            "a22e77be955091c5fdc17b99e2892ec141fd1d21"
        ],
        [
            "Reserved Notation \"\\matrix_ ( i , j ) E\" (at level 36, E at level 36, i, j at level 50, format \"\\matrix_ ( i , j ) E\").",
            "VernacSyntaxExtension",
            "878c78e56f7f44ee8426166073aadf972d4fc1da"
        ],
        [
            "Reserved Notation \"\\matrix[ k ]_ ( i , j ) E\" (at level 36, E at level 36, i, j at level 50, format \"\\matrix[ k ]_ ( i , j ) E\").",
            "VernacSyntaxExtension",
            "a8c46a99c662c33820eac570686d98b34c12a4d9"
        ],
        [
            "Reserved Notation \"\\matrix_ ( i < m , j < n ) E\" (at level 36, E at level 36, i, m, j, n at level 50, only parsing).",
            "VernacSyntaxExtension",
            "2510118d0175545e6964d88640d28e10700cdbcf"
        ],
        [
            "Reserved Notation \"\\matrix_ ( i , j < n ) E\" (at level 36, E at level 36, i, j, n at level 50, only parsing).",
            "VernacSyntaxExtension",
            "013ea100b6733bbdeb8cbb2c9308a92f65427071"
        ],
        [
            "Reserved Notation \"\\row_ j E\" (at level 36, E at level 36, j at level 2, format \"\\row_ j E\").",
            "VernacSyntaxExtension",
            "94b44cc81cbc9fdeb77e45dbe5bf0b7c5cb4da90"
        ],
        [
            "Reserved Notation \"\\row_ ( j < n ) E\" (at level 36, E at level 36, j, n at level 50, only parsing).",
            "VernacSyntaxExtension",
            "bcaabec1be3ce238d8cbeee69861493005165d0a"
        ],
        [
            "Reserved Notation \"\\col_ j E\" (at level 36, E at level 36, j at level 2, format \"\\col_ j E\").",
            "VernacSyntaxExtension",
            "05fcfd1b5c6c1454ca421475d7df1dbaaf56fcb1"
        ],
        [
            "Reserved Notation \"\\col_ ( j < n ) E\" (at level 36, E at level 36, j, n at level 50, only parsing).",
            "VernacSyntaxExtension",
            "aea1d594f6eac7b61d0731e35a5352d768edb67a"
        ],
        [
            "Reserved Notation \"x %:M\" (at level 8, format \"x %:M\").",
            "VernacSyntaxExtension",
            "4fe2bfa4858ef3086f1cb1239c0edcb74fe3edf8"
        ],
        [
            "Reserved Notation \"A *m B\" (at level 40, left associativity, format \"A *m B\").",
            "VernacSyntaxExtension",
            "6dfdec30dcf3364474d466c107d55d208e1f1324"
        ],
        [
            "Reserved Notation \"A ^T\" (at level 8, format \"A ^T\").",
            "VernacSyntaxExtension",
            "5ffe4ca54667307202a4f2d312ab7c9d8649531f"
        ],
        [
            "Reserved Notation \"\\tr A\" (at level 10, A at level 8, format \"\\tr A\").",
            "VernacSyntaxExtension",
            "885d5ea3b6146ff8a5b706e3da329d7a90bc44c5"
        ],
        [
            "Reserved Notation \"\\det A\" (at level 10, A at level 8, format \"\\det A\").",
            "VernacSyntaxExtension",
            "53470b4267a14db65609276283fbe47e75d81e11"
        ],
        [
            "Reserved Notation \"\\adj A\" (at level 10, A at level 8, format \"\\adj A\").",
            "VernacSyntaxExtension",
            "a946111623fa3b23cc37375a4422ae074cd1f6ac"
        ],
        [
            "Local Notation simp := (Monoid.Theory.simpm, oppr0).",
            "VernacSyntacticDefinition",
            "c294ac53ec92e510e9b97547f5de1920e6894ec9"
        ],
        [
            "Section MatrixDef.",
            "VernacBeginSection",
            "cadbeb8e8e0b5659dca8f44411edce1c8bd09533"
        ],
        [
            "Variable R : Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Variables m n : nat.",
            "VernacAssumption",
            "e3492c4fff3a30c2074b69e9ef3c152c1d2695a7"
        ],
        [
            "Inductive matrix : predArgType := Matrix of {ffun 'I_m * 'I_n -> R}.",
            "VernacInductive",
            "961878308b03968601bb9e0df0cebdeda2daa40c"
        ],
        [
            "Definition mx_val A := let: Matrix g := A in g.",
            "VernacDefinition",
            "8bce5fbff53112528943bb9a5b0f8884ef18dfec"
        ],
        [
            "Canonical matrix_subType := Eval hnf in [newType for mx_val].",
            "VernacDefinition",
            "6e42cfb19f51e27a71d4a8b37a4807ac2085a1e8"
        ],
        [
            "Fact matrix_key : unit.",
            "VernacStartTheoremProof",
            "8efe71c808ac1b283eddb37ccc1dba7cadeda8c4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition matrix_of_fun_def F := Matrix [ffun ij => F ij.1 ij.2].",
            "VernacDefinition",
            "50f9c681756d565642bc4835e0171ee3a9287917"
        ],
        [
            "Definition matrix_of_fun k := locked_with k matrix_of_fun_def.",
            "VernacDefinition",
            "2289412fa73527ce26c253384168fbc35ab92cde"
        ],
        [
            "Canonical matrix_unlockable k := [unlockable fun matrix_of_fun k].",
            "VernacDefinition",
            "5774cda322783209d5770aadd4dd63ebfeaa2858"
        ],
        [
            "Definition fun_of_matrix A (i : 'I_m) (j : 'I_n) := mx_val A (i, j).",
            "VernacDefinition",
            "e3504b3dddb416f9c684c54f5bdd933b452aa203"
        ],
        [
            "Coercion fun_of_matrix : matrix >-> Funclass.",
            "VernacCoercion",
            "f4ad998a22ffadef8a289267796624e17b79db51"
        ],
        [
            "Lemma mxE k F : matrix_of_fun k F =2 F.",
            "VernacStartTheoremProof",
            "f2a89d80b67da2543f6b052f7aae70d00ce00c4d"
        ],
        [
            "by move=> i j; rewrite unlock /fun_of_matrix /= ffunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma matrixP (A B : matrix) : A =2 B <-> A = B.",
            "VernacStartTheoremProof",
            "cebccd39ea420b9810cdc842fd52b15614dda131"
        ],
        [
            "rewrite /fun_of_matrix; split=> [/= eqAB | -> //].",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by apply/val_inj/ffunP=> [[i j]]; apply: eqAB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MatrixDef.",
            "VernacEndSegment",
            "239e697f9d3b4463db96fa8d1c841ed6f5564299"
        ],
        [
            "Bind Scope ring_scope with matrix.",
            "VernacBindScope",
            "c81efdc2f9f3feccc2bc61053570fa74cb2f84aa"
        ],
        [
            "Notation \"''M[' R ]_ ( m , n )\" := (matrix R m n) (only parsing): type_scope.",
            "VernacNotation",
            "7f9cf3de31eff43ced4b47a0fd9f5f6701e7f97b"
        ],
        [
            "Notation \"''rV[' R ]_ n\" := 'M[R]_(1, n) (only parsing) : type_scope.",
            "VernacNotation",
            "f63654b79e0bed0fc3f0629ac0e7f9d4ca1da11e"
        ],
        [
            "Notation \"''cV[' R ]_ n\" := 'M[R]_(n, 1) (only parsing) : type_scope.",
            "VernacNotation",
            "41880ed1507c19a9d6d4ce0143cc837b9763859d"
        ],
        [
            "Notation \"''M[' R ]_ n\" := 'M[R]_(n, n) (only parsing) : type_scope.",
            "VernacNotation",
            "60648ff1a6de5c25bdb6f1e5ad424440343f3031"
        ],
        [
            "Notation \"''M[' R ]_ ( n )\" := 'M[R]_n (only parsing) : type_scope.",
            "VernacNotation",
            "997588c018d35247de57cb8d79f8d230b0ef434d"
        ],
        [
            "Notation \"''M_' ( m , n )\" := 'M[_]_(m, n) : type_scope.",
            "VernacNotation",
            "5c0675c78c1efa2c17b395ae94ff888c65941828"
        ],
        [
            "Notation \"''rV_' n\" := 'M_(1, n) : type_scope.",
            "VernacNotation",
            "30852cd7ea0eef3d77afc50c3b62b0594ce27bbd"
        ],
        [
            "Notation \"''cV_' n\" := 'M_(n, 1) : type_scope.",
            "VernacNotation",
            "e3fa6a8191f56385933165641592c6b7917e37c5"
        ],
        [
            "Notation \"''M_' n\" := 'M_(n, n) : type_scope.",
            "VernacNotation",
            "ee164cb2680a3d75fab64156df94b35623323762"
        ],
        [
            "Notation \"''M_' ( n )\" := 'M_n (only parsing) : type_scope.",
            "VernacNotation",
            "c4fc2002fe3bc033e0200fcb580c9813d7a1d432"
        ],
        [
            "Notation \"\\matrix[ k ]_ ( i , j ) E\" := (matrix_of_fun k (fun i j => E)) (at level 36, E at level 36, i, j at level 50): ring_scope.",
            "VernacNotation",
            "16531edb0575fa55d0426d60647e98d44d3e7994"
        ],
        [
            "Notation \"\\matrix_ ( i < m , j < n ) E\" := (@matrix_of_fun _ m n matrix_key (fun i j => E)) (only parsing) : ring_scope.",
            "VernacNotation",
            "32839e7f2aa2f3e93037644d981bec49ce7ca6be"
        ],
        [
            "Notation \"\\matrix_ ( i , j < n ) E\" := (\\matrix_(i < n, j < n) E) (only parsing) : ring_scope.",
            "VernacNotation",
            "f7f77b2d4253477e2e22263b5a3c98cd29294a6c"
        ],
        [
            "Notation \"\\matrix_ ( i , j ) E\" := (\\matrix_(i < _, j < _) E) : ring_scope.",
            "VernacNotation",
            "498334f040b6c181e552ee9b8e9d7c94d6c5bcf5"
        ],
        [
            "Notation \"\\matrix_ ( i < m ) E\" := (\\matrix_(i < m, j < _) @fun_of_matrix _ 1 _ E 0 j) (only parsing) : ring_scope.",
            "VernacNotation",
            "57bebe840fa7a7ce7ddb646afd51ee05582b0a74"
        ],
        [
            "Notation \"\\matrix_ i E\" := (\\matrix_(i < _) E) : ring_scope.",
            "VernacNotation",
            "f9c4bfc8336fdfb558ac387a3dcc0bcf23859172"
        ],
        [
            "Notation \"\\col_ ( i < n ) E\" := (@matrix_of_fun _ n 1 matrix_key (fun i _ => E)) (only parsing) : ring_scope.",
            "VernacNotation",
            "41c5b3109de832f5b19d0902f9e46626b58a7580"
        ],
        [
            "Notation \"\\col_ i E\" := (\\col_(i < _) E) : ring_scope.",
            "VernacNotation",
            "bd2b6348b3c91568a4eeeb35f0051f25b2836911"
        ],
        [
            "Notation \"\\row_ ( j < n ) E\" := (@matrix_of_fun _ 1 n matrix_key (fun _ j => E)) (only parsing) : ring_scope.",
            "VernacNotation",
            "18cb7a6d0db6c540e5acf0e2fa7974e758fdc229"
        ],
        [
            "Notation \"\\row_ j E\" := (\\row_(j < _) E) : ring_scope.",
            "VernacNotation",
            "2e0f145f457fb5f5e67761db42cafa6a63dc4177"
        ],
        [
            "Definition matrix_eqMixin (R : eqType) m n := Eval hnf in [eqMixin of 'M[R]_(m, n) by <:].",
            "VernacDefinition",
            "53a5d600bdba85d235ff3dca5ee902a083b2ac46"
        ],
        [
            "Canonical matrix_eqType (R : eqType) m n:= Eval hnf in EqType 'M[R]_(m, n) (matrix_eqMixin R m n).",
            "VernacDefinition",
            "e32d3934a9ae736d5d1b247a63a5c892e6e749bb"
        ],
        [
            "Definition matrix_choiceMixin (R : choiceType) m n := [choiceMixin of 'M[R]_(m, n) by <:].",
            "VernacDefinition",
            "b398a33ba557ee79c1ea776fe62940c583adf5ac"
        ],
        [
            "Canonical matrix_choiceType (R : choiceType) m n := Eval hnf in ChoiceType 'M[R]_(m, n) (matrix_choiceMixin R m n).",
            "VernacDefinition",
            "67d18f672963c175a9341e6dd85eb45e53cb3fbc"
        ],
        [
            "Definition matrix_countMixin (R : countType) m n := [countMixin of 'M[R]_(m, n) by <:].",
            "VernacDefinition",
            "30db43ce352d2e7af124fc9ec480c6369033c955"
        ],
        [
            "Canonical matrix_countType (R : countType) m n := Eval hnf in CountType 'M[R]_(m, n) (matrix_countMixin R m n).",
            "VernacDefinition",
            "22bf59e02008ec6358c183b7e678dec866b8060f"
        ],
        [
            "Canonical matrix_subCountType (R : countType) m n := Eval hnf in [subCountType of 'M[R]_(m, n)].",
            "VernacDefinition",
            "05084e20a7e8f75ff4d678b862f61097f16ad733"
        ],
        [
            "Definition matrix_finMixin (R : finType) m n := [finMixin of 'M[R]_(m, n) by <:].",
            "VernacDefinition",
            "84235ec0003cb957b4e9cd1f95db4263c71a7289"
        ],
        [
            "Canonical matrix_finType (R : finType) m n := Eval hnf in FinType 'M[R]_(m, n) (matrix_finMixin R m n).",
            "VernacDefinition",
            "15c6662036f8eeedb818468ccf3abe96d983e2f0"
        ],
        [
            "Canonical matrix_subFinType (R : finType) m n := Eval hnf in [subFinType of 'M[R]_(m, n)].",
            "VernacDefinition",
            "c4a52e7d0e151524660a6c56a05e3ed591b69517"
        ],
        [
            "Lemma card_matrix (F : finType) m n : (#|{: 'M[F]_(m, n)}| = #|F| ^ (m * n))%N.",
            "VernacStartTheoremProof",
            "a0bc328727f2cc19e21434ceeeb4f486302c560c"
        ],
        [
            "by rewrite card_sub card_ffun card_prod !card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section MatrixStructural.",
            "VernacBeginSection",
            "c8ed710efb09af5594fa1d8c4212df8c4bb503a2"
        ],
        [
            "Variable R : Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Fact const_mx_key : unit.",
            "VernacStartTheoremProof",
            "13de9a516271835486c703edb0894b16f3c395ec"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition const_mx m n a : 'M[R]_(m, n) := \\matrix[const_mx_key]_(i, j) a.",
            "VernacDefinition",
            "b76b6138765268f541e6c28c3e200c0725229a17"
        ],
        [
            "Arguments const_mx {m n}.",
            "VernacArguments",
            "eb6e2cc868eb02f56bbca8d6f5c510474a57243f"
        ],
        [
            "Section FixedDim.",
            "VernacBeginSection",
            "29e73d88470a848f056ed9a83fbcb296d2461855"
        ],
        [
            "Variables m n : nat.",
            "VernacAssumption",
            "e3492c4fff3a30c2074b69e9ef3c152c1d2695a7"
        ],
        [
            "Implicit Type A : 'M[R]_(m, n).",
            "VernacReserve",
            "925628148f486c4105fcde3e25bd0666874e0518"
        ],
        [
            "Definition castmx m' n' (eq_mn : (m = m') * (n = n')) A : 'M_(m', n') := let: erefl in _ = m' := eq_mn.1 return 'M_(m', n') in let: erefl in _ = n' := eq_mn.2 return 'M_(m, n') in A.",
            "VernacDefinition",
            "0e6b914939c675b15bfdab4c665f308b3176e2fa"
        ],
        [
            "Definition conform_mx m' n' B A := match m =P m', n =P n' with | ReflectT eq_m, ReflectT eq_n => castmx (eq_m, eq_n) A | _, _ => B end.",
            "VernacDefinition",
            "0672fed535afbf64d58a16694f8f9f524158babe"
        ],
        [
            "Fact trmx_key : unit.",
            "VernacStartTheoremProof",
            "f27fc9edd82f2810f0046974d2802e544ec0b520"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition trmx A := \\matrix[trmx_key]_(i, j) A j i.",
            "VernacDefinition",
            "f115246b4b31d1381753d17954d38006516c6ea4"
        ],
        [
            "Fact row_perm_key : unit.",
            "VernacStartTheoremProof",
            "0ddc11801e297cb25840cb9fc23c7cd46468eb74"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition row_perm (s : 'S_m) A := \\matrix[row_perm_key]_(i, j) A (s i) j.",
            "VernacDefinition",
            "57f36fb9488b604d822f4094bf8780a7b8aca790"
        ],
        [
            "Fact col_perm_key : unit.",
            "VernacStartTheoremProof",
            "5ef2522abf14a06d595e8404b5b537c760e80c98"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition col_perm (s : 'S_n) A := \\matrix[col_perm_key]_(i, j) A i (s j).",
            "VernacDefinition",
            "191625853d60475a4a05cabda0c5d96b9f656b38"
        ],
        [
            "Definition xrow i1 i2 := row_perm (tperm i1 i2).",
            "VernacDefinition",
            "847541696010d6bed7af0093c1d0e3b02c26bf12"
        ],
        [
            "Definition xcol j1 j2 := col_perm (tperm j1 j2).",
            "VernacDefinition",
            "03148743a616ce4237d9488c78a9237fa1dfcb9b"
        ],
        [
            "Definition row i0 A := \\row_j A i0 j.",
            "VernacDefinition",
            "ce1ad7d0a11769ad6d8dcb6632856bc7928ba4c6"
        ],
        [
            "Definition col j0 A := \\col_i A i j0.",
            "VernacDefinition",
            "006a9d2cb88bcdcbc1060185f836d53afbc9c595"
        ],
        [
            "Definition row' i0 A := \\matrix_(i, j) A (lift i0 i) j.",
            "VernacDefinition",
            "22f88779a377d64fbe5ab788e4bba9d9f0fdeca5"
        ],
        [
            "Definition col' j0 A := \\matrix_(i, j) A i (lift j0 j).",
            "VernacDefinition",
            "5a1e4836ad441306613c4abc916f39301a58e3fb"
        ],
        [
            "Lemma castmx_const m' n' (eq_mn : (m = m') * (n = n')) a : castmx eq_mn (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "d2c0da68f1aaa9f26ebde5d2a7498d4d703ae56e"
        ],
        [
            "by case: eq_mn; case: m' /; case: n' /.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_const a : trmx (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "89a1e57c331dcddb98e8373914414d46f5a544e1"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_perm_const s a : row_perm s (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "5ac54f0704ee92cd1b0580c8f60aaef6f6960f75"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_perm_const s a : col_perm s (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "6e293db5db72700a237b3216fd42a50709bc137d"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xrow_const i1 i2 a : xrow i1 i2 (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "7cb6f871146fd3bbe9611e1c28455c42e1e9a40d"
        ],
        [
            "exact: row_perm_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xcol_const j1 j2 a : xcol j1 j2 (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "73a88dd914ce061ca30c9bfa0d452706a1eb4751"
        ],
        [
            "exact: col_perm_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rowP (u v : 'rV[R]_n) : u 0 =1 v 0 <-> u = v.",
            "VernacStartTheoremProof",
            "9cf99c4e56c7e6f4e5b8d275d764ea002230d8f4"
        ],
        [
            "by split=> [eq_uv | -> //]; apply/matrixP=> i; rewrite ord1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rowK u_ i0 : row i0 (\\matrix_i u_ i) = u_ i0.",
            "VernacStartTheoremProof",
            "7d194053a90df0690b21b0ddf99b24f26ab405cf"
        ],
        [
            "by apply/rowP=> i'; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_matrixP A B : (forall i, row i A = row i B) <-> A = B.",
            "VernacStartTheoremProof",
            "db8d6cb266a28bc231382f4b531616377d8d500d"
        ],
        [
            "split=> [eqAB | -> //]; apply/matrixP=> i j.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by move/rowP/(_ j): (eqAB i); rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma colP (u v : 'cV[R]_m) : u^~ 0 =1 v^~ 0 <-> u = v.",
            "VernacStartTheoremProof",
            "4f3b167bbfbc962a917241428193642cc204628e"
        ],
        [
            "by split=> [eq_uv | -> //]; apply/matrixP=> i j; rewrite ord1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_const i0 a : row i0 (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "fd0b114d9fdab4f8c8dd492efcc99280d94f7f55"
        ],
        [
            "by apply/rowP=> j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_const j0 a : col j0 (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "e4140c26188fa6da551de5e45d8e403e4d4531c7"
        ],
        [
            "by apply/colP=> i; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row'_const i0 a : row' i0 (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "5d82acb354e929e655f19f945b6eef314c50f961"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col'_const j0 a : col' j0 (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "fa80282734bdbd5c50862dab6162545c2e927011"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_perm1 A : col_perm 1 A = A.",
            "VernacStartTheoremProof",
            "b314f98dc5aa7a0cc7039cbd6d5fb61344b9b053"
        ],
        [
            "by apply/matrixP=> i j; rewrite mxE perm1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_perm1 A : row_perm 1 A = A.",
            "VernacStartTheoremProof",
            "c7915ad1880460063bd3ce4f0723157136f9a007"
        ],
        [
            "by apply/matrixP=> i j; rewrite mxE perm1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_permM s t A : col_perm (s * t) A = col_perm s (col_perm t A).",
            "VernacStartTheoremProof",
            "e03be071a215ef45f505c57347a9c1a460746f78"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE permM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_permM s t A : row_perm (s * t) A = row_perm s (row_perm t A).",
            "VernacStartTheoremProof",
            "95c330d171b9a1a717a47aede8ae0293dc2b8e47"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE permM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_row_permC s t A : col_perm s (row_perm t A) = row_perm t (col_perm s A).",
            "VernacStartTheoremProof",
            "7eed63c3dc9552b8ece3304ee6dc828932e2f11a"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FixedDim.",
            "VernacEndSegment",
            "b2c36cdcd499ddce453581634291d2ea7d6960df"
        ],
        [
            "Local Notation \"A ^T\" := (trmx A) : ring_scope.",
            "VernacNotation",
            "d98b3c56cdb3f264c02157fd712da39c54cb621e"
        ],
        [
            "Lemma castmx_id m n erefl_mn (A : 'M_(m, n)) : castmx erefl_mn A = A.",
            "VernacStartTheoremProof",
            "7ada3f57f2366bcc06592ebd248ddc78d94118e5"
        ],
        [
            "by case: erefl_mn => e_m e_n; rewrite [e_m]eq_axiomK [e_n]eq_axiomK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma castmx_comp m1 n1 m2 n2 m3 n3 (eq_m1 : m1 = m2) (eq_n1 : n1 = n2) (eq_m2 : m2 = m3) (eq_n2 : n2 = n3) A : castmx (eq_m2, eq_n2) (castmx (eq_m1, eq_n1) A) = castmx (etrans eq_m1 eq_m2, etrans eq_n1 eq_n2) A.",
            "VernacStartTheoremProof",
            "1d2bc3cd99fc6667f1e7d5d2e62b21ef97b4940d"
        ],
        [
            "by case: m2 / eq_m1 eq_m2; case: m3 /; case: n2 / eq_n1 eq_n2; case: n3 /.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma castmxK m1 n1 m2 n2 (eq_m : m1 = m2) (eq_n : n1 = n2) : cancel (castmx (eq_m, eq_n)) (castmx (esym eq_m, esym eq_n)).",
            "VernacStartTheoremProof",
            "c3e8cb6d81a811ba08d3851d0a27146125def39f"
        ],
        [
            "by case: m2 / eq_m; case: n2 / eq_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma castmxKV m1 n1 m2 n2 (eq_m : m1 = m2) (eq_n : n1 = n2) : cancel (castmx (esym eq_m, esym eq_n)) (castmx (eq_m, eq_n)).",
            "VernacStartTheoremProof",
            "6a9ebd54980f6399d863f94a4a4b19168107e57d"
        ],
        [
            "by case: m2 / eq_m; case: n2 / eq_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma castmx_sym m1 n1 m2 n2 (eq_m : m1 = m2) (eq_n : n1 = n2) A1 A2 : A1 = castmx (eq_m, eq_n) A2 -> A2 = castmx (esym eq_m, esym eq_n) A1.",
            "VernacStartTheoremProof",
            "1c08426077dbf05094c7b366908e6f2c5b01dda3"
        ],
        [
            "by move/(canLR (castmxK _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma castmxE m1 n1 m2 n2 (eq_mn : (m1 = m2) * (n1 = n2)) A i j : castmx eq_mn A i j = A (cast_ord (esym eq_mn.1) i) (cast_ord (esym eq_mn.2) j).",
            "VernacStartTheoremProof",
            "17b7234817fb51f08671df63afe7de4c261f519e"
        ],
        [
            "by do [case: eq_mn; case: m2 /; case: n2 /] in A i j *; rewrite !cast_ord_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conform_mx_id m n (B A : 'M_(m, n)) : conform_mx B A = A.",
            "VernacStartTheoremProof",
            "391b79b32ec9940ae5b8245b4e04b7d1aed9f6a3"
        ],
        [
            "by rewrite /conform_mx; do 2!case: eqP => // *; rewrite castmx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonconform_mx m m' n n' (B : 'M_(m', n')) (A : 'M_(m, n)) : (m != m') || (n != n') -> conform_mx B A = B.",
            "VernacStartTheoremProof",
            "1dc2d15bd9efe6ce07b3da58e0d73e4f6ad2747a"
        ],
        [
            "by rewrite /conform_mx; do 2!case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conform_castmx m1 n1 m2 n2 m3 n3 (e_mn : (m2 = m3) * (n2 = n3)) (B : 'M_(m1, n1)) A : conform_mx B (castmx e_mn A) = conform_mx B A.",
            "VernacStartTheoremProof",
            "8be5b241d01db1bc1e87342728224dd7fa4fb5f3"
        ],
        [
            "by do [case: e_mn; case: m3 /; case: n3 /] in A *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmxK m n : cancel (@trmx m n) (@trmx n m).",
            "VernacStartTheoremProof",
            "72972f0b5efc2612426dbe66c62d4c1e18d1d145"
        ],
        [
            "by move=> A; apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_inj m n : injective (@trmx m n).",
            "VernacStartTheoremProof",
            "a742e953452ae0e8046624f0d1e3ef2a1c04e956"
        ],
        [
            "exact: can_inj (@trmxK m n).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_cast m1 n1 m2 n2 (eq_mn : (m1 = m2) * (n1 = n2)) A : (castmx eq_mn A)^T = castmx (eq_mn.2, eq_mn.1) A^T.",
            "VernacStartTheoremProof",
            "8fb8f5bb1481bea84eace948fc026e9c8d4bf7df"
        ],
        [
            "by case: eq_mn => eq_m eq_n; apply/matrixP=> i j; rewrite !(mxE, castmxE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_row_perm m n s (A : 'M_(m, n)) : (row_perm s A)^T = col_perm s A^T.",
            "VernacStartTheoremProof",
            "8109cb93f4179754551e4ea29be69a1638c4936b"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_col_perm m n s (A : 'M_(m, n)) : (col_perm s A)^T = row_perm s A^T.",
            "VernacStartTheoremProof",
            "1d64f7666221a60f8b9a50607a2395c1deaa4127"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_xrow m n i1 i2 (A : 'M_(m, n)) : (xrow i1 i2 A)^T = xcol i1 i2 A^T.",
            "VernacStartTheoremProof",
            "67420e4e469f7f65ae378d844b8fc95017e14a70"
        ],
        [
            "exact: tr_row_perm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_xcol m n j1 j2 (A : 'M_(m, n)) : (xcol j1 j2 A)^T = xrow j1 j2 A^T.",
            "VernacStartTheoremProof",
            "61ef6e7d339377582708674abf1fddf2edc43f22"
        ],
        [
            "exact: tr_col_perm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_id n i (V : 'rV_n) : row i V = V.",
            "VernacStartTheoremProof",
            "9b187bf8376c181b7ca4191c47f8ae69fa67cfa4"
        ],
        [
            "by apply/rowP=> j; rewrite mxE [i]ord1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_id n j (V : 'cV_n) : col j V = V.",
            "VernacStartTheoremProof",
            "862484c7d10901567dcce110a414ee68ce065a03"
        ],
        [
            "by apply/colP=> i; rewrite mxE [j]ord1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_eq m1 m2 n i1 i2 (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : row i1 A1 = row i2 A2 -> A1 i1 =1 A2 i2.",
            "VernacStartTheoremProof",
            "41b8302081a47922a65bffc90df56111a44ca65c"
        ],
        [
            "by move/rowP=> eqA12 j; have:= eqA12 j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_eq m n1 n2 j1 j2 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : col j1 A1 = col j2 A2 -> A1^~ j1 =1 A2^~ j2.",
            "VernacStartTheoremProof",
            "fd04ff938223406c13de7797d6577cadd9dd1073"
        ],
        [
            "by move/colP=> eqA12 i; have:= eqA12 i; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row'_eq m n i0 (A B : 'M_(m, n)) : row' i0 A = row' i0 B -> {in predC1 i0, A =2 B}.",
            "VernacStartTheoremProof",
            "591e1e7baba95e597edefbb8da9c33c5c715b2fd"
        ],
        [
            "move/matrixP=> eqAB' i; rewrite !inE eq_sym; case/unlift_some=> i' -> _ j.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by have:= eqAB' i' j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col'_eq m n j0 (A B : 'M_(m, n)) : col' j0 A = col' j0 B -> forall i, {in predC1 j0, A i =1 B i}.",
            "VernacStartTheoremProof",
            "6f554137d093bd5053c9a2d71b754c0e2263c4d0"
        ],
        [
            "move/matrixP=> eqAB' i j; rewrite !inE eq_sym; case/unlift_some=> j' -> _.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by have:= eqAB' i j'; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_row m n i0 (A : 'M_(m, n)) : (row i0 A)^T = col i0 A^T.",
            "VernacStartTheoremProof",
            "40a1ece23e41f2ba51bfe2c509c11366534b957e"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_row' m n i0 (A : 'M_(m, n)) : (row' i0 A)^T = col' i0 A^T.",
            "VernacStartTheoremProof",
            "1c229941c349fdf24770cba732c9235fb4d9bcda"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_col m n j0 (A : 'M_(m, n)) : (col j0 A)^T = row j0 A^T.",
            "VernacStartTheoremProof",
            "5cc223ed11880e0389b347331638f2d274804169"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_col' m n j0 (A : 'M_(m, n)) : (col' j0 A)^T = row' j0 A^T.",
            "VernacStartTheoremProof",
            "dac0d3378a332bc3556a74002ece3479b82fa79b"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac split_mxE := apply/matrixP=> i j; do ![rewrite mxE | case: split => ?].",
            "VernacExtend",
            "786d697da62158fecf15eb933efa353a725a87b5"
        ],
        [
            "Section CutPaste.",
            "VernacBeginSection",
            "a75ec29623510cfe338d97460e25799e355c6d1b"
        ],
        [
            "Variables m m1 m2 n n1 n2 : nat.",
            "VernacAssumption",
            "bd455eaae7f958733ff389d524774d9be0ad50ef"
        ],
        [
            "Fact row_mx_key : unit.",
            "VernacStartTheoremProof",
            "b0ae37289ae77b1b3c9cc7ae6a7ac17a62987fbf"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition row_mx (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : 'M[R]_(m, n1 + n2) := \\matrix[row_mx_key]_(i, j) match split j with inl j1 => A1 i j1 | inr j2 => A2 i j2 end.",
            "VernacDefinition",
            "87f8bf8eedaf7197f48e1f6e78f5491a21cd2bfc"
        ],
        [
            "Fact col_mx_key : unit.",
            "VernacStartTheoremProof",
            "902b92f06b359d23a38c1e9d8fbe885b1943a902"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition col_mx (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : 'M[R]_(m1 + m2, n) := \\matrix[col_mx_key]_(i, j) match split i with inl i1 => A1 i1 j | inr i2 => A2 i2 j end.",
            "VernacDefinition",
            "9ded43530613077e7c1cc3db5aad575e844b4360"
        ],
        [
            "Fact lsubmx_key : unit.",
            "VernacStartTheoremProof",
            "321c49f876cebfc6dbd20f883bc75cfd10147f1a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lsubmx (A : 'M[R]_(m, n1 + n2)) := \\matrix[lsubmx_key]_(i, j) A i (lshift n2 j).",
            "VernacDefinition",
            "c70aad8da88d780b69a3c62f606880232fe9a2de"
        ],
        [
            "Fact rsubmx_key : unit.",
            "VernacStartTheoremProof",
            "74c9bc11d4172fe824e8e0e0d0a9861431bd7f2a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rsubmx (A : 'M[R]_(m, n1 + n2)) := \\matrix[rsubmx_key]_(i, j) A i (rshift n1 j).",
            "VernacDefinition",
            "519404df7dbfdd1158f3b9b8754c9707e0fbcc71"
        ],
        [
            "Fact usubmx_key : unit.",
            "VernacStartTheoremProof",
            "dd845c21c829624d37353a8720b4f079f15bfe14"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition usubmx (A : 'M[R]_(m1 + m2, n)) := \\matrix[usubmx_key]_(i, j) A (lshift m2 i) j.",
            "VernacDefinition",
            "6e02ff06f957568aae9c1b5a264ab3a6da06b891"
        ],
        [
            "Fact dsubmx_key : unit.",
            "VernacStartTheoremProof",
            "d1127f89fb63c3e26c5b84daeb0e90473f40757e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dsubmx (A : 'M[R]_(m1 + m2, n)) := \\matrix[dsubmx_key]_(i, j) A (rshift m1 i) j.",
            "VernacDefinition",
            "899973a3468d6ad7cbb6824aa011d30d6e066769"
        ],
        [
            "Lemma row_mxEl A1 A2 i j : row_mx A1 A2 i (lshift n2 j) = A1 i j.",
            "VernacStartTheoremProof",
            "e1024088d303d4aacd9f1927ca2611a5066655ef"
        ],
        [
            "by rewrite mxE (unsplitK (inl _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_mxKl A1 A2 : lsubmx (row_mx A1 A2) = A1.",
            "VernacStartTheoremProof",
            "1c897eeb2c6f9cde57a8446630286cdf54d56e8a"
        ],
        [
            "by apply/matrixP=> i j; rewrite mxE row_mxEl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_mxEr A1 A2 i j : row_mx A1 A2 i (rshift n1 j) = A2 i j.",
            "VernacStartTheoremProof",
            "e6e7a110d343f04d263983d57561bb0557fb3cda"
        ],
        [
            "by rewrite mxE (unsplitK (inr _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_mxKr A1 A2 : rsubmx (row_mx A1 A2) = A2.",
            "VernacStartTheoremProof",
            "c04ff9379b4d672d170b1262a0399e773f048458"
        ],
        [
            "by apply/matrixP=> i j; rewrite mxE row_mxEr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hsubmxK A : row_mx (lsubmx A) (rsubmx A) = A.",
            "VernacStartTheoremProof",
            "bc442a8b526d6f85cbceb3a34ae8922c5288408d"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: splitP => k Dk //=; rewrite !mxE //=; congr (A _ _); apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_mxEu A1 A2 i j : col_mx A1 A2 (lshift m2 i) j = A1 i j.",
            "VernacStartTheoremProof",
            "738b3e31a6c3eaeff22a8ede542389778a538d84"
        ],
        [
            "by rewrite mxE (unsplitK (inl _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_mxKu A1 A2 : usubmx (col_mx A1 A2) = A1.",
            "VernacStartTheoremProof",
            "8143b974b8e226f67205891c5e29f1c12738fe90"
        ],
        [
            "by apply/matrixP=> i j; rewrite mxE col_mxEu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_mxEd A1 A2 i j : col_mx A1 A2 (rshift m1 i) j = A2 i j.",
            "VernacStartTheoremProof",
            "3a38d7f64bbfff36c5bb3376180db8e5326bd08e"
        ],
        [
            "by rewrite mxE (unsplitK (inr _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_mxKd A1 A2 : dsubmx (col_mx A1 A2) = A2.",
            "VernacStartTheoremProof",
            "332a2cd97bae37e41e55cde3d61ef075f457e2c4"
        ],
        [
            "by apply/matrixP=> i j; rewrite mxE col_mxEd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_row_mx A1 A2 B1 B2 : row_mx A1 A2 = row_mx B1 B2 -> A1 = B1 /\\ A2 = B2.",
            "VernacStartTheoremProof",
            "9fbb32c431fbb07cfadd7e631338eae261ae832c"
        ],
        [
            "move=> eqAB; move: (congr1 lsubmx eqAB) (congr1 rsubmx eqAB).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by rewrite !(row_mxKl, row_mxKr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_col_mx A1 A2 B1 B2 : col_mx A1 A2 = col_mx B1 B2 -> A1 = B1 /\\ A2 = B2.",
            "VernacStartTheoremProof",
            "6fce1025f6f53ca75d41e5fe26ec617cd1430774"
        ],
        [
            "move=> eqAB; move: (congr1 usubmx eqAB) (congr1 dsubmx eqAB).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by rewrite !(col_mxKu, col_mxKd).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_mx_const a : row_mx (const_mx a) (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "d5431e6c7e567bcaebdbd384e2d9202fbcc9c7d1"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_mx_const a : col_mx (const_mx a) (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "98405e1425047b958885f1bbaa9d0efa7950c0ad"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CutPaste.",
            "VernacEndSegment",
            "05194bc74231f5d44a8248ee8c3dac46dedc040d"
        ],
        [
            "Lemma trmx_lsub m n1 n2 (A : 'M_(m, n1 + n2)) : (lsubmx A)^T = usubmx A^T.",
            "VernacStartTheoremProof",
            "7cd0f4caf4d123321e4b06a805883195a422f05f"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_rsub m n1 n2 (A : 'M_(m, n1 + n2)) : (rsubmx A)^T = dsubmx A^T.",
            "VernacStartTheoremProof",
            "7ded0341a3ad5f1979433fa3d94f516bd1687b53"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_row_mx m n1 n2 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : (row_mx A1 A2)^T = col_mx A1^T A2^T.",
            "VernacStartTheoremProof",
            "19cae1d39d8a87c05f414304f41f7bb8a9356e19"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_col_mx m1 m2 n (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : (col_mx A1 A2)^T = row_mx A1^T A2^T.",
            "VernacStartTheoremProof",
            "5105b5a988be2da37782a3707674a80149b4f32c"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_usub m1 m2 n (A : 'M_(m1 + m2, n)) : (usubmx A)^T = lsubmx A^T.",
            "VernacStartTheoremProof",
            "147820c2d2cfd631894fcec85fdd24d9df1560ad"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_dsub m1 m2 n (A : 'M_(m1 + m2, n)) : (dsubmx A)^T = rsubmx A^T.",
            "VernacStartTheoremProof",
            "25088386af0ba9560073be432a54bc3709097565"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vsubmxK m1 m2 n (A : 'M_(m1 + m2, n)) : col_mx (usubmx A) (dsubmx A) = A.",
            "VernacStartTheoremProof",
            "d212bdd1044788d6bd686bdc919f6020c3851962"
        ],
        [
            "by apply: trmx_inj; rewrite tr_col_mx trmx_usub trmx_dsub hsubmxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cast_row_mx m m' n1 n2 (eq_m : m = m') A1 A2 : castmx (eq_m, erefl _) (row_mx A1 A2) = row_mx (castmx (eq_m, erefl n1) A1) (castmx (eq_m, erefl n2) A2).",
            "VernacStartTheoremProof",
            "f504fbfc2d1554434119735444aad526a29f5e49"
        ],
        [
            "by case: m' / eq_m.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cast_col_mx m1 m2 n n' (eq_n : n = n') A1 A2 : castmx (erefl _, eq_n) (col_mx A1 A2) = col_mx (castmx (erefl m1, eq_n) A1) (castmx (erefl m2, eq_n) A2).",
            "VernacStartTheoremProof",
            "fc4575b89c1f67e89f632c0fa8f75f2894209592"
        ],
        [
            "by case: n' / eq_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_mxA m n1 n2 n3 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) (A3 : 'M_(m, n3)) : let cast := (erefl m, esym (addnA n1 n2 n3)) in row_mx A1 (row_mx A2 A3) = castmx cast (row_mx (row_mx A1 A2) A3).",
            "VernacStartTheoremProof",
            "ab71905e49da08c2d0c37bc1dc1078c2f6050209"
        ],
        [
            "apply: (canRL (castmxKV _ _)); apply/matrixP=> i j.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite castmxE !mxE cast_ord_id; case: splitP => j1 /= def_j.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have: (j < n1 + n2) && (j < n1) by rewrite def_j lshift_subproof /=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move: def_j; do 2![case: splitP => // ? ->; rewrite ?mxE] => /ord_inj->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: splitP def_j => j2 ->{j} def_j; rewrite !mxE.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "have: ~~ (j2 < n1) by rewrite -leqNgt def_j leq_addr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: j1 < n2 by rewrite -(ltn_add2l n1) -def_j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move: def_j; do 2![case: splitP => // ? ->] => /addnI/val_inj->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: ~~ (j1 < n2) by rewrite -leqNgt -(leq_add2l n1) -def_j leq_addr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: splitP def_j => // ? ->; rewrite addnA => /addnI/val_inj->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition row_mxAx := row_mxA.",
            "VernacDefinition",
            "8c518998b7ce8eaac398a952cecf46cc52116602"
        ],
        [
            "Lemma col_mxA m1 m2 m3 n (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) (A3 : 'M_(m3, n)) : let cast := (esym (addnA m1 m2 m3), erefl n) in col_mx A1 (col_mx A2 A3) = castmx cast (col_mx (col_mx A1 A2) A3).",
            "VernacStartTheoremProof",
            "9a5376eade41f4760fbb121a4fa7d746abade706"
        ],
        [
            "by apply: trmx_inj; rewrite trmx_cast !tr_col_mx -row_mxA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition col_mxAx := col_mxA.",
            "VernacDefinition",
            "ea557bf1721ad68b67798765a33fcd641566a8be"
        ],
        [
            "Lemma row_row_mx m n1 n2 i0 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : row i0 (row_mx A1 A2) = row_mx (row i0 A1) (row i0 A2).",
            "VernacStartTheoremProof",
            "83d35c879324a3135e3e3c65225532ef34755371"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE; case: (split j) => j'; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_col_mx m1 m2 n j0 (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : col j0 (col_mx A1 A2) = col_mx (col j0 A1) (col j0 A2).",
            "VernacStartTheoremProof",
            "067202a33345ec7ac5e4c7bf1cefccbfed175868"
        ],
        [
            "by apply: trmx_inj; rewrite !(tr_col, tr_col_mx, row_row_mx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row'_row_mx m n1 n2 i0 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : row' i0 (row_mx A1 A2) = row_mx (row' i0 A1) (row' i0 A2).",
            "VernacStartTheoremProof",
            "a1e61356d21806c78f662784dca78c4325589114"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE; case: (split j) => j'; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col'_col_mx m1 m2 n j0 (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : col' j0 (col_mx A1 A2) = col_mx (col' j0 A1) (col' j0 A2).",
            "VernacStartTheoremProof",
            "46af629825e30cb238ccbd1682f16bb52f04d8d3"
        ],
        [
            "by apply: trmx_inj; rewrite !(tr_col', tr_col_mx, row'_row_mx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma colKl m n1 n2 j1 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : col (lshift n2 j1) (row_mx A1 A2) = col j1 A1.",
            "VernacStartTheoremProof",
            "dd7e7decbb9fe0977082ed820fa6b051d878009c"
        ],
        [
            "by apply/matrixP=> i j; rewrite !(row_mxEl, mxE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma colKr m n1 n2 j2 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : col (rshift n1 j2) (row_mx A1 A2) = col j2 A2.",
            "VernacStartTheoremProof",
            "0f7fe2dbf3b73a678c2293df411b4b5b424edda7"
        ],
        [
            "by apply/matrixP=> i j; rewrite !(row_mxEr, mxE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rowKu m1 m2 n i1 (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : row (lshift m2 i1) (col_mx A1 A2) = row i1 A1.",
            "VernacStartTheoremProof",
            "cfffb3e034a08f38e97f2c6054cb2d27042c059c"
        ],
        [
            "by apply/matrixP=> i j; rewrite !(col_mxEu, mxE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rowKd m1 m2 n i2 (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : row (rshift m1 i2) (col_mx A1 A2) = row i2 A2.",
            "VernacStartTheoremProof",
            "5241e995e3aea933402c8014439c1b9bda4627cb"
        ],
        [
            "by apply/matrixP=> i j; rewrite !(col_mxEd, mxE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col'Kl m n1 n2 j1 (A1 : 'M_(m, n1.+1)) (A2 : 'M_(m, n2)) : col' (lshift n2 j1) (row_mx A1 A2) = row_mx (col' j1 A1) A2.",
            "VernacStartTheoremProof",
            "850ae9e3898d78ebc2bd3f3cc560047dfa25faaa"
        ],
        [
            "apply/matrixP=> i /= j; symmetry; rewrite 2!mxE.",
            "VernacExtend",
            "752925a62852bcfb152847f137ed8a2eb5456da4"
        ],
        [
            "case: splitP => j' def_j'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite mxE -(row_mxEl _ A2); congr (row_mx _ _ _); apply: ord_inj.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "by rewrite /= def_j'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(row_mxEr A1); congr (row_mx _ _ _); apply: ord_inj => /=.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "by rewrite /bump def_j' -ltnS -addSn ltn_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row'Ku m1 m2 n i1 (A1 : 'M_(m1.+1, n)) (A2 : 'M_(m2, n)) : row' (lshift m2 i1) (@col_mx m1.+1 m2 n A1 A2) = col_mx (row' i1 A1) A2.",
            "VernacStartTheoremProof",
            "830504aae41cb3fbb6d62846ccdea17b1f6bb314"
        ],
        [
            "by apply: trmx_inj; rewrite tr_col_mx !(@tr_row' _.+1) (@tr_col_mx _.+1) col'Kl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx'_cast m n : 'I_n -> (m + n.-1)%N = (m + n).-1.",
            "VernacStartTheoremProof",
            "c2f43fc2db90841c7e156680e10380d6ac8330e7"
        ],
        [
            "by case=> j /ltn_predK <-; rewrite addnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col'Kr m n1 n2 j2 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : col' (rshift n1 j2) (@row_mx m n1 n2 A1 A2) = castmx (erefl m, mx'_cast n1 j2) (row_mx A1 (col' j2 A2)).",
            "VernacStartTheoremProof",
            "55bb7d0fabca6a535b67ccc4bef3bf8af1ab76bb"
        ],
        [
            "apply/matrixP=> i j; symmetry; rewrite castmxE mxE cast_ord_id.",
            "VernacExtend",
            "752925a62852bcfb152847f137ed8a2eb5456da4"
        ],
        [
            "case: splitP => j' /= def_j.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite mxE -(row_mxEl _ A2); congr (row_mx _ _ _); apply: ord_inj.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "by rewrite /= def_j /bump leqNgt ltn_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite 2!mxE -(row_mxEr A1); congr (row_mx _ _ _ _); apply: ord_inj.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "by rewrite /= def_j /bump leq_add2l addnCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row'Kd m1 m2 n i2 (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : row' (rshift m1 i2) (col_mx A1 A2) = castmx (mx'_cast m1 i2, erefl n) (col_mx A1 (row' i2 A2)).",
            "VernacStartTheoremProof",
            "88ba3d9ad5a24f34000049aa2df1317dd1e09acc"
        ],
        [
            "by apply: trmx_inj; rewrite trmx_cast !(tr_row', tr_col_mx) col'Kr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Block.",
            "VernacBeginSection",
            "73f0b9db045eb14e96b3595eb4db0d55328821dd"
        ],
        [
            "Variables m1 m2 n1 n2 : nat.",
            "VernacAssumption",
            "de20afaaa595b676d3aaf7936013901a768db2d6"
        ],
        [
            "Definition block_mx Aul Aur Adl Adr : 'M_(m1 + m2, n1 + n2) := col_mx (row_mx Aul Aur) (row_mx Adl Adr).",
            "VernacDefinition",
            "3d6e32e1435742267f529edec5f2c45e055c8214"
        ],
        [
            "Lemma eq_block_mx Aul Aur Adl Adr Bul Bur Bdl Bdr : block_mx Aul Aur Adl Adr = block_mx Bul Bur Bdl Bdr -> [/\\ Aul = Bul, Aur = Bur, Adl = Bdl & Adr = Bdr].",
            "VernacStartTheoremProof",
            "007260af1e95d0fba02132d2d46ab8035c795416"
        ],
        [
            "by case/eq_col_mx; do 2!case/eq_row_mx=> -> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mx_const a : block_mx (const_mx a) (const_mx a) (const_mx a) (const_mx a) = const_mx a.",
            "VernacStartTheoremProof",
            "cd5b266525330e69421c27112ede6058779802c8"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section CutBlock.",
            "VernacBeginSection",
            "a5cf135e03d236bcc234b995368b0a6ab3645779"
        ],
        [
            "Variable A : matrix R (m1 + m2) (n1 + n2).",
            "VernacAssumption",
            "9489859dbe43d317a76f3d21d955a092f60dfbff"
        ],
        [
            "Definition ulsubmx := lsubmx (usubmx A).",
            "VernacDefinition",
            "6dd27c7640537a74284153d1781fb137d3c58c73"
        ],
        [
            "Definition ursubmx := rsubmx (usubmx A).",
            "VernacDefinition",
            "14667440726a976edb8e1362826adb9d376481c2"
        ],
        [
            "Definition dlsubmx := lsubmx (dsubmx A).",
            "VernacDefinition",
            "771d28accb1c6c25012e5a116683bf84e0be0e30"
        ],
        [
            "Definition drsubmx := rsubmx (dsubmx A).",
            "VernacDefinition",
            "5b91b3ea653219d45fada41bc4d7b3dac0578e27"
        ],
        [
            "Lemma submxK : block_mx ulsubmx ursubmx dlsubmx drsubmx = A.",
            "VernacStartTheoremProof",
            "156405133ef95e45e648156ed67428440e0253f4"
        ],
        [
            "by rewrite /block_mx !hsubmxK vsubmxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CutBlock.",
            "VernacEndSegment",
            "1dff4e682c77af7f8e212e5c2a1788092652d508"
        ],
        [
            "Section CatBlock.",
            "VernacBeginSection",
            "3aa55acd68bdb8b85ed4c3f7339fa277ab9f8167"
        ],
        [
            "Variables (Aul : 'M[R]_(m1, n1)) (Aur : 'M[R]_(m1, n2)).",
            "VernacAssumption",
            "cdd7a78f2f64da8411c905ba5b279da3e11307ce"
        ],
        [
            "Variables (Adl : 'M[R]_(m2, n1)) (Adr : 'M[R]_(m2, n2)).",
            "VernacAssumption",
            "53b4c44197cba9b9acfaa1446ac56661a6f89941"
        ],
        [
            "Let A := block_mx Aul Aur Adl Adr.",
            "VernacDefinition",
            "d0e67a8522b553a15a1237db24aa7d12f96f1876"
        ],
        [
            "Lemma block_mxEul i j : A (lshift m2 i) (lshift n2 j) = Aul i j.",
            "VernacStartTheoremProof",
            "b5d0fe05c456bd6bd64d546d946246191e096797"
        ],
        [
            "by rewrite col_mxEu row_mxEl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mxKul : ulsubmx A = Aul.",
            "VernacStartTheoremProof",
            "3cee00b360d7d3e07ddd2c0ac7c98e629ccd1274"
        ],
        [
            "by rewrite /ulsubmx col_mxKu row_mxKl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mxEur i j : A (lshift m2 i) (rshift n1 j) = Aur i j.",
            "VernacStartTheoremProof",
            "55fa45513ecb5c936772a7d902f0c3008396708b"
        ],
        [
            "by rewrite col_mxEu row_mxEr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mxKur : ursubmx A = Aur.",
            "VernacStartTheoremProof",
            "9d4bb346d23ca10062802e5ff301e8328f99b915"
        ],
        [
            "by rewrite /ursubmx col_mxKu row_mxKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mxEdl i j : A (rshift m1 i) (lshift n2 j) = Adl i j.",
            "VernacStartTheoremProof",
            "75603f7ae23301903e16e8e317e39ea2900a3505"
        ],
        [
            "by rewrite col_mxEd row_mxEl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mxKdl : dlsubmx A = Adl.",
            "VernacStartTheoremProof",
            "ed626d55cce28e87ce1eedbe80eaecbf5e3b4100"
        ],
        [
            "by rewrite /dlsubmx col_mxKd row_mxKl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mxEdr i j : A (rshift m1 i) (rshift n1 j) = Adr i j.",
            "VernacStartTheoremProof",
            "a21f76269acf80072d97f06d4bad5cd646a7ab77"
        ],
        [
            "by rewrite col_mxEd row_mxEr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mxKdr : drsubmx A = Adr.",
            "VernacStartTheoremProof",
            "8da8a836f0189eb74787cbb8820f56c06633ffb0"
        ],
        [
            "by rewrite /drsubmx col_mxKd row_mxKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mxEv : A = col_mx (row_mx Aul Aur) (row_mx Adl Adr).",
            "VernacStartTheoremProof",
            "d8e48b8c0d5f342d3d53a96b9c08fa6d59838413"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CatBlock.",
            "VernacEndSegment",
            "c870c288d75a17cd2a120daefb430907850f2281"
        ],
        [
            "End Block.",
            "VernacEndSegment",
            "5f8d640ca5688b671361676b38f2679382c9625c"
        ],
        [
            "Section TrCutBlock.",
            "VernacBeginSection",
            "164e22f3f827f3c12a309d8e5a51bd14a8d4fa2f"
        ],
        [
            "Variables m1 m2 n1 n2 : nat.",
            "VernacAssumption",
            "de20afaaa595b676d3aaf7936013901a768db2d6"
        ],
        [
            "Variable A : 'M[R]_(m1 + m2, n1 + n2).",
            "VernacAssumption",
            "f2c8f6c20dbdc3f99584beeff5890ef725f5d8e5"
        ],
        [
            "Lemma trmx_ulsub : (ulsubmx A)^T = ulsubmx A^T.",
            "VernacStartTheoremProof",
            "c09b9dee7c50dcc99f450eb066c42672d0d2dcbe"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_ursub : (ursubmx A)^T = dlsubmx A^T.",
            "VernacStartTheoremProof",
            "7f6943771c164de8211c948937a66591988d4719"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_dlsub : (dlsubmx A)^T = ursubmx A^T.",
            "VernacStartTheoremProof",
            "29a0db48b8b18204cecb53e6ed539de0de7fd5dd"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_drsub : (drsubmx A)^T = drsubmx A^T.",
            "VernacStartTheoremProof",
            "10cb2fa32d429f315f4abe345a282ff76c53b47b"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TrCutBlock.",
            "VernacEndSegment",
            "9efc6bebb85217cc8e00a0a32b9c5504f1248b9b"
        ],
        [
            "Section TrBlock.",
            "VernacBeginSection",
            "c44c6374b131ca245d5b4f52e39107d3922565fe"
        ],
        [
            "Variables m1 m2 n1 n2 : nat.",
            "VernacAssumption",
            "de20afaaa595b676d3aaf7936013901a768db2d6"
        ],
        [
            "Variables (Aul : 'M[R]_(m1, n1)) (Aur : 'M[R]_(m1, n2)).",
            "VernacAssumption",
            "cdd7a78f2f64da8411c905ba5b279da3e11307ce"
        ],
        [
            "Variables (Adl : 'M[R]_(m2, n1)) (Adr : 'M[R]_(m2, n2)).",
            "VernacAssumption",
            "53b4c44197cba9b9acfaa1446ac56661a6f89941"
        ],
        [
            "Lemma tr_block_mx : (block_mx Aul Aur Adl Adr)^T = block_mx Aul^T Adl^T Aur^T Adr^T.",
            "VernacStartTheoremProof",
            "af8c0cbc60dfc6a7018a3b56f4e7f60cf4afe40c"
        ],
        [
            "rewrite -[_^T]submxK -trmx_ulsub -trmx_ursub -trmx_dlsub -trmx_drsub.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite block_mxKul block_mxKur block_mxKdl block_mxKdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mxEh : block_mx Aul Aur Adl Adr = row_mx (col_mx Aul Adl) (col_mx Aur Adr).",
            "VernacStartTheoremProof",
            "29d5eeb547334770a9af9a0942e690d86fca165f"
        ],
        [
            "by apply: trmx_inj; rewrite tr_block_mx tr_row_mx 2!tr_col_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TrBlock.",
            "VernacEndSegment",
            "c97f85d7e21395705295890627d38f53438f458c"
        ],
        [
            "Lemma block_mxA m1 m2 m3 n1 n2 n3 (A11 : 'M_(m1, n1)) (A12 : 'M_(m1, n2)) (A13 : 'M_(m1, n3)) (A21 : 'M_(m2, n1)) (A22 : 'M_(m2, n2)) (A23 : 'M_(m2, n3)) (A31 : 'M_(m3, n1)) (A32 : 'M_(m3, n2)) (A33 : 'M_(m3, n3)) : let cast := (esym (addnA m1 m2 m3), esym (addnA n1 n2 n3)) in let row1 := row_mx A12 A13 in let col1 := col_mx A21 A31 in let row3 := row_mx A31 A32 in let col3 := col_mx A13 A23 in block_mx A11 row1 col1 (block_mx A22 A23 A32 A33) = castmx cast (block_mx (block_mx A11 A12 A21 A22) col3 row3 A33).",
            "VernacStartTheoremProof",
            "ceff2ec8dfaffccc30e34cf625bfad7451bbb30d"
        ],
        [
            "rewrite /= block_mxEh !col_mxA -cast_row_mx -block_mxEv -block_mxEh.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite block_mxEv block_mxEh !row_mxA -cast_col_mx -block_mxEh -block_mxEv.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite castmx_comp etrans_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition block_mxAx := block_mxA.",
            "VernacDefinition",
            "e97c0b88b35bd01123cbb48e1011e3647f603e8d"
        ],
        [
            "Section VecMatrix.",
            "VernacBeginSection",
            "89aee5d4b74ec808553f30b02d27396f01190eb1"
        ],
        [
            "Variables m n : nat.",
            "VernacAssumption",
            "e3492c4fff3a30c2074b69e9ef3c152c1d2695a7"
        ],
        [
            "Lemma mxvec_cast : #|{:'I_m * 'I_n}| = (m * n)%N.",
            "VernacStartTheoremProof",
            "af9e7008c05ad5081278ef219007a348f8129d69"
        ],
        [
            "by rewrite card_prod !card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mxvec_index (i : 'I_m) (j : 'I_n) := cast_ord mxvec_cast (enum_rank (i, j)).",
            "VernacDefinition",
            "159b0ef0f8f1aeb8b030c79e9fb64466e1cc84c7"
        ],
        [
            "Variant is_mxvec_index : 'I_(m * n) -> Type := IsMxvecIndex i j : is_mxvec_index (mxvec_index i j).",
            "VernacInductive",
            "f064f9a99e2c790f82c31bf7bf2feddd79d0f399"
        ],
        [
            "Lemma mxvec_indexP k : is_mxvec_index k.",
            "VernacStartTheoremProof",
            "3af10f5c20d606b147a6c7fad956a188915024bc"
        ],
        [
            "rewrite -[k](cast_ordK (esym mxvec_cast)) esymK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[_ k]enum_valK; case: (enum_val _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Coercion pair_of_mxvec_index k (i_k : is_mxvec_index k) := let: IsMxvecIndex i j := i_k in (i, j).",
            "VernacDefinition",
            "2aa12819ed7ca4333b5f5ccc302fe978259faf41"
        ],
        [
            "Definition mxvec (A : 'M[R]_(m, n)) := castmx (erefl _, mxvec_cast) (\\row_k A (enum_val k).1 (enum_val k).2).",
            "VernacDefinition",
            "aa301f94b88ad8cc1029f2c7246bed0b0e5c46ba"
        ],
        [
            "Fact vec_mx_key : unit.",
            "VernacStartTheoremProof",
            "cca8304d8db4d510dff596b4a98b41d0d4b078a1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition vec_mx (u : 'rV[R]_(m * n)) := \\matrix[vec_mx_key]_(i, j) u 0 (mxvec_index i j).",
            "VernacDefinition",
            "768cf9fb849fe8c5da1cb99253fad515a7198f1d"
        ],
        [
            "Lemma mxvecE A i j : mxvec A 0 (mxvec_index i j) = A i j.",
            "VernacStartTheoremProof",
            "4969492c0f89ff3ff76e13e455b6c04d2b0653da"
        ],
        [
            "by rewrite castmxE mxE cast_ordK enum_rankK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxvecK : cancel mxvec vec_mx.",
            "VernacStartTheoremProof",
            "c6928761a132bbe2a81b3f9c4301b8303d75272c"
        ],
        [
            "by move=> A; apply/matrixP=> i j; rewrite mxE mxvecE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vec_mxK : cancel vec_mx mxvec.",
            "VernacStartTheoremProof",
            "902f2e970c54160d0ab1a38c75c225d5179ba2c0"
        ],
        [
            "by move=> u; apply/rowP=> k; case/mxvec_indexP: k => i j; rewrite mxvecE mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma curry_mxvec_bij : {on 'I_(m * n), bijective (prod_curry mxvec_index)}.",
            "VernacStartTheoremProof",
            "ea6ef5606085fe8cf8bdafd63f558b180e125246"
        ],
        [
            "exists (enum_val \\o cast_ord (esym mxvec_cast)) => [[i j] _ | k _] /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite cast_ordK enum_rankK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/mxvec_indexP: k => i j /=; rewrite cast_ordK enum_rankK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End VecMatrix.",
            "VernacEndSegment",
            "7a74955be12eea2569082d11a56e74b1064aadfc"
        ],
        [
            "End MatrixStructural.",
            "VernacEndSegment",
            "8f72bea71782218bf32c294a3a63e349b7afb952"
        ],
        [
            "Arguments const_mx {R m n}.",
            "VernacArguments",
            "c1bcf011e97ed79f9dfaed0623de50b2c779d371"
        ],
        [
            "Arguments row_mxA {R m n1 n2 n3 A1 A2 A3}.",
            "VernacArguments",
            "aaa43577beec16621e26bb7d092f587f56d9684e"
        ],
        [
            "Arguments col_mxA {R m1 m2 m3 n A1 A2 A3}.",
            "VernacArguments",
            "8c42244682606bec3f790d8268dcdada2beb57d1"
        ],
        [
            "Arguments block_mxA {R m1 m2 m3 n1 n2 n3 A11 A12 A13 A21 A22 A23 A31 A32 A33}.",
            "VernacArguments",
            "487fd3484a4ad73b9bd3942f010cead31f35db55"
        ],
        [
            "Prenex Implicits castmx trmx trmxK lsubmx rsubmx usubmx dsubmx row_mx col_mx.",
            "VernacExtend",
            "dad38cbf75ae3a7398e73d2f2066ea832795222e"
        ],
        [
            "Prenex Implicits block_mx ulsubmx ursubmx dlsubmx drsubmx.",
            "VernacExtend",
            "ca0615ebba14f5c0b222f71804db9d220140653a"
        ],
        [
            "Prenex Implicits mxvec vec_mx mxvec_indexP mxvecK vec_mxK.",
            "VernacExtend",
            "350216cb20b333a491cd8f6e7fbb3fb5105fcffe"
        ],
        [
            "Arguments trmx_inj {R m n} [A1 A2] eqA12t : rename.",
            "VernacArguments",
            "9508365c3a795bc94afb4e5edd34c64bd9da66f2"
        ],
        [
            "Notation \"A ^T\" := (trmx A) : ring_scope.",
            "VernacNotation",
            "3dd05dab99f549c339aeee69af93fd8be0b3ad7f"
        ],
        [
            "Section MapMatrix.",
            "VernacBeginSection",
            "8172700d34cfbff0166a3f51c246b046fcdbaac3"
        ],
        [
            "Variables (aT rT : Type) (f : aT -> rT).",
            "VernacAssumption",
            "d803771ae1794e0038bcb6c23990791e7d81567a"
        ],
        [
            "Fact map_mx_key : unit.",
            "VernacStartTheoremProof",
            "cab89bf23f6f55b30b628f7fda27dd67433ac74d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition map_mx m n (A : 'M_(m, n)) := \\matrix[map_mx_key]_(i, j) f (A i j).",
            "VernacDefinition",
            "11a0a001e5737f75dddbff275f78f4957c30cf85"
        ],
        [
            "Notation \"A ^f\" := (map_mx A) : ring_scope.",
            "VernacNotation",
            "3918e6de27cb9f8d52943aa73f5c9c567019a5d9"
        ],
        [
            "Section OneMatrix.",
            "VernacBeginSection",
            "26e1cb027ac6430532098032cd34e64f38d06e1f"
        ],
        [
            "Variables (m n : nat) (A : 'M[aT]_(m, n)).",
            "VernacAssumption",
            "97fc96c2b6798bf65f01110f0b60f48290017f43"
        ],
        [
            "Lemma map_trmx : A^f^T = A^T^f.",
            "VernacStartTheoremProof",
            "c5393f61fba888a787e68f1617b140a5b3c5ce6a"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_const_mx a : (const_mx a)^f = const_mx (f a) :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "0ddd0a6fc35efd9df59c32fb79235f0e11dfde99"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_row i : (row i A)^f = row i A^f.",
            "VernacStartTheoremProof",
            "c133caaaf043fee785fe16b148a107e543862098"
        ],
        [
            "by apply/rowP=> j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_col j : (col j A)^f = col j A^f.",
            "VernacStartTheoremProof",
            "22713ce133d14182bc7226daf5f735a4091ef786"
        ],
        [
            "by apply/colP=> i; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_row' i0 : (row' i0 A)^f = row' i0 A^f.",
            "VernacStartTheoremProof",
            "688a5d7c49e850136d033df9badd590b9dcb723b"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_col' j0 : (col' j0 A)^f = col' j0 A^f.",
            "VernacStartTheoremProof",
            "7903bcfb2fb9da65a88e83543963c740645b36f4"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_row_perm s : (row_perm s A)^f = row_perm s A^f.",
            "VernacStartTheoremProof",
            "435c4bf567f3f409a30e3f9c09ae08e13c31dade"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_col_perm s : (col_perm s A)^f = col_perm s A^f.",
            "VernacStartTheoremProof",
            "96e62e351d9d536cd82734060f602476186e5180"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_xrow i1 i2 : (xrow i1 i2 A)^f = xrow i1 i2 A^f.",
            "VernacStartTheoremProof",
            "78321ecdd5055200c4138c20f32301ae36279f3f"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_xcol j1 j2 : (xcol j1 j2 A)^f = xcol j1 j2 A^f.",
            "VernacStartTheoremProof",
            "c4a06fd2921e36f00462c72cbf8569e83b5aa3d1"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_castmx m' n' c : (castmx c A)^f = castmx c A^f :> 'M_(m', n').",
            "VernacStartTheoremProof",
            "8cb521b0caeb6c383065610cbd00736a2100f00b"
        ],
        [
            "by apply/matrixP=> i j; rewrite !(castmxE, mxE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_conform_mx m' n' (B : 'M_(m', n')) : (conform_mx B A)^f = conform_mx B^f A^f.",
            "VernacStartTheoremProof",
            "970ce00b3cc67470f00abb9ca090c1ed7aa8377b"
        ],
        [
            "move: B; have [[<- <-] B|] := eqVneq (m, n) (m', n').",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite !conform_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite negb_and => neq_mn B; rewrite !nonconform_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mxvec : (mxvec A)^f = mxvec A^f.",
            "VernacStartTheoremProof",
            "8956a402e47f4299882df255a3eb39d0aa152672"
        ],
        [
            "by apply/rowP=> i; rewrite !(castmxE, mxE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_vec_mx (v : 'rV_(m * n)) : (vec_mx v)^f = vec_mx v^f.",
            "VernacStartTheoremProof",
            "ff3c019759f8c5cf4da54809f4368f8fa4afe24c"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OneMatrix.",
            "VernacEndSegment",
            "5224fd1e7fb9cbcd326c48c23d1385b9238103e4"
        ],
        [
            "Section Block.",
            "VernacBeginSection",
            "73f0b9db045eb14e96b3595eb4db0d55328821dd"
        ],
        [
            "Variables m1 m2 n1 n2 : nat.",
            "VernacAssumption",
            "de20afaaa595b676d3aaf7936013901a768db2d6"
        ],
        [
            "Variables (Aul : 'M[aT]_(m1, n1)) (Aur : 'M[aT]_(m1, n2)).",
            "VernacAssumption",
            "a5d8cf23c44adc54dbae5545ac72afaacd645de9"
        ],
        [
            "Variables (Adl : 'M[aT]_(m2, n1)) (Adr : 'M[aT]_(m2, n2)).",
            "VernacAssumption",
            "21d6209c20b2fd1d299185dcc2cb4906f1cdc4a5"
        ],
        [
            "Variables (Bh : 'M[aT]_(m1, n1 + n2)) (Bv : 'M[aT]_(m1 + m2, n1)).",
            "VernacAssumption",
            "37112b16bc1979b77748ab7f60ca63edd23d6548"
        ],
        [
            "Variable B : 'M[aT]_(m1 + m2, n1 + n2).",
            "VernacAssumption",
            "09d40b844e3516910a783afd917907fd364811c3"
        ],
        [
            "Lemma map_row_mx : (row_mx Aul Aur)^f = row_mx Aul^f Aur^f.",
            "VernacStartTheoremProof",
            "74377421faf6f30588ce72f6a1de80599b7f8c46"
        ],
        [
            "by apply/matrixP=> i j; do 2![rewrite !mxE //; case: split => ?].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_col_mx : (col_mx Aul Adl)^f = col_mx Aul^f Adl^f.",
            "VernacStartTheoremProof",
            "e2cf16188cd015497190a4752ca6a19dda5b61c5"
        ],
        [
            "by apply/matrixP=> i j; do 2![rewrite !mxE //; case: split => ?].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_block_mx : (block_mx Aul Aur Adl Adr)^f = block_mx Aul^f Aur^f Adl^f Adr^f.",
            "VernacStartTheoremProof",
            "b763cdb4d75db583c8481ff1a8047169b3bde543"
        ],
        [
            "by apply/matrixP=> i j; do 3![rewrite !mxE //; case: split => ?].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_lsubmx : (lsubmx Bh)^f = lsubmx Bh^f.",
            "VernacStartTheoremProof",
            "67f6ba13b6769c93264020456746c1c2e65c6bf0"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_rsubmx : (rsubmx Bh)^f = rsubmx Bh^f.",
            "VernacStartTheoremProof",
            "b029680c54f391f0c60dae3d3e32e4f86185095c"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_usubmx : (usubmx Bv)^f = usubmx Bv^f.",
            "VernacStartTheoremProof",
            "ce90e5319c19796ea3820c81e5a0fddf1f75d223"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_dsubmx : (dsubmx Bv)^f = dsubmx Bv^f.",
            "VernacStartTheoremProof",
            "d3424145af62869ae3009d0082e11746d2c19256"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_ulsubmx : (ulsubmx B)^f = ulsubmx B^f.",
            "VernacStartTheoremProof",
            "d5e00a5fbf7ec0febaa073f00b1aa3a7b6f1455c"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_ursubmx : (ursubmx B)^f = ursubmx B^f.",
            "VernacStartTheoremProof",
            "753f5111918c742de2f646559c76a64a86b1d111"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_dlsubmx : (dlsubmx B)^f = dlsubmx B^f.",
            "VernacStartTheoremProof",
            "859716270613a534a07d33ad28e90f100c488f70"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_drsubmx : (drsubmx B)^f = drsubmx B^f.",
            "VernacStartTheoremProof",
            "5b972e17a6723ca767db1b686da9ba53d1a33b17"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Block.",
            "VernacEndSegment",
            "5f8d640ca5688b671361676b38f2679382c9625c"
        ],
        [
            "End MapMatrix.",
            "VernacEndSegment",
            "b401c07f8e3f43933bd07a3c370244184007b6c2"
        ],
        [
            "Arguments map_mx {aT rT} f {m n} A.",
            "VernacArguments",
            "37ead2e169fb9153a89272e755a88fa2640ded1d"
        ],
        [
            "Section MatrixZmodule.",
            "VernacBeginSection",
            "52583d60b12fcbf8c57320660679c5157c2b4073"
        ],
        [
            "Variable V : zmodType.",
            "VernacAssumption",
            "20fc0561595510560fba41d84ed764f8530e7ac1"
        ],
        [
            "Section FixedDim.",
            "VernacBeginSection",
            "29e73d88470a848f056ed9a83fbcb296d2461855"
        ],
        [
            "Variables m n : nat.",
            "VernacAssumption",
            "e3492c4fff3a30c2074b69e9ef3c152c1d2695a7"
        ],
        [
            "Implicit Types A B : 'M[V]_(m, n).",
            "VernacReserve",
            "da75a68b8187da0ab5d6e93a37e67d3f3284c2ac"
        ],
        [
            "Fact oppmx_key : unit.",
            "VernacStartTheoremProof",
            "13faa88cae2471e0c137c2e808a0f118568d8077"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact addmx_key : unit.",
            "VernacStartTheoremProof",
            "82f2c2d6f186b54b60532f31bff1d89659f094eb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition oppmx A := \\matrix[oppmx_key]_(i, j) (- A i j).",
            "VernacDefinition",
            "1a96f045177cb587502c7700b5b85b91eabe0081"
        ],
        [
            "Definition addmx A B := \\matrix[addmx_key]_(i, j) (A i j + B i j).",
            "VernacDefinition",
            "7f921d8ddfe9686354724afcabe8e4eebc6d7bc9"
        ],
        [
            "Lemma addmxA : associative addmx.",
            "VernacStartTheoremProof",
            "627cb6d429badf6526226f2bd050722d4433e317"
        ],
        [
            "by move=> A B C; apply/matrixP=> i j; rewrite !mxE addrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addmxC : commutative addmx.",
            "VernacStartTheoremProof",
            "4ab83eddd272d90b8745761f0eedfe4674c4dc5b"
        ],
        [
            "by move=> A B; apply/matrixP=> i j; rewrite !mxE addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add0mx : left_id (const_mx 0) addmx.",
            "VernacStartTheoremProof",
            "9e5eed5a77e757dac7fd9ac5738f4d011b9822d1"
        ],
        [
            "by move=> A; apply/matrixP=> i j; rewrite !mxE add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addNmx : left_inverse (const_mx 0) oppmx addmx.",
            "VernacStartTheoremProof",
            "a525ad879d5d239b27191a0435e9ef59b398624f"
        ],
        [
            "by move=> A; apply/matrixP=> i j; rewrite !mxE addNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition matrix_zmodMixin := ZmodMixin addmxA addmxC add0mx addNmx.",
            "VernacDefinition",
            "913832b263c39f815ca9993f0b6187c7e397604b"
        ],
        [
            "Canonical matrix_zmodType := Eval hnf in ZmodType 'M[V]_(m, n) matrix_zmodMixin.",
            "VernacDefinition",
            "080b18365333d069219db797a75f75efba50fe03"
        ],
        [
            "Lemma mulmxnE A d i j : (A *+ d) i j = A i j *+ d.",
            "VernacStartTheoremProof",
            "25858353fee6d38cbcb0bfa450675baae9bbde20"
        ],
        [
            "by elim: d => [|d IHd]; rewrite ?mulrS mxE ?IHd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma summxE I r (P : pred I) (E : I -> 'M_(m, n)) i j : (\\sum_(k <- r | P k) E k) i j = \\sum_(k <- r | P k) E k i j.",
            "VernacStartTheoremProof",
            "943ec2da5fe70a9ef45d25b697c76431ffb4f4f1"
        ],
        [
            "by apply: (big_morph (fun A => A i j)) => [A B|]; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma const_mx_is_additive : additive const_mx.",
            "VernacStartTheoremProof",
            "3bb4929ad80be5940174633cd47cd6ff0e9c08bf"
        ],
        [
            "by move=> a b; apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical const_mx_additive := Additive const_mx_is_additive.",
            "VernacDefinition",
            "a357540e6112c3de6cf5da33034a4c440101c772"
        ],
        [
            "End FixedDim.",
            "VernacEndSegment",
            "b2c36cdcd499ddce453581634291d2ea7d6960df"
        ],
        [
            "Section Additive.",
            "VernacBeginSection",
            "43f8d26641e00b8319e52fe8bc38a842d7056dc6"
        ],
        [
            "Variables (m n p q : nat) (f : 'I_p -> 'I_q -> 'I_m) (g : 'I_p -> 'I_q -> 'I_n).",
            "VernacAssumption",
            "2a722f7b043162ec9c53566a4c4981542c5082ef"
        ],
        [
            "Definition swizzle_mx k (A : 'M[V]_(m, n)) := \\matrix[k]_(i, j) A (f i j) (g i j).",
            "VernacDefinition",
            "09c40e254f075e1381a4b9f4b9337f0f379b33b2"
        ],
        [
            "Lemma swizzle_mx_is_additive k : additive (swizzle_mx k).",
            "VernacStartTheoremProof",
            "c5024d0fbd7b664bb7f7dbb7335b6d68355ee4e8"
        ],
        [
            "by move=> A B; apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical swizzle_mx_additive k := Additive (swizzle_mx_is_additive k).",
            "VernacDefinition",
            "f9b808220d5f9ae1eefc6cf39ff5624ccef4350b"
        ],
        [
            "End Additive.",
            "VernacEndSegment",
            "73bb5b1c75211ef95c10fea430b244ebd0815a16"
        ],
        [
            "Local Notation SwizzleAdd op := [additive of op as swizzle_mx _ _ _].",
            "VernacSyntacticDefinition",
            "01a4c7d39cab6e507e4d6b63fd5bfed6dfb8091a"
        ],
        [
            "Canonical trmx_additive m n := SwizzleAdd (@trmx V m n).",
            "VernacDefinition",
            "2c347c38cdacc05c64348dadd74bc657205ca15e"
        ],
        [
            "Canonical row_additive m n i := SwizzleAdd (@row V m n i).",
            "VernacDefinition",
            "f0e141a30ef7b637ff93a1b0a0290f026ecb48d9"
        ],
        [
            "Canonical col_additive m n j := SwizzleAdd (@col V m n j).",
            "VernacDefinition",
            "784dca120f8a90ac1848772453db2434c655f4ac"
        ],
        [
            "Canonical row'_additive m n i := SwizzleAdd (@row' V m n i).",
            "VernacDefinition",
            "2c06a256e9e64fdddff0a9c2f5e849eee3aa3a36"
        ],
        [
            "Canonical col'_additive m n j := SwizzleAdd (@col' V m n j).",
            "VernacDefinition",
            "6b1c1ee3ddda860b10c2c84f7765ac814ca5f3ed"
        ],
        [
            "Canonical row_perm_additive m n s := SwizzleAdd (@row_perm V m n s).",
            "VernacDefinition",
            "1c031b9da414d0fbf3d95a72e58e16bb724b4272"
        ],
        [
            "Canonical col_perm_additive m n s := SwizzleAdd (@col_perm V m n s).",
            "VernacDefinition",
            "f8332ac2a5ca06a54e91c6d4a3f1ea23f074595b"
        ],
        [
            "Canonical xrow_additive m n i1 i2 := SwizzleAdd (@xrow V m n i1 i2).",
            "VernacDefinition",
            "677dedc81bf8bea926064f9d6f9e913077904be5"
        ],
        [
            "Canonical xcol_additive m n j1 j2 := SwizzleAdd (@xcol V m n j1 j2).",
            "VernacDefinition",
            "14545098aaeb0e912835da5a00b46883770e2f4c"
        ],
        [
            "Canonical lsubmx_additive m n1 n2 := SwizzleAdd (@lsubmx V m n1 n2).",
            "VernacDefinition",
            "e2c1833163abd9a93787d8b03c77eda267b7e806"
        ],
        [
            "Canonical rsubmx_additive m n1 n2 := SwizzleAdd (@rsubmx V m n1 n2).",
            "VernacDefinition",
            "691fdbf51b7c6ef43a5c2b2c0a580bb5e1e9bec1"
        ],
        [
            "Canonical usubmx_additive m1 m2 n := SwizzleAdd (@usubmx V m1 m2 n).",
            "VernacDefinition",
            "8765df028841ee53541b7f5773398a03a2972bd4"
        ],
        [
            "Canonical dsubmx_additive m1 m2 n := SwizzleAdd (@dsubmx V m1 m2 n).",
            "VernacDefinition",
            "6f52d45097d7cd982d7a5cfa628b55c79dadf769"
        ],
        [
            "Canonical vec_mx_additive m n := SwizzleAdd (@vec_mx V m n).",
            "VernacDefinition",
            "3975102ccb20f57df35002ffee0d52c54804885b"
        ],
        [
            "Canonical mxvec_additive m n := Additive (can2_additive (@vec_mxK V m n) mxvecK).",
            "VernacDefinition",
            "93d6f2fa109428e3e3e3f6837c951bccec4b9b44"
        ],
        [
            "Lemma flatmx0 n : all_equal_to (0 : 'M_(0, n)).",
            "VernacStartTheoremProof",
            "344d0460cb2841ba7264138186443cd87b462477"
        ],
        [
            "by move=> A; apply/matrixP=> [] [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma thinmx0 n : all_equal_to (0 : 'M_(n, 0)).",
            "VernacStartTheoremProof",
            "915ada9c0ce842566efe6179b5c156d851854e7f"
        ],
        [
            "by move=> A; apply/matrixP=> i [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx0 m n : (0 : 'M_(m, n))^T = 0.",
            "VernacStartTheoremProof",
            "edd8364a25bbc621ff0f6ecee607d5a2f036bcac"
        ],
        [
            "exact: trmx_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row0 m n i0 : row i0 (0 : 'M_(m, n)) = 0.",
            "VernacStartTheoremProof",
            "ec0f081dd71fb137c25bae72dc87377a22570e30"
        ],
        [
            "exact: row_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col0 m n j0 : col j0 (0 : 'M_(m, n)) = 0.",
            "VernacStartTheoremProof",
            "62aef4f238a1960340392c936aebd8ff62d695f6"
        ],
        [
            "exact: col_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxvec_eq0 m n (A : 'M_(m, n)) : (mxvec A == 0) = (A == 0).",
            "VernacStartTheoremProof",
            "689ad85b7a1614399995c86d0212fc3867f8b511"
        ],
        [
            "by rewrite (can2_eq mxvecK vec_mxK) raddf0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vec_mx_eq0 m n (v : 'rV_(m * n)) : (vec_mx v == 0) = (v == 0).",
            "VernacStartTheoremProof",
            "27d340b110730a17873e7ca33a34f2ad55465cae"
        ],
        [
            "by rewrite (can2_eq vec_mxK mxvecK) raddf0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_mx0 m n1 n2 : row_mx 0 0 = 0 :> 'M_(m, n1 + n2).",
            "VernacStartTheoremProof",
            "ba4463d123ee7b3d8b881170143b7418ced065fa"
        ],
        [
            "exact: row_mx_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_mx0 m1 m2 n : col_mx 0 0 = 0 :> 'M_(m1 + m2, n).",
            "VernacStartTheoremProof",
            "0f779a24697002bb74444b380535fec0ddb7a665"
        ],
        [
            "exact: col_mx_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mx0 m1 m2 n1 n2 : block_mx 0 0 0 0 = 0 :> 'M_(m1 + m2, n1 + n2).",
            "VernacStartTheoremProof",
            "beee344954b4fd517d1cb2fcf88fbf6b434fcad3"
        ],
        [
            "exact: block_mx_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac split_mxE := apply/matrixP=> i j; do ![rewrite mxE | case: split => ?].",
            "VernacExtend",
            "786d697da62158fecf15eb933efa353a725a87b5"
        ],
        [
            "Lemma opp_row_mx m n1 n2 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : - row_mx A1 A2 = row_mx (- A1) (- A2).",
            "VernacStartTheoremProof",
            "b2d1eaa0cbc36e24bcd9961ac28176df0d5d6129"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_col_mx m1 m2 n (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : - col_mx A1 A2 = col_mx (- A1) (- A2).",
            "VernacStartTheoremProof",
            "2b1bb9db57fac5b109f3eaaa754babd27be04eaa"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_block_mx m1 m2 n1 n2 (Aul : 'M_(m1, n1)) Aur Adl (Adr : 'M_(m2, n2)) : - block_mx Aul Aur Adl Adr = block_mx (- Aul) (- Aur) (- Adl) (- Adr).",
            "VernacStartTheoremProof",
            "62cc643b7f186dde28ec4c067f86d98b0867e4f1"
        ],
        [
            "by rewrite opp_col_mx !opp_row_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_row_mx m n1 n2 (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) B1 B2 : row_mx A1 A2 + row_mx B1 B2 = row_mx (A1 + B1) (A2 + B2).",
            "VernacStartTheoremProof",
            "efc97c19bb7e6aa5fbf809fee29dc15aaae00ef7"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_col_mx m1 m2 n (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) B1 B2 : col_mx A1 A2 + col_mx B1 B2 = col_mx (A1 + B1) (A2 + B2).",
            "VernacStartTheoremProof",
            "03d5f9657b35c243f89e83aaf1f584a90e2d1722"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_block_mx m1 m2 n1 n2 (Aul : 'M_(m1, n1)) Aur Adl (Adr : 'M_(m2, n2)) Bul Bur Bdl Bdr : let A := block_mx Aul Aur Adl Adr in let B := block_mx Bul Bur Bdl Bdr in A + B = block_mx (Aul + Bul) (Aur + Bur) (Adl + Bdl) (Adr + Bdr).",
            "VernacStartTheoremProof",
            "7fda9cd4f8c9c8aa2324ef3ec62d5d82f72c8194"
        ],
        [
            "by rewrite /= add_col_mx !add_row_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_mx_eq0 (m n1 n2 : nat) (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)): (row_mx A1 A2 == 0) = (A1 == 0) && (A2 == 0).",
            "VernacStartTheoremProof",
            "208c34005a66e032ccce8364cb66a89d29d9aa31"
        ],
        [
            "apply/eqP/andP; last by case=> /eqP-> /eqP->; rewrite row_mx0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -row_mx0 => /eq_row_mx [-> ->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_mx_eq0 (m1 m2 n : nat) (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)): (col_mx A1 A2 == 0) = (A1 == 0) && (A2 == 0).",
            "VernacStartTheoremProof",
            "463155a970f66833fcde8020c58d1bf4c3c590d3"
        ],
        [
            "by rewrite -![_ == 0](inj_eq trmx_inj) !trmx0 tr_col_mx row_mx_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma block_mx_eq0 m1 m2 n1 n2 (Aul : 'M_(m1, n1)) Aur Adl (Adr : 'M_(m2, n2)) : (block_mx Aul Aur Adl Adr == 0) = [&& Aul == 0, Aur == 0, Adl == 0 & Adr == 0].",
            "VernacStartTheoremProof",
            "4cdf66c8884aee04adb3db7dedcfc026f0dae1e2"
        ],
        [
            "by rewrite col_mx_eq0 !row_mx_eq0 !andbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nz_row m n (A : 'M_(m, n)) := oapp (fun i => row i A) 0 [pick i | row i A != 0].",
            "VernacDefinition",
            "6aa6dbc6e4b3645f8cf9e42d634e1e0e82bc4cdc"
        ],
        [
            "Lemma nz_row_eq0 m n (A : 'M_(m, n)) : (nz_row A == 0) = (A == 0).",
            "VernacStartTheoremProof",
            "322ad22d5f69dae8e52d7f1563b64782d8854697"
        ],
        [
            "rewrite /nz_row; symmetry; case: pickP => [i /= nzAi | Ai0].",
            "VernacExtend",
            "4cd924e4572aeb158a97e68d9463cedffdcfc8f4"
        ],
        [
            "by rewrite (negbTE nzAi); apply: contraTF nzAi => /eqP->; rewrite row0 eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite eqxx; apply/eqP/row_matrixP=> i; move/eqP: (Ai0 i) ->; rewrite row0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MatrixZmodule.",
            "VernacEndSegment",
            "2ed373d21723b65e294fdcb1b07ff165a9b52309"
        ],
        [
            "Section FinZmodMatrix.",
            "VernacBeginSection",
            "41e57b974695abb90704bbff8fd681d4fe01c483"
        ],
        [
            "Variables (V : finZmodType) (m n : nat).",
            "VernacAssumption",
            "27385961a8a636de95006f1e0bdf90172f066eb7"
        ],
        [
            "Local Notation MV := 'M[V]_(m, n).",
            "VernacSyntacticDefinition",
            "347e12e287add9900ed336697c42f7338681d180"
        ],
        [
            "Canonical matrix_finZmodType := Eval hnf in [finZmodType of MV].",
            "VernacDefinition",
            "6646c4337a1f3b99170ce5ff7b5fd81f0e4f17b5"
        ],
        [
            "Canonical matrix_baseFinGroupType := Eval hnf in [baseFinGroupType of MV for +%R].",
            "VernacDefinition",
            "98c15cc3098f79057694177a4cf3bced967b55d8"
        ],
        [
            "Canonical matrix_finGroupType := Eval hnf in [finGroupType of MV for +%R].",
            "VernacDefinition",
            "4ee30a4c38bce1ef654adda942bda1f2457a1266"
        ],
        [
            "End FinZmodMatrix.",
            "VernacEndSegment",
            "4bd07d7c84e1b6445b0bb76190d3963e85f08706"
        ],
        [
            "Section MapZmodMatrix.",
            "VernacBeginSection",
            "290b6e0f48d47592cf6592a520d4eea63b303603"
        ],
        [
            "Variables (aR rR : zmodType) (f : {additive aR -> rR}) (m n : nat).",
            "VernacAssumption",
            "f7596e89d1b714a3d7511b5b17463dd5149ec9bb"
        ],
        [
            "Local Notation \"A ^f\" := (map_mx f A) : ring_scope.",
            "VernacNotation",
            "d033ebfb6b3ca0334a58d61928e620230e19b20e"
        ],
        [
            "Implicit Type A : 'M[aR]_(m, n).",
            "VernacReserve",
            "1aea7b70db19a0281f8e2c7219e84b79c67ce79d"
        ],
        [
            "Lemma map_mx0 : 0^f = 0 :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "60b72150ce4f0b0d6ce4a0d10ce3a5bf2b041c3c"
        ],
        [
            "by rewrite map_const_mx raddf0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mxN A : (- A)^f = - A^f.",
            "VernacStartTheoremProof",
            "a8cf1ec48731c5762e3a8d7c36728fcfb34938b9"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE raddfN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mxD A B : (A + B)^f = A^f + B^f.",
            "VernacStartTheoremProof",
            "db48f71ddd8834f70135ef41f653dc4a40194b66"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE raddfD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx_sub A B : (A - B)^f = A^f - B^f.",
            "VernacStartTheoremProof",
            "4ce1138d4f05e28aba88b7f12d99239249e20728"
        ],
        [
            "by rewrite map_mxD map_mxN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition map_mx_sum := big_morph _ map_mxD map_mx0.",
            "VernacDefinition",
            "bd1df8d5e20b31d025599bf7688f2a971f7bd5d9"
        ],
        [
            "Canonical map_mx_additive := Additive map_mx_sub.",
            "VernacDefinition",
            "6717433e567d679351c70543a406bf0ffae8f55b"
        ],
        [
            "End MapZmodMatrix.",
            "VernacEndSegment",
            "ccf83eacecd030adc058e4bc653d7a1ee79374dc"
        ],
        [
            "Section MatrixAlgebra.",
            "VernacBeginSection",
            "302cd89745ecab31a63eb1a8bab98ac188747f5c"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Section RingModule.",
            "VernacBeginSection",
            "72eb4ae933f4382961b41f797d42a957197b6da0"
        ],
        [
            "Variables m n : nat.",
            "VernacAssumption",
            "e3492c4fff3a30c2074b69e9ef3c152c1d2695a7"
        ],
        [
            "Implicit Types A B : 'M[R]_(m, n).",
            "VernacReserve",
            "f119dc1806afd270e41a4f931983fed6dcf067cf"
        ],
        [
            "Fact scalemx_key : unit.",
            "VernacStartTheoremProof",
            "525fbd1462aceb74fb1dd44a73c16ddf0fe56275"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition scalemx x A := \\matrix[scalemx_key]_(i, j) (x * A i j).",
            "VernacDefinition",
            "e71fe49bb9554db88c94c6d910366c548e09ed1e"
        ],
        [
            "Fact delta_mx_key : unit.",
            "VernacStartTheoremProof",
            "72daadb662f36b5d29de00e0cd5888add0a46c15"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition delta_mx i0 j0 : 'M[R]_(m, n) := \\matrix[delta_mx_key]_(i, j) ((i == i0) && (j == j0))%:R.",
            "VernacDefinition",
            "0047bac2a776a30c5a6168d5e9fd3d3f7726b150"
        ],
        [
            "Local Notation \"x *m: A\" := (scalemx x A) (at level 40) : ring_scope.",
            "VernacNotation",
            "e5ac204cbb1dce47eb086fc636d117c5231b8dc7"
        ],
        [
            "Lemma scale1mx A : 1 *m: A = A.",
            "VernacStartTheoremProof",
            "f64eb0e4996df4f9d7aa44688fec4b00aa3c1380"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalemxDl A x y : (x + y) *m: A = x *m: A + y *m: A.",
            "VernacStartTheoremProof",
            "f51fa17e44c81d95785b43fca92b1270a60e085d"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE mulrDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalemxDr x A B : x *m: (A + B) = x *m: A + x *m: B.",
            "VernacStartTheoremProof",
            "27d9b04e3cf12bc46a3e01ad60b5a8ac3e7e8a1a"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE mulrDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalemxA x y A : x *m: (y *m: A) = (x * y) *m: A.",
            "VernacStartTheoremProof",
            "152ed06a7692b6e35c3ad5003928e84c6cf01aaa"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition matrix_lmodMixin := LmodMixin scalemxA scale1mx scalemxDr scalemxDl.",
            "VernacDefinition",
            "923f4bee71a5f90a15a3519d8b0d081b28afce57"
        ],
        [
            "Canonical matrix_lmodType := Eval hnf in LmodType R 'M[R]_(m, n) matrix_lmodMixin.",
            "VernacDefinition",
            "6a80df6cc8c31eaac90b4e7b8b8b7ffd59a8ff79"
        ],
        [
            "Lemma scalemx_const a b : a *: const_mx b = const_mx (a * b).",
            "VernacStartTheoremProof",
            "e140da3f25c0399b390d5f8e459ed746daf6b344"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma matrix_sum_delta A : A = \\sum_(i < m) \\sum_(j < n) A i j *: delta_mx i j.",
            "VernacStartTheoremProof",
            "e539444f4719bfeb4cf00ecf63268d0439aea769"
        ],
        [
            "apply/matrixP=> i j.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite summxE (bigD1 i) // summxE (bigD1 j) //= !mxE !eqxx mulr1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !big1 ?addr0 //= => [i' | j']; rewrite eq_sym => /negbTE diff.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "by rewrite summxE big1 // => j' _; rewrite !mxE diff mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite !mxE eqxx diff mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RingModule.",
            "VernacEndSegment",
            "9d9ec6ad191cf4eed0b846577bcc8b1f4317e6a7"
        ],
        [
            "Section StructuralLinear.",
            "VernacBeginSection",
            "98159c83e174e178d9de5f58c2b5c55a0dd15870"
        ],
        [
            "Lemma swizzle_mx_is_scalable m n p q f g k : scalable (@swizzle_mx R m n p q f g k).",
            "VernacStartTheoremProof",
            "71802f4018d06b4689ce5f415da4413c2894dd69"
        ],
        [
            "by move=> a A; apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical swizzle_mx_scalable m n p q f g k := AddLinear (@swizzle_mx_is_scalable m n p q f g k).",
            "VernacDefinition",
            "f36b20d6b0d30cdb828d4c32219bfec47a2f51ca"
        ],
        [
            "Local Notation SwizzleLin op := [linear of op as swizzle_mx _ _ _].",
            "VernacSyntacticDefinition",
            "72c1389827c8de2fc719621e32c8d1d986962977"
        ],
        [
            "Canonical trmx_linear m n := SwizzleLin (@trmx R m n).",
            "VernacDefinition",
            "0b56b749f07133b44db69ac76b33e26ce341406a"
        ],
        [
            "Canonical row_linear m n i := SwizzleLin (@row R m n i).",
            "VernacDefinition",
            "97d2e49d83be8d0b2967806aad9a628ac3ddbc4f"
        ],
        [
            "Canonical col_linear m n j := SwizzleLin (@col R m n j).",
            "VernacDefinition",
            "93ab39faa515fd6555bcc9c8775dba6f029e9f75"
        ],
        [
            "Canonical row'_linear m n i := SwizzleLin (@row' R m n i).",
            "VernacDefinition",
            "511148bf9a9aadd8434a4f9b20cfa4d0accff94b"
        ],
        [
            "Canonical col'_linear m n j := SwizzleLin (@col' R m n j).",
            "VernacDefinition",
            "48bac210e7ea5156940abe44d33c613b825fba27"
        ],
        [
            "Canonical row_perm_linear m n s := SwizzleLin (@row_perm R m n s).",
            "VernacDefinition",
            "10a419e0c91b6f4b6725550cea1b2e4e21354a16"
        ],
        [
            "Canonical col_perm_linear m n s := SwizzleLin (@col_perm R m n s).",
            "VernacDefinition",
            "b467d8924043944c34c330f6729dabe01866a25d"
        ],
        [
            "Canonical xrow_linear m n i1 i2 := SwizzleLin (@xrow R m n i1 i2).",
            "VernacDefinition",
            "c69dd0e5a8018f1ed98c253beac9b4f722471d05"
        ],
        [
            "Canonical xcol_linear m n j1 j2 := SwizzleLin (@xcol R m n j1 j2).",
            "VernacDefinition",
            "b3677407833aa11a581e5f5f7de7a5b0b464aae2"
        ],
        [
            "Canonical lsubmx_linear m n1 n2 := SwizzleLin (@lsubmx R m n1 n2).",
            "VernacDefinition",
            "7aa7076df36cdb73255800b07f0376282de46682"
        ],
        [
            "Canonical rsubmx_linear m n1 n2 := SwizzleLin (@rsubmx R m n1 n2).",
            "VernacDefinition",
            "98b85c56cc30a1bbe9578c8f84480c5d865b0142"
        ],
        [
            "Canonical usubmx_linear m1 m2 n := SwizzleLin (@usubmx R m1 m2 n).",
            "VernacDefinition",
            "d6553e4e7c71f5b7733c85b20d60f9dba2886607"
        ],
        [
            "Canonical dsubmx_linear m1 m2 n := SwizzleLin (@dsubmx R m1 m2 n).",
            "VernacDefinition",
            "a20373a37c240e6d728a66cf69ca8435275cce85"
        ],
        [
            "Canonical vec_mx_linear m n := SwizzleLin (@vec_mx R m n).",
            "VernacDefinition",
            "2b93b26f649862a34837da09a52dec7944530612"
        ],
        [
            "Definition mxvec_is_linear m n := can2_linear (@vec_mxK R m n) mxvecK.",
            "VernacDefinition",
            "48f4c1ee0c3c4076789ffc0207bb5eaa875b6cbf"
        ],
        [
            "Canonical mxvec_linear m n := AddLinear (@mxvec_is_linear m n).",
            "VernacDefinition",
            "e944cd117aa789815c416530cd7346769b77a7f5"
        ],
        [
            "End StructuralLinear.",
            "VernacEndSegment",
            "6d7dfb77a25772f050074f0f3d86130ba76b77e2"
        ],
        [
            "Lemma trmx_delta m n i j : (delta_mx i j)^T = delta_mx j i :> 'M[R]_(n, m).",
            "VernacStartTheoremProof",
            "769a6082862afa9c16b993dd7d2bfc64aefcc939"
        ],
        [
            "by apply/matrixP=> i' j'; rewrite !mxE andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_sum_delta n (u : 'rV_n) : u = \\sum_(j < n) u 0 j *: delta_mx 0 j.",
            "VernacStartTheoremProof",
            "2a561dbcade6df894f03014ee8573a7b287e44d5"
        ],
        [
            "by rewrite {1}[u]matrix_sum_delta big_ord1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma delta_mx_lshift m n1 n2 i j : delta_mx i (lshift n2 j) = row_mx (delta_mx i j) 0 :> 'M_(m, n1 + n2).",
            "VernacStartTheoremProof",
            "093cf1b39836a2f84052b355bd89620f675a1d91"
        ],
        [
            "apply/matrixP=> i' j'; rewrite !mxE -(can_eq splitK) (unsplitK (inl _ _)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: split => ?; rewrite mxE ?andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma delta_mx_rshift m n1 n2 i j : delta_mx i (rshift n1 j) = row_mx 0 (delta_mx i j) :> 'M_(m, n1 + n2).",
            "VernacStartTheoremProof",
            "7d23499298bc0a84ee68489f3704643a364f4def"
        ],
        [
            "apply/matrixP=> i' j'; rewrite !mxE -(can_eq splitK) (unsplitK (inr _ _)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: split => ?; rewrite mxE ?andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma delta_mx_ushift m1 m2 n i j : delta_mx (lshift m2 i) j = col_mx (delta_mx i j) 0 :> 'M_(m1 + m2, n).",
            "VernacStartTheoremProof",
            "77239a2d970bf8a3c8982042e95c18a7bdfe0c7e"
        ],
        [
            "apply/matrixP=> i' j'; rewrite !mxE -(can_eq splitK) (unsplitK (inl _ _)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: split => ?; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma delta_mx_dshift m1 m2 n i j : delta_mx (rshift m1 i) j = col_mx 0 (delta_mx i j) :> 'M_(m1 + m2, n).",
            "VernacStartTheoremProof",
            "43a9fb966577332ea65555688f612ee504ee3cdc"
        ],
        [
            "apply/matrixP=> i' j'; rewrite !mxE -(can_eq splitK) (unsplitK (inr _ _)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: split => ?; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vec_mx_delta m n i j : vec_mx (delta_mx 0 (mxvec_index i j)) = delta_mx i j :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "91d671c0cc9d7682485e472b274668d973af03bb"
        ],
        [
            "by apply/matrixP=> i' j'; rewrite !mxE /= [_ == _](inj_eq enum_rank_inj).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxvec_delta m n i j : mxvec (delta_mx i j) = delta_mx 0 (mxvec_index i j) :> 'rV_(m * n).",
            "VernacStartTheoremProof",
            "649f6fdd13a1e24e6412be35033b5f38fdd1bc60"
        ],
        [
            "by rewrite -vec_mx_delta vec_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac split_mxE := apply/matrixP=> i j; do ![rewrite mxE | case: split => ?].",
            "VernacExtend",
            "786d697da62158fecf15eb933efa353a725a87b5"
        ],
        [
            "Lemma scale_row_mx m n1 n2 a (A1 : 'M_(m, n1)) (A2 : 'M_(m, n2)) : a *: row_mx A1 A2 = row_mx (a *: A1) (a *: A2).",
            "VernacStartTheoremProof",
            "6a9cbcef8a87ab12f6f9d2e2671d771cd775a453"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scale_col_mx m1 m2 n a (A1 : 'M_(m1, n)) (A2 : 'M_(m2, n)) : a *: col_mx A1 A2 = col_mx (a *: A1) (a *: A2).",
            "VernacStartTheoremProof",
            "d3e747389dccb2ef6149aeaa3c8256f27cbd590a"
        ],
        [
            "by split_mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scale_block_mx m1 m2 n1 n2 a (Aul : 'M_(m1, n1)) (Aur : 'M_(m1, n2)) (Adl : 'M_(m2, n1)) (Adr : 'M_(m2, n2)) : a *: block_mx Aul Aur Adl Adr = block_mx (a *: Aul) (a *: Aur) (a *: Adl) (a *: Adr).",
            "VernacStartTheoremProof",
            "c94eac1a65cb403660d69821312c5213917052ef"
        ],
        [
            "by rewrite scale_col_mx !scale_row_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact diag_mx_key : unit.",
            "VernacStartTheoremProof",
            "80d3a02eb6b1672185f64c0f6cf43797a504a321"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition diag_mx n (d : 'rV[R]_n) := \\matrix[diag_mx_key]_(i, j) (d 0 i *+ (i == j)).",
            "VernacDefinition",
            "ac8c006f18ba55cf442c8e26e609c0cc750aad84"
        ],
        [
            "Lemma tr_diag_mx n (d : 'rV_n) : (diag_mx d)^T = diag_mx d.",
            "VernacStartTheoremProof",
            "240c8f57036dbb80c6559b87978eddf621a64c82"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE eq_sym; case: eqP => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diag_mx_is_linear n : linear (@diag_mx n).",
            "VernacStartTheoremProof",
            "2b0511525d797a3a43484fa23bb0964ca4f70e90"
        ],
        [
            "by move=> a A B; apply/matrixP=> i j; rewrite !mxE mulrnAr mulrnDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical diag_mx_additive n := Additive (@diag_mx_is_linear n).",
            "VernacDefinition",
            "e123050492dac2e8a2b26f18556311ddc480ad22"
        ],
        [
            "Canonical diag_mx_linear n := Linear (@diag_mx_is_linear n).",
            "VernacDefinition",
            "d0babd7e9fe4afb609e924d4935b09e2490f012b"
        ],
        [
            "Lemma diag_mx_sum_delta n (d : 'rV_n) : diag_mx d = \\sum_i d 0 i *: delta_mx i i.",
            "VernacStartTheoremProof",
            "c973560e7166a39d16859a703e4ce5b44bcc0bb5"
        ],
        [
            "apply/matrixP=> i j; rewrite summxE (bigD1 i) //= !mxE eqxx /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite eq_sym mulr_natr big1 ?addr0 // => i' ne_i'i.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !mxE eq_sym (negbTE ne_i'i) mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ScalarMx.",
            "VernacBeginSection",
            "b2bb2b9b0efac7fe7d474a3726c2bccdff343a43"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Fact scalar_mx_key : unit.",
            "VernacStartTheoremProof",
            "add6b91b9844a9b4e3fdf483ce78d8bb273f8e6d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition scalar_mx x : 'M[R]_n := \\matrix[scalar_mx_key]_(i , j) (x *+ (i == j)).",
            "VernacDefinition",
            "8c0365240cbd17913b17c561b30885d8a83705e0"
        ],
        [
            "Notation \"x %:M\" := (scalar_mx x) : ring_scope.",
            "VernacNotation",
            "cb7a10e04cbad41c9f2097605bad9326c149d6c3"
        ],
        [
            "Lemma diag_const_mx a : diag_mx (const_mx a) = a%:M :> 'M_n.",
            "VernacStartTheoremProof",
            "3607d0b905722bcfa95005773d924a6d299c52e4"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_scalar_mx a : (a%:M)^T = a%:M.",
            "VernacStartTheoremProof",
            "a595604abc713090615cc505c62fc9e8d64401d1"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx1 : (1%:M)^T = 1%:M.",
            "VernacStartTheoremProof",
            "784bd27c852f44d383b94c23f7cac6238fd98678"
        ],
        [
            "exact: tr_scalar_mx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalar_mx_is_additive : additive scalar_mx.",
            "VernacStartTheoremProof",
            "92510c8426f48cba602b43d49c99a3f9d5777c57"
        ],
        [
            "by move=> a b; rewrite -!diag_const_mx !raddfB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical scalar_mx_additive := Additive scalar_mx_is_additive.",
            "VernacDefinition",
            "a9433fce340784a65daa02e823f676a74385b23f"
        ],
        [
            "Lemma scale_scalar_mx a1 a2 : a1 *: a2%:M = (a1 * a2)%:M :> 'M_n.",
            "VernacStartTheoremProof",
            "ffefec900433cf565dbcf08cc03263ec9473e03c"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE mulrnAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalemx1 a : a *: 1%:M = a%:M.",
            "VernacStartTheoremProof",
            "f066676a07d8250b3a6f043a07981bd1372ccbb9"
        ],
        [
            "by rewrite scale_scalar_mx mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalar_mx_sum_delta a : a%:M = \\sum_i a *: delta_mx i i.",
            "VernacStartTheoremProof",
            "123bf6bed17034043e80f82a6c3b030baa06f4f1"
        ],
        [
            "by rewrite -diag_const_mx diag_mx_sum_delta; apply: eq_bigr => i _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx1_sum_delta : 1%:M = \\sum_i delta_mx i i.",
            "VernacStartTheoremProof",
            "55513b0e85673f65268ea6ce3beb11fc9c2dd172"
        ],
        [
            "by rewrite [1%:M]scalar_mx_sum_delta -scaler_sumr scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row1 i : row i 1%:M = delta_mx 0 i.",
            "VernacStartTheoremProof",
            "b6e373e5695dabced4741d60f3d8e96f42f5afcd"
        ],
        [
            "by apply/rowP=> j; rewrite !mxE eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_scalar_mx (A : 'M[R]_n) := if insub 0%N is Some i then A == (A i i)%:M else true.",
            "VernacDefinition",
            "7b49c277183e849a46525c9bb9477f8c59520c16"
        ],
        [
            "Lemma is_scalar_mxP A : reflect (exists a, A = a%:M) (is_scalar_mx A).",
            "VernacStartTheoremProof",
            "776e9f308ad92580f8650df6386aa10402fdfa22"
        ],
        [
            "rewrite /is_scalar_mx; case: insubP => [i _ _ | ].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply: (iffP eqP) => [|[a ->]]; [exists (A i i) | rewrite mxE eqxx].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -eqn0Ngt => /eqP n0; left; exists 0.",
            "VernacExtend",
            "febe45c73eba84f3fa72cc0ae52d1c24350687a6"
        ],
        [
            "by rewrite raddf0; rewrite n0 in A *; rewrite [A]flatmx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalar_mx_is_scalar a : is_scalar_mx a%:M.",
            "VernacStartTheoremProof",
            "321d2cd699455ef4cfb3911d5f5432d8f833f0cf"
        ],
        [
            "by apply/is_scalar_mxP; exists a.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx0_is_scalar : is_scalar_mx 0.",
            "VernacStartTheoremProof",
            "ffe7a0ab5077b3ed419a8d43066bd6e307c43939"
        ],
        [
            "by apply/is_scalar_mxP; exists 0; rewrite raddf0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ScalarMx.",
            "VernacEndSegment",
            "6a47d9e7e9691284d0f208401e4f2cfb9d701182"
        ],
        [
            "Notation \"x %:M\" := (scalar_mx _ x) : ring_scope.",
            "VernacNotation",
            "12c884dd55abf8be438ba8e9170e839d3285f9b4"
        ],
        [
            "Lemma mx11_scalar (A : 'M_1) : A = (A 0 0)%:M.",
            "VernacStartTheoremProof",
            "a8e45b9000c133e5c366325f577e6541ebe9fe13"
        ],
        [
            "by apply/rowP=> j; rewrite ord1 mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalar_mx_block n1 n2 a : a%:M = block_mx a%:M 0 0 a%:M :> 'M_(n1 + n2).",
            "VernacStartTheoremProof",
            "d0612d939e2466f590a4e2b99af0b26cf0fbaad8"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE -val_eqE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by do 2![case: splitP => ? ->; rewrite !mxE]; rewrite ?eqn_add2l // -?(eq_sym (n1 + _)%N) eqn_leq leqNgt lshift_subproof.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mulmx_key : unit.",
            "VernacStartTheoremProof",
            "054e77150fe97f05843b5c71b26d3f12ed6bcd9d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mulmx {m n p} (A : 'M_(m, n)) (B : 'M_(n, p)) : 'M[R]_(m, p) := \\matrix[mulmx_key]_(i, k) \\sum_j (A i j * B j k).",
            "VernacDefinition",
            "05a978a725c3096b01d9416d6589cab49e603808"
        ],
        [
            "Local Notation \"A *m B\" := (mulmx A B) : ring_scope.",
            "VernacNotation",
            "9d206ca26c773e587a2a6baff7d6d16119cf88b3"
        ],
        [
            "Lemma mulmxA m n p q (A : 'M_(m, n)) (B : 'M_(n, p)) (C : 'M_(p, q)) : A *m (B *m C) = A *m B *m C.",
            "VernacStartTheoremProof",
            "9aec989010257285dae1706a5f1eccf07c13bbfb"
        ],
        [
            "apply/matrixP=> i l; rewrite !mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "transitivity (\\sum_j (\\sum_k (A i j * (B j k * C k l)))).",
            "VernacExtend",
            "b3d7a70974e53b172f606004c86b6418482d286e"
        ],
        [
            "by apply: eq_bigr => j _; rewrite mxE big_distrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite exchange_big; apply: eq_bigr => j _; rewrite mxE big_distrl /=.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by apply: eq_bigr => k _; rewrite mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul0mx m n p (A : 'M_(n, p)) : 0 *m A = 0 :> 'M_(m, p).",
            "VernacStartTheoremProof",
            "d12db7b59644db1f61d87b7606407f3cc0498f90"
        ],
        [
            "by apply/matrixP=> i k; rewrite !mxE big1 //= => j _; rewrite mxE mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx0 m n p (A : 'M_(m, n)) : A *m 0 = 0 :> 'M_(m, p).",
            "VernacStartTheoremProof",
            "d0121f2ed684be912054a4364d00f0b49532aff2"
        ],
        [
            "by apply/matrixP=> i k; rewrite !mxE big1 // => j _; rewrite mxE mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmxN m n p (A : 'M_(m, n)) (B : 'M_(n, p)) : A *m (- B) = - (A *m B).",
            "VernacStartTheoremProof",
            "7a6a4c192ee82f763363839060ec93116891ac44"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE -sumrN.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_bigr => j _; rewrite mxE mulrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulNmx m n p (A : 'M_(m, n)) (B : 'M_(n, p)) : - A *m B = - (A *m B).",
            "VernacStartTheoremProof",
            "66e30a590742a14907d5c36ea60b4d4b61eb1f67"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE -sumrN.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_bigr => j _; rewrite mxE mulNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmxDl m n p (A1 A2 : 'M_(m, n)) (B : 'M_(n, p)) : (A1 + A2) *m B = A1 *m B + A2 *m B.",
            "VernacStartTheoremProof",
            "88638ba18d92f6de2d6669514d11e317f4ab05ba"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE -big_split /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_bigr => j _; rewrite !mxE -mulrDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmxDr m n p (A : 'M_(m, n)) (B1 B2 : 'M_(n, p)) : A *m (B1 + B2) = A *m B1 + A *m B2.",
            "VernacStartTheoremProof",
            "3f28684dd2487fecadcdec292c15b038362aace8"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE -big_split /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_bigr => j _; rewrite mxE mulrDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmxBl m n p (A1 A2 : 'M_(m, n)) (B : 'M_(n, p)) : (A1 - A2) *m B = A1 *m B - A2 *m B.",
            "VernacStartTheoremProof",
            "9cd0a66c8132e3874c4e3aabb25f98bff511ad9c"
        ],
        [
            "by rewrite mulmxDl mulNmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmxBr m n p (A : 'M_(m, n)) (B1 B2 : 'M_(n, p)) : A *m (B1 - B2) = A *m B1 - A *m B2.",
            "VernacStartTheoremProof",
            "af119367d38378dcd3dbbc291b97c570e2fd21fb"
        ],
        [
            "by rewrite mulmxDr mulmxN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx_suml m n p (A : 'M_(n, p)) I r P (B_ : I -> 'M_(m, n)) : (\\sum_(i <- r | P i) B_ i) *m A = \\sum_(i <- r | P i) B_ i *m A.",
            "VernacStartTheoremProof",
            "f106d22e3e959c533db6e4a37e115fdb0e3b0c98"
        ],
        [
            "by apply: (big_morph (mulmx^~ A)) => [B C|]; rewrite ?mul0mx ?mulmxDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx_sumr m n p (A : 'M_(m, n)) I r P (B_ : I -> 'M_(n, p)) : A *m (\\sum_(i <- r | P i) B_ i) = \\sum_(i <- r | P i) A *m B_ i.",
            "VernacStartTheoremProof",
            "d315b252f916c3d55a5b894c686afd86eebe1ef5"
        ],
        [
            "by apply: (big_morph (mulmx A)) => [B C|]; rewrite ?mulmx0 ?mulmxDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalemxAl m n p a (A : 'M_(m, n)) (B : 'M_(n, p)) : a *: (A *m B) = (a *: A) *m B.",
            "VernacStartTheoremProof",
            "b2959c414c38e80b06895bc9134a2fd70c005701"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE big_distrr /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_bigr => j _; rewrite mulrA mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rowE m n i (A : 'M_(m, n)) : row i A = delta_mx 0 i *m A.",
            "VernacStartTheoremProof",
            "e60060451b2ebc5bc3368238de4dbf46b22ac9fb"
        ],
        [
            "apply/rowP=> j; rewrite !mxE (bigD1 i) //= mxE !eqxx mul1r.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite big1 ?addr0 // => i' ne_i'i; rewrite mxE /= (negbTE ne_i'i) mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_mul m n p (i : 'I_m) A (B : 'M_(n, p)) : row i (A *m B) = row i A *m B.",
            "VernacStartTheoremProof",
            "9924d2aa5f571df854710ad9f33397f0776ca493"
        ],
        [
            "by rewrite !rowE mulmxA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx_sum_row m n (u : 'rV_m) (A : 'M_(m, n)) : u *m A = \\sum_i u 0 i *: row i A.",
            "VernacStartTheoremProof",
            "76c1b682a96b8f32bd7eb8acef07e762ac80bc80"
        ],
        [
            "by apply/rowP=> j; rewrite mxE summxE; apply: eq_bigr => i _; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_delta_mx_cond m n p (j1 j2 : 'I_n) (i1 : 'I_m) (k2 : 'I_p) : delta_mx i1 j1 *m delta_mx j2 k2 = delta_mx i1 k2 *+ (j1 == j2).",
            "VernacStartTheoremProof",
            "5f4ca378b39811e113d5893cf4294748d8544717"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE (bigD1 j1) //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite mulmxnE !mxE !eqxx andbT -natrM -mulrnA !mulnb !andbA andbAC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite big1 ?addr0 // => j; rewrite !mxE andbC -natrM; move/negbTE->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_delta_mx m n p (j : 'I_n) (i : 'I_m) (k : 'I_p) : delta_mx i j *m delta_mx j k = delta_mx i k.",
            "VernacStartTheoremProof",
            "9df7992c34c577cc992a0b723597ba50776ecdb9"
        ],
        [
            "by rewrite mul_delta_mx_cond eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_delta_mx_0 m n p (j1 j2 : 'I_n) (i1 : 'I_m) (k2 : 'I_p) : j1 != j2 -> delta_mx i1 j1 *m delta_mx j2 k2 = 0.",
            "VernacStartTheoremProof",
            "257066735da20d3c375664ec458615b36020cd6e"
        ],
        [
            "by rewrite mul_delta_mx_cond => /negbTE->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_diag_mx m n d (A : 'M_(m, n)) : diag_mx d *m A = \\matrix_(i, j) (d 0 i * A i j).",
            "VernacStartTheoremProof",
            "1c358e2ead566a839828879c032851ab06f56672"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE (bigD1 i) //= mxE eqxx big1 ?addr0 // => i'.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite mxE eq_sym mulrnAl => /negbTE->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_mx_diag m n (A : 'M_(m, n)) d : A *m diag_mx d = \\matrix_(i, j) (A i j * d 0 j).",
            "VernacStartTheoremProof",
            "cce13e2b84fcc5efaf9614dfb4b995e29087fcac"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE (bigD1 j) //= mxE eqxx big1 ?addr0 // => i'.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite mxE eq_sym mulrnAr; move/negbTE->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx_diag n (d e : 'rV_n) : diag_mx d *m diag_mx e = diag_mx (\\row_j (d 0 j * e 0 j)).",
            "VernacStartTheoremProof",
            "132aa752f93d708ffa35edf1b3ba4ab844e39384"
        ],
        [
            "by apply/matrixP=> i j; rewrite mul_diag_mx !mxE mulrnAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_scalar_mx m n a (A : 'M_(m, n)) : a%:M *m A = a *: A.",
            "VernacStartTheoremProof",
            "4abc27a3541b908dc5d5e4dec739fc88add96827"
        ],
        [
            "by rewrite -diag_const_mx mul_diag_mx; apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalar_mxM n a b : (a * b)%:M = a%:M *m b%:M :> 'M_n.",
            "VernacStartTheoremProof",
            "5092e56b6d8d2130c1b7da477a0a52d28897dd33"
        ],
        [
            "by rewrite mul_scalar_mx scale_scalar_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul1mx m n (A : 'M_(m, n)) : 1%:M *m A = A.",
            "VernacStartTheoremProof",
            "f0488cecbfc536cc26d766ff07e81c6aeed3060d"
        ],
        [
            "by rewrite mul_scalar_mx scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx1 m n (A : 'M_(m, n)) : A *m 1%:M = A.",
            "VernacStartTheoremProof",
            "3ef8d3b205a9b7082ec78ece49393d258d52d585"
        ],
        [
            "rewrite -diag_const_mx mul_mx_diag.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_col_perm m n p s (A : 'M_(m, n)) (B : 'M_(n, p)) : col_perm s A *m B = A *m row_perm s^-1 B.",
            "VernacStartTheoremProof",
            "be99e64dc5ed4faa6b859b2086f16d8762a82500"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE (reindex_perm s^-1).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_bigr => j _ /=; rewrite !mxE permKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_row_perm m n p s (A : 'M_(m, n)) (B : 'M_(n, p)) : A *m row_perm s B = col_perm s^-1 A *m B.",
            "VernacStartTheoremProof",
            "682c23da0028617a3a9c3faa9354e1c8b8ec87e0"
        ],
        [
            "by rewrite mul_col_perm invgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_xcol m n p j1 j2 (A : 'M_(m, n)) (B : 'M_(n, p)) : xcol j1 j2 A *m B = A *m xrow j1 j2 B.",
            "VernacStartTheoremProof",
            "d56d1ec8c660d03f4994096ee109d77751e4c4ca"
        ],
        [
            "by rewrite mul_col_perm tpermV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition perm_mx n s : 'M_n := row_perm s 1%:M.",
            "VernacDefinition",
            "b0dbf9c2019119c2d5f1df54927bddc81abd8e62"
        ],
        [
            "Definition tperm_mx n i1 i2 : 'M_n := perm_mx (tperm i1 i2).",
            "VernacDefinition",
            "6f709f9269994da7d4faf5fe74444fd3d4425690"
        ],
        [
            "Lemma col_permE m n s (A : 'M_(m, n)) : col_perm s A = A *m perm_mx s^-1.",
            "VernacStartTheoremProof",
            "79789f63cfce1d7b270a5f0273469d87b5fcbfdb"
        ],
        [
            "by rewrite mul_row_perm mulmx1 invgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_permE m n s (A : 'M_(m, n)) : row_perm s A = perm_mx s *m A.",
            "VernacStartTheoremProof",
            "2a64dc56323fee42175c325153f8c7f202e4ff51"
        ],
        [
            "by rewrite -[perm_mx _]mul1mx mul_row_perm mulmx1 -mul_row_perm mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xcolE m n j1 j2 (A : 'M_(m, n)) : xcol j1 j2 A = A *m tperm_mx j1 j2.",
            "VernacStartTheoremProof",
            "86a89d854c0183dfda7c9b832e353832f52c1b9d"
        ],
        [
            "by rewrite /xcol col_permE tpermV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xrowE m n i1 i2 (A : 'M_(m, n)) : xrow i1 i2 A = tperm_mx i1 i2 *m A.",
            "VernacStartTheoremProof",
            "5c749136d24781cc15c7ead0a0c3356bfc644c08"
        ],
        [
            "exact: row_permE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_perm_mx n (s : 'S_n) : (perm_mx s)^T = perm_mx s^-1.",
            "VernacStartTheoremProof",
            "a551d94cb12391bb351dc846a51a3359e8fbab72"
        ],
        [
            "by rewrite -[_^T]mulmx1 tr_row_perm mul_col_perm trmx1 mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_tperm_mx n i1 i2 : (tperm_mx i1 i2)^T = tperm_mx i1 i2 :> 'M_n.",
            "VernacStartTheoremProof",
            "80796987281b4f08379e734aca92ab10ddf9ec81"
        ],
        [
            "by rewrite tr_perm_mx tpermV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_mx1 n : perm_mx 1 = 1%:M :> 'M_n.",
            "VernacStartTheoremProof",
            "f2e62721874fd9528e8477cfe9446c92656d275e"
        ],
        [
            "exact: row_perm1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_mxM n (s t : 'S_n) : perm_mx (s * t) = perm_mx s *m perm_mx t.",
            "VernacStartTheoremProof",
            "9b327544a9b543e472015a3172b3742427f71bd6"
        ],
        [
            "by rewrite -row_permE -row_permM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_perm_mx n (A : 'M_n) := [exists s, A == perm_mx s].",
            "VernacDefinition",
            "b9895247242ba4880d94e154d1ef6b5ecd76ec33"
        ],
        [
            "Lemma is_perm_mxP n (A : 'M_n) : reflect (exists s, A = perm_mx s) (is_perm_mx A).",
            "VernacStartTheoremProof",
            "6a8d5a828c561901afd9024ca04bde53ded7ad6a"
        ],
        [
            "by apply: (iffP existsP) => [] [s /eqP]; exists s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_mx_is_perm n (s : 'S_n) : is_perm_mx (perm_mx s).",
            "VernacStartTheoremProof",
            "3cbf21aa2e4f8bb024f0af7568a3eba855fae408"
        ],
        [
            "by apply/is_perm_mxP; exists s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_perm_mx1 n : is_perm_mx (1%:M : 'M_n).",
            "VernacStartTheoremProof",
            "4c7383173d0f68cb5efc01f1a3e9ae90db89f43e"
        ],
        [
            "by rewrite -perm_mx1 perm_mx_is_perm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_perm_mxMl n (A B : 'M_n) : is_perm_mx A -> is_perm_mx (A *m B) = is_perm_mx B.",
            "VernacStartTheoremProof",
            "35f889759c3e5a43cf3e38130599d2ad8f055da2"
        ],
        [
            "case/is_perm_mxP=> s ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply/is_perm_mxP/is_perm_mxP=> [[t def_t] | [t ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists (s * t)%g; rewrite perm_mxM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (s^-1 * t)%g.",
            "VernacExtend",
            "17dc1a3e6d92496a9fdd675b5e75ad0e2815751d"
        ],
        [
            "by rewrite perm_mxM -def_t -!row_permE -row_permM mulVg row_perm1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_perm_mx_tr n (A : 'M_n) : is_perm_mx A^T = is_perm_mx A.",
            "VernacStartTheoremProof",
            "413ac4f898ada4dd0c86e53b633e27e2ef63ee32"
        ],
        [
            "apply/is_perm_mxP/is_perm_mxP=> [[t def_t] | [t ->]]; exists t^-1%g.",
            "VernacExtend",
            "16b56d9868b2b035193b69d5eec5356328271893"
        ],
        [
            "by rewrite -tr_perm_mx -def_t trmxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite tr_perm_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_perm_mxMr n (A B : 'M_n) : is_perm_mx B -> is_perm_mx (A *m B) = is_perm_mx A.",
            "VernacStartTheoremProof",
            "e70a4297b500ab80389e6fe340198e825de21198"
        ],
        [
            "case/is_perm_mxP=> s ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -[s]invgK -col_permE -is_perm_mx_tr tr_col_perm row_permE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite is_perm_mxMl (perm_mx_is_perm, is_perm_mx_tr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact pid_mx_key : unit.",
            "VernacStartTheoremProof",
            "1c80ea7b0b856aa424c86e8e190f1c9340c9e746"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pid_mx {m n} r : 'M[R]_(m, n) := \\matrix[pid_mx_key]_(i, j) ((i == j :> nat) && (i < r))%:R.",
            "VernacDefinition",
            "c37cc58e238f33cbfd0bb66fe47d51b6da22c100"
        ],
        [
            "Lemma pid_mx_0 m n : pid_mx 0 = 0 :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "a9a7ff8376f6945c739fe4cf11e722d1dbbe7cc8"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pid_mx_1 r : pid_mx r = 1%:M :> 'M_r.",
            "VernacStartTheoremProof",
            "009241ccb19e6b77fe52c603e348b91d6f0ec714"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE ltn_ord andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pid_mx_row n r : pid_mx r = row_mx 1%:M 0 :> 'M_(r, r + n).",
            "VernacStartTheoremProof",
            "2fbab7842bb062080b3ea6773e24c6fdf9712df3"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE ltn_ord andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: splitP => j' ->; rewrite !mxE // .",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite eqn_leq andbC leqNgt lshift_subproof.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pid_mx_col m r : pid_mx r = col_mx 1%:M 0 :> 'M_(r + m, r).",
            "VernacStartTheoremProof",
            "0631c49a0d940fb9198be62fc631624f18f4c737"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE andbC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: splitP => i' ->; rewrite !mxE // eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pid_mx_block m n r : pid_mx r = block_mx 1%:M 0 0 0 :> 'M_(r + m, r + n).",
            "VernacStartTheoremProof",
            "d45c469dfa0daf329f3b01f5a0e72ebacebea6b0"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE row_mx0 andbC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: splitP => i' ->; rewrite !mxE //; case: splitP => j' ->; rewrite !mxE //=.",
            "VernacExtend",
            "a4b1182da79b8f22c9939e76724d34d01ba8a401"
        ],
        [
            "by rewrite eqn_leq andbC leqNgt lshift_subproof.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tr_pid_mx m n r : (pid_mx r)^T = pid_mx r :> 'M_(n, m).",
            "VernacStartTheoremProof",
            "fb44cca0e568be84e85620baef379504c078bcd3"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE eq_sym; case: eqP => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pid_mx_minv m n r : pid_mx (minn m r) = pid_mx r :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "52562cbcd7add381c16435bb8cecb40dc29b00fe"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE leq_min ltn_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pid_mx_minh m n r : pid_mx (minn n r) = pid_mx r :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "bd7359933c53a2f2fc35b5e6bb884d2e5c016452"
        ],
        [
            "by apply: trmx_inj; rewrite !tr_pid_mx pid_mx_minv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_pid_mx m n p q r : (pid_mx q : 'M_(m, n)) *m (pid_mx r : 'M_(n, p)) = pid_mx (minn n (minn q r)).",
            "VernacStartTheoremProof",
            "c03d043718c833076fc59476b5c2588231c1f5e0"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE !leq_min.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have [le_n_i | lt_i_n] := leqP n i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite andbF big1 // => j _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -pid_mx_minh !mxE leq_min ltnNge le_n_i andbF mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (bigD1 (Ordinal lt_i_n)) //= big1 ?addr0 => [|j].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !mxE eqxx /= -natrM mulnb andbCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -val_eqE /= !mxE eq_sym -natrM => /negbTE->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pid_mx_id m n p r : r <= n -> (pid_mx r : 'M_(m, n)) *m (pid_mx r : 'M_(n, p)) = pid_mx r.",
            "VernacStartTheoremProof",
            "2482f52c548b16cc935c8043b447e3c696613101"
        ],
        [
            "by move=> le_r_n; rewrite mul_pid_mx minnn (minn_idPr _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition copid_mx {n} r : 'M_n := 1%:M - pid_mx r.",
            "VernacDefinition",
            "913154204b50dca887678ba3f2074834aec30dfe"
        ],
        [
            "Lemma mul_copid_mx_pid m n r : r <= m -> copid_mx r *m pid_mx r = 0 :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "0eae68ac55dbe4198fb644379915d81940bf34a2"
        ],
        [
            "by move=> le_r_m; rewrite mulmxBl mul1mx pid_mx_id ?subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_pid_mx_copid m n r : r <= n -> pid_mx r *m copid_mx r = 0 :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "d3c8ab30e9f44a4265e62824dea9aee9c5707b40"
        ],
        [
            "by move=> le_r_n; rewrite mulmxBr mulmx1 pid_mx_id ?subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma copid_mx_id n r : r <= n -> copid_mx r *m copid_mx r = copid_mx r :> 'M_n.",
            "VernacStartTheoremProof",
            "93bfe54b3c1fb4d7a9e5dde787ebde03c60af9e7"
        ],
        [
            "by move=> le_r_n; rewrite mulmxBl mul1mx mul_pid_mx_copid // oppr0 addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_mx_row m n p1 p2 (A : 'M_(m, n)) (Bl : 'M_(n, p1)) (Br : 'M_(n, p2)) : A *m row_mx Bl Br = row_mx (A *m Bl) (A *m Br).",
            "VernacStartTheoremProof",
            "f0aa92a039b90e14f8cf1a9ba2653c417654c6db"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case defk: (split k); rewrite mxE; apply: eq_bigr => j _; rewrite mxE defk.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_col_mx m1 m2 n p (Au : 'M_(m1, n)) (Ad : 'M_(m2, n)) (B : 'M_(n, p)) : col_mx Au Ad *m B = col_mx (Au *m B) (Ad *m B).",
            "VernacStartTheoremProof",
            "f1e7fbf66cba9b1b1dc9485948f4e0e4f243e856"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case defi: (split i); rewrite mxE; apply: eq_bigr => j _; rewrite mxE defi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_row_col m n1 n2 p (Al : 'M_(m, n1)) (Ar : 'M_(m, n2)) (Bu : 'M_(n1, p)) (Bd : 'M_(n2, p)) : row_mx Al Ar *m col_mx Bu Bd = Al *m Bu + Ar *m Bd.",
            "VernacStartTheoremProof",
            "2057059d0d70424c8cf97e750bf0e2fbca4dda77"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE big_split_ord /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "congr (_ + _); apply: eq_bigr => j _; first by rewrite row_mxEl col_mxEu.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite row_mxEr col_mxEd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_col_row m1 m2 n p1 p2 (Au : 'M_(m1, n)) (Ad : 'M_(m2, n)) (Bl : 'M_(n, p1)) (Br : 'M_(n, p2)) : col_mx Au Ad *m row_mx Bl Br = block_mx (Au *m Bl) (Au *m Br) (Ad *m Bl) (Ad *m Br).",
            "VernacStartTheoremProof",
            "a5e4ee50c23c0720d232d1490a9728f564a49bcf"
        ],
        [
            "by rewrite mul_col_mx !mul_mx_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_row_block m n1 n2 p1 p2 (Al : 'M_(m, n1)) (Ar : 'M_(m, n2)) (Bul : 'M_(n1, p1)) (Bur : 'M_(n1, p2)) (Bdl : 'M_(n2, p1)) (Bdr : 'M_(n2, p2)) : row_mx Al Ar *m block_mx Bul Bur Bdl Bdr = row_mx (Al *m Bul + Ar *m Bdl) (Al *m Bur + Ar *m Bdr).",
            "VernacStartTheoremProof",
            "bcbd0be4b197c91ae095f4f8f68264cf0e58676e"
        ],
        [
            "by rewrite block_mxEh mul_mx_row !mul_row_col.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_block_col m1 m2 n1 n2 p (Aul : 'M_(m1, n1)) (Aur : 'M_(m1, n2)) (Adl : 'M_(m2, n1)) (Adr : 'M_(m2, n2)) (Bu : 'M_(n1, p)) (Bd : 'M_(n2, p)) : block_mx Aul Aur Adl Adr *m col_mx Bu Bd = col_mx (Aul *m Bu + Aur *m Bd) (Adl *m Bu + Adr *m Bd).",
            "VernacStartTheoremProof",
            "54d2dff826e017fb061fbfdb8ed6bf228fb21847"
        ],
        [
            "by rewrite mul_col_mx !mul_row_col.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx_block m1 m2 n1 n2 p1 p2 (Aul : 'M_(m1, n1)) (Aur : 'M_(m1, n2)) (Adl : 'M_(m2, n1)) (Adr : 'M_(m2, n2)) (Bul : 'M_(n1, p1)) (Bur : 'M_(n1, p2)) (Bdl : 'M_(n2, p1)) (Bdr : 'M_(n2, p2)) : block_mx Aul Aur Adl Adr *m block_mx Bul Bur Bdl Bdr = block_mx (Aul *m Bul + Aur *m Bdl) (Aul *m Bur + Aur *m Bdr) (Adl *m Bul + Adr *m Bdl) (Adl *m Bur + Adr *m Bdr).",
            "VernacStartTheoremProof",
            "9a7c0387409b4081582963c2b8fe2477d050e91e"
        ],
        [
            "by rewrite mul_col_mx !mul_row_block.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section LinRowVector.",
            "VernacBeginSection",
            "9689b14600325234d3285e0f81b8d5819b5eb002"
        ],
        [
            "Variables m n : nat.",
            "VernacAssumption",
            "e3492c4fff3a30c2074b69e9ef3c152c1d2695a7"
        ],
        [
            "Fact lin1_mx_key : unit.",
            "VernacStartTheoremProof",
            "3932aa53c7bc6ad1e4eb7df168a2c54b99b84957"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lin1_mx (f : 'rV[R]_m -> 'rV[R]_n) := \\matrix[lin1_mx_key]_(i, j) f (delta_mx 0 i) 0 j.",
            "VernacDefinition",
            "da3eb4d18b75e501b0bd90476829440691afb424"
        ],
        [
            "Variable f : {linear 'rV[R]_m -> 'rV[R]_n}.",
            "VernacAssumption",
            "a7ce93999f15b0d30fb6ba142cfbc1302a9b48b0"
        ],
        [
            "Lemma mul_rV_lin1 u : u *m lin1_mx f = f u.",
            "VernacStartTheoremProof",
            "af77de37997225f812c2947141cea27a3183984c"
        ],
        [
            "rewrite {2}[u]matrix_sum_delta big_ord1 linear_sum; apply/rowP=> i.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite mxE summxE; apply: eq_bigr => j _; rewrite linearZ !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LinRowVector.",
            "VernacEndSegment",
            "551be35e6938b0f598e9887b5ba54c14567fb55e"
        ],
        [
            "Section LinMatrix.",
            "VernacBeginSection",
            "1dea7aedbfe1f9efe7606919c0c2c8c73316981d"
        ],
        [
            "Variables m1 n1 m2 n2 : nat.",
            "VernacAssumption",
            "98c99d04a25e59285994012e62c5261c6a323188"
        ],
        [
            "Definition lin_mx (f : 'M[R]_(m1, n1) -> 'M[R]_(m2, n2)) := lin1_mx (mxvec \\o f \\o vec_mx).",
            "VernacDefinition",
            "eca9ff373f473e122f3dba8a894e3e8c05875a00"
        ],
        [
            "Variable f : {linear 'M[R]_(m1, n1) -> 'M[R]_(m2, n2)}.",
            "VernacAssumption",
            "3b16a1f89e8aeb811eb0a39acf8e0ea79581b3bf"
        ],
        [
            "Lemma mul_rV_lin u : u *m lin_mx f = mxvec (f (vec_mx u)).",
            "VernacStartTheoremProof",
            "181f58296b92c749b07ddc8a319d5b72845efdcd"
        ],
        [
            "exact: mul_rV_lin1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_vec_lin A : mxvec A *m lin_mx f = mxvec (f A).",
            "VernacStartTheoremProof",
            "733e360a3abfdd8ad4e727437dca630d9012ddfc"
        ],
        [
            "by rewrite mul_rV_lin mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rV_lin u : vec_mx (u *m lin_mx f) = f (vec_mx u).",
            "VernacStartTheoremProof",
            "95179c6ce8ee35ce50ecf5c16bf20a05e684211f"
        ],
        [
            "by rewrite mul_rV_lin mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_vec_lin A : vec_mx (mxvec A *m lin_mx f) = f A.",
            "VernacStartTheoremProof",
            "1490db97230080be6553d6927e9087e51df634e6"
        ],
        [
            "by rewrite mul_rV_lin !mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LinMatrix.",
            "VernacEndSegment",
            "2dfadc4e077b0089853111b5992414194f22844a"
        ],
        [
            "Canonical mulmx_additive m n p A := Additive (@mulmxBr m n p A).",
            "VernacDefinition",
            "0d4f2a77171fc4439084dc5cfb225f3933689a10"
        ],
        [
            "Section Mulmxr.",
            "VernacBeginSection",
            "c44fce734f9fe2d0150534c6701bb215e4d40346"
        ],
        [
            "Variables m n p : nat.",
            "VernacAssumption",
            "ce88bd127ae816ea7aec920c1f156c4e777e92c8"
        ],
        [
            "Implicit Type A : 'M[R]_(m, n).",
            "VernacReserve",
            "925628148f486c4105fcde3e25bd0666874e0518"
        ],
        [
            "Implicit Type B : 'M[R]_(n, p).",
            "VernacReserve",
            "76198afad4654b94f91f2269b13ffd5319a09765"
        ],
        [
            "Definition mulmxr_head t B A := let: tt := t in A *m B.",
            "VernacDefinition",
            "b58766e9f45176654cc44facdc375625a2b5b383"
        ],
        [
            "Local Notation mulmxr := (mulmxr_head tt).",
            "VernacSyntacticDefinition",
            "76b67c06f2ad0357232f1ef5bd0c920d44f038ae"
        ],
        [
            "Definition lin_mulmxr B := lin_mx (mulmxr B).",
            "VernacDefinition",
            "fa4ea5eb7506526ec6e1831a35f910dfbfaade81"
        ],
        [
            "Lemma mulmxr_is_linear B : linear (mulmxr B).",
            "VernacStartTheoremProof",
            "b8af93f7c0f1911782a3df8e7d071268bcae2242"
        ],
        [
            "by move=> a A1 A2; rewrite /= mulmxDl scalemxAl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical mulmxr_additive B := Additive (mulmxr_is_linear B).",
            "VernacDefinition",
            "5a3817227181ac89270626280adbb1bf4b782100"
        ],
        [
            "Canonical mulmxr_linear B := Linear (mulmxr_is_linear B).",
            "VernacDefinition",
            "74fe604153be36f386ad3c128564b9ee73ddb79b"
        ],
        [
            "Lemma lin_mulmxr_is_linear : linear lin_mulmxr.",
            "VernacStartTheoremProof",
            "d2f8a800660518dae2b96516e91c757ca7429ec7"
        ],
        [
            "move=> a A B; apply/row_matrixP; case/mxvec_indexP=> i j.",
            "VernacExtend",
            "1b05ef00a6bc4c06259b49aa79e4d38841eab3ab"
        ],
        [
            "rewrite linearP /= !rowE !mul_rV_lin /= vec_mx_delta -linearP mulmxDr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (mxvec (_ + _)); apply/row_matrixP=> k.",
            "VernacExtend",
            "385739dd8a4f73703d3828c61e1780a276bfaa31"
        ],
        [
            "rewrite linearZ /= !row_mul rowE mul_delta_mx_cond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (k == i); [rewrite -!rowE linearZ | rewrite !mul0mx raddf0].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical lin_mulmxr_additive := Additive lin_mulmxr_is_linear.",
            "VernacDefinition",
            "81e0eccfd63d032b1604a0eeae3619fc8932e8c6"
        ],
        [
            "Canonical lin_mulmxr_linear := Linear lin_mulmxr_is_linear.",
            "VernacDefinition",
            "b407307f80a478cab529a355a44b2bee4772d7fd"
        ],
        [
            "End Mulmxr.",
            "VernacEndSegment",
            "27f52ed38a6bbddcc8893491ae895389bf99cbcc"
        ],
        [
            "Section Trace.",
            "VernacBeginSection",
            "58b12794d30b6ac8727cc68f194a672f1876c246"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Definition mxtrace (A : 'M[R]_n) := \\sum_i A i i.",
            "VernacDefinition",
            "4f9df02de55e133bc24c02f81897fa83f8070138"
        ],
        [
            "Local Notation \"'\\tr' A\" := (mxtrace A) : ring_scope.",
            "VernacNotation",
            "4b006885186cf3b9a50e026645856f97d09435bb"
        ],
        [
            "Lemma mxtrace_tr A : \\tr A^T = \\tr A.",
            "VernacStartTheoremProof",
            "885ba8ec92a76e8eec2a35b931447f1b2038b1f5"
        ],
        [
            "by apply: eq_bigr=> i _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_is_scalar : scalar mxtrace.",
            "VernacStartTheoremProof",
            "9619c3e0956e6140189be7fa0de5e673788a8217"
        ],
        [
            "move=> a A B; rewrite mulr_sumr -big_split /=; apply: eq_bigr=> i _.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical mxtrace_additive := Additive mxtrace_is_scalar.",
            "VernacDefinition",
            "3331133792366c63c701a59793804ba0a57ef3fd"
        ],
        [
            "Canonical mxtrace_linear := Linear mxtrace_is_scalar.",
            "VernacDefinition",
            "fec5c0abd8cb16164db3873efe0779a636217f7e"
        ],
        [
            "Lemma mxtrace0 : \\tr 0 = 0.",
            "VernacStartTheoremProof",
            "3e8ab33df072b6b040b24e2a685b339d3ce3ffab"
        ],
        [
            "exact: raddf0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtraceD A B : \\tr (A + B) = \\tr A + \\tr B.",
            "VernacStartTheoremProof",
            "6d0164418c9c68e8ce8355b899c5301f8d01238f"
        ],
        [
            "exact: raddfD.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtraceZ a A : \\tr (a *: A) = a * \\tr A.",
            "VernacStartTheoremProof",
            "62b6284c5402c2bb36ea295bcb755f3b06401042"
        ],
        [
            "exact: scalarZ.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_diag D : \\tr (diag_mx D) = \\sum_j D 0 j.",
            "VernacStartTheoremProof",
            "37a49121a8ff128230ac182faa2c6e0dd24275ad"
        ],
        [
            "by apply: eq_bigr => j _; rewrite mxE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_scalar a : \\tr a%:M = a *+ n.",
            "VernacStartTheoremProof",
            "c6b5d2f4ee5c2613188f384d81f0532bd53a8196"
        ],
        [
            "rewrite -diag_const_mx mxtrace_diag.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (eq_bigr _ (fun j _ => mxE _ _ 0 j)) sumr_const card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace1 : \\tr 1%:M = n%:R.",
            "VernacStartTheoremProof",
            "97c30252acf839a821ea6c9b3d19fdc111a4bcb6"
        ],
        [
            "exact: mxtrace_scalar.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Trace.",
            "VernacEndSegment",
            "69732c5952027df3d4a4ca608095d587ee5d5c94"
        ],
        [
            "Local Notation \"'\\tr' A\" := (mxtrace A) : ring_scope.",
            "VernacNotation",
            "4b006885186cf3b9a50e026645856f97d09435bb"
        ],
        [
            "Lemma trace_mx11 (A : 'M_1) : \\tr A = A 0 0.",
            "VernacStartTheoremProof",
            "fcd4f1366de8ff35e1f13e7bbb13ef029176dbc5"
        ],
        [
            "by rewrite {1}[A]mx11_scalar mxtrace_scalar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_block n1 n2 (Aul : 'M_n1) Aur Adl (Adr : 'M_n2) : \\tr (block_mx Aul Aur Adl Adr) = \\tr Aul + \\tr Adr.",
            "VernacStartTheoremProof",
            "cbd44f040dad43d605583bf28c9108ede2a536ac"
        ],
        [
            "rewrite /(\\tr _) big_split_ord /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by congr (_ + _); apply: eq_bigr => i _; rewrite (block_mxEul, block_mxEdr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section MatrixRing.",
            "VernacBeginSection",
            "9903dab762f7be70f29a15fce4f5f706ebdb005a"
        ],
        [
            "Variable n' : nat.",
            "VernacAssumption",
            "4b8d1474864e01df61b374405aca10e79176b1eb"
        ],
        [
            "Local Notation n := n'.+1.",
            "VernacSyntacticDefinition",
            "a44d7133197df31a38212ab1d7bfb6ec0dc123a2"
        ],
        [
            "Lemma matrix_nonzero1 : 1%:M != 0 :> 'M_n.",
            "VernacStartTheoremProof",
            "02afa81f1acf5211ee066dcb360f5b92f1fe595a"
        ],
        [
            "by apply/eqP=> /matrixP/(_ 0 0)/eqP; rewrite !mxE oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition matrix_ringMixin := RingMixin (@mulmxA n n n n) (@mul1mx n n) (@mulmx1 n n) (@mulmxDl n n n) (@mulmxDr n n n) matrix_nonzero1.",
            "VernacDefinition",
            "777f7acf20b25084a988a363fcdb1fd3ee76d389"
        ],
        [
            "Canonical matrix_ringType := Eval hnf in RingType 'M[R]_n matrix_ringMixin.",
            "VernacDefinition",
            "117c63c437d4848afd94f6179313edeb186299e7"
        ],
        [
            "Canonical matrix_lAlgType := Eval hnf in LalgType R 'M[R]_n (@scalemxAl n n n).",
            "VernacDefinition",
            "524649583f0b790c909e0e21ddc16b135638d2bc"
        ],
        [
            "Lemma mulmxE : mulmx = *%R.",
            "VernacStartTheoremProof",
            "a06efa7e2b02463bcaec4f46443a60c078cd86c2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma idmxE : 1%:M = 1 :> 'M_n.",
            "VernacStartTheoremProof",
            "d7bd5d03acef9ded39d3f5e3670b42522a016c66"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalar_mx_is_multiplicative : multiplicative (@scalar_mx n).",
            "VernacStartTheoremProof",
            "3c6d4ab25ae71321003d9241a65d65b7b9774895"
        ],
        [
            "by split=> //; apply: scalar_mxM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical scalar_mx_rmorphism := AddRMorphism scalar_mx_is_multiplicative.",
            "VernacDefinition",
            "c9972b31351ee650b027a32ea50148f37c9c40fb"
        ],
        [
            "End MatrixRing.",
            "VernacEndSegment",
            "47116e3b9bfbf41fc8f32341fbbb1cb7afb6ebfb"
        ],
        [
            "Section LiftPerm.",
            "VernacBeginSection",
            "360d620cc6e1cf3286736c46a73635786f7aafc5"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Definition lift0_perm s : 'S_n.+1 := lift_perm 0 0 s.",
            "VernacDefinition",
            "7a08c66f4878559073c5d126fbc0922ba1333de0"
        ],
        [
            "Lemma lift0_perm0 s : lift0_perm s 0 = 0.",
            "VernacStartTheoremProof",
            "c8c78184aaef848f89926c48355891053169d5a1"
        ],
        [
            "exact: lift_perm_id.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift0_perm_lift s k' : lift0_perm s (lift 0 k') = lift (0 : 'I_n.+1) (s k').",
            "VernacStartTheoremProof",
            "7296724079e32291bc464e1c2794f86f07cca50c"
        ],
        [
            "exact: lift_perm_lift.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift0_permK s : cancel (lift0_perm s) (lift0_perm s^-1).",
            "VernacStartTheoremProof",
            "0f4885cc1b03cac1ea284720c6e3f7bc15a007dc"
        ],
        [
            "by move=> i; rewrite /lift0_perm -lift_permV permK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift0_perm_eq0 s i : (lift0_perm s i == 0) = (i == 0).",
            "VernacStartTheoremProof",
            "1ce52d0ae589603ae0f3945f3a416c67b604ace6"
        ],
        [
            "by rewrite (canF_eq (lift0_permK s)) lift0_perm0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lift0_mx A : 'M_(1 + n) := block_mx 1 0 0 A.",
            "VernacDefinition",
            "2c3e84b07a3d4780d19ded742670a5f705c4c2c5"
        ],
        [
            "Lemma lift0_mx_perm s : lift0_mx (perm_mx s) = perm_mx (lift0_perm s).",
            "VernacStartTheoremProof",
            "459565678413f239806b07b9bd3ce46f69b267cb"
        ],
        [
            "apply/matrixP=> /= i j; rewrite !mxE split1 /=; case: unliftP => [i'|] -> /=.",
            "VernacExtend",
            "5caed936835e366e9e533d8f19382dcfedbf86d4"
        ],
        [
            "rewrite lift0_perm_lift !mxE split1 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: unliftP => [j'|] ->; rewrite ?(inj_eq (lift_inj _)) /= !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite lift0_perm0 !mxE split1 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: unliftP => [j'|] ->; rewrite /= mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift0_mx_is_perm s : is_perm_mx (lift0_mx (perm_mx s)).",
            "VernacStartTheoremProof",
            "dfba5475a270303becb4154abfa9ab32596e6c4b"
        ],
        [
            "by rewrite lift0_mx_perm perm_mx_is_perm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LiftPerm.",
            "VernacEndSegment",
            "4bff07867098a0ac83ad491797a9af3d23fbf000"
        ],
        [
            "Definition determinant n (A : 'M_n) : R := \\sum_(s : 'S_n) (-1) ^+ s * \\prod_i A i (s i).",
            "VernacDefinition",
            "2e5f99e84a7062d102bee9cc621477a8c5cba332"
        ],
        [
            "Definition cofactor n A (i j : 'I_n) : R := (-1) ^+ (i + j) * determinant (row' i (col' j A)).",
            "VernacDefinition",
            "8e7a60eea29f2f4a652bd0aefb1cc297c49ee4bb"
        ],
        [
            "Fact adjugate_key : unit.",
            "VernacStartTheoremProof",
            "6494723d9d8db92e4a59d826c69125dd5fc8e64a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition adjugate n (A : 'M_n) := \\matrix[adjugate_key]_(i, j) cofactor A j i.",
            "VernacDefinition",
            "5ce4835eb7eb7954e3629def95d7c992ce3f4b6b"
        ],
        [
            "End MatrixAlgebra.",
            "VernacEndSegment",
            "c24a322126aa3dabbcf79c5fdeeebbfb19b853a0"
        ],
        [
            "Arguments delta_mx {R m n}.",
            "VernacArguments",
            "34f7e81541f3027e54a41a7b1052c567e569e18a"
        ],
        [
            "Arguments scalar_mx {R n}.",
            "VernacArguments",
            "b4aff16e387796ef83d373f949bc44ec58caa85a"
        ],
        [
            "Arguments perm_mx {R n}.",
            "VernacArguments",
            "443529915d1ce8729f5b3ad5d4c5d8666c232ef7"
        ],
        [
            "Arguments tperm_mx {R n}.",
            "VernacArguments",
            "6485cd90063231024b73d581b779d07e7c027adb"
        ],
        [
            "Arguments pid_mx {R m n}.",
            "VernacArguments",
            "a9160d8e3946a861983bffcc9d049fa2fbe1741c"
        ],
        [
            "Arguments copid_mx {R n}.",
            "VernacArguments",
            "0118c6cb9e6ab932a71c3e15a15f875245fda22b"
        ],
        [
            "Arguments lin_mulmxr {R m n p}.",
            "VernacArguments",
            "a2c8b28652a31123b3949ce33d71ed60f773eccb"
        ],
        [
            "Prenex Implicits diag_mx is_scalar_mx.",
            "VernacExtend",
            "bcc38c2be059dd0ab1207f6f12718321f3444ed2"
        ],
        [
            "Prenex Implicits mulmx mxtrace determinant cofactor adjugate.",
            "VernacExtend",
            "0e23f8709e16e7dfa7b30c9e643aa401428e88f9"
        ],
        [
            "Arguments is_scalar_mxP {R n A}.",
            "VernacArguments",
            "d7747e9e44221562445818c9d745012710b154c0"
        ],
        [
            "Arguments mul_delta_mx {R m n p}.",
            "VernacArguments",
            "a25d7449e80bc6d646ab2df1e970d2bf1e5b7813"
        ],
        [
            "Notation \"a %:M\" := (scalar_mx a) : ring_scope.",
            "VernacNotation",
            "08d49b552e9b01c851ef7675f61dba0096ddb009"
        ],
        [
            "Notation \"A *m B\" := (mulmx A B) : ring_scope.",
            "VernacNotation",
            "347a770c8e3f03b23a806b934f96812863f59a99"
        ],
        [
            "Notation mulmxr := (mulmxr_head tt).",
            "VernacSyntacticDefinition",
            "08840823fe98dc71a05cb9e818e979f989337637"
        ],
        [
            "Notation \"\\tr A\" := (mxtrace A) : ring_scope.",
            "VernacNotation",
            "204e7cd76356765ac3264011882c6ae106e1cce5"
        ],
        [
            "Notation \"'\\det' A\" := (determinant A) : ring_scope.",
            "VernacNotation",
            "dfbff3c8afb14d261e8625fa536a3fa16567f5b8"
        ],
        [
            "Notation \"'\\adj' A\" := (adjugate A) : ring_scope.",
            "VernacNotation",
            "10835eea4d2f41edafd0297145726a96ac068270"
        ],
        [
            "Lemma trmx_mul_rev (R : ringType) m n p (A : 'M[R]_(m, n)) (B : 'M[R]_(n, p)) : (A *m B)^T = (B : 'M[R^c]_(n, p))^T *m (A : 'M[R^c]_(m, n))^T.",
            "VernacStartTheoremProof",
            "7dab548201c46aca9cf201f5b2475af43c39a3cf"
        ],
        [
            "by apply/matrixP=> k i; rewrite !mxE; apply: eq_bigr => j _; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical matrix_countZmodType (M : countZmodType) m n := [countZmodType of 'M[M]_(m, n)].",
            "VernacDefinition",
            "6f7d3530c405ec8957aa3fa69efa626bc52a98c8"
        ],
        [
            "Canonical matrix_countRingType (R : countRingType) n := [countRingType of 'M[R]_n.+1].",
            "VernacDefinition",
            "2a236224701ad2c59877ee59a6cccb756a1d88b3"
        ],
        [
            "Canonical matrix_finLmodType (R : finRingType) m n := [finLmodType R of 'M[R]_(m, n)].",
            "VernacDefinition",
            "a7b7e86b2a46ac0cb26730ca1a6e766e1ca2b23f"
        ],
        [
            "Canonical matrix_finRingType (R : finRingType) n' := Eval hnf in [finRingType of 'M[R]_n'.+1].",
            "VernacDefinition",
            "f0e81dc8775e01b12d510d0a1ad271c391ed7517"
        ],
        [
            "Canonical matrix_finLalgType (R : finRingType) n' := [finLalgType R of 'M[R]_n'.+1].",
            "VernacDefinition",
            "67e78914af63c5ad75e3ccf1e29f88cf39fc902d"
        ],
        [
            "Section MapRingMatrix.",
            "VernacBeginSection",
            "77102f00c4057d5c1ed8de4853f2145766e23393"
        ],
        [
            "Variables (aR rR : ringType) (f : {rmorphism aR -> rR}).",
            "VernacAssumption",
            "c87bf8a0e21dfb063f6f4c841aac5a29c5218bee"
        ],
        [
            "Local Notation \"A ^f\" := (map_mx f A) : ring_scope.",
            "VernacNotation",
            "d033ebfb6b3ca0334a58d61928e620230e19b20e"
        ],
        [
            "Section FixedSize.",
            "VernacBeginSection",
            "d3e3896fc5e060291eaa9361f64ffd9176aaea12"
        ],
        [
            "Variables m n p : nat.",
            "VernacAssumption",
            "ce88bd127ae816ea7aec920c1f156c4e777e92c8"
        ],
        [
            "Implicit Type A : 'M[aR]_(m, n).",
            "VernacReserve",
            "1aea7b70db19a0281f8e2c7219e84b79c67ce79d"
        ],
        [
            "Lemma map_mxZ a A : (a *: A)^f = f a *: A^f.",
            "VernacStartTheoremProof",
            "5f2832908b5171bafb82c66f6e7a99785b85e9a0"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE rmorphM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mxM A B : (A *m B)^f = A^f *m B^f :> 'M_(m, p).",
            "VernacStartTheoremProof",
            "e7e84f343ea27d395dbf07b86c62717b3025a0f0"
        ],
        [
            "apply/matrixP=> i k; rewrite !mxE rmorph_sum //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_bigr => j; rewrite !mxE rmorphM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_delta_mx i j : (delta_mx i j)^f = delta_mx i j :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "f6f9c56bd50eae3aa55bd2ca69352cb6ff09d768"
        ],
        [
            "by apply/matrixP=> i' j'; rewrite !mxE rmorph_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_diag_mx d : (diag_mx d)^f = diag_mx d^f :> 'M_n.",
            "VernacStartTheoremProof",
            "f07153b133c04661715ed93aed0358f6e554605b"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE rmorphMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_scalar_mx a : a%:M^f = (f a)%:M :> 'M_n.",
            "VernacStartTheoremProof",
            "80aa3f37d44bb25a52fdd2e66bac55e1d229bb9a"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE rmorphMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx1 : 1%:M^f = 1%:M :> 'M_n.",
            "VernacStartTheoremProof",
            "5ab34054c5f978b680ea1605bdb7f7d0eccbbaaa"
        ],
        [
            "by rewrite map_scalar_mx rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_perm_mx (s : 'S_n) : (perm_mx s)^f = perm_mx s.",
            "VernacStartTheoremProof",
            "957875a9d97ce89482eb730192c80c12fc6999de"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE rmorph_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_tperm_mx (i1 i2 : 'I_n) : (tperm_mx i1 i2)^f = tperm_mx i1 i2.",
            "VernacStartTheoremProof",
            "4871dab647096a6633ee80ba32094f6e043f76eb"
        ],
        [
            "exact: map_perm_mx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_pid_mx r : (pid_mx r)^f = pid_mx r :> 'M_(m, n).",
            "VernacStartTheoremProof",
            "ffcc5d85ddda48674af2d47c76d5f5a27a277668"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE rmorph_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trace_map_mx (A : 'M_n) : \\tr A^f = f (\\tr A).",
            "VernacStartTheoremProof",
            "ee32188c088f2fd5331fa6bbda8a74d333972891"
        ],
        [
            "by rewrite rmorph_sum; apply: eq_bigr => i _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_map_mx n' (A : 'M_n') : \\det A^f = f (\\det A).",
            "VernacStartTheoremProof",
            "c6fad9c008c749fe89deb48f13f0e2f23e4f622b"
        ],
        [
            "rewrite rmorph_sum //; apply: eq_bigr => s _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite rmorphM rmorph_sign rmorph_prod; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_bigr => i _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cofactor_map_mx (A : 'M_n) i j : cofactor A^f i j = f (cofactor A i j).",
            "VernacStartTheoremProof",
            "bb4a8ef10b58807eb9b2670e47f0ecc324ede52d"
        ],
        [
            "by rewrite rmorphM rmorph_sign -det_map_mx map_row' map_col'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx_adj (A : 'M_n) : (\\adj A)^f = \\adj A^f.",
            "VernacStartTheoremProof",
            "1b63c56f892418b7371ac77ebfecd7496fb6f391"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE cofactor_map_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FixedSize.",
            "VernacEndSegment",
            "8720011453112cd4bd83c1c6a2f40758ba1e0003"
        ],
        [
            "Lemma map_copid_mx n r : (copid_mx r)^f = copid_mx r :> 'M_n.",
            "VernacStartTheoremProof",
            "6913f83bdcc921df10cf5a740d535c5d46bed4c2"
        ],
        [
            "by rewrite map_mx_sub map_mx1 map_pid_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx_is_multiplicative n' (n := n'.+1) : multiplicative (map_mx f : 'M_n -> 'M_n).",
            "VernacStartTheoremProof",
            "51114106f0add3f15aee14ff11614fece83104df"
        ],
        [
            "by split; [apply: map_mxM | apply: map_mx1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical map_mx_rmorphism n' := AddRMorphism (map_mx_is_multiplicative n').",
            "VernacDefinition",
            "eabfdffee934fa8d62eb7d94c243f69249cb9c3c"
        ],
        [
            "Lemma map_lin1_mx m n (g : 'rV_m -> 'rV_n) gf : (forall v, (g v)^f = gf v^f) -> (lin1_mx g)^f = lin1_mx gf.",
            "VernacStartTheoremProof",
            "141a150f52d3677591a90218fa271764353c2732"
        ],
        [
            "by move=> def_gf; apply/matrixP=> i j; rewrite !mxE -map_delta_mx -def_gf mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_lin_mx m1 n1 m2 n2 (g : 'M_(m1, n1) -> 'M_(m2, n2)) gf : (forall A, (g A)^f = gf A^f) -> (lin_mx g)^f = lin_mx gf.",
            "VernacStartTheoremProof",
            "e9aee529340bd3112837c9b31cb0590a55538014"
        ],
        [
            "move=> def_gf; apply: map_lin1_mx => A /=.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite map_mxvec def_gf map_vec_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MapRingMatrix.",
            "VernacEndSegment",
            "3e6de5efab856a4cfa84bd9a892c305cb0c958d4"
        ],
        [
            "Section ComMatrix.",
            "VernacBeginSection",
            "1220be431b042073e7ef47256b5c88fdfd49f8ad"
        ],
        [
            "Variable R : comRingType.",
            "VernacAssumption",
            "7f1904bb8d32aac32a2864c2db512ee3df1e5ee6"
        ],
        [
            "Section AssocLeft.",
            "VernacBeginSection",
            "e3ea7596141a854a6c6c0c41ed71fe4ef86beab8"
        ],
        [
            "Variables m n p : nat.",
            "VernacAssumption",
            "ce88bd127ae816ea7aec920c1f156c4e777e92c8"
        ],
        [
            "Implicit Type A : 'M[R]_(m, n).",
            "VernacReserve",
            "925628148f486c4105fcde3e25bd0666874e0518"
        ],
        [
            "Implicit Type B : 'M[R]_(n, p).",
            "VernacReserve",
            "76198afad4654b94f91f2269b13ffd5319a09765"
        ],
        [
            "Lemma trmx_mul A B : (A *m B)^T = B^T *m A^T.",
            "VernacStartTheoremProof",
            "3e847711eec5c89639f1e22bf682e4c32add7573"
        ],
        [
            "rewrite trmx_mul_rev; apply/matrixP=> k i; rewrite !mxE.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by apply: eq_bigr => j _; rewrite mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalemxAr a A B : a *: (A *m B) = A *m (a *: B).",
            "VernacStartTheoremProof",
            "75c002de97378826ba569bb1305dda7801473a28"
        ],
        [
            "by apply: trmx_inj; rewrite trmx_mul !linearZ /= trmx_mul scalemxAl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx_is_scalable A : scalable (@mulmx _ m n p A).",
            "VernacStartTheoremProof",
            "f18f61423f0e282309160f7ea4c3a5b9b2a4682b"
        ],
        [
            "by move=> a B; rewrite scalemxAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical mulmx_linear A := AddLinear (mulmx_is_scalable A).",
            "VernacDefinition",
            "c7678563b1c42ffc2d6f9c09a56510acc9ec2800"
        ],
        [
            "Definition lin_mulmx A : 'M[R]_(n * p, m * p) := lin_mx (mulmx A).",
            "VernacDefinition",
            "9ca7a2ca6446e318ff6a40923ecc53bd94644ec3"
        ],
        [
            "Lemma lin_mulmx_is_linear : linear lin_mulmx.",
            "VernacStartTheoremProof",
            "b468a6560f3bfd86a35ab3a74c15e2ca83848f7f"
        ],
        [
            "move=> a A B; apply/row_matrixP=> i; rewrite linearP /= !rowE !mul_rV_lin /=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite [_ *m _](linearP (mulmxr_linear _ _)) linearP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical lin_mulmx_additive := Additive lin_mulmx_is_linear.",
            "VernacDefinition",
            "8e9a5d96bcc6455a2e5c88a9d660677fed876143"
        ],
        [
            "Canonical lin_mulmx_linear := Linear lin_mulmx_is_linear.",
            "VernacDefinition",
            "38d883a20b31bde928fafd9c45617259a24dc6b1"
        ],
        [
            "End AssocLeft.",
            "VernacEndSegment",
            "b250f37049c7da1616ec7f6aaa52048156144c3e"
        ],
        [
            "Section LinMulRow.",
            "VernacBeginSection",
            "979fe4124a476964642303cfad994a685937ea8f"
        ],
        [
            "Variables m n : nat.",
            "VernacAssumption",
            "e3492c4fff3a30c2074b69e9ef3c152c1d2695a7"
        ],
        [
            "Definition lin_mul_row u : 'M[R]_(m * n, n) := lin1_mx (mulmx u \\o vec_mx).",
            "VernacDefinition",
            "d9ad20aec19cb94a5cbb9c6765833ab5fb3a2d26"
        ],
        [
            "Lemma lin_mul_row_is_linear : linear lin_mul_row.",
            "VernacStartTheoremProof",
            "eac9cc95c07273867d9092bd491233c5799e3c93"
        ],
        [
            "move=> a u v; apply/row_matrixP=> i; rewrite linearP /= !rowE !mul_rV_lin1 /=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite [_ *m _](linearP (mulmxr_linear _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical lin_mul_row_additive := Additive lin_mul_row_is_linear.",
            "VernacDefinition",
            "02e643addf554eb77d4cd45fe5ac46b1119cb31e"
        ],
        [
            "Canonical lin_mul_row_linear := Linear lin_mul_row_is_linear.",
            "VernacDefinition",
            "c63e5c4d9ef624c5b42d01ff7c67abc2efdb3f9d"
        ],
        [
            "Lemma mul_vec_lin_row A u : mxvec A *m lin_mul_row u = u *m A.",
            "VernacStartTheoremProof",
            "3e005fa012eaa7e024ad7be2e16239f3190a5a1e"
        ],
        [
            "by rewrite mul_rV_lin1 /= mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LinMulRow.",
            "VernacEndSegment",
            "3be9a25da4397afb5aa9fc472b950cc8bdad18aa"
        ],
        [
            "Lemma mxvec_dotmul m n (A : 'M[R]_(m, n)) u v : mxvec (u^T *m v) *m (mxvec A)^T = u *m A *m v^T.",
            "VernacStartTheoremProof",
            "74bd767a341d1ca2caf385ab6361cf2c9c61fb34"
        ],
        [
            "transitivity (\\sum_i \\sum_j (u 0 i * A i j *: row j v^T)).",
            "VernacExtend",
            "ac0b0f4772192e2f3c0700890e185204e5341f65"
        ],
        [
            "apply/rowP=> i; rewrite {i}ord1 mxE (reindex _ (curry_mxvec_bij _ _)) /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite pair_bigA summxE; apply: eq_bigr => [[i j]] /= _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !mxE !mxvecE mxE big_ord1 mxE mulrAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulmx_sum_row exchange_big; apply: eq_bigr => j _ /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite mxE -scaler_suml.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section MatrixAlgType.",
            "VernacBeginSection",
            "556d8a5ea82d6649559e6b4052f6ad14e4a63857"
        ],
        [
            "Variable n' : nat.",
            "VernacAssumption",
            "4b8d1474864e01df61b374405aca10e79176b1eb"
        ],
        [
            "Local Notation n := n'.+1.",
            "VernacSyntacticDefinition",
            "a44d7133197df31a38212ab1d7bfb6ec0dc123a2"
        ],
        [
            "Canonical matrix_algType := Eval hnf in AlgType R 'M[R]_n (fun k => scalemxAr k).",
            "VernacDefinition",
            "7673066565b1f3d7c0d96b76666aa37b2e376af6"
        ],
        [
            "End MatrixAlgType.",
            "VernacEndSegment",
            "5da452be1f17d4cf5787b95c108965158fb5e209"
        ],
        [
            "Lemma diag_mxC n (d e : 'rV[R]_n) : diag_mx d *m diag_mx e = diag_mx e *m diag_mx d.",
            "VernacStartTheoremProof",
            "658d3a11853b7bf156ef3877d3d6ed9d5ba14e51"
        ],
        [
            "by rewrite !mulmx_diag; congr (diag_mx _); apply/rowP=> i; rewrite !mxE mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diag_mx_comm n' (d e : 'rV[R]_n'.+1) : GRing.comm (diag_mx d) (diag_mx e).",
            "VernacStartTheoremProof",
            "3cbc999d88449e64a8f234af6f989e04ae2a8a6c"
        ],
        [
            "exact: diag_mxC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalar_mxC m n a (A : 'M[R]_(m, n)) : A *m a%:M = a%:M *m A.",
            "VernacStartTheoremProof",
            "d5e43aed26e7142af43e5b3b5d511cf302ebe435"
        ],
        [
            "by apply: trmx_inj; rewrite trmx_mul tr_scalar_mx !mul_scalar_mx linearZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalar_mx_comm n' a (A : 'M[R]_n'.+1) : GRing.comm A a%:M.",
            "VernacStartTheoremProof",
            "18607fb9ae4acf863964ee0b836276d41d792715"
        ],
        [
            "exact: scalar_mxC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_mx_scalar m n a (A : 'M[R]_(m, n)) : A *m a%:M = a *: A.",
            "VernacStartTheoremProof",
            "8b4ce02927955a1aa3bb0fafe95b2dff9dad4af0"
        ],
        [
            "by rewrite scalar_mxC mul_scalar_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_mulC m n (A : 'M[R]_(m, n)) B : \\tr (A *m B) = \\tr (B *m A).",
            "VernacStartTheoremProof",
            "1544d1498ccf5fef2ec880667fcf9e08058ce404"
        ],
        [
            "have expand_trM C D: \\tr (C *m D) = \\sum_i \\sum_j C i j * D j i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: eq_bigr => i _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !{}expand_trM exchange_big /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by do 2!apply: eq_bigr => ? _; apply: mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma determinant_multilinear n (A B C : 'M[R]_n) i0 b c : row i0 A = b *: row i0 B + c *: row i0 C -> row' i0 B = row' i0 A -> row' i0 C = row' i0 A -> \\det A = b * \\det B + c * \\det C.",
            "VernacStartTheoremProof",
            "fe1d5ed8f03a1eb2161482236a267b366e82ff10"
        ],
        [
            "rewrite -[_ + _](row_id 0); move/row_eq=> ABC.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "move/row'_eq=> BA; move/row'_eq=> CA.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite !big_distrr -big_split; apply: eq_bigr => s _ /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -!(mulrCA (_ ^+s)) -mulrDr; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite !(bigD1 i0 (_ : predT i0)) //= {}ABC !mxE mulrDl !mulrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by congr (_ * _ + _ * _); apply: eq_bigr => i i0i; rewrite ?BA ?CA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma determinant_alternate n (A : 'M[R]_n) i1 i2 : i1 != i2 -> A i1 =1 A i2 -> \\det A = 0.",
            "VernacStartTheoremProof",
            "2591e0279bcc0f01ec981e059a367bd4ad3ccd01"
        ],
        [
            "move=> neq_i12 eqA12; pose t := tperm i1 i2.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have oddMt s: (t * s)%g = ~~ s :> bool by rewrite odd_permM odd_tperm neq_i12.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite [\\det A](bigID (@odd_perm _)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: canLR (subrK _) _; rewrite add0r -sumrN.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (reindex_inj (mulgI t)); apply: eq_big => //= s.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite oddMt => /negPf->; rewrite mulN1r mul1r; congr (- _).",
            "VernacExtend",
            "54589fec25bf1286ab5587e277b934fa2785e8ec"
        ],
        [
            "rewrite (reindex_perm t); apply: eq_bigr => /= i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite permM tpermK /t; case: tpermP => // ->; rewrite eqA12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_tr n (A : 'M[R]_n) : \\det A^T = \\det A.",
            "VernacStartTheoremProof",
            "9c18e39830d3585947b5e20ec4276dd48d50ab38"
        ],
        [
            "rewrite [\\det A^T](reindex_inj invg_inj) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => s _ /=; rewrite !odd_permV (reindex_perm s) /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by congr (_ * _); apply: eq_bigr => i _; rewrite mxE permK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_perm n (s : 'S_n) : \\det (perm_mx s) = (-1) ^+ s :> R.",
            "VernacStartTheoremProof",
            "2236201fa0d0f68118cd5dcf0a0e9e61aa7379b0"
        ],
        [
            "rewrite [\\det _](bigD1 s) //= big1 => [|i _]; last by rewrite /= !mxE eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite mulr1 big1 ?addr0 => //= t Dst.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (pickP (fun i => s i != t i)) => [i ist | Est].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (bigD1 i) // mulrCA /= !mxE (negbTE ist) mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/eqP: Dst; apply/permP => i; move/eqP: (Est i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det1 n : \\det (1%:M : 'M[R]_n) = 1.",
            "VernacStartTheoremProof",
            "92f3f30c133991df7d74ddcca1428a445c8fc914"
        ],
        [
            "by rewrite -perm_mx1 det_perm odd_perm1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_mx00 (A : 'M[R]_0) : \\det A = 1.",
            "VernacStartTheoremProof",
            "5ac0f7bc88f8535cdac129313a6df719364ae11c"
        ],
        [
            "by rewrite flatmx0 -(flatmx0 1%:M) det1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma detZ n a (A : 'M[R]_n) : \\det (a *: A) = a ^+ n * \\det A.",
            "VernacStartTheoremProof",
            "58b3f50b4ac3b237caf05d42201f6acf27c43f28"
        ],
        [
            "rewrite big_distrr /=; apply: eq_bigr => s _; rewrite mulrCA; congr (_ * _).",
            "VernacExtend",
            "e665a129969e89df20cf8929f8d507bb69bcbafb"
        ],
        [
            "rewrite -[n in a ^+ n]card_ord -prodr_const -big_split /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr=> i _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det0 n' : \\det (0 : 'M[R]_n'.+1) = 0.",
            "VernacStartTheoremProof",
            "d2b554d051d9810e2ffe3628c8787a492048fcac"
        ],
        [
            "by rewrite -(scale0r 0) detZ exprS !mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_scalar n a : \\det (a%:M : 'M[R]_n) = a ^+ n.",
            "VernacStartTheoremProof",
            "eba4dc517e78d9b7fb9f9cd3752dbbc0826dd346"
        ],
        [
            "by rewrite -{1}(mulr1 a) -scale_scalar_mx detZ det1 mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_scalar1 a : \\det (a%:M : 'M[R]_1) = a.",
            "VernacStartTheoremProof",
            "e8da7bd0104468ac7ad4a2d5e90544cfe734e2f0"
        ],
        [
            "exact: det_scalar.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_mulmx n (A B : 'M[R]_n) : \\det (A *m B) = \\det A * \\det B.",
            "VernacStartTheoremProof",
            "5403ef503310227bfc2800acc539f206c36ebc25"
        ],
        [
            "rewrite big_distrl /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose F := ('I_n ^ n)%type; pose AB s i j := A i j * B j (s i).",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "transitivity (\\sum_(f : F) \\sum_(s : 'S_n) (-1) ^+ s * \\prod_i AB s i (f i)).",
            "VernacExtend",
            "7c675963a326caae1c2419fa35ee5654b3ba17be"
        ],
        [
            "rewrite exchange_big; apply: eq_bigr => /= s _; rewrite -big_distrr /=.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "congr (_ * _); rewrite -(bigA_distr_bigA (AB s)) /=.",
            "VernacExtend",
            "90723b7805fdae0b93bd8b98ae215a5658363919"
        ],
        [
            "by apply: eq_bigr => x _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (bigID (fun f : F => injectiveb f)) /= addrC big1 ?add0r => [|f Uf].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (reindex (@pval _)) /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose in_Sn := insubd (1%g : 'S_n).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "by exists in_Sn => /= f Uf; first apply: val_inj; apply: insubdK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: eq_big => /= [s | s _]; rewrite ?(valP s) // big_distrr /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (reindex_inj (mulgI s)); apply: eq_bigr => t _ /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite big_split /= mulrA mulrCA mulrA mulrCA mulrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -signr_addb odd_permM !pvalE; congr (_ * _); symmetry.",
            "VernacExtend",
            "43be5b37da85e7fdaee038ed6928ae30ff2d68d5"
        ],
        [
            "by rewrite (reindex_perm s); apply: eq_bigr => i; rewrite permM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "transitivity (\\det (\\matrix_(i, j) B (f i) j) * \\prod_i A i (f i)).",
            "VernacExtend",
            "a7fc0cae514ec8216c1dc3833bc06f28a63fbeeb"
        ],
        [
            "rewrite mulrC big_distrr /=; apply: eq_bigr => s _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite mulrCA big_split //=; congr (_ * (_ * _)).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_bigr => x _; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/injectivePn: Uf => i1 [i2 Di12 Ef12].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (determinant_alternate Di12) ?simp //= => j; rewrite !mxE Ef12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma detM n' (A B : 'M[R]_n'.+1) : \\det (A * B) = \\det A * \\det B.",
            "VernacStartTheoremProof",
            "f9ba629a867e1ec58df913f30566b106cb537c0f"
        ],
        [
            "exact: det_mulmx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_diag n (d : 'rV[R]_n) : \\det (diag_mx d) = \\prod_i d 0 i.",
            "VernacStartTheoremProof",
            "3aa2c0af4572ed7fa9423f54eb7a9e047e2a3570"
        ],
        [
            "rewrite /(\\det _) (bigD1 1%g) //= addrC big1 => [|p p1].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite add0r odd_perm1 mul1r; apply: eq_bigr => i; rewrite perm1 mxE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{p1}: ~~ perm_on set0 p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contra p1; move/subsetP=> p1; apply/eqP; apply/permP=> i.",
            "VernacExtend",
            "c63cc1edd6ea74c177b43be5463fe7810ae7c4db"
        ],
        [
            "by rewrite perm1; apply/eqP; apply/idPn; move/p1; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/subsetPn=> i; rewrite !inE eq_sym; move/negbTE=> p_i _.",
            "VernacExtend",
            "c5cb6672fdde6b3af11f77240bf9bbcee9174e45"
        ],
        [
            "by rewrite (bigD1 i) //= mulrCA mxE p_i mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expand_cofactor n (A : 'M[R]_n) i j : cofactor A i j = \\sum_(s : 'S_n | s i == j) (-1) ^+ s * \\prod_(k | i != k) A k (s k).",
            "VernacStartTheoremProof",
            "815ce84b8abd7b16d1a192d419328e1bf26d8c99"
        ],
        [
            "case: n A i j => [|n] A i0 j0; first by case: i0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (reindex (lift_perm i0 j0)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose ulsf i (s : 'S_n.+1) k := odflt k (unlift (s i) (s (lift i k))).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have ulsfK i (s : 'S_n.+1) k: lift (s i) (ulsf i s k) = s (lift i k).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /ulsf; have:= neq_lift i k.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by rewrite -(can_eq (permK s)) => /unlift_some[] ? ? ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have inj_ulsf: injective (ulsf i0 _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> s; apply: can_inj (ulsf (s i0) s^-1%g) _ => k'.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite {1}/ulsf ulsfK !permK liftK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (fun s => perm (inj_ulsf s)) => [s _ | s].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply/permP=> k'; rewrite permE /ulsf lift_perm_lift lift_perm_id liftK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/(s _ =P _) => si0; apply/permP=> k.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "case: (unliftP i0 k) => [k'|] ->; rewrite ?lift_perm_id //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite lift_perm_lift -si0 permE ulsfK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /cofactor big_distrr /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_big => [s | s _]; first by rewrite lift_perm_id eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -signr_odd mulrA -signr_addb odd_add -odd_lift_perm; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "case: (pickP 'I_n) => [k0 _ | n0]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !big1 // => [j /unlift_some[i] | i _]; have:= n0 i.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (reindex (lift i0)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_big => [k | k _] /=; rewrite ?neq_lift // !mxE lift_perm_lift.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (fun k => odflt k0 (unlift i0 k)) => k; first by rewrite liftK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/unlift_some=> k' -> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expand_det_row n (A : 'M[R]_n) i0 : \\det A = \\sum_j A i0 j * cofactor A i0 j.",
            "VernacStartTheoremProof",
            "4e8588da19e293455ce82eb3a35e06151bc239ac"
        ],
        [
            "rewrite /(\\det A) (partition_big (fun s : 'S_n => s i0) predT) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => j0 _; rewrite expand_cofactor big_distrr /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: eq_bigr => s /eqP Dsi0.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite mulrCA (bigID (pred1 i0)) /= big_pred1_eq Dsi0; congr (_ * (_ * _)).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_bigl => i; rewrite eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cofactor_tr n (A : 'M[R]_n) i j : cofactor A^T i j = cofactor A j i.",
            "VernacStartTheoremProof",
            "938a808148f012cf0c86d0e80413798d63eea661"
        ],
        [
            "rewrite /cofactor addnC; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -tr_row' -tr_col' det_tr; congr (\\det _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply/matrixP=> ? ?; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cofactorZ n a (A : 'M[R]_n) i j : cofactor (a *: A) i j = a ^+ n.-1 * cofactor A i j.",
            "VernacStartTheoremProof",
            "dbbc4688a776ab23b0efc058ab6dfcc93028a853"
        ],
        [
            "by rewrite {1}/cofactor !linearZ detZ mulrCA mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expand_det_col n (A : 'M[R]_n) j0 : \\det A = \\sum_i (A i j0 * cofactor A i j0).",
            "VernacStartTheoremProof",
            "ec6db6173c872eee3d286cb66278c69dad1fc8b7"
        ],
        [
            "rewrite -det_tr (expand_det_row _ j0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite cofactor_tr mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_adj n (A : 'M[R]_n) : (\\adj A)^T = \\adj A^T.",
            "VernacStartTheoremProof",
            "c4d27b4a96e60d471c8cf0741c88c957b5cb3f83"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE cofactor_tr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adjZ n a (A : 'M[R]_n) : \\adj (a *: A) = a^+n.-1 *: \\adj A.",
            "VernacStartTheoremProof",
            "180c4589f9792cc11ccf63ea9acf97c7a853212b"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE cofactorZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_mx_adj n (A : 'M[R]_n) : A *m \\adj A = (\\det A)%:M.",
            "VernacStartTheoremProof",
            "557d6ced0c032bf11ad4f6d42cc700e69d20b45b"
        ],
        [
            "apply/matrixP=> i1 i2; rewrite !mxE; case Di: (i1 == i2).",
            "VernacExtend",
            "5caed936835e366e9e533d8f19382dcfedbf86d4"
        ],
        [
            "rewrite (eqP Di) (expand_det_row _ i2) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => j _; congr (_ * _); rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose B := \\matrix_(i, j) (if i == i2 then A i1 j else A i j).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have EBi12: B i1 =1 B i2 by move=> j; rewrite /= !mxE Di eq_refl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[_ *+ _](determinant_alternate (negbT Di) EBi12) (expand_det_row _ i2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => j _; rewrite !mxE eq_refl; congr (_ * (_ * _)).",
            "VernacExtend",
            "91580bd9cdf2cad626638a70b66bf9b00afa41b1"
        ],
        [
            "apply: eq_bigr => s _; congr (_ * _); apply: eq_bigr => i _.",
            "VernacExtend",
            "605affa5a0fdbcd92a4eb33db64b444effbaaef3"
        ],
        [
            "by rewrite !mxE eq_sym -if_neg neq_lift.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_adj_mx n (A : 'M[R]_n) : \\adj A *m A = (\\det A)%:M.",
            "VernacStartTheoremProof",
            "826e295a78ad24906865ee18a41d45e0834333ba"
        ],
        [
            "by apply: trmx_inj; rewrite trmx_mul trmx_adj mul_mx_adj det_tr tr_scalar_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adj1 n : \\adj (1%:M) = 1%:M :> 'M[R]_n.",
            "VernacStartTheoremProof",
            "c57dd118ee5640b0ea00bd36effd7ac4e3a6af3d"
        ],
        [
            "by rewrite -{2}(det1 n) -mul_adj_mx mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx1C n (A B : 'M[R]_n) : A *m B = 1%:M -> B *m A = 1%:M.",
            "VernacStartTheoremProof",
            "e73c2f4b7521f62c47fbdad903bf3771de9b95bb"
        ],
        [
            "move=> AB1; pose A' := \\det B *: \\adj A.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "suffices kA: A' *m A = 1%:M by rewrite -[B]mul1mx -kA -(mulmxA A') AB1 mulmx1.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite -scalemxAl mul_adj_mx scale_scalar_mx mulrC -det_mulmx AB1 det1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx1_min m n (A : 'M[R]_(m, n)) B : A *m B = 1%:M -> m <= n.",
            "VernacStartTheoremProof",
            "17243285cd30f1d4b3b055c6cbb269e74a19c3f0"
        ],
        [
            "move=> AB1; rewrite leqNgt; apply/negP=> /subnKC; rewrite addSnnS.",
            "VernacExtend",
            "291cbed887ee44aa2a2133906ee031c937159d58"
        ],
        [
            "move: (_ - _)%N => m' def_m; move: AB1; rewrite -{m}def_m in A B *.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "rewrite -(vsubmxK A) -(hsubmxK B) mul_col_row scalar_mx_block.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/eq_block_mx=> /mulmx1C BlAu1 AuBr0 _ => /eqP/idPn[].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -[_ B]mul1mx -BlAu1 -mulmxA AuBr0 !mulmx0 eq_sym oner_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_ublock n1 n2 Aul (Aur : 'M[R]_(n1, n2)) Adr : \\det (block_mx Aul Aur 0 Adr) = \\det Aul * \\det Adr.",
            "VernacStartTheoremProof",
            "666f63745ad23faa49b4ebb78bd8404ec66fa2ae"
        ],
        [
            "elim: n1 => [|n1 IHn1] in Aul Aur *.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have ->: Aul = 1%:M by apply/matrixP=> i [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite det1 mul1r; congr (\\det _); apply/matrixP=> i j.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "by do 2![rewrite !mxE; case: splitP => [[]|k] //=; move/val_inj=> <- {k}].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (expand_det_col _ (lshift n2 0)) big_split_ord /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addrC big1 1?simp => [|i _]; last by rewrite block_mxEdl mxE simp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (expand_det_col _ 0) big_distrl /=; apply eq_bigr=> i _.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite block_mxEul -!mulrA; do 2!congr (_ * _).",
            "VernacExtend",
            "6a72213b8ff230d3c557d3c0d5b7e6e6d5c919ed"
        ],
        [
            "by rewrite col'_col_mx !col'Kl raddf0 row'Ku row'_row_mx IHn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_lblock n1 n2 Aul (Adl : 'M[R]_(n2, n1)) Adr : \\det (block_mx Aul 0 Adl Adr) = \\det Aul * \\det Adr.",
            "VernacStartTheoremProof",
            "1a2e22d9726725ac653eb945cfc71178cdd278c1"
        ],
        [
            "by rewrite -det_tr tr_block_mx trmx0 det_ublock !det_tr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ComMatrix.",
            "VernacEndSegment",
            "de030a57a428229bd548403b7d3d41a263f2de0f"
        ],
        [
            "Arguments lin_mul_row {R m n} u.",
            "VernacArguments",
            "0306de4a6221acaa77e3061043af5abf0a78ba06"
        ],
        [
            "Arguments lin_mulmx {R m n p} A.",
            "VernacArguments",
            "1580659c24e96afa0bf8ec382cd5df850fbedb17"
        ],
        [
            "Canonical matrix_finAlgType (R : finComRingType) n' := [finAlgType R of 'M[R]_n'.+1].",
            "VernacDefinition",
            "b62e83eba858407c67d2a171bab4d7d5a64adab2"
        ],
        [
            "Section MatrixInv.",
            "VernacBeginSection",
            "6746258692afa02d72dc7081badf2755a693a5cf"
        ],
        [
            "Variables R : comUnitRingType.",
            "VernacAssumption",
            "41cfe2068730b999f2c5d4b15e7cfda930d59847"
        ],
        [
            "Section Defs.",
            "VernacBeginSection",
            "0538f5188d53d77ea5d8ba0fff0a7cfc5485e666"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Implicit Type A : 'M[R]_n.",
            "VernacReserve",
            "d20fefe1a6033736ae3d9ad2f374f9ece0125f82"
        ],
        [
            "Definition unitmx : pred 'M[R]_n := fun A => \\det A \\is a GRing.unit.",
            "VernacDefinition",
            "37e21eee2b5548f44a54b7a4bf1c19edc7c6cfb8"
        ],
        [
            "Definition invmx A := if A \\in unitmx then (\\det A)^-1 *: \\adj A else A.",
            "VernacDefinition",
            "fa5c1082f4921bea0228278972bd2fb6b674cfff"
        ],
        [
            "Lemma unitmxE A : (A \\in unitmx) = (\\det A \\is a GRing.unit).",
            "VernacStartTheoremProof",
            "3686f663061f1046fbf6f03925e543b38e4a0378"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitmx1 : 1%:M \\in unitmx.",
            "VernacStartTheoremProof",
            "fb948805f6f24427e59ee50e6e163b3fd33caae2"
        ],
        [
            "by rewrite unitmxE det1 unitr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitmx_perm s : perm_mx s \\in unitmx.",
            "VernacStartTheoremProof",
            "05cc221a37ae41084102581d2231287a6bcad1b4"
        ],
        [
            "by rewrite unitmxE det_perm unitrX ?unitrN ?unitr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitmx_tr A : (A^T \\in unitmx) = (A \\in unitmx).",
            "VernacStartTheoremProof",
            "fd14681493a035c8f0980f1b273087f04dd860ed"
        ],
        [
            "by rewrite unitmxE det_tr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitmxZ a A : a \\is a GRing.unit -> (a *: A \\in unitmx) = (A \\in unitmx).",
            "VernacStartTheoremProof",
            "5c42af9be21a31a78285f58ffa0b4f8f4a3d5cd7"
        ],
        [
            "by move=> Ua; rewrite !unitmxE detZ unitrM unitrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invmx1 : invmx 1%:M = 1%:M.",
            "VernacStartTheoremProof",
            "2bc61e2b8c81375a92340cb9537f20b61f815193"
        ],
        [
            "by rewrite /invmx det1 invr1 scale1r adj1 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invmxZ a A : a *: A \\in unitmx -> invmx (a *: A) = a^-1 *: invmx A.",
            "VernacStartTheoremProof",
            "5e6c13c141c427e780b8498e059e6785861cec40"
        ],
        [
            "rewrite /invmx !unitmxE detZ unitrM => /andP[Ua U_A].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Ua U_A adjZ !scalerA invrM {U_A}//=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (posnP n) A => [-> | n_gt0] A; first by rewrite flatmx0 [_ *: _]flatmx0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite unitrX_pos // in Ua; rewrite -[_ * _](mulrK Ua) mulrC -!mulrA.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by rewrite -exprSr prednK // !mulrA divrK ?unitrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invmx_scalar a : invmx (a%:M) = a^-1%:M.",
            "VernacStartTheoremProof",
            "ad88d93902e5eee91b04caa3d29af0621b1c36fe"
        ],
        [
            "case Ua: (a%:M \\in unitmx).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -scalemx1 in Ua *; rewrite invmxZ // invmx1 scalemx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /invmx Ua; have [->|n_gt0] := posnP n; first by rewrite ![_%:M]flatmx0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite unitmxE det_scalar unitrX_pos // in Ua; rewrite invr_out ?Ua.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulVmx : {in unitmx, left_inverse 1%:M invmx mulmx}.",
            "VernacStartTheoremProof",
            "d25f440aaca9db859d1c7179b0a035cfd2919b47"
        ],
        [
            "by move=> A nsA; rewrite /invmx nsA -scalemxAl mul_adj_mx scale_scalar_mx mulVr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmxV : {in unitmx, right_inverse 1%:M invmx mulmx}.",
            "VernacStartTheoremProof",
            "51738799858631b337baadd6b343893fbd366d9d"
        ],
        [
            "by move=> A nsA; rewrite /invmx nsA -scalemxAr mul_mx_adj scale_scalar_mx mulVr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulKmx m : {in unitmx, @left_loop _ 'M_(n, m) invmx mulmx}.",
            "VernacStartTheoremProof",
            "6e0be0919b20b055393b0ad5f305d546aa6562ec"
        ],
        [
            "by move=> A uA /= B; rewrite mulmxA mulVmx ?mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulKVmx m : {in unitmx, @rev_left_loop _ 'M_(n, m) invmx mulmx}.",
            "VernacStartTheoremProof",
            "3b4103a6d6bfef133a022956756910d130f60581"
        ],
        [
            "by move=> A uA /= B; rewrite mulmxA mulmxV ?mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmxK m : {in unitmx, @right_loop 'M_(m, n) _ invmx mulmx}.",
            "VernacStartTheoremProof",
            "26258825c0e7b13a9b6cc13b20da6f0324508105"
        ],
        [
            "by move=> A uA /= B; rewrite -mulmxA mulmxV ?mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmxKV m : {in unitmx, @rev_right_loop 'M_(m, n) _ invmx mulmx}.",
            "VernacStartTheoremProof",
            "6df6295e1fe55067335d7dfcb0f8374cc14b0d87"
        ],
        [
            "by move=> A uA /= B; rewrite -mulmxA mulVmx ?mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det_inv A : \\det (invmx A) = (\\det A)^-1.",
            "VernacStartTheoremProof",
            "3a3c2ae9999200550af0b1635b3f2589d12995d9"
        ],
        [
            "case uA: (A \\in unitmx); last by rewrite /invmx uA invr_out ?negbT.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: (mulrI uA); rewrite -det_mulmx mulmxV ?divrr ?det1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitmx_inv A : (invmx A \\in unitmx) = (A \\in unitmx).",
            "VernacStartTheoremProof",
            "6cd2a4e802e187b0130584980fc57b302ab41143"
        ],
        [
            "by rewrite !unitmxE det_inv unitrV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitmx_mul A B : (A *m B \\in unitmx) = (A \\in unitmx) && (B \\in unitmx).",
            "VernacStartTheoremProof",
            "ba05c15b4cd4bf611b1215fcc9a80ce525e58962"
        ],
        [
            "by rewrite -unitrM -det_mulmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmx_inv (A : 'M_n) : (invmx A)^T = invmx (A^T).",
            "VernacStartTheoremProof",
            "f384f5ea59bb307f6ddb6112afab4096c4965dad"
        ],
        [
            "by rewrite (fun_if trmx) linearZ /= trmx_adj -unitmx_tr -det_tr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invmxK : involutive invmx.",
            "VernacStartTheoremProof",
            "32271dd9701cc766fa59d108c7e8889346b97136"
        ],
        [
            "move=> A; case uA : (A \\in unitmx); last by rewrite /invmx !uA.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: (can_inj (mulKVmx uA)); rewrite mulVmx // mulmxV ?unitmx_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulmx1_unit A B : A *m B = 1%:M -> A \\in unitmx /\\ B \\in unitmx.",
            "VernacStartTheoremProof",
            "eaf0465112253f8f78ddbd72ee63042c5119a095"
        ],
        [
            "by move=> AB1; apply/andP; rewrite -unitmx_mul AB1 unitmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intro_unitmx A B : B *m A = 1%:M /\\ A *m B = 1%:M -> unitmx A.",
            "VernacStartTheoremProof",
            "722738d66e9bbcadb9d4c6e75330f3de67cde71e"
        ],
        [
            "by case=> _ /mulmx1_unit[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invmx_out : {in [predC unitmx], invmx =1 id}.",
            "VernacStartTheoremProof",
            "84e128434bee5ea0134050ba1d1c4e314a0a765b"
        ],
        [
            "by move=> A; rewrite inE /= /invmx -if_neg => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Defs.",
            "VernacEndSegment",
            "e5c42fff3384ffa717a0ec819d3b7eaff5043179"
        ],
        [
            "Variable n' : nat.",
            "VernacAssumption",
            "4b8d1474864e01df61b374405aca10e79176b1eb"
        ],
        [
            "Local Notation n := n'.+1.",
            "VernacSyntacticDefinition",
            "a44d7133197df31a38212ab1d7bfb6ec0dc123a2"
        ],
        [
            "Definition matrix_unitRingMixin := UnitRingMixin (@mulVmx n) (@mulmxV n) (@intro_unitmx n) (@invmx_out n).",
            "VernacDefinition",
            "6d0dd287d7005f574dbf42b1b7b9f4cc8344afaf"
        ],
        [
            "Canonical matrix_unitRing := Eval hnf in UnitRingType 'M[R]_n matrix_unitRingMixin.",
            "VernacDefinition",
            "77d99634ece33e04b52ba52513ed18f3ff2d53e0"
        ],
        [
            "Canonical matrix_unitAlg := Eval hnf in [unitAlgType R of 'M[R]_n].",
            "VernacDefinition",
            "72e01cf2dd92939c6edab3ced0824d8a846703c1"
        ],
        [
            "Lemma detV (A : 'M_n) : \\det A^-1 = (\\det A)^-1.",
            "VernacStartTheoremProof",
            "adc55f7b853491c6b0123d1721e72ec84a638f48"
        ],
        [
            "exact: det_inv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitr_trmx (A : 'M_n) : (A^T \\is a GRing.unit) = (A \\is a GRing.unit).",
            "VernacStartTheoremProof",
            "600f7f79e75626a58f878d3d9259ff727a0db237"
        ],
        [
            "exact: unitmx_tr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trmxV (A : 'M_n) : A^-1^T = (A^T)^-1.",
            "VernacStartTheoremProof",
            "876fc182bcc22d0b85dae16264cb3658fc434448"
        ],
        [
            "exact: trmx_inv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_mxV (s : 'S_n) : perm_mx s^-1 = (perm_mx s)^-1.",
            "VernacStartTheoremProof",
            "52700ab6693ed21c7f3081c078d64aeb97c4ed34"
        ],
        [
            "rewrite -[_^-1]mul1r; apply: (canRL (mulmxK (unitmx_perm s))).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -perm_mxM mulVg perm_mx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_perm_mxV (A : 'M_n) : is_perm_mx A^-1 = is_perm_mx A.",
            "VernacStartTheoremProof",
            "4e846dc4fccc40ff6d46be97641325a4f82a3dc2"
        ],
        [
            "apply/is_perm_mxP/is_perm_mxP=> [] [s defA]; exists s^-1%g.",
            "VernacExtend",
            "dbf56f09b26f68228b201638cdccf2383b141d25"
        ],
        [
            "by rewrite -(invrK A) defA perm_mxV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite defA perm_mxV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MatrixInv.",
            "VernacEndSegment",
            "3d62e449b72b72a1a222328e171b60a7f9a289c1"
        ],
        [
            "Prenex Implicits unitmx invmx invmxK.",
            "VernacExtend",
            "262170b377aea3b706b36e3aaeca113fd7479db7"
        ],
        [
            "Canonical matrix_countUnitRingType (R : countComUnitRingType) n := [countUnitRingType of 'M[R]_n.+1].",
            "VernacDefinition",
            "7b96b317fded8f86f486d29496b3a8364b3c18bf"
        ],
        [
            "Section FinUnitMatrix.",
            "VernacBeginSection",
            "ff1be3695c9756979523f1e3e06d9aeb8f56a774"
        ],
        [
            "Variables (n : nat) (R : finComUnitRingType).",
            "VernacAssumption",
            "c10290f388266a9c4f041b5561f8e652413c2fd8"
        ],
        [
            "Canonical matrix_finUnitRingType n' := Eval hnf in [finUnitRingType of 'M[R]_n'.+1].",
            "VernacDefinition",
            "5fcedeb8673818f2741c9d03016aef6ef8b4ce2e"
        ],
        [
            "Definition GLtype of phant R := {unit 'M[R]_n.-1.+1}.",
            "VernacDefinition",
            "c4a246243ff2822c99f89bcb8486564cc379dc8f"
        ],
        [
            "Coercion GLval ph (u : GLtype ph) : 'M[R]_n.-1.+1 := let: FinRing.Unit A _ := u in A.",
            "VernacDefinition",
            "29e8bc0427307c67e6931525fb2c08656c4ac92f"
        ],
        [
            "End FinUnitMatrix.",
            "VernacEndSegment",
            "8c25be46966a0ab5979dec9dbf07325773be4259"
        ],
        [
            "Bind Scope group_scope with GLtype.",
            "VernacBindScope",
            "78b4de303c15cbf299aa1eb332c5b90f165fabf3"
        ],
        [
            "Arguments GLval {n%N R ph} u%g.",
            "VernacArguments",
            "10ef4b6ded4c69b6d666d4887e79cd2badfa433d"
        ],
        [
            "Notation \"{ ''GL_' n [ R ] }\" := (GLtype n (Phant R)) (at level 0, n at level 2, format \"{ ''GL_' n [ R ] }\") : type_scope.",
            "VernacNotation",
            "83adf7248c09ba6d0cb8b4f79a2662aa4383a3c1"
        ],
        [
            "Notation \"{ ''GL_' n ( p ) }\" := {'GL_n['F_p]} (at level 0, n at level 2, p at level 10, format \"{ ''GL_' n ( p ) }\") : type_scope.",
            "VernacNotation",
            "486d8f0d3fde0359a261251c8b785117c8346811"
        ],
        [
            "Section GL_unit.",
            "VernacBeginSection",
            "105a25cb98d2a8c524dd08f0a748f5d89d02ffc9"
        ],
        [
            "Variables (n : nat) (R : finComUnitRingType).",
            "VernacAssumption",
            "c10290f388266a9c4f041b5561f8e652413c2fd8"
        ],
        [
            "Canonical GL_subType := [subType of {'GL_n[R]} for GLval].",
            "VernacDefinition",
            "c43ef8c9e07ab35e721b3d6bcec0997b2fbb688d"
        ],
        [
            "Definition GL_eqMixin := Eval hnf in [eqMixin of {'GL_n[R]} by <:].",
            "VernacDefinition",
            "889d6d69d999706696e167052fe3b210f0b45c4d"
        ],
        [
            "Canonical GL_eqType := Eval hnf in EqType {'GL_n[R]} GL_eqMixin.",
            "VernacDefinition",
            "1ba89b81fa74ebba4ff1296c4f2864d5fafc78c9"
        ],
        [
            "Canonical GL_choiceType := Eval hnf in [choiceType of {'GL_n[R]}].",
            "VernacDefinition",
            "7c8fad2cdd9e33dc5e362cb0d37e1c8853765d8f"
        ],
        [
            "Canonical GL_countType := Eval hnf in [countType of {'GL_n[R]}].",
            "VernacDefinition",
            "2ffbf3df46be11ec20c586527664f4de966783fc"
        ],
        [
            "Canonical GL_subCountType := Eval hnf in [subCountType of {'GL_n[R]}].",
            "VernacDefinition",
            "502a376f200fc1b19e0fc33db26e0e1352f70936"
        ],
        [
            "Canonical GL_finType := Eval hnf in [finType of {'GL_n[R]}].",
            "VernacDefinition",
            "0bf4305c0846fbebfa98a2cbcf9d5eeaf7f1329f"
        ],
        [
            "Canonical GL_subFinType := Eval hnf in [subFinType of {'GL_n[R]}].",
            "VernacDefinition",
            "f09889885432f429e586f8ee42ae195d7e149573"
        ],
        [
            "Canonical GL_baseFinGroupType := Eval hnf in [baseFinGroupType of {'GL_n[R]}].",
            "VernacDefinition",
            "afe37d101dbef6fb6ced4c7776418194dfe7bdf5"
        ],
        [
            "Canonical GL_finGroupType := Eval hnf in [finGroupType of {'GL_n[R]}].",
            "VernacDefinition",
            "9920f7e11cda0096e1fe3b9791a324cb470fd418"
        ],
        [
            "Definition GLgroup of phant R := [set: {'GL_n[R]}].",
            "VernacDefinition",
            "9370bf15506a0f16f2dd1f1853307e5508290a8e"
        ],
        [
            "Canonical GLgroup_group ph := Eval hnf in [group of GLgroup ph].",
            "VernacDefinition",
            "61c1d3cbd7cb3ebff1a0ac2a8c5596468d618d15"
        ],
        [
            "Implicit Types u v : {'GL_n[R]}.",
            "VernacReserve",
            "92422e98eacd342e6f4ad4c4685daae056e32665"
        ],
        [
            "Lemma GL_1E : GLval 1 = 1.",
            "VernacStartTheoremProof",
            "895fd71ae7bc7ccca4c1c08586b3572e13cd5fd7"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma GL_VE u : GLval u^-1 = (GLval u)^-1.",
            "VernacStartTheoremProof",
            "d9a77a17d8082cf9ce1892401f69cf9805971be1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma GL_VxE u : GLval u^-1 = invmx u.",
            "VernacStartTheoremProof",
            "dff21f1d7cb416df5f5f1cf8b5820c1c2ddbab36"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma GL_ME u v : GLval (u * v) = GLval u * GLval v.",
            "VernacStartTheoremProof",
            "e29a3a1fd627bc4fb2580f66924df677ea48f713"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma GL_MxE u v : GLval (u * v) = u *m v.",
            "VernacStartTheoremProof",
            "37258de97c118c9cf42e11b761a329864792d17b"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma GL_unit u : GLval u \\is a GRing.unit.",
            "VernacStartTheoremProof",
            "50c9ab352686f9e5d2a43ac56b47ff62d65c8740"
        ],
        [
            "exact: valP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma GL_unitmx u : val u \\in unitmx.",
            "VernacStartTheoremProof",
            "2035fe2a5215cd4a1cece790cd883e7c072e4023"
        ],
        [
            "exact: GL_unit.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma GL_det u : \\det u != 0.",
            "VernacStartTheoremProof",
            "3e8ec38ce97bea6ce5dbb14390952e33e96c8040"
        ],
        [
            "by apply: contraL (GL_unitmx u); rewrite unitmxE => /eqP->; rewrite unitr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GL_unit.",
            "VernacEndSegment",
            "fb618a6d5276ece1db70a7495f375011c02bd8df"
        ],
        [
            "Notation \"''GL_' n [ R ]\" := (GLgroup n (Phant R)) (at level 8, n at level 2, format \"''GL_' n [ R ]\") : group_scope.",
            "VernacNotation",
            "3a2a2c7a9937637d6af86362ca1e75b566989b3d"
        ],
        [
            "Notation \"''GL_' n ( p )\" := 'GL_n['F_p] (at level 8, n at level 2, p at level 10, format \"''GL_' n ( p )\") : group_scope.",
            "VernacNotation",
            "e475a62c95deebf816fcaeff7402981651c3c2cd"
        ],
        [
            "Notation \"''GL_' n [ R ]\" := (GLgroup_group n (Phant R)) : Group_scope.",
            "VernacNotation",
            "c94dee66933e3be9009f07e5cf3b5d75803de392"
        ],
        [
            "Notation \"''GL_' n ( p )\" := (GLgroup_group n (Phant 'F_p)) : Group_scope.",
            "VernacNotation",
            "0d14fed836353774f6228f2358ebc3c81aaf2890"
        ],
        [
            "Section MatrixDomain.",
            "VernacBeginSection",
            "368812b52298eaf5c0907e83f7cb20cfa256657b"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Lemma scalemx_eq0 m n a (A : 'M[R]_(m, n)) : (a *: A == 0) = (a == 0) || (A == 0).",
            "VernacStartTheoremProof",
            "8c5ad08f34310c1ed6720e78e76238a779542cf6"
        ],
        [
            "case nz_a: (a == 0) / eqP => [-> | _]; first by rewrite scale0r eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP/eqP=> [aA0 | ->]; last exact: scaler0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/matrixP=> i j; apply/eqP; move/matrixP/(_ i j)/eqP: aA0.",
            "VernacExtend",
            "6cee8938e4c92292ae66c56557669b6bd87a33e5"
        ],
        [
            "by rewrite !mxE mulf_eq0 nz_a.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalemx_inj m n a : a != 0 -> injective ( *:%R a : 'M[R]_(m, n) -> 'M[R]_(m, n)).",
            "VernacStartTheoremProof",
            "5d3885af9ef677789f84a71ef05ceb5a068bc2a3"
        ],
        [
            "move=> nz_a A B eq_aAB; apply: contraNeq nz_a.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite -[A == B]subr_eq0 -[a == 0]orbF => /negPf<-.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -scalemx_eq0 linearB subr_eq0 /= eq_aAB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma det0P n (A : 'M[R]_n) : reflect (exists2 v : 'rV[R]_n, v != 0 & v *m A = 0) (\\det A == 0).",
            "VernacStartTheoremProof",
            "202fc75532eb8fb66ac8a7bc6c42193ef0059c64"
        ],
        [
            "apply: (iffP eqP) => [detA0 | [v n0v vA0]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: contraNeq n0v => nz_detA; rewrite -(inj_eq (scalemx_inj nz_detA)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite scaler0 -mul_mx_scalar -mul_mx_adj mulmxA vA0 mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: n => [|n IHn] in A detA0 *.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by case/idP: (oner_eq0 R); rewrite -detA0 [A]thinmx0 -(thinmx0 1%:M) det1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [{detA0}A'0 | nzA'] := eqVneq (row 0 (\\adj A)) 0; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists (row 0 (\\adj A)) => //; rewrite rowE -mulmxA mul_adj_mx detA0.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite mul_mx_scalar scale0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose A' := col' 0 A; pose vA := col 0 A.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have defA: A = row_mx vA A'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: splitP => j' def_j; rewrite mxE; congr (A i _); apply: val_inj => //=.",
            "VernacExtend",
            "0b65d369b338d07f8ee6db11e51edf0520f759c2"
        ],
        [
            "by rewrite def_j [j']ord1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{IHn} w_ j : exists w : 'rV_n.+1, [/\\ w != 0, w 0 j = 0 & w *m A' = 0].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [|wj nzwj wjA'0] := IHn (row' j A').",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqP; move/rowP/(_ j)/eqP: A'0; rewrite !mxE mulf_eq0 signr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (\\row_k oapp (wj 0) 0 (unlift j k)).",
            "VernacExtend",
            "f8611d8105c560d1a5c0bf66e10280c55fd7ec66"
        ],
        [
            "rewrite !mxE unlift_none -wjA'0; split=> //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "apply: contraNneq nzwj => w0; apply/eqP/rowP=> k'.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by move/rowP/(_ (lift j k')): w0; rewrite !mxE liftK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/rowP=> k; rewrite !mxE (bigD1 j) //= mxE unlift_none mul0r add0r.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (reindex_onto (lift j) (odflt k \\o unlift j)) /= => [|k'].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply: eq_big => k'; rewrite ?mxE liftK eq_sym neq_lift eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite eq_sym; case/unlift_some=> ? ? ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [w0 [nz_w0 w00_0 w0A']] := w_ 0; pose a0 := (w0 *m vA) 0 0.",
            "VernacExtend",
            "fa6ff0c3d4595d45015144bd8c25fb5ac62ed42b"
        ],
        [
            "have [j {nz_w0}/= nz_w0j | w00] := pickP [pred j | w0 0 j != 0]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/eqP: nz_w0; apply/rowP=> j; rewrite mxE; move/eqP: (w00 j).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{w_} [wj [nz_wj wj0_0 wjA']] := w_ j; pose aj := (wj *m vA) 0 0.",
            "VernacExtend",
            "fa6ff0c3d4595d45015144bd8c25fb5ac62ed42b"
        ],
        [
            "have [aj0 | nz_aj] := eqVneq aj 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists wj => //; rewrite defA (@mul_mx_row _ _ _ 1) [_ *m _]mx11_scalar -/aj.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite aj0 raddf0 wjA' row_mx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (aj *: w0 - a0 *: wj).",
            "VernacExtend",
            "424da647efefe2bbc14d05b91d520bb468a3e900"
        ],
        [
            "apply: contraNneq nz_aj; move/rowP/(_ j)/eqP; rewrite !mxE wj0_0 mulr0 subr0.",
            "VernacExtend",
            "892743169f9b7a8d1078a131ab1583767aafbf69"
        ],
        [
            "by rewrite mulf_eq0 (negPf nz_w0j) orbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite defA (@mul_mx_row _ _ _ 1) !mulmxBl -!scalemxAl w0A' wjA' !linear0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -mul_mx_scalar -mul_scalar_mx -!mx11_scalar subrr addr0 row_mx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MatrixDomain.",
            "VernacEndSegment",
            "9ae50a681e5e5dbdbff00e18c37282274906e11f"
        ],
        [
            "Arguments det0P {R n A}.",
            "VernacArguments",
            "d10c954f016f7721b94a2890462da58fe5c972e3"
        ],
        [
            "Section MapFieldMatrix.",
            "VernacBeginSection",
            "713e535930430fb041c209e615b5358ce6d7937d"
        ],
        [
            "Variables (aF : fieldType) (rF : comUnitRingType) (f : {rmorphism aF -> rF}).",
            "VernacAssumption",
            "26bf75675d247d5e488f59a0dbb133375b7c68b4"
        ],
        [
            "Local Notation \"A ^f\" := (map_mx f A) : ring_scope.",
            "VernacNotation",
            "d033ebfb6b3ca0334a58d61928e620230e19b20e"
        ],
        [
            "Lemma map_mx_inj {m n} : injective (map_mx f : 'M_(m, n) -> 'M_(m, n)).",
            "VernacStartTheoremProof",
            "6b2d9cba93e4dbd6c6678b5fd591f02e7f6a6402"
        ],
        [
            "move=> A B eq_AB; apply/matrixP=> i j.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by move/matrixP/(_ i j): eq_AB; rewrite !mxE; apply: fmorph_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx_is_scalar n (A : 'M_n) : is_scalar_mx A^f = is_scalar_mx A.",
            "VernacStartTheoremProof",
            "f2c68874c8d6ebe7474734f3aeadcac87805e20b"
        ],
        [
            "rewrite /is_scalar_mx; case: (insub _) => // i.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite mxE -map_scalar_mx inj_eq //; apply: map_mx_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_unitmx n (A : 'M_n) : (A^f \\in unitmx) = (A \\in unitmx).",
            "VernacStartTheoremProof",
            "27a5fb1f5e1799fa596e33f03c3c7e680769d03f"
        ],
        [
            "by rewrite unitmxE det_map_mx // fmorph_unit // -unitfE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx_unit n' (A : 'M_n'.+1) : (A^f \\is a GRing.unit) = (A \\is a GRing.unit).",
            "VernacStartTheoremProof",
            "085b02998219d8b15340a25c09cad8d71e123d7f"
        ],
        [
            "exact: map_unitmx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_invmx n (A : 'M_n) : (invmx A)^f = invmx A^f.",
            "VernacStartTheoremProof",
            "7db6023a73b5f06e2d40b3683b86bf84155e393a"
        ],
        [
            "rewrite /invmx map_unitmx (fun_if (map_mx f)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite map_mxZ map_mx_adj det_map_mx fmorphV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx_inv n' (A : 'M_n'.+1) : A^-1^f = A^f^-1.",
            "VernacStartTheoremProof",
            "d2ea98c815b883a0e61d59f8bfda676031d0cf00"
        ],
        [
            "exact: map_invmx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx_eq0 m n (A : 'M_(m, n)) : (A^f == 0) = (A == 0).",
            "VernacStartTheoremProof",
            "b17da5a3d1a68e8b3f9a244137445c36c369fe97"
        ],
        [
            "by rewrite -(inj_eq map_mx_inj) raddf0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MapFieldMatrix.",
            "VernacEndSegment",
            "08cf630898904b4500e7ed5734e0e5858c49e93b"
        ],
        [
            "Arguments map_mx_inj {aF rF f m n} [A1 A2] eqA12f : rename.",
            "VernacArguments",
            "292e35d687f4d13ad56a4a3f6463351962f18146"
        ],
        [
            "Section CormenLUP.",
            "VernacBeginSection",
            "a1f4e392ec6c13eff1fa376b772ec78882ba7bf3"
        ],
        [
            "Variable F : fieldType.",
            "VernacAssumption",
            "dfbeb3104cff90ac5c843c17124389867a4c6a4a"
        ],
        [
            "Fixpoint cormen_lup {n} := match n return let M := 'M[F]_n.+1 in M -> M * M * M with | 0 => fun A => (1, 1, A) | _.+1 => fun A => let k := odflt 0 [pick k | A k 0 != 0] in let A1 : 'M_(1 + _) := xrow 0 k A in let P1 : 'M_(1 + _) := tperm_mx 0 k in let Schur := ((A k 0)^-1 *: dlsubmx A1) *m ursubmx A1 in let: (P2, L2, U2) := cormen_lup (drsubmx A1 - Schur) in let P := block_mx 1 0 0 P2 *m P1 in let L := block_mx 1 0 ((A k 0)^-1 *: (P2 *m dlsubmx A1)) L2 in let U := block_mx (ulsubmx A1) (ursubmx A1) 0 U2 in (P, L, U) end.",
            "VernacFixpoint",
            "b96fc8da0f68a516d9f18a1249cb08ed5b6a07a7"
        ],
        [
            "Lemma cormen_lup_perm n (A : 'M_n.+1) : is_perm_mx (cormen_lup A).1.1.",
            "VernacStartTheoremProof",
            "c93e31fadaad7e265dacd06c90d0f358e82323dc"
        ],
        [
            "elim: n => [|n IHn] /= in A *; first exact: is_perm_mx1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set A' := _ - _; move/(_ A'): IHn; case: cormen_lup => [[P L U]] {A'}/=.",
            "VernacExtend",
            "ca48da5a7c0de45e9ec83494b3976b0ddeb0197b"
        ],
        [
            "rewrite (is_perm_mxMr _ (perm_mx_is_perm _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/is_perm_mxP => s ->; apply: lift0_mx_is_perm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cormen_lup_correct n (A : 'M_n.+1) : let: (P, L, U) := cormen_lup A in P * A = L * U.",
            "VernacStartTheoremProof",
            "d95132a1c0fce217556faf04c13a39545a5670b1"
        ],
        [
            "elim: n => [|n IHn] /= in A *; first by rewrite !mul1r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set k := odflt _ _; set A1 : 'M_(1 + _) := xrow _ _ _.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "set A' := _ - _; move/(_ A'): IHn; case: cormen_lup => [[P' L' U']] /= IHn.",
            "VernacExtend",
            "ca48da5a7c0de45e9ec83494b3976b0ddeb0197b"
        ],
        [
            "rewrite -mulrA -!mulmxE -xrowE -/A1 /= -[n.+2]/(1 + n.+1)%N -{1}(submxK A1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !mulmx_block !mul0mx !mulmx0 !add0r !addr0 !mul1mx -{L' U'}[L' *m _]IHn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -scalemxAl !scalemxAr -!mulmxA addrC -mulrDr {A'}subrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (block_mx _ _ (_ *m _) _).",
            "VernacExtend",
            "f3a9615ebe5fa15549c1ecd556f50efbdb2824d9"
        ],
        [
            "rewrite [_ *: _]mx11_scalar !mxE lshift0 tpermL {}/A1 {}/k.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: pickP => /= [k nzAk0 | no_k]; first by rewrite mulVf ?mulmx1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (_ : dlsubmx _ = 0) ?mul0mx //; apply/colP=> i.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !mxE lshift0 (elimNf eqP (no_k _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cormen_lup_detL n (A : 'M_n.+1) : \\det (cormen_lup A).1.2 = 1.",
            "VernacStartTheoremProof",
            "b3c8ee886712f39078323792f30b6d401dde5d9d"
        ],
        [
            "elim: n => [|n IHn] /= in A *; first by rewrite det1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set A' := _ - _; move/(_ A'): IHn; case: cormen_lup => [[P L U]] {A'}/= detL.",
            "VernacExtend",
            "ca48da5a7c0de45e9ec83494b3976b0ddeb0197b"
        ],
        [
            "by rewrite (@det_lblock _ 1) det1 mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cormen_lup_lower n A (i j : 'I_n.+1) : i <= j -> (cormen_lup A).1.2 i j = (i == j)%:R.",
            "VernacStartTheoremProof",
            "5ff3a872413c76b733e7b4b243a4a226f3d603ad"
        ],
        [
            "elim: n => [|n IHn] /= in A i j *; first by rewrite [i]ord1 [j]ord1 mxE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set A' := _ - _; move/(_ A'): IHn; case: cormen_lup => [[P L U]] {A'}/= Ll.",
            "VernacExtend",
            "ca48da5a7c0de45e9ec83494b3976b0ddeb0197b"
        ],
        [
            "rewrite !mxE split1; case: unliftP => [i'|] -> /=; rewrite !mxE split1.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by case: unliftP => [j'|] -> //; apply: Ll.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: unliftP => [j'|] ->; rewrite /= mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cormen_lup_upper n A (i j : 'I_n.+1) : j < i -> (cormen_lup A).2 i j = 0 :> F.",
            "VernacStartTheoremProof",
            "908e7fbe9117886b86c45010d11761d710ddd902"
        ],
        [
            "elim: n => [|n IHn] /= in A i j *; first by rewrite [i]ord1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set A' := _ - _; move/(_ A'): IHn; case: cormen_lup => [[P L U]] {A'}/= Uu.",
            "VernacExtend",
            "ca48da5a7c0de45e9ec83494b3976b0ddeb0197b"
        ],
        [
            "rewrite !mxE split1; case: unliftP => [i'|] -> //=; rewrite !mxE split1.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by case: unliftP => [j'|] ->; [apply: Uu | rewrite /= mxE].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CormenLUP.",
            "VernacEndSegment",
            "c8d0f3570612bcca575a7c4ac7a673f9dd70a796"
        ]
    ],
    "proofs": [
        {
            "name": "matrix_key",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxE",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "by move=> i j; rewrite unlock /fun_of_matrix /= ffunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "matrixP",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "rewrite /fun_of_matrix; split=> [/= eqAB | -> //].",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by apply/val_inj/ffunP=> [[i j]]; apply: eqAB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_matrix",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "by rewrite card_sub card_ffun card_prod !card_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const_mx_key",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_key",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_perm_key",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_perm_key",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "castmx_const",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "by case: eq_mn; case: m' /; case: n' /.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_const",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_perm_const",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_perm_const",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xrow_const",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "exact: row_perm_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcol_const",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "exact: col_perm_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rowP",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "by split=> [eq_uv | -> //]; apply/matrixP=> i; rewrite ord1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rowK",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "by apply/rowP=> i'; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_matrixP",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "split=> [eqAB | -> //]; apply/matrixP=> i j.",
                        "VernacExtend",
                        "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
                    ]
                },
                {
                    "command": [
                        "by move/rowP/(_ j): (eqAB i); rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "colP",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "by split=> [eq_uv | -> //]; apply/matrixP=> i j; rewrite ord1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_const",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "by apply/rowP=> j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_const",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "by apply/colP=> i; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row'_const",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col'_const",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_perm1",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite mxE perm1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_perm1",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite mxE perm1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_permM",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE permM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_permM",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE permM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_row_permC",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "castmx_id",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "by case: erefl_mn => e_m e_n; rewrite [e_m]eq_axiomK [e_n]eq_axiomK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "castmx_comp",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "by case: m2 / eq_m1 eq_m2; case: m3 /; case: n2 / eq_n1 eq_n2; case: n3 /.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "castmxK",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "by case: m2 / eq_m; case: n2 / eq_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "castmxKV",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "by case: m2 / eq_m; case: n2 / eq_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "castmx_sym",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "by move/(canLR (castmxK _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "castmxE",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "by do [case: eq_mn; case: m2 /; case: n2 /] in A i j *; rewrite !cast_ord_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conform_mx_id",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "by rewrite /conform_mx; do 2!case: eqP => // *; rewrite castmx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonconform_mx",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "by rewrite /conform_mx; do 2!case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conform_castmx",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "by do [case: e_mn; case: m3 /; case: n3 /] in A *.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmxK",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "by move=> A; apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_inj",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "exact: can_inj (@trmxK m n).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_cast",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "by case: eq_mn => eq_m eq_n; apply/matrixP=> i j; rewrite !(mxE, castmxE).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_row_perm",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_col_perm",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_xrow",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "exact: tr_row_perm.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_xcol",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "exact: tr_col_perm.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_id",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "by apply/rowP=> j; rewrite mxE [i]ord1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_id",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "by apply/colP=> i; rewrite mxE [j]ord1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_eq",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "by move/rowP=> eqA12 j; have:= eqA12 j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_eq",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "by move/colP=> eqA12 i; have:= eqA12 i; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row'_eq",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "move/matrixP=> eqAB' i; rewrite !inE eq_sym; case/unlift_some=> i' -> _ j.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "by have:= eqAB' i' j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col'_eq",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "move/matrixP=> eqAB' i j; rewrite !inE eq_sym; case/unlift_some=> j' -> _.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "by have:= eqAB' i j'; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_row",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_row'",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_col",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_col'",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_mx_key",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_mx_key",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lsubmx_key",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsubmx_key",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "usubmx_key",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dsubmx_key",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_mxEl",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "by rewrite mxE (unsplitK (inl _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_mxKl",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite mxE row_mxEl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_mxEr",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "by rewrite mxE (unsplitK (inr _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_mxKr",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite mxE row_mxEr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hsubmxK",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: splitP => k Dk //=; rewrite !mxE //=; congr (A _ _); apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_mxEu",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "by rewrite mxE (unsplitK (inl _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_mxKu",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite mxE col_mxEu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_mxEd",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "by rewrite mxE (unsplitK (inr _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_mxKd",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite mxE col_mxEd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_row_mx",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "move=> eqAB; move: (congr1 lsubmx eqAB) (congr1 rsubmx eqAB).",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(row_mxKl, row_mxKr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_col_mx",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "move=> eqAB; move: (congr1 usubmx eqAB) (congr1 dsubmx eqAB).",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(col_mxKu, col_mxKd).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_mx_const",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_mx_const",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_lsub",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_rsub",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_row_mx",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_col_mx",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_usub",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_dsub",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vsubmxK",
            "line_nb": 351,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite tr_col_mx trmx_usub trmx_dsub hsubmxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cast_row_mx",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "by case: m' / eq_m.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cast_col_mx",
            "line_nb": 357,
            "steps": [
                {
                    "command": [
                        "by case: n' / eq_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_mxA",
            "line_nb": 360,
            "steps": [
                {
                    "command": [
                        "apply: (canRL (castmxKV _ _)); apply/matrixP=> i j.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "rewrite castmxE !mxE cast_ord_id; case: splitP => j1 /= def_j.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "have: (j < n1 + n2) && (j < n1) by rewrite def_j lshift_subproof /=.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move: def_j; do 2![case: splitP => // ? ->; rewrite ?mxE] => /ord_inj->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: splitP def_j => j2 ->{j} def_j; rewrite !mxE.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "have: ~~ (j2 < n1) by rewrite -leqNgt def_j leq_addr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have: j1 < n2 by rewrite -(ltn_add2l n1) -def_j.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move: def_j; do 2![case: splitP => // ? ->] => /addnI/val_inj->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: ~~ (j1 < n2) by rewrite -leqNgt -(leq_add2l n1) -def_j leq_addr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case: splitP def_j => // ? ->; rewrite addnA => /addnI/val_inj->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_mxA",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite trmx_cast !tr_col_mx -row_mxA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_row_mx",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE; case: (split j) => j'; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_col_mx",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite !(tr_col, tr_col_mx, row_row_mx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row'_row_mx",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE; case: (split j) => j'; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col'_col_mx",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite !(tr_col', tr_col_mx, row'_row_mx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "colKl",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !(row_mxEl, mxE).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "colKr",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !(row_mxEr, mxE).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rowKu",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !(col_mxEu, mxE).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rowKd",
            "line_nb": 398,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !(col_mxEd, mxE).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row'Ku",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite tr_col_mx !(@tr_row' _.+1) (@tr_col_mx _.+1) col'Kl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx'_cast",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "by case=> j /ltn_predK <-; rewrite addnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row'Kd",
            "line_nb": 423,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite trmx_cast !(tr_row', tr_col_mx) col'Kr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_block_mx",
            "line_nb": 429,
            "steps": [
                {
                    "command": [
                        "by case/eq_col_mx; do 2!case/eq_row_mx=> -> ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mx_const",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "submxK",
            "line_nb": 441,
            "steps": [
                {
                    "command": [
                        "by rewrite /block_mx !hsubmxK vsubmxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxEul",
            "line_nb": 449,
            "steps": [
                {
                    "command": [
                        "by rewrite col_mxEu row_mxEl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxKul",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "by rewrite /ulsubmx col_mxKu row_mxKl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxEur",
            "line_nb": 455,
            "steps": [
                {
                    "command": [
                        "by rewrite col_mxEu row_mxEr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxKur",
            "line_nb": 458,
            "steps": [
                {
                    "command": [
                        "by rewrite /ursubmx col_mxKu row_mxKr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxEdl",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "by rewrite col_mxEd row_mxEl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxKdl",
            "line_nb": 464,
            "steps": [
                {
                    "command": [
                        "by rewrite /dlsubmx col_mxKd row_mxKl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxEdr",
            "line_nb": 467,
            "steps": [
                {
                    "command": [
                        "by rewrite col_mxEd row_mxEr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxKdr",
            "line_nb": 470,
            "steps": [
                {
                    "command": [
                        "by rewrite /drsubmx col_mxKd row_mxKr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxEv",
            "line_nb": 473,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_ulsub",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_ursub",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_dlsub",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_drsub",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_block_mx",
            "line_nb": 498,
            "steps": [
                {
                    "command": [
                        "rewrite -[_^T]submxK -trmx_ulsub -trmx_ursub -trmx_dlsub -trmx_drsub.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite block_mxKul block_mxKur block_mxKdl block_mxKdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxEh",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite tr_block_mx tr_row_mx 2!tr_col_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mxA",
            "line_nb": 506,
            "steps": [
                {
                    "command": [
                        "rewrite /= block_mxEh !col_mxA -cast_row_mx -block_mxEv -block_mxEh.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite block_mxEv block_mxEh !row_mxA -cast_col_mx -block_mxEh -block_mxEv.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite castmx_comp etrans_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvec_cast",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "by rewrite card_prod !card_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvec_indexP",
            "line_nb": 519,
            "steps": [
                {
                    "command": [
                        "rewrite -[k](cast_ordK (esym mxvec_cast)) esymK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[_ k]enum_valK; case: (enum_val _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vec_mx_key",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvecE",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "by rewrite castmxE mxE cast_ordK enum_rankK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvecK",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "by move=> A; apply/matrixP=> i j; rewrite mxE mxvecE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vec_mxK",
            "line_nb": 535,
            "steps": [
                {
                    "command": [
                        "by move=> u; apply/rowP=> k; case/mxvec_indexP: k => i j; rewrite mxvecE mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "curry_mxvec_bij",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "exists (enum_val \\o cast_ord (esym mxvec_cast)) => [[i j] _ | k _] /=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite cast_ordK enum_rankK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/mxvec_indexP: k => i j /=; rewrite cast_ordK enum_rankK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_key",
            "line_nb": 556,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_trmx",
            "line_nb": 563,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_const_mx",
            "line_nb": 566,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_row",
            "line_nb": 569,
            "steps": [
                {
                    "command": [
                        "by apply/rowP=> j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_col",
            "line_nb": 572,
            "steps": [
                {
                    "command": [
                        "by apply/colP=> i; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_row'",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_col'",
            "line_nb": 578,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_row_perm",
            "line_nb": 581,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_col_perm",
            "line_nb": 584,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_xrow",
            "line_nb": 587,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_xcol",
            "line_nb": 590,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_castmx",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !(castmxE, mxE).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_conform_mx",
            "line_nb": 596,
            "steps": [
                {
                    "command": [
                        "move: B; have [[<- <-] B|] := eqVneq (m, n) (m', n').",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite !conform_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite negb_and => neq_mn B; rewrite !nonconform_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mxvec",
            "line_nb": 601,
            "steps": [
                {
                    "command": [
                        "by apply/rowP=> i; rewrite !(castmxE, mxE).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_vec_mx",
            "line_nb": 604,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_row_mx",
            "line_nb": 614,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; do 2![rewrite !mxE //; case: split => ?].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_col_mx",
            "line_nb": 617,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; do 2![rewrite !mxE //; case: split => ?].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_block_mx",
            "line_nb": 620,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; do 3![rewrite !mxE //; case: split => ?].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_lsubmx",
            "line_nb": 623,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_rsubmx",
            "line_nb": 626,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_usubmx",
            "line_nb": 629,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_dsubmx",
            "line_nb": 632,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_ulsubmx",
            "line_nb": 635,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_ursubmx",
            "line_nb": 638,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_dlsubmx",
            "line_nb": 641,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_drsubmx",
            "line_nb": 644,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppmx_key",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addmx_key",
            "line_nb": 658,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addmxA",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "by move=> A B C; apply/matrixP=> i j; rewrite !mxE addrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addmxC",
            "line_nb": 666,
            "steps": [
                {
                    "command": [
                        "by move=> A B; apply/matrixP=> i j; rewrite !mxE addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add0mx",
            "line_nb": 669,
            "steps": [
                {
                    "command": [
                        "by move=> A; apply/matrixP=> i j; rewrite !mxE add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addNmx",
            "line_nb": 672,
            "steps": [
                {
                    "command": [
                        "by move=> A; apply/matrixP=> i j; rewrite !mxE addNr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxnE",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "by elim: d => [|d IHd]; rewrite ?mulrS mxE ?IHd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "summxE",
            "line_nb": 680,
            "steps": [
                {
                    "command": [
                        "by apply: (big_morph (fun A => A i j)) => [A B|]; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const_mx_is_additive",
            "line_nb": 683,
            "steps": [
                {
                    "command": [
                        "by move=> a b; apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swizzle_mx_is_additive",
            "line_nb": 691,
            "steps": [
                {
                    "command": [
                        "by move=> A B; apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flatmx0",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "by move=> A; apply/matrixP=> [] [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thinmx0",
            "line_nb": 715,
            "steps": [
                {
                    "command": [
                        "by move=> A; apply/matrixP=> i [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx0",
            "line_nb": 718,
            "steps": [
                {
                    "command": [
                        "exact: trmx_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row0",
            "line_nb": 721,
            "steps": [
                {
                    "command": [
                        "exact: row_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col0",
            "line_nb": 724,
            "steps": [
                {
                    "command": [
                        "exact: col_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvec_eq0",
            "line_nb": 727,
            "steps": [
                {
                    "command": [
                        "by rewrite (can2_eq mxvecK vec_mxK) raddf0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vec_mx_eq0",
            "line_nb": 730,
            "steps": [
                {
                    "command": [
                        "by rewrite (can2_eq vec_mxK mxvecK) raddf0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_mx0",
            "line_nb": 733,
            "steps": [
                {
                    "command": [
                        "exact: row_mx_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_mx0",
            "line_nb": 736,
            "steps": [
                {
                    "command": [
                        "exact: col_mx_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mx0",
            "line_nb": 739,
            "steps": [
                {
                    "command": [
                        "exact: block_mx_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_row_mx",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_col_mx",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_block_mx",
            "line_nb": 749,
            "steps": [
                {
                    "command": [
                        "by rewrite opp_col_mx !opp_row_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_row_mx",
            "line_nb": 752,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_col_mx",
            "line_nb": 755,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_block_mx",
            "line_nb": 758,
            "steps": [
                {
                    "command": [
                        "by rewrite /= add_col_mx !add_row_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_mx_eq0",
            "line_nb": 765,
            "steps": [
                {
                    "command": [
                        "by rewrite -![_ == 0](inj_eq trmx_inj) !trmx0 tr_col_mx row_mx_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "block_mx_eq0",
            "line_nb": 768,
            "steps": [
                {
                    "command": [
                        "by rewrite col_mx_eq0 !row_mx_eq0 !andbA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nz_row_eq0",
            "line_nb": 772,
            "steps": [
                {
                    "command": [
                        "rewrite /nz_row; symmetry; case: pickP => [i /= nzAi | Ai0].",
                        "VernacExtend",
                        "4cd924e4572aeb158a97e68d9463cedffdcfc8f4"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negbTE nzAi); apply: contraTF nzAi => /eqP->; rewrite row0 eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqxx; apply/eqP/row_matrixP=> i; move/eqP: (Ai0 i) ->; rewrite row0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx0",
            "line_nb": 789,
            "steps": [
                {
                    "command": [
                        "by rewrite map_const_mx raddf0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mxN",
            "line_nb": 792,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE raddfN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mxD",
            "line_nb": 795,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE raddfD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_sub",
            "line_nb": 798,
            "steps": [
                {
                    "command": [
                        "by rewrite map_mxD map_mxN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemx_key",
            "line_nb": 809,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "delta_mx_key",
            "line_nb": 813,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale1mx",
            "line_nb": 818,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemxDl",
            "line_nb": 821,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE mulrDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemxDr",
            "line_nb": 824,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE mulrDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemxA",
            "line_nb": 827,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemx_const",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "matrix_sum_delta",
            "line_nb": 835,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite summxE (bigD1 i) // summxE (bigD1 j) //= !mxE !eqxx mulr1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite !big1 ?addr0 //= => [i' | j']; rewrite eq_sym => /negbTE diff.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "by rewrite summxE big1 // => j' _; rewrite !mxE diff mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE eqxx diff mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swizzle_mx_is_scalable",
            "line_nb": 844,
            "steps": [
                {
                    "command": [
                        "by move=> a A; apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_delta",
            "line_nb": 866,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i' j'; rewrite !mxE andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_sum_delta",
            "line_nb": 869,
            "steps": [
                {
                    "command": [
                        "by rewrite {1}[u]matrix_sum_delta big_ord1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "delta_mx_lshift",
            "line_nb": 872,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i' j'; rewrite !mxE -(can_eq splitK) (unsplitK (inl _ _)).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: split => ?; rewrite mxE ?andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "delta_mx_rshift",
            "line_nb": 876,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i' j'; rewrite !mxE -(can_eq splitK) (unsplitK (inr _ _)).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: split => ?; rewrite mxE ?andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "delta_mx_ushift",
            "line_nb": 880,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i' j'; rewrite !mxE -(can_eq splitK) (unsplitK (inl _ _)).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: split => ?; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "delta_mx_dshift",
            "line_nb": 884,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i' j'; rewrite !mxE -(can_eq splitK) (unsplitK (inr _ _)).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: split => ?; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vec_mx_delta",
            "line_nb": 888,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i' j'; rewrite !mxE /= [_ == _](inj_eq enum_rank_inj).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvec_delta",
            "line_nb": 891,
            "steps": [
                {
                    "command": [
                        "by rewrite -vec_mx_delta vec_mxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_row_mx",
            "line_nb": 895,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_col_mx",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "by split_mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_block_mx",
            "line_nb": 901,
            "steps": [
                {
                    "command": [
                        "by rewrite scale_col_mx !scale_row_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diag_mx_key",
            "line_nb": 904,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_diag_mx",
            "line_nb": 908,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE eq_sym; case: eqP => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diag_mx_is_linear",
            "line_nb": 911,
            "steps": [
                {
                    "command": [
                        "by move=> a A B; apply/matrixP=> i j; rewrite !mxE mulrnAr mulrnDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diag_mx_sum_delta",
            "line_nb": 916,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite summxE (bigD1 i) //= !mxE eqxx /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_sym mulr_natr big1 ?addr0 // => i' ne_i'i.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE eq_sym (negbTE ne_i'i) mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mx_key",
            "line_nb": 923,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diag_const_mx",
            "line_nb": 928,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_scalar_mx",
            "line_nb": 931,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx1",
            "line_nb": 934,
            "steps": [
                {
                    "command": [
                        "exact: tr_scalar_mx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mx_is_additive",
            "line_nb": 937,
            "steps": [
                {
                    "command": [
                        "by move=> a b; rewrite -!diag_const_mx !raddfB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_scalar_mx",
            "line_nb": 941,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE mulrnAr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemx1",
            "line_nb": 944,
            "steps": [
                {
                    "command": [
                        "by rewrite scale_scalar_mx mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mx_sum_delta",
            "line_nb": 947,
            "steps": [
                {
                    "command": [
                        "by rewrite -diag_const_mx diag_mx_sum_delta; apply: eq_bigr => i _; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx1_sum_delta",
            "line_nb": 950,
            "steps": [
                {
                    "command": [
                        "by rewrite [1%:M]scalar_mx_sum_delta -scaler_sumr scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row1",
            "line_nb": 953,
            "steps": [
                {
                    "command": [
                        "by apply/rowP=> j; rewrite !mxE eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_scalar_mxP",
            "line_nb": 957,
            "steps": [
                {
                    "command": [
                        "rewrite /is_scalar_mx; case: insubP => [i _ _ | ].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by apply: (iffP eqP) => [|[a ->]]; [exists (A i i) | rewrite mxE eqxx].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -eqn0Ngt => /eqP n0; left; exists 0.",
                        "VernacExtend",
                        "febe45c73eba84f3fa72cc0ae52d1c24350687a6"
                    ]
                },
                {
                    "command": [
                        "by rewrite raddf0; rewrite n0 in A *; rewrite [A]flatmx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mx_is_scalar",
            "line_nb": 963,
            "steps": [
                {
                    "command": [
                        "by apply/is_scalar_mxP; exists a.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx0_is_scalar",
            "line_nb": 966,
            "steps": [
                {
                    "command": [
                        "by apply/is_scalar_mxP; exists 0; rewrite raddf0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx11_scalar",
            "line_nb": 971,
            "steps": [
                {
                    "command": [
                        "by apply/rowP=> j; rewrite ord1 mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mx_block",
            "line_nb": 974,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE -val_eqE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by do 2![case: splitP => ? ->; rewrite !mxE]; rewrite ?eqn_add2l // -?(eq_sym (n1 + _)%N) eqn_leq leqNgt lshift_subproof.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx_key",
            "line_nb": 978,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxA",
            "line_nb": 983,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i l; rewrite !mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "transitivity (\\sum_j (\\sum_k (A i j * (B j k * C k l)))).",
                        "VernacExtend",
                        "b3d7a70974e53b172f606004c86b6418482d286e"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite mxE big_distrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite exchange_big; apply: eq_bigr => j _; rewrite mxE big_distrl /=.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => k _; rewrite mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul0mx",
            "line_nb": 990,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i k; rewrite !mxE big1 //= => j _; rewrite mxE mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx0",
            "line_nb": 993,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i k; rewrite !mxE big1 // => j _; rewrite mxE mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxN",
            "line_nb": 996,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE -sumrN.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite mxE mulrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulNmx",
            "line_nb": 1000,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE -sumrN.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite mxE mulNr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxDl",
            "line_nb": 1004,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE -big_split /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite !mxE -mulrDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxDr",
            "line_nb": 1008,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE -big_split /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite mxE mulrDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxBl",
            "line_nb": 1012,
            "steps": [
                {
                    "command": [
                        "by rewrite mulmxDl mulNmx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxBr",
            "line_nb": 1015,
            "steps": [
                {
                    "command": [
                        "by rewrite mulmxDr mulmxN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx_suml",
            "line_nb": 1018,
            "steps": [
                {
                    "command": [
                        "by apply: (big_morph (mulmx^~ A)) => [B C|]; rewrite ?mul0mx ?mulmxDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx_sumr",
            "line_nb": 1021,
            "steps": [
                {
                    "command": [
                        "by apply: (big_morph (mulmx A)) => [B C|]; rewrite ?mulmx0 ?mulmxDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemxAl",
            "line_nb": 1024,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE big_distrr /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite mulrA mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rowE",
            "line_nb": 1028,
            "steps": [
                {
                    "command": [
                        "apply/rowP=> j; rewrite !mxE (bigD1 i) //= mxE !eqxx mul1r.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite big1 ?addr0 // => i' ne_i'i; rewrite mxE /= (negbTE ne_i'i) mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_mul",
            "line_nb": 1032,
            "steps": [
                {
                    "command": [
                        "by rewrite !rowE mulmxA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx_sum_row",
            "line_nb": 1035,
            "steps": [
                {
                    "command": [
                        "by apply/rowP=> j; rewrite mxE summxE; apply: eq_bigr => i _; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_delta_mx_cond",
            "line_nb": 1038,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE (bigD1 j1) //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmxnE !mxE !eqxx andbT -natrM -mulrnA !mulnb !andbA andbAC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite big1 ?addr0 // => j; rewrite !mxE andbC -natrM; move/negbTE->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_delta_mx",
            "line_nb": 1043,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_delta_mx_cond eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_delta_mx_0",
            "line_nb": 1046,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_delta_mx_cond => /negbTE->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_diag_mx",
            "line_nb": 1049,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE (bigD1 i) //= mxE eqxx big1 ?addr0 // => i'.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxE eq_sym mulrnAl => /negbTE->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_mx_diag",
            "line_nb": 1053,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE (bigD1 j) //= mxE eqxx big1 ?addr0 // => i'.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxE eq_sym mulrnAr; move/negbTE->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx_diag",
            "line_nb": 1057,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite mul_diag_mx !mxE mulrnAr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_scalar_mx",
            "line_nb": 1060,
            "steps": [
                {
                    "command": [
                        "by rewrite -diag_const_mx mul_diag_mx; apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mxM",
            "line_nb": 1063,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_scalar_mx scale_scalar_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul1mx",
            "line_nb": 1066,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_scalar_mx scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx1",
            "line_nb": 1069,
            "steps": [
                {
                    "command": [
                        "rewrite -diag_const_mx mul_mx_diag.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_col_perm",
            "line_nb": 1073,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE (reindex_perm s^-1).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _ /=; rewrite !mxE permKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_row_perm",
            "line_nb": 1077,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_col_perm invgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_xcol",
            "line_nb": 1080,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_col_perm tpermV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_permE",
            "line_nb": 1085,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_row_perm mulmx1 invgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_permE",
            "line_nb": 1088,
            "steps": [
                {
                    "command": [
                        "by rewrite -[perm_mx _]mul1mx mul_row_perm mulmx1 -mul_row_perm mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcolE",
            "line_nb": 1091,
            "steps": [
                {
                    "command": [
                        "by rewrite /xcol col_permE tpermV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xrowE",
            "line_nb": 1094,
            "steps": [
                {
                    "command": [
                        "exact: row_permE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_perm_mx",
            "line_nb": 1097,
            "steps": [
                {
                    "command": [
                        "by rewrite -[_^T]mulmx1 tr_row_perm mul_col_perm trmx1 mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_tperm_mx",
            "line_nb": 1100,
            "steps": [
                {
                    "command": [
                        "by rewrite tr_perm_mx tpermV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_mx1",
            "line_nb": 1103,
            "steps": [
                {
                    "command": [
                        "exact: row_perm1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_mxM",
            "line_nb": 1106,
            "steps": [
                {
                    "command": [
                        "by rewrite -row_permE -row_permM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_perm_mxP",
            "line_nb": 1110,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP existsP) => [] [s /eqP]; exists s.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_mx_is_perm",
            "line_nb": 1113,
            "steps": [
                {
                    "command": [
                        "by apply/is_perm_mxP; exists s.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_perm_mx1",
            "line_nb": 1116,
            "steps": [
                {
                    "command": [
                        "by rewrite -perm_mx1 perm_mx_is_perm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_perm_mxMl",
            "line_nb": 1119,
            "steps": [
                {
                    "command": [
                        "case/is_perm_mxP=> s ->.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply/is_perm_mxP/is_perm_mxP=> [[t def_t] | [t ->]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists (s * t)%g; rewrite perm_mxM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (s^-1 * t)%g.",
                        "VernacExtend",
                        "17dc1a3e6d92496a9fdd675b5e75ad0e2815751d"
                    ]
                },
                {
                    "command": [
                        "by rewrite perm_mxM -def_t -!row_permE -row_permM mulVg row_perm1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_perm_mx_tr",
            "line_nb": 1126,
            "steps": [
                {
                    "command": [
                        "apply/is_perm_mxP/is_perm_mxP=> [[t def_t] | [t ->]]; exists t^-1%g.",
                        "VernacExtend",
                        "16b56d9868b2b035193b69d5eec5356328271893"
                    ]
                },
                {
                    "command": [
                        "by rewrite -tr_perm_mx -def_t trmxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite tr_perm_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_perm_mxMr",
            "line_nb": 1131,
            "steps": [
                {
                    "command": [
                        "case/is_perm_mxP=> s ->.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite -[s]invgK -col_permE -is_perm_mx_tr tr_col_perm row_permE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite is_perm_mxMl (perm_mx_is_perm, is_perm_mx_tr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pid_mx_key",
            "line_nb": 1136,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pid_mx_0",
            "line_nb": 1140,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pid_mx_1",
            "line_nb": 1143,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE ltn_ord andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pid_mx_row",
            "line_nb": 1146,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE ltn_ord andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case: splitP => j' ->; rewrite !mxE // .",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqn_leq andbC leqNgt lshift_subproof.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pid_mx_col",
            "line_nb": 1151,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE andbC.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: splitP => i' ->; rewrite !mxE // eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pid_mx_block",
            "line_nb": 1155,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE row_mx0 andbC.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case: splitP => i' ->; rewrite !mxE //; case: splitP => j' ->; rewrite !mxE //=.",
                        "VernacExtend",
                        "a4b1182da79b8f22c9939e76724d34d01ba8a401"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqn_leq andbC leqNgt lshift_subproof.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tr_pid_mx",
            "line_nb": 1160,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE eq_sym; case: eqP => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pid_mx_minv",
            "line_nb": 1163,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE leq_min ltn_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pid_mx_minh",
            "line_nb": 1166,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite !tr_pid_mx pid_mx_minv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_pid_mx",
            "line_nb": 1169,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE !leq_min.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have [le_n_i | lt_i_n] := leqP n i.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite andbF big1 // => j _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -pid_mx_minh !mxE leq_min ltnNge le_n_i andbF mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (bigD1 (Ordinal lt_i_n)) //= big1 ?addr0 => [|j].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE eqxx /= -natrM mulnb andbCA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -val_eqE /= !mxE eq_sym -natrM => /negbTE->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pid_mx_id",
            "line_nb": 1178,
            "steps": [
                {
                    "command": [
                        "by move=> le_r_n; rewrite mul_pid_mx minnn (minn_idPr _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_copid_mx_pid",
            "line_nb": 1182,
            "steps": [
                {
                    "command": [
                        "by move=> le_r_m; rewrite mulmxBl mul1mx pid_mx_id ?subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_pid_mx_copid",
            "line_nb": 1185,
            "steps": [
                {
                    "command": [
                        "by move=> le_r_n; rewrite mulmxBr mulmx1 pid_mx_id ?subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "copid_mx_id",
            "line_nb": 1188,
            "steps": [
                {
                    "command": [
                        "by move=> le_r_n; rewrite mulmxBl mul1mx mul_pid_mx_copid // oppr0 addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_mx_row",
            "line_nb": 1191,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case defk: (split k); rewrite mxE; apply: eq_bigr => j _; rewrite mxE defk.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_col_mx",
            "line_nb": 1195,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case defi: (split i); rewrite mxE; apply: eq_bigr => j _; rewrite mxE defi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_row_col",
            "line_nb": 1199,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE big_split_ord /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "congr (_ + _); apply: eq_bigr => j _; first by rewrite row_mxEl col_mxEu.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite row_mxEr col_mxEd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_col_row",
            "line_nb": 1204,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_col_mx !mul_mx_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_row_block",
            "line_nb": 1207,
            "steps": [
                {
                    "command": [
                        "by rewrite block_mxEh mul_mx_row !mul_row_col.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_block_col",
            "line_nb": 1210,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_col_mx !mul_row_col.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx_block",
            "line_nb": 1213,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_col_mx !mul_row_block.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin1_mx_key",
            "line_nb": 1218,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_rV_lin1",
            "line_nb": 1223,
            "steps": [
                {
                    "command": [
                        "rewrite {2}[u]matrix_sum_delta big_ord1 linear_sum; apply/rowP=> i.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxE summxE; apply: eq_bigr => j _; rewrite linearZ !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_rV_lin",
            "line_nb": 1232,
            "steps": [
                {
                    "command": [
                        "exact: mul_rV_lin1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_vec_lin",
            "line_nb": 1235,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_rV_lin mxvecK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rV_lin",
            "line_nb": 1238,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_rV_lin mxvecK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_vec_lin",
            "line_nb": 1241,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_rV_lin !mxvecK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxr_is_linear",
            "line_nb": 1253,
            "steps": [
                {
                    "command": [
                        "by move=> a A1 A2; rewrite /= mulmxDl scalemxAl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_mulmxr_is_linear",
            "line_nb": 1258,
            "steps": [
                {
                    "command": [
                        "move=> a A B; apply/row_matrixP; case/mxvec_indexP=> i j.",
                        "VernacExtend",
                        "1b05ef00a6bc4c06259b49aa79e4d38841eab3ab"
                    ]
                },
                {
                    "command": [
                        "rewrite linearP /= !rowE !mul_rV_lin /= vec_mx_delta -linearP mulmxDr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "congr (mxvec (_ + _)); apply/row_matrixP=> k.",
                        "VernacExtend",
                        "385739dd8a4f73703d3828c61e1780a276bfaa31"
                    ]
                },
                {
                    "command": [
                        "rewrite linearZ /= !row_mul rowE mul_delta_mx_cond.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (k == i); [rewrite -!rowE linearZ | rewrite !mul0mx raddf0].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_tr",
            "line_nb": 1272,
            "steps": [
                {
                    "command": [
                        "by apply: eq_bigr=> i _; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_is_scalar",
            "line_nb": 1275,
            "steps": [
                {
                    "command": [
                        "move=> a A B; rewrite mulr_sumr -big_split /=; apply: eq_bigr=> i _.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace0",
            "line_nb": 1281,
            "steps": [
                {
                    "command": [
                        "exact: raddf0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtraceD",
            "line_nb": 1284,
            "steps": [
                {
                    "command": [
                        "exact: raddfD.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtraceZ",
            "line_nb": 1287,
            "steps": [
                {
                    "command": [
                        "exact: scalarZ.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_diag",
            "line_nb": 1290,
            "steps": [
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite mxE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_scalar",
            "line_nb": 1293,
            "steps": [
                {
                    "command": [
                        "rewrite -diag_const_mx mxtrace_diag.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eq_bigr _ (fun j _ => mxE _ _ 0 j)) sumr_const card_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace1",
            "line_nb": 1297,
            "steps": [
                {
                    "command": [
                        "exact: mxtrace_scalar.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trace_mx11",
            "line_nb": 1302,
            "steps": [
                {
                    "command": [
                        "by rewrite {1}[A]mx11_scalar mxtrace_scalar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_block",
            "line_nb": 1305,
            "steps": [
                {
                    "command": [
                        "rewrite /(\\tr _) big_split_ord /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by congr (_ + _); apply: eq_bigr => i _; rewrite (block_mxEul, block_mxEdr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "matrix_nonzero1",
            "line_nb": 1312,
            "steps": [
                {
                    "command": [
                        "by apply/eqP=> /matrixP/(_ 0 0)/eqP; rewrite !mxE oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxE",
            "line_nb": 1318,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "idmxE",
            "line_nb": 1321,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mx_is_multiplicative",
            "line_nb": 1324,
            "steps": [
                {
                    "command": [
                        "by split=> //; apply: scalar_mxM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift0_perm0",
            "line_nb": 1332,
            "steps": [
                {
                    "command": [
                        "exact: lift_perm_id.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift0_perm_lift",
            "line_nb": 1335,
            "steps": [
                {
                    "command": [
                        "exact: lift_perm_lift.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift0_permK",
            "line_nb": 1338,
            "steps": [
                {
                    "command": [
                        "by move=> i; rewrite /lift0_perm -lift_permV permK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift0_perm_eq0",
            "line_nb": 1341,
            "steps": [
                {
                    "command": [
                        "by rewrite (canF_eq (lift0_permK s)) lift0_perm0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift0_mx_perm",
            "line_nb": 1345,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> /= i j; rewrite !mxE split1 /=; case: unliftP => [i'|] -> /=.",
                        "VernacExtend",
                        "5caed936835e366e9e533d8f19382dcfedbf86d4"
                    ]
                },
                {
                    "command": [
                        "rewrite lift0_perm_lift !mxE split1 /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: unliftP => [j'|] ->; rewrite ?(inj_eq (lift_inj _)) /= !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite lift0_perm0 !mxE split1 /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: unliftP => [j'|] ->; rewrite /= mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift0_mx_is_perm",
            "line_nb": 1352,
            "steps": [
                {
                    "command": [
                        "by rewrite lift0_mx_perm perm_mx_is_perm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjugate_key",
            "line_nb": 1358,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_mul_rev",
            "line_nb": 1380,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> k i; rewrite !mxE; apply: eq_bigr => j _; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mxZ",
            "line_nb": 1394,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE rmorphM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mxM",
            "line_nb": 1397,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i k; rewrite !mxE rmorph_sum //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j; rewrite !mxE rmorphM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_delta_mx",
            "line_nb": 1401,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i' j'; rewrite !mxE rmorph_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_diag_mx",
            "line_nb": 1404,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE rmorphMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_scalar_mx",
            "line_nb": 1407,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE rmorphMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx1",
            "line_nb": 1410,
            "steps": [
                {
                    "command": [
                        "by rewrite map_scalar_mx rmorph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_perm_mx",
            "line_nb": 1413,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE rmorph_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_tperm_mx",
            "line_nb": 1416,
            "steps": [
                {
                    "command": [
                        "exact: map_perm_mx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_pid_mx",
            "line_nb": 1419,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE rmorph_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trace_map_mx",
            "line_nb": 1422,
            "steps": [
                {
                    "command": [
                        "by rewrite rmorph_sum; apply: eq_bigr => i _; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cofactor_map_mx",
            "line_nb": 1430,
            "steps": [
                {
                    "command": [
                        "by rewrite rmorphM rmorph_sign -det_map_mx map_row' map_col'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_adj",
            "line_nb": 1433,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE cofactor_map_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_copid_mx",
            "line_nb": 1437,
            "steps": [
                {
                    "command": [
                        "by rewrite map_mx_sub map_mx1 map_pid_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_is_multiplicative",
            "line_nb": 1440,
            "steps": [
                {
                    "command": [
                        "by split; [apply: map_mxM | apply: map_mx1].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_lin1_mx",
            "line_nb": 1444,
            "steps": [
                {
                    "command": [
                        "by move=> def_gf; apply/matrixP=> i j; rewrite !mxE -map_delta_mx -def_gf mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_lin_mx",
            "line_nb": 1447,
            "steps": [
                {
                    "command": [
                        "move=> def_gf; apply: map_lin1_mx => A /=.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite map_mxvec def_gf map_vec_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_mul",
            "line_nb": 1458,
            "steps": [
                {
                    "command": [
                        "rewrite trmx_mul_rev; apply/matrixP=> k i; rewrite !mxE.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemxAr",
            "line_nb": 1462,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite trmx_mul !linearZ /= trmx_mul scalemxAl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx_is_scalable",
            "line_nb": 1465,
            "steps": [
                {
                    "command": [
                        "by move=> a B; rewrite scalemxAr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_mulmx_is_linear",
            "line_nb": 1470,
            "steps": [
                {
                    "command": [
                        "move=> a A B; apply/row_matrixP=> i; rewrite linearP /= !rowE !mul_rV_lin /=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite [_ *m _](linearP (mulmxr_linear _ _)) linearP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_mul_row_is_linear",
            "line_nb": 1480,
            "steps": [
                {
                    "command": [
                        "move=> a u v; apply/row_matrixP=> i; rewrite linearP /= !rowE !mul_rV_lin1 /=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite [_ *m _](linearP (mulmxr_linear _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_vec_lin_row",
            "line_nb": 1486,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_rV_lin1 /= mxvecK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvec_dotmul",
            "line_nb": 1490,
            "steps": [
                {
                    "command": [
                        "transitivity (\\sum_i \\sum_j (u 0 i * A i j *: row j v^T)).",
                        "VernacExtend",
                        "ac0b0f4772192e2f3c0700890e185204e5341f65"
                    ]
                },
                {
                    "command": [
                        "apply/rowP=> i; rewrite {i}ord1 mxE (reindex _ (curry_mxvec_bij _ _)) /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite pair_bigA summxE; apply: eq_bigr => [[i j]] /= _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE !mxvecE mxE big_ord1 mxE mulrAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmx_sum_row exchange_big; apply: eq_bigr => j _ /=.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxE -scaler_suml.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diag_mxC",
            "line_nb": 1503,
            "steps": [
                {
                    "command": [
                        "by rewrite !mulmx_diag; congr (diag_mx _); apply/rowP=> i; rewrite !mxE mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diag_mx_comm",
            "line_nb": 1506,
            "steps": [
                {
                    "command": [
                        "exact: diag_mxC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mxC",
            "line_nb": 1509,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite trmx_mul tr_scalar_mx !mul_scalar_mx linearZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mx_comm",
            "line_nb": 1512,
            "steps": [
                {
                    "command": [
                        "exact: scalar_mxC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_mx_scalar",
            "line_nb": 1515,
            "steps": [
                {
                    "command": [
                        "by rewrite scalar_mxC mul_scalar_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_mulC",
            "line_nb": 1518,
            "steps": [
                {
                    "command": [
                        "have expand_trM C D: \\tr (C *m D) = \\sum_i \\sum_j C i j * D j i.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !{}expand_trM exchange_big /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by do 2!apply: eq_bigr => ? _; apply: mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det_tr",
            "line_nb": 1542,
            "steps": [
                {
                    "command": [
                        "rewrite [\\det A^T](reindex_inj invg_inj) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => s _ /=; rewrite !odd_permV (reindex_perm s) /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by congr (_ * _); apply: eq_bigr => i _; rewrite mxE permK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det_perm",
            "line_nb": 1547,
            "steps": [
                {
                    "command": [
                        "rewrite [\\det _](bigD1 s) //= big1 => [|i _]; last by rewrite /= !mxE eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite mulr1 big1 ?addr0 => //= t Dst.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (pickP (fun i => s i != t i)) => [i ist | Est].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (bigD1 i) // mulrCA /= !mxE (negbTE ist) mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/eqP: Dst; apply/permP => i; move/eqP: (Est i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det1",
            "line_nb": 1554,
            "steps": [
                {
                    "command": [
                        "by rewrite -perm_mx1 det_perm odd_perm1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det_mx00",
            "line_nb": 1557,
            "steps": [
                {
                    "command": [
                        "by rewrite flatmx0 -(flatmx0 1%:M) det1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det0",
            "line_nb": 1565,
            "steps": [
                {
                    "command": [
                        "by rewrite -(scale0r 0) detZ exprS !mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det_scalar",
            "line_nb": 1568,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}(mulr1 a) -scale_scalar_mx detZ det1 mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det_scalar1",
            "line_nb": 1571,
            "steps": [
                {
                    "command": [
                        "exact: det_scalar.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "detM",
            "line_nb": 1597,
            "steps": [
                {
                    "command": [
                        "exact: det_mulmx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det_diag",
            "line_nb": 1600,
            "steps": [
                {
                    "command": [
                        "rewrite /(\\det _) (bigD1 1%g) //= addrC big1 => [|p p1].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite add0r odd_perm1 mul1r; apply: eq_bigr => i; rewrite perm1 mxE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{p1}: ~~ perm_on set0 p.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: contra p1; move/subsetP=> p1; apply/eqP; apply/permP=> i.",
                        "VernacExtend",
                        "c63cc1edd6ea74c177b43be5463fe7810ae7c4db"
                    ]
                },
                {
                    "command": [
                        "by rewrite perm1; apply/eqP; apply/idPn; move/p1; rewrite inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/subsetPn=> i; rewrite !inE eq_sym; move/negbTE=> p_i _.",
                        "VernacExtend",
                        "c5cb6672fdde6b3af11f77240bf9bbcee9174e45"
                    ]
                },
                {
                    "command": [
                        "by rewrite (bigD1 i) //= mulrCA mxE p_i mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cofactorZ",
            "line_nb": 1646,
            "steps": [
                {
                    "command": [
                        "by rewrite {1}/cofactor !linearZ detZ mulrCA mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expand_det_col",
            "line_nb": 1649,
            "steps": [
                {
                    "command": [
                        "rewrite -det_tr (expand_det_row _ j0).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite cofactor_tr mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_adj",
            "line_nb": 1653,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE cofactor_tr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjZ",
            "line_nb": 1656,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE cofactorZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_adj_mx",
            "line_nb": 1670,
            "steps": [
                {
                    "command": [
                        "by apply: trmx_inj; rewrite trmx_mul trmx_adj mul_mx_adj det_tr tr_scalar_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adj1",
            "line_nb": 1673,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}(det1 n) -mul_adj_mx mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx1C",
            "line_nb": 1676,
            "steps": [
                {
                    "command": [
                        "move=> AB1; pose A' := \\det B *: \\adj A.",
                        "VernacExtend",
                        "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
                    ]
                },
                {
                    "command": [
                        "suffices kA: A' *m A = 1%:M by rewrite -[B]mul1mx -kA -(mulmxA A') AB1 mulmx1.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -scalemxAl mul_adj_mx scale_scalar_mx mulrC -det_mulmx AB1 det1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx1_min",
            "line_nb": 1681,
            "steps": [
                {
                    "command": [
                        "move=> AB1; rewrite leqNgt; apply/negP=> /subnKC; rewrite addSnnS.",
                        "VernacExtend",
                        "291cbed887ee44aa2a2133906ee031c937159d58"
                    ]
                },
                {
                    "command": [
                        "move: (_ - _)%N => m' def_m; move: AB1; rewrite -{m}def_m in A B *.",
                        "VernacExtend",
                        "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
                    ]
                },
                {
                    "command": [
                        "rewrite -(vsubmxK A) -(hsubmxK B) mul_col_row scalar_mx_block.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/eq_block_mx=> /mulmx1C BlAu1 AuBr0 _ => /eqP/idPn[].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[_ B]mul1mx -BlAu1 -mulmxA AuBr0 !mulmx0 eq_sym oner_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det_lblock",
            "line_nb": 1699,
            "steps": [
                {
                    "command": [
                        "by rewrite -det_tr tr_block_mx trmx0 det_ublock !det_tr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitmxE",
            "line_nb": 1713,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitmx1",
            "line_nb": 1716,
            "steps": [
                {
                    "command": [
                        "by rewrite unitmxE det1 unitr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitmx_perm",
            "line_nb": 1719,
            "steps": [
                {
                    "command": [
                        "by rewrite unitmxE det_perm unitrX ?unitrN ?unitr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitmx_tr",
            "line_nb": 1722,
            "steps": [
                {
                    "command": [
                        "by rewrite unitmxE det_tr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitmxZ",
            "line_nb": 1725,
            "steps": [
                {
                    "command": [
                        "by move=> Ua; rewrite !unitmxE detZ unitrM unitrX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invmx1",
            "line_nb": 1728,
            "steps": [
                {
                    "command": [
                        "by rewrite /invmx det1 invr1 scale1r adj1 if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invmxZ",
            "line_nb": 1731,
            "steps": [
                {
                    "command": [
                        "rewrite /invmx !unitmxE detZ unitrM => /andP[Ua U_A].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite Ua U_A adjZ !scalerA invrM {U_A}//=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (posnP n) A => [-> | n_gt0] A; first by rewrite flatmx0 [_ *: _]flatmx0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite unitrX_pos // in Ua; rewrite -[_ * _](mulrK Ua) mulrC -!mulrA.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "by rewrite -exprSr prednK // !mulrA divrK ?unitrX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invmx_scalar",
            "line_nb": 1738,
            "steps": [
                {
                    "command": [
                        "case Ua: (a%:M \\in unitmx).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -scalemx1 in Ua *; rewrite invmxZ // invmx1 scalemx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /invmx Ua; have [->|n_gt0] := posnP n; first by rewrite ![_%:M]flatmx0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite unitmxE det_scalar unitrX_pos // in Ua; rewrite invr_out ?Ua.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulVmx",
            "line_nb": 1744,
            "steps": [
                {
                    "command": [
                        "by move=> A nsA; rewrite /invmx nsA -scalemxAl mul_adj_mx scale_scalar_mx mulVr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxV",
            "line_nb": 1747,
            "steps": [
                {
                    "command": [
                        "by move=> A nsA; rewrite /invmx nsA -scalemxAr mul_mx_adj scale_scalar_mx mulVr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulKmx",
            "line_nb": 1750,
            "steps": [
                {
                    "command": [
                        "by move=> A uA /= B; rewrite mulmxA mulVmx ?mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulKVmx",
            "line_nb": 1753,
            "steps": [
                {
                    "command": [
                        "by move=> A uA /= B; rewrite mulmxA mulmxV ?mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxK",
            "line_nb": 1756,
            "steps": [
                {
                    "command": [
                        "by move=> A uA /= B; rewrite -mulmxA mulmxV ?mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmxKV",
            "line_nb": 1759,
            "steps": [
                {
                    "command": [
                        "by move=> A uA /= B; rewrite -mulmxA mulVmx ?mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det_inv",
            "line_nb": 1762,
            "steps": [
                {
                    "command": [
                        "case uA: (A \\in unitmx); last by rewrite /invmx uA invr_out ?negbT.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: (mulrI uA); rewrite -det_mulmx mulmxV ?divrr ?det1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitmx_inv",
            "line_nb": 1766,
            "steps": [
                {
                    "command": [
                        "by rewrite !unitmxE det_inv unitrV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitmx_mul",
            "line_nb": 1769,
            "steps": [
                {
                    "command": [
                        "by rewrite -unitrM -det_mulmx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmx_inv",
            "line_nb": 1772,
            "steps": [
                {
                    "command": [
                        "by rewrite (fun_if trmx) linearZ /= trmx_adj -unitmx_tr -det_tr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invmxK",
            "line_nb": 1775,
            "steps": [
                {
                    "command": [
                        "move=> A; case uA : (A \\in unitmx); last by rewrite /invmx !uA.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: (can_inj (mulKVmx uA)); rewrite mulVmx // mulmxV ?unitmx_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulmx1_unit",
            "line_nb": 1779,
            "steps": [
                {
                    "command": [
                        "by move=> AB1; apply/andP; rewrite -unitmx_mul AB1 unitmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intro_unitmx",
            "line_nb": 1782,
            "steps": [
                {
                    "command": [
                        "by case=> _ /mulmx1_unit[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invmx_out",
            "line_nb": 1785,
            "steps": [
                {
                    "command": [
                        "by move=> A; rewrite inE /= /invmx -if_neg => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "detV",
            "line_nb": 1794,
            "steps": [
                {
                    "command": [
                        "exact: det_inv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitr_trmx",
            "line_nb": 1797,
            "steps": [
                {
                    "command": [
                        "exact: unitmx_tr.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trmxV",
            "line_nb": 1800,
            "steps": [
                {
                    "command": [
                        "exact: trmx_inv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_perm_mxV",
            "line_nb": 1807,
            "steps": [
                {
                    "command": [
                        "apply/is_perm_mxP/is_perm_mxP=> [] [s defA]; exists s^-1%g.",
                        "VernacExtend",
                        "dbf56f09b26f68228b201638cdccf2383b141d25"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(invrK A) defA perm_mxV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite defA perm_mxV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GL_1E",
            "line_nb": 1840,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GL_VE",
            "line_nb": 1843,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GL_VxE",
            "line_nb": 1846,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GL_ME",
            "line_nb": 1849,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GL_MxE",
            "line_nb": 1852,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GL_unit",
            "line_nb": 1855,
            "steps": [
                {
                    "command": [
                        "exact: valP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GL_unitmx",
            "line_nb": 1858,
            "steps": [
                {
                    "command": [
                        "exact: GL_unit.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GL_det",
            "line_nb": 1861,
            "steps": [
                {
                    "command": [
                        "by apply: contraL (GL_unitmx u); rewrite unitmxE => /eqP->; rewrite unitr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemx_eq0",
            "line_nb": 1871,
            "steps": [
                {
                    "command": [
                        "case nz_a: (a == 0) / eqP => [-> | _]; first by rewrite scale0r eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/eqP=> [aA0 | ->]; last exact: scaler0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/matrixP=> i j; apply/eqP; move/matrixP/(_ i j)/eqP: aA0.",
                        "VernacExtend",
                        "6cee8938e4c92292ae66c56557669b6bd87a33e5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE mulf_eq0 nz_a.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalemx_inj",
            "line_nb": 1877,
            "steps": [
                {
                    "command": [
                        "move=> nz_a A B eq_aAB; apply: contraNeq nz_a.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "rewrite -[A == B]subr_eq0 -[a == 0]orbF => /negPf<-.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -scalemx_eq0 linearB subr_eq0 /= eq_aAB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det0P",
            "line_nb": 1882,
            "steps": [
                {
                    "command": [
                        "apply: (iffP eqP) => [detA0 | [v n0v vA0]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: contraNeq n0v => nz_detA; rewrite -(inj_eq (scalemx_inj nz_detA)).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite scaler0 -mul_mx_scalar -mul_mx_adj mulmxA vA0 mul0mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: n => [|n IHn] in A detA0 *.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by case/idP: (oner_eq0 R); rewrite -detA0 [A]thinmx0 -(thinmx0 1%:M) det1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [{detA0}A'0 | nzA'] := eqVneq (row 0 (\\adj A)) 0; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists (row 0 (\\adj A)) => //; rewrite rowE -mulmxA mul_adj_mx detA0.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul_mx_scalar scale0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose A' := col' 0 A; pose vA := col 0 A.",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have defA: A = row_mx vA A'.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case: splitP => j' def_j; rewrite mxE; congr (A i _); apply: val_inj => //=.",
                        "VernacExtend",
                        "0b65d369b338d07f8ee6db11e51edf0520f759c2"
                    ]
                },
                {
                    "command": [
                        "by rewrite def_j [j']ord1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{IHn} w_ j : exists w : 'rV_n.+1, [/\\ w != 0, w 0 j = 0 & w *m A' = 0].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [|wj nzwj wjA'0] := IHn (row' j A').",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; move/rowP/(_ j)/eqP: A'0; rewrite !mxE mulf_eq0 signr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (\\row_k oapp (wj 0) 0 (unlift j k)).",
                        "VernacExtend",
                        "f8611d8105c560d1a5c0bf66e10280c55fd7ec66"
                    ]
                },
                {
                    "command": [
                        "rewrite !mxE unlift_none -wjA'0; split=> //.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "apply: contraNneq nzwj => w0; apply/eqP/rowP=> k'.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by move/rowP/(_ (lift j k')): w0; rewrite !mxE liftK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/rowP=> k; rewrite !mxE (bigD1 j) //= mxE unlift_none mul0r add0r.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite (reindex_onto (lift j) (odflt k \\o unlift j)) /= => [|k'].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_big => k'; rewrite ?mxE liftK eq_sym neq_lift eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym; case/unlift_some=> ? ? ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [w0 [nz_w0 w00_0 w0A']] := w_ 0; pose a0 := (w0 *m vA) 0 0.",
                        "VernacExtend",
                        "fa6ff0c3d4595d45015144bd8c25fb5ac62ed42b"
                    ]
                },
                {
                    "command": [
                        "have [j {nz_w0}/= nz_w0j | w00] := pickP [pred j | w0 0 j != 0]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/eqP: nz_w0; apply/rowP=> j; rewrite mxE; move/eqP: (w00 j).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{w_} [wj [nz_wj wj0_0 wjA']] := w_ j; pose aj := (wj *m vA) 0 0.",
                        "VernacExtend",
                        "fa6ff0c3d4595d45015144bd8c25fb5ac62ed42b"
                    ]
                },
                {
                    "command": [
                        "have [aj0 | nz_aj] := eqVneq aj 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists wj => //; rewrite defA (@mul_mx_row _ _ _ 1) [_ *m _]mx11_scalar -/aj.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite aj0 raddf0 wjA' row_mx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (aj *: w0 - a0 *: wj).",
                        "VernacExtend",
                        "424da647efefe2bbc14d05b91d520bb468a3e900"
                    ]
                },
                {
                    "command": [
                        "apply: contraNneq nz_aj; move/rowP/(_ j)/eqP; rewrite !mxE wj0_0 mulr0 subr0.",
                        "VernacExtend",
                        "892743169f9b7a8d1078a131ab1583767aafbf69"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulf_eq0 (negPf nz_w0j) orbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite defA (@mul_mx_row _ _ _ 1) !mulmxBl -!scalemxAl w0A' wjA' !linear0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mul_mx_scalar -mul_scalar_mx -!mx11_scalar subrr addr0 row_mx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_inj",
            "line_nb": 1925,
            "steps": [
                {
                    "command": [
                        "move=> A B eq_AB; apply/matrixP=> i j.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by move/matrixP/(_ i j): eq_AB; rewrite !mxE; apply: fmorph_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_is_scalar",
            "line_nb": 1929,
            "steps": [
                {
                    "command": [
                        "rewrite /is_scalar_mx; case: (insub _) => // i.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxE -map_scalar_mx inj_eq //; apply: map_mx_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_unitmx",
            "line_nb": 1933,
            "steps": [
                {
                    "command": [
                        "by rewrite unitmxE det_map_mx // fmorph_unit // -unitfE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_unit",
            "line_nb": 1936,
            "steps": [
                {
                    "command": [
                        "exact: map_unitmx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_invmx",
            "line_nb": 1939,
            "steps": [
                {
                    "command": [
                        "rewrite /invmx map_unitmx (fun_if (map_mx f)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite map_mxZ map_mx_adj det_map_mx fmorphV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_inv",
            "line_nb": 1943,
            "steps": [
                {
                    "command": [
                        "exact: map_invmx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_eq0",
            "line_nb": 1946,
            "steps": [
                {
                    "command": [
                        "by rewrite -(inj_eq map_mx_inj) raddf0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cormen_lup_perm",
            "line_nb": 1954,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn] /= in A *; first exact: is_perm_mx1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set A' := _ - _; move/(_ A'): IHn; case: cormen_lup => [[P L U]] {A'}/=.",
                        "VernacExtend",
                        "ca48da5a7c0de45e9ec83494b3976b0ddeb0197b"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_perm_mxMr _ (perm_mx_is_perm _ _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case/is_perm_mxP => s ->; apply: lift0_mx_is_perm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cormen_lup_detL",
            "line_nb": 1973,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn] /= in A *; first by rewrite det1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set A' := _ - _; move/(_ A'): IHn; case: cormen_lup => [[P L U]] {A'}/= detL.",
                        "VernacExtend",
                        "ca48da5a7c0de45e9ec83494b3976b0ddeb0197b"
                    ]
                },
                {
                    "command": [
                        "by rewrite (@det_lblock _ 1) det1 mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cormen_lup_lower",
            "line_nb": 1978,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn] /= in A i j *; first by rewrite [i]ord1 [j]ord1 mxE.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set A' := _ - _; move/(_ A'): IHn; case: cormen_lup => [[P L U]] {A'}/= Ll.",
                        "VernacExtend",
                        "ca48da5a7c0de45e9ec83494b3976b0ddeb0197b"
                    ]
                },
                {
                    "command": [
                        "rewrite !mxE split1; case: unliftP => [i'|] -> /=; rewrite !mxE split1.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "by case: unliftP => [j'|] -> //; apply: Ll.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: unliftP => [j'|] ->; rewrite /= mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cormen_lup_upper",
            "line_nb": 1985,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn] /= in A i j *; first by rewrite [i]ord1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set A' := _ - _; move/(_ A'): IHn; case: cormen_lup => [[P L U]] {A'}/= Uu.",
                        "VernacExtend",
                        "ca48da5a7c0de45e9ec83494b3976b0ddeb0197b"
                    ]
                },
                {
                    "command": [
                        "rewrite !mxE split1; case: unliftP => [i'|] -> //=; rewrite !mxE split1.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "by case: unliftP => [j'|] ->; [apply: Uu | rewrite /= mxE].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}