{
    "filename": "mathcomp/algebra/zmodp.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq div.",
            "VernacRequire",
            "4c476aa9e49f9884836e1f58c401ef2a1f93d27e"
        ],
        [
            "From mathcomp Require Import fintype bigop finset prime fingroup ssralg finalg countalg.",
            "VernacRequire",
            "11e942c1986a5c69a64d3839236f7dc0e9192310"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Section ZpDef.",
            "VernacBeginSection",
            "79d7d20bac7b96cd08ba8448c8809014a11b9d95"
        ],
        [
            "Variable p' : nat.",
            "VernacAssumption",
            "11a1789f06c048721d0a73502e41213af4c1a2a1"
        ],
        [
            "Local Notation p := p'.+1.",
            "VernacSyntacticDefinition",
            "3f252735826d77a0b8addbffddd428c668627e2d"
        ],
        [
            "Implicit Types x y z : 'I_p.",
            "VernacReserve",
            "d1ebed700a342c237441ece23035096ca5ec127f"
        ],
        [
            "Definition inZp i := Ordinal (ltn_pmod i (ltn0Sn p')).",
            "VernacDefinition",
            "eb45ae27096cff709b70ec0dbb56b88a143d5113"
        ],
        [
            "Lemma modZp x : x %% p = x.",
            "VernacStartTheoremProof",
            "37934f02abc9700a8237e3353d0f4373eccb1fc4"
        ],
        [
            "by rewrite modn_small ?ltn_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valZpK x : inZp x = x.",
            "VernacStartTheoremProof",
            "a4d1372a24db1542b7b03fa2cfdde4d8a840377a"
        ],
        [
            "by apply: val_inj; rewrite /= modZp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zp0 : 'I_p := ord0.",
            "VernacDefinition",
            "bf1d8a340a5ca46bcdf3e752b53868799e0357c9"
        ],
        [
            "Definition Zp1 := inZp 1.",
            "VernacDefinition",
            "bd14516c0b531f707f215ccbf08747526d64096e"
        ],
        [
            "Definition Zp_opp x := inZp (p - x).",
            "VernacDefinition",
            "026f52a0629bc84d3d5f206647e29b54d592a40c"
        ],
        [
            "Definition Zp_add x y := inZp (x + y).",
            "VernacDefinition",
            "ab254680753b0c3f44e1604e975506aa8b60c6d8"
        ],
        [
            "Definition Zp_mul x y := inZp (x * y).",
            "VernacDefinition",
            "967832b77e54da4610238fc4280d0d2ff52f0400"
        ],
        [
            "Definition Zp_inv x := if coprime p x then inZp (egcdn x p).1 else x.",
            "VernacDefinition",
            "a7e8dadad63d6372f7e6fc4abd2ac74e78b91511"
        ],
        [
            "Lemma Zp_add0z : left_id Zp0 Zp_add.",
            "VernacStartTheoremProof",
            "5f9324e5bfb3762896dc65cf4f17268d5dce3e51"
        ],
        [
            "exact: valZpK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_addNz : left_inverse Zp0 Zp_opp Zp_add.",
            "VernacStartTheoremProof",
            "08b98aa9f0fc9d00efaffe61c5d6c1df16899f29"
        ],
        [
            "by move=> x; apply: val_inj; rewrite /= modnDml subnK ?modnn // ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_addA : associative Zp_add.",
            "VernacStartTheoremProof",
            "3c681899bb1a9c2bd6c96cee2765ff06e15aec54"
        ],
        [
            "by move=> x y z; apply: val_inj; rewrite /= modnDml modnDmr addnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_addC : commutative Zp_add.",
            "VernacStartTheoremProof",
            "c98ea69740fe3493e13b9528c7d9a93a934c7568"
        ],
        [
            "by move=> x y; apply: val_inj; rewrite /= addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zp_zmodMixin := ZmodMixin Zp_addA Zp_addC Zp_add0z Zp_addNz.",
            "VernacDefinition",
            "954ad90d0afba710e0018dd6644fef29964cbba8"
        ],
        [
            "Canonical Zp_zmodType := Eval hnf in ZmodType 'I_p Zp_zmodMixin.",
            "VernacDefinition",
            "eca7dc049f063ec6482855b4c4f7ec3a1ae0d0a7"
        ],
        [
            "Canonical Zp_finZmodType := Eval hnf in [finZmodType of 'I_p].",
            "VernacDefinition",
            "889ef0213fc23422a37b3c46a2351d0c1646c51c"
        ],
        [
            "Canonical Zp_baseFinGroupType := Eval hnf in [baseFinGroupType of 'I_p for +%R].",
            "VernacDefinition",
            "b877ede78d70754ece53a75961109fcb6b7888d8"
        ],
        [
            "Canonical Zp_finGroupType := Eval hnf in [finGroupType of 'I_p for +%R].",
            "VernacDefinition",
            "0eb8ac5f4a90c2b1df6f36ee8c6ee6cae239d35c"
        ],
        [
            "Lemma Zp_mul1z : left_id Zp1 Zp_mul.",
            "VernacStartTheoremProof",
            "1354e9464221991e2c15b0849498ee6e50bd6b0b"
        ],
        [
            "by move=> x; apply: val_inj; rewrite /= modnMml mul1n modZp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_mulC : commutative Zp_mul.",
            "VernacStartTheoremProof",
            "6a51829b32ea61c2e388a8cf5fd0f367e3d97a53"
        ],
        [
            "by move=> x y; apply: val_inj; rewrite /= mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_mulz1 : right_id Zp1 Zp_mul.",
            "VernacStartTheoremProof",
            "f40a1500b1916b51b01e31118f592c9cb2d26a1c"
        ],
        [
            "by move=> x; rewrite Zp_mulC Zp_mul1z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_mulA : associative Zp_mul.",
            "VernacStartTheoremProof",
            "8ea9a7fcb45f3874d54affe2ac6df5a33c420fa4"
        ],
        [
            "by move=> x y z; apply: val_inj; rewrite /= modnMml modnMmr mulnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_mul_addr : right_distributive Zp_mul Zp_add.",
            "VernacStartTheoremProof",
            "ba5f63ea374352c14d44402e9d94786924676255"
        ],
        [
            "by move=> x y z; apply: val_inj; rewrite /= modnMmr modnDm mulnDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_mul_addl : left_distributive Zp_mul Zp_add.",
            "VernacStartTheoremProof",
            "e58d88cae625738923c5700feada6ee6b5af0f24"
        ],
        [
            "by move=> x y z; rewrite -!(Zp_mulC z) Zp_mul_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_mulVz x : coprime p x -> Zp_mul (Zp_inv x) x = Zp1.",
            "VernacStartTheoremProof",
            "33620079ef54c394dcc04c7bd5afd6ff37bea50e"
        ],
        [
            "move=> co_p_x; apply: val_inj; rewrite /Zp_inv co_p_x /= modnMml.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -(chinese_modl co_p_x 1 0) /chinese addn0 mul1n mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_mulzV x : coprime p x -> Zp_mul x (Zp_inv x) = Zp1.",
            "VernacStartTheoremProof",
            "8ca46f4cdc85845ad6c75411d946f6039d0dd746"
        ],
        [
            "by move=> Ux; rewrite /= Zp_mulC Zp_mulVz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_intro_unit x y : Zp_mul y x = Zp1 -> coprime p x.",
            "VernacStartTheoremProof",
            "ba30f3459a754c758ddf2cefd641aa136f313982"
        ],
        [
            "case=> yx1; have:= coprimen1 p.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "by rewrite -coprime_modr -yx1 coprime_modr coprime_mulr; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_inv_out x : ~~ coprime p x -> Zp_inv x = x.",
            "VernacStartTheoremProof",
            "811bc3bbe1163a34fc321a0a6d33e73a24f43d5b"
        ],
        [
            "by rewrite /Zp_inv => /negPf->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_mulrn x n : x *+ n = inZp (x * n).",
            "VernacStartTheoremProof",
            "bd23e992c7775223495d589172592256df3a2ca0"
        ],
        [
            "apply: val_inj => /=; elim: n => [|n IHn]; first by rewrite muln0 modn_small.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !GRing.mulrS /= IHn modnDmr mulnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Lemma Zp_mulgC : @commutative 'I_p _ mulg.",
            "VernacStartTheoremProof",
            "ebff8d24defed2f81c1a8c5711657c6bf1b79e63"
        ],
        [
            "exact: Zp_addC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_abelian : abelian [set: 'I_p].",
            "VernacStartTheoremProof",
            "c805237df68bc3cfdff6b3c8d23c9edbb89e23c2"
        ],
        [
            "exact: FinRing.zmod_abelian.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_expg x n : x ^+ n = inZp (x * n).",
            "VernacStartTheoremProof",
            "85c78b48fe4f35a1d89ecef3304a6c432117f6b4"
        ],
        [
            "exact: Zp_mulrn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp1_expgz x : Zp1 ^+ x = x.",
            "VernacStartTheoremProof",
            "5c32002bd70c0196f41837c4e0aa36e922844272"
        ],
        [
            "by rewrite Zp_expg; apply: Zp_mul1z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_cycle : setT = <[Zp1]>.",
            "VernacStartTheoremProof",
            "bdf0c4d98781b0828f2ef73ba8fc918d88a03a88"
        ],
        [
            "by apply/setP=> x; rewrite -[x]Zp1_expgz inE groupX ?mem_gen ?set11.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma order_Zp1 : #[Zp1] = p.",
            "VernacStartTheoremProof",
            "e4b852ac277143f9dfb43e34cddc9c81dce4ef88"
        ],
        [
            "by rewrite orderE -Zp_cycle cardsT card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ZpDef.",
            "VernacEndSegment",
            "41af811893abf7bffced29690840802c44b0229c"
        ],
        [
            "Arguments Zp0 {p'}.",
            "VernacArguments",
            "9f41fa94f6a1f6e39904677fe309f10686fc992f"
        ],
        [
            "Arguments Zp1 {p'}.",
            "VernacArguments",
            "5f4c6abb3770d36230639a572ed93a44c6d37d69"
        ],
        [
            "Arguments inZp {p'} i.",
            "VernacArguments",
            "4c1728104d075d146f23e20d8b0d0685ccc612d4"
        ],
        [
            "Arguments valZpK {p'} x.",
            "VernacArguments",
            "5c3f7e81bb43adccfce44e955d844d2b96eb2f51"
        ],
        [
            "Lemma ord1 : all_equal_to (0 : 'I_1).",
            "VernacStartTheoremProof",
            "e53390e36191315619c7a2c04a54d478159cd4dc"
        ],
        [
            "by case=> [[] // ?]; apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lshift0 m n : lshift m (0 : 'I_n.+1) = (0 : 'I_(n + m).+1).",
            "VernacStartTheoremProof",
            "43ff85cad5690aa01b7c925eaa922d51be074c7d"
        ],
        [
            "exact: val_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rshift1 n : @rshift 1 n =1 lift (0 : 'I_n.+1).",
            "VernacStartTheoremProof",
            "ce247562d02df0397f9cc613b7d31be0d9b8ac62"
        ],
        [
            "by move=> i; apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split1 n i : split (i : 'I_(1 + n)) = oapp (@inr _ _) (inl _ 0) (unlift 0 i).",
            "VernacStartTheoremProof",
            "7cdca95e146203a09c96c75baedbd704019713e1"
        ],
        [
            "case: unliftP => [i'|] -> /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -rshift1 (unsplitK (inr _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -(lshift0 n 0) (unsplitK (inl _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma big_ord1 R idx (op : @Monoid.law R idx) F : \\big[op/idx]_(i < 1) F i = F 0.",
            "VernacStartTheoremProof",
            "4193c09b2e7e58034fd11c576cb6410b56fdbf1e"
        ],
        [
            "by rewrite big_ord_recl big_ord0 Monoid.mulm1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma big_ord1_cond R idx (op : @Monoid.law R idx) P F : \\big[op/idx]_(i < 1 | P i) F i = if P 0 then F 0 else idx.",
            "VernacStartTheoremProof",
            "f6b1f7d6aed75aad728333c97b01004993a543fb"
        ],
        [
            "by rewrite big_mkcond big_ord1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ZpRing.",
            "VernacBeginSection",
            "883d56078d33815f8ae9c9036485be1bd7c8a55b"
        ],
        [
            "Variable p' : nat.",
            "VernacAssumption",
            "11a1789f06c048721d0a73502e41213af4c1a2a1"
        ],
        [
            "Local Notation p := p'.+2.",
            "VernacSyntacticDefinition",
            "9f320dc3d40fbdb040af8021cb5c38ecde0ee07b"
        ],
        [
            "Lemma Zp_nontrivial : Zp1 != 0 :> 'I_p.",
            "VernacStartTheoremProof",
            "7ba71b8da24ab50945bb2cd8f33d8786c062bbcd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zp_ringMixin := ComRingMixin (@Zp_mulA _) (@Zp_mulC _) (@Zp_mul1z _) (@Zp_mul_addl _) Zp_nontrivial.",
            "VernacDefinition",
            "78cd14e93bd475e8a4cbce9dddd92c6338d18575"
        ],
        [
            "Canonical Zp_ringType := Eval hnf in RingType 'I_p Zp_ringMixin.",
            "VernacDefinition",
            "55a39b5ebc8363cf1b89636fc1145867f0edcac6"
        ],
        [
            "Canonical Zp_finRingType := Eval hnf in [finRingType of 'I_p].",
            "VernacDefinition",
            "c0483d6211130dab1c9901cc4c83fa3b9352a285"
        ],
        [
            "Canonical Zp_comRingType := Eval hnf in ComRingType 'I_p (@Zp_mulC _).",
            "VernacDefinition",
            "21dd945c6efc757340818bef52a0da3d1a4448f7"
        ],
        [
            "Canonical Zp_finComRingType := Eval hnf in [finComRingType of 'I_p].",
            "VernacDefinition",
            "74907d41af324c03318403f8769245fe21868e31"
        ],
        [
            "Definition Zp_unitRingMixin := ComUnitRingMixin (@Zp_mulVz _) (@Zp_intro_unit _) (@Zp_inv_out _).",
            "VernacDefinition",
            "98fdf756995ff23af70f5a406b70ac783fc9811f"
        ],
        [
            "Canonical Zp_unitRingType := Eval hnf in UnitRingType 'I_p Zp_unitRingMixin.",
            "VernacDefinition",
            "0e78381cdfc1770367cc368b15ff8a4d41b278dd"
        ],
        [
            "Canonical Zp_finUnitRingType := Eval hnf in [finUnitRingType of 'I_p].",
            "VernacDefinition",
            "a10eebaa913e3049a85b8638ecdd1b66a449d438"
        ],
        [
            "Canonical Zp_comUnitRingType := Eval hnf in [comUnitRingType of 'I_p].",
            "VernacDefinition",
            "108dfa2b9e74855fc3c91a26e8a54783e31b4c60"
        ],
        [
            "Canonical Zp_finComUnitRingType := Eval hnf in [finComUnitRingType of 'I_p].",
            "VernacDefinition",
            "87270c5e9100b111b44965fb872d143252ae7011"
        ],
        [
            "Lemma Zp_nat n : n%:R = inZp n :> 'I_p.",
            "VernacStartTheoremProof",
            "1e1603d3590222a3dfd6b7e81f2290630e03247c"
        ],
        [
            "by apply: val_inj; rewrite [n%:R]Zp_mulrn /= modnMml mul1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natr_Zp (x : 'I_p) : x%:R = x.",
            "VernacStartTheoremProof",
            "06eeb55928cefe1fbe4478682c3a30a4418c9a8c"
        ],
        [
            "by rewrite Zp_nat valZpK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natr_negZp (x : 'I_p) : (- x)%:R = - x.",
            "VernacStartTheoremProof",
            "aab3db9d291d2fe4a489dba4bd504a3533e98ae1"
        ],
        [
            "by apply: val_inj; rewrite /= Zp_nat /= modn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Lemma unit_Zp_mulgC : @commutative {unit 'I_p} _ mulg.",
            "VernacStartTheoremProof",
            "57c9b215ac84c0fee18379a694352bba4473b82c"
        ],
        [
            "by move=> u v; apply: val_inj; rewrite /= GRing.mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unit_Zp_expg (u : {unit 'I_p}) n : val (u ^+ n) = inZp (val u ^ n) :> 'I_p.",
            "VernacStartTheoremProof",
            "45b4f4d85e5d0c3ef659e797ae8f964b45caa099"
        ],
        [
            "apply: val_inj => /=; elim: n => [|n IHn] //.",
            "VernacExtend",
            "470117b6920bbf0ab181fc70f91f03232cdae40b"
        ],
        [
            "by rewrite expgS /= IHn expnS modnMmr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ZpRing.",
            "VernacEndSegment",
            "d250947f3d04c44804cb684257c0b6e433f3e8b9"
        ],
        [
            "Definition Zp_trunc p := p.-2.",
            "VernacDefinition",
            "155ad5c9d687351535aa622148f58a5618e523b7"
        ],
        [
            "Notation \"''Z_' p\" := 'I_(Zp_trunc p).+2 (at level 8, p at level 2, format \"''Z_' p\") : type_scope.",
            "VernacNotation",
            "e1402f2c659dc881adbf28ac7358d418462008fa"
        ],
        [
            "Notation \"''F_' p\" := 'Z_(pdiv p) (at level 8, p at level 2, format \"''F_' p\") : type_scope.",
            "VernacNotation",
            "0584a8c8ab1e6d4863ecd2d6656226a715c62ca5"
        ],
        [
            "Arguments natr_Zp {p'} x.",
            "VernacArguments",
            "254391e8d27291c271094f6782a48c86eef96271"
        ],
        [
            "Section Groups.",
            "VernacBeginSection",
            "55b7854c700cdb9b1a29c7833e382d7af5a83fa8"
        ],
        [
            "Variable p : nat.",
            "VernacAssumption",
            "981ac4bb8674cf2cc0a9bf436584a314bb426aa4"
        ],
        [
            "Definition Zp := if p > 1 then [set: 'Z_p] else 1%g.",
            "VernacDefinition",
            "b0d3247c7e5e01de36c92a56aa31dbb0d1462a8e"
        ],
        [
            "Definition units_Zp := [set: {unit 'Z_p}].",
            "VernacDefinition",
            "d69470094a7f432470e839be86949d435fdd58ab"
        ],
        [
            "Lemma Zp_cast : p > 1 -> (Zp_trunc p).+2 = p.",
            "VernacStartTheoremProof",
            "ecd7fb259f70b8d60d1fa49f64dce525cffa4867"
        ],
        [
            "by case: p => [|[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_Zp_nat (p_gt1 : p > 1) n : (n%:R : 'Z_p) = (n %% p)%N :> nat.",
            "VernacStartTheoremProof",
            "b0f7d92bd5315bb07bded4642a92475acbcbc781"
        ],
        [
            "by rewrite Zp_nat /= Zp_cast.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_nat_mod (p_gt1 : p > 1)m : (m %% p)%:R = m%:R :> 'Z_p.",
            "VernacStartTheoremProof",
            "bcd972d291771316d53ef0d0c18fc1e6e4330534"
        ],
        [
            "by apply: ord_inj; rewrite !val_Zp_nat // modn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char_Zp : p > 1 -> p%:R = 0 :> 'Z_p.",
            "VernacStartTheoremProof",
            "f5863ef269cd2c91f76f0d69760dbd3383c8e3cd"
        ],
        [
            "by move=> p_gt1; rewrite -Zp_nat_mod ?modnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitZpE x : p > 1 -> ((x%:R : 'Z_p) \\is a GRing.unit) = coprime p x.",
            "VernacStartTheoremProof",
            "39a69cf5eceefe119c96fcbd05f5f63fb1912370"
        ],
        [
            "by move=> p_gt1; rewrite qualifE /= val_Zp_nat ?Zp_cast ?coprime_modr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_group_set : group_set Zp.",
            "VernacStartTheoremProof",
            "3c9b2d13a2d5157087a872e0cd3103d059d6a040"
        ],
        [
            "by rewrite /Zp; case: (p > 1); apply: groupP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Zp_group := Group Zp_group_set.",
            "VernacDefinition",
            "cd45291f3d0086d28a5393cbb3d21593896e21d7"
        ],
        [
            "Lemma card_Zp : p > 0 -> #|Zp| = p.",
            "VernacStartTheoremProof",
            "e79c4b201668bf8b2f5e7e46fcd7a76cde8aad53"
        ],
        [
            "rewrite /Zp; case: p => [|[|p']] //= _; first by rewrite cards1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cardsT card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_Zp x : p > 1 -> x \\in Zp.",
            "VernacStartTheoremProof",
            "8ece025cc19bc9e321f8972d1e487d2d88004e71"
        ],
        [
            "by rewrite /Zp => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical units_Zp_group := [group of units_Zp].",
            "VernacDefinition",
            "5aeb1905b4cf1c73c52e259586547b7e8ac619ad"
        ],
        [
            "Lemma card_units_Zp : p > 0 -> #|units_Zp| = totient p.",
            "VernacStartTheoremProof",
            "f685efcf372e225f1cb71e0252b93db6e8a6621c"
        ],
        [
            "move=> p_gt0; transitivity (totient p.-2.+2); last by case: p p_gt0 => [|[|p']].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite cardsT card_sub -sum1_card big_mkcond /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite totient_count_coprime big_mkord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma units_Zp_abelian : abelian units_Zp.",
            "VernacStartTheoremProof",
            "1c4b2c6c1579d1b896bbf03713c64a5a30305522"
        ],
        [
            "by apply/centsP=> u _ v _; apply: unit_Zp_mulgC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Groups.",
            "VernacEndSegment",
            "bf3141338433583b2c6e4ebb72f712e5f4e0bf88"
        ],
        [
            "Section PrimeField.",
            "VernacBeginSection",
            "4dbf54839913267b6cda4b7604bc24a784ca7fef"
        ],
        [
            "Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "508d3abdb5708930f210cdbb3daabf39f19e68e3"
        ],
        [
            "Variable p : nat.",
            "VernacAssumption",
            "981ac4bb8674cf2cc0a9bf436584a314bb426aa4"
        ],
        [
            "Section F_prime.",
            "VernacBeginSection",
            "930f9eb532d10b6dad704cd5361b4612e9c28761"
        ],
        [
            "Hypothesis p_pr : prime p.",
            "VernacAssumption",
            "e2d4599b8a67f794630e08c38b7de343525977e1"
        ],
        [
            "Lemma Fp_Zcast : (Zp_trunc (pdiv p)).+2 = (Zp_trunc p).+2.",
            "VernacStartTheoremProof",
            "57d787ee9e9c25152e67fbed435542a3eee832e5"
        ],
        [
            "by rewrite /pdiv primes_prime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fp_cast : (Zp_trunc (pdiv p)).+2 = p.",
            "VernacStartTheoremProof",
            "b0db30627c027f8d1549a1019262f42615c3161d"
        ],
        [
            "by rewrite Fp_Zcast ?Zp_cast ?prime_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Fp : #|'F_p| = p.",
            "VernacStartTheoremProof",
            "fa8c3707c470ce0072e39fc81acf7b20feec928b"
        ],
        [
            "by rewrite card_ord Fp_cast.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_Fp_nat n : (n%:R : 'F_p) = (n %% p)%N :> nat.",
            "VernacStartTheoremProof",
            "3171e4c897f25030ffa78f00847c163576613184"
        ],
        [
            "by rewrite Zp_nat /= Fp_cast.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fp_nat_mod m : (m %% p)%:R = m%:R :> 'F_p.",
            "VernacStartTheoremProof",
            "5f652f4ad863a56cad7066ffbe2a68df3897b7e3"
        ],
        [
            "by apply: ord_inj; rewrite !val_Fp_nat // modn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char_Fp : p \\in [char 'F_p].",
            "VernacStartTheoremProof",
            "ac06c671c72730613a82f370174dfe1f35184c62"
        ],
        [
            "by rewrite !inE -Fp_nat_mod p_pr ?modnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char_Fp_0 : p%:R = 0 :> 'F_p.",
            "VernacStartTheoremProof",
            "eec2a5243da2db9046c7517b151dd673305ac741"
        ],
        [
            "exact: GRing.charf0 char_Fp.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitFpE x : ((x%:R : 'F_p) \\is a GRing.unit) = coprime p x.",
            "VernacStartTheoremProof",
            "997c86fa3c930b9f2dfe06e0b83b2706c23d935c"
        ],
        [
            "by rewrite pdiv_id // unitZpE // prime_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End F_prime.",
            "VernacEndSegment",
            "95ff343c56b6a785d06bbe017258e470119631b7"
        ],
        [
            "Lemma Fp_fieldMixin : GRing.Field.mixin_of [the unitRingType of 'F_p].",
            "VernacStartTheoremProof",
            "9afae75ead07648f9d8286aec28f5406f87c9765"
        ],
        [
            "move=> x nzx; rewrite qualifE /= prime_coprime ?gtnNdvd ?lt0n //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: (ltnP 1 p) => [lt1p | ]; last by case: p => [|[|p']].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite Zp_cast ?prime_gt1 ?pdiv_prime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Fp_idomainMixin := FieldIdomainMixin Fp_fieldMixin.",
            "VernacDefinition",
            "c2853dbf828e6d6462edf970c19286664698e725"
        ],
        [
            "Canonical Fp_idomainType := Eval hnf in IdomainType 'F_p Fp_idomainMixin.",
            "VernacDefinition",
            "77e5db8e757f0d3f986385b0f768ec34367b4779"
        ],
        [
            "Canonical Fp_finIdomainType := Eval hnf in [finIdomainType of 'F_p].",
            "VernacDefinition",
            "0e28f1682798f65b2721c248a484de9426f32bf4"
        ],
        [
            "Canonical Fp_fieldType := Eval hnf in FieldType 'F_p Fp_fieldMixin.",
            "VernacDefinition",
            "18b097b151f7aa8cd1fdc79cc216a4e1daa2dfb4"
        ],
        [
            "Canonical Fp_finFieldType := Eval hnf in [finFieldType of 'F_p].",
            "VernacDefinition",
            "2a8739852f9ccae96356a481e62f7d81c7e792e9"
        ],
        [
            "Canonical Fp_decFieldType := Eval hnf in [decFieldType of 'F_p for Fp_finFieldType].",
            "VernacDefinition",
            "c98d0668d8e8df735f82c0c8de175001ce475beb"
        ],
        [
            "End PrimeField.",
            "VernacEndSegment",
            "cfd5987cb375b91f311b36523c058d4f68afee1d"
        ],
        [
            "Canonical Zp_countZmodType m := [countZmodType of 'I_m.+1].",
            "VernacDefinition",
            "9f08c262fe2c114f3e4617354e79169bf7502469"
        ],
        [
            "Canonical Zp_countRingType m := [countRingType of 'I_m.+2].",
            "VernacDefinition",
            "6ad6cd202aa8d774e6eb35fc09cb74b9ccbce55d"
        ],
        [
            "Canonical Zp_countComRingType m := [countComRingType of 'I_m.+2].",
            "VernacDefinition",
            "e333b44ce94f120766c089dffb50e059edd62a56"
        ],
        [
            "Canonical Zp_countUnitRingType m := [countUnitRingType of 'I_m.+2].",
            "VernacDefinition",
            "7dc73f6f72245cc4d2b5cfb4a5ebd07afe03e4ce"
        ],
        [
            "Canonical Zp_countComUnitRingType m := [countComUnitRingType of 'I_m.+2].",
            "VernacDefinition",
            "6f364a47178d587ca938b91f3aed6c1169fb308b"
        ],
        [
            "Canonical Fp_countIdomainType p := [countIdomainType of 'F_p].",
            "VernacDefinition",
            "1018b73e30e9bc640eca8fc3aa82e7b786512c3c"
        ],
        [
            "Canonical Fp_countFieldType p := [countFieldType of 'F_p].",
            "VernacDefinition",
            "01e317a7ca0b5f3ac619ef50e7d4a739a616de38"
        ],
        [
            "Canonical Fp_countDecFieldType p := [countDecFieldType of 'F_p].",
            "VernacDefinition",
            "89e7f48cf172982953bcacbf0740b91a20507041"
        ]
    ],
    "proofs": [
        {
            "name": "modZp",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "by rewrite modn_small ?ltn_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valZpK",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "by apply: val_inj; rewrite /= modZp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_add0z",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "exact: valZpK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_addNz",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "by move=> x; apply: val_inj; rewrite /= modnDml subnK ?modnn // ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_addA",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; apply: val_inj; rewrite /= modnDml modnDmr addnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_addC",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "by move=> x y; apply: val_inj; rewrite /= addnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mul1z",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "by move=> x; apply: val_inj; rewrite /= modnMml mul1n modZp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mulC",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by move=> x y; apply: val_inj; rewrite /= mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mulz1",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by move=> x; rewrite Zp_mulC Zp_mul1z.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mulA",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; apply: val_inj; rewrite /= modnMml modnMmr mulnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mul_addr",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; apply: val_inj; rewrite /= modnMmr modnDm mulnDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mul_addl",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; rewrite -!(Zp_mulC z) Zp_mul_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mulVz",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "move=> co_p_x; apply: val_inj; rewrite /Zp_inv co_p_x /= modnMml.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(chinese_modl co_p_x 1 0) /chinese addn0 mul1n mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mulzV",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "by move=> Ux; rewrite /= Zp_mulC Zp_mulVz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_intro_unit",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "case=> yx1; have:= coprimen1 p.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "by rewrite -coprime_modr -yx1 coprime_modr coprime_mulr; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_inv_out",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "by rewrite /Zp_inv => /negPf->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mulrn",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "apply: val_inj => /=; elim: n => [|n IHn]; first by rewrite muln0 modn_small.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !GRing.mulrS /= IHn modnDmr mulnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_mulgC",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "exact: Zp_addC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_abelian",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "exact: FinRing.zmod_abelian.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_expg",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "exact: Zp_mulrn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp1_expgz",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "by rewrite Zp_expg; apply: Zp_mul1z.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_cycle",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite -[x]Zp1_expgz inE groupX ?mem_gen ?set11.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "order_Zp1",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "by rewrite orderE -Zp_cycle cardsT card_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ord1",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "by case=> [[] // ?]; apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lshift0",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "exact: val_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rshift1",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "by move=> i; apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "case: unliftP => [i'|] -> /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -rshift1 (unsplitK (inr _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(lshift0 n 0) (unsplitK (inl _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "big_ord1",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "by rewrite big_ord_recl big_ord0 Monoid.mulm1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "big_ord1_cond",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "by rewrite big_mkcond big_ord1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_nontrivial",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_nat",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "by apply: val_inj; rewrite [n%:R]Zp_mulrn /= modnMml mul1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natr_Zp",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "by rewrite Zp_nat valZpK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natr_negZp",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "by apply: val_inj; rewrite /= Zp_nat /= modn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unit_Zp_mulgC",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "by move=> u v; apply: val_inj; rewrite /= GRing.mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unit_Zp_expg",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "apply: val_inj => /=; elim: n => [|n IHn] //.",
                        "VernacExtend",
                        "470117b6920bbf0ab181fc70f91f03232cdae40b"
                    ]
                },
                {
                    "command": [
                        "by rewrite expgS /= IHn expnS modnMmr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_cast",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "by case: p => [|[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_Zp_nat",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "by rewrite Zp_nat /= Zp_cast.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_nat_mod",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "by apply: ord_inj; rewrite !val_Zp_nat // modn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_Zp",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "by move=> p_gt1; rewrite -Zp_nat_mod ?modnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitZpE",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "by move=> p_gt1; rewrite qualifE /= val_Zp_nat ?Zp_cast ?coprime_modr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_group_set",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "by rewrite /Zp; case: (p > 1); apply: groupP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Zp",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "rewrite /Zp; case: p => [|[|p']] //= _; first by rewrite cards1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite cardsT card_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_Zp",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "by rewrite /Zp => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_units_Zp",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "move=> p_gt0; transitivity (totient p.-2.+2); last by case: p p_gt0 => [|[|p']].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite cardsT card_sub -sum1_card big_mkcond /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite totient_count_coprime big_mkord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "units_Zp_abelian",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "by apply/centsP=> u _ v _; apply: unit_Zp_mulgC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fp_Zcast",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "by rewrite /pdiv primes_prime.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fp_cast",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "by rewrite Fp_Zcast ?Zp_cast ?prime_gt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Fp",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "by rewrite card_ord Fp_cast.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_Fp_nat",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "by rewrite Zp_nat /= Fp_cast.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fp_nat_mod",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "by apply: ord_inj; rewrite !val_Fp_nat // modn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_Fp",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE -Fp_nat_mod p_pr ?modnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_Fp_0",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "exact: GRing.charf0 char_Fp.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitFpE",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "by rewrite pdiv_id // unitZpE // prime_gt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fp_fieldMixin",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "move=> x nzx; rewrite qualifE /= prime_coprime ?gtnNdvd ?lt0n //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: (ltnP 1 p) => [lt1p | ]; last by case: p => [|[|p']].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite Zp_cast ?prime_gt1 ?pdiv_prime.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}