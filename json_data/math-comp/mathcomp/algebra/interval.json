{
    "filename": "mathcomp/algebra/interval.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq div choice fintype.",
            "VernacRequire",
            "7c784b1aea1e319a7a5f144543a372b8c264860e"
        ],
        [
            "From mathcomp Require Import bigop ssralg finset fingroup zmodp ssrint ssrnum.",
            "VernacRequire",
            "073091fd9b998cd6fb4f5b5d667a3363397e12ee"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Import GRing.Theory Num.Theory.",
            "VernacImport",
            "b7c34fb48ecb00de4262e619b1ca3ecacdf18e53"
        ],
        [
            "Local Notation mid x y := ((x + y) / 2%:R).",
            "VernacSyntacticDefinition",
            "ac99efcf7fef14af7e96d40a00386d3e11d19f50"
        ],
        [
            "Section LersifPo.",
            "VernacBeginSection",
            "0bd712965d7b737b36321ec9d622bb5a6d590ff1"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Definition lersif (x y : R) b := if b then x < y else x <= y.",
            "VernacDefinition",
            "386abbb3e0e17bd205846cefe107b0e04dd1bd5f"
        ],
        [
            "Local Notation \"x <= y ?< 'if' b\" := (lersif x y b) (at level 70, y at next level, format \"x '[hv' <= y '/' ?< 'if' b ']'\") : ring_scope.",
            "VernacNotation",
            "fc5a86db2354f022866942d22627445c301921fd"
        ],
        [
            "Lemma subr_lersifr0 b (x y : R) : (y - x <= 0 ?< if b) = (y <= x ?< if b).",
            "VernacStartTheoremProof",
            "7397258f949db00e0238a8a79fccbfef77285e6d"
        ],
        [
            "by case: b => /=; rewrite subr_lte0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subr_lersif0r b (x y : R) : (0 <= y - x ?< if b) = (x <= y ?< if b).",
            "VernacStartTheoremProof",
            "ced38e666bda94b4f28b7199b7f6ea6dbb32d19c"
        ],
        [
            "by case: b => /=; rewrite subr_gte0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subr_lersif0 := (subr_lersifr0, subr_lersif0r).",
            "VernacDefinition",
            "ae294f929de01674758b34fa2ce2ec3468568a5c"
        ],
        [
            "Lemma lersif_trans x y z b1 b2 : x <= y ?< if b1 -> y <= z ?< if b2 -> x <= z ?< if b1 || b2.",
            "VernacStartTheoremProof",
            "b578059dfca3e2132babd8c4c0865bebc9b2b3c9"
        ],
        [
            "by case: b1 b2 => [] []; apply (ltr_trans, ltr_le_trans, ler_lt_trans, ler_trans).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif01 b : 0 <= 1 ?< if b.",
            "VernacStartTheoremProof",
            "6ba243213f394cecb59ab74a876a6aa72b74ffc8"
        ],
        [
            "by case: b; apply lter01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_anti b1 b2 x y : (x <= y ?< if b1) && (y <= x ?< if b2) = if b1 || b2 then false else x == y.",
            "VernacStartTheoremProof",
            "05b6bf064eaeafe24c924165672e97abfbc7a72c"
        ],
        [
            "by case: b1 b2 => [] []; rewrite lter_anti.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersifxx x b : (x <= x ?< if b) = ~~ b.",
            "VernacStartTheoremProof",
            "7f042218c1f8c56f7f2657c2a3c77121950f2f39"
        ],
        [
            "by case: b; rewrite /= lterr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersifNF x y b : y <= x ?< if ~~ b -> x <= y ?< if b = false.",
            "VernacStartTheoremProof",
            "8ca37cb1ff1f47da14dffbbd9fc8ca775c916e69"
        ],
        [
            "by case: b => /= [/ler_gtF|/ltr_geF].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersifS x y b : x < y -> x <= y ?< if b.",
            "VernacStartTheoremProof",
            "776ff4ee46c6c4821e0c637fccf1bac3acba872b"
        ],
        [
            "by case: b => //= /ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersifT x y : x <= y ?< if true = (x < y).",
            "VernacStartTheoremProof",
            "5a155487a2310f07421e2d70f06908c6a7cf13f0"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersifF x y : x <= y ?< if false = (x <= y).",
            "VernacStartTheoremProof",
            "6048bbef5dfdccaa7441bb2bc8a8b166e83e1221"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_oppl b x y : - x <= y ?< if b = (- y <= x ?< if b).",
            "VernacStartTheoremProof",
            "386cc3bb7773c2f10635dfd962fb5548c2f3b1e3"
        ],
        [
            "by case: b; apply lter_oppl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_oppr b x y : x <= - y ?< if b = (y <= - x ?< if b).",
            "VernacStartTheoremProof",
            "717ee08249b70b948c9db241226c9989e1fb4abe"
        ],
        [
            "by case: b; apply lter_oppr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_0oppr b x : 0 <= - x ?< if b = (x <= 0 ?< if b).",
            "VernacStartTheoremProof",
            "b6a22e1cf7e16fe9939f9a32aab5e10e318cf384"
        ],
        [
            "by case: b; apply (oppr_ge0, oppr_gt0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_oppr0 b x : - x <= 0 ?< if b = (0 <= x ?< if b).",
            "VernacStartTheoremProof",
            "336538bac9b34b7971271583edf0ecd262b2bdb4"
        ],
        [
            "by case: b; apply (oppr_le0, oppr_lt0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_opp2 b : {mono -%R : x y /~ x <= y ?< if b}.",
            "VernacStartTheoremProof",
            "0486c987b035693f155c9ad573d4e7ddfd22dcae"
        ],
        [
            "by case: b; apply lter_opp2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lersif_oppE := (lersif_0oppr, lersif_oppr0, lersif_opp2).",
            "VernacDefinition",
            "e9e4f03daa8004d4f67f6c1fd30a1a12ee4c2b91"
        ],
        [
            "Lemma lersif_add2l b x : {mono +%R x : y z / y <= z ?< if b}.",
            "VernacStartTheoremProof",
            "d8d6606314d4ebae2ea85399d94dcdf75b093055"
        ],
        [
            "by case: b => ? ?; apply lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_add2r b x : {mono +%R^~ x : y z / y <= z ?< if b}.",
            "VernacStartTheoremProof",
            "b7f16a815def7be791f4500cbb7400383eb3f243"
        ],
        [
            "by case: b => ? ?; apply lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lersif_add2 := (lersif_add2l, lersif_add2r).",
            "VernacDefinition",
            "b1c75d9f3548b19b16ae87ee6a9a03f1495f7563"
        ],
        [
            "Lemma lersif_subl_addr b x y z : (x - y <= z ?< if b) = (x <= z + y ?< if b).",
            "VernacStartTheoremProof",
            "b07272f6dca2d0850d7da77fd05ae4ba0448c5db"
        ],
        [
            "by case: b; apply lter_sub_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_subr_addr b x y z : (x <= y - z ?< if b) = (x + z <= y ?< if b).",
            "VernacStartTheoremProof",
            "ff89d8c24672dace77a99e3a3d773298fa221238"
        ],
        [
            "by case: b; apply lter_sub_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lersif_sub_addr := (lersif_subl_addr, lersif_subr_addr).",
            "VernacDefinition",
            "a41b75806ae7b5845cc518899fe47ccea46f1b6c"
        ],
        [
            "Lemma lersif_subl_addl b x y z : (x - y <= z ?< if b) = (x <= y + z ?< if b).",
            "VernacStartTheoremProof",
            "1dce5d091ff0223db2353743520e0576b81805d1"
        ],
        [
            "by case: b; apply lter_sub_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_subr_addl b x y z : (x <= y - z ?< if b) = (z + x <= y ?< if b).",
            "VernacStartTheoremProof",
            "01e7417b52741146035fad2922b7bf35d7d33e27"
        ],
        [
            "by case: b; apply lter_sub_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lersif_sub_addl := (lersif_subl_addl, lersif_subr_addl).",
            "VernacDefinition",
            "8e0ed9664f37f3f64fb744431cf636043d3d98c6"
        ],
        [
            "Lemma lersif_andb x y : {morph lersif x y : p q / p || q >-> p && q}.",
            "VernacStartTheoremProof",
            "dbd9b26cc0bf2f061ae685b732e16dc204a24a44"
        ],
        [
            "by case=> [] [] /=; rewrite ?ler_eqVlt; case: (_ < _)%R; rewrite ?(orbT, orbF, andbF, andbb).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_orb x y : {morph lersif x y : p q / p && q >-> p || q}.",
            "VernacStartTheoremProof",
            "acf40309045d936b457d5f199aa5803d6a5e74d8"
        ],
        [
            "by case=> [] [] /=; rewrite ?ler_eqVlt; case: (_ < _)%R; rewrite ?(orbT, orbF, orbb).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_imply b1 b2 r1 r2 : b2 ==> b1 -> r1 <= r2 ?< if b1 -> r1 <= r2 ?< if b2.",
            "VernacStartTheoremProof",
            "9a6d8e078cae7c23186c142a491f111bdfffba24"
        ],
        [
            "by case: b1 b2 => [] [] //= _ /ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersifW b x y : x <= y ?< if b -> x <= y.",
            "VernacStartTheoremProof",
            "77f541e41566071fd32419fc4b34ea8052724ace"
        ],
        [
            "by case: b => // /ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrW_lersif b x y : x < y -> x <= y ?< if b.",
            "VernacStartTheoremProof",
            "97c8ee43f4a9102d1dbe45ecc2a65cb93863e51e"
        ],
        [
            "by case: b => // /ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_pmul2l b x : 0 < x -> {mono *%R x : y z / y <= z ?< if b}.",
            "VernacStartTheoremProof",
            "6d9b6f75d8e70debe2c1d0cca2699bf553089bbe"
        ],
        [
            "by case: b; apply lter_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_pmul2r b x : 0 < x -> {mono *%R^~ x : y z / y <= z ?< if b}.",
            "VernacStartTheoremProof",
            "caf368fe8ad69d8995a2a2857decfd39fd22e3dd"
        ],
        [
            "by case: b; apply lter_pmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_nmul2l b x : x < 0 -> {mono *%R x : y z /~ y <= z ?< if b}.",
            "VernacStartTheoremProof",
            "299bf9106379a1c95f56bd96142abeceb2d306ac"
        ],
        [
            "by case: b; apply lter_nmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_nmul2r b x : x < 0 -> {mono *%R^~ x : y z /~ y <= z ?< if b}.",
            "VernacStartTheoremProof",
            "f1db2fffb0fe72ca128d6d41be8aaee3774ca23a"
        ],
        [
            "by case: b; apply lter_nmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_lersifN x y b : x \\is Num.real -> y \\is Num.real -> x <= y ?< if ~~b = ~~ (y <= x ?< if b).",
            "VernacStartTheoremProof",
            "ea60b4322c0873c66518e58eb11551addd83410c"
        ],
        [
            "by case: b => [] xR yR /=; case: real_ltrgtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_lersif_norml b x y : x \\is Num.real -> (`|x| <= y ?< if b) = ((- y <= x ?< if b) && (x <= y ?< if b)).",
            "VernacStartTheoremProof",
            "ddb3c9b3d247c80478b0e68f5068cc543532c20b"
        ],
        [
            "by case: b; apply real_lter_norml.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_lersif_normr b x y : y \\is Num.real -> (x <= `|y| ?< if b) = ((x <= y ?< if b) || (x <= - y ?< if b)).",
            "VernacStartTheoremProof",
            "81498502fdf5e1b1dcc2fc2bca669177261204d7"
        ],
        [
            "by case: b; apply real_lter_normr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_nnormr b x y : y <= 0 ?< if ~~ b -> (`|x| <= y ?< if b) = false.",
            "VernacStartTheoremProof",
            "a56a5daf24e60e93d25bebb58511c85345468982"
        ],
        [
            "by case: b => /=; apply lter_nnormr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LersifPo.",
            "VernacEndSegment",
            "ee349452d22dc7bf2b0808603cf6f10582956e9e"
        ],
        [
            "Notation \"x <= y ?< 'if' b\" := (lersif x y b) (at level 70, y at next level, format \"x '[hv' <= y '/' ?< 'if' b ']'\") : ring_scope.",
            "VernacNotation",
            "880ea6f99d99ed7c27c7c9b904cbee2b3abdfaa0"
        ],
        [
            "Section LersifOrdered.",
            "VernacBeginSection",
            "932e81552576b2d04afaa933a50de8a3b4a09072"
        ],
        [
            "Variable (R : realDomainType) (b : bool) (x y z e : R).",
            "VernacAssumption",
            "0f84676ab683d1cbffb83fb557233827a99f57e5"
        ],
        [
            "Lemma lersifN : (x <= y ?< if ~~ b) = ~~ (y <= x ?< if b).",
            "VernacStartTheoremProof",
            "98fd586538e9a1c34939ee9c367ab82d351f476c"
        ],
        [
            "by rewrite real_lersifN ?num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_norml : (`|x| <= y ?< if b) = (- y <= x ?< if b) && (x <= y ?< if b).",
            "VernacStartTheoremProof",
            "45fa1b16a6d00fd1a1542bec57dfb8bcdb9cd66f"
        ],
        [
            "by case: b; apply lter_norml.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_normr : (x <= `|y| ?< if b) = (x <= y ?< if b) || (x <= - y ?< if b).",
            "VernacStartTheoremProof",
            "97f267e07d9aad1210865db07614f17935841104"
        ],
        [
            "by case: b; apply lter_normr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_distl : (`|x - y| <= e ?< if b) = (y - e <= x ?< if b) && (x <= y + e ?< if b).",
            "VernacStartTheoremProof",
            "32c1208d1a600e7acc1bd4f320b96072de0befc0"
        ],
        [
            "by case: b; apply lter_distl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_minr : (x <= Num.min y z ?< if b) = (x <= y ?< if b) && (x <= z ?< if b).",
            "VernacStartTheoremProof",
            "0189988818eb62dd12860fca00ef1e6d8559336f"
        ],
        [
            "by case: b; apply lter_minr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_minl : (Num.min y z <= x ?< if b) = (y <= x ?< if b) || (z <= x ?< if b).",
            "VernacStartTheoremProof",
            "c4f237ae584593c89a58ee59bfb2ca893c392599"
        ],
        [
            "by case: b; apply lter_minl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_maxr : (x <= Num.max y z ?< if b) = (x <= y ?< if b) || (x <= z ?< if b).",
            "VernacStartTheoremProof",
            "cba25791adc79ce2f595b92a65b2eac0658a5264"
        ],
        [
            "by case: b; apply lter_maxr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_maxl : (Num.max y z <= x ?< if b) = (y <= x ?< if b) && (z <= x ?< if b).",
            "VernacStartTheoremProof",
            "e8c0465bb235873506f35ea5d0cf079efa285d5d"
        ],
        [
            "by case: b; apply lter_maxl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LersifOrdered.",
            "VernacEndSegment",
            "7236e2b0684d385ad02857e64a11eae682b740c6"
        ],
        [
            "Section LersifField.",
            "VernacBeginSection",
            "659f319fcfc4772e2573cee328e5a8eb0b00d9f8"
        ],
        [
            "Variable (F : numFieldType) (b : bool) (z x y : F).",
            "VernacAssumption",
            "c848e58670e52fd3c23c89f243789980d004a582"
        ],
        [
            "Lemma lersif_pdivl_mulr : 0 < z -> x <= y / z ?< if b = (x * z <= y ?< if b).",
            "VernacStartTheoremProof",
            "7052c18ac88312110c35c08afb60a6a56925250b"
        ],
        [
            "by case: b => ? /=; rewrite lter_pdivl_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_pdivr_mulr : 0 < z -> y / z <= x ?< if b = (y <= x * z ?< if b).",
            "VernacStartTheoremProof",
            "c6a6f2b7533bcc8e0aea0535276b5b13e6433ca1"
        ],
        [
            "by case: b => ? /=; rewrite lter_pdivr_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_pdivl_mull : 0 < z -> x <= z^-1 * y ?< if b = (z * x <= y ?< if b).",
            "VernacStartTheoremProof",
            "a5fbb9de42ccef6ae5cbadaaa5c8a12ce29bfb59"
        ],
        [
            "by case: b => ? /=; rewrite lter_pdivl_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_pdivr_mull : 0 < z -> z^-1 * y <= x ?< if b = (y <= z * x ?< if b).",
            "VernacStartTheoremProof",
            "89e8d91008c8584362ea3276d72429a869395bea"
        ],
        [
            "by case: b => ? /=; rewrite lter_pdivr_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_ndivl_mulr : z < 0 -> x <= y / z ?< if b = (y <= x * z ?< if b).",
            "VernacStartTheoremProof",
            "0e35271887d7c6b4004a0cf21c9ee7df8da0734f"
        ],
        [
            "by case: b => ? /=; rewrite lter_ndivl_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_ndivr_mulr : z < 0 -> y / z <= x ?< if b = (x * z <= y ?< if b).",
            "VernacStartTheoremProof",
            "1d9895d02a43bf20ef1b694fc82270884f1ff658"
        ],
        [
            "by case: b => ? /=; rewrite lter_ndivr_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_ndivl_mull : z < 0 -> x <= z^-1 * y ?< if b = (y <=z * x ?< if b).",
            "VernacStartTheoremProof",
            "67121652847dac4a5f8a8df88a53c832ac835e22"
        ],
        [
            "by case: b => ? /=; rewrite lter_ndivl_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_ndivr_mull : z < 0 -> z^-1 * y <= x ?< if b = (z * x <= y ?< if b).",
            "VernacStartTheoremProof",
            "0da65a58b98ff4c1d212bc75b000e32bbf8b7528"
        ],
        [
            "by case: b => ? /=; rewrite lter_ndivr_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LersifField.",
            "VernacEndSegment",
            "5268b2bb6275522f9f8d2870d7553691a775bf3d"
        ],
        [
            "Variant itv_bound (T : Type) : Type := BOpen_if of bool & T | BInfty.",
            "VernacInductive",
            "9ec0126e8baff9b9c319a0b146179281457f96a9"
        ],
        [
            "Notation BOpen := (BOpen_if true).",
            "VernacSyntacticDefinition",
            "8d55504b833a0b2cccbbb169dea82c020fe217f7"
        ],
        [
            "Notation BClose := (BOpen_if false).",
            "VernacSyntacticDefinition",
            "75976b4698ca07a4471961f6754063b5eea4cf2f"
        ],
        [
            "Variant interval (T : Type) := Interval of itv_bound T & itv_bound T.",
            "VernacInductive",
            "2490a714fdf3242da0edbe920a3d12ad74eb3bcf"
        ],
        [
            "Notation \"`[ a , b ]\" := (Interval (BClose a) (BClose b)) (at level 0, a, b at level 9 , format \"`[ a , b ]\") : ring_scope.",
            "VernacNotation",
            "d549bb6ed395ecfad08e86ed771256c70e055376"
        ],
        [
            "Notation \"`] a , b ]\" := (Interval (BOpen a) (BClose b)) (at level 0, a, b at level 9 , format \"`] a , b ]\") : ring_scope.",
            "VernacNotation",
            "1d894982c38fe2ecc4d958f06698bd769d82cfc0"
        ],
        [
            "Notation \"`[ a , b [\" := (Interval (BClose a) (BOpen b)) (at level 0, a, b at level 9 , format \"`[ a , b [\") : ring_scope.",
            "VernacNotation",
            "64f46d6abfcb5af05a60fedc76e942c66bca2b98"
        ],
        [
            "Notation \"`] a , b [\" := (Interval (BOpen a) (BOpen b)) (at level 0, a, b at level 9 , format \"`] a , b [\") : ring_scope.",
            "VernacNotation",
            "51ffa660b11a51b11567fc0025d0b7f6f8a65d46"
        ],
        [
            "Notation \"`] '-oo' , b ]\" := (Interval (BInfty _) (BClose b)) (at level 0, b at level 9 , format \"`] '-oo' , b ]\") : ring_scope.",
            "VernacNotation",
            "cc135428a5e649855701bb46274992b3e87a3a9c"
        ],
        [
            "Notation \"`] '-oo' , b [\" := (Interval (BInfty _) (BOpen b)) (at level 0, b at level 9 , format \"`] '-oo' , b [\") : ring_scope.",
            "VernacNotation",
            "d35ad79567b916a36f0c1fc146d3d02bf2322d6e"
        ],
        [
            "Notation \"`[ a , '+oo' [\" := (Interval (BClose a) (BInfty _)) (at level 0, a at level 9 , format \"`[ a , '+oo' [\") : ring_scope.",
            "VernacNotation",
            "610ed7ea829545fae11d6b8cf5bcc1c10755ac13"
        ],
        [
            "Notation \"`] a , '+oo' [\" := (Interval (BOpen a) (BInfty _)) (at level 0, a at level 9 , format \"`] a , '+oo' [\") : ring_scope.",
            "VernacNotation",
            "3ce2a514a973147e2e533109a499f5d1df5eec0c"
        ],
        [
            "Notation \"`] -oo , '+oo' [\" := (Interval (BInfty _) (BInfty _)) (at level 0, format \"`] -oo , '+oo' [\") : ring_scope.",
            "VernacNotation",
            "1241ed047ef0b3410ffab734e0d62fb72f2dc6d2"
        ],
        [
            "Section IntervalEq.",
            "VernacBeginSection",
            "6d7345ae20e1f036eb3bdd2d26d801d62ef4ad87"
        ],
        [
            "Variable T : eqType.",
            "VernacAssumption",
            "2ceeb4536776ca324e5be084d2deb4d476694ef1"
        ],
        [
            "Definition eq_itv_bound (b1 b2 : itv_bound T) : bool := match b1, b2 with | BOpen_if a x, BOpen_if b y => (a == b) && (x == y) | BInfty, BInfty => true | _, _ => false end.",
            "VernacDefinition",
            "cab38d8372eb33c1fd7bfc4d1fa4f9481149119d"
        ],
        [
            "Lemma eq_itv_boundP : Equality.axiom eq_itv_bound.",
            "VernacStartTheoremProof",
            "76e4aa8d9a7152bc50248ea3bbcef637f394d8b2"
        ],
        [
            "move=> b1 b2; apply: (iffP idP).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: b1 b2 => [a x |] [b y |] => //= /andP [] /eqP -> /eqP ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> <-; case: b1 => //= a x; rewrite !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical itv_bound_eqMixin := EqMixin eq_itv_boundP.",
            "VernacDefinition",
            "d82a770fdea8bdc494c48da854205dd08fd5d2c4"
        ],
        [
            "Canonical itv_bound_eqType := Eval hnf in EqType (itv_bound T) itv_bound_eqMixin.",
            "VernacDefinition",
            "a98c4d5fe6c5611666d2cdb3ff9e50fe796f401f"
        ],
        [
            "Definition eqitv (x y : interval T) : bool := let: Interval x x' := x in let: Interval y y' := y in (x == y) && (x' == y').",
            "VernacDefinition",
            "fa282f5c9e6b61b3843d9957570f8df2534c2ff5"
        ],
        [
            "Lemma eqitvP : Equality.axiom eqitv.",
            "VernacStartTheoremProof",
            "bfb357b613d06cfeab4ad8e426a6e197e55bf24d"
        ],
        [
            "move=> x y; apply: (iffP idP).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: x y => [x x'] [y y'] => //= /andP [] /eqP -> /eqP ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> <-; case: x => /= x x'; rewrite !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical interval_eqMixin := EqMixin eqitvP.",
            "VernacDefinition",
            "f9156ff05756b425363958f4b78ce2979a4716a4"
        ],
        [
            "Canonical interval_eqType := Eval hnf in EqType (interval T) interval_eqMixin.",
            "VernacDefinition",
            "8f9eccd9676d25dcb9e4e87c530d9a4128145ff9"
        ],
        [
            "End IntervalEq.",
            "VernacEndSegment",
            "ffc0372ccd0515bc6f49f0c4de4da488bb3723a5"
        ],
        [
            "Section IntervalPo.",
            "VernacBeginSection",
            "501cdaf1088656672cba5ef97a85d80b2cbbd4bc"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Definition pred_of_itv (i : interval R) : pred R := [pred x | let: Interval l u := i in match l with | BOpen_if b lb => lb <= x ?< if b | BInfty => true end && match u with | BOpen_if b ub => x <= ub ?< if b | BInfty => true end].",
            "VernacDefinition",
            "a952fa161e9941b5869fbdf3310631aff6314a12"
        ],
        [
            "Canonical Structure itvPredType := Eval hnf in mkPredType pred_of_itv.",
            "VernacDefinition",
            "57cfb4f7d67480c7461dc9477c53d9264695323a"
        ],
        [
            "Definition itv_rewrite (i : interval R) x : Type := let: Interval l u := i in (match l with | BClose a => (a <= x) * (x < a = false) | BOpen a => (a <= x) * (a < x) * (x <= a = false) * (x < a = false) | BInfty => forall x : R, x == x end * match u with | BClose b => (x <= b) * (b < x = false) | BOpen b => (x <= b) * (x < b) * (b <= x = false) * (b < x = false) | BInfty => forall x : R, x == x end * match l, u with | BClose a, BClose b => (a <= b) * (b < a = false) * (a \\in `[a, b]) * (b \\in `[a, b]) | BClose a, BOpen b => (a <= b) * (a < b) * (b <= a = false) * (b < a = false) * (a \\in `[a, b]) * (a \\in `[a, b[)* (b \\in `[a, b]) * (b \\in `]a, b]) | BOpen a, BClose b => (a <= b) * (a < b) * (b <= a = false) * (b < a = false) * (a \\in `[a, b]) * (a \\in `[a, b[)* (b \\in `[a, b]) * (b \\in `]a, b]) | BOpen a, BOpen b => (a <= b) * (a < b) * (b <= a = false) * (b < a = false) * (a \\in `[a, b]) * (a \\in `[a, b[)* (b \\in `[a, b]) * (b \\in `]a, b]) | _, _ => forall x : R, x == x end)%type.",
            "VernacDefinition",
            "9cf7982ad9dea15d2d1295929c75163041e46732"
        ],
        [
            "Definition itv_decompose (i : interval R) x : Prop := let: Interval l u := i in ((match l with | BOpen_if b lb => (lb <= x ?< if b) : Prop | BInfty => True end : Prop) * (match u with | BOpen_if b ub => (x <= ub ?< if b) : Prop | BInfty => True end : Prop))%type.",
            "VernacDefinition",
            "0000007678fb3439fc361c141e991fe991cc0904"
        ],
        [
            "Lemma itv_dec : forall (x : R) (i : interval R), reflect (itv_decompose i x) (x \\in i).",
            "VernacStartTheoremProof",
            "4315669af23a46f04517978a904b5012a5a904d5"
        ],
        [
            "by move=> ? [[? ?|] [? ?|]]; apply: (iffP andP); case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments itv_dec {x i}.",
            "VernacArguments",
            "16cbd36a3f9789c1338015ca0c4a2e74771d4e9e"
        ],
        [
            "Definition le_boundl (b1 b2 : itv_bound R) := match b1, b2 with | BOpen_if b1 x1, BOpen_if b2 x2 => x1 <= x2 ?< if ~~ b2 && b1 | BOpen_if _ _, BInfty => false | _, _ => true end.",
            "VernacDefinition",
            "7c87d0d0e93acc96ab828007629fe625554e304c"
        ],
        [
            "Definition le_boundr (b1 b2 : itv_bound R) := match b1, b2 with | BOpen_if b1 x1, BOpen_if b2 x2 => x1 <= x2 ?< if ~~ b1 && b2 | BInfty, BOpen_if _ _ => false | _, _ => true end.",
            "VernacDefinition",
            "6d598e74d1413ec77c093ddcfd969b5e5ad6aa13"
        ],
        [
            "Lemma itv_boundlr bl br x : (x \\in Interval bl br) = (le_boundl bl (BClose x)) && (le_boundr (BClose x) br).",
            "VernacStartTheoremProof",
            "e66763a7c89cee202305f4368360cea5578960b3"
        ],
        [
            "by case: bl br => [? ? |] [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_boundl_refl : reflexive le_boundl.",
            "VernacStartTheoremProof",
            "a85f5fc490824a42d9232e7eaa9c2e29e98bdb2f"
        ],
        [
            "by move=> [[] b|]; rewrite /le_boundl /= ?lerr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve le_boundl_refl : core.",
            "VernacHints",
            "a1c63cc9f6c53722532efd7f6f88d03e05e21363"
        ],
        [
            "Lemma le_boundr_refl : reflexive le_boundr.",
            "VernacStartTheoremProof",
            "26fe59d764744ec42d006dd8b78cc07c3b43b708"
        ],
        [
            "by move=> [[] b|]; rewrite /le_boundr /= ?lerr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve le_boundr_refl : core.",
            "VernacHints",
            "2a57a9ee7dcfbdc5a9d5560321ac98cf6e34af88"
        ],
        [
            "Lemma le_boundl_trans : transitive le_boundl.",
            "VernacStartTheoremProof",
            "a321db3e8e99b5890729832543ac4fb3289df541"
        ],
        [
            "by move=> [[] x|] [[] y|] [[] z|] lexy leyz //; apply: (lersif_imply _ (lersif_trans lexy leyz)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_boundr_trans : transitive le_boundr.",
            "VernacStartTheoremProof",
            "86b88572973eaceccf0c35ae7ec22f87f1414be8"
        ],
        [
            "by move=> [[] x|] [[] y|] [[] z|] lexy leyz //; apply: (lersif_imply _ (lersif_trans lexy leyz)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_boundl_bb x b1 b2 : le_boundl (BOpen_if b1 x) (BOpen_if b2 x) = (b1 ==> b2).",
            "VernacStartTheoremProof",
            "5bae522b5a7deb8e33b47e5eaf33a4217b86ae31"
        ],
        [
            "by rewrite /le_boundl lersifxx andbC negb_and negbK implybE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_boundr_bb x b1 b2 : le_boundr (BOpen_if b1 x) (BOpen_if b2 x) = (b2 ==> b1).",
            "VernacStartTheoremProof",
            "129ee17b0e2cf179e7c6c5840a920444086a56a8"
        ],
        [
            "by rewrite /le_boundr lersifxx andbC negb_and negbK implybE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_boundl_anti b1 b2 : (le_boundl b1 b2 && le_boundl b2 b1) = (b1 == b2).",
            "VernacStartTheoremProof",
            "754fc4795300f7f0583863a136e05d4141c1ecb3"
        ],
        [
            "by case: b1 b2 => [[] lr1 |] [[] lr2 |] //; rewrite lersif_anti.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_boundr_anti b1 b2 : (le_boundr b1 b2 && le_boundr b2 b1) = (b1 == b2).",
            "VernacStartTheoremProof",
            "be1059e5ca478159c82ddad919873e39c30e1b53"
        ],
        [
            "by case: b1 b2 => [[] lr1 |] [[] lr2 |] //; rewrite lersif_anti.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma itv_xx x bl br : Interval (BOpen_if bl x) (BOpen_if br x) =i if ~~ (bl || br) then pred1 x else pred0.",
            "VernacStartTheoremProof",
            "c4bf780b4b23340cc78fafc71b6951f8e162ac5b"
        ],
        [
            "by move: bl br => [] [] y /=; rewrite !inE lersif_anti.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma itv_gte ba xa bb xb : xb <= xa ?< if ~~ (ba || bb) -> Interval (BOpen_if ba xa) (BOpen_if bb xb) =i pred0.",
            "VernacStartTheoremProof",
            "62f4b2306d8123b3b37ba430a85ce807e244bef7"
        ],
        [
            "move=> ? y; rewrite itv_boundlr inE /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply/negP => /andP [] lexay /(lersif_trans lexay); rewrite lersifNF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma boundl_in_itv : forall ba xa b, xa \\in Interval (BOpen_if ba xa) b = if ba then false else le_boundr (BClose xa) b.",
            "VernacStartTheoremProof",
            "e108092cafc90a2e41e707d703388abb02ef0280"
        ],
        [
            "by move=> [] xa [b xb|]; rewrite inE lersifxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma boundr_in_itv : forall bb xb a, xb \\in Interval a (BOpen_if bb xb) = if bb then false else le_boundl a (BClose xb).",
            "VernacStartTheoremProof",
            "d203dbb6423c8ca8eeb7d0e122275af47586ea84"
        ],
        [
            "by move=> [] xb [b xa|]; rewrite inE lersifxx /= ?andbT ?andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bound_in_itv := (boundl_in_itv, boundr_in_itv).",
            "VernacDefinition",
            "e21a2c084482a9e49601b65f4180cafd734caf91"
        ],
        [
            "Lemma itvP : forall (x : R) (i : interval R), x \\in i -> itv_rewrite i x.",
            "VernacStartTheoremProof",
            "4b32c17b1280ce330d7d10e340e4f60e3a408a93"
        ],
        [
            "move=> x [[[] a|] [[] b|]] /itv_dec // [? ?]; do ?split => //; rewrite ?bound_in_itv /le_boundl /le_boundr //=; do 1?[apply/negbTE; rewrite (ler_gtF, ltr_geF) //]; by [ rewrite ltrW | rewrite (@ler_trans _ x) // 1?ltrW | rewrite (@ltr_le_trans _ x) | rewrite (@ler_lt_trans _ x) // 1?ltrW ].",
            "VernacExtend",
            "26b7864288a7b3c4603721cb3ad10bfe9c93b5a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite intP : core.",
            "VernacExtend",
            "d7e2eef82fa6d195151429f8590bdd31a1f59eb0"
        ],
        [
            "Arguments itvP [x i].",
            "VernacArguments",
            "758ceb3ac1dcabe76f5bd71a136201dc5efd173f"
        ],
        [
            "Definition itv_intersection (x y : interval R) : interval R := let: Interval x x' := x in let: Interval y y' := y in Interval (if le_boundl x y then y else x) (if le_boundr x' y' then x' else y').",
            "VernacDefinition",
            "aa708aeef7bb52af4fd3682da99bb20c508a7c83"
        ],
        [
            "Definition itv_intersection1i : left_id `]-oo, +oo[ itv_intersection.",
            "VernacDefinition",
            "b3e667ddb7af1ada9affe684b83b359de4415494"
        ],
        [
            "by case=> i [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition itv_intersectioni1 : right_id `]-oo, +oo[ itv_intersection.",
            "VernacDefinition",
            "a9cf30955f4ad4f0e465fb237aac85780f0769a9"
        ],
        [
            "by case=> [[lb lr |] [ub ur |]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma itv_intersectionii : idempotent itv_intersection.",
            "VernacStartTheoremProof",
            "331020c5bfa002033fdb15272b98a8b0a5c69b2d"
        ],
        [
            "by case=> [[[] lr |] [[] ur |]] //=; rewrite !lerr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subitv (i1 i2 : interval R) := match i1, i2 with | Interval a1 b1, Interval a2 b2 => le_boundl a2 a1 && le_boundr b1 b2 end.",
            "VernacDefinition",
            "9fe2b377e515dd133a4f5214abeb3610c243ad3d"
        ],
        [
            "Lemma subitvP : forall (i2 i1 : interval R), subitv i1 i2 -> {subset i1 <= i2}.",
            "VernacStartTheoremProof",
            "630e732ba5786fb6bec81110b59079b05c41d877"
        ],
        [
            "by move=> [[b2 l2|] [b2' u2|]] [[b1 l1|] [b1' u1|]] /andP [] /= ha hb x /andP [ha' hb']; apply/andP; split => //; (apply/lersif_imply: (lersif_trans ha ha'); case: b1 b2 ha ha' => [] []) || (apply/lersif_imply: (lersif_trans hb' hb); case: b1' b2' hb hb' => [] []).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subitvPr (a b1 b2 : itv_bound R) : le_boundr b1 b2 -> {subset (Interval a b1) <= (Interval a b2)}.",
            "VernacStartTheoremProof",
            "647554ff52372cd6073212d108821b421ff1a1f3"
        ],
        [
            "by move=> leb; apply: subitvP; rewrite /= leb andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subitvPl (a1 a2 b : itv_bound R) : le_boundl a2 a1 -> {subset (Interval a1 b) <= (Interval a2 b)}.",
            "VernacStartTheoremProof",
            "ac94c621984319689033e01c99afc242f460a096"
        ],
        [
            "by move=> lea; apply: subitvP; rewrite /= lea /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lersif_in_itv ba bb xa xb x : x \\in Interval (BOpen_if ba xa) (BOpen_if bb xb) -> xa <= xb ?< if ba || bb.",
            "VernacStartTheoremProof",
            "6e69158fe906e6d79d3539dd1ef6fbd801970a60"
        ],
        [
            "by case: ba bb => [] [] /itvP /= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_in_itv ba bb xa xb x : ba || bb -> x \\in Interval (BOpen_if ba xa) (BOpen_if bb xb) -> xa < xb.",
            "VernacStartTheoremProof",
            "ec049a2a1ac985f0064d8565899f2d47308eab7e"
        ],
        [
            "by move=> bab /lersif_in_itv; rewrite bab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_in_itv ba bb xa xb x : x \\in Interval (BOpen_if ba xa) (BOpen_if bb xb) -> xa <= xb.",
            "VernacStartTheoremProof",
            "2cdb601d8cd0ed3fbe3d75819344b70a80ab76d4"
        ],
        [
            "by move/lersif_in_itv/lersifW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem0_itvcc_xNx x : (0 \\in `[-x, x]) = (0 <= x).",
            "VernacStartTheoremProof",
            "81943ea830b8651dcc758316d8f2929ddd95bd09"
        ],
        [
            "by rewrite !inE /= oppr_le0 andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem0_itvoo_xNx x : 0 \\in `](-x), x[ = (0 < x).",
            "VernacStartTheoremProof",
            "a1fadf44067abf242969a6b4dd7c745607e9aee8"
        ],
        [
            "by rewrite !inE /= oppr_lt0 andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma itv_splitI : forall a b x, x \\in Interval a b = (x \\in Interval a (BInfty _)) && (x \\in Interval (BInfty _) b).",
            "VernacStartTheoremProof",
            "384657d3e1d5a922ed379bf4d301252644005afa"
        ],
        [
            "by move=> [? ?|] [? ?|] ?; rewrite !inE ?andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_itv ba bb (xa xb x : R) : (-x \\in Interval (BOpen_if ba xa) (BOpen_if bb xb)) = (x \\in Interval (BOpen_if bb (-xb)) (BOpen_if ba (-xa))).",
            "VernacStartTheoremProof",
            "165bc6b2e4f29e41b9ed75ac86594323bd5741ca"
        ],
        [
            "by rewrite !inE lersif_oppr andbC lersif_oppl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_itvoo (a b x : R) : (-x \\in `]a, b[) = (x \\in `](-b), (-a)[).",
            "VernacStartTheoremProof",
            "b8521c0870982517f9dcebc43d8494a3ae6fb0e7"
        ],
        [
            "exact: oppr_itv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_itvco (a b x : R) : (-x \\in `[a, b[) = (x \\in `](-b), (-a)]).",
            "VernacStartTheoremProof",
            "2131f4dadbe57b49b839003fa9755c31d5d80fda"
        ],
        [
            "exact: oppr_itv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_itvoc (a b x : R) : (-x \\in `]a, b]) = (x \\in `[(-b), (-a)[).",
            "VernacStartTheoremProof",
            "1a3dc927e4b29200f5ab8feb02505fa45b01e010"
        ],
        [
            "exact: oppr_itv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_itvcc (a b x : R) : (-x \\in `[a, b]) = (x \\in `[(-b), (-a)]).",
            "VernacStartTheoremProof",
            "69e324c4899f52575b55baf143919b6bcc0d22c7"
        ],
        [
            "exact: oppr_itv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IntervalPo.",
            "VernacEndSegment",
            "f2d95646d8a1df0a5d7d9972739c231c81e78780"
        ],
        [
            "Section IntervalOrdered.",
            "VernacBeginSection",
            "da138df19f029dd0517d8079783aa3e1ec054329"
        ],
        [
            "Variable R : realDomainType.",
            "VernacAssumption",
            "0693f35b06db2e27c7cf58627c33e70282f912ba"
        ],
        [
            "Lemma le_boundl_total : total (@le_boundl R).",
            "VernacStartTheoremProof",
            "a9e6f0a1881258b1c6092311fd6e97f6fa22f06e"
        ],
        [
            "by move=> [[] l |] [[] r |] //=; case: (ltrgtP l r).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_boundr_total : total (@le_boundr R).",
            "VernacStartTheoremProof",
            "76d590ed30d60ec407e875a1ddfdaa3774c2f660"
        ],
        [
            "by move=> [[] l |] [[] r |] //=; case (ltrgtP l r).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma itv_splitU (xc : R) bc a b : xc \\in Interval a b -> forall y, y \\in Interval a b = (y \\in Interval a (BOpen_if (~~ bc) xc)) || (y \\in Interval (BOpen_if bc xc) b).",
            "VernacStartTheoremProof",
            "b09b61c0ed29193a40491028bb45a6eaf82492c2"
        ],
        [
            "move=> xc_in y; move: xc_in.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite !itv_boundlr [le_boundr (BClose _) (BOpen_if _ _)]/= [le_boundr]lock /= lersifN -lock.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/andP => leaxc lexcb; case: (boolP (le_boundl a _)) => leay; case: (boolP (le_boundr _ b)) => leyb; rewrite /= (andbT, andbF) ?orbF ?orNb //=; [apply/esym/negbF | apply/esym/negbTE].",
            "VernacExtend",
            "8f4dfaf5ccd83ec53de14237eef78284b053609f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: b lexcb leyb => //= bb b; rewrite -lersifN => lexcb leyb; apply/lersif_imply: (lersif_trans lexcb leyb); rewrite orbN implybT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: a leaxc leay => //= ab a leaxc; apply/contra => /(lersif_trans leaxc); apply/lersif_imply; rewrite implybE orbA orNb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma itv_splitU2 (x : R) a b : x \\in Interval a b -> forall y, y \\in Interval a b = [|| (y \\in Interval a (BOpen x)), (y == x) | (y \\in Interval (BOpen x) b)].",
            "VernacStartTheoremProof",
            "f33c7f6743f753e95f3a74893a96c8489ba7b548"
        ],
        [
            "move=> xab y; rewrite (itv_splitU false xab y); congr (_ || _).",
            "VernacExtend",
            "485e46f06ecb626ff6a640f6969694ae3ffba974"
        ],
        [
            "rewrite (@itv_splitU x true _ _ _ y); first by rewrite itv_xx inE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move: xab; rewrite boundl_in_itv itv_boundlr => /andP [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma itv_intersectionC : commutative (@itv_intersection R).",
            "VernacStartTheoremProof",
            "4baa75c7989e1710f86251fbb8a6a69bcc4b66c4"
        ],
        [
            "move=> [x x'] [y y'] /=; congr Interval; do 2 case: ifP => //=.",
            "VernacExtend",
            "c76a1b92f2ca02cc121461766bb80a8ab2ce70e1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> leyx lexy; apply/eqP; rewrite -le_boundl_anti leyx lexy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case/orP: (le_boundl_total x y) => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> leyx' lexy'; apply/eqP; rewrite -le_boundr_anti leyx' lexy'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case/orP: (le_boundr_total x' y') => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma itv_intersectionA : associative (@itv_intersection R).",
            "VernacStartTheoremProof",
            "da3969ad2d5713f32176a4d62d89ddf721da7e26"
        ],
        [
            "move=> [x x'] [y y'] [z z'] /=; congr Interval; do !case: ifP => //=; do 1?congruence.",
            "VernacExtend",
            "2053f373ffadd08a006f37d1f429319f0614d83f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> lexy leyz; rewrite (le_boundl_trans lexy leyz).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> gtxy lexz gtyz _; apply/eqP; rewrite -le_boundl_anti lexz /=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "move: (le_boundl_total y z) (le_boundl_total x y).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite gtxy gtyz; apply: le_boundl_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> lexy' gtxz' leyz'; rewrite (le_boundr_trans lexy' leyz') in gtxz'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> gtxy' gtyz' _ lexz'; apply/eqP; rewrite -le_boundr_anti lexz' /=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "move: (le_boundr_total y' z') (le_boundr_total x' y').",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite gtxy' gtyz'; apply: le_boundr_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical itv_intersection_monoid := Monoid.Law itv_intersectionA (@itv_intersection1i R) (@itv_intersectioni1 R).",
            "VernacDefinition",
            "c3a0911c7f1ac7cc2908bf6a6ff70fd0071dea0a"
        ],
        [
            "Canonical itv_intersection_comoid := Monoid.ComLaw itv_intersectionC.",
            "VernacDefinition",
            "07276b51e7c27219c296caf8bd9d76fd1b244cef"
        ],
        [
            "End IntervalOrdered.",
            "VernacEndSegment",
            "965cd4e3c378bf7d08a4be813ec6d76d2f31cff3"
        ],
        [
            "Section IntervalField.",
            "VernacBeginSection",
            "535c1a12b485aa50c723b42a11ce839991aaaa02"
        ],
        [
            "Variable R : realFieldType.",
            "VernacAssumption",
            "2ec8fa3b764d568880ba283a56fc160c854db4c6"
        ],
        [
            "Lemma mid_in_itv : forall ba bb (xa xb : R), xa <= xb ?< if ba || bb -> mid xa xb \\in Interval (BOpen_if ba xa) (BOpen_if bb xb).",
            "VernacStartTheoremProof",
            "e7ffa64d49d97022891390e2e98d829b62f93fde"
        ],
        [
            "by move=> [] [] xa xb /= ?; apply/itv_dec=> /=; rewrite ?midf_lte // ?ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mid_in_itvoo : forall (xa xb : R), xa < xb -> mid xa xb \\in `]xa, xb[.",
            "VernacStartTheoremProof",
            "f2ab6cca5f591557b360f289e14eea12d2184023"
        ],
        [
            "by move=> xa xb ?; apply: mid_in_itv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mid_in_itvcc : forall (xa xb : R), xa <= xb -> mid xa xb \\in `[xa, xb].",
            "VernacStartTheoremProof",
            "cdac63878d3bbe77edc830a26c763268a6123de3"
        ],
        [
            "by move=> xa xb ?; apply: mid_in_itv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IntervalField.",
            "VernacEndSegment",
            "5b605a2221a690ae440ddbda42fd5ab6dfc37520"
        ]
    ],
    "proofs": [
        {
            "name": "subr_lersifr0",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "by case: b => /=; rewrite subr_lte0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subr_lersif0r",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "by case: b => /=; rewrite subr_gte0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_trans",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "by case: b1 b2 => [] []; apply (ltr_trans, ltr_le_trans, ler_lt_trans, ler_trans).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif01",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_anti",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "by case: b1 b2 => [] []; rewrite lter_anti.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersifxx",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "by case: b; rewrite /= lterr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersifNF",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "by case: b => /= [/ler_gtF|/ltr_geF].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersifS",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "by case: b => //= /ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersifT",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersifF",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_oppl",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_oppl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_oppr",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_oppr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_0oppr",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by case: b; apply (oppr_ge0, oppr_gt0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_oppr0",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "by case: b; apply (oppr_le0, oppr_lt0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_opp2",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_opp2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_add2l",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "by case: b => ? ?; apply lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_add2r",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "by case: b => ? ?; apply lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_subl_addr",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_sub_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_subr_addr",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_sub_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_subl_addl",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_sub_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_subr_addl",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_sub_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_andb",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "by case=> [] [] /=; rewrite ?ler_eqVlt; case: (_ < _)%R; rewrite ?(orbT, orbF, andbF, andbb).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_orb",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "by case=> [] [] /=; rewrite ?ler_eqVlt; case: (_ < _)%R; rewrite ?(orbT, orbF, orbb).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_imply",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "by case: b1 b2 => [] [] //= _ /ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersifW",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "by case: b => // /ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrW_lersif",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "by case: b => // /ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_pmul2l",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_pmul2r",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_pmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_nmul2l",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_nmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_nmul2r",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_nmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lersifN",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "by case: b => [] xR yR /=; case: real_ltrgtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lersif_norml",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "by case: b; apply real_lter_norml.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lersif_normr",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "by case: b; apply real_lter_normr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_nnormr",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "by case: b => /=; apply lter_nnormr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersifN",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "by rewrite real_lersifN ?num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_norml",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_norml.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_normr",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_normr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_distl",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_distl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_minr",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_minr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_minl",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_minl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_maxr",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_maxr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_maxl",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "by case: b; apply lter_maxl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_pdivl_mulr",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "by case: b => ? /=; rewrite lter_pdivl_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_pdivr_mulr",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "by case: b => ? /=; rewrite lter_pdivr_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_pdivl_mull",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "by case: b => ? /=; rewrite lter_pdivl_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_pdivr_mull",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "by case: b => ? /=; rewrite lter_pdivr_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_ndivl_mulr",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "by case: b => ? /=; rewrite lter_ndivl_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_ndivr_mulr",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "by case: b => ? /=; rewrite lter_ndivr_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_ndivl_mull",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "by case: b => ? /=; rewrite lter_ndivl_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_ndivr_mull",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "by case: b => ? /=; rewrite lter_ndivr_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_dec",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "by move=> ? [[? ?|] [? ?|]]; apply: (iffP andP); case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_boundlr",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "by case: bl br => [? ? |] [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundl_refl",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "by move=> [[] b|]; rewrite /le_boundl /= ?lerr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundr_refl",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "by move=> [[] b|]; rewrite /le_boundr /= ?lerr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundl_trans",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "by move=> [[] x|] [[] y|] [[] z|] lexy leyz //; apply: (lersif_imply _ (lersif_trans lexy leyz)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundr_trans",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "by move=> [[] x|] [[] y|] [[] z|] lexy leyz //; apply: (lersif_imply _ (lersif_trans lexy leyz)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundl_bb",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "by rewrite /le_boundl lersifxx andbC negb_and negbK implybE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundr_bb",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "by rewrite /le_boundr lersifxx andbC negb_and negbK implybE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundl_anti",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "by case: b1 b2 => [[] lr1 |] [[] lr2 |] //; rewrite lersif_anti.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundr_anti",
            "line_nb": 250,
            "steps": [
                {
                    "command": [
                        "by case: b1 b2 => [[] lr1 |] [[] lr2 |] //; rewrite lersif_anti.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_xx",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "by move: bl br => [] [] y /=; rewrite !inE lersif_anti.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_gte",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "move=> ? y; rewrite itv_boundlr inE /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply/negP => /andP [] lexay /(lersif_trans lexay); rewrite lersifNF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "boundl_in_itv",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "by move=> [] xa [b xb|]; rewrite inE lersifxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "boundr_in_itv",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "by move=> [] xb [b xa|]; rewrite inE lersifxx /= ?andbT ?andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itvP",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "move=> x [[[] a|] [[] b|]] /itv_dec // [? ?]; do ?split => //; rewrite ?bound_in_itv /le_boundl /le_boundr //=; do 1?[apply/negbTE; rewrite (ler_gtF, ltr_geF) //]; by [ rewrite ltrW | rewrite (@ler_trans _ x) // 1?ltrW | rewrite (@ltr_le_trans _ x) | rewrite (@ler_lt_trans _ x) // 1?ltrW ].",
                        "VernacExtend",
                        "26b7864288a7b3c4603721cb3ad10bfe9c93b5a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_intersection1i",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "by case=> i [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_intersectioni1",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "by case=> [[lb lr |] [ub ur |]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_intersectionii",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "by case=> [[[] lr |] [[] ur |]] //=; rewrite !lerr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subitvP",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "by move=> [[b2 l2|] [b2' u2|]] [[b1 l1|] [b1' u1|]] /andP [] /= ha hb x /andP [ha' hb']; apply/andP; split => //; (apply/lersif_imply: (lersif_trans ha ha'); case: b1 b2 ha ha' => [] []) || (apply/lersif_imply: (lersif_trans hb' hb); case: b1' b2' hb hb' => [] []).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subitvPr",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "by move=> leb; apply: subitvP; rewrite /= leb andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subitvPl",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "by move=> lea; apply: subitvP; rewrite /= lea /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lersif_in_itv",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "by case: ba bb => [] [] /itvP /= ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_in_itv",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "by move=> bab /lersif_in_itv; rewrite bab.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_in_itv",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "by move/lersif_in_itv/lersifW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem0_itvcc_xNx",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE /= oppr_le0 andbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem0_itvoo_xNx",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE /= oppr_lt0 andbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_splitI",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "by move=> [? ?|] [? ?|] ?; rewrite !inE ?andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_itv",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE lersif_oppr andbC lersif_oppl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_itvoo",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "exact: oppr_itv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_itvco",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "exact: oppr_itv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_itvoc",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "exact: oppr_itv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_itvcc",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "exact: oppr_itv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundl_total",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "by move=> [[] l |] [[] r |] //=; case: (ltrgtP l r).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_boundr_total",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "by move=> [[] l |] [[] r |] //=; case (ltrgtP l r).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_intersectionC",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "move=> [x x'] [y y'] /=; congr Interval; do 2 case: ifP => //=.",
                        "VernacExtend",
                        "c76a1b92f2ca02cc121461766bb80a8ab2ce70e1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> leyx lexy; apply/eqP; rewrite -le_boundl_anti leyx lexy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case/orP: (le_boundl_total x y) => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> leyx' lexy'; apply/eqP; rewrite -le_boundr_anti leyx' lexy'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case/orP: (le_boundr_total x' y') => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "itv_intersectionA",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "move=> [x x'] [y y'] [z z'] /=; congr Interval; do !case: ifP => //=; do 1?congruence.",
                        "VernacExtend",
                        "2053f373ffadd08a006f37d1f429319f0614d83f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> lexy leyz; rewrite (le_boundl_trans lexy leyz).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=> gtxy lexz gtyz _; apply/eqP; rewrite -le_boundl_anti lexz /=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "move: (le_boundl_total y z) (le_boundl_total x y).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite gtxy gtyz; apply: le_boundl_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> lexy' gtxz' leyz'; rewrite (le_boundr_trans lexy' leyz') in gtxz'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=> gtxy' gtyz' _ lexz'; apply/eqP; rewrite -le_boundr_anti lexz' /=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "move: (le_boundr_total y' z') (le_boundr_total x' y').",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite gtxy' gtyz'; apply: le_boundr_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mid_in_itv",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "by move=> [] [] xa xb /= ?; apply/itv_dec=> /=; rewrite ?midf_lte // ?ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mid_in_itvoo",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "by move=> xa xb ?; apply: mid_in_itv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mid_in_itvcc",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "by move=> xa xb ?; apply: mid_in_itv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}