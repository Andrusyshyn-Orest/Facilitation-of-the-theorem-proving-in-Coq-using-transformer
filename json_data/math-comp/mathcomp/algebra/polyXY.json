{
    "filename": "mathcomp/algebra/polyXY.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool choice eqtype ssrnat seq div fintype.",
            "VernacRequire",
            "04195c705dacbcd917ad1ffa3c6098e83759a648"
        ],
        [
            "From mathcomp Require Import tuple finfun bigop fingroup perm ssralg zmodp matrix mxalgebra.",
            "VernacRequire",
            "ad0e25fe2fe3080c00d1dce777daa4268dad83e3"
        ],
        [
            "From mathcomp Require Import poly polydiv mxpoly binomial.",
            "VernacRequire",
            "207bd59158965dce90ca72ad9be69cc66f39fc33"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Local Notation \"p ^ f\" := (map_poly f p) : ring_scope.",
            "VernacNotation",
            "eff2b61e775764510ade185749b1aece38411816"
        ],
        [
            "Local Notation eval := horner_eval.",
            "VernacSyntacticDefinition",
            "e44e64f34e5f169a2f67bb80a7d9c48062d36f0f"
        ],
        [
            "Notation \"'Y\" := 'X%:P : ring_scope.",
            "VernacNotation",
            "005530f3ceb760f4dc608b0303a82f8a6e304de3"
        ],
        [
            "Notation \"p ^:P\" := (p ^ polyC) (at level 2, format \"p ^:P\") : ring_scope.",
            "VernacNotation",
            "f2076fa639c049803874e2461492be5a4ef97cb8"
        ],
        [
            "Notation \"p .[ x , y ]\" := (p.[x%:P].[y]) (at level 2, left associativity, format \"p .[ x , y ]\") : ring_scope.",
            "VernacNotation",
            "8641d5bd0dd081b56195392a996a36de4d6ce72f"
        ],
        [
            "Section PolyXY_Ring.",
            "VernacBeginSection",
            "dff35a97d05251f772ef6feb98f4d6a098b1fcc2"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types (u : {poly {poly R}}) (p q : {poly R}) (x : R).",
            "VernacReserve",
            "d0292c454b5a73b03149108d800d5fdebca17aa4"
        ],
        [
            "Fact swapXY_key : unit.",
            "VernacStartTheoremProof",
            "c72c5fa15254657e3f835f81f6affd568a9d03d5"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition swapXY_def u : {poly {poly R}} := (u ^ map_poly polyC).['Y].",
            "VernacDefinition",
            "6d5e911cebe4ff92c620ff90153c4d82c4485aa0"
        ],
        [
            "Definition swapXY := locked_with swapXY_key swapXY_def.",
            "VernacDefinition",
            "755a8747246ff1f696f3057a64c44878535e2050"
        ],
        [
            "Canonical swapXY_unlockable := [unlockable fun swapXY].",
            "VernacDefinition",
            "eba26c65362611dc7caf5ca314df2f61c7e5c324"
        ],
        [
            "Definition sizeY u : nat := \\max_(i < size u) (size u`_i).",
            "VernacDefinition",
            "2e3330592dd162fdd89bdd51eac165638c5aa879"
        ],
        [
            "Definition poly_XaY p : {poly {poly R}} := p^:P \\Po ('X + 'Y).",
            "VernacDefinition",
            "63c07506f161f5af1be911ba4d4bb6333a0bb074"
        ],
        [
            "Definition poly_XmY p : {poly {poly R}} := p^:P \\Po ('X * 'Y).",
            "VernacDefinition",
            "610b2946274e31bdec0cec0d087fdfd283e49d85"
        ],
        [
            "Definition sub_annihilant p q := resultant (poly_XaY p) q^:P.",
            "VernacDefinition",
            "43495e732bdf4f7ac43dce200a07bfaf44e7cd7d"
        ],
        [
            "Definition div_annihilant p q := resultant (poly_XmY p) q^:P.",
            "VernacDefinition",
            "4d0289ee17f358d4b0b1bca16f16d64e2a5c0e07"
        ],
        [
            "Lemma swapXY_polyC p : swapXY p%:P = p^:P.",
            "VernacStartTheoremProof",
            "d4415e747859caa553d084a29b79030c023badec"
        ],
        [
            "by rewrite unlock map_polyC hornerC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapXY_X : swapXY 'X = 'Y.",
            "VernacStartTheoremProof",
            "c6ab84820fb87c33e9bba5d31999fa9ccdcbe5a6"
        ],
        [
            "by rewrite unlock map_polyX hornerX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapXY_Y : swapXY 'Y = 'X.",
            "VernacStartTheoremProof",
            "46c02a55bffee0a61fb7fb63d3ff3f6711b1211f"
        ],
        [
            "by rewrite swapXY_polyC map_polyX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapXY_is_additive : additive swapXY.",
            "VernacStartTheoremProof",
            "1ebc207653ca1174eaea6a70163ca247079dce95"
        ],
        [
            "by move=> u v; rewrite unlock rmorphB !hornerE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical swapXY_addf := Additive swapXY_is_additive.",
            "VernacDefinition",
            "a80c981879dd4639db3d1ddc57abda5058de70d2"
        ],
        [
            "Lemma coef_swapXY u i j : (swapXY u)`_i`_j = u`_j`_i.",
            "VernacStartTheoremProof",
            "3251730c0d4a718a20815d7d6cb50e37623d654d"
        ],
        [
            "elim/poly_ind: u => [|u p IHu] in i j *; first by rewrite raddf0 !coef0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite raddfD !coefD /= swapXY_polyC coef_map /= !coefC coefMX.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !(fun_if (fun q : {poly R} => q`_i)) coef0 -IHu; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite unlock rmorphM /= map_polyX hornerMX coefMC coefMX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapXYK : involutive swapXY.",
            "VernacStartTheoremProof",
            "4ee988795ac90e2759095fc459183de53432ae2c"
        ],
        [
            "by move=> u; apply/polyP=> i; apply/polyP=> j; rewrite !coef_swapXY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapXY_map_polyC p : swapXY p^:P = p%:P.",
            "VernacStartTheoremProof",
            "00e1802684b54834c821fc21d4db0d072979731a"
        ],
        [
            "by rewrite -swapXY_polyC swapXYK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapXY_eq0 u : (swapXY u == 0) = (u == 0).",
            "VernacStartTheoremProof",
            "732afbabb497b1cd19e3c25ffa51d03a1f9cec54"
        ],
        [
            "by rewrite (inv_eq swapXYK) raddf0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapXY_is_multiplicative : multiplicative swapXY.",
            "VernacStartTheoremProof",
            "a0fc06faf2989a90500af7792bfa16315463bbef"
        ],
        [
            "split=> [u v|]; last by rewrite swapXY_polyC map_polyC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/polyP=> i; apply/polyP=> j; rewrite coef_swapXY !coefM !coef_sum.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "rewrite (eq_bigr _ (fun _ _ => coefM _ _ _)) exchange_big /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => j1 _; rewrite coefM; apply: eq_bigr=> i1 _.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite !coef_swapXY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical swapXY_rmorphism := AddRMorphism swapXY_is_multiplicative.",
            "VernacDefinition",
            "fcd70938ce5d532a53bc0ba0364b6319e955811f"
        ],
        [
            "Lemma swapXY_is_scalable : scalable_for (map_poly polyC \\; *%R) swapXY.",
            "VernacStartTheoremProof",
            "e1a124bef459a61eb59658a88ccb9db3129defa6"
        ],
        [
            "by move=> p u /=; rewrite -mul_polyC rmorphM /= swapXY_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical swapXY_linear := AddLinear swapXY_is_scalable.",
            "VernacDefinition",
            "58e667305db9173851e880059037f6bd3fea8bbc"
        ],
        [
            "Canonical swapXY_lrmorphism := [lrmorphism of swapXY].",
            "VernacDefinition",
            "edf33e1ac47561111ae6d15556affca96e0a69cb"
        ],
        [
            "Lemma swapXY_comp_poly p u : swapXY (p^:P \\Po u) = p^:P \\Po swapXY u.",
            "VernacStartTheoremProof",
            "06f9a9798997262eb4a4112b9334675344661251"
        ],
        [
            "rewrite -horner_map; congr _.[_]; rewrite -!map_poly_comp /=.",
            "VernacExtend",
            "9d78117f9fa00d8b79d08aff717709f8d084ba84"
        ],
        [
            "by apply: eq_map_poly => x; rewrite /= swapXY_polyC map_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_size_coefXY u i : size u`_i <= sizeY u.",
            "VernacStartTheoremProof",
            "880b370b7b7064b36aa24802df3862b09ec7725f"
        ],
        [
            "have [ltiu | /(nth_default 0)->] := ltnP i (size u); last by rewrite size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exact: (bigmax_sup (Ordinal ltiu)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_size_lead_coefXY u : size (lead_coef u) <= sizeY u.",
            "VernacStartTheoremProof",
            "e15810b992f15b439cbd2cddbea8381f86068506"
        ],
        [
            "by rewrite lead_coefE max_size_coefXY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_size_evalX u : size u.['X] <= sizeY u + (size u).-1.",
            "VernacStartTheoremProof",
            "ff6b7ef01b4903aea90bd5e1aa53534ec4043324"
        ],
        [
            "rewrite horner_coef (leq_trans (size_sum _ _ _)) //; apply/bigmax_leqP=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (leq_trans (size_mul_leq _ _)) // size_polyXn addnS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite leq_add ?max_size_coefXY //= -ltnS (leq_trans _ (leqSpred _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_size_evalC u x : size u.[x%:P] <= sizeY u.",
            "VernacStartTheoremProof",
            "06707115e8250124037bf6cc8af7720441746176"
        ],
        [
            "rewrite horner_coef (leq_trans (size_sum _ _ _)) //; apply/bigmax_leqP=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (leq_trans (size_mul_leq _ _)) // -polyC_exp size_polyC addnC -subn1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (leq_trans _ (max_size_coefXY _ i)) // leq_subLR leq_add2r leq_b1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sizeYE u : sizeY u = size (swapXY u).",
            "VernacStartTheoremProof",
            "faf1d540d9c5dad5336d2507c5facd6812087404"
        ],
        [
            "apply/eqP; rewrite eqn_leq; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "apply/bigmax_leqP=> /= i _; apply/leq_sizeP => j /(nth_default 0) u_j_0.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -coef_swapXY u_j_0 coef0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/leq_sizeP=> j le_uY_j; apply/polyP=> i; rewrite coef_swapXY coef0.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by rewrite nth_default // (leq_trans _ le_uY_j) ?max_size_coefXY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sizeY_eq0 u : (sizeY u == 0%N) = (u == 0).",
            "VernacStartTheoremProof",
            "d89d5d9890ff509a21cf5867bc8b6d77ea4b7394"
        ],
        [
            "by rewrite sizeYE size_poly_eq0 swapXY_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sizeY_mulX u : sizeY (u * 'X) = sizeY u.",
            "VernacStartTheoremProof",
            "e052fdb901b49729195994276a79fbf317a6b89b"
        ],
        [
            "rewrite !sizeYE rmorphM /= swapXY_X rreg_size //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have /monic_comreg[_ /rreg_lead] := monicX R.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapXY_poly_XaY p : swapXY (poly_XaY p) = poly_XaY p.",
            "VernacStartTheoremProof",
            "fd4f35f3c9d7e32dd170813ab43d2d4cbefa7af3"
        ],
        [
            "by rewrite swapXY_comp_poly rmorphD /= swapXY_X swapXY_Y addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapXY_poly_XmY p : swapXY (poly_XmY p) = poly_XmY p.",
            "VernacStartTheoremProof",
            "4413fed06e9e0f30abf06dddf65d008e326182e0"
        ],
        [
            "by rewrite swapXY_comp_poly rmorphM /= swapXY_X swapXY_Y commr_polyX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_XaY0 : poly_XaY 0 = 0.",
            "VernacStartTheoremProof",
            "7f906f0509d3c78db9a262f30d593b2457503b8d"
        ],
        [
            "by rewrite /poly_XaY rmorph0 comp_poly0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_XmY0 : poly_XmY 0 = 0.",
            "VernacStartTheoremProof",
            "3dc3b86795138b664c529d1739254097186f9686"
        ],
        [
            "by rewrite /poly_XmY rmorph0 comp_poly0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyXY_Ring.",
            "VernacEndSegment",
            "2acee4af89d30ffa93f81befb23562e04be849bf"
        ],
        [
            "Prenex Implicits swapXY sizeY poly_XaY poly_XmY sub_annihilant div_annihilant.",
            "VernacExtend",
            "119f8fb17d87f14bd0f663c9d4befcf68effad5e"
        ],
        [
            "Prenex Implicits swapXYK.",
            "VernacExtend",
            "c3e71f235b7acf8bf0944a798f54fa6ac130a16a"
        ],
        [
            "Lemma swapXY_map (R S : ringType) (f : {additive R -> S}) u : swapXY (u ^ map_poly f) = swapXY u ^ map_poly f.",
            "VernacStartTheoremProof",
            "be8e6e0a0c7c61e5ac76a4bf5454755b02fcb867"
        ],
        [
            "by apply/polyP=> i; apply/polyP=> j; rewrite !(coef_map, coef_swapXY).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PolyXY_ComRing.",
            "VernacBeginSection",
            "4868e2317025f32183639a01d8fc0a05a8c66022"
        ],
        [
            "Variable R : comRingType.",
            "VernacAssumption",
            "7f1904bb8d32aac32a2864c2db512ee3df1e5ee6"
        ],
        [
            "Implicit Types (u : {poly {poly R}}) (p : {poly R}) (x y : R).",
            "VernacReserve",
            "24f86de8374322e3ff8008380316eca9b53511a2"
        ],
        [
            "Lemma horner_swapXY u x : (swapXY u).[x%:P] = u ^ eval x.",
            "VernacStartTheoremProof",
            "6f8a5e3537d06db531b809955720cdfe81073e5e"
        ],
        [
            "apply/polyP=> i /=; rewrite coef_map /= /eval horner_coef coef_sum -sizeYE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (horner_coef_wide _ (max_size_coefXY u i)); apply: eq_bigr=> j _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -polyC_exp coefMC coef_swapXY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_polyC u x : u.[x%:P] = swapXY u ^ eval x.",
            "VernacStartTheoremProof",
            "2273a3462d4e120a4ef18a31693988d9b00fc15e"
        ],
        [
            "by rewrite -horner_swapXY swapXYK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner2_swapXY u x y : (swapXY u).[x, y] = u.[y, x].",
            "VernacStartTheoremProof",
            "e9f73ebea3f3c0b4d95815e757891d622d42412b"
        ],
        [
            "by rewrite horner_swapXY -{1}(hornerC y x) horner_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_poly_XaY p v : (poly_XaY p).[v] = p \\Po (v + 'X).",
            "VernacStartTheoremProof",
            "cb64c000be8bddb2edb0bdc9e977683d4d696cdd"
        ],
        [
            "by rewrite horner_comp !hornerE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_poly_XmY p v : (poly_XmY p).[v] = p \\Po (v * 'X).",
            "VernacStartTheoremProof",
            "ce7f30423cd0ffbebb41e2ff21856f6bb6ba7e11"
        ],
        [
            "by rewrite horner_comp !hornerE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyXY_ComRing.",
            "VernacEndSegment",
            "f8615fb9ccd4054a8f2ae90d4807ac19c4349a09"
        ],
        [
            "Section PolyXY_Idomain.",
            "VernacBeginSection",
            "bd21f1ac83f60a3e30cd9f82740437049b5e74b9"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Implicit Types (p q : {poly R}) (x y : R).",
            "VernacReserve",
            "3ad1076111c7416c91c70898e3babf8c208b847f"
        ],
        [
            "Lemma size_poly_XaY p : size (poly_XaY p) = size p.",
            "VernacStartTheoremProof",
            "0d6142b27a1084d079d97e28f1e2dfb39286f306"
        ],
        [
            "by rewrite size_comp_poly2 ?size_XaddC // size_map_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_XaY_eq0 p : (poly_XaY p == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "fc7a0e2323566aedc77d74796c2470ca965293b4"
        ],
        [
            "by rewrite -!size_poly_eq0 size_poly_XaY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly_XmY p : size (poly_XmY p) = size p.",
            "VernacStartTheoremProof",
            "f2aeb630162a9868ecefc3a6f575ed5535bdf8bd"
        ],
        [
            "by rewrite size_comp_poly2 ?size_XmulC ?polyX_eq0 ?size_map_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_XmY_eq0 p : (poly_XmY p == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "b7241882e149506ebdf5c3959822e79f32a1bb57"
        ],
        [
            "by rewrite -!size_poly_eq0 size_poly_XmY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_poly_XaY p : lead_coef (poly_XaY p) = (lead_coef p)%:P.",
            "VernacStartTheoremProof",
            "5a5f693399473654ae8b941592183772139118b2"
        ],
        [
            "rewrite lead_coef_comp ?size_XaddC // -['Y]opprK -polyC_opp lead_coefXsubC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite expr1n mulr1 lead_coef_map_inj //; apply: polyC_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_annihilant_in_ideal p q : 1 < size p -> 1 < size q -> {uv : {poly {poly R}} * {poly {poly R}} | size uv.1 < size q /\\ size uv.2 < size p & forall x y, (sub_annihilant p q).[y] = uv.1.[x, y] * p.[x + y] + uv.2.[x, y] * q.[x]}.",
            "VernacStartTheoremProof",
            "bc7b3aa6f123a06591d7b9f7e8ce2f5413e34f7c"
        ],
        [
            "rewrite -size_poly_XaY -(size_map_polyC q) => p1_gt1 q1_gt1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [uv /= [ub_u ub_v Dr]] := resultant_in_ideal p1_gt1 q1_gt1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists uv => // x y; rewrite -[r in r.[y]](hornerC _ x%:P) Dr.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite !(hornerE, horner_comp).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_annihilantP p q x y : p != 0 -> q != 0 -> p.[x] = 0 -> q.[y] = 0 -> (sub_annihilant p q).[x - y] = 0.",
            "VernacStartTheoremProof",
            "49585792a83a0a73fb4a3d9b00a8be07b1c9472d"
        ],
        [
            "move=> nz_p nz_q px0 qy0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have p_gt1: size p > 1 by have /rootP/root_size_gt1-> := px0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have q_gt1: size q > 1 by have /rootP/root_size_gt1-> := qy0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [uv /= _ /(_ y)->] := sub_annihilant_in_ideal p_gt1 q_gt1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (addrC y) subrK px0 qy0 !mulr0 addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_annihilant_neq0 p q : p != 0 -> q != 0 -> sub_annihilant p q != 0.",
            "VernacStartTheoremProof",
            "1cb2e6e183876434b2dcf08469137ea2fb706394"
        ],
        [
            "rewrite resultant_eq0; set p1 := poly_XaY p => nz_p nz_q.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "have [nz_p1 nz_q1]: p1 != 0 /\\ q^:P != 0 by rewrite poly_XaY_eq0 map_polyC_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -leqNgt eq_leq //; apply/eqP/Bezout_coprimepPn=> // [[[u v]]] /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !size_poly_gt0 -andbA => /and4P[nz_u ltuq nz_v _] Duv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have /eqP/= := congr1 (size \\o (lead_coef \\o swapXY)) Duv.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite ltn_eqF // !rmorphM !lead_coefM (leq_trans (leq_ltn_trans _ ltuq)) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{2}[u]swapXYK -sizeYE swapXY_poly_XaY lead_coef_poly_XaY.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrC mul_polyC size_scale ?max_size_lead_coefXY ?lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite swapXY_map_polyC lead_coefC size_map_polyC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set v1 := lead_coef _; have nz_v1: v1 != 0 by rewrite lead_coef_eq0 swapXY_eq0.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "rewrite [in rhs in _ <= rhs]polySpred ?mulf_neq0 // size_mul //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (polySpred nz_v1) addnC addnS polySpred // ltnS leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div_annihilant_in_ideal p q : 1 < size p -> 1 < size q -> {uv : {poly {poly R}} * {poly {poly R}} | size uv.1 < size q /\\ size uv.2 < size p & forall x y, (div_annihilant p q).[y] = uv.1.[x, y] * p.[x * y] + uv.2.[x, y] * q.[x]}.",
            "VernacStartTheoremProof",
            "35888e7aad31ab33116a05e158fb203260cadc2c"
        ],
        [
            "rewrite -size_poly_XmY -(size_map_polyC q) => p1_gt1 q1_gt1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [uv /= [ub_u ub_v Dr]] := resultant_in_ideal p1_gt1 q1_gt1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists uv => // x y; rewrite -[r in r.[y]](hornerC _ x%:P) Dr.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite !(hornerE, horner_comp).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div_annihilant_neq0 p q : p != 0 -> q.[0] != 0 -> div_annihilant p q != 0.",
            "VernacStartTheoremProof",
            "67b57510cd9e9b2f4bf3b3db96886200fdf47b08"
        ],
        [
            "have factorX u: u != 0 -> root u 0 -> exists2 v, v != 0 & u = v * 'X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> nz_u /factor_theorem[v]; rewrite subr0 => Du; exists v => //.",
            "VernacExtend",
            "03f33e1f1d3f7be53c513536df72561d1786f135"
        ],
        [
            "by apply: contraNneq nz_u => v0; rewrite Du v0 mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nzX: 'X != 0 := monic_neq0 (monicX _); have rootC0 := root_polyC _ 0.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite resultant_eq0 -leqNgt -rootE // => nz_p nz_q0; apply/eq_leq/eqP.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "have nz_q: q != 0 by apply: contraNneq nz_q0 => ->; rewrite root0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/Bezout_coprimepPn; rewrite ?map_polyC_eq0 ?poly_XmY_eq0 // => [[uv]].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite !size_poly_gt0 -andbA ltnNge => /and4P[nz_u /negP ltuq nz_v _] Duv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "pose u := swapXY uv.1; pose v := swapXY uv.2.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "suffices{ltuq}: size q <= sizeY u by rewrite sizeYE swapXYK -size_map_polyC.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have{nz_u nz_v} [nz_u nz_v Dvu]: [/\\ u != 0, v != 0 & q *: v = u * poly_XmY p].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !swapXY_eq0; split=> //; apply: (can_inj swapXYK).",
            "VernacExtend",
            "b6a6e2560678dcfd8f1a5f2ca82748c79b5f92ee"
        ],
        [
            "by rewrite linearZ rmorphM /= !swapXYK swapXY_poly_XmY Duv mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{Duv} [n ltvn]: {n | size v < n} by exists (size v).+1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: n {uv} => // n IHn in p (v) (u) nz_u nz_v Dvu nz_p ltvn *.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have Dp0: root (poly_XmY p) 0 = root p 0 by rewrite root_comp !hornerE rootC0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Dv0: root u 0 || root p 0 = root v 0 by rewrite -Dp0 -rootM -Dvu rootZ.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [v0_0 | nz_v0] := boolP (root v 0); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have nz_p0: ~~ root p 0 by apply: contra nz_v0; rewrite -Dv0 orbC => ->.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (@leq_trans (size (q * v.[0]))).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite size_mul // (polySpred nz_v0) addnS leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -hornerZ Dvu !(horner_comp, hornerE) horner_map mulrC size_Cmul //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite horner_coef0 max_size_coefXY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [v1 nz_v1 Dv] := factorX _ _ nz_v v0_0; rewrite Dv size_mulX // in ltvn.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have /orP[/factorX[//|u1 nz_u1 Du] | p0_0]: root u 0 || root p 0 by rewrite Dv0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Du sizeY_mulX; apply: IHn nz_u1 nz_v1 _ nz_p ltvn.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply: (mulIf (nzX _)); rewrite mulrAC -scalerAl -Du -Dv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /factorX[|v2 nz_v2 Dv1]: root (swapXY v1) 0; rewrite ?swapXY_eq0 //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "suffices: root (swapXY v1 * 'Y) 0 by rewrite mulrC mul_polyC rootZ ?polyX_eq0.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have: root (swapXY (q *: v)) 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite Dvu rmorphM rootM /= swapXY_poly_XmY Dp0 p0_0 orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite linearZ rootM rootC0 (negPf nz_q0) /= Dv rmorphM /= swapXY_X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ltnS (canRL swapXYK Dv1) -sizeYE sizeY_mulX sizeYE in ltvn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [p1 nz_p1 Dp] := factorX _ _ nz_p p0_0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: IHn nz_u _ _ nz_p1 ltvn; first by rewrite swapXY_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: (@mulIf _ ('X * 'Y)); first by rewrite mulf_neq0 ?polyC_eq0 ?nzX.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -scalerAl mulrA mulrAC -{1}swapXY_X -rmorphM /= -Dv1 swapXYK -Dv Dvu.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /poly_XmY Dp rmorphM /= map_polyX comp_polyM comp_polyX mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyXY_Idomain.",
            "VernacEndSegment",
            "a1f0b48a0c37a88bc498ed2423c87f4888b2e306"
        ],
        [
            "Section PolyXY_Field.",
            "VernacBeginSection",
            "edb597fa472fed965929ad3015032d4cfeee166d"
        ],
        [
            "Variables (F E : fieldType) (FtoE : {rmorphism F -> E}).",
            "VernacAssumption",
            "705013ed0a32c663a610d2ed3502dbc1b22a3864"
        ],
        [
            "Local Notation pFtoE := (map_poly (GRing.RMorphism.apply FtoE)).",
            "VernacSyntacticDefinition",
            "a87ef3d509af7ce7a4ed1f2ff759e85f7d0a051b"
        ],
        [
            "Lemma div_annihilantP (p q : {poly E}) (x y : E) : p != 0 -> q != 0 -> y != 0 -> p.[x] = 0 -> q.[y] = 0 -> (div_annihilant p q).[x / y] = 0.",
            "VernacStartTheoremProof",
            "a64c53d04205c9c4be4eb3088e5c64a7d32e891a"
        ],
        [
            "move=> nz_p nz_q nz_y px0 qy0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have p_gt1: size p > 1 by have /rootP/root_size_gt1-> := px0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have q_gt1: size q > 1 by have /rootP/root_size_gt1-> := qy0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [uv /= _ /(_ y)->] := div_annihilant_in_ideal p_gt1 q_gt1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (mulrC y) divfK // px0 qy0 !mulr0 addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_sub_annihilantP (p q : {poly F}) (x y : E) : p != 0 -> q != 0 ->(p ^ FtoE).[x] = 0 -> (q ^ FtoE).[y] = 0 -> (sub_annihilant p q ^ FtoE).[x - y] = 0.",
            "VernacStartTheoremProof",
            "be342da5ae08f4119e3e2e9fa8bcc8b7e3fa5411"
        ],
        [
            "move=> nz_p nz_q px0 qy0; have pFto0 := map_poly_eq0 FtoE.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite map_resultant ?pFto0 ?lead_coef_eq0 ?map_poly_eq0 ?poly_XaY_eq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite map_comp_poly rmorphD /= map_polyC /= !map_polyX -!map_poly_comp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !(eq_map_poly (map_polyC _)) !map_poly_comp sub_annihilantP ?pFto0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_div_annihilantP (p q : {poly F}) (x y : E) : p != 0 -> q != 0 -> y != 0 -> (p ^ FtoE).[x] = 0 -> (q ^ FtoE).[y] = 0 -> (div_annihilant p q ^ FtoE).[x / y] = 0.",
            "VernacStartTheoremProof",
            "f3904f42f0bcb92fdda8feade69177f00dbd3556"
        ],
        [
            "move=> nz_p nz_q nz_y px0 qy0; have pFto0 := map_poly_eq0 FtoE.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite map_resultant ?pFto0 ?lead_coef_eq0 ?map_poly_eq0 ?poly_XmY_eq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite map_comp_poly rmorphM /= map_polyC /= !map_polyX -!map_poly_comp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !(eq_map_poly (map_polyC _)) !map_poly_comp div_annihilantP ?pFto0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_annihilant x p (pEx := (p ^ pFtoE).[x%:P]) : pEx != 0 -> algebraicOver FtoE x -> exists2 r : {poly F}, r != 0 & forall y, root pEx y -> root (r ^ FtoE) y.",
            "VernacStartTheoremProof",
            "41efa020c5783a6b7f42d779b5c758494a6282ad"
        ],
        [
            "move=> nz_px [q nz_q qx0].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [/size1_polyC Dp | p_gt1] := leqP (size p) 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite {}/pEx Dp map_polyC hornerC map_poly_eq0 in nz_px *; exists p`_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nz_p: p != 0 by rewrite -size_poly_gt0 ltnW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: {q}_.+1 {-2}q (ltnSn (size q)) => // m IHm q le_qm in nz_q qx0 *.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have nz_q1: q^:P != 0 by rewrite map_poly_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sz_q1: size q^:P = size q by rewrite size_map_polyC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have q1_gt1: size q^:P > 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite sz_q1 -(size_map_poly FtoE) (root_size_gt1 _ qx0) ?map_poly_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [uv _ Dr] := resultant_in_ideal p_gt1 q1_gt1; set r := resultant p _ in Dr.",
            "VernacExtend",
            "81881a093b2294c76be3b432fbe83612064d7bc9"
        ],
        [
            "have /eqP q1x0: (q^:P ^ pFtoE).[x%:P] == 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -swapXY_polyC -swapXY_map horner_swapXY !map_polyC polyC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [|r_nz] := boolP (r == 0); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists r => // y pxy0; rewrite -[r ^ _](hornerC _ x%:P) -map_polyC Dr.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite rmorphD !rmorphM !hornerE q1x0 mulr0 addr0 rootM pxy0 orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite resultant_eq0 => /gtn_eqF/Bezout_coprimepPn[]// [q2 p1] /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite size_poly_gt0 sz_q1 => /andP[/andP[nz_q2 ltq2] _] Dq.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "pose n := (size (lead_coef q2)).-1; pose q3 := map_poly (coefp n) q2.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have nz_q3: q3 != 0 by rewrite map_poly_eq0_id0 ?lead_coef_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (IHm q3); rewrite ?(leq_ltn_trans (size_poly _ _)) ?(leq_trans ltq2) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have /polyP/(_ n)/eqP: (q2 ^ pFtoE).[x%:P] = 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (mulIf nz_px); rewrite -hornerM -rmorphM Dq rmorphM hornerM /= q1x0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mul0r mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite coef0; congr (_ == 0); rewrite !horner_coef coef_sum.",
            "VernacExtend",
            "9d78117f9fa00d8b79d08aff717709f8d084ba84"
        ],
        [
            "rewrite size_map_poly !size_map_poly_id0 ?map_poly_eq0 ?lead_coef_eq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite -rmorphX coefMC !coef_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algebraic_root_polyXY x y : (let pEx p := (p ^ map_poly FtoE).[x%:P] in exists2 p, pEx p != 0 & root (pEx p) y) -> algebraicOver FtoE x -> algebraicOver FtoE y.",
            "VernacStartTheoremProof",
            "90a4a9e316c9f1e26b310dd616f404b2fb258e62"
        ],
        [
            "by case=> p nz_px pxy0 /(root_annihilant nz_px)[r]; exists r; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyXY_Field.",
            "VernacEndSegment",
            "447511aedcf5cd254d4c3329ef8bb45f4574619d"
        ]
    ],
    "proofs": [
        {
            "name": "swapXY_key",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_polyC",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock map_polyC hornerC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_X",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock map_polyX hornerX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_Y",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "by rewrite swapXY_polyC map_polyX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_is_additive",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "by move=> u v; rewrite unlock rmorphB !hornerE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXYK",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by move=> u; apply/polyP=> i; apply/polyP=> j; rewrite !coef_swapXY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_map_polyC",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by rewrite -swapXY_polyC swapXYK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_eq0",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "by rewrite (inv_eq swapXYK) raddf0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_is_multiplicative",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "split=> [u v|]; last by rewrite swapXY_polyC map_polyC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/polyP=> i; apply/polyP=> j; rewrite coef_swapXY !coefM !coef_sum.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_bigr _ (fun _ _ => coefM _ _ _)) exchange_big /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => j1 _; rewrite coefM; apply: eq_bigr=> i1 _.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite !coef_swapXY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_is_scalable",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "by move=> p u /=; rewrite -mul_polyC rmorphM /= swapXY_polyC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_comp_poly",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "rewrite -horner_map; congr _.[_]; rewrite -!map_poly_comp /=.",
                        "VernacExtend",
                        "9d78117f9fa00d8b79d08aff717709f8d084ba84"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_map_poly => x; rewrite /= swapXY_polyC map_polyC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_size_coefXY",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "have [ltiu | /(nth_default 0)->] := ltnP i (size u); last by rewrite size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exact: (bigmax_sup (Ordinal ltiu)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_size_lead_coefXY",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "by rewrite lead_coefE max_size_coefXY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_size_evalX",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "rewrite horner_coef (leq_trans (size_sum _ _ _)) //; apply/bigmax_leqP=> i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite (leq_trans (size_mul_leq _ _)) // size_polyXn addnS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite leq_add ?max_size_coefXY //= -ltnS (leq_trans _ (leqSpred _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_size_evalC",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "rewrite horner_coef (leq_trans (size_sum _ _ _)) //; apply/bigmax_leqP=> i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite (leq_trans (size_mul_leq _ _)) // -polyC_exp size_polyC addnC -subn1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (leq_trans _ (max_size_coefXY _ i)) // leq_subLR leq_add2r leq_b1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sizeYE",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqn_leq; apply/andP; split.",
                        "VernacExtend",
                        "c6080ad6de433b4aac1c6523f45011ac63415378"
                    ]
                },
                {
                    "command": [
                        "apply/bigmax_leqP=> /= i _; apply/leq_sizeP => j /(nth_default 0) u_j_0.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite -coef_swapXY u_j_0 coef0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/leq_sizeP=> j le_uY_j; apply/polyP=> i; rewrite coef_swapXY coef0.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "by rewrite nth_default // (leq_trans _ le_uY_j) ?max_size_coefXY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sizeY_eq0",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "by rewrite sizeYE size_poly_eq0 swapXY_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sizeY_mulX",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "rewrite !sizeYE rmorphM /= swapXY_X rreg_size //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by have /monic_comreg[_ /rreg_lead] := monicX R.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_poly_XaY",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "by rewrite swapXY_comp_poly rmorphD /= swapXY_X swapXY_Y addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_poly_XmY",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "by rewrite swapXY_comp_poly rmorphM /= swapXY_X swapXY_Y commr_polyX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_XaY0",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "by rewrite /poly_XaY rmorph0 comp_poly0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_XmY0",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "by rewrite /poly_XmY rmorph0 comp_poly0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapXY_map",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "by apply/polyP=> i; apply/polyP=> j; rewrite !(coef_map, coef_swapXY).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_swapXY",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "apply/polyP=> i /=; rewrite coef_map /= /eval horner_coef coef_sum -sizeYE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite (horner_coef_wide _ (max_size_coefXY u i)); apply: eq_bigr=> j _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite -polyC_exp coefMC coef_swapXY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_polyC",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "by rewrite -horner_swapXY swapXYK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner2_swapXY",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "by rewrite horner_swapXY -{1}(hornerC y x) horner_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_poly_XaY",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "by rewrite horner_comp !hornerE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_poly_XmY",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "by rewrite horner_comp !hornerE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly_XaY",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "by rewrite size_comp_poly2 ?size_XaddC // size_map_polyC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_XaY_eq0",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "by rewrite -!size_poly_eq0 size_poly_XaY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly_XmY",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "by rewrite size_comp_poly2 ?size_XmulC ?polyX_eq0 ?size_map_polyC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_XmY_eq0",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "by rewrite -!size_poly_eq0 size_poly_XmY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_poly_XaY",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "rewrite lead_coef_comp ?size_XaddC // -['Y]opprK -polyC_opp lead_coefXsubC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite expr1n mulr1 lead_coef_map_inj //; apply: polyC_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_annihilant_in_ideal",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "rewrite -size_poly_XaY -(size_map_polyC q) => p1_gt1 q1_gt1.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [uv /= [ub_u ub_v Dr]] := resultant_in_ideal p1_gt1 q1_gt1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists uv => // x y; rewrite -[r in r.[y]](hornerC _ x%:P) Dr.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(hornerE, horner_comp).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_annihilantP",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "move=> nz_p nz_q px0 qy0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have p_gt1: size p > 1 by have /rootP/root_size_gt1-> := px0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have q_gt1: size q > 1 by have /rootP/root_size_gt1-> := qy0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [uv /= _ /(_ y)->] := sub_annihilant_in_ideal p_gt1 q_gt1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (addrC y) subrK px0 qy0 !mulr0 addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_annihilant_neq0",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "rewrite resultant_eq0; set p1 := poly_XaY p => nz_p nz_q.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "have [nz_p1 nz_q1]: p1 != 0 /\\ q^:P != 0 by rewrite poly_XaY_eq0 map_polyC_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -leqNgt eq_leq //; apply/eqP/Bezout_coprimepPn=> // [[[u v]]] /=.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite !size_poly_gt0 -andbA => /and4P[nz_u ltuq nz_v _] Duv.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have /eqP/= := congr1 (size \\o (lead_coef \\o swapXY)) Duv.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite ltn_eqF // !rmorphM !lead_coefM (leq_trans (leq_ltn_trans _ ltuq)) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}[u]swapXYK -sizeYE swapXY_poly_XaY lead_coef_poly_XaY.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrC mul_polyC size_scale ?max_size_lead_coefXY ?lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite swapXY_map_polyC lead_coefC size_map_polyC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "set v1 := lead_coef _; have nz_v1: v1 != 0 by rewrite lead_coef_eq0 swapXY_eq0.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "rewrite [in rhs in _ <= rhs]polySpred ?mulf_neq0 // size_mul //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (polySpred nz_v1) addnC addnS polySpred // ltnS leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_annihilant_in_ideal",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "rewrite -size_poly_XmY -(size_map_polyC q) => p1_gt1 q1_gt1.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [uv /= [ub_u ub_v Dr]] := resultant_in_ideal p1_gt1 q1_gt1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists uv => // x y; rewrite -[r in r.[y]](hornerC _ x%:P) Dr.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(hornerE, horner_comp).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_annihilantP",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "move=> nz_p nz_q nz_y px0 qy0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have p_gt1: size p > 1 by have /rootP/root_size_gt1-> := px0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have q_gt1: size q > 1 by have /rootP/root_size_gt1-> := qy0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [uv /= _ /(_ y)->] := div_annihilant_in_ideal p_gt1 q_gt1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (mulrC y) divfK // px0 qy0 !mulr0 addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_sub_annihilantP",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "move=> nz_p nz_q px0 qy0; have pFto0 := map_poly_eq0 FtoE.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite map_resultant ?pFto0 ?lead_coef_eq0 ?map_poly_eq0 ?poly_XaY_eq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite map_comp_poly rmorphD /= map_polyC /= !map_polyX -!map_poly_comp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(eq_map_poly (map_polyC _)) !map_poly_comp sub_annihilantP ?pFto0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_div_annihilantP",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "move=> nz_p nz_q nz_y px0 qy0; have pFto0 := map_poly_eq0 FtoE.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite map_resultant ?pFto0 ?lead_coef_eq0 ?map_poly_eq0 ?poly_XmY_eq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite map_comp_poly rmorphM /= map_polyC /= !map_polyX -!map_poly_comp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(eq_map_poly (map_polyC _)) !map_poly_comp div_annihilantP ?pFto0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algebraic_root_polyXY",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "by case=> p nz_px pxy0 /(root_annihilant nz_px)[r]; exists r; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}