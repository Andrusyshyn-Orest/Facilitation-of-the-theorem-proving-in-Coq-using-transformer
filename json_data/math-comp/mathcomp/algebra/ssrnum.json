{
    "filename": "mathcomp/algebra/ssrnum.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq div choice fintype path.",
            "VernacRequire",
            "9b7443137d6aa9560a5c5b939da631391f0c58c0"
        ],
        [
            "From mathcomp Require Import bigop ssralg finset fingroup zmodp poly.",
            "VernacRequire",
            "f7eaf0700c564572936ecfee7b54f96786f44aad"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Reserved Notation \"<= y\" (at level 35).",
            "VernacSyntaxExtension",
            "e3633bfa0df1a36c9089a27acaba96e9243282eb"
        ],
        [
            "Reserved Notation \">= y\" (at level 35).",
            "VernacSyntaxExtension",
            "71c8ecfff896ca46d1851db699faac3ee6b7b4cc"
        ],
        [
            "Reserved Notation \"< y\" (at level 35).",
            "VernacSyntaxExtension",
            "289e71c2944a7527e4d1dd9619a015c22fa0a12b"
        ],
        [
            "Reserved Notation \"> y\" (at level 35).",
            "VernacSyntaxExtension",
            "d835ab759f61f1635a892332ea7a2e4a7eae8913"
        ],
        [
            "Reserved Notation \"<= y :> T\" (at level 35, y at next level).",
            "VernacSyntaxExtension",
            "4deb6ae7ad8c7da5550b85b52b9d35697d4830e5"
        ],
        [
            "Reserved Notation \">= y :> T\" (at level 35, y at next level).",
            "VernacSyntaxExtension",
            "35c22bc534efde2558b425ab412bdbfcc48c099b"
        ],
        [
            "Reserved Notation \"< y :> T\" (at level 35, y at next level).",
            "VernacSyntaxExtension",
            "960b8f53f3eeb0b963b3ec9685ecaae8625ba179"
        ],
        [
            "Reserved Notation \"> y :> T\" (at level 35, y at next level).",
            "VernacSyntaxExtension",
            "00f39e45ec9857ec9dbc347c27311c633c93735b"
        ],
        [
            "Module Num.",
            "VernacDefineModule",
            "376c0a6770896a056783b38d664378affd3f8167"
        ],
        [
            "Record mixin_of (R : ringType) := Mixin { norm_op : R -> R; le_op : rel R; lt_op : rel R; _ : forall x y, le_op (norm_op (x + y)) (norm_op x + norm_op y); _ : forall x y, lt_op 0 x -> lt_op 0 y -> lt_op 0 (x + y); _ : forall x, norm_op x = 0 -> x = 0; _ : forall x y, le_op 0 x -> le_op 0 y -> le_op x y || le_op y x; _ : {morph norm_op : x y / x * y}; _ : forall x y, (le_op x y) = (norm_op (y - x) == y - x); _ : forall x y, (lt_op x y) = (y != x) && (le_op x y) }.",
            "VernacInductive",
            "f7ce9db89f12a25980241095822d043adda4de54"
        ],
        [
            "Local Notation ring_for T b := (@GRing.Ring.Pack T b).",
            "VernacSyntacticDefinition",
            "70c9b0ec2b7a90ef926d01eeae9777246ffce16e"
        ],
        [
            "Module NumDomain.",
            "VernacDefineModule",
            "25c3df8b74c042fc638ecbfaa3882fee391357cd"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of T := Class { base : GRing.IntegralDomain.class_of T; mixin : mixin_of (ring_for T base) }.",
            "VernacInductive",
            "0a63bc9bfe9a8c470dbcfa458b8616440ffe2ac1"
        ],
        [
            "Local Coercion base : class_of >-> GRing.IntegralDomain.class_of.",
            "VernacCoercion",
            "ece39cebac78d47c67d8c05b4c21a0066b01341f"
        ],
        [
            "Structure type := Pack {sort; _ : class_of sort}.",
            "VernacInductive",
            "42b0161295055637e72e97af35c3d44479cc946b"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Let xT := let: Pack T _ := cT in T.",
            "VernacDefinition",
            "0a87c77e3a5ac8febf0910b95d7b998b7cb9cf6d"
        ],
        [
            "Notation xclass := (class : class_of xT).",
            "VernacSyntacticDefinition",
            "e136614fedd7b331a23b54adad5b0bce11895ed4"
        ],
        [
            "Definition clone c of phant_id class c := @Pack T c.",
            "VernacDefinition",
            "e082321bed0d5d4d78139419fead577313b82668"
        ],
        [
            "Definition pack b0 (m0 : mixin_of (ring_for T b0)) := fun bT b & phant_id (GRing.IntegralDomain.class bT) b => fun m & phant_id m0 m => Pack (@Class T b m).",
            "VernacDefinition",
            "792bca8eb67f874c8a160e1e4a8a0e0e40c9470f"
        ],
        [
            "Definition eqType := @Equality.Pack cT xclass.",
            "VernacDefinition",
            "6139f412b89e62ff13c9c707c885de4b39151e9d"
        ],
        [
            "Definition choiceType := @Choice.Pack cT xclass.",
            "VernacDefinition",
            "f62d3090382a5ea70b978e0633e0376c4558db55"
        ],
        [
            "Definition zmodType := @GRing.Zmodule.Pack cT xclass.",
            "VernacDefinition",
            "55ca79fd57642c05c60d387b339e6f79f04a3ff3"
        ],
        [
            "Definition ringType := @GRing.Ring.Pack cT xclass.",
            "VernacDefinition",
            "0e7fedb841bf2ad5f10e2c47360481415705965d"
        ],
        [
            "Definition comRingType := @GRing.ComRing.Pack cT xclass.",
            "VernacDefinition",
            "3748552bae4edc5fac4b7ed9f0670886e95cc19d"
        ],
        [
            "Definition unitRingType := @GRing.UnitRing.Pack cT xclass.",
            "VernacDefinition",
            "c5af4d2b75d37bfcfb3b3aa3de1e804d0f68cfaa"
        ],
        [
            "Definition comUnitRingType := @GRing.ComUnitRing.Pack cT xclass.",
            "VernacDefinition",
            "1735d883ce4725d8986c69b7929af063cc5e2d96"
        ],
        [
            "Definition idomainType := @GRing.IntegralDomain.Pack cT xclass.",
            "VernacDefinition",
            "539d8333789c356c4b4a70ce49e28100e792554c"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base : class_of >-> GRing.IntegralDomain.class_of.",
            "VernacCoercion",
            "d55293fb03fcc36958f9cad428f667c6c4ae599f"
        ],
        [
            "Coercion mixin : class_of >-> mixin_of.",
            "VernacCoercion",
            "6e94763ee53fdac946511987d81c3f6daccc67c3"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Bind Scope ring_scope with sort.",
            "VernacBindScope",
            "ac04d07dda43f0036576b2a438f8490c7ac4d59b"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical eqType.",
            "VernacCanonical",
            "dd1ac877a396f552e2a8f23e59be45903d8b15ad"
        ],
        [
            "Coercion choiceType : type >-> Choice.type.",
            "VernacCoercion",
            "bdc8d608f4b963a8606cd33ad18b1977a8bcb78d"
        ],
        [
            "Canonical choiceType.",
            "VernacCanonical",
            "af7a1759ddd13e2b7e4e1ce16b6a3595a77b5659"
        ],
        [
            "Coercion zmodType : type >-> GRing.Zmodule.type.",
            "VernacCoercion",
            "e060cc1ea9f61e5bb007225650e27649c68e297c"
        ],
        [
            "Canonical zmodType.",
            "VernacCanonical",
            "9a6f278270af4b6ced100d8e0c90c7719a960a86"
        ],
        [
            "Coercion ringType : type >-> GRing.Ring.type.",
            "VernacCoercion",
            "09ac5026083b32bdc94c69ee431fffb8f01bb95b"
        ],
        [
            "Canonical ringType.",
            "VernacCanonical",
            "b7d4c328ac58b23ee4b52bd787434621c20d2c4d"
        ],
        [
            "Coercion comRingType : type >-> GRing.ComRing.type.",
            "VernacCoercion",
            "7affae689602b4bdfe5fc0a88f2ef5e49dcc52d1"
        ],
        [
            "Canonical comRingType.",
            "VernacCanonical",
            "30f9087081da845c9c545aeb8d7375204ed4f1b3"
        ],
        [
            "Coercion unitRingType : type >-> GRing.UnitRing.type.",
            "VernacCoercion",
            "365e9919776507bbf2b5c3dd980ed8dbe55e8e34"
        ],
        [
            "Canonical unitRingType.",
            "VernacCanonical",
            "5adf5dbcca23e501d2be7f60fe9ad3def13431b8"
        ],
        [
            "Coercion comUnitRingType : type >-> GRing.ComUnitRing.type.",
            "VernacCoercion",
            "f135663b55a7a9a2e84fc46fe054da196765bf3e"
        ],
        [
            "Canonical comUnitRingType.",
            "VernacCanonical",
            "74522c0e1d11ec46568915dda5f1829b7bbe8a04"
        ],
        [
            "Coercion idomainType : type >-> GRing.IntegralDomain.type.",
            "VernacCoercion",
            "7ee1bea483ff4781cc5de921138ed4f2d74a3132"
        ],
        [
            "Canonical idomainType.",
            "VernacCanonical",
            "ec8e76c80fed77c2b91406ec8a21033d94f8380d"
        ],
        [
            "Notation numDomainType := type.",
            "VernacSyntacticDefinition",
            "6feaeaa8ec5957c25a23e32931caab1790d83adf"
        ],
        [
            "Notation NumMixin := Mixin.",
            "VernacSyntacticDefinition",
            "db7ecaa1a302a45788f15df1d48b25f0a5ad8c46"
        ],
        [
            "Notation NumDomainType T m := (@pack T _ m _ _ id _ id).",
            "VernacSyntacticDefinition",
            "03992c55f61fa7548794254c575f25ff31e7f368"
        ],
        [
            "Notation \"[ 'numDomainType' 'of' T 'for' cT ]\" := (@clone T cT _ idfun) (at level 0, format \"[ 'numDomainType' 'of' T 'for' cT ]\") : form_scope.",
            "VernacNotation",
            "1a58207db7849eeb12a5d006fda1c2ab056a5a1a"
        ],
        [
            "Notation \"[ 'numDomainType' 'of' T ]\" := (@clone T _ _ id) (at level 0, format \"[ 'numDomainType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "6f3b08b0cf85c702eac3712440a3b168c0852217"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End NumDomain.",
            "VernacEndSegment",
            "5a8a2c1a327ce191df3db0bbede43bd4494e6e94"
        ],
        [
            "Import NumDomain.Exports.",
            "VernacImport",
            "5dd824aff2f24074dd69d0213865257765596542"
        ],
        [
            "Module Import Def.",
            "VernacDefineModule",
            "206e225f6e46e5ca9ca3cecfb266d7bea80652bc"
        ],
        [
            "Section Def.",
            "VernacBeginSection",
            "891f679f68bab7ae72311468953cd39d353d2080"
        ],
        [
            "Import NumDomain.",
            "VernacImport",
            "e7acc4fd1582a34abbbdc57c89517b7b3fae662c"
        ],
        [
            "Context {R : type}.",
            "VernacContext",
            "7ef5e82829b78d8d3d29d8097f0baffb2242494a"
        ],
        [
            "Implicit Types (x y : R) (C : bool).",
            "VernacReserve",
            "2b4556ad080b703bc09c375178c3ca47d2377542"
        ],
        [
            "Definition normr : R -> R := norm_op (class R).",
            "VernacDefinition",
            "44921e43aa80cdc5e1f006bec19be03d8ce254e7"
        ],
        [
            "Definition ler : rel R := le_op (class R).",
            "VernacDefinition",
            "051d0bb1c9d8c22a996efd28bfc62501df7afa4f"
        ],
        [
            "Definition ltr : rel R := lt_op (class R).",
            "VernacDefinition",
            "aac113d3a536ea64ea76b311067caf7e4df790d8"
        ],
        [
            "Local Notation \"x <= y\" := (ler x y) : ring_scope.",
            "VernacNotation",
            "bc32f162a747e3b2260eae4489e71e6715697a38"
        ],
        [
            "Local Notation \"x < y\" := (ltr x y) : ring_scope.",
            "VernacNotation",
            "0ce0df5f9dd877c3c09c096bf161a4d20641dcfe"
        ],
        [
            "Definition ger : simpl_rel R := [rel x y | y <= x].",
            "VernacDefinition",
            "3df58f0c96453bd045b11f6e73047c3ec0b589a1"
        ],
        [
            "Definition gtr : simpl_rel R := [rel x y | y < x].",
            "VernacDefinition",
            "433c3479200fe7a10b4277554a56e2510a45ab42"
        ],
        [
            "Definition lerif x y C : Prop := ((x <= y) * ((x == y) = C))%type.",
            "VernacDefinition",
            "3fe5c842a5f141a82985e235de322eeebc9731fd"
        ],
        [
            "Definition sgr x : R := if x == 0 then 0 else if x < 0 then -1 else 1.",
            "VernacDefinition",
            "69d2363dc721804770e7d7d98aaed7bd3bc19087"
        ],
        [
            "Definition minr x y : R := if x <= y then x else y.",
            "VernacDefinition",
            "f0aec25bc6b814cd3eaafdaecea76e492b719830"
        ],
        [
            "Definition maxr x y : R := if y <= x then x else y.",
            "VernacDefinition",
            "f260128006f441fadff482c9d3daee4b18726ba8"
        ],
        [
            "Definition Rpos : qualifier 0 R := [qualify x : R | 0 < x].",
            "VernacDefinition",
            "d44f5f13719dafda50e9a27bf1df49ba2aa84dd4"
        ],
        [
            "Definition Rneg : qualifier 0 R := [qualify x : R | x < 0].",
            "VernacDefinition",
            "652429e9d1f2f2054d05bd5de5428dfb3bc4a083"
        ],
        [
            "Definition Rnneg : qualifier 0 R := [qualify x : R | 0 <= x].",
            "VernacDefinition",
            "49aa762890541dbb63dbd6904a7a55eaae69b4f3"
        ],
        [
            "Definition Rreal : qualifier 0 R := [qualify x : R | (0 <= x) || (x <= 0)].",
            "VernacDefinition",
            "ada3538247b56e78db5095aa84ee7b9c1ddd08f1"
        ],
        [
            "End Def.",
            "VernacEndSegment",
            "616ad5692568c74f61a9df3a82ac03d2b7ebac01"
        ],
        [
            "End Def.",
            "VernacEndSegment",
            "616ad5692568c74f61a9df3a82ac03d2b7ebac01"
        ],
        [
            "Notation norm := normr.",
            "VernacSyntacticDefinition",
            "b84f43d1b241654f1f4fbae740e891ac9089c22c"
        ],
        [
            "Notation le := ler.",
            "VernacSyntacticDefinition",
            "1fc39557b1257bc4588346620094d5802c0922eb"
        ],
        [
            "Notation lt := ltr.",
            "VernacSyntacticDefinition",
            "4ecc6ebf281c23daac3a15a8b57aa11e8713a3f8"
        ],
        [
            "Notation ge := ger.",
            "VernacSyntacticDefinition",
            "dd716920cbf3e778313cf4fb59a7f49b78101241"
        ],
        [
            "Notation gt := gtr.",
            "VernacSyntacticDefinition",
            "572a53287507ace7be798fc06add55bf9d934647"
        ],
        [
            "Notation sg := sgr.",
            "VernacSyntacticDefinition",
            "a8224e06246ace7c1b4fc76a61d066f4068cc058"
        ],
        [
            "Notation max := maxr.",
            "VernacSyntacticDefinition",
            "af64a75a021ec47d7781a2738a5207131b728f15"
        ],
        [
            "Notation min := minr.",
            "VernacSyntacticDefinition",
            "8e38ce2a76600c4e933d146a543f475bc51929db"
        ],
        [
            "Notation pos := Rpos.",
            "VernacSyntacticDefinition",
            "17cdae02700c30d467eaf60c02ae41e2c63bf811"
        ],
        [
            "Notation neg := Rneg.",
            "VernacSyntacticDefinition",
            "8020f6df27dfd58a930040c09857fee74701bb00"
        ],
        [
            "Notation nneg := Rnneg.",
            "VernacSyntacticDefinition",
            "e3c87f2d7c52657d68ab75316ca5b7ccc8f559c3"
        ],
        [
            "Notation real := Rreal.",
            "VernacSyntacticDefinition",
            "fdab2229e029adb623a67a0cae011e02bef96d37"
        ],
        [
            "Module Keys.",
            "VernacDefineModule",
            "baf2b10680b162b2501a4cc8d2906c9dc7435fce"
        ],
        [
            "Section Keys.",
            "VernacBeginSection",
            "82d5c1a8ef29da35e37a1c36f1514e8c39d16a85"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Fact Rpos_key : pred_key (@pos R).",
            "VernacStartTheoremProof",
            "e6bd34bf9587ddfa9bfacda70fa6281d9235c298"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rpos_keyed := KeyedQualifier Rpos_key.",
            "VernacDefinition",
            "95908bc842f4d23501df49932e1d57668148ad6d"
        ],
        [
            "Fact Rneg_key : pred_key (@real R).",
            "VernacStartTheoremProof",
            "d1fcf252a3e1da824d566afb5ded7292f02b12b2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rneg_keyed := KeyedQualifier Rneg_key.",
            "VernacDefinition",
            "44c13657dda702fa7d1176de23e91a08f8e33353"
        ],
        [
            "Fact Rnneg_key : pred_key (@nneg R).",
            "VernacStartTheoremProof",
            "02bbeebb39468364a1be381bf4959056c4ea8333"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rnneg_keyed := KeyedQualifier Rnneg_key.",
            "VernacDefinition",
            "033a6867b75571d37488a4dc0d2394cd8cc7bc3c"
        ],
        [
            "Fact Rreal_key : pred_key (@real R).",
            "VernacStartTheoremProof",
            "c67fff49760b4f749c150653645f3d1e0d1d2862"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rreal_keyed := KeyedQualifier Rreal_key.",
            "VernacDefinition",
            "ffb7979fa741965b627d22ca99174d5f4fae21a2"
        ],
        [
            "Definition ler_of_leif x y C (le_xy : @lerif R x y C) := le_xy.1 : le x y.",
            "VernacDefinition",
            "e60157ff915cc4ce9400c5fff9f5adc86822c959"
        ],
        [
            "End Keys.",
            "VernacEndSegment",
            "21af4155600120691029700c2441115d660c0a05"
        ],
        [
            "End Keys.",
            "VernacEndSegment",
            "21af4155600120691029700c2441115d660c0a05"
        ],
        [
            "Module Import Syntax.",
            "VernacDefineModule",
            "1b0ae7a2c060a600e292ce5ca43c304b61a6b9f4"
        ],
        [
            "Import Def Keys.",
            "VernacImport",
            "e72232762a5f218578e406f5f0da0120056704b9"
        ],
        [
            "Notation \"`| x |\" := (norm x) : ring_scope.",
            "VernacNotation",
            "fdf4a813d99263628e944b7cf5143d60739345f8"
        ],
        [
            "Notation \"<%R\" := lt : ring_scope.",
            "VernacNotation",
            "9f91fcefe8c9ef0d6cf239f32b62eb3c5aca8c4c"
        ],
        [
            "Notation \">%R\" := gt : ring_scope.",
            "VernacNotation",
            "f0b98eca2f4c5ee48a2898714bed01925ce72214"
        ],
        [
            "Notation \"<=%R\" := le : ring_scope.",
            "VernacNotation",
            "6ed896767d899f273f76420e865556c4a1dab09a"
        ],
        [
            "Notation \">=%R\" := ge : ring_scope.",
            "VernacNotation",
            "c93973ded6ad04ca3f611784cb1cc0533bf09b29"
        ],
        [
            "Notation \"<?=%R\" := lerif : ring_scope.",
            "VernacNotation",
            "9ca1f422184060e65ce7a372a67ff9430dd57fb6"
        ],
        [
            "Notation \"< y\" := (gt y) : ring_scope.",
            "VernacNotation",
            "5d710cb0194fd42f575b34344df085dc63e9aeac"
        ],
        [
            "Notation \"< y :> T\" := (< (y : T)) : ring_scope.",
            "VernacNotation",
            "f1d4f92774628f098785028fc14e174e4bad0d31"
        ],
        [
            "Notation \"> y\" := (lt y) : ring_scope.",
            "VernacNotation",
            "44d7929d6c8bdb6d43372de66d919a624a0cd8d4"
        ],
        [
            "Notation \"> y :> T\" := (> (y : T)) : ring_scope.",
            "VernacNotation",
            "6244a1b8b48e593e472f623b3e7e2804c2cf15fa"
        ],
        [
            "Notation \"<= y\" := (ge y) : ring_scope.",
            "VernacNotation",
            "2ec57aa75acb41171ac597b8471a0e6482226997"
        ],
        [
            "Notation \"<= y :> T\" := (<= (y : T)) : ring_scope.",
            "VernacNotation",
            "604bf6792fa86cfbad07529ef19cea866ea7dfd2"
        ],
        [
            "Notation \">= y\" := (le y) : ring_scope.",
            "VernacNotation",
            "5d60c2842f51d9d2fd1b28673920d6aed2cfb0b9"
        ],
        [
            "Notation \">= y :> T\" := (>= (y : T)) : ring_scope.",
            "VernacNotation",
            "1919c89d5f09dc25c932b5f315831b5203979122"
        ],
        [
            "Notation \"x < y\" := (lt x y) : ring_scope.",
            "VernacNotation",
            "725785d69f13426ff9e4031d082646a7727f0715"
        ],
        [
            "Notation \"x < y :> T\" := ((x : T) < (y : T)) : ring_scope.",
            "VernacNotation",
            "13b476a56c74bfef893791f2a4af41fbcc6a465e"
        ],
        [
            "Notation \"x > y\" := (y < x) (only parsing) : ring_scope.",
            "VernacNotation",
            "5027fd4543a46979c8cae319f2efe6e32bac6508"
        ],
        [
            "Notation \"x > y :> T\" := ((x : T) > (y : T)) (only parsing) : ring_scope.",
            "VernacNotation",
            "25671540e2f1ff44d6181a214029b90ec90d75d4"
        ],
        [
            "Notation \"x <= y\" := (le x y) : ring_scope.",
            "VernacNotation",
            "ae37987cf5d630685a6b573f8da86824d94c4fc3"
        ],
        [
            "Notation \"x <= y :> T\" := ((x : T) <= (y : T)) : ring_scope.",
            "VernacNotation",
            "48042f7c1d9a78bc0541a0c795a1be2425245ba8"
        ],
        [
            "Notation \"x >= y\" := (y <= x) (only parsing) : ring_scope.",
            "VernacNotation",
            "0aba66cdbae4894fc813c96e86c4c8284cce4729"
        ],
        [
            "Notation \"x >= y :> T\" := ((x : T) >= (y : T)) (only parsing) : ring_scope.",
            "VernacNotation",
            "8a2794c978a7b3dfb2c5b72ffb81cdab0b5d10da"
        ],
        [
            "Notation \"x <= y <= z\" := ((x <= y) && (y <= z)) : ring_scope.",
            "VernacNotation",
            "c93867af565d2ecf9562e91fdffce10da88b98ce"
        ],
        [
            "Notation \"x < y <= z\" := ((x < y) && (y <= z)) : ring_scope.",
            "VernacNotation",
            "60ae7f1cf733d6850f27c012276af3d413227060"
        ],
        [
            "Notation \"x <= y < z\" := ((x <= y) && (y < z)) : ring_scope.",
            "VernacNotation",
            "1cddfbfdbe39a3d01d91d56b01ecd89bf1e6b463"
        ],
        [
            "Notation \"x < y < z\" := ((x < y) && (y < z)) : ring_scope.",
            "VernacNotation",
            "e627c56df7ade7a6d1cdb15aa26255e1ca43f1ef"
        ],
        [
            "Notation \"x <= y ?= 'iff' C\" := (lerif x y C) : ring_scope.",
            "VernacNotation",
            "57feb063e1f9ef48add47b6b9900ad01635b844a"
        ],
        [
            "Notation \"x <= y ?= 'iff' C :> R\" := ((x : R) <= (y : R) ?= iff C) (only parsing) : ring_scope.",
            "VernacNotation",
            "b72e558975107c7456222b882b36626ae5746c1e"
        ],
        [
            "Coercion ler_of_leif : lerif >-> is_true.",
            "VernacCoercion",
            "696663ed778885df03da6d6172f67a4c926926ce"
        ],
        [
            "Canonical Rpos_keyed.",
            "VernacCanonical",
            "e90f13f6eb32019e2fec7d5079fe35b726c28684"
        ],
        [
            "Canonical Rneg_keyed.",
            "VernacCanonical",
            "887ab6057e8179bd9a35113445ae64c6a3b752b1"
        ],
        [
            "Canonical Rnneg_keyed.",
            "VernacCanonical",
            "d19cfb6ff101b15f26e58bf96fc81af960cf4f4b"
        ],
        [
            "Canonical Rreal_keyed.",
            "VernacCanonical",
            "eb590c6760251ee0ca5a7d78b48c6978ae3d033d"
        ],
        [
            "End Syntax.",
            "VernacEndSegment",
            "f163e481b612c7f3bac8c0a0f395d745d0ccffc8"
        ],
        [
            "Section ExtensionAxioms.",
            "VernacBeginSection",
            "35c22e9b64eaa7d09e8c64b831883ab3d1fe3955"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Definition real_axiom : Prop := forall x : R, x \\is real.",
            "VernacDefinition",
            "5c582b2c81555162a987f875e9a5821ac7cea4fb"
        ],
        [
            "Definition archimedean_axiom : Prop := forall x : R, exists ub, `|x| < ub%:R.",
            "VernacDefinition",
            "36b29848c09081a12d21560c62d2c662bcce7f50"
        ],
        [
            "Definition real_closed_axiom : Prop := forall (p : {poly R}) (a b : R), a <= b -> p.[a] <= 0 <= p.[b] -> exists2 x, a <= x <= b & root p x.",
            "VernacDefinition",
            "798c1853c42351a75c7cae860da71ab9fb9285cd"
        ],
        [
            "End ExtensionAxioms.",
            "VernacEndSegment",
            "a81458058d79317c8502824d465e83a668b8e142"
        ],
        [
            "Local Notation num_for T b := (@NumDomain.Pack T b).",
            "VernacSyntacticDefinition",
            "28c48e93bdb8f19d64841d249cd8fd9fc61101a9"
        ],
        [
            "Module NumField.",
            "VernacDefineModule",
            "e2cd0c58457c86e5aab50c09148f30c290f48ac1"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of R := Class { base : GRing.Field.class_of R; mixin : mixin_of (ring_for R base) }.",
            "VernacInductive",
            "a0b3c4188b6dc11fa66a79168816f08dc0243edb"
        ],
        [
            "Definition base2 R (c : class_of R) := NumDomain.Class (mixin c).",
            "VernacDefinition",
            "5bdaa6cb3ce63798f844742e15a2961dcaf01e30"
        ],
        [
            "Local Coercion base : class_of >-> GRing.Field.class_of.",
            "VernacCoercion",
            "5636c13c6746da5697b4f43bf1269d416958f16a"
        ],
        [
            "Local Coercion base2 : class_of >-> NumDomain.class_of.",
            "VernacCoercion",
            "1808e36e22acc97565d3992f7c41f08f5828cc85"
        ],
        [
            "Structure type := Pack {sort; _ : class_of sort}.",
            "VernacInductive",
            "42b0161295055637e72e97af35c3d44479cc946b"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Let xT := let: Pack T _ := cT in T.",
            "VernacDefinition",
            "0a87c77e3a5ac8febf0910b95d7b998b7cb9cf6d"
        ],
        [
            "Notation xclass := (class : class_of xT).",
            "VernacSyntacticDefinition",
            "e136614fedd7b331a23b54adad5b0bce11895ed4"
        ],
        [
            "Definition pack := fun bT b & phant_id (GRing.Field.class bT) (b : GRing.Field.class_of T) => fun mT m & phant_id (NumDomain.class mT) (@NumDomain.Class T b m) => Pack (@Class T b m).",
            "VernacDefinition",
            "8265f4021f30c4f52b3ce9ba8d43da382f915269"
        ],
        [
            "Definition eqType := @Equality.Pack cT xclass.",
            "VernacDefinition",
            "6139f412b89e62ff13c9c707c885de4b39151e9d"
        ],
        [
            "Definition choiceType := @Choice.Pack cT xclass.",
            "VernacDefinition",
            "f62d3090382a5ea70b978e0633e0376c4558db55"
        ],
        [
            "Definition zmodType := @GRing.Zmodule.Pack cT xclass.",
            "VernacDefinition",
            "55ca79fd57642c05c60d387b339e6f79f04a3ff3"
        ],
        [
            "Definition ringType := @GRing.Ring.Pack cT xclass.",
            "VernacDefinition",
            "0e7fedb841bf2ad5f10e2c47360481415705965d"
        ],
        [
            "Definition comRingType := @GRing.ComRing.Pack cT xclass.",
            "VernacDefinition",
            "3748552bae4edc5fac4b7ed9f0670886e95cc19d"
        ],
        [
            "Definition unitRingType := @GRing.UnitRing.Pack cT xclass.",
            "VernacDefinition",
            "c5af4d2b75d37bfcfb3b3aa3de1e804d0f68cfaa"
        ],
        [
            "Definition comUnitRingType := @GRing.ComUnitRing.Pack cT xclass.",
            "VernacDefinition",
            "1735d883ce4725d8986c69b7929af063cc5e2d96"
        ],
        [
            "Definition idomainType := @GRing.IntegralDomain.Pack cT xclass.",
            "VernacDefinition",
            "539d8333789c356c4b4a70ce49e28100e792554c"
        ],
        [
            "Definition numDomainType := @NumDomain.Pack cT xclass.",
            "VernacDefinition",
            "aea392d913f2dee8ac7335d98c735a03ab1ad3e9"
        ],
        [
            "Definition fieldType := @GRing.Field.Pack cT xclass.",
            "VernacDefinition",
            "a9927943b37fc7c5e7d126fa65fe884de53213ac"
        ],
        [
            "Definition join_numDomainType := @NumDomain.Pack fieldType xclass.",
            "VernacDefinition",
            "c70079422420d66de2698b404187551aef7de90e"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base : class_of >-> GRing.Field.class_of.",
            "VernacCoercion",
            "6d93b1cffc83eccbfe54b123e32d159e948f5bed"
        ],
        [
            "Coercion base2 : class_of >-> NumDomain.class_of.",
            "VernacCoercion",
            "d6125ed9efbed9e589d33c017ec75d0465a36683"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Bind Scope ring_scope with sort.",
            "VernacBindScope",
            "ac04d07dda43f0036576b2a438f8490c7ac4d59b"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical eqType.",
            "VernacCanonical",
            "dd1ac877a396f552e2a8f23e59be45903d8b15ad"
        ],
        [
            "Coercion choiceType : type >-> Choice.type.",
            "VernacCoercion",
            "bdc8d608f4b963a8606cd33ad18b1977a8bcb78d"
        ],
        [
            "Canonical choiceType.",
            "VernacCanonical",
            "af7a1759ddd13e2b7e4e1ce16b6a3595a77b5659"
        ],
        [
            "Coercion zmodType : type >-> GRing.Zmodule.type.",
            "VernacCoercion",
            "e060cc1ea9f61e5bb007225650e27649c68e297c"
        ],
        [
            "Canonical zmodType.",
            "VernacCanonical",
            "9a6f278270af4b6ced100d8e0c90c7719a960a86"
        ],
        [
            "Coercion ringType : type >-> GRing.Ring.type.",
            "VernacCoercion",
            "09ac5026083b32bdc94c69ee431fffb8f01bb95b"
        ],
        [
            "Canonical ringType.",
            "VernacCanonical",
            "b7d4c328ac58b23ee4b52bd787434621c20d2c4d"
        ],
        [
            "Coercion comRingType : type >-> GRing.ComRing.type.",
            "VernacCoercion",
            "7affae689602b4bdfe5fc0a88f2ef5e49dcc52d1"
        ],
        [
            "Canonical comRingType.",
            "VernacCanonical",
            "30f9087081da845c9c545aeb8d7375204ed4f1b3"
        ],
        [
            "Coercion unitRingType : type >-> GRing.UnitRing.type.",
            "VernacCoercion",
            "365e9919776507bbf2b5c3dd980ed8dbe55e8e34"
        ],
        [
            "Canonical unitRingType.",
            "VernacCanonical",
            "5adf5dbcca23e501d2be7f60fe9ad3def13431b8"
        ],
        [
            "Coercion comUnitRingType : type >-> GRing.ComUnitRing.type.",
            "VernacCoercion",
            "f135663b55a7a9a2e84fc46fe054da196765bf3e"
        ],
        [
            "Canonical comUnitRingType.",
            "VernacCanonical",
            "74522c0e1d11ec46568915dda5f1829b7bbe8a04"
        ],
        [
            "Coercion idomainType : type >-> GRing.IntegralDomain.type.",
            "VernacCoercion",
            "7ee1bea483ff4781cc5de921138ed4f2d74a3132"
        ],
        [
            "Canonical idomainType.",
            "VernacCanonical",
            "ec8e76c80fed77c2b91406ec8a21033d94f8380d"
        ],
        [
            "Coercion numDomainType : type >-> NumDomain.type.",
            "VernacCoercion",
            "409fa0b51a859d2072010adc9d26f4dcd117bd46"
        ],
        [
            "Canonical numDomainType.",
            "VernacCanonical",
            "fe84c04789ee4d3b5b33b4feaf2d513d5b21be11"
        ],
        [
            "Coercion fieldType : type >-> GRing.Field.type.",
            "VernacCoercion",
            "d713b4590986c2ad48c83943ccaafc2355549f02"
        ],
        [
            "Canonical fieldType.",
            "VernacCanonical",
            "2f62ae066c69ea008603157a15e19f08a6a6284b"
        ],
        [
            "Notation numFieldType := type.",
            "VernacSyntacticDefinition",
            "3f2d5ee0e20fe9c631717c64987f4912c6ed2549"
        ],
        [
            "Notation \"[ 'numFieldType' 'of' T ]\" := (@pack T _ _ id _ _ id) (at level 0, format \"[ 'numFieldType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "7415b2437c80bab8bcdb30241013affe34cbab00"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End NumField.",
            "VernacEndSegment",
            "ecf748ffddea16004932dbf0f7cbc4e8e279c7bf"
        ],
        [
            "Import NumField.Exports.",
            "VernacImport",
            "92c9ec89b1c10eba82d7f767dc09aab9bf30e800"
        ],
        [
            "Module ClosedField.",
            "VernacDefineModule",
            "dbb3493a79e743a5293733f6ed64030b59e22bc9"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record imaginary_mixin_of (R : numDomainType) := ImaginaryMixin { imaginary : R; conj_op : {rmorphism R -> R}; _ : imaginary ^+ 2 = - 1; _ : forall x, x * conj_op x = `|x| ^+ 2; }.",
            "VernacInductive",
            "44724943cea62321208a68160bccab8bbf7db3df"
        ],
        [
            "Record class_of R := Class { base : GRing.ClosedField.class_of R; mixin : mixin_of (ring_for R base); conj_mixin : imaginary_mixin_of (num_for R (NumDomain.Class mixin)) }.",
            "VernacInductive",
            "166fe03c2c8ac8f33cc014e11721ccee4aa60964"
        ],
        [
            "Definition base2 R (c : class_of R) := NumField.Class (mixin c).",
            "VernacDefinition",
            "75af5141df5d6586c8ca695149c44ae9a78ac0b7"
        ],
        [
            "Local Coercion base : class_of >-> GRing.ClosedField.class_of.",
            "VernacCoercion",
            "ec3cbf29f08f453f69b2856857e4cb7f8669fa45"
        ],
        [
            "Local Coercion base2 : class_of >-> NumField.class_of.",
            "VernacCoercion",
            "e4efe92706ac88e2747c0532677bfc8763a3d997"
        ],
        [
            "Structure type := Pack {sort; _ : class_of sort}.",
            "VernacInductive",
            "42b0161295055637e72e97af35c3d44479cc946b"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Let xT := let: Pack T _ := cT in T.",
            "VernacDefinition",
            "0a87c77e3a5ac8febf0910b95d7b998b7cb9cf6d"
        ],
        [
            "Notation xclass := (class : class_of xT).",
            "VernacSyntacticDefinition",
            "e136614fedd7b331a23b54adad5b0bce11895ed4"
        ],
        [
            "Definition pack := fun bT b & phant_id (GRing.ClosedField.class bT) (b : GRing.ClosedField.class_of T) => fun mT m & phant_id (NumField.class mT) (@NumField.Class T b m) => fun mc => Pack (@Class T b m mc).",
            "VernacDefinition",
            "8305430838bd950238c716b9d76bce7887f988d7"
        ],
        [
            "Definition clone := fun b & phant_id class (b : class_of T) => Pack b.",
            "VernacDefinition",
            "b1a0d31364512cfdd293bc792226318f273e30ce"
        ],
        [
            "Definition eqType := @Equality.Pack cT xclass.",
            "VernacDefinition",
            "6139f412b89e62ff13c9c707c885de4b39151e9d"
        ],
        [
            "Definition choiceType := @Choice.Pack cT xclass.",
            "VernacDefinition",
            "f62d3090382a5ea70b978e0633e0376c4558db55"
        ],
        [
            "Definition zmodType := @GRing.Zmodule.Pack cT xclass.",
            "VernacDefinition",
            "55ca79fd57642c05c60d387b339e6f79f04a3ff3"
        ],
        [
            "Definition ringType := @GRing.Ring.Pack cT xclass.",
            "VernacDefinition",
            "0e7fedb841bf2ad5f10e2c47360481415705965d"
        ],
        [
            "Definition comRingType := @GRing.ComRing.Pack cT xclass.",
            "VernacDefinition",
            "3748552bae4edc5fac4b7ed9f0670886e95cc19d"
        ],
        [
            "Definition unitRingType := @GRing.UnitRing.Pack cT xclass.",
            "VernacDefinition",
            "c5af4d2b75d37bfcfb3b3aa3de1e804d0f68cfaa"
        ],
        [
            "Definition comUnitRingType := @GRing.ComUnitRing.Pack cT xclass.",
            "VernacDefinition",
            "1735d883ce4725d8986c69b7929af063cc5e2d96"
        ],
        [
            "Definition idomainType := @GRing.IntegralDomain.Pack cT xclass.",
            "VernacDefinition",
            "539d8333789c356c4b4a70ce49e28100e792554c"
        ],
        [
            "Definition numDomainType := @NumDomain.Pack cT xclass.",
            "VernacDefinition",
            "aea392d913f2dee8ac7335d98c735a03ab1ad3e9"
        ],
        [
            "Definition fieldType := @GRing.Field.Pack cT xclass.",
            "VernacDefinition",
            "a9927943b37fc7c5e7d126fa65fe884de53213ac"
        ],
        [
            "Definition numFieldType := @NumField.Pack cT xclass.",
            "VernacDefinition",
            "0576590a77c71be3932f0e446970178af6506ebb"
        ],
        [
            "Definition decFieldType := @GRing.DecidableField.Pack cT xclass.",
            "VernacDefinition",
            "52200748ddcfbfebbe625971c21eef0e01c327c2"
        ],
        [
            "Definition closedFieldType := @GRing.ClosedField.Pack cT xclass.",
            "VernacDefinition",
            "3db1d09ca3f5f54d1b42c6354da0a4b62937eb05"
        ],
        [
            "Definition join_dec_numDomainType := @NumDomain.Pack decFieldType xclass.",
            "VernacDefinition",
            "0620be1d16ff43087b0a8b9ef65312269025249c"
        ],
        [
            "Definition join_dec_numFieldType := @NumField.Pack decFieldType xclass.",
            "VernacDefinition",
            "d776126209a30cd8957a8ec723806c0bc0d35ed8"
        ],
        [
            "Definition join_numDomainType := @NumDomain.Pack closedFieldType xclass.",
            "VernacDefinition",
            "b9cbc14a785f341ceffd059cfc88c4941fcaa0b2"
        ],
        [
            "Definition join_numFieldType := @NumField.Pack closedFieldType xclass.",
            "VernacDefinition",
            "b9ef3ba1a42f25e5bb1991362b7e703d63e40f77"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base : class_of >-> GRing.ClosedField.class_of.",
            "VernacCoercion",
            "5601659c72a330a69c78e4c78fb845d668555633"
        ],
        [
            "Coercion base2 : class_of >-> NumField.class_of.",
            "VernacCoercion",
            "49f5a36bbad110ebb141f04a93c15d477cce127e"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Bind Scope ring_scope with sort.",
            "VernacBindScope",
            "ac04d07dda43f0036576b2a438f8490c7ac4d59b"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical eqType.",
            "VernacCanonical",
            "dd1ac877a396f552e2a8f23e59be45903d8b15ad"
        ],
        [
            "Coercion choiceType : type >-> Choice.type.",
            "VernacCoercion",
            "bdc8d608f4b963a8606cd33ad18b1977a8bcb78d"
        ],
        [
            "Canonical choiceType.",
            "VernacCanonical",
            "af7a1759ddd13e2b7e4e1ce16b6a3595a77b5659"
        ],
        [
            "Coercion zmodType : type >-> GRing.Zmodule.type.",
            "VernacCoercion",
            "e060cc1ea9f61e5bb007225650e27649c68e297c"
        ],
        [
            "Canonical zmodType.",
            "VernacCanonical",
            "9a6f278270af4b6ced100d8e0c90c7719a960a86"
        ],
        [
            "Coercion ringType : type >-> GRing.Ring.type.",
            "VernacCoercion",
            "09ac5026083b32bdc94c69ee431fffb8f01bb95b"
        ],
        [
            "Canonical ringType.",
            "VernacCanonical",
            "b7d4c328ac58b23ee4b52bd787434621c20d2c4d"
        ],
        [
            "Coercion comRingType : type >-> GRing.ComRing.type.",
            "VernacCoercion",
            "7affae689602b4bdfe5fc0a88f2ef5e49dcc52d1"
        ],
        [
            "Canonical comRingType.",
            "VernacCanonical",
            "30f9087081da845c9c545aeb8d7375204ed4f1b3"
        ],
        [
            "Coercion unitRingType : type >-> GRing.UnitRing.type.",
            "VernacCoercion",
            "365e9919776507bbf2b5c3dd980ed8dbe55e8e34"
        ],
        [
            "Canonical unitRingType.",
            "VernacCanonical",
            "5adf5dbcca23e501d2be7f60fe9ad3def13431b8"
        ],
        [
            "Coercion comUnitRingType : type >-> GRing.ComUnitRing.type.",
            "VernacCoercion",
            "f135663b55a7a9a2e84fc46fe054da196765bf3e"
        ],
        [
            "Canonical comUnitRingType.",
            "VernacCanonical",
            "74522c0e1d11ec46568915dda5f1829b7bbe8a04"
        ],
        [
            "Coercion idomainType : type >-> GRing.IntegralDomain.type.",
            "VernacCoercion",
            "7ee1bea483ff4781cc5de921138ed4f2d74a3132"
        ],
        [
            "Canonical idomainType.",
            "VernacCanonical",
            "ec8e76c80fed77c2b91406ec8a21033d94f8380d"
        ],
        [
            "Coercion numDomainType : type >-> NumDomain.type.",
            "VernacCoercion",
            "409fa0b51a859d2072010adc9d26f4dcd117bd46"
        ],
        [
            "Canonical numDomainType.",
            "VernacCanonical",
            "fe84c04789ee4d3b5b33b4feaf2d513d5b21be11"
        ],
        [
            "Coercion fieldType : type >-> GRing.Field.type.",
            "VernacCoercion",
            "d713b4590986c2ad48c83943ccaafc2355549f02"
        ],
        [
            "Canonical fieldType.",
            "VernacCanonical",
            "2f62ae066c69ea008603157a15e19f08a6a6284b"
        ],
        [
            "Coercion decFieldType : type >-> GRing.DecidableField.type.",
            "VernacCoercion",
            "fa4255b768831c988b3d2a1177e097dcc5ce129d"
        ],
        [
            "Canonical decFieldType.",
            "VernacCanonical",
            "dd11f9cf737ed8cd67a7804637d9137ba5bbe73f"
        ],
        [
            "Coercion numFieldType : type >-> NumField.type.",
            "VernacCoercion",
            "0fb33413c9923dbfe70940772c7c1a22ce5857d8"
        ],
        [
            "Canonical numFieldType.",
            "VernacCanonical",
            "92cb8d51df5dfb073beaef41441e663ecc24ff43"
        ],
        [
            "Coercion closedFieldType : type >-> GRing.ClosedField.type.",
            "VernacCoercion",
            "17f33d2a4e69d14e90f8e3e6faad1b18e3d9c1b0"
        ],
        [
            "Canonical closedFieldType.",
            "VernacCanonical",
            "d87f6d4f82a5d57b760a5db7a0d2e1198b6799d0"
        ],
        [
            "Canonical join_dec_numDomainType.",
            "VernacCanonical",
            "3d27ab012f96826368e59405e98c6fe5b14b0c95"
        ],
        [
            "Canonical join_dec_numFieldType.",
            "VernacCanonical",
            "e17405f0d98a63611f90feeb0961a3dcb1913c5e"
        ],
        [
            "Canonical join_numDomainType.",
            "VernacCanonical",
            "1027f98d652396d5eee02f5ee809b154819e94e7"
        ],
        [
            "Canonical join_numFieldType.",
            "VernacCanonical",
            "69538aa824be36366648d608aed2bf18e75adcc0"
        ],
        [
            "Notation numClosedFieldType := type.",
            "VernacSyntacticDefinition",
            "394d4b252bceff57296932b593fae9dfdbd98971"
        ],
        [
            "Notation NumClosedFieldType T m := (@pack T _ _ id _ _ id m).",
            "VernacSyntacticDefinition",
            "d9c8a3269c3dc5a8a88c0149eb7d0c69bcf7022e"
        ],
        [
            "Notation \"[ 'numClosedFieldType' 'of' T 'for' cT ]\" := (@clone T cT _ id) (at level 0, format \"[ 'numClosedFieldType' 'of' T 'for' cT ]\") : form_scope.",
            "VernacNotation",
            "d77c29fbbcb80bf99d139e42e09ae337a972a4d6"
        ],
        [
            "Notation \"[ 'numClosedFieldType' 'of' T ]\" := (@clone T _ _ id) (at level 0, format \"[ 'numClosedFieldType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "642fe5a9e639487ee74fb86703272d8a4dd2b8b5"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End ClosedField.",
            "VernacEndSegment",
            "cc7b395c5d4a2febf205a006b1ebc3411123c7c4"
        ],
        [
            "Import ClosedField.Exports.",
            "VernacImport",
            "d5c524ca793ee407172ce4ad2769f6adb11dfd2c"
        ],
        [
            "Module RealDomain.",
            "VernacDefineModule",
            "c137f68cdad69292520434ebb3239dbc222f1f9c"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of R := Class {base : NumDomain.class_of R; _ : @real_axiom (num_for R base)}.",
            "VernacInductive",
            "2c0718bbab9aecff521b27c59dcec33e3d1b48e4"
        ],
        [
            "Local Coercion base : class_of >-> NumDomain.class_of.",
            "VernacCoercion",
            "b52e3ddb4e4f93700a31ce975c3c6db57b0a9498"
        ],
        [
            "Structure type := Pack {sort; _ : class_of sort}.",
            "VernacInductive",
            "42b0161295055637e72e97af35c3d44479cc946b"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Let xT := let: Pack T _ := cT in T.",
            "VernacDefinition",
            "0a87c77e3a5ac8febf0910b95d7b998b7cb9cf6d"
        ],
        [
            "Notation xclass := (class : class_of xT).",
            "VernacSyntacticDefinition",
            "e136614fedd7b331a23b54adad5b0bce11895ed4"
        ],
        [
            "Definition clone c of phant_id class c := @Pack T c.",
            "VernacDefinition",
            "e082321bed0d5d4d78139419fead577313b82668"
        ],
        [
            "Definition pack b0 (m0 : real_axiom (num_for T b0)) := fun bT b & phant_id (NumDomain.class bT) b => fun m & phant_id m0 m => Pack (@Class T b m).",
            "VernacDefinition",
            "79604afb0a06107f3e5405c244674c971d8bcce4"
        ],
        [
            "Definition eqType := @Equality.Pack cT xclass.",
            "VernacDefinition",
            "6139f412b89e62ff13c9c707c885de4b39151e9d"
        ],
        [
            "Definition choiceType := @Choice.Pack cT xclass.",
            "VernacDefinition",
            "f62d3090382a5ea70b978e0633e0376c4558db55"
        ],
        [
            "Definition zmodType := @GRing.Zmodule.Pack cT xclass.",
            "VernacDefinition",
            "55ca79fd57642c05c60d387b339e6f79f04a3ff3"
        ],
        [
            "Definition ringType := @GRing.Ring.Pack cT xclass.",
            "VernacDefinition",
            "0e7fedb841bf2ad5f10e2c47360481415705965d"
        ],
        [
            "Definition comRingType := @GRing.ComRing.Pack cT xclass.",
            "VernacDefinition",
            "3748552bae4edc5fac4b7ed9f0670886e95cc19d"
        ],
        [
            "Definition unitRingType := @GRing.UnitRing.Pack cT xclass.",
            "VernacDefinition",
            "c5af4d2b75d37bfcfb3b3aa3de1e804d0f68cfaa"
        ],
        [
            "Definition comUnitRingType := @GRing.ComUnitRing.Pack cT xclass.",
            "VernacDefinition",
            "1735d883ce4725d8986c69b7929af063cc5e2d96"
        ],
        [
            "Definition idomainType := @GRing.IntegralDomain.Pack cT xclass.",
            "VernacDefinition",
            "539d8333789c356c4b4a70ce49e28100e792554c"
        ],
        [
            "Definition numDomainType := @NumDomain.Pack cT xclass.",
            "VernacDefinition",
            "aea392d913f2dee8ac7335d98c735a03ab1ad3e9"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base : class_of >-> NumDomain.class_of.",
            "VernacCoercion",
            "7a1e075e6d11b8c6933ed7da92d4af49e9718de7"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Bind Scope ring_scope with sort.",
            "VernacBindScope",
            "ac04d07dda43f0036576b2a438f8490c7ac4d59b"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical eqType.",
            "VernacCanonical",
            "dd1ac877a396f552e2a8f23e59be45903d8b15ad"
        ],
        [
            "Coercion choiceType : type >-> Choice.type.",
            "VernacCoercion",
            "bdc8d608f4b963a8606cd33ad18b1977a8bcb78d"
        ],
        [
            "Canonical choiceType.",
            "VernacCanonical",
            "af7a1759ddd13e2b7e4e1ce16b6a3595a77b5659"
        ],
        [
            "Coercion zmodType : type >-> GRing.Zmodule.type.",
            "VernacCoercion",
            "e060cc1ea9f61e5bb007225650e27649c68e297c"
        ],
        [
            "Canonical zmodType.",
            "VernacCanonical",
            "9a6f278270af4b6ced100d8e0c90c7719a960a86"
        ],
        [
            "Coercion ringType : type >-> GRing.Ring.type.",
            "VernacCoercion",
            "09ac5026083b32bdc94c69ee431fffb8f01bb95b"
        ],
        [
            "Canonical ringType.",
            "VernacCanonical",
            "b7d4c328ac58b23ee4b52bd787434621c20d2c4d"
        ],
        [
            "Coercion comRingType : type >-> GRing.ComRing.type.",
            "VernacCoercion",
            "7affae689602b4bdfe5fc0a88f2ef5e49dcc52d1"
        ],
        [
            "Canonical comRingType.",
            "VernacCanonical",
            "30f9087081da845c9c545aeb8d7375204ed4f1b3"
        ],
        [
            "Coercion unitRingType : type >-> GRing.UnitRing.type.",
            "VernacCoercion",
            "365e9919776507bbf2b5c3dd980ed8dbe55e8e34"
        ],
        [
            "Canonical unitRingType.",
            "VernacCanonical",
            "5adf5dbcca23e501d2be7f60fe9ad3def13431b8"
        ],
        [
            "Coercion comUnitRingType : type >-> GRing.ComUnitRing.type.",
            "VernacCoercion",
            "f135663b55a7a9a2e84fc46fe054da196765bf3e"
        ],
        [
            "Canonical comUnitRingType.",
            "VernacCanonical",
            "74522c0e1d11ec46568915dda5f1829b7bbe8a04"
        ],
        [
            "Coercion idomainType : type >-> GRing.IntegralDomain.type.",
            "VernacCoercion",
            "7ee1bea483ff4781cc5de921138ed4f2d74a3132"
        ],
        [
            "Canonical idomainType.",
            "VernacCanonical",
            "ec8e76c80fed77c2b91406ec8a21033d94f8380d"
        ],
        [
            "Coercion numDomainType : type >-> NumDomain.type.",
            "VernacCoercion",
            "409fa0b51a859d2072010adc9d26f4dcd117bd46"
        ],
        [
            "Canonical numDomainType.",
            "VernacCanonical",
            "fe84c04789ee4d3b5b33b4feaf2d513d5b21be11"
        ],
        [
            "Notation realDomainType := type.",
            "VernacSyntacticDefinition",
            "d4a20fd2475e954c359dd1b29406b469ff6c7488"
        ],
        [
            "Notation RealDomainType T m := (@pack T _ m _ _ id _ id).",
            "VernacSyntacticDefinition",
            "60cc6b14aaeec69b902755f9046bc251a47e7158"
        ],
        [
            "Notation \"[ 'realDomainType' 'of' T 'for' cT ]\" := (@clone T cT _ idfun) (at level 0, format \"[ 'realDomainType' 'of' T 'for' cT ]\") : form_scope.",
            "VernacNotation",
            "b7864d067547b703a8df1e6d71aab0110bca2341"
        ],
        [
            "Notation \"[ 'realDomainType' 'of' T ]\" := (@clone T _ _ id) (at level 0, format \"[ 'realDomainType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "504ff280eadbe99468a8ca17df2bbcc3343ddfc5"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End RealDomain.",
            "VernacEndSegment",
            "97240805e18fa91a7f744bdb04a62b241d25cd2e"
        ],
        [
            "Import RealDomain.Exports.",
            "VernacImport",
            "e70b64aa805911c85bbcaa0c46242b641bd84bb9"
        ],
        [
            "Module RealField.",
            "VernacDefineModule",
            "f7ab055cdd13368bdff417f44add416cfe2787ff"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of R := Class { base : NumField.class_of R; mixin : real_axiom (num_for R base) }.",
            "VernacInductive",
            "b93b0950ca4b3ff53246ec96a0b8b48df1c61c82"
        ],
        [
            "Definition base2 R (c : class_of R) := RealDomain.Class (@mixin R c).",
            "VernacDefinition",
            "5bff5a0b496f9ca01da9ab5a3bee9739d47dec1a"
        ],
        [
            "Local Coercion base : class_of >-> NumField.class_of.",
            "VernacCoercion",
            "e093b16bb849fb1d21c090cf5ff259987ea04928"
        ],
        [
            "Local Coercion base2 : class_of >-> RealDomain.class_of.",
            "VernacCoercion",
            "b2f70f595f3976abab5b6864be323418eabac1eb"
        ],
        [
            "Structure type := Pack {sort; _ : class_of sort}.",
            "VernacInductive",
            "42b0161295055637e72e97af35c3d44479cc946b"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Let xT := let: Pack T _ := cT in T.",
            "VernacDefinition",
            "0a87c77e3a5ac8febf0910b95d7b998b7cb9cf6d"
        ],
        [
            "Notation xclass := (class : class_of xT).",
            "VernacSyntacticDefinition",
            "e136614fedd7b331a23b54adad5b0bce11895ed4"
        ],
        [
            "Definition pack := fun bT b & phant_id (NumField.class bT) (b : NumField.class_of T) => fun mT m & phant_id (RealDomain.class mT) (@RealDomain.Class T b m) => Pack (@Class T b m).",
            "VernacDefinition",
            "b55430f91e7dc1032b77c773ac667ce596fcb780"
        ],
        [
            "Definition eqType := @Equality.Pack cT xclass.",
            "VernacDefinition",
            "6139f412b89e62ff13c9c707c885de4b39151e9d"
        ],
        [
            "Definition choiceType := @Choice.Pack cT xclass.",
            "VernacDefinition",
            "f62d3090382a5ea70b978e0633e0376c4558db55"
        ],
        [
            "Definition zmodType := @GRing.Zmodule.Pack cT xclass.",
            "VernacDefinition",
            "55ca79fd57642c05c60d387b339e6f79f04a3ff3"
        ],
        [
            "Definition ringType := @GRing.Ring.Pack cT xclass.",
            "VernacDefinition",
            "0e7fedb841bf2ad5f10e2c47360481415705965d"
        ],
        [
            "Definition comRingType := @GRing.ComRing.Pack cT xclass.",
            "VernacDefinition",
            "3748552bae4edc5fac4b7ed9f0670886e95cc19d"
        ],
        [
            "Definition unitRingType := @GRing.UnitRing.Pack cT xclass.",
            "VernacDefinition",
            "c5af4d2b75d37bfcfb3b3aa3de1e804d0f68cfaa"
        ],
        [
            "Definition comUnitRingType := @GRing.ComUnitRing.Pack cT xclass.",
            "VernacDefinition",
            "1735d883ce4725d8986c69b7929af063cc5e2d96"
        ],
        [
            "Definition idomainType := @GRing.IntegralDomain.Pack cT xclass.",
            "VernacDefinition",
            "539d8333789c356c4b4a70ce49e28100e792554c"
        ],
        [
            "Definition numDomainType := @NumDomain.Pack cT xclass.",
            "VernacDefinition",
            "aea392d913f2dee8ac7335d98c735a03ab1ad3e9"
        ],
        [
            "Definition realDomainType := @RealDomain.Pack cT xclass.",
            "VernacDefinition",
            "e5491d979acff7870cb3d5cdae37d70ddf733c34"
        ],
        [
            "Definition fieldType := @GRing.Field.Pack cT xclass.",
            "VernacDefinition",
            "a9927943b37fc7c5e7d126fa65fe884de53213ac"
        ],
        [
            "Definition numFieldType := @NumField.Pack cT xclass.",
            "VernacDefinition",
            "0576590a77c71be3932f0e446970178af6506ebb"
        ],
        [
            "Definition join_realDomainType := @RealDomain.Pack numFieldType xclass.",
            "VernacDefinition",
            "666097be318541d52a79ad1c93ffaec6ea95cc46"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base : class_of >-> NumField.class_of.",
            "VernacCoercion",
            "b76061f2f23661fd872498f962f389dd6c36a88e"
        ],
        [
            "Coercion base2 : class_of >-> RealDomain.class_of.",
            "VernacCoercion",
            "0a29790a7b17f0c823e9b25e1610d67e00563003"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Bind Scope ring_scope with sort.",
            "VernacBindScope",
            "ac04d07dda43f0036576b2a438f8490c7ac4d59b"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical eqType.",
            "VernacCanonical",
            "dd1ac877a396f552e2a8f23e59be45903d8b15ad"
        ],
        [
            "Coercion choiceType : type >-> Choice.type.",
            "VernacCoercion",
            "bdc8d608f4b963a8606cd33ad18b1977a8bcb78d"
        ],
        [
            "Canonical choiceType.",
            "VernacCanonical",
            "af7a1759ddd13e2b7e4e1ce16b6a3595a77b5659"
        ],
        [
            "Coercion zmodType : type >-> GRing.Zmodule.type.",
            "VernacCoercion",
            "e060cc1ea9f61e5bb007225650e27649c68e297c"
        ],
        [
            "Canonical zmodType.",
            "VernacCanonical",
            "9a6f278270af4b6ced100d8e0c90c7719a960a86"
        ],
        [
            "Coercion ringType : type >-> GRing.Ring.type.",
            "VernacCoercion",
            "09ac5026083b32bdc94c69ee431fffb8f01bb95b"
        ],
        [
            "Canonical ringType.",
            "VernacCanonical",
            "b7d4c328ac58b23ee4b52bd787434621c20d2c4d"
        ],
        [
            "Coercion comRingType : type >-> GRing.ComRing.type.",
            "VernacCoercion",
            "7affae689602b4bdfe5fc0a88f2ef5e49dcc52d1"
        ],
        [
            "Canonical comRingType.",
            "VernacCanonical",
            "30f9087081da845c9c545aeb8d7375204ed4f1b3"
        ],
        [
            "Coercion unitRingType : type >-> GRing.UnitRing.type.",
            "VernacCoercion",
            "365e9919776507bbf2b5c3dd980ed8dbe55e8e34"
        ],
        [
            "Canonical unitRingType.",
            "VernacCanonical",
            "5adf5dbcca23e501d2be7f60fe9ad3def13431b8"
        ],
        [
            "Coercion comUnitRingType : type >-> GRing.ComUnitRing.type.",
            "VernacCoercion",
            "f135663b55a7a9a2e84fc46fe054da196765bf3e"
        ],
        [
            "Canonical comUnitRingType.",
            "VernacCanonical",
            "74522c0e1d11ec46568915dda5f1829b7bbe8a04"
        ],
        [
            "Coercion idomainType : type >-> GRing.IntegralDomain.type.",
            "VernacCoercion",
            "7ee1bea483ff4781cc5de921138ed4f2d74a3132"
        ],
        [
            "Canonical idomainType.",
            "VernacCanonical",
            "ec8e76c80fed77c2b91406ec8a21033d94f8380d"
        ],
        [
            "Coercion numDomainType : type >-> NumDomain.type.",
            "VernacCoercion",
            "409fa0b51a859d2072010adc9d26f4dcd117bd46"
        ],
        [
            "Canonical numDomainType.",
            "VernacCanonical",
            "fe84c04789ee4d3b5b33b4feaf2d513d5b21be11"
        ],
        [
            "Coercion realDomainType : type >-> RealDomain.type.",
            "VernacCoercion",
            "cedcb5a0fcf726465f2c9d09818d10b036e0efa2"
        ],
        [
            "Canonical realDomainType.",
            "VernacCanonical",
            "5a958339b41998f6a52a1f59396498702466d2be"
        ],
        [
            "Coercion fieldType : type >-> GRing.Field.type.",
            "VernacCoercion",
            "d713b4590986c2ad48c83943ccaafc2355549f02"
        ],
        [
            "Canonical fieldType.",
            "VernacCanonical",
            "2f62ae066c69ea008603157a15e19f08a6a6284b"
        ],
        [
            "Coercion numFieldType : type >-> NumField.type.",
            "VernacCoercion",
            "0fb33413c9923dbfe70940772c7c1a22ce5857d8"
        ],
        [
            "Canonical numFieldType.",
            "VernacCanonical",
            "92cb8d51df5dfb073beaef41441e663ecc24ff43"
        ],
        [
            "Canonical join_realDomainType.",
            "VernacCanonical",
            "a9a0f7426fef3571371fd2749e911139865381da"
        ],
        [
            "Notation realFieldType := type.",
            "VernacSyntacticDefinition",
            "cb76b5e12869d8822f1aaacfdb162c89e2c389ec"
        ],
        [
            "Notation \"[ 'realFieldType' 'of' T ]\" := (@pack T _ _ id _ _ id) (at level 0, format \"[ 'realFieldType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "895915a17a8327c55d3da3dba8698a11ab3f3841"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End RealField.",
            "VernacEndSegment",
            "e7523b5e2f923f3a9faf79cdefd1a1f7f7f446e3"
        ],
        [
            "Import RealField.Exports.",
            "VernacImport",
            "e32af657de76007099ac071ad55fc1dfb42d1a47"
        ],
        [
            "Module ArchimedeanField.",
            "VernacDefineModule",
            "2c063e247c0aa1bd9463102761afccca3b72233d"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of R := Class { base : RealField.class_of R; _ : archimedean_axiom (num_for R base) }.",
            "VernacInductive",
            "f11a75677e19bb56ddc69e84841c6c82a375bcea"
        ],
        [
            "Local Coercion base : class_of >-> RealField.class_of.",
            "VernacCoercion",
            "c5781d48d437417a76c99624abeefed3180a0ea9"
        ],
        [
            "Structure type := Pack {sort; _ : class_of sort}.",
            "VernacInductive",
            "42b0161295055637e72e97af35c3d44479cc946b"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Let xT := let: Pack T _ := cT in T.",
            "VernacDefinition",
            "0a87c77e3a5ac8febf0910b95d7b998b7cb9cf6d"
        ],
        [
            "Notation xclass := (class : class_of xT).",
            "VernacSyntacticDefinition",
            "e136614fedd7b331a23b54adad5b0bce11895ed4"
        ],
        [
            "Definition clone c of phant_id class c := @Pack T c.",
            "VernacDefinition",
            "e082321bed0d5d4d78139419fead577313b82668"
        ],
        [
            "Definition pack b0 (m0 : archimedean_axiom (num_for T b0)) := fun bT b & phant_id (RealField.class bT) b => fun m & phant_id m0 m => Pack (@Class T b m).",
            "VernacDefinition",
            "977758fbe7536328ceff05782ef94f7b846439c4"
        ],
        [
            "Definition eqType := @Equality.Pack cT xclass.",
            "VernacDefinition",
            "6139f412b89e62ff13c9c707c885de4b39151e9d"
        ],
        [
            "Definition choiceType := @Choice.Pack cT xclass.",
            "VernacDefinition",
            "f62d3090382a5ea70b978e0633e0376c4558db55"
        ],
        [
            "Definition zmodType := @GRing.Zmodule.Pack cT xclass.",
            "VernacDefinition",
            "55ca79fd57642c05c60d387b339e6f79f04a3ff3"
        ],
        [
            "Definition ringType := @GRing.Ring.Pack cT xclass.",
            "VernacDefinition",
            "0e7fedb841bf2ad5f10e2c47360481415705965d"
        ],
        [
            "Definition comRingType := @GRing.ComRing.Pack cT xclass.",
            "VernacDefinition",
            "3748552bae4edc5fac4b7ed9f0670886e95cc19d"
        ],
        [
            "Definition unitRingType := @GRing.UnitRing.Pack cT xclass.",
            "VernacDefinition",
            "c5af4d2b75d37bfcfb3b3aa3de1e804d0f68cfaa"
        ],
        [
            "Definition comUnitRingType := @GRing.ComUnitRing.Pack cT xclass.",
            "VernacDefinition",
            "1735d883ce4725d8986c69b7929af063cc5e2d96"
        ],
        [
            "Definition idomainType := @GRing.IntegralDomain.Pack cT xclass.",
            "VernacDefinition",
            "539d8333789c356c4b4a70ce49e28100e792554c"
        ],
        [
            "Definition numDomainType := @NumDomain.Pack cT xclass.",
            "VernacDefinition",
            "aea392d913f2dee8ac7335d98c735a03ab1ad3e9"
        ],
        [
            "Definition realDomainType := @RealDomain.Pack cT xclass.",
            "VernacDefinition",
            "e5491d979acff7870cb3d5cdae37d70ddf733c34"
        ],
        [
            "Definition fieldType := @GRing.Field.Pack cT xclass.",
            "VernacDefinition",
            "a9927943b37fc7c5e7d126fa65fe884de53213ac"
        ],
        [
            "Definition numFieldType := @NumField.Pack cT xclass.",
            "VernacDefinition",
            "0576590a77c71be3932f0e446970178af6506ebb"
        ],
        [
            "Definition realFieldType := @RealField.Pack cT xclass.",
            "VernacDefinition",
            "26c331cc85560332206e5b7512866ef88a47f601"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base : class_of >-> RealField.class_of.",
            "VernacCoercion",
            "adee7177366a65be0853191396761e2d29b41700"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Bind Scope ring_scope with sort.",
            "VernacBindScope",
            "ac04d07dda43f0036576b2a438f8490c7ac4d59b"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical eqType.",
            "VernacCanonical",
            "dd1ac877a396f552e2a8f23e59be45903d8b15ad"
        ],
        [
            "Coercion choiceType : type >-> Choice.type.",
            "VernacCoercion",
            "bdc8d608f4b963a8606cd33ad18b1977a8bcb78d"
        ],
        [
            "Canonical choiceType.",
            "VernacCanonical",
            "af7a1759ddd13e2b7e4e1ce16b6a3595a77b5659"
        ],
        [
            "Coercion zmodType : type >-> GRing.Zmodule.type.",
            "VernacCoercion",
            "e060cc1ea9f61e5bb007225650e27649c68e297c"
        ],
        [
            "Canonical zmodType.",
            "VernacCanonical",
            "9a6f278270af4b6ced100d8e0c90c7719a960a86"
        ],
        [
            "Coercion ringType : type >-> GRing.Ring.type.",
            "VernacCoercion",
            "09ac5026083b32bdc94c69ee431fffb8f01bb95b"
        ],
        [
            "Canonical ringType.",
            "VernacCanonical",
            "b7d4c328ac58b23ee4b52bd787434621c20d2c4d"
        ],
        [
            "Coercion comRingType : type >-> GRing.ComRing.type.",
            "VernacCoercion",
            "7affae689602b4bdfe5fc0a88f2ef5e49dcc52d1"
        ],
        [
            "Canonical comRingType.",
            "VernacCanonical",
            "30f9087081da845c9c545aeb8d7375204ed4f1b3"
        ],
        [
            "Coercion unitRingType : type >-> GRing.UnitRing.type.",
            "VernacCoercion",
            "365e9919776507bbf2b5c3dd980ed8dbe55e8e34"
        ],
        [
            "Canonical unitRingType.",
            "VernacCanonical",
            "5adf5dbcca23e501d2be7f60fe9ad3def13431b8"
        ],
        [
            "Coercion comUnitRingType : type >-> GRing.ComUnitRing.type.",
            "VernacCoercion",
            "f135663b55a7a9a2e84fc46fe054da196765bf3e"
        ],
        [
            "Canonical comUnitRingType.",
            "VernacCanonical",
            "74522c0e1d11ec46568915dda5f1829b7bbe8a04"
        ],
        [
            "Coercion idomainType : type >-> GRing.IntegralDomain.type.",
            "VernacCoercion",
            "7ee1bea483ff4781cc5de921138ed4f2d74a3132"
        ],
        [
            "Canonical idomainType.",
            "VernacCanonical",
            "ec8e76c80fed77c2b91406ec8a21033d94f8380d"
        ],
        [
            "Coercion numDomainType : type >-> NumDomain.type.",
            "VernacCoercion",
            "409fa0b51a859d2072010adc9d26f4dcd117bd46"
        ],
        [
            "Canonical numDomainType.",
            "VernacCanonical",
            "fe84c04789ee4d3b5b33b4feaf2d513d5b21be11"
        ],
        [
            "Coercion realDomainType : type >-> RealDomain.type.",
            "VernacCoercion",
            "cedcb5a0fcf726465f2c9d09818d10b036e0efa2"
        ],
        [
            "Canonical realDomainType.",
            "VernacCanonical",
            "5a958339b41998f6a52a1f59396498702466d2be"
        ],
        [
            "Coercion fieldType : type >-> GRing.Field.type.",
            "VernacCoercion",
            "d713b4590986c2ad48c83943ccaafc2355549f02"
        ],
        [
            "Canonical fieldType.",
            "VernacCanonical",
            "2f62ae066c69ea008603157a15e19f08a6a6284b"
        ],
        [
            "Coercion numFieldType : type >-> NumField.type.",
            "VernacCoercion",
            "0fb33413c9923dbfe70940772c7c1a22ce5857d8"
        ],
        [
            "Canonical numFieldType.",
            "VernacCanonical",
            "92cb8d51df5dfb073beaef41441e663ecc24ff43"
        ],
        [
            "Coercion realFieldType : type >-> RealField.type.",
            "VernacCoercion",
            "24a0d7711c6f7748fab286caaf53a408cc12da49"
        ],
        [
            "Canonical realFieldType.",
            "VernacCanonical",
            "fda4e04e639183ac46c371c44f05af9cb58a6915"
        ],
        [
            "Notation archiFieldType := type.",
            "VernacSyntacticDefinition",
            "bd9c3cd67b9882d9844d134ee925590af617bb6a"
        ],
        [
            "Notation ArchiFieldType T m := (@pack T _ m _ _ id _ id).",
            "VernacSyntacticDefinition",
            "c2a7998332cdf9e65bb2c64f177c9532bea1ff62"
        ],
        [
            "Notation \"[ 'archiFieldType' 'of' T 'for' cT ]\" := (@clone T cT _ idfun) (at level 0, format \"[ 'archiFieldType' 'of' T 'for' cT ]\") : form_scope.",
            "VernacNotation",
            "6e18097298db60d18f5f5a4eef60f2aa28fd07e1"
        ],
        [
            "Notation \"[ 'archiFieldType' 'of' T ]\" := (@clone T _ _ id) (at level 0, format \"[ 'archiFieldType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "f452804137556201574e74335fa12f3535ba47dd"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End ArchimedeanField.",
            "VernacEndSegment",
            "1640a6f7dc8fe804939ed39b9038fab703b3fb34"
        ],
        [
            "Import ArchimedeanField.Exports.",
            "VernacImport",
            "1c3b43613dcba7049928531bf04806316b951e81"
        ],
        [
            "Module RealClosedField.",
            "VernacDefineModule",
            "faa776b4dd3c0a9e12511621620d287de749fc90"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of R := Class { base : RealField.class_of R; _ : real_closed_axiom (num_for R base) }.",
            "VernacInductive",
            "b494a7534d185acb939cf16165682300cb252882"
        ],
        [
            "Local Coercion base : class_of >-> RealField.class_of.",
            "VernacCoercion",
            "c5781d48d437417a76c99624abeefed3180a0ea9"
        ],
        [
            "Structure type := Pack {sort; _ : class_of sort}.",
            "VernacInductive",
            "42b0161295055637e72e97af35c3d44479cc946b"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Let xT := let: Pack T _ := cT in T.",
            "VernacDefinition",
            "0a87c77e3a5ac8febf0910b95d7b998b7cb9cf6d"
        ],
        [
            "Notation xclass := (class : class_of xT).",
            "VernacSyntacticDefinition",
            "e136614fedd7b331a23b54adad5b0bce11895ed4"
        ],
        [
            "Definition clone c of phant_id class c := @Pack T c.",
            "VernacDefinition",
            "e082321bed0d5d4d78139419fead577313b82668"
        ],
        [
            "Definition pack b0 (m0 : real_closed_axiom (num_for T b0)) := fun bT b & phant_id (RealField.class bT) b => fun m & phant_id m0 m => Pack (@Class T b m).",
            "VernacDefinition",
            "0f496b2168e3c48f8d3a4a369d3004feaead0f92"
        ],
        [
            "Definition eqType := @Equality.Pack cT xclass.",
            "VernacDefinition",
            "6139f412b89e62ff13c9c707c885de4b39151e9d"
        ],
        [
            "Definition choiceType := @Choice.Pack cT xclass.",
            "VernacDefinition",
            "f62d3090382a5ea70b978e0633e0376c4558db55"
        ],
        [
            "Definition zmodType := @GRing.Zmodule.Pack cT xclass.",
            "VernacDefinition",
            "55ca79fd57642c05c60d387b339e6f79f04a3ff3"
        ],
        [
            "Definition ringType := @GRing.Ring.Pack cT xclass.",
            "VernacDefinition",
            "0e7fedb841bf2ad5f10e2c47360481415705965d"
        ],
        [
            "Definition comRingType := @GRing.ComRing.Pack cT xclass.",
            "VernacDefinition",
            "3748552bae4edc5fac4b7ed9f0670886e95cc19d"
        ],
        [
            "Definition unitRingType := @GRing.UnitRing.Pack cT xclass.",
            "VernacDefinition",
            "c5af4d2b75d37bfcfb3b3aa3de1e804d0f68cfaa"
        ],
        [
            "Definition comUnitRingType := @GRing.ComUnitRing.Pack cT xclass.",
            "VernacDefinition",
            "1735d883ce4725d8986c69b7929af063cc5e2d96"
        ],
        [
            "Definition idomainType := @GRing.IntegralDomain.Pack cT xclass.",
            "VernacDefinition",
            "539d8333789c356c4b4a70ce49e28100e792554c"
        ],
        [
            "Definition numDomainType := @NumDomain.Pack cT xclass.",
            "VernacDefinition",
            "aea392d913f2dee8ac7335d98c735a03ab1ad3e9"
        ],
        [
            "Definition realDomainType := @RealDomain.Pack cT xclass.",
            "VernacDefinition",
            "e5491d979acff7870cb3d5cdae37d70ddf733c34"
        ],
        [
            "Definition fieldType := @GRing.Field.Pack cT xclass.",
            "VernacDefinition",
            "a9927943b37fc7c5e7d126fa65fe884de53213ac"
        ],
        [
            "Definition numFieldType := @NumField.Pack cT xclass.",
            "VernacDefinition",
            "0576590a77c71be3932f0e446970178af6506ebb"
        ],
        [
            "Definition realFieldType := @RealField.Pack cT xclass.",
            "VernacDefinition",
            "26c331cc85560332206e5b7512866ef88a47f601"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base : class_of >-> RealField.class_of.",
            "VernacCoercion",
            "adee7177366a65be0853191396761e2d29b41700"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Bind Scope ring_scope with sort.",
            "VernacBindScope",
            "ac04d07dda43f0036576b2a438f8490c7ac4d59b"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical eqType.",
            "VernacCanonical",
            "dd1ac877a396f552e2a8f23e59be45903d8b15ad"
        ],
        [
            "Coercion choiceType : type >-> Choice.type.",
            "VernacCoercion",
            "bdc8d608f4b963a8606cd33ad18b1977a8bcb78d"
        ],
        [
            "Canonical choiceType.",
            "VernacCanonical",
            "af7a1759ddd13e2b7e4e1ce16b6a3595a77b5659"
        ],
        [
            "Coercion zmodType : type >-> GRing.Zmodule.type.",
            "VernacCoercion",
            "e060cc1ea9f61e5bb007225650e27649c68e297c"
        ],
        [
            "Canonical zmodType.",
            "VernacCanonical",
            "9a6f278270af4b6ced100d8e0c90c7719a960a86"
        ],
        [
            "Coercion ringType : type >-> GRing.Ring.type.",
            "VernacCoercion",
            "09ac5026083b32bdc94c69ee431fffb8f01bb95b"
        ],
        [
            "Canonical ringType.",
            "VernacCanonical",
            "b7d4c328ac58b23ee4b52bd787434621c20d2c4d"
        ],
        [
            "Coercion comRingType : type >-> GRing.ComRing.type.",
            "VernacCoercion",
            "7affae689602b4bdfe5fc0a88f2ef5e49dcc52d1"
        ],
        [
            "Canonical comRingType.",
            "VernacCanonical",
            "30f9087081da845c9c545aeb8d7375204ed4f1b3"
        ],
        [
            "Coercion unitRingType : type >-> GRing.UnitRing.type.",
            "VernacCoercion",
            "365e9919776507bbf2b5c3dd980ed8dbe55e8e34"
        ],
        [
            "Canonical unitRingType.",
            "VernacCanonical",
            "5adf5dbcca23e501d2be7f60fe9ad3def13431b8"
        ],
        [
            "Coercion comUnitRingType : type >-> GRing.ComUnitRing.type.",
            "VernacCoercion",
            "f135663b55a7a9a2e84fc46fe054da196765bf3e"
        ],
        [
            "Canonical comUnitRingType.",
            "VernacCanonical",
            "74522c0e1d11ec46568915dda5f1829b7bbe8a04"
        ],
        [
            "Coercion idomainType : type >-> GRing.IntegralDomain.type.",
            "VernacCoercion",
            "7ee1bea483ff4781cc5de921138ed4f2d74a3132"
        ],
        [
            "Canonical idomainType.",
            "VernacCanonical",
            "ec8e76c80fed77c2b91406ec8a21033d94f8380d"
        ],
        [
            "Coercion numDomainType : type >-> NumDomain.type.",
            "VernacCoercion",
            "409fa0b51a859d2072010adc9d26f4dcd117bd46"
        ],
        [
            "Canonical numDomainType.",
            "VernacCanonical",
            "fe84c04789ee4d3b5b33b4feaf2d513d5b21be11"
        ],
        [
            "Coercion realDomainType : type >-> RealDomain.type.",
            "VernacCoercion",
            "cedcb5a0fcf726465f2c9d09818d10b036e0efa2"
        ],
        [
            "Canonical realDomainType.",
            "VernacCanonical",
            "5a958339b41998f6a52a1f59396498702466d2be"
        ],
        [
            "Coercion fieldType : type >-> GRing.Field.type.",
            "VernacCoercion",
            "d713b4590986c2ad48c83943ccaafc2355549f02"
        ],
        [
            "Canonical fieldType.",
            "VernacCanonical",
            "2f62ae066c69ea008603157a15e19f08a6a6284b"
        ],
        [
            "Coercion numFieldType : type >-> NumField.type.",
            "VernacCoercion",
            "0fb33413c9923dbfe70940772c7c1a22ce5857d8"
        ],
        [
            "Canonical numFieldType.",
            "VernacCanonical",
            "92cb8d51df5dfb073beaef41441e663ecc24ff43"
        ],
        [
            "Coercion realFieldType : type >-> RealField.type.",
            "VernacCoercion",
            "24a0d7711c6f7748fab286caaf53a408cc12da49"
        ],
        [
            "Canonical realFieldType.",
            "VernacCanonical",
            "fda4e04e639183ac46c371c44f05af9cb58a6915"
        ],
        [
            "Notation rcfType := Num.RealClosedField.type.",
            "VernacSyntacticDefinition",
            "571c9646b0cc6cfee1502ba2f77736eec56e3665"
        ],
        [
            "Notation RcfType T m := (@pack T _ m _ _ id _ id).",
            "VernacSyntacticDefinition",
            "fa393f107d7de33a000b3c1378028da4cc0b5c41"
        ],
        [
            "Notation \"[ 'rcfType' 'of' T 'for' cT ]\" := (@clone T cT _ idfun) (at level 0, format \"[ 'rcfType' 'of' T 'for' cT ]\") : form_scope.",
            "VernacNotation",
            "3e2da64f09b4321d6edaeb3e782d6ee84aa6b51a"
        ],
        [
            "Notation \"[ 'rcfType' 'of' T ]\" := (@clone T _ _ id) (at level 0, format \"[ 'rcfType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "bf7d2670357d4b94eebc4b1157853cf97c6f8eda"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End RealClosedField.",
            "VernacEndSegment",
            "541d5c6d15149d4e4bd2775c204b4bab7c93681d"
        ],
        [
            "Import RealClosedField.Exports.",
            "VernacImport",
            "bb876cb402c0c92c93f1362e2ba80a073a6d2edf"
        ],
        [
            "Module Import Internals.",
            "VernacDefineModule",
            "ee3e6f2daedfe137035ec0673a7ff5bf4ab67eae"
        ],
        [
            "Section Domain.",
            "VernacBeginSection",
            "d40cc7069bf0a4ece6964ff95be999b55d4bec03"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Implicit Types x y : R.",
            "VernacReserve",
            "a698213249308a1927c4fb90fb6e1fbc35157508"
        ],
        [
            "Lemma normr0_eq0 x : `|x| = 0 -> x = 0.",
            "VernacStartTheoremProof",
            "2a710b7990dd4f75a40406b2fbeaf2fdf05cf867"
        ],
        [
            "by case: R x => ? [? []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_norm_add x y : `|x + y| <= `|x| + `|y|.",
            "VernacStartTheoremProof",
            "f7d007c07f049267fbfcf9759206bf6f5be579b7"
        ],
        [
            "by case: R x y => ? [? []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addr_gt0 x y : 0 < x -> 0 < y -> 0 < x + y.",
            "VernacStartTheoremProof",
            "e132b43be769356a569f82e5c106c6039efce414"
        ],
        [
            "by case: R x y => ? [? []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_leVge x y : 0 <= x -> 0 <= y -> (x <= y) || (y <= x).",
            "VernacStartTheoremProof",
            "c03edb5c2a6c11bcfe10dda49cfc4eca5fa1aa68"
        ],
        [
            "by case: R x y => ? [? []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normrM : {morph norm : x y / x * y : R}.",
            "VernacStartTheoremProof",
            "5759c27423afa635c5899eaa6b4b5f498954fbbf"
        ],
        [
            "by case: R => ? [? []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_def x y : (x <= y) = (`|y - x| == y - x).",
            "VernacStartTheoremProof",
            "4e0726327a13d2a6e31d23ee379c551cc8f55328"
        ],
        [
            "by case: R x y => ? [? []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_def x y : (x < y) = (y != x) && (x <= y).",
            "VernacStartTheoremProof",
            "3bc3936471bc54bc9560af4a145450ef3e4fee0b"
        ],
        [
            "by case: R x y => ? [? []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger0_def x : (0 <= x) = (`|x| == x).",
            "VernacStartTheoremProof",
            "436195aae589ea0636334a8e9ae1d588bee13b77"
        ],
        [
            "by rewrite ler_def subr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subr_ge0 x y : (0 <= x - y) = (y <= x).",
            "VernacStartTheoremProof",
            "c4e50dd940774dfca6e1d1829f1503d74a812336"
        ],
        [
            "by rewrite ger0_def -ler_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_ge0 x : (0 <= - x) = (x <= 0).",
            "VernacStartTheoremProof",
            "7a3e9bc9e06e9797dbf4c72e2b5d80c1ce3fe75c"
        ],
        [
            "by rewrite -sub0r subr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler01 : 0 <= 1 :> R.",
            "VernacStartTheoremProof",
            "54fb4972e1a53f1dda453b4c5fef8cdad6c5a29e"
        ],
        [
            "have n1_nz: `|1| != 0 :> R by apply: contraNneq (@oner_neq0 R) => /normr0_eq0->.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ger0_def -(inj_eq (mulfI n1_nz)) -normrM !mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr01 : 0 < 1 :> R.",
            "VernacStartTheoremProof",
            "5dea11393b004f2b25d12a0afb7fda24fda14f2f"
        ],
        [
            "by rewrite ltr_def oner_neq0 ler01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrW x y : x < y -> x <= y.",
            "VernacStartTheoremProof",
            "a501ef15967e6a9596e046c004951fc8257abb18"
        ],
        [
            "by rewrite ltr_def => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerr x : x <= x.",
            "VernacStartTheoremProof",
            "545d95c941336b1024c716cc4a308700146ac0b4"
        ],
        [
            "have n2: `|2%:R| == 2%:R :> R by rewrite -ger0_def ltrW ?addr_gt0 ?ltr01.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite ler_def subrr -(inj_eq (addrI `|0|)) addr0 -mulr2n -mulr_natr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(eqP n2) -normrM mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le0r x : (0 <= x) = (x == 0) || (0 < x).",
            "VernacStartTheoremProof",
            "82a4a4fbcaee05e9d282fdf7274625d292fa3f97"
        ],
        [
            "by rewrite ltr_def; case: eqP => // ->; rewrite lerr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addr_ge0 x y : 0 <= x -> 0 <= y -> 0 <= x + y.",
            "VernacStartTheoremProof",
            "c8bc07a351a593f229a44a01b023db734f9bd846"
        ],
        [
            "rewrite le0r; case/predU1P=> [-> | x_pos]; rewrite ?add0r // le0r.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by case/predU1P=> [-> | y_pos]; rewrite ltrW ?addr0 ?addr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulr_rgt0 x y : 0 < x -> (0 < x * y) = (0 < y).",
            "VernacStartTheoremProof",
            "2609f882663913148e3c3af440e631b12ee1e5fa"
        ],
        [
            "rewrite !ltr_def !ger0_def normrM mulf_eq0 negb_or => /andP[x_neq0 /eqP->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite x_neq0 (inj_eq (mulfI x_neq0)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma posrE x : (x \\is pos) = (0 < x).",
            "VernacStartTheoremProof",
            "1967a1c108e0dec5f3b4e0204557e839db7c0cf8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nnegrE x : (x \\is nneg) = (0 <= x).",
            "VernacStartTheoremProof",
            "b6582024db8b897c26b38828d2f7822eb8396a81"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realE x : (x \\is real) = (0 <= x) || (x <= 0).",
            "VernacStartTheoremProof",
            "11ae7a8d611cfc2166b14f4ffb8e31ac690d7bac"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact pos_divr_closed : divr_closed (@pos R).",
            "VernacStartTheoremProof",
            "e5675e2e02a4775e128f391c4e48a2693131fff1"
        ],
        [
            "split=> [|x y x_gt0 y_gt0]; rewrite posrE ?ltr01 //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "have [Uy|/invr_out->] := boolP (y \\is a GRing.unit); last by rewrite pmulr_rgt0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(pmulr_rgt0 _ y_gt0) mulrC divrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical pos_mulrPred := MulrPred pos_divr_closed.",
            "VernacDefinition",
            "e5e6583210ceaf73b1197a6a1ed06afc6155eba3"
        ],
        [
            "Canonical pos_divrPred := DivrPred pos_divr_closed.",
            "VernacDefinition",
            "bd68285d6352829c43708d41d8f058f33167df5e"
        ],
        [
            "Fact nneg_divr_closed : divr_closed (@nneg R).",
            "VernacStartTheoremProof",
            "9cb203ff7d6650f1bc888281c4d9245771b22319"
        ],
        [
            "split=> [|x y]; rewrite !nnegrE ?ler01 ?le0r // -!posrE.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "case/predU1P=> [-> _ | x_gt0]; first by rewrite mul0r eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/predU1P=> [-> | y_gt0]; rewrite ?invr0 ?mulr0 ?eqxx // orbC rpred_div.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical nneg_mulrPred := MulrPred nneg_divr_closed.",
            "VernacDefinition",
            "6a300d1bdb1e8550771238252cd9985e10f7044c"
        ],
        [
            "Canonical nneg_divrPred := DivrPred nneg_divr_closed.",
            "VernacDefinition",
            "f5745d9e0b033344b8cb897e9798a380b4170515"
        ],
        [
            "Fact nneg_addr_closed : addr_closed (@nneg R).",
            "VernacStartTheoremProof",
            "e0a1d0abf0cfcfdb923e7e64001d794817dd87bc"
        ],
        [
            "by split; [apply: lerr | apply: addr_ge0].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical nneg_addrPred := AddrPred nneg_addr_closed.",
            "VernacDefinition",
            "6fde6a17b0344f51e99572b62b71c9a368248fee"
        ],
        [
            "Canonical nneg_semiringPred := SemiringPred nneg_divr_closed.",
            "VernacDefinition",
            "1cd1041226db508a6c23144c024ad88c47c5584e"
        ],
        [
            "Fact real_oppr_closed : oppr_closed (@real R).",
            "VernacStartTheoremProof",
            "517ca09baaf4e825bf9a90dca3946ec7f947447c"
        ],
        [
            "by move=> x; rewrite /= !realE oppr_ge0 orbC -!oppr_ge0 opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical real_opprPred := OpprPred real_oppr_closed.",
            "VernacDefinition",
            "8685a085de2d97c901d2e3fab3452e96c7273d29"
        ],
        [
            "Fact real_addr_closed : addr_closed (@real R).",
            "VernacStartTheoremProof",
            "c8736c21ff9bf09dc49fb912511473da841d4e60"
        ],
        [
            "split=> [|x y Rx Ry]; first by rewrite realE lerr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "without loss{Rx} x_ge0: x y Ry / 0 <= x.",
            "VernacExtend",
            "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
        ],
        [
            "case/orP: Rx => [? | x_le0]; first exact.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -rpredN opprD; apply; rewrite ?rpredN ?oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/orP: Ry => [y_ge0 | y_le0]; first by rewrite realE -nnegrE rpredD.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite realE -[y]opprK orbC -oppr_ge0 opprB !subr_ge0 ger_leVge ?oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical real_addrPred := AddrPred real_addr_closed.",
            "VernacDefinition",
            "e12a59ac4e71c4f5ebc4f2eb701efc7dd2446854"
        ],
        [
            "Canonical real_zmodPred := ZmodPred real_oppr_closed.",
            "VernacDefinition",
            "7129eb558bad3387e0ef961f1b506ac1a3a49ead"
        ],
        [
            "Fact real_divr_closed : divr_closed (@real R).",
            "VernacStartTheoremProof",
            "118ba2785b00fc3be0f2ee617d22769af9c8ebbf"
        ],
        [
            "split=> [|x y Rx Ry]; first by rewrite realE ler01.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "without loss{Rx} x_ge0: x / 0 <= x.",
            "VernacExtend",
            "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
        ],
        [
            "case/orP: Rx => [? | x_le0]; first exact.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -rpredN -mulNr; apply; rewrite ?oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "without loss{Ry} y_ge0: y / 0 <= y; last by rewrite realE -nnegrE rpred_div.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/orP: Ry => [? | y_le0]; first exact.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -rpredN -mulrN -invrN; apply; rewrite ?oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical real_mulrPred := MulrPred real_divr_closed.",
            "VernacDefinition",
            "dd8588bbdca538a22d11645c9b5c6839dc05d931"
        ],
        [
            "Canonical real_smulrPred := SmulrPred real_divr_closed.",
            "VernacDefinition",
            "1e7c6bf5976f84207ac531c0881fdb8d73b8dca1"
        ],
        [
            "Canonical real_divrPred := DivrPred real_divr_closed.",
            "VernacDefinition",
            "2a95f10e26ea1332c88c30187dfe2e2c5a53a8a2"
        ],
        [
            "Canonical real_sdivrPred := SdivrPred real_divr_closed.",
            "VernacDefinition",
            "dd996ccb75d26a82aa0c036a05dabacd94b9a659"
        ],
        [
            "Canonical real_semiringPred := SemiringPred real_divr_closed.",
            "VernacDefinition",
            "04de3914d3b1cc887916796e1a997904f0fd58bb"
        ],
        [
            "Canonical real_subringPred := SubringPred real_divr_closed.",
            "VernacDefinition",
            "6310f330777b5f871615f4277aaff559c3cc7482"
        ],
        [
            "Canonical real_divringPred := DivringPred real_divr_closed.",
            "VernacDefinition",
            "0a30f78dc881a26817237edae9b455225b7be9fa"
        ],
        [
            "End Domain.",
            "VernacEndSegment",
            "ffc2464ae7c550614f499a66a001d9e90da05a85"
        ],
        [
            "Lemma num_real (R : realDomainType) (x : R) : x \\is real.",
            "VernacStartTheoremProof",
            "4a67dcf650e7951a1a14509d36dfe1f3fccf4562"
        ],
        [
            "by case: R x => T [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact archi_bound_subproof (R : archiFieldType) : archimedean_axiom R.",
            "VernacStartTheoremProof",
            "27b6ef7fd95299a47c119e771fc01ed64c6ab27f"
        ],
        [
            "by case: R => ? [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section RealClosed.",
            "VernacBeginSection",
            "0210081fc5ead35666ab4c9af83f7bf524e15987"
        ],
        [
            "Variable R : rcfType.",
            "VernacAssumption",
            "bd512f1b0cfd6e4a5aa32d8eebc4ade5a45de144"
        ],
        [
            "Lemma poly_ivt : real_closed_axiom R.",
            "VernacStartTheoremProof",
            "bdef75f0e970cb7aae3ac0dda045f2268c8db55e"
        ],
        [
            "by case: R => ? [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact sqrtr_subproof (x : R) : exists2 y, 0 <= y & if 0 <= x return bool then y ^+ 2 == x else y == 0.",
            "VernacStartTheoremProof",
            "fe8dfd9a558f1e25224c82b54b7537eadf02d826"
        ],
        [
            "case x_ge0: (0 <= x); last by exists 0; rewrite ?lerr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have le0x1: 0 <= x + 1 by rewrite -nnegrE rpredD ?rpred1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [|y /andP[y_ge0 _]] := @poly_ivt ('X^2 - x%:P) _ _ le0x1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !hornerE -subr_ge0 add0r opprK x_ge0 -expr2 sqrrD mulr1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addrAC !addrA addrK -nnegrE !rpredD ?rpredX ?rpred1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite rootE !hornerE subr_eq0; exists y.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RealClosed.",
            "VernacEndSegment",
            "7d22ee797be121b95cc035dd309b468dabaff699"
        ],
        [
            "End Internals.",
            "VernacEndSegment",
            "1e801ae296b82da487d9ae63b07df78530b4efcb"
        ],
        [
            "Module PredInstances.",
            "VernacDefineModule",
            "4a62e085591dc40b2fc6941d062bf326017fc493"
        ],
        [
            "Canonical pos_mulrPred.",
            "VernacCanonical",
            "780c582331803c1dd4c1b9e5c6f8847630a67be7"
        ],
        [
            "Canonical pos_divrPred.",
            "VernacCanonical",
            "75794705676fdfdaebbdd5ef93f5e0ff4f731baf"
        ],
        [
            "Canonical nneg_addrPred.",
            "VernacCanonical",
            "8c2f9cb36669d8c8319a7f5fcfdd8b28f36d2f19"
        ],
        [
            "Canonical nneg_mulrPred.",
            "VernacCanonical",
            "48ec98ed9d07166453bfedd8eb39bc0380446025"
        ],
        [
            "Canonical nneg_divrPred.",
            "VernacCanonical",
            "290371badd782c05616f1d100c984bb9eb7294fe"
        ],
        [
            "Canonical nneg_semiringPred.",
            "VernacCanonical",
            "890fd32c8e8912781abd29a9095fe10f66075694"
        ],
        [
            "Canonical real_addrPred.",
            "VernacCanonical",
            "33ee419db76a6de5dc02c2705d141f6373669519"
        ],
        [
            "Canonical real_opprPred.",
            "VernacCanonical",
            "e9c0bee261292ed4baac71b99db09202358fae6f"
        ],
        [
            "Canonical real_zmodPred.",
            "VernacCanonical",
            "a7ba922833aa2b54c721fb4647140d2183567397"
        ],
        [
            "Canonical real_mulrPred.",
            "VernacCanonical",
            "3efde4952b1e048e6d515454077842c56833ab55"
        ],
        [
            "Canonical real_smulrPred.",
            "VernacCanonical",
            "7c52b778be2ae2657baef6013ec7ad0cced8d9b2"
        ],
        [
            "Canonical real_divrPred.",
            "VernacCanonical",
            "58cc84d164b2eef8dd0e6ad23f6301cb004cb0a4"
        ],
        [
            "Canonical real_sdivrPred.",
            "VernacCanonical",
            "4bd8cec3c50ef2d54220c80b14836e82b2ecdab6"
        ],
        [
            "Canonical real_semiringPred.",
            "VernacCanonical",
            "046f05c35b9104e1cda5d9946b652adb9ef64855"
        ],
        [
            "Canonical real_subringPred.",
            "VernacCanonical",
            "5a5d98f56a79585a63f1ed98a3a88f7703f15959"
        ],
        [
            "Canonical real_divringPred.",
            "VernacCanonical",
            "517916f10c89b90ba46651564f6ac13477191407"
        ],
        [
            "End PredInstances.",
            "VernacEndSegment",
            "c8e4d39e005e2d8a9b03bdbf26ad6a5cb6f43662"
        ],
        [
            "Module Import ExtraDef.",
            "VernacDefineModule",
            "eda2415ca77948add1271514041e4da3892d48a5"
        ],
        [
            "Definition archi_bound {R} x := sval (sigW (@archi_bound_subproof R x)).",
            "VernacDefinition",
            "d8e88a2de4eda112496e15899284395f6e67497e"
        ],
        [
            "Definition sqrtr {R} x := s2val (sig2W (@sqrtr_subproof R x)).",
            "VernacDefinition",
            "752da651962f9881a9a54ca659c35105a7a23473"
        ],
        [
            "End ExtraDef.",
            "VernacEndSegment",
            "91149d20e58dbe8e19415c0e883ddccebb9245b0"
        ],
        [
            "Notation bound := archi_bound.",
            "VernacSyntacticDefinition",
            "cf0f79a493d462dfa28451e870f15c514dfcda71"
        ],
        [
            "Notation sqrt := sqrtr.",
            "VernacSyntacticDefinition",
            "d8f72cca41f8f9a6ea21c155779462c48789164f"
        ],
        [
            "Module Theory.",
            "VernacDefineModule",
            "ee0e24a0dfafd6fabdc3e744c74d7c5a9c820de0"
        ],
        [
            "Section NumIntegralDomainTheory.",
            "VernacBeginSection",
            "fbbd3a44673b2bfe96b8a41c7f5482d5f7a6bac3"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Implicit Types x y z t : R.",
            "VernacReserve",
            "301ab45a59a3df7a22e11e8d5888ade83e78783d"
        ],
        [
            "Definition ler_norm_add x y : `|x + y| <= `|x| + `|y| := ler_norm_add x y.",
            "VernacDefinition",
            "ba4298b6765468ee4fb0b64b790d5f54dad35bca"
        ],
        [
            "Definition addr_gt0 x y : 0 < x -> 0 < y -> 0 < x + y := @addr_gt0 R x y.",
            "VernacDefinition",
            "2725d972fea31ce93fff99c5fe053068e007031b"
        ],
        [
            "Definition normr0_eq0 x : `|x| = 0 -> x = 0 := @normr0_eq0 R x.",
            "VernacDefinition",
            "66b168f66c43b3f406f5c8acd55c7608f908cf8a"
        ],
        [
            "Definition ger_leVge x y : 0 <= x -> 0 <= y -> (x <= y) || (y <= x) := @ger_leVge R x y.",
            "VernacDefinition",
            "f8427fcbff7ae0c3a8243c1ee4b220e0d20a9e07"
        ],
        [
            "Definition normrM : {morph normr : x y / x * y : R} := @normrM R.",
            "VernacDefinition",
            "e293bcfea423c24708972abe39a3c852ee65ee6b"
        ],
        [
            "Definition ler_def x y : (x <= y) = (`|y - x| == y - x) := @ler_def R x y.",
            "VernacDefinition",
            "ea2fcaf10e3f9b339f2acb618aa4cf58da82d401"
        ],
        [
            "Definition ltr_def x y : (x < y) = (y != x) && (x <= y) := @ltr_def R x y.",
            "VernacDefinition",
            "45eb1f2068ff945900d1638aeec08b8f14800269"
        ],
        [
            "Lemma gerE x y : ge x y = (y <= x).",
            "VernacStartTheoremProof",
            "4eb5f2d09b1b63e55b358e74e93e662cd6325b63"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtrE x y : gt x y = (y < x).",
            "VernacStartTheoremProof",
            "b3a56cd335101235b9312b3bbf02b19e4de2e629"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma posrE x : (x \\is pos) = (0 < x).",
            "VernacStartTheoremProof",
            "1967a1c108e0dec5f3b4e0204557e839db7c0cf8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negrE x : (x \\is neg) = (x < 0).",
            "VernacStartTheoremProof",
            "9cedd5e1af293ded149ee051e22ac6ba8b55546f"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nnegrE x : (x \\is nneg) = (0 <= x).",
            "VernacStartTheoremProof",
            "b6582024db8b897c26b38828d2f7822eb8396a81"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realE x : (x \\is real) = (0 <= x) || (x <= 0).",
            "VernacStartTheoremProof",
            "11ae7a8d611cfc2166b14f4ffb8e31ac690d7bac"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerr x : x <= x.",
            "VernacStartTheoremProof",
            "545d95c941336b1024c716cc4a308700146ac0b4"
        ],
        [
            "exact: lerr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrr x : x < x = false.",
            "VernacStartTheoremProof",
            "d76f580c9a5e4e807c358dd5de8d5b257bea1b1b"
        ],
        [
            "by rewrite ltr_def eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrW x y : x < y -> x <= y.",
            "VernacStartTheoremProof",
            "a501ef15967e6a9596e046c004951fc8257abb18"
        ],
        [
            "exact: ltrW.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lerr ltrr ltrW : core.",
            "VernacHints",
            "85b5de5632bc2ab8e5f427aadd67a55b8224f42c"
        ],
        [
            "Lemma ltr_neqAle x y : (x < y) = (x != y) && (x <= y).",
            "VernacStartTheoremProof",
            "0a216a8b336d26baf4e6e5e481af2d26eee5bffa"
        ],
        [
            "by rewrite ltr_def eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_eqVlt x y : (x <= y) = (x == y) || (x < y).",
            "VernacStartTheoremProof",
            "c60c7eed919bf64ac8516c5af9dbbbd9246c9c29"
        ],
        [
            "by rewrite ltr_neqAle; case: eqP => // ->; rewrite lerr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt0r x : (0 < x) = (x != 0) && (0 <= x).",
            "VernacStartTheoremProof",
            "9778d62142c560c230013acf8a148f9b8d9f347a"
        ],
        [
            "by rewrite ltr_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le0r x : (0 <= x) = (x == 0) || (0 < x).",
            "VernacStartTheoremProof",
            "82a4a4fbcaee05e9d282fdf7274625d292fa3f97"
        ],
        [
            "exact: le0r.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt0r_neq0 (x : R) : 0 < x -> x != 0.",
            "VernacStartTheoremProof",
            "1a50e8aa473fd641d9f6d456d515e2dd0cdca2b7"
        ],
        [
            "by rewrite lt0r; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr0_neq0 (x : R) : x < 0 -> x != 0.",
            "VernacStartTheoremProof",
            "1c3b7beb3cfda4a9bfbbbde6bcf6cb2243606d16"
        ],
        [
            "by rewrite ltr_neqAle; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr_eqF x y : y < x -> x == y = false.",
            "VernacStartTheoremProof",
            "80358d4ac52e3fc68d85d80b1ad992ae4b455a29"
        ],
        [
            "by rewrite ltr_def; case/andP; move/negPf=> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_eqF x y : x < y -> x == y = false.",
            "VernacStartTheoremProof",
            "9df44fd5721cff90dcaa467f9a4fed6d187182a0"
        ],
        [
            "by move=> hyx; rewrite eq_sym gtr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulr_rgt0 x y : 0 < x -> (0 < x * y) = (0 < y).",
            "VernacStartTheoremProof",
            "2609f882663913148e3c3af440e631b12ee1e5fa"
        ],
        [
            "exact: pmulr_rgt0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulr_rge0 x y : 0 < x -> (0 <= x * y) = (0 <= y).",
            "VernacStartTheoremProof",
            "228f2ea16c1578abfdfbc1b1e6f7b8076946ce24"
        ],
        [
            "by rewrite !le0r mulf_eq0; case: eqP => // [-> /negPf[] | _ /pmulr_rgt0->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler01 : 0 <= 1 :> R.",
            "VernacStartTheoremProof",
            "54fb4972e1a53f1dda453b4c5fef8cdad6c5a29e"
        ],
        [
            "exact: ler01.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr01 : 0 < 1 :> R.",
            "VernacStartTheoremProof",
            "5dea11393b004f2b25d12a0afb7fda24fda14f2f"
        ],
        [
            "exact: ltr01.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler0n n : 0 <= n%:R :> R.",
            "VernacStartTheoremProof",
            "90d115edcfe5feb1f4a999eebce961cefeec00e5"
        ],
        [
            "by rewrite -nnegrE rpred_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ler01 ltr01 ler0n : core.",
            "VernacHints",
            "2e447e3a14abfa6bf6780bc24f776274217e0e28"
        ],
        [
            "Lemma ltr0Sn n : 0 < n.+1%:R :> R.",
            "VernacStartTheoremProof",
            "e0d91051f0e358234de3a21d2d920804f5e0150b"
        ],
        [
            "by elim: n => // n; apply: addr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr0n n : (0 < n%:R :> R) = (0 < n)%N.",
            "VernacStartTheoremProof",
            "a3cd2b29c6703a48bc204cf06bdba1e71072302a"
        ],
        [
            "by case: n => //= n; apply: ltr0Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ltr0Sn : core.",
            "VernacHints",
            "9edde57a7de9a48136614677bbbf84dbb5829171"
        ],
        [
            "Lemma pnatr_eq0 n : (n%:R == 0 :> R) = (n == 0)%N.",
            "VernacStartTheoremProof",
            "e942edc39c947e28b8e1850860c3ef6df4bf542d"
        ],
        [
            "by case: n => [|n]; rewrite ?mulr0n ?eqxx // gtr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char_num : [char R] =i pred0.",
            "VernacStartTheoremProof",
            "05c4df1c2a3076e0b8695ab3cdc6b1fcc8c9d3c0"
        ],
        [
            "by case=> // p /=; rewrite !inE pnatr_eq0 andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger0_def x : (0 <= x) = (`|x| == x).",
            "VernacStartTheoremProof",
            "436195aae589ea0636334a8e9ae1d588bee13b77"
        ],
        [
            "exact: ger0_def.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_idP {x} : reflect (`|x| = x) (0 <= x).",
            "VernacStartTheoremProof",
            "c8133fe99c2d63ef9d67cd166e5e49f553e71872"
        ],
        [
            "by rewrite ger0_def; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger0_norm x : 0 <= x -> `|x| = x.",
            "VernacStartTheoremProof",
            "575642d364bf06901a32c0d66a36a947cb0d9aa4"
        ],
        [
            "exact: normr_idP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr0 : `|0| = 0 :> R.",
            "VernacStartTheoremProof",
            "3e6aade2470c7f2c0244f76cf84fc3ad2db58d31"
        ],
        [
            "exact: ger0_norm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr1 : `|1| = 1 :> R.",
            "VernacStartTheoremProof",
            "a8bda42b431cc9351ca75f759dad6d95ef02350f"
        ],
        [
            "exact: ger0_norm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_nat n : `|n%:R| = n%:R :> R.",
            "VernacStartTheoremProof",
            "85e28ed4013212c1b66eac79b8d5784dbee8d6e1"
        ],
        [
            "exact: ger0_norm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normrMn x n : `|x *+ n| = `|x| *+ n.",
            "VernacStartTheoremProof",
            "7794c9ffe750f2ef6d1e1a87b215a589c957689d"
        ],
        [
            "by rewrite -mulr_natl normrM normr_nat mulr_natl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_prod I r (P : pred I) (F : I -> R) : `|\\prod_(i <- r | P i) F i| = \\prod_(i <- r | P i) `|F i|.",
            "VernacStartTheoremProof",
            "216a93860e4da84b6dbaee94daffa6e4cb9b1196"
        ],
        [
            "exact: (big_morph norm normrM normr1).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normrX n x : `|x ^+ n| = `|x| ^+ n.",
            "VernacStartTheoremProof",
            "d30f76d02e92c1f4f9818727f814b5e71ad656a5"
        ],
        [
            "by rewrite -(card_ord n) -!prodr_const normr_prod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_unit : {homo (@norm R) : x / x \\is a GRing.unit}.",
            "VernacStartTheoremProof",
            "8aa293ae93fbf180d5ac9d800b19e9b95cbd23dc"
        ],
        [
            "move=> x /= /unitrP [y [yx xy]]; apply/unitrP; exists `|y|.",
            "VernacExtend",
            "8ba46be3c075524aac26608cf9979831956d13b3"
        ],
        [
            "by rewrite -!normrM xy yx normr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normrV : {in GRing.unit, {morph (@normr R) : x / x ^-1}}.",
            "VernacStartTheoremProof",
            "d8d6593892d56dfff1430a2ce7e498ef4e0cdf96"
        ],
        [
            "move=> x ux; apply: (mulrI (normr_unit ux)).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -normrM !divrr ?normr1 ?normr_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr0P {x} : reflect (`|x| = 0) (x == 0).",
            "VernacStartTheoremProof",
            "56a6e9f8639e65beca9891fed98f42817910b741"
        ],
        [
            "by apply: (iffP eqP)=> [->|/normr0_eq0 //]; apply: normr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition normr_eq0 x := sameP (`|x| =P 0) normr0P.",
            "VernacDefinition",
            "a5ad4801927bfd59d9de36bb511ad0b633c54b33"
        ],
        [
            "Lemma normrN1 : `|-1| = 1 :> R.",
            "VernacStartTheoremProof",
            "d18756e55ab3b32df8a5aa1b576bf84a8a76ea06"
        ],
        [
            "have: `|-1| ^+ 2 == 1 :> R by rewrite -normrX -signr_odd normr1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite sqrf_eq1 => /orP[/eqP //|]; rewrite -ger0_def le0r oppr_eq0 oner_eq0.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by move/(addr_gt0 ltr01); rewrite subrr ltrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normrN x : `|- x| = `|x|.",
            "VernacStartTheoremProof",
            "7edda9cbfdd0cad249ab7738d63e891659d38170"
        ],
        [
            "by rewrite -mulN1r normrM normrN1 mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma distrC x y : `|x - y| = `|y - x|.",
            "VernacStartTheoremProof",
            "71305be48bd7d6bab826541beca4849dcbfc5212"
        ],
        [
            "by rewrite -opprB normrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler0_def x : (x <= 0) = (`|x| == - x).",
            "VernacStartTheoremProof",
            "5d3a1ad20bc4f993c22b579138f0ce5c6a39f34c"
        ],
        [
            "by rewrite ler_def sub0r normrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_id x : `|`|x| | = `|x|.",
            "VernacStartTheoremProof",
            "3e5a826fd97365623bd4b2c91fbdccde3353d0cd"
        ],
        [
            "have nz2: 2%:R != 0 :> R by rewrite pnatr_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (mulfI nz2); rewrite -{1}normr_nat -normrM mulr_natl mulr2n ger0_norm //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -{2}normrN -normr0 -(subrr x) ler_norm_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_ge0 x : 0 <= `|x|.",
            "VernacStartTheoremProof",
            "72a3302f1d83cc953856af665b56ea9a87f369bf"
        ],
        [
            "by rewrite ger0_def normr_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve normr_ge0 : core.",
            "VernacHints",
            "f90ce3eb18d69e32ad4ae5fdedf5e64253db08fd"
        ],
        [
            "Lemma ler0_norm x : x <= 0 -> `|x| = - x.",
            "VernacStartTheoremProof",
            "cd6100ebdd8498f784bd7d6e70795d1c0b25f231"
        ],
        [
            "by move=> x_le0; rewrite -[r in _ = r]ger0_norm ?normrN ?oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gtr0_norm x (hx : 0 < x) := ger0_norm (ltrW hx).",
            "VernacDefinition",
            "b5528c695c44aef1df80918b1016fbafa6bb6529"
        ],
        [
            "Definition ltr0_norm x (hx : x < 0) := ler0_norm (ltrW hx).",
            "VernacDefinition",
            "dce1cdbdf28b52693ec086a065674eb240eb28b4"
        ],
        [
            "Lemma subr_ge0 x y : (0 <= y - x) = (x <= y).",
            "VernacStartTheoremProof",
            "9defc4807a6233ace009ee11866bb04a8afe8115"
        ],
        [
            "exact: subr_ge0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subr_gt0 x y : (0 < y - x) = (x < y).",
            "VernacStartTheoremProof",
            "347f0f63a4185787c782a006f5166f242e667aa3"
        ],
        [
            "by rewrite !ltr_def subr_eq0 subr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subr_le0 x y : (y - x <= 0) = (y <= x).",
            "VernacStartTheoremProof",
            "59fbafb83b39fe4a132c0ef6f07de3bf94dc9361"
        ],
        [
            "by rewrite -subr_ge0 opprB add0r subr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subr_lt0 x y : (y - x < 0) = (y < x).",
            "VernacStartTheoremProof",
            "df870bce73e6527c432adfc5bb840a6f01df778b"
        ],
        [
            "by rewrite -subr_gt0 opprB add0r subr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subr_lte0 := (subr_le0, subr_lt0).",
            "VernacDefinition",
            "015611b0c1bf4e798b72c6026f23169beb528883"
        ],
        [
            "Definition subr_gte0 := (subr_ge0, subr_gt0).",
            "VernacDefinition",
            "1393a3589c6303a07c09387d1067b52ac7f936ab"
        ],
        [
            "Definition subr_cp0 := (subr_lte0, subr_gte0).",
            "VernacDefinition",
            "43d063717e1deea916933fbaa675bf248d6393bd"
        ],
        [
            "Lemma ler_asym : antisymmetric (<=%R : rel R).",
            "VernacStartTheoremProof",
            "13802d667254dc7717403459ce16078734c829cc"
        ],
        [
            "move=> x y; rewrite !ler_def distrC -opprB -addr_eq0 => /andP[/eqP->].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite -mulr2n -mulr_natl mulf_eq0 subr_eq0 pnatr_eq0 => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_le x y : (x == y) = (x <= y <= x).",
            "VernacStartTheoremProof",
            "add14eafcd1ccca3f836b67af9ac32c6396c9f59"
        ],
        [
            "by apply/eqP/idP=> [->|/ler_asym]; rewrite ?lerr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_trans : transitive (@ltr R).",
            "VernacStartTheoremProof",
            "64dd53b59957eed816b6d49762c1a9823bfd9ec4"
        ],
        [
            "move=> y x z le_xy le_yz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -subr_gt0 -(subrK y z) -addrA addr_gt0 ?subr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_lt_trans y x z : x <= y -> y < z -> x < z.",
            "VernacStartTheoremProof",
            "6cf6794224976a2effab319ab088d512858680ea"
        ],
        [
            "by rewrite !ler_eqVlt => /orP[/eqP -> //|/ltr_trans]; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_le_trans y x z : x < y -> y <= z -> x < z.",
            "VernacStartTheoremProof",
            "e6220dd259d77b02e0938c14c544e9a8dede9bdc"
        ],
        [
            "by rewrite !ler_eqVlt => lxy /orP[/eqP <- //|/(ltr_trans lxy)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_trans : transitive (@ler R).",
            "VernacStartTheoremProof",
            "001fbb2c733073a7cd738b4df2819583a41c3a06"
        ],
        [
            "move=> y x z; rewrite !ler_eqVlt => /orP [/eqP -> //|lxy].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by move=> /orP [/eqP <-|/(ltr_trans lxy) ->]; rewrite ?lxy orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter01 := (ler01, ltr01).",
            "VernacDefinition",
            "d4fe4ca6c61729a91e18f93e392f8b90f050114c"
        ],
        [
            "Definition lterr := (lerr, ltrr).",
            "VernacDefinition",
            "5d345c8bb12e6d7dbbacbc921a0770f2735d1df1"
        ],
        [
            "Lemma addr_ge0 x y : 0 <= x -> 0 <= y -> 0 <= x + y.",
            "VernacStartTheoremProof",
            "c8bc07a351a593f229a44a01b023db734f9bd846"
        ],
        [
            "exact: addr_ge0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerifP x y C : reflect (x <= y ?= iff C) (if C then x == y else x < y).",
            "VernacStartTheoremProof",
            "6c8778a509ae8626399ffb87d7665a0b806d7fe5"
        ],
        [
            "rewrite /lerif ler_eqVlt; apply: (iffP idP)=> [|[]].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by case: C => [/eqP->|lxy]; rewrite ?eqxx // lxy ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> /orP[/eqP->|lxy] <-; rewrite ?eqxx // ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_asym x y : x < y < x = false.",
            "VernacStartTheoremProof",
            "8e9910e13de7b9f77a5326eed8933bdf54690888"
        ],
        [
            "by apply/negP=> /andP [/ltr_trans hyx /hyx]; rewrite ltrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_anti : antisymmetric (@ler R).",
            "VernacStartTheoremProof",
            "9db3ea9d340c88e7a7c7c49c54e78aadb1c9794e"
        ],
        [
            "by move=> x y; rewrite -eqr_le=> /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_le_asym x y : x < y <= x = false.",
            "VernacStartTheoremProof",
            "b48e8e6a471e80d1081a3e595af077644a55e45e"
        ],
        [
            "by rewrite ltr_neqAle -andbA -eqr_le eq_sym; case: (_ == _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_lt_asym x y : x <= y < x = false.",
            "VernacStartTheoremProof",
            "c178d424c37b17192370da3d58f56fb19f4f3441"
        ],
        [
            "by rewrite andbC ltr_le_asym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_anti := (=^~ eqr_le, ltr_asym, ltr_le_asym, ler_lt_asym).",
            "VernacDefinition",
            "35589f76b1abcac5c3fb044ad86b97e02153e949"
        ],
        [
            "Lemma ltr_geF x y : x < y -> (y <= x = false).",
            "VernacStartTheoremProof",
            "ed8e26c9db780be430e79b9a0cce00ee87cb55ee"
        ],
        [
            "by move=> xy; apply: contraTF isT=> /(ltr_le_trans xy); rewrite ltrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_gtF x y : x <= y -> (y < x = false).",
            "VernacStartTheoremProof",
            "c522311298e2a9f243ff54c4638ae759ee24bf12"
        ],
        [
            "by apply: contraTF=> /ltr_geF->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ltr_gtF x y hxy := ler_gtF (@ltrW x y hxy).",
            "VernacDefinition",
            "c3feb4f531160688f23801ca627930ff8e4b7a88"
        ],
        [
            "Lemma normr_le0 x : (`|x| <= 0) = (x == 0).",
            "VernacStartTheoremProof",
            "29c5827922ce46a0a4d0fd5a8912982b8e468ce6"
        ],
        [
            "by rewrite -normr_eq0 eqr_le normr_ge0 andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_lt0 x : `|x| < 0 = false.",
            "VernacStartTheoremProof",
            "e6f4caf5406fabd7a40138fcb554cbd6fb70fcd5"
        ],
        [
            "by rewrite ltr_neqAle normr_le0 normr_eq0 andNb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_gt0 x : (`|x| > 0) = (x != 0).",
            "VernacStartTheoremProof",
            "c1052b076929b47cb0feba121058e74c1299f36e"
        ],
        [
            "by rewrite ltr_def normr_eq0 normr_ge0 andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition normrE x := (normr_id, normr0, normr1, normrN1, normr_ge0, normr_eq0, normr_lt0, normr_le0, normr_gt0, normrN).",
            "VernacDefinition",
            "75cf8b8dffb135d34f9b5e6f9f91aebd53b81584"
        ],
        [
            "End NumIntegralDomainTheory.",
            "VernacEndSegment",
            "c66a44eaccdb146c50b83fb6c149e3acd810c622"
        ],
        [
            "Arguments ler01 {R}.",
            "VernacArguments",
            "569cec551016a77a2589cd008da28b61d0186fa0"
        ],
        [
            "Arguments ltr01 {R}.",
            "VernacArguments",
            "c2788d9c2350ec6f299fe41eddc16aeab5e80c10"
        ],
        [
            "Arguments normr_idP {R x}.",
            "VernacArguments",
            "e2e8b0e706469493e04a5888d051d6e2be012bcc"
        ],
        [
            "Arguments normr0P {R x}.",
            "VernacArguments",
            "4c2f6af512ff97e28e64d8b471385ddc5b30fa99"
        ],
        [
            "Arguments lerifP {R x y C}.",
            "VernacArguments",
            "44159781fd2bd3dadd307fb3105b19f1a2e0c7a5"
        ],
        [
            "Hint Resolve @ler01 @ltr01 lerr ltrr ltrW ltr_eqF ltr0Sn ler0n normr_ge0 : core.",
            "VernacHints",
            "e978d371e659fb27e5262574270994b4623daa11"
        ],
        [
            "Section NumIntegralDomainMonotonyTheory.",
            "VernacBeginSection",
            "f5cbd3bce4fd95668ec5a36176ca0470f76348a4"
        ],
        [
            "Variables R R' : numDomainType.",
            "VernacAssumption",
            "252d2a6afaf7850544f5c8e1d9ddf35781ee60d6"
        ],
        [
            "Implicit Types m n p : nat.",
            "VernacReserve",
            "c91dfc57cee65f0bef3b4eb8e26bdced4a570f78"
        ],
        [
            "Implicit Types x y z : R.",
            "VernacReserve",
            "5b53950eef16c05b6d76b95a2bc590b36e66d08e"
        ],
        [
            "Implicit Types u v w : R'.",
            "VernacReserve",
            "0659cd617a02820326d44fd229f57ec771e5c8b3"
        ],
        [
            "Let leqnn := leqnn.",
            "VernacDefinition",
            "ec74ad86266bef27e29b66374bb1688b7c35acf6"
        ],
        [
            "Let ltnE := ltn_neqAle.",
            "VernacDefinition",
            "d9110fef2ff35fec179de13d540327b66f3420ab"
        ],
        [
            "Let ltrE := @ltr_neqAle R.",
            "VernacDefinition",
            "d5af7ca363d63e34152109b79617137150009904"
        ],
        [
            "Let ltr'E := @ltr_neqAle R'.",
            "VernacDefinition",
            "14974dc76519455119e19c7919192b026ab438da"
        ],
        [
            "Let gtnE (m n : nat) : (m > n)%N = (m != n) && (m >= n)%N.",
            "VernacDefinition",
            "72207d44c6d94d4eec2d7cfe2ae2a4464df5fce8"
        ],
        [
            "by rewrite ltn_neqAle eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let gtrE (x y : R) : (x > y) = (x != y) && (x >= y).",
            "VernacDefinition",
            "ed57fd6aa89845a85f44c544b36c0c1590a9c657"
        ],
        [
            "by rewrite ltr_neqAle eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let gtr'E (x y : R') : (x > y) = (x != y) && (x >= y).",
            "VernacDefinition",
            "739842b4083126d7c629a493e3aa89c16a3b075c"
        ],
        [
            "by rewrite ltr_neqAle eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let leq_anti : antisymmetric leq.",
            "VernacDefinition",
            "10516f71bb241094866c40e07766caf48de53b3c"
        ],
        [
            "by move=> m n; rewrite -eqn_leq => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let geq_anti : antisymmetric geq.",
            "VernacDefinition",
            "339e33ed1fdcea37bd3cbade44f57e1283d4851b"
        ],
        [
            "by move=> m n; rewrite -eqn_leq => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let ler_antiR := @ler_anti R.",
            "VernacDefinition",
            "637b774d5b3677a7edafcb77347dd7755511a659"
        ],
        [
            "Let ler_antiR' := @ler_anti R'.",
            "VernacDefinition",
            "6ef9543d7522297a55cc8babddaccda1abf124b5"
        ],
        [
            "Let ger_antiR : antisymmetric (>=%R : rel R).",
            "VernacDefinition",
            "161137593f90bc67e4a054f2057e7eef45ce26ec"
        ],
        [
            "by move=> ??; rewrite andbC; apply: ler_anti.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let ger_antiR' : antisymmetric (>=%R : rel R').",
            "VernacDefinition",
            "8460802d54bc6b965380fb009a3e0af48d9d8a8d"
        ],
        [
            "by move=> ??; rewrite andbC; apply: ler_anti.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let leq_total := leq_total.",
            "VernacDefinition",
            "5165041cd7339aa4486b786ac0bab2f987d5af96"
        ],
        [
            "Let geq_total : total geq.",
            "VernacDefinition",
            "c158ce496cb20c732ca1675998161e258d682ea4"
        ],
        [
            "by move=> m n; apply: leq_total.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section AcrossTypes.",
            "VernacBeginSection",
            "6f9b6863e95aa7c588339abeaab9ff4a15060452"
        ],
        [
            "Variable D D' : pred R.",
            "VernacAssumption",
            "6efcec4704f152b4035ffdbc7e3003f0df9c99bf"
        ],
        [
            "Variable (f : R -> R').",
            "VernacAssumption",
            "d26fb2c808eee70cb7bd584d0193aba6202d0faf"
        ],
        [
            "Lemma ltrW_homo : {homo f : x y / x < y} -> {homo f : x y / x <= y}.",
            "VernacStartTheoremProof",
            "89cac30898b2a5b69b2c16943404b81e4dfc03b2"
        ],
        [
            "exact: homoW.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrW_nhomo : {homo f : x y /~ x < y} -> {homo f : x y /~ x <= y}.",
            "VernacStartTheoremProof",
            "bef58c6526b10a4172f1b678e8c74f6764bcf7bf"
        ],
        [
            "exact: homoW.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_homo_ltr : injective f -> {homo f : x y / x <= y} -> {homo f : x y / x < y}.",
            "VernacStartTheoremProof",
            "f098362d541f7012d3b8451da2dd7d04817aa80c"
        ],
        [
            "exact: inj_homo.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_nhomo_ltr : injective f -> {homo f : x y /~ x <= y} -> {homo f : x y /~ x < y}.",
            "VernacStartTheoremProof",
            "5aaaef14200ea20b809031430f818fc3adcfd3e6"
        ],
        [
            "exact: inj_homo.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incr_inj : {mono f : x y / x <= y} -> injective f.",
            "VernacStartTheoremProof",
            "e933e67b4fc1894d9e2ac49e6a1abf1ef00571ba"
        ],
        [
            "exact: mono_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decr_inj : {mono f : x y /~ x <= y} -> injective f.",
            "VernacStartTheoremProof",
            "4145064a4dd72630364cebbede717944447fd0c2"
        ],
        [
            "exact: mono_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerW_mono : {mono f : x y / x <= y} -> {mono f : x y / x < y}.",
            "VernacStartTheoremProof",
            "c57974dc89ea062195ec1ffd0bf0e2fa096684a6"
        ],
        [
            "exact: anti_mono.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerW_nmono : {mono f : x y /~ x <= y} -> {mono f : x y /~ x < y}.",
            "VernacStartTheoremProof",
            "fb5ed43a0a78f6011cef20e6ba5233e6f2656d31"
        ],
        [
            "exact: anti_mono.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrW_homo_in : {in D & D', {homo f : x y / x < y}} -> {in D & D', {homo f : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "fb1709ddee1cc1f85b233b9f8e1a32f0486ab847"
        ],
        [
            "exact: homoW_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrW_nhomo_in : {in D & D', {homo f : x y /~ x < y}} -> {in D & D', {homo f : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "9e5c6eb34b9f1080779a3f7fe8188df8a35e1bbd"
        ],
        [
            "exact: homoW_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_homo_ltr_in : {in D & D', injective f} -> {in D & D', {homo f : x y / x <= y}} -> {in D & D', {homo f : x y / x < y}}.",
            "VernacStartTheoremProof",
            "9d5e023b8e08fe7d74408e6b71c43bbed3305ccf"
        ],
        [
            "exact: inj_homo_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_nhomo_ltr_in : {in D & D', injective f} -> {in D & D', {homo f : x y /~ x <= y}} -> {in D & D', {homo f : x y /~ x < y}}.",
            "VernacStartTheoremProof",
            "4a3a604030b78849e96211b5afdbddae5d1009b4"
        ],
        [
            "exact: inj_homo_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incr_inj_in : {in D &, {mono f : x y / x <= y}} -> {in D &, injective f}.",
            "VernacStartTheoremProof",
            "5a2a0370bd778484dc9246b16708d1cdeceee628"
        ],
        [
            "exact: mono_inj_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decr_inj_in : {in D &, {mono f : x y /~ x <= y}} -> {in D &, injective f}.",
            "VernacStartTheoremProof",
            "61353b9ea65b976fcade04869155aa3f08349c55"
        ],
        [
            "exact: mono_inj_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerW_mono_in : {in D &, {mono f : x y / x <= y}} -> {in D &, {mono f : x y / x < y}}.",
            "VernacStartTheoremProof",
            "d3acf40fc9a9e74cb7bada809bb3de3e2f058c5a"
        ],
        [
            "exact: anti_mono_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerW_nmono_in : {in D &, {mono f : x y /~ x <= y}} -> {in D &, {mono f : x y /~ x < y}}.",
            "VernacStartTheoremProof",
            "d50f88bd90af8203f20bc2819f0036e81f3d725b"
        ],
        [
            "exact: anti_mono_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AcrossTypes.",
            "VernacEndSegment",
            "cbf92e68262ee26960b55be5033f1606dd51cb00"
        ],
        [
            "Section NatToR.",
            "VernacBeginSection",
            "faa9829fb03cb4704db82c229138758c38612251"
        ],
        [
            "Variable D D' : pred nat.",
            "VernacAssumption",
            "37c82fdaff0aa37a4ca981b74a310946e4cdd533"
        ],
        [
            "Variable (f : nat -> R).",
            "VernacAssumption",
            "d309c507474fce1c1024f78adddde295a5e9e6cb"
        ],
        [
            "Lemma ltnrW_homo : {homo f : m n / (m < n)%N >-> m < n} -> {homo f : m n / (m <= n)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "d216621f35b97ef2968da8db8e472c2738afd68d"
        ],
        [
            "exact: homoW.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltnrW_nhomo : {homo f : m n / (n < m)%N >-> m < n} -> {homo f : m n / (n <= m)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "07b502651739d577b618e44873c7bf4848f48d0a"
        ],
        [
            "exact: homoW.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_homo_ltnr : injective f -> {homo f : m n / (m <= n)%N >-> m <= n} -> {homo f : m n / (m < n)%N >-> m < n}.",
            "VernacStartTheoremProof",
            "35c919250c45aa0a82c1e854cea479c57aab8899"
        ],
        [
            "exact: inj_homo.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_nhomo_ltnr : injective f -> {homo f : m n / (n <= m)%N >-> m <= n} -> {homo f : m n / (n < m)%N >-> m < n}.",
            "VernacStartTheoremProof",
            "c70b45a9caaf34bde6950f407cf0c8d430286fd7"
        ],
        [
            "exact: inj_homo.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incnr_inj : {mono f : m n / (m <= n)%N >-> m <= n} -> injective f.",
            "VernacStartTheoremProof",
            "04bd71d8cca035192ac2efd73a1cfa2338bd632f"
        ],
        [
            "exact: mono_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decnr_inj_inj : {mono f : m n / (n <= m)%N >-> m <= n} -> injective f.",
            "VernacStartTheoremProof",
            "3878c3137210abe05a5ff9f0b25004e2d622cdff"
        ],
        [
            "exact: mono_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lenrW_mono : {mono f : m n / (m <= n)%N >-> m <= n} -> {mono f : m n / (m < n)%N >-> m < n}.",
            "VernacStartTheoremProof",
            "48b4edccc5b619f7c9a327b244c25d5095354fb6"
        ],
        [
            "exact: anti_mono.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lenrW_nmono : {mono f : m n / (n <= m)%N >-> m <= n} -> {mono f : m n / (n < m)%N >-> m < n}.",
            "VernacStartTheoremProof",
            "e273889af54852264e4e8db6f2c50b960d459c39"
        ],
        [
            "exact: anti_mono.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lenr_mono : {homo f : m n / (m < n)%N >-> m < n} -> {mono f : m n / (m <= n)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "a680d02179369a0aa530341913c7b35af8755609"
        ],
        [
            "exact: total_homo_mono.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lenr_nmono : {homo f : m n / (n < m)%N >-> m < n} -> {mono f : m n / (n <= m)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "f91442389aefa45fb70c3a22d14859cb52ac2113"
        ],
        [
            "exact: total_homo_mono.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltnrW_homo_in : {in D & D', {homo f : m n / (m < n)%N >-> m < n}} -> {in D & D', {homo f : m n / (m <= n)%N >-> m <= n}}.",
            "VernacStartTheoremProof",
            "80cbf60639bf2aa3f3301c82e6fdea999d3bd238"
        ],
        [
            "exact: homoW_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltnrW_nhomo_in : {in D & D', {homo f : m n / (n < m)%N >-> m < n}} -> {in D & D', {homo f : m n / (n <= m)%N >-> m <= n}}.",
            "VernacStartTheoremProof",
            "0528f3bdf835ee127ca6cf5377ca266212389b55"
        ],
        [
            "exact: homoW_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_homo_ltnr_in : {in D & D', injective f} -> {in D & D', {homo f : m n / (m <= n)%N >-> m <= n}} -> {in D & D', {homo f : m n / (m < n)%N >-> m < n}}.",
            "VernacStartTheoremProof",
            "b06ae9afda73e6d208e90e1eb365a69bf265fb4b"
        ],
        [
            "exact: inj_homo_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_nhomo_ltnr_in : {in D & D', injective f} -> {in D & D', {homo f : m n / (n <= m)%N >-> m <= n}} -> {in D & D', {homo f : m n / (n < m)%N >-> m < n}}.",
            "VernacStartTheoremProof",
            "74acb36bd6b012c5b4f57abb83783f10ceaa358e"
        ],
        [
            "exact: inj_homo_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incnr_inj_in : {in D &, {mono f : m n / (m <= n)%N >-> m <= n}} -> {in D &, injective f}.",
            "VernacStartTheoremProof",
            "5004460f4baaa437c439cd000523f540e02314af"
        ],
        [
            "exact: mono_inj_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decnr_inj_inj_in : {in D &, {mono f : m n / (n <= m)%N >-> m <= n}} -> {in D &, injective f}.",
            "VernacStartTheoremProof",
            "d09bad58fdec2c87274fd034d4d37c27d58e69d8"
        ],
        [
            "exact: mono_inj_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lenrW_mono_in : {in D &, {mono f : m n / (m <= n)%N >-> m <= n}} -> {in D &, {mono f : m n / (m < n)%N >-> m < n}}.",
            "VernacStartTheoremProof",
            "47ff63c62fb2f6312251bd0f4194e2bf4b319e05"
        ],
        [
            "exact: anti_mono_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lenrW_nmono_in : {in D &, {mono f : m n / (n <= m)%N >-> m <= n}} -> {in D &, {mono f : m n / (n < m)%N >-> m < n}}.",
            "VernacStartTheoremProof",
            "7f25c5c31ae6d978241ed486b8a8d92092c88cf5"
        ],
        [
            "exact: anti_mono_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lenr_mono_in : {in D &, {homo f : m n / (m < n)%N >-> m < n}} -> {in D &, {mono f : m n / (m <= n)%N >-> m <= n}}.",
            "VernacStartTheoremProof",
            "3c3a7d6edca35ea1313b10be8a9951628f04a84b"
        ],
        [
            "exact: total_homo_mono_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lenr_nmono_in : {in D &, {homo f : m n / (n < m)%N >-> m < n}} -> {in D &, {mono f : m n / (n <= m)%N >-> m <= n}}.",
            "VernacStartTheoremProof",
            "29c0d7d2e5816526dc896cf781c8d386bfaf15a8"
        ],
        [
            "exact: total_homo_mono_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NatToR.",
            "VernacEndSegment",
            "e80291bdf4b5412ade41e581608deb70a0aec723"
        ],
        [
            "Section RToNat.",
            "VernacBeginSection",
            "1126518feb604102e1e2e5bc6a6aff9b36ea5e65"
        ],
        [
            "Variable D D' : pred R.",
            "VernacAssumption",
            "6efcec4704f152b4035ffdbc7e3003f0df9c99bf"
        ],
        [
            "Variable (f : R -> nat).",
            "VernacAssumption",
            "15d459c15657787379f6511b578d271d3c2796bd"
        ],
        [
            "Lemma ltrnW_homo : {homo f : m n / m < n >-> (m < n)%N} -> {homo f : m n / m <= n >-> (m <= n)%N}.",
            "VernacStartTheoremProof",
            "6255b83ef7f5af534b3887773c700d6bead3edab"
        ],
        [
            "exact: homoW.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrnW_nhomo : {homo f : m n / n < m >-> (m < n)%N} -> {homo f : m n / n <= m >-> (m <= n)%N}.",
            "VernacStartTheoremProof",
            "4b203b7c5ec268cdf93a96a525d5b6b42d0832f0"
        ],
        [
            "exact: homoW.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_homo_ltrn : injective f -> {homo f : m n / m <= n >-> (m <= n)%N} -> {homo f : m n / m < n >-> (m < n)%N}.",
            "VernacStartTheoremProof",
            "71858e4987fcfa647abf336e4531d77f27719e60"
        ],
        [
            "exact: inj_homo.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_nhomo_ltrn : injective f -> {homo f : m n / n <= m >-> (m <= n)%N} -> {homo f : m n / n < m >-> (m < n)%N}.",
            "VernacStartTheoremProof",
            "a41032634808a7417d9b8d1276cb273212b2960a"
        ],
        [
            "exact: inj_homo.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incrn_inj : {mono f : m n / m <= n >-> (m <= n)%N} -> injective f.",
            "VernacStartTheoremProof",
            "397f3b2f33d577483059bcb70eda112c390f5245"
        ],
        [
            "exact: mono_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decrn_inj : {mono f : m n / n <= m >-> (m <= n)%N} -> injective f.",
            "VernacStartTheoremProof",
            "794eac93b2513a4028d9a417e55b701fdf733fbc"
        ],
        [
            "exact: mono_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lernW_mono : {mono f : m n / m <= n >-> (m <= n)%N} -> {mono f : m n / m < n >-> (m < n)%N}.",
            "VernacStartTheoremProof",
            "4e27f13fcd0f75f451ea3319a38f38d2f5fcf8f5"
        ],
        [
            "exact: anti_mono.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lernW_nmono : {mono f : m n / n <= m >-> (m <= n)%N} -> {mono f : m n / n < m >-> (m < n)%N}.",
            "VernacStartTheoremProof",
            "e918a02184cf7c2c1da4c806a2c8cf47b1446c99"
        ],
        [
            "exact: anti_mono.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrnW_homo_in : {in D & D', {homo f : m n / m < n >-> (m < n)%N}} -> {in D & D', {homo f : m n / m <= n >-> (m <= n)%N}}.",
            "VernacStartTheoremProof",
            "62dbc908b0202ba8ac2ddc527b1c5d2e42104e8f"
        ],
        [
            "exact: homoW_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrnW_nhomo_in : {in D & D', {homo f : m n / n < m >-> (m < n)%N}} -> {in D & D', {homo f : m n / n <= m >-> (m <= n)%N}}.",
            "VernacStartTheoremProof",
            "62f425f419a00424c4915f4a6f26f8817985ffdd"
        ],
        [
            "exact: homoW_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_homo_ltrn_in : {in D & D', injective f} -> {in D & D', {homo f : m n / m <= n >-> (m <= n)%N}} -> {in D & D', {homo f : m n / m < n >-> (m < n)%N}}.",
            "VernacStartTheoremProof",
            "fad1f8dba9fef62593c0207bb64df1aa6ba04262"
        ],
        [
            "exact: inj_homo_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_nhomo_ltrn_in : {in D & D', injective f} -> {in D & D', {homo f : m n / n <= m >-> (m <= n)%N}} -> {in D & D', {homo f : m n / n < m >-> (m < n)%N}}.",
            "VernacStartTheoremProof",
            "efba6fd208d889bac48533287f3cde11be086ee2"
        ],
        [
            "exact: inj_homo_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incrn_inj_in : {in D &, {mono f : m n / m <= n >-> (m <= n)%N}} -> {in D &, injective f}.",
            "VernacStartTheoremProof",
            "1cfcb4a2e2c81f8027d6845effbe0b8fb524e069"
        ],
        [
            "exact: mono_inj_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decrn_inj_in : {in D &, {mono f : m n / n <= m >-> (m <= n)%N}} -> {in D &, injective f}.",
            "VernacStartTheoremProof",
            "9a71f3d2c2b6b80520935ade705cb70b0affb727"
        ],
        [
            "exact: mono_inj_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lernW_mono_in : {in D &, {mono f : m n / m <= n >-> (m <= n)%N}} -> {in D &, {mono f : m n / m < n >-> (m < n)%N}}.",
            "VernacStartTheoremProof",
            "53736a38359407f43cb18971607ef12b2a1d29a1"
        ],
        [
            "exact: anti_mono_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lernW_nmono_in : {in D &, {mono f : m n / n <= m >-> (m <= n)%N}} -> {in D &, {mono f : m n / n < m >-> (m < n)%N}}.",
            "VernacStartTheoremProof",
            "7dfd20832204a990b85763b049c5fd209a9565cf"
        ],
        [
            "exact: anti_mono_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RToNat.",
            "VernacEndSegment",
            "fbe7392f574626c8d0087412df3eed2b0e576b02"
        ],
        [
            "End NumIntegralDomainMonotonyTheory.",
            "VernacEndSegment",
            "a667c167e48d2aba5269587b69e0c5794a2d35b3"
        ],
        [
            "Section NumDomainOperationTheory.",
            "VernacBeginSection",
            "fc2e74ae1ca4fa5c784b1b5a29505a0f46e28c76"
        ],
        [
            "Variable R : numDomainType.",
            "VernacAssumption",
            "a4b127d661444d955c930fb5c01d0c9eef6610a8"
        ],
        [
            "Implicit Types x y z t : R.",
            "VernacReserve",
            "301ab45a59a3df7a22e11e8d5888ade83e78783d"
        ],
        [
            "Lemma ler_opp2 : {mono -%R : x y /~ x <= y :> R}.",
            "VernacStartTheoremProof",
            "25ac1552da13859cd029011d4f849c18359d77ea"
        ],
        [
            "by move=> x y /=; rewrite -subr_ge0 opprK addrC subr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ler_opp2 : core.",
            "VernacHints",
            "476075fa6f59c68290327c97e9dec50def2af2e4"
        ],
        [
            "Lemma ltr_opp2 : {mono -%R : x y /~ x < y :> R}.",
            "VernacStartTheoremProof",
            "f42f63431b0f516e05925ccec30ed5c52598fec2"
        ],
        [
            "by move=> x y /=; rewrite lerW_nmono.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ltr_opp2 : core.",
            "VernacHints",
            "4857635e8856fff703160131ea80712eb6776d26"
        ],
        [
            "Definition lter_opp2 := (ler_opp2, ltr_opp2).",
            "VernacDefinition",
            "a47b4c3bf84feab9e0c3e98be38d86fd0005a587"
        ],
        [
            "Lemma ler_oppr x y : (x <= - y) = (y <= - x).",
            "VernacStartTheoremProof",
            "0e7848991cb8ba32230ec4870d92fee521580ce0"
        ],
        [
            "by rewrite (monoRL opprK ler_opp2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_oppr x y : (x < - y) = (y < - x).",
            "VernacStartTheoremProof",
            "169892798183d2971a1c7f9604d76a5c02175650"
        ],
        [
            "by rewrite (monoRL opprK (lerW_nmono _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_oppr := (ler_oppr, ltr_oppr).",
            "VernacDefinition",
            "0d550708b44eccc00ec9c6973d436fb242f593b9"
        ],
        [
            "Lemma ler_oppl x y : (- x <= y) = (- y <= x).",
            "VernacStartTheoremProof",
            "612bc859c0710218b3b219da8df043d6facbbbdc"
        ],
        [
            "by rewrite (monoLR opprK ler_opp2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_oppl x y : (- x < y) = (- y < x).",
            "VernacStartTheoremProof",
            "ac43d92534c09c9c25cfcd575addbd5095a39aee"
        ],
        [
            "by rewrite (monoLR opprK (lerW_nmono _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_oppl := (ler_oppl, ltr_oppl).",
            "VernacDefinition",
            "c5ddd1d8443ddcc19375ae11bc0bc3ad218c42ec"
        ],
        [
            "Lemma oppr_ge0 x : (0 <= - x) = (x <= 0).",
            "VernacStartTheoremProof",
            "7a3e9bc9e06e9797dbf4c72e2b5d80c1ce3fe75c"
        ],
        [
            "by rewrite lter_oppr oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_gt0 x : (0 < - x) = (x < 0).",
            "VernacStartTheoremProof",
            "fe0f34e4c627a1229f2ef3efe7e88465541701b0"
        ],
        [
            "by rewrite lter_oppr oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition oppr_gte0 := (oppr_ge0, oppr_gt0).",
            "VernacDefinition",
            "b4a1bd29f18f7d1628b43b82e5cb9850229439bc"
        ],
        [
            "Lemma oppr_le0 x : (- x <= 0) = (0 <= x).",
            "VernacStartTheoremProof",
            "34d944ba27b16f7acb8aad85b3df202b97b7f813"
        ],
        [
            "by rewrite lter_oppl oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_lt0 x : (- x < 0) = (0 < x).",
            "VernacStartTheoremProof",
            "b1f0df0c2bf79192748f7c5b8601c6486642c021"
        ],
        [
            "by rewrite lter_oppl oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition oppr_lte0 := (oppr_le0, oppr_lt0).",
            "VernacDefinition",
            "1244c2920ab2f1506b0d96ab9390c42a8cdf61b3"
        ],
        [
            "Definition oppr_cp0 := (oppr_gte0, oppr_lte0).",
            "VernacDefinition",
            "cb314d224d16e3a50ef1f288a77f69b81f679092"
        ],
        [
            "Definition lter_oppE := (oppr_cp0, lter_opp2).",
            "VernacDefinition",
            "33118bd3cda37ed522d4ef502a4a8bf487525d59"
        ],
        [
            "Lemma ge0_cp x : 0 <= x -> (- x <= 0) * (- x <= x).",
            "VernacStartTheoremProof",
            "a1044abacf1b68d7ec508ef62db22bfa5da9ef40"
        ],
        [
            "by move=> hx; rewrite oppr_cp0 hx (@ler_trans _ 0) ?oppr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt0_cp x : 0 < x -> (0 <= x) * (- x <= 0) * (- x <= x) * (- x < 0) * (- x < x).",
            "VernacStartTheoremProof",
            "a170ec5fd940391fa01c67a766cc4a968894cee8"
        ],
        [
            "move=> hx; move: (ltrW hx) => hx'; rewrite !ge0_cp hx' //.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "by rewrite oppr_cp0 hx // (@ltr_trans _ 0) ?oppr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le0_cp x : x <= 0 -> (0 <= - x) * (x <= - x).",
            "VernacStartTheoremProof",
            "e4426970f7b080fac77efd3743b9745a5dfc9dd2"
        ],
        [
            "by move=> hx; rewrite oppr_cp0 hx (@ler_trans _ 0) ?oppr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt0_cp x : x < 0 -> (x <= 0) * (0 <= - x) * (x <= - x) * (0 < - x) * (x < - x).",
            "VernacStartTheoremProof",
            "0e588fcc44b8a3e0fe6622c6286161c9fc762365"
        ],
        [
            "move=> hx; move: (ltrW hx) => hx'; rewrite !le0_cp // hx'.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "by rewrite oppr_cp0 hx // (@ltr_trans _ 0) ?oppr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger0_real x : 0 <= x -> x \\is real.",
            "VernacStartTheoremProof",
            "f097d3e4681b86e10af371931d2ae1e355d40cde"
        ],
        [
            "by rewrite realE => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler0_real x : x <= 0 -> x \\is real.",
            "VernacStartTheoremProof",
            "933bab2dec0a8387fef717608896b60ddb426a7d"
        ],
        [
            "by rewrite realE orbC => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr0_real x : 0 < x -> x \\is real.",
            "VernacStartTheoremProof",
            "5bfcc37dc2b283d2270c46a76577c41b7841da95"
        ],
        [
            "by move=> /ltrW/ger0_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr0_real x : x < 0 -> x \\is real.",
            "VernacStartTheoremProof",
            "8e9b94b07d1ea7e2ed6176337fb9c815d4c57f5d"
        ],
        [
            "by move=> /ltrW/ler0_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real0 : 0 \\is @real R.",
            "VernacStartTheoremProof",
            "b976c2edf229b6af6d6b6cb2e92a8f22af328736"
        ],
        [
            "by rewrite ger0_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve real0 : core.",
            "VernacHints",
            "2f0043bc6461d20367e409053e8acdcd8127bd42"
        ],
        [
            "Lemma real1 : 1 \\is @real R.",
            "VernacStartTheoremProof",
            "aebf30766199a41b331689bf77c6ea90699ba7e2"
        ],
        [
            "by rewrite ger0_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve real1 : core.",
            "VernacHints",
            "92e6345249585c1020f08962b60dcd5614270be7"
        ],
        [
            "Lemma realn n : n%:R \\is @real R.",
            "VernacStartTheoremProof",
            "c5e76dbd026d0988f08bb29cbd88e78797103333"
        ],
        [
            "by rewrite ger0_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_leVge x y : x <= 0 -> y <= 0 -> (x <= y) || (y <= x).",
            "VernacStartTheoremProof",
            "459d76ea5221b15add5f7b77ef56f51572d7ddc3"
        ],
        [
            "by rewrite -!oppr_ge0 => /(ger_leVge _) h /h; rewrite !ler_opp2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_leVge x y : x \\is real -> y \\is real -> (x <= y) || (y <= x).",
            "VernacStartTheoremProof",
            "00db05130345a6247ab05dbf3c811e563a41cc54"
        ],
        [
            "rewrite !realE; have [x_ge0 _|x_nge0 /= x_le0] := boolP (_ <= _); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have [/(ler_trans x_le0)->|_ /(ler_leVge x_le0) //] := boolP (0 <= _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by have [/(ger_leVge x_ge0)|_ /ler_trans->] := boolP (0 <= _); rewrite ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realB : {in real &, forall x y, x - y \\is real}.",
            "VernacStartTheoremProof",
            "f3c1c4bd0a1631b38863f50f875bf458e4b45c77"
        ],
        [
            "exact: rpredB.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realN : {mono (@GRing.opp R) : x / x \\is real}.",
            "VernacStartTheoremProof",
            "8c06155589d21bb3b897ef2e794a113f80c0e3f8"
        ],
        [
            "exact: rpredN.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realBC x y : (x - y \\is real) = (y - x \\is real).",
            "VernacStartTheoremProof",
            "5a23c37d2496f97927921805e942fee85f4177da"
        ],
        [
            "by rewrite -realN opprB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realD : {in real &, forall x y, x + y \\is real}.",
            "VernacStartTheoremProof",
            "26fa57fa055c7f5af76d4138c72a12e7539a26f6"
        ],
        [
            "exact: rpredD.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant ler_xor_gt (x y : R) : R -> R -> bool -> bool -> Set := | LerNotGt of x <= y : ler_xor_gt x y (y - x) (y - x) true false | GtrNotLe of y < x : ler_xor_gt x y (x - y) (x - y) false true.",
            "VernacInductive",
            "9c9e7a991b016ea03d52e59fcf398a26fa6351d9"
        ],
        [
            "Variant ltr_xor_ge (x y : R) : R -> R -> bool -> bool -> Set := | LtrNotGe of x < y : ltr_xor_ge x y (y - x) (y - x) false true | GerNotLt of y <= x : ltr_xor_ge x y (x - y) (x - y) true false.",
            "VernacInductive",
            "5411c5bbda0f0140aab1e7dd7dbc042ce2fca7b9"
        ],
        [
            "Variant comparer x y : R -> R -> bool -> bool -> bool -> bool -> bool -> bool -> Set := | ComparerLt of x < y : comparer x y (y - x) (y - x) false false true false true false | ComparerGt of x > y : comparer x y (x - y) (x - y) false false false true false true | ComparerEq of x = y : comparer x y 0 0 true true true true false false.",
            "VernacInductive",
            "59189774c6405e10f40c1f3664bb855584ba7089"
        ],
        [
            "Lemma real_lerP x y : x \\is real -> y \\is real -> ler_xor_gt x y `|x - y| `|y - x| (x <= y) (y < x).",
            "VernacStartTheoremProof",
            "2116785f864ba62de34c9bdb4e92895d38d6557e"
        ],
        [
            "move=> xR /(real_leVge xR); have [le_xy _|Nle_xy /= le_yx] := boolP (_ <= _).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [/(ler_lt_trans le_xy)|] := boolP (_ < _); first by rewrite ltrr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ler0_norm ?ger0_norm ?subr_cp0 ?opprB //; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [lt_yx|] := boolP (_ < _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ger0_norm ?ler0_norm ?subr_cp0 ?opprB //; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltr_def le_yx andbT negbK=> /eqP exy; rewrite exy lerr in Nle_xy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ltrP x y : x \\is real -> y \\is real -> ltr_xor_ge x y `|x - y| `|y - x| (y <= x) (x < y).",
            "VernacStartTheoremProof",
            "f19bf819b915397318f3863102a73cdd3b7816b3"
        ],
        [
            "by move=> xR yR; case: real_lerP=> //; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ltrNge : {in real &, forall x y, (x < y) = ~~ (y <= x)}.",
            "VernacStartTheoremProof",
            "b928a604a59e1b44f3362d280f37536baf73ee9a"
        ],
        [
            "by move=> x y xR yR /=; case: real_lerP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_lerNgt : {in real &, forall x y, (x <= y) = ~~ (y < x)}.",
            "VernacStartTheoremProof",
            "16bf08a9daf12d7cfb9e0dfbf54ab7004c8cba9d"
        ],
        [
            "by move=> x y xR yR /=; case: real_lerP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ltrgtP x y : x \\is real -> y \\is real -> comparer x y `|x - y| `|y - x| (y == x) (x == y) (x <= y) (y <= x) (x < y) (x > y).",
            "VernacStartTheoremProof",
            "0804bd626f9e6f4120b192a303b29d234cafd958"
        ],
        [
            "move=> xR yR; case: real_lerP => // [le_yx|lt_xy]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gtr_eqF // ltr_eqF // ler_gtF ?ltrW //; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: real_lerP => // [le_xy|lt_yx]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltr_eqF // gtr_eqF //; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /eqP ->: x == y by rewrite eqr_le le_yx le_xy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite subrr eqxx; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant ger0_xor_lt0 (x : R) : R -> bool -> bool -> Set := | Ger0NotLt0 of 0 <= x : ger0_xor_lt0 x x false true | Ltr0NotGe0 of x < 0 : ger0_xor_lt0 x (- x) true false.",
            "VernacInductive",
            "bc178b19ee45bd4039053e5a0e5db4af1952df0f"
        ],
        [
            "Variant ler0_xor_gt0 (x : R) : R -> bool -> bool -> Set := | Ler0NotLe0 of x <= 0 : ler0_xor_gt0 x (- x) false true | Gtr0NotGt0 of 0 < x : ler0_xor_gt0 x x true false.",
            "VernacInductive",
            "204a08df0b2feea474df091147287e72a1a760f8"
        ],
        [
            "Variant comparer0 x : R -> bool -> bool -> bool -> bool -> bool -> bool -> Set := | ComparerGt0 of 0 < x : comparer0 x x false false false true false true | ComparerLt0 of x < 0 : comparer0 x (- x) false false true false true false | ComparerEq0 of x = 0 : comparer0 x 0 true true true true false false.",
            "VernacInductive",
            "56a5fd65bacb63d0a25a766b086aad20d1004d9f"
        ],
        [
            "Lemma real_ger0P x : x \\is real -> ger0_xor_lt0 x `|x| (x < 0) (0 <= x).",
            "VernacStartTheoremProof",
            "734eb4118871b9031dcdc00ab5635ee5c2a74807"
        ],
        [
            "move=> hx; rewrite -{2}[x]subr0; case: real_ltrP; by rewrite ?subr0 ?sub0r //; constructor.",
            "VernacExtend",
            "83d895b4ccde6e76d544d023288a8eb52ce43373"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ler0P x : x \\is real -> ler0_xor_gt0 x `|x| (0 < x) (x <= 0).",
            "VernacStartTheoremProof",
            "110088aa73c729ee12919701318d332675752607"
        ],
        [
            "move=> hx; rewrite -{2}[x]subr0; case: real_ltrP; by rewrite ?subr0 ?sub0r //; constructor.",
            "VernacExtend",
            "83d895b4ccde6e76d544d023288a8eb52ce43373"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ltrgt0P x : x \\is real -> comparer0 x `|x| (0 == x) (x == 0) (x <= 0) (0 <= x) (x < 0) (x > 0).",
            "VernacStartTheoremProof",
            "4d1bfb69aff7a49fbff12c52931cef32f16950e3"
        ],
        [
            "move=> hx; rewrite -{2}[x]subr0; case: real_ltrgtP; by rewrite ?subr0 ?sub0r //; constructor.",
            "VernacExtend",
            "83d895b4ccde6e76d544d023288a8eb52ce43373"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_neqr_lt : {in real &, forall x y, (x != y) = (x < y) || (y < x)}.",
            "VernacStartTheoremProof",
            "ecaf50b21f33c636840559314a23afcfa6ab8730"
        ],
        [
            "by move=> * /=; case: real_ltrgtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_sub_real x y : x <= y -> y - x \\is real.",
            "VernacStartTheoremProof",
            "1feec10b16809541c4f160a15a8f1b2854ee266e"
        ],
        [
            "by move=> le_xy; rewrite ger0_real // subr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_sub_real x y : x <= y -> x - y \\is real.",
            "VernacStartTheoremProof",
            "f3fcc89737e5673d88a650881d77e57a892424e0"
        ],
        [
            "by move=> le_xy; rewrite ler0_real // subr_le0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_real y x : x <= y -> (x \\is real) = (y \\is real).",
            "VernacStartTheoremProof",
            "622b8267bc9157b780ebf196d9005d2c9ed6fdc3"
        ],
        [
            "by move=> le_xy; rewrite -(addrNK x y) rpredDl ?ler_sub_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_real x y : y <= x -> (x \\is real) = (y \\is real).",
            "VernacStartTheoremProof",
            "a45c1e47b8e07bf71d8ad3d79c066ce5f71c86d6"
        ],
        [
            "by move=> le_yx; rewrite -(ler_real le_yx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger1_real x : 1 <= x -> x \\is real.",
            "VernacStartTheoremProof",
            "66b76c938f0c9d72905a38e889a4a7b69b2bd53f"
        ],
        [
            "by move=> /ger_real->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler1_real x : x <= 1 -> x \\is real.",
            "VernacStartTheoremProof",
            "6e25179d4132ab03ee27953f30927b7e2f21cfdb"
        ],
        [
            "by move=> /ler_real->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nreal_leF x y : y \\is real -> x \\notin real -> (x <= y) = false.",
            "VernacStartTheoremProof",
            "458aa5750e6ba20156bb77268f29991a5b48e2cc"
        ],
        [
            "by move=> yR; apply: contraNF=> /ler_real->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nreal_geF x y : y \\is real -> x \\notin real -> (y <= x) = false.",
            "VernacStartTheoremProof",
            "c582e158dc93e49e0f9f4a94d5be8ecb4ae306dd"
        ],
        [
            "by move=> yR; apply: contraNF=> /ger_real->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nreal_ltF x y : y \\is real -> x \\notin real -> (x < y) = false.",
            "VernacStartTheoremProof",
            "7d63a8c2dc02cebc3e23801e170d321429c87f7c"
        ],
        [
            "by move=> yR xNR; rewrite ltr_def Nreal_leF ?andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nreal_gtF x y : y \\is real -> x \\notin real -> (y < x) = false.",
            "VernacStartTheoremProof",
            "4b2e34f787e679276cbc975a8432254a88057318"
        ],
        [
            "by move=> yR xNR; rewrite ltr_def Nreal_geF ?andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_wlog_ler P : (forall a b, P b a -> P a b) -> (forall a b, a <= b -> P a b) -> forall a b : R, a \\is real -> b \\is real -> P a b.",
            "VernacStartTheoremProof",
            "567dd9ca2dd3ecb71cb0e86b50d8f8e751bf4ade"
        ],
        [
            "move=> sP hP a b ha hb; wlog: a b ha hb / a <= b => [hwlog|]; last exact: hP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: (real_lerP ha hb)=> [/hP //|/ltrW hba]; apply: sP; apply: hP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_wlog_ltr P : (forall a, P a a) -> (forall a b, (P b a -> P a b)) -> (forall a b, a < b -> P a b) -> forall a b : R, a \\is real -> b \\is real -> P a b.",
            "VernacStartTheoremProof",
            "fd37ec06afcff1bb06ee9c7a3b178fa24e6ef82d"
        ],
        [
            "move=> rP sP hP; apply: real_wlog_ler=> // a b.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite ler_eqVlt; case: (altP (_ =P _))=> [->|] //= _ lab; apply: hP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_add2l x : {mono +%R x : y z / y <= z}.",
            "VernacStartTheoremProof",
            "310e9580174a88792bae97b87546e4da8fea9d06"
        ],
        [
            "by move=> y z /=; rewrite -subr_ge0 opprD addrAC addNKr addrC subr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_add2r x : {mono +%R^~ x : y z / y <= z}.",
            "VernacStartTheoremProof",
            "a20c6290ec7be7843e3cb6ed2fff0527ebae0ff6"
        ],
        [
            "by move=> y z /=; rewrite ![_ + x]addrC ler_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_add2l x : {mono +%R x : y z / y < z}.",
            "VernacStartTheoremProof",
            "951741838d34f93309d2804cc87afc2356bc95e4"
        ],
        [
            "by move=> y z /=; rewrite (lerW_mono (ler_add2l _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_add2r x : {mono +%R^~ x : y z / y < z}.",
            "VernacStartTheoremProof",
            "3c67f43659d7542520462c096bcdc0e59fad6f66"
        ],
        [
            "by move=> y z /=; rewrite (lerW_mono (ler_add2r _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ler_add2 := (ler_add2l, ler_add2r).",
            "VernacDefinition",
            "b10d0258718c8ff30761db593642e81128672dab"
        ],
        [
            "Definition ltr_add2 := (ltr_add2l, ltr_add2r).",
            "VernacDefinition",
            "c72050dbbacf2d5b7fc43ef2e9ef275ca891e0ee"
        ],
        [
            "Definition lter_add2 := (ler_add2, ltr_add2).",
            "VernacDefinition",
            "81941868ef46401d64bfa3e7605140b6820ea737"
        ],
        [
            "Lemma ler_add x y z t : x <= y -> z <= t -> x + z <= y + t.",
            "VernacStartTheoremProof",
            "e3aa1ae240ed539333a9ee78189a1bb88c0a06ca"
        ],
        [
            "by move=> lxy lzt; rewrite (@ler_trans _ (y + z)) ?lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_lt_add x y z t : x <= y -> z < t -> x + z < y + t.",
            "VernacStartTheoremProof",
            "9199023a88b1005d375ec4a75d4df849539333a9"
        ],
        [
            "by move=> lxy lzt; rewrite (@ler_lt_trans _ (y + z)) ?lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_le_add x y z t : x < y -> z <= t -> x + z < y + t.",
            "VernacStartTheoremProof",
            "9b0e326bf17fc1606046cced973b91544f415bfc"
        ],
        [
            "by move=> lxy lzt; rewrite (@ltr_le_trans _ (y + z)) ?lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_add x y z t : x < y -> z < t -> x + z < y + t.",
            "VernacStartTheoremProof",
            "d850a47161f8fb26b39f0acf0261e8d76daa44a9"
        ],
        [
            "by move=> lxy lzt; rewrite ltr_le_add // ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_sub x y z t : x <= y -> t <= z -> x - z <= y - t.",
            "VernacStartTheoremProof",
            "5deeaf725e7fd2a31e3de6e4054ffbbc007c8d33"
        ],
        [
            "by move=> lxy ltz; rewrite ler_add // lter_opp2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_lt_sub x y z t : x <= y -> t < z -> x - z < y - t.",
            "VernacStartTheoremProof",
            "fdffb31df59161d8e3a6bf51c4afc9ecf1aea1a9"
        ],
        [
            "by move=> lxy lzt; rewrite ler_lt_add // lter_opp2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_le_sub x y z t : x < y -> t <= z -> x - z < y - t.",
            "VernacStartTheoremProof",
            "2385f7e800722c67381d97735576c307f868d76d"
        ],
        [
            "by move=> lxy lzt; rewrite ltr_le_add // lter_opp2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_sub x y z t : x < y -> t < z -> x - z < y - t.",
            "VernacStartTheoremProof",
            "1aa1fb5af2eee7c04c109540890fff15b4f5a3a1"
        ],
        [
            "by move=> lxy lzt; rewrite ltr_add // lter_opp2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_subl_addr x y z : (x - y <= z) = (x <= z + y).",
            "VernacStartTheoremProof",
            "ceb080937ee2f3fdf41489b127edc67a62db49f8"
        ],
        [
            "by rewrite (monoLR (addrK _) (ler_add2r _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_subl_addr x y z : (x - y < z) = (x < z + y).",
            "VernacStartTheoremProof",
            "2afbd9cde92e0d842f1b1f87a4f7005adc3e7e8a"
        ],
        [
            "by rewrite (monoLR (addrK _) (ltr_add2r _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_subr_addr x y z : (x <= y - z) = (x + z <= y).",
            "VernacStartTheoremProof",
            "19bd9ab174286acc7818c2e0ecf23a1d1cb3012c"
        ],
        [
            "by rewrite (monoLR (addrNK _) (ler_add2r _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_subr_addr x y z : (x < y - z) = (x + z < y).",
            "VernacStartTheoremProof",
            "bc0c033a5d54abcd9c99c6e6e6dfc362c22f46a0"
        ],
        [
            "by rewrite (monoLR (addrNK _) (ltr_add2r _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ler_sub_addr := (ler_subl_addr, ler_subr_addr).",
            "VernacDefinition",
            "9a6a19ab1a187f0ee4d0671440132cac5ac3db25"
        ],
        [
            "Definition ltr_sub_addr := (ltr_subl_addr, ltr_subr_addr).",
            "VernacDefinition",
            "8e783a1c5d0ac0222a40f34f875fecb17402eb65"
        ],
        [
            "Definition lter_sub_addr := (ler_sub_addr, ltr_sub_addr).",
            "VernacDefinition",
            "0fcfc0209959d44a7dedc5632fa6682277a4b5d1"
        ],
        [
            "Lemma ler_subl_addl x y z : (x - y <= z) = (x <= y + z).",
            "VernacStartTheoremProof",
            "b84b8e49d6e97760d19236ed4122a22a35c5d535"
        ],
        [
            "by rewrite lter_sub_addr addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_subl_addl x y z : (x - y < z) = (x < y + z).",
            "VernacStartTheoremProof",
            "b01b310823df507b64f17fffbec6bbe69e8423a0"
        ],
        [
            "by rewrite lter_sub_addr addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_subr_addl x y z : (x <= y - z) = (z + x <= y).",
            "VernacStartTheoremProof",
            "a9d8550e8ac6dbda22beb18a3f2aee882cf75427"
        ],
        [
            "by rewrite lter_sub_addr addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_subr_addl x y z : (x < y - z) = (z + x < y).",
            "VernacStartTheoremProof",
            "2c737c701902e7b3e70ce0c0f46fd27006fd6c15"
        ],
        [
            "by rewrite lter_sub_addr addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ler_sub_addl := (ler_subl_addl, ler_subr_addl).",
            "VernacDefinition",
            "7df7f7c14ed2ba9cbfa4a7b34f31500068483656"
        ],
        [
            "Definition ltr_sub_addl := (ltr_subl_addl, ltr_subr_addl).",
            "VernacDefinition",
            "f718a03c7755780dfe82ea48da545914cef724e8"
        ],
        [
            "Definition lter_sub_addl := (ler_sub_addl, ltr_sub_addl).",
            "VernacDefinition",
            "a1202e4ea8bb0e9afe841ac92cefaca2997c0933"
        ],
        [
            "Lemma ler_addl x y : (x <= x + y) = (0 <= y).",
            "VernacStartTheoremProof",
            "8cb141ee444d945c3482096ba21638c2e62e08b4"
        ],
        [
            "by rewrite -{1}[x]addr0 lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_addl x y : (x < x + y) = (0 < y).",
            "VernacStartTheoremProof",
            "8fbc46af8c95b71cf8460cd3a16b86183a707f91"
        ],
        [
            "by rewrite -{1}[x]addr0 lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_addr x y : (x <= y + x) = (0 <= y).",
            "VernacStartTheoremProof",
            "a2119d3ee5a1de2cea291dd9833af92fbd5aefae"
        ],
        [
            "by rewrite -{1}[x]add0r lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_addr x y : (x < y + x) = (0 < y).",
            "VernacStartTheoremProof",
            "54b91f560cb0618c2a70f1da293b4781871debc4"
        ],
        [
            "by rewrite -{1}[x]add0r lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_addl x y : (x + y <= x) = (y <= 0).",
            "VernacStartTheoremProof",
            "a3b33be092be80f618f8045e12e82cae44a2e1c7"
        ],
        [
            "by rewrite -{2}[x]addr0 lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr_addl x y : (x + y < x) = (y < 0).",
            "VernacStartTheoremProof",
            "2000d7e36ffef5a64e379cdfa08defe7784761e3"
        ],
        [
            "by rewrite -{2}[x]addr0 lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_addr x y : (y + x <= x) = (y <= 0).",
            "VernacStartTheoremProof",
            "c3f48dbcb14d0b5bd0ca9c299c1b7fcae2ccd6f3"
        ],
        [
            "by rewrite -{2}[x]add0r lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr_addr x y : (y + x < x) = (y < 0).",
            "VernacStartTheoremProof",
            "5e5265d63455de03930ad276af8310633d086ad2"
        ],
        [
            "by rewrite -{2}[x]add0r lter_add2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cpr_add := (ler_addl, ler_addr, ger_addl, ger_addl, ltr_addl, ltr_addr, gtr_addl, gtr_addl).",
            "VernacDefinition",
            "ab950b42cf17b5c1919685533019c49450e80056"
        ],
        [
            "Lemma ler_paddl y x z : 0 <= x -> y <= z -> y <= x + z.",
            "VernacStartTheoremProof",
            "d2adf43365353372660f40ed7707f8224a5cc6f5"
        ],
        [
            "by move=> *; rewrite -[y]add0r ler_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_paddl y x z : 0 <= x -> y < z -> y < x + z.",
            "VernacStartTheoremProof",
            "5aaf830c91179ae858441e45dcef45cf8ca9a856"
        ],
        [
            "by move=> *; rewrite -[y]add0r ler_lt_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_spaddl y x z : 0 < x -> y <= z -> y < x + z.",
            "VernacStartTheoremProof",
            "fdb3dd94748e3149f9f76e19ffd1870110dc23d9"
        ],
        [
            "by move=> *; rewrite -[y]add0r ltr_le_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_spsaddl y x z : 0 < x -> y < z -> y < x + z.",
            "VernacStartTheoremProof",
            "49a7a253de7bb9182db50fff762d2131ddb2b27d"
        ],
        [
            "by move=> *; rewrite -[y]add0r ltr_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_naddl y x z : x <= 0 -> y <= z -> x + y <= z.",
            "VernacStartTheoremProof",
            "ea2535988e8fbc4606bc90becc64ea2fce455704"
        ],
        [
            "by move=> *; rewrite -[z]add0r ler_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_naddl y x z : x <= 0 -> y < z -> x + y < z.",
            "VernacStartTheoremProof",
            "9d6241b91f67da25504b482ecb5623ae93800854"
        ],
        [
            "by move=> *; rewrite -[z]add0r ler_lt_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_snaddl y x z : x < 0 -> y <= z -> x + y < z.",
            "VernacStartTheoremProof",
            "dca3a58d117554e52923a2799d2779ba2b18fd28"
        ],
        [
            "by move=> *; rewrite -[z]add0r ltr_le_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_snsaddl y x z : x < 0 -> y < z -> x + y < z.",
            "VernacStartTheoremProof",
            "fe840051019688a765f3c01d9678cbaba9fd08d9"
        ],
        [
            "by move=> *; rewrite -[z]add0r ltr_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_paddr y x z : 0 <= x -> y <= z -> y <= z + x.",
            "VernacStartTheoremProof",
            "a3b0a980a75711144aa1cf192f2ba01f56eb2878"
        ],
        [
            "by move=> *; rewrite [_ + x]addrC ler_paddl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_paddr y x z : 0 <= x -> y < z -> y < z + x.",
            "VernacStartTheoremProof",
            "02c1124adba168b2811fad00ea6e1fa2a21a8d87"
        ],
        [
            "by move=> *; rewrite [_ + x]addrC ltr_paddl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_spaddr y x z : 0 < x -> y <= z -> y < z + x.",
            "VernacStartTheoremProof",
            "29551dcdb22f65363d8b21a595f3485d4e3a879a"
        ],
        [
            "by move=> *; rewrite [_ + x]addrC ltr_spaddl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_spsaddr y x z : 0 < x -> y < z -> y < z + x.",
            "VernacStartTheoremProof",
            "be15a57a96c7f25fa13796f240001653f57c8fc5"
        ],
        [
            "by move=> *; rewrite [_ + x]addrC ltr_spsaddl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_naddr y x z : x <= 0 -> y <= z -> y + x <= z.",
            "VernacStartTheoremProof",
            "4341527d8ae892e11170321b83f41f201ea6b42a"
        ],
        [
            "by move=> *; rewrite [_ + x]addrC ler_naddl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_naddr y x z : x <= 0 -> y < z -> y + x < z.",
            "VernacStartTheoremProof",
            "0c9376af34683fe75e358762419df6f777562294"
        ],
        [
            "by move=> *; rewrite [_ + x]addrC ltr_naddl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_snaddr y x z : x < 0 -> y <= z -> y + x < z.",
            "VernacStartTheoremProof",
            "4a0819bb912b211a4f0541a7858642d84c826e59"
        ],
        [
            "by move=> *; rewrite [_ + x]addrC ltr_snaddl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_snsaddr y x z : x < 0 -> y < z -> y + x < z.",
            "VernacStartTheoremProof",
            "0859f4e081257d0948e5482d634adeeb88284450"
        ],
        [
            "by move=> *; rewrite [_ + x]addrC ltr_snsaddl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma paddr_eq0 (x y : R) : 0 <= x -> 0 <= y -> (x + y == 0) = (x == 0) && (y == 0).",
            "VernacStartTheoremProof",
            "7ade8eb2a1c2496b6dcf7deaa41d443a6453453a"
        ],
        [
            "rewrite le0r; case/orP=> [/eqP->|hx]; first by rewrite add0r eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (gtr_eqF hx) /= => hy; rewrite gtr_eqF // ltr_spaddl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma naddr_eq0 (x y : R) : x <= 0 -> y <= 0 -> (x + y == 0) = (x == 0) && (y == 0).",
            "VernacStartTheoremProof",
            "1a59e0b14f655025d4184e19b41c7c491bbb3da6"
        ],
        [
            "by move=> lex0 ley0; rewrite -oppr_eq0 opprD paddr_eq0 ?oppr_cp0 // !oppr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addr_ss_eq0 (x y : R) : (0 <= x) && (0 <= y) || (x <= 0) && (y <= 0) -> (x + y == 0) = (x == 0) && (y == 0).",
            "VernacStartTheoremProof",
            "df5347a00c322e418547a23744edbb344fb0397e"
        ],
        [
            "by case/orP=> /andP []; [apply: paddr_eq0 | apply: naddr_eq0].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumr_ge0 I (r : seq I) (P : pred I) (F : I -> R) : (forall i, P i -> (0 <= F i)) -> 0 <= \\sum_(i <- r | P i) (F i).",
            "VernacStartTheoremProof",
            "f2afc8bbdd2b9d4ee38aae76606c08ebe06dd89d"
        ],
        [
            "exact: (big_ind _ _ (@ler_paddl 0)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_sum I (r : seq I) (P : pred I) (F G : I -> R) : (forall i, P i -> F i <= G i) -> \\sum_(i <- r | P i) F i <= \\sum_(i <- r | P i) G i.",
            "VernacStartTheoremProof",
            "029d51314d6ad3909031480423677c07f6f2d254"
        ],
        [
            "exact: (big_ind2 _ (lerr _) ler_add).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma psumr_eq0 (I : eqType) (r : seq I) (P : pred I) (F : I -> R) : (forall i, P i -> 0 <= F i) -> (\\sum_(i <- r | P i) (F i) == 0) = (all (fun i => (P i) ==> (F i == 0)) r).",
            "VernacStartTheoremProof",
            "7c05d0b1d9efa9c534db3b3ee415bfb6bf40c602"
        ],
        [
            "elim: r=> [|a r ihr hr] /=; rewrite (big_nil, big_cons); first by rewrite eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: ifP=> pa /=; rewrite ?paddr_eq0 ?ihr ?hr // sumr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma psumr_eq0P (I : finType) (P : pred I) (F : I -> R) : (forall i, P i -> 0 <= F i) -> \\sum_(i | P i) F i = 0 -> (forall i, P i -> F i = 0).",
            "VernacStartTheoremProof",
            "eedaa5e00d733b29cfe8e9f187942b1e86b66bff"
        ],
        [
            "move=> F_ge0 /eqP; rewrite psumr_eq0 // -big_all big_andE => /forallP hF i Pi.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by move: (hF i); rewrite implyTb Pi /= => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pmul2l x : 0 < x -> {mono *%R x : x y / x <= y}.",
            "VernacStartTheoremProof",
            "0119af3f7e2921eda290a020b76f90b28757b897"
        ],
        [
            "by move=> x_gt0 y z /=; rewrite -subr_ge0 -mulrBr pmulr_rge0 // subr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pmul2l x : 0 < x -> {mono *%R x : x y / x < y}.",
            "VernacStartTheoremProof",
            "44ead7b08897971d2a6c95626b4698feec1803fe"
        ],
        [
            "by move=> x_gt0; apply: lerW_mono (ler_pmul2l _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_pmul2l := (ler_pmul2l, ltr_pmul2l).",
            "VernacDefinition",
            "7e59574a10f42bd6f49bdeeb142f0310666829f7"
        ],
        [
            "Lemma ler_pmul2r x : 0 < x -> {mono *%R^~ x : x y / x <= y}.",
            "VernacStartTheoremProof",
            "15e64740f83478984d81d59ca0f699107a5e927d"
        ],
        [
            "by move=> x_gt0 y z /=; rewrite ![_ * x]mulrC ler_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pmul2r x : 0 < x -> {mono *%R^~ x : x y / x < y}.",
            "VernacStartTheoremProof",
            "73da6871fa243ef4f7af0b95f3cf5204a7ed643c"
        ],
        [
            "by move=> x_gt0; apply: lerW_mono (ler_pmul2r _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_pmul2r := (ler_pmul2r, ltr_pmul2r).",
            "VernacDefinition",
            "de0fbdd26c262beb423f2b1335b84fe57297e0a2"
        ],
        [
            "Lemma ler_nmul2l x : x < 0 -> {mono *%R x : x y /~ x <= y}.",
            "VernacStartTheoremProof",
            "cea4b434e12ca7338f9ea7baeceb4a390cbf1980"
        ],
        [
            "by move=> x_lt0 y z /=; rewrite -ler_opp2 -!mulNr ler_pmul2l ?oppr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nmul2l x : x < 0 -> {mono *%R x : x y /~ x < y}.",
            "VernacStartTheoremProof",
            "ed261bd05b58f7faefcf8712db968df7d9d03e32"
        ],
        [
            "by move=> x_lt0; apply: lerW_nmono (ler_nmul2l _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_nmul2l := (ler_nmul2l, ltr_nmul2l).",
            "VernacDefinition",
            "698823be5a23c482d52935f9a4fd55efef6fe450"
        ],
        [
            "Lemma ler_nmul2r x : x < 0 -> {mono *%R^~ x : x y /~ x <= y}.",
            "VernacStartTheoremProof",
            "6fef0ecb4a48106c2591e73616309b2b19a5b842"
        ],
        [
            "by move=> x_lt0 y z /=; rewrite ![_ * x]mulrC ler_nmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nmul2r x : x < 0 -> {mono *%R^~ x : x y /~ x < y}.",
            "VernacStartTheoremProof",
            "834a0d4831d45064257e9668a4f20ac7ec30aec6"
        ],
        [
            "by move=> x_lt0; apply: lerW_nmono (ler_nmul2r _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_nmul2r := (ler_nmul2r, ltr_nmul2r).",
            "VernacDefinition",
            "ef4f37b46de68cfd81d68d6c3cbb18cba05ece1c"
        ],
        [
            "Lemma ler_wpmul2l x : 0 <= x -> {homo *%R x : y z / y <= z}.",
            "VernacStartTheoremProof",
            "a988d583f72bc4e1b58719b3af36db78423140db"
        ],
        [
            "by rewrite le0r => /orP[/eqP-> y z | /ler_pmul2l/mono2W//]; rewrite !mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wpmul2r x : 0 <= x -> {homo *%R^~ x : y z / y <= z}.",
            "VernacStartTheoremProof",
            "794238ff3a11070d84de50123da180857cece7ea"
        ],
        [
            "by move=> x_ge0 y z leyz; rewrite ![_ * x]mulrC ler_wpmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wnmul2l x : x <= 0 -> {homo *%R x : y z /~ y <= z}.",
            "VernacStartTheoremProof",
            "d6b480cf4c2dd37390542727e61272e09198769b"
        ],
        [
            "by move=> x_le0 y z leyz; rewrite -![x * _]mulrNN ler_wpmul2l ?lter_oppE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wnmul2r x : x <= 0 -> {homo *%R^~ x : y z /~ y <= z}.",
            "VernacStartTheoremProof",
            "c25c844bfeedb7582370db8b913e921be88ad31e"
        ],
        [
            "by move=> x_le0 y z leyz; rewrite -![_ * x]mulrNN ler_wpmul2r ?lter_oppE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pmul x1 y1 x2 y2 : 0 <= x1 -> 0 <= x2 -> x1 <= y1 -> x2 <= y2 -> x1 * x2 <= y1 * y2.",
            "VernacStartTheoremProof",
            "f61e6ff4856d2bec71a26a993a306bf40f78ba33"
        ],
        [
            "move=> x1ge0 x2ge0 le_xy1 le_xy2; have y1ge0 := ler_trans x1ge0 le_xy1.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "exact: ler_trans (ler_wpmul2r x2ge0 le_xy1) (ler_wpmul2l y1ge0 le_xy2).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pmul x1 y1 x2 y2 : 0 <= x1 -> 0 <= x2 -> x1 < y1 -> x2 < y2 -> x1 * x2 < y1 * y2.",
            "VernacStartTheoremProof",
            "8f89ef926d0047cead0a09b4d988bdeb16775a68"
        ],
        [
            "move=> x1ge0 x2ge0 lt_xy1 lt_xy2; have y1gt0 := ler_lt_trans x1ge0 lt_xy1.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite (ler_lt_trans (ler_wpmul2r x2ge0 (ltrW lt_xy1))) ?ltr_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pmuln2r n : (0 < n)%N -> {mono (@GRing.natmul R)^~ n : x y / x <= y}.",
            "VernacStartTheoremProof",
            "c6d3c6a234570338e8c30167c142fa332aedbbb3"
        ],
        [
            "by case: n => // n _ x y /=; rewrite -mulr_natl -[y *+ _]mulr_natl ler_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pmuln2r n : (0 < n)%N -> {mono (@GRing.natmul R)^~ n : x y / x < y}.",
            "VernacStartTheoremProof",
            "75dbaea26def6c25ed9d08502db3b57c2821b908"
        ],
        [
            "by move/ler_pmuln2r/lerW_mono.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrnI n : (0 < n)%N -> injective ((@GRing.natmul R)^~ n).",
            "VernacStartTheoremProof",
            "a460c26b6e221fb202c8696b65cad380e5f86d6e"
        ],
        [
            "by move/ler_pmuln2r/incr_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_pmuln2r n : (0 < n)%N -> {mono (@GRing.natmul R)^~ n : x y / x == y}.",
            "VernacStartTheoremProof",
            "608b76bde40cf81b8bf7429d7cb1b0a2e8bfa4d7"
        ],
        [
            "by move/pmulrnI/inj_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrn_lgt0 x n : (0 < n)%N -> (0 < x *+ n) = (0 < x).",
            "VernacStartTheoremProof",
            "e3196d8e95f798f2a5f3906e681ffd91188c6720"
        ],
        [
            "by move=> n_gt0; rewrite -(mul0rn _ n) ltr_pmuln2r // mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrn_llt0 x n : (0 < n)%N -> (x *+ n < 0) = (x < 0).",
            "VernacStartTheoremProof",
            "fda383722152ae69c861919efeb82800bb11de7e"
        ],
        [
            "by move=> n_gt0; rewrite -(mul0rn _ n) ltr_pmuln2r // mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrn_lge0 x n : (0 < n)%N -> (0 <= x *+ n) = (0 <= x).",
            "VernacStartTheoremProof",
            "c56bc2de8e581f56c622ebb17059763d0910c35b"
        ],
        [
            "by move=> n_gt0; rewrite -(mul0rn _ n) ler_pmuln2r // mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrn_lle0 x n : (0 < n)%N -> (x *+ n <= 0) = (x <= 0).",
            "VernacStartTheoremProof",
            "9d1be12fbdcfc3f87b103aa12f84f8979a5371c1"
        ],
        [
            "by move=> n_gt0; rewrite -(mul0rn _ n) ler_pmuln2r // mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_wmuln2r x y n : x < y -> (x *+ n < y *+ n) = (0 < n)%N.",
            "VernacStartTheoremProof",
            "fc67acfcc142182074c847034d95b65caeadf825"
        ],
        [
            "by move=> ltxy; case: n=> // n; rewrite ltr_pmuln2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_wpmuln2r n : (0 < n)%N -> {homo (@GRing.natmul R)^~ n : x y / x < y}.",
            "VernacStartTheoremProof",
            "429922fe5ac815ce30e03954f04d32c247d94162"
        ],
        [
            "by move=> n_gt0 x y /= / ltr_wmuln2r ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wmuln2r n : {homo (@GRing.natmul R)^~ n : x y / x <= y}.",
            "VernacStartTheoremProof",
            "7b416227729a841b99eb72ab988457b0504b8222"
        ],
        [
            "by move=> x y hxy /=; case: n=> // n; rewrite ler_pmuln2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrn_wge0 x n : 0 <= x -> 0 <= x *+ n.",
            "VernacStartTheoremProof",
            "cb95da98153b8721c00e9b227c2b7b05c8f4127f"
        ],
        [
            "by move=> /(ler_wmuln2r n); rewrite mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrn_wle0 x n : x <= 0 -> x *+ n <= 0.",
            "VernacStartTheoremProof",
            "eafe02825b4c9d07bcf420cf8d8ebff51d1f59a3"
        ],
        [
            "by move=> /(ler_wmuln2r n); rewrite mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_muln2r n x y : (x *+ n <= y *+ n) = ((n == 0%N) || (x <= y)).",
            "VernacStartTheoremProof",
            "72a4041f4f02f872c05c036c468a4ca733df5f3e"
        ],
        [
            "by case: n => [|n]; rewrite ?lerr ?eqxx // ler_pmuln2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_muln2r n x y : (x *+ n < y *+ n) = ((0 < n)%N && (x < y)).",
            "VernacStartTheoremProof",
            "fab2ba950093e5139c7a5d96bf239e14e0e0e737"
        ],
        [
            "by case: n => [|n]; rewrite ?lerr ?eqxx // ltr_pmuln2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_muln2r n x y : (x *+ n == y *+ n) = (n == 0)%N || (x == y).",
            "VernacStartTheoremProof",
            "dd5b5ec4cf3c234f3c02e2f00c7c91106d272a80"
        ],
        [
            "by rewrite !eqr_le !ler_muln2r -orb_andr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrn_eq0 x n : (x *+ n == 0) = ((n == 0)%N || (x == 0)).",
            "VernacStartTheoremProof",
            "aba2202350a4fbf2acb14ffc6f9f6fcf7569cab2"
        ],
        [
            "by rewrite -mulr_natl mulf_eq0 pnatr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrIn x : x != 0 -> injective (GRing.natmul x).",
            "VernacStartTheoremProof",
            "30d63d59c9c6637245cd640b77128e04ebbb6f5a"
        ],
        [
            "move=> x_neq0 m n; without loss /subnK <-: m n / (n <= m)%N.",
            "VernacExtend",
            "d999ee33e7c6564a01a7bb2262aa207bb3b6058f"
        ],
        [
            "by move=> IH eq_xmn; case/orP: (leq_total m n) => /IH->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/eqP; rewrite mulrnDr -subr_eq0 addrK mulrn_eq0 => /predU1P[-> | /idPn].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wpmuln2l x : 0 <= x -> {homo (@GRing.natmul R x) : m n / (m <= n)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "4282ae11f98e8508945bf39d9d8b23a1e4a1a913"
        ],
        [
            "by move=> xge0 m n /subnK <-; rewrite mulrnDr ler_paddl ?mulrn_wge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wnmuln2l x : x <= 0 -> {homo (@GRing.natmul R x) : m n / (n <= m)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "6c6544373721a1e318a3984d85567ddb68fee697"
        ],
        [
            "by move=> xle0 m n hmn /=; rewrite -ler_opp2 -!mulNrn ler_wpmuln2l // oppr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrn_wgt0 x n : 0 < x -> 0 < x *+ n = (0 < n)%N.",
            "VernacStartTheoremProof",
            "44e819f8ed843f58a4a9c103fa46dc50cdd09822"
        ],
        [
            "by case: n => // n hx; rewrite pmulrn_lgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulrn_wlt0 x n : x < 0 -> x *+ n < 0 = (0 < n)%N.",
            "VernacStartTheoremProof",
            "e2df90abcec9443ac8457cb7ea3a51db5aadc0bf"
        ],
        [
            "by case: n => // n hx; rewrite pmulrn_llt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pmuln2l x : 0 < x -> {mono (@GRing.natmul R x) : m n / (m <= n)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "d6739bd4915fc2b2d70020240d5cc867827ba94c"
        ],
        [
            "move=> x_gt0 m n /=; case: leqP => hmn; first by rewrite ler_wpmuln2l // ltrW.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(subnK (ltnW hmn)) mulrnDr ger_addr ltr_geF //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrn_wgt0 // subn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pmuln2l x : 0 < x -> {mono (@GRing.natmul R x) : m n / (m < n)%N >-> m < n}.",
            "VernacStartTheoremProof",
            "f8deff1a716250c1c3e244509252a1cbf4924003"
        ],
        [
            "by move=> x_gt0; apply: lenrW_mono (ler_pmuln2l _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nmuln2l x : x < 0 -> {mono (@GRing.natmul R x) : m n / (n <= m)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "b17b59a79d45277c864e0922ed1ff032ec502051"
        ],
        [
            "by move=> x_lt0 m n /=; rewrite -ler_opp2 -!mulNrn ler_pmuln2l // oppr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nmuln2l x : x < 0 -> {mono (@GRing.natmul R x) : m n / (n < m)%N >-> m < n}.",
            "VernacStartTheoremProof",
            "1eb958e240db5ebecdf0ccfc656ac8b9c6315f39"
        ],
        [
            "by move=> x_lt0; apply: lenrW_nmono (ler_nmuln2l _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nat m n : (m%:R <= n%:R :> R) = (m <= n)%N.",
            "VernacStartTheoremProof",
            "303e3e1350376ff407be015be842e25468a002ba"
        ],
        [
            "by rewrite ler_pmuln2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nat m n : (m%:R < n%:R :> R) = (m < n)%N.",
            "VernacStartTheoremProof",
            "a4a3e63901577169dabe44f0edcc8d6853aa65a6"
        ],
        [
            "by rewrite ltr_pmuln2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_nat m n : (m%:R == n%:R :> R) = (m == n)%N.",
            "VernacStartTheoremProof",
            "fa2c42bf35a9080536e13486e2498b6c2e409d32"
        ],
        [
            "by rewrite (inj_eq (mulrIn _)) ?oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnatr_eq1 n : (n%:R == 1 :> R) = (n == 1)%N.",
            "VernacStartTheoremProof",
            "767c56cdcda6cdd324ac52483ee57114eb08edaf"
        ],
        [
            "exact: eqr_nat 1%N.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lern0 n : (n%:R <= 0 :> R) = (n == 0%N).",
            "VernacStartTheoremProof",
            "0fd9040e96d28a7d233077f5de15d81aed0ee301"
        ],
        [
            "by rewrite -[0]/0%:R ler_nat leqn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrn0 n : (n%:R < 0 :> R) = false.",
            "VernacStartTheoremProof",
            "13debfc8f60374453f043cdbe731692bd185d785"
        ],
        [
            "by rewrite -[0]/0%:R ltr_nat ltn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler1n n : 1 <= n%:R :> R = (1 <= n)%N.",
            "VernacStartTheoremProof",
            "0ffc345509f2a98579745a1832137007f9a68139"
        ],
        [
            "by rewrite -ler_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr1n n : 1 < n%:R :> R = (1 < n)%N.",
            "VernacStartTheoremProof",
            "020d54c54dafe7fc3fa240dd00c63466e4eeeb55"
        ],
        [
            "by rewrite -ltr_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lern1 n : n%:R <= 1 :> R = (n <= 1)%N.",
            "VernacStartTheoremProof",
            "928c00d3a253c46bd94ee16f1d1c5d374669abe1"
        ],
        [
            "by rewrite -ler_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrn1 n : n%:R < 1 :> R = (n < 1)%N.",
            "VernacStartTheoremProof",
            "a44303612583b175b96aaa84adc6bd3a4ba28bc3"
        ],
        [
            "by rewrite -ltr_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrN10 : -1 < 0 :> R.",
            "VernacStartTheoremProof",
            "3f3f95fcd80e4eaf92064772d8572dd068c8935b"
        ],
        [
            "by rewrite oppr_lt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerN10 : -1 <= 0 :> R.",
            "VernacStartTheoremProof",
            "c3e3ff2dc34beb3cbfd9683ebfc8d2e5838f4ea3"
        ],
        [
            "by rewrite oppr_le0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr10 : 1 < 0 :> R = false.",
            "VernacStartTheoremProof",
            "895f6290ea2dd7d78e3a74d2fb131537ee4b51ec"
        ],
        [
            "by rewrite ler_gtF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler10 : 1 <= 0 :> R = false.",
            "VernacStartTheoremProof",
            "6ba5349905677ce4924917e96bc2b7d5c5303047"
        ],
        [
            "by rewrite ltr_geF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr0N1 : 0 < -1 :> R = false.",
            "VernacStartTheoremProof",
            "cfe5947cff1e8cde0102a3bb86f126744e3b1b6e"
        ],
        [
            "by rewrite ler_gtF // lerN10.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler0N1 : 0 <= -1 :> R = false.",
            "VernacStartTheoremProof",
            "bb27892d54a537be15f2e166280aeac197471faf"
        ],
        [
            "by rewrite ltr_geF // ltrN10.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrn_rgt0 x n : 0 < x -> 0 < x *+ n = (0 < n)%N.",
            "VernacStartTheoremProof",
            "779a3647bf1f634d05b17b2f91bc4102c27bd243"
        ],
        [
            "by move=> x_gt0; rewrite -(mulr0n x) ltr_pmuln2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrn_rlt0 x n : 0 < x -> x *+ n < 0 = false.",
            "VernacStartTheoremProof",
            "02f155063181e02ad2689895ca50f60e28ad94ee"
        ],
        [
            "by move=> x_gt0; rewrite -(mulr0n x) ltr_pmuln2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrn_rge0 x n : 0 < x -> 0 <= x *+ n.",
            "VernacStartTheoremProof",
            "e0ea32ebc8aae385526c6ca595c2f8820ddedba9"
        ],
        [
            "by move=> x_gt0; rewrite -(mulr0n x) ler_pmuln2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulrn_rle0 x n : 0 < x -> x *+ n <= 0 = (n == 0)%N.",
            "VernacStartTheoremProof",
            "6b4843d4f0fad6e909978847bdd17d591d383ca4"
        ],
        [
            "by move=> x_gt0; rewrite -(mulr0n x) ler_pmuln2l ?leqn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrn_rgt0 x n : x < 0 -> 0 < x *+ n = false.",
            "VernacStartTheoremProof",
            "989ffd22c4e01dfa67ac1f87d0c6ac799ac034bb"
        ],
        [
            "by move=> x_lt0; rewrite -(mulr0n x) ltr_nmuln2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrn_rge0 x n : x < 0 -> 0 <= x *+ n = (n == 0)%N.",
            "VernacStartTheoremProof",
            "17b90172e396056c27699e764c4ee3a1127d1bbd"
        ],
        [
            "by move=> x_lt0; rewrite -(mulr0n x) ler_nmuln2l ?leqn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulrn_rle0 x n : x < 0 -> x *+ n <= 0.",
            "VernacStartTheoremProof",
            "89bdbd60cf82d0c04a9e6c8318ba02d84b9d04d9"
        ],
        [
            "by move=> x_lt0; rewrite -(mulr0n x) ler_nmuln2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulr_rlt0 x y : 0 < x -> (x * y < 0) = (y < 0).",
            "VernacStartTheoremProof",
            "46d28ecfd9ba8eac220e34ada4c00679680d87a6"
        ],
        [
            "by move=> x_gt0; rewrite -oppr_gt0 -mulrN pmulr_rgt0 // oppr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulr_rle0 x y : 0 < x -> (x * y <= 0) = (y <= 0).",
            "VernacStartTheoremProof",
            "efd13785c85fa4d04dcc90ec88a2e56f819c3eb7"
        ],
        [
            "by move=> x_gt0; rewrite -oppr_ge0 -mulrN pmulr_rge0 // oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulr_lgt0 x y : 0 < x -> (0 < y * x) = (0 < y).",
            "VernacStartTheoremProof",
            "21c4e9244ee7c3993a2a5007aa0b5188530885e7"
        ],
        [
            "by move=> x_gt0; rewrite mulrC pmulr_rgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulr_lge0 x y : 0 < x -> (0 <= y * x) = (0 <= y).",
            "VernacStartTheoremProof",
            "babae3b442384f55777578269bb63ef13971d337"
        ],
        [
            "by move=> x_gt0; rewrite mulrC pmulr_rge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulr_llt0 x y : 0 < x -> (y * x < 0) = (y < 0).",
            "VernacStartTheoremProof",
            "de74b0753248cf26a7e2e70c916434e5aaa24cee"
        ],
        [
            "by move=> x_gt0; rewrite mulrC pmulr_rlt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmulr_lle0 x y : 0 < x -> (y * x <= 0) = (y <= 0).",
            "VernacStartTheoremProof",
            "17b7ee588612d1756b45f4e5c03abeef42362ccf"
        ],
        [
            "by move=> x_gt0; rewrite mulrC pmulr_rle0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulr_rgt0 x y : x < 0 -> (0 < x * y) = (y < 0).",
            "VernacStartTheoremProof",
            "15814bef00baea586efbd3b30bc1237e1968e311"
        ],
        [
            "by move=> x_lt0; rewrite -mulrNN pmulr_rgt0 lter_oppE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulr_rge0 x y : x < 0 -> (0 <= x * y) = (y <= 0).",
            "VernacStartTheoremProof",
            "bfb135adee829910f15c315e21c69f38d79e025a"
        ],
        [
            "by move=> x_lt0; rewrite -mulrNN pmulr_rge0 lter_oppE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulr_rlt0 x y : x < 0 -> (x * y < 0) = (0 < y).",
            "VernacStartTheoremProof",
            "07f13be703353debcbe09432da18a6d2a86eb85b"
        ],
        [
            "by move=> x_lt0; rewrite -mulrNN pmulr_rlt0 lter_oppE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulr_rle0 x y : x < 0 -> (x * y <= 0) = (0 <= y).",
            "VernacStartTheoremProof",
            "31223d6752d5f4e01c84d074bdfb907000ca4bad"
        ],
        [
            "by move=> x_lt0; rewrite -mulrNN pmulr_rle0 lter_oppE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulr_lgt0 x y : x < 0 -> (0 < y * x) = (y < 0).",
            "VernacStartTheoremProof",
            "fd33aed14640d12000180bd412cf7b82e9d6d876"
        ],
        [
            "by move=> x_lt0; rewrite mulrC nmulr_rgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulr_lge0 x y : x < 0 -> (0 <= y * x) = (y <= 0).",
            "VernacStartTheoremProof",
            "b51cdc5b75802721891e00575beefb438330e4af"
        ],
        [
            "by move=> x_lt0; rewrite mulrC nmulr_rge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulr_llt0 x y : x < 0 -> (y * x < 0) = (0 < y).",
            "VernacStartTheoremProof",
            "dc0374989542b49daa1cac9097598bbf65c8a02f"
        ],
        [
            "by move=> x_lt0; rewrite mulrC nmulr_rlt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmulr_lle0 x y : x < 0 -> (y * x <= 0) = (0 <= y).",
            "VernacStartTheoremProof",
            "4bb1777a6c71d07163c396c426309d7d2a13b3d0"
        ],
        [
            "by move=> x_lt0; rewrite mulrC nmulr_rle0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_ge0 x y : 0 <= x -> 0 <= y -> 0 <= x * y.",
            "VernacStartTheoremProof",
            "e0fb2859973659785b9f8ef2acbf29c437b824a5"
        ],
        [
            "by move=> x_ge0 y_ge0; rewrite -(mulr0 x) ler_wpmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_le0 x y : x <= 0 -> y <= 0 -> 0 <= x * y.",
            "VernacStartTheoremProof",
            "a27de6eb55d113c224e2d88a7072a929d480c4e8"
        ],
        [
            "by move=> x_le0 y_le0; rewrite -(mulr0 x) ler_wnmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_ge0_le0 x y : 0 <= x -> y <= 0 -> x * y <= 0.",
            "VernacStartTheoremProof",
            "a2187c598fdd42334ef3594c767479e011b57dc7"
        ],
        [
            "by move=> x_le0 y_le0; rewrite -(mulr0 x) ler_wpmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_le0_ge0 x y : x <= 0 -> 0 <= y -> x * y <= 0.",
            "VernacStartTheoremProof",
            "184f0c6c407d42c9601afd3ea527463bc793d918"
        ],
        [
            "by move=> x_le0 y_le0; rewrite -(mulr0 x) ler_wnmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_gt0 x y : 0 < x -> 0 < y -> 0 < x * y.",
            "VernacStartTheoremProof",
            "d2c98141606345fa34a4c983ad1f69cc6cc55057"
        ],
        [
            "by move=> x_gt0 y_gt0; rewrite pmulr_rgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodr_ge0 I r (P : pred I) (E : I -> R) : (forall i, P i -> 0 <= E i) -> 0 <= \\prod_(i <- r | P i) E i.",
            "VernacStartTheoremProof",
            "043b926a5960edbcdd5d57a5021df25a14857f51"
        ],
        [
            "by move=> Ege0; rewrite -nnegrE rpred_prod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodr_gt0 I r (P : pred I) (E : I -> R) : (forall i, P i -> 0 < E i) -> 0 < \\prod_(i <- r | P i) E i.",
            "VernacStartTheoremProof",
            "3cf09b1c2680a586ce4c10bc9b0d48552ab3d6bb"
        ],
        [
            "by move=> Ege0; rewrite -posrE rpred_prod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_prod I r (P : pred I) (E1 E2 : I -> R) : (forall i, P i -> 0 <= E1 i <= E2 i) -> \\prod_(i <- r | P i) E1 i <= \\prod_(i <- r | P i) E2 i.",
            "VernacStartTheoremProof",
            "96a99aa813e196cc03c15d4545a9b2a15ffd1016"
        ],
        [
            "move=> leE12; elim/(big_load (fun x => 0 <= x)): _.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "elim/big_rec2: _ => // i x2 x1 /leE12/andP[le0Ei leEi12] [x1ge0 le_x12].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite mulr_ge0 // ler_pmul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_prod I r (P : pred I) (E1 E2 : I -> R) : has P r -> (forall i, P i -> 0 <= E1 i < E2 i) -> \\prod_(i <- r | P i) E1 i < \\prod_(i <- r | P i) E2 i.",
            "VernacStartTheoremProof",
            "c608350724a85ef5024ccbb9fcba545dfbbde689"
        ],
        [
            "elim: r => //= i r IHr; rewrite !big_cons; case: ifP => {IHr}// Pi _ ltE12.",
            "VernacExtend",
            "08a4d6e5d304eae21a3f58660575c965aadf9d5c"
        ],
        [
            "have /andP[le0E1i ltE12i] := ltE12 i Pi; set E2r := \\prod_(j <- r | P j) E2 j.",
            "VernacExtend",
            "81881a093b2294c76be3b432fbe83612064d7bc9"
        ],
        [
            "apply: ler_lt_trans (_ : E1 i * E2r < E2 i * E2r).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite ler_wpmul2l ?ler_prod // => j /ltE12/andP[-> /ltrW].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltr_pmul2r ?prodr_gt0 // => j /ltE12/andP[le0E1j /ler_lt_trans->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_prod_nat (E1 E2 : nat -> R) (n m : nat) : (m < n)%N -> (forall i, (m <= i < n)%N -> 0 <= E1 i < E2 i) -> \\prod_(m <= i < n) E1 i < \\prod_(m <= i < n) E2 i.",
            "VernacStartTheoremProof",
            "9cc90bb6ea22d65e4e84e4adf5c631009771551f"
        ],
        [
            "move=> lt_mn ltE12; rewrite !big_nat ltr_prod {ltE12}//.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply/hasP; exists m; rewrite ?mem_index_iota leqnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realMr x y : x != 0 -> x \\is real -> (x * y \\is real) = (y \\is real).",
            "VernacStartTheoremProof",
            "9806cd973e9dbda394b64d3d1574ef90f31069e8"
        ],
        [
            "move=> x_neq0 xR; case: real_ltrgtP x_neq0 => // hx _; rewrite !realE.",
            "VernacExtend",
            "9c3f4e82a1696e467f5acd1f5c747a8b7b11bee4"
        ],
        [
            "by rewrite nmulr_rge0 // nmulr_rle0 // orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite pmulr_rge0 // pmulr_rle0 // orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realrM x y : y != 0 -> y \\is real -> (x * y \\is real) = (x \\is real).",
            "VernacStartTheoremProof",
            "0420806af1deb68fb14c0ba2d3d52c5040a43d49"
        ],
        [
            "by move=> y_neq0 yR; rewrite mulrC realMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realM : {in real &, forall x y, x * y \\is real}.",
            "VernacStartTheoremProof",
            "c0e1a728494a3def3c6be6704b6b9fef6c3201cb"
        ],
        [
            "exact: rpredM.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realrMn x n : (n != 0)%N -> (x *+ n \\is real) = (x \\is real).",
            "VernacStartTheoremProof",
            "59d7cc00db6437253d056bc6f87d20f53357fdd7"
        ],
        [
            "by move=> n_neq0; rewrite -mulr_natl realMr ?realn ?pnatr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_pmull x y : 0 < y -> (x * y <= y) = (x <= 1).",
            "VernacStartTheoremProof",
            "32e5cca78f512a0517466a34e3fdcbea2028d175"
        ],
        [
            "by move=> hy; rewrite -{2}[y]mul1r ler_pmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr_pmull x y : 0 < y -> (x * y < y) = (x < 1).",
            "VernacStartTheoremProof",
            "9b0fffa54290ed9f56ee8c1edd109e580ffb4e8d"
        ],
        [
            "by move=> hy; rewrite -{2}[y]mul1r ltr_pmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_pmulr x y : 0 < y -> (y * x <= y) = (x <= 1).",
            "VernacStartTheoremProof",
            "c1848fd06de45d723eb97f2a6f639aedea851c83"
        ],
        [
            "by move=> hy; rewrite -{2}[y]mulr1 ler_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr_pmulr x y : 0 < y -> (y * x < y) = (x < 1).",
            "VernacStartTheoremProof",
            "74ad868b32dd4c6ebd2feedc122759a19bceae43"
        ],
        [
            "by move=> hy; rewrite -{2}[y]mulr1 ltr_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pmull x y : 0 < y -> (y <= x * y) = (1 <= x).",
            "VernacStartTheoremProof",
            "6c6d48db12fa181e3eada8ab2b919a588a62c3f6"
        ],
        [
            "by move=> hy; rewrite -{1}[y]mul1r ler_pmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pmull x y : 0 < y -> (y < x * y) = (1 < x).",
            "VernacStartTheoremProof",
            "a34c3f6904c45d88ec7388be1a88ea7cbdc3f91a"
        ],
        [
            "by move=> hy; rewrite -{1}[y]mul1r ltr_pmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pmulr x y : 0 < y -> (y <= y * x) = (1 <= x).",
            "VernacStartTheoremProof",
            "d6c68e96a75b54f77b1d8f96f44d29721b8dbb31"
        ],
        [
            "by move=> hy; rewrite -{1}[y]mulr1 ler_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pmulr x y : 0 < y -> (y < y * x) = (1 < x).",
            "VernacStartTheoremProof",
            "3a8d6e8e5a15e82dfa8fb7f53c2cf5679c232365"
        ],
        [
            "by move=> hy; rewrite -{1}[y]mulr1 ltr_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_nmull x y : y < 0 -> (x * y <= y) = (1 <= x).",
            "VernacStartTheoremProof",
            "99a7967baadaa9d5d55ab892d451e93462dbd859"
        ],
        [
            "by move=> hy; rewrite -{2}[y]mul1r ler_nmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr_nmull x y : y < 0 -> (x * y < y) = (1 < x).",
            "VernacStartTheoremProof",
            "a3f5e27f0ebc080945de85b54e8d39a69386be00"
        ],
        [
            "by move=> hy; rewrite -{2}[y]mul1r ltr_nmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_nmulr x y : y < 0 -> (y * x <= y) = (1 <= x).",
            "VernacStartTheoremProof",
            "0ec23b9a8a2e907badf8a40eef1c289ccefdcb10"
        ],
        [
            "by move=> hy; rewrite -{2}[y]mulr1 ler_nmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr_nmulr x y : y < 0 -> (y * x < y) = (1 < x).",
            "VernacStartTheoremProof",
            "828a3e09be470da2a4588ba6e25cde1d6865de97"
        ],
        [
            "by move=> hy; rewrite -{2}[y]mulr1 ltr_nmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nmull x y : y < 0 -> (y <= x * y) = (x <= 1).",
            "VernacStartTheoremProof",
            "add1f7f44830dce392c0709ad47160a47c9d0762"
        ],
        [
            "by move=> hy; rewrite -{1}[y]mul1r ler_nmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nmull x y : y < 0 -> (y < x * y) = (x < 1).",
            "VernacStartTheoremProof",
            "4198fa76a43909089a2967d509a811c527175547"
        ],
        [
            "by move=> hy; rewrite -{1}[y]mul1r ltr_nmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nmulr x y : y < 0 -> (y <= y * x) = (x <= 1).",
            "VernacStartTheoremProof",
            "3d175f80af73045062db117d22e6f3105daa7345"
        ],
        [
            "by move=> hy; rewrite -{1}[y]mulr1 ler_nmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nmulr x y : y < 0 -> (y < y * x) = (x < 1).",
            "VernacStartTheoremProof",
            "9c3641071f13f8c52b78230a05378dd67bab4e9e"
        ],
        [
            "by move=> hy; rewrite -{1}[y]mulr1 ltr_nmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pemull x y : 0 <= y -> 1 <= x -> y <= x * y.",
            "VernacStartTheoremProof",
            "3a15d276732472b2afa60c9d3f261734042a7ef0"
        ],
        [
            "by move=> hy hx; rewrite -{1}[y]mul1r ler_wpmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nemull x y : y <= 0 -> 1 <= x -> x * y <= y.",
            "VernacStartTheoremProof",
            "fd9c578f1a391c4451a9d76e3bafb7fc9396dcd4"
        ],
        [
            "by move=> hy hx; rewrite -{2}[y]mul1r ler_wnmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pemulr x y : 0 <= y -> 1 <= x -> y <= y * x.",
            "VernacStartTheoremProof",
            "1f66a27baf660c87f5e0a3c166cae2b5faf575f7"
        ],
        [
            "by move=> hy hx; rewrite -{1}[y]mulr1 ler_wpmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nemulr x y : y <= 0 -> 1 <= x -> y * x <= y.",
            "VernacStartTheoremProof",
            "1838348ec73b6925dd155049bc7d2fcb478f8b4c"
        ],
        [
            "by move=> hy hx; rewrite -{2}[y]mulr1 ler_wnmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pimull x y : 0 <= y -> x <= 1 -> x * y <= y.",
            "VernacStartTheoremProof",
            "e4e13845fc5f5ee82a6c2d1d1f43dd0e1d694dc2"
        ],
        [
            "by move=> hy hx; rewrite -{2}[y]mul1r ler_wpmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nimull x y : y <= 0 -> x <= 1 -> y <= x * y.",
            "VernacStartTheoremProof",
            "5717642194465e94a306a2a2d94563c9c8dcb080"
        ],
        [
            "by move=> hy hx; rewrite -{1}[y]mul1r ler_wnmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pimulr x y : 0 <= y -> x <= 1 -> y * x <= y.",
            "VernacStartTheoremProof",
            "79ff8e4853f270fa44b43ef04bf21bd5ec01caf9"
        ],
        [
            "by move=> hy hx; rewrite -{2}[y]mulr1 ler_wpmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nimulr x y : y <= 0 -> x <= 1 -> y <= y * x.",
            "VernacStartTheoremProof",
            "409bf65f03659d2f7241b73f02fe515c143683bb"
        ],
        [
            "by move=> hx hy; rewrite -{1}[y]mulr1 ler_wnmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_ile1 x y : 0 <= x -> 0 <= y -> x <= 1 -> y <= 1 -> x * y <= 1.",
            "VernacStartTheoremProof",
            "ca21e65029e3c6d9aeca7d9082c226a3434fa6a7"
        ],
        [
            "by move=> *; rewrite (@ler_trans _ y) ?ler_pimull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_ilt1 x y : 0 <= x -> 0 <= y -> x < 1 -> y < 1 -> x * y < 1.",
            "VernacStartTheoremProof",
            "99971c4675b7a82035290e3995327a783186014a"
        ],
        [
            "by move=> *; rewrite (@ler_lt_trans _ y) ?ler_pimull // ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mulr_ilte1 := (mulr_ile1, mulr_ilt1).",
            "VernacDefinition",
            "2fbae0e9f3237eefded1f8b04874dc5318ca252d"
        ],
        [
            "Lemma mulr_ege1 x y : 1 <= x -> 1 <= y -> 1 <= x * y.",
            "VernacStartTheoremProof",
            "a8731f7d9359bc8f0458764d389cb47f39772b6b"
        ],
        [
            "by move=> le1x le1y; rewrite (@ler_trans _ y) ?ler_pemull // (ler_trans ler01).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_egt1 x y : 1 < x -> 1 < y -> 1 < x * y.",
            "VernacStartTheoremProof",
            "d76bcf17df2a4a4fb96580145841ff5d4c9b31d8"
        ],
        [
            "by move=> le1x lt1y; rewrite (@ltr_trans _ y) // ltr_pmull // (ltr_trans ltr01).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mulr_egte1 := (mulr_ege1, mulr_egt1).",
            "VernacDefinition",
            "ded8ce2141306b3a3af0fbb921008ad3bfab00d7"
        ],
        [
            "Definition mulr_cp1 := (mulr_ilte1, mulr_egte1).",
            "VernacDefinition",
            "a8560696164223ee47ae5b050c787a64ad7b2d5f"
        ],
        [
            "Lemma invr_gt0 x : (0 < x^-1) = (0 < x).",
            "VernacStartTheoremProof",
            "553a485b876e4195435fe06f4e151a55ec7ba2f8"
        ],
        [
            "have [ux | nux] := boolP (x \\is a GRing.unit); last by rewrite invr_out.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/idP/idP=> /ltr_pmul2r<-; rewrite mul0r (mulrV, mulVr) ?ltr01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invr_ge0 x : (0 <= x^-1) = (0 <= x).",
            "VernacStartTheoremProof",
            "509f590eedac5813442e29d6b0ffee87e13231ea"
        ],
        [
            "by rewrite !le0r invr_gt0 invr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invr_lt0 x : (x^-1 < 0) = (x < 0).",
            "VernacStartTheoremProof",
            "d2a850ecac685c893f15eadd8453f0d57c79088c"
        ],
        [
            "by rewrite -oppr_cp0 -invrN invr_gt0 oppr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invr_le0 x : (x^-1 <= 0) = (x <= 0).",
            "VernacStartTheoremProof",
            "12c39108a14c7c8993a5a97db50e17973a2a39b2"
        ],
        [
            "by rewrite -oppr_cp0 -invrN invr_ge0 oppr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition invr_gte0 := (invr_ge0, invr_gt0).",
            "VernacDefinition",
            "65ff0d8160422add64eb211fecb47dc80fa3009d"
        ],
        [
            "Definition invr_lte0 := (invr_le0, invr_lt0).",
            "VernacDefinition",
            "cc8fccbbf9367f2250002af50cf864293e872b17"
        ],
        [
            "Lemma divr_ge0 x y : 0 <= x -> 0 <= y -> 0 <= x / y.",
            "VernacStartTheoremProof",
            "65a9068a3648fbd72f3da2c730038cffcb91a971"
        ],
        [
            "by move=> x_ge0 y_ge0; rewrite mulr_ge0 ?invr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divr_gt0 x y : 0 < x -> 0 < y -> 0 < x / y.",
            "VernacStartTheoremProof",
            "6eed3de3f4d5fb0f80a3fb2bb3daad2e0f7572b2"
        ],
        [
            "by move=> x_gt0 y_gt0; rewrite pmulr_rgt0 ?invr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realV : {mono (@GRing.inv R) : x / x \\is real}.",
            "VernacStartTheoremProof",
            "632f12668f94281b4401ddcfc8a0975ca7a33013"
        ],
        [
            "exact: rpredV.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_ge0 n x : 0 <= x -> 0 <= x ^+ n.",
            "VernacStartTheoremProof",
            "84eb3c48e45f912a273d5d2fa9d6267747c6f2d8"
        ],
        [
            "by move=> xge0; rewrite -nnegrE rpredX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realX n : {in real, forall x, x ^+ n \\is real}.",
            "VernacStartTheoremProof",
            "17354be6ad20ad262f7c617d10f168c7c7ff037c"
        ],
        [
            "exact: rpredX.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_gt0 n x : 0 < x -> 0 < x ^+ n.",
            "VernacStartTheoremProof",
            "3b28396af1b9565763bd83775f0d709f7d996928"
        ],
        [
            "by rewrite !lt0r expf_eq0 => /andP[/negPf-> /exprn_ge0->]; rewrite andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition exprn_gte0 := (exprn_ge0, exprn_gt0).",
            "VernacDefinition",
            "8c14c88460970127eb567954fcb052ddc1a56d9a"
        ],
        [
            "Lemma exprn_ile1 n x : 0 <= x -> x <= 1 -> x ^+ n <= 1.",
            "VernacStartTheoremProof",
            "00c06f3c570d02ec3d43a88e34abbeb145cba378"
        ],
        [
            "move=> xge0 xle1; elim: n=> [|*]; rewrite ?expr0 // exprS.",
            "VernacExtend",
            "cbbd752ffe762291637c91622d62599b0c60d123"
        ],
        [
            "by rewrite mulr_ile1 ?exprn_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_ilt1 n x : 0 <= x -> x < 1 -> x ^+ n < 1 = (n != 0%N).",
            "VernacStartTheoremProof",
            "23900a8713caaf3f9062bd4f8cff436fcf345666"
        ],
        [
            "move=> xge0 xlt1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: n; [by rewrite eqxx ltrr | elim=> [|n ihn]; first by rewrite expr1].",
            "VernacExtend",
            "a7b6ee2f76374c98381142f15a8f09c3ce180c8a"
        ],
        [
            "by rewrite exprS mulr_ilt1 // exprn_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition exprn_ilte1 := (exprn_ile1, exprn_ilt1).",
            "VernacDefinition",
            "e3dba18df6478134cfb262bf1b30ab8968f73f5e"
        ],
        [
            "Lemma exprn_ege1 n x : 1 <= x -> 1 <= x ^+ n.",
            "VernacStartTheoremProof",
            "0362c19e8f6f0892fccd0109a4b4d5f3a19bc63c"
        ],
        [
            "by move=> x_ge1; elim: n=> [|n ihn]; rewrite ?expr0 // exprS mulr_ege1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_egt1 n x : 1 < x -> 1 < x ^+ n = (n != 0%N).",
            "VernacStartTheoremProof",
            "a648824986b9891524034c127c1dec32ee446975"
        ],
        [
            "move=> xgt1; case: n; first by rewrite eqxx ltrr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "elim=> [|n ihn]; first by rewrite expr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS mulr_egt1 // exprn_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition exprn_egte1 := (exprn_ege1, exprn_egt1).",
            "VernacDefinition",
            "82aac22b8dbf1a56ad9df22e4cf0f4efdb8d7182"
        ],
        [
            "Definition exprn_cp1 := (exprn_ilte1, exprn_egte1).",
            "VernacDefinition",
            "6f3fa132ad1a1e01a0fd147d1bd5cc5a291a01f5"
        ],
        [
            "Lemma ler_iexpr x n : (0 < n)%N -> 0 <= x -> x <= 1 -> x ^+ n <= x.",
            "VernacStartTheoremProof",
            "03b2e9950c97283d156e8ca749b0ae69bf0174fb"
        ],
        [
            "by case: n => n // *; rewrite exprS ler_pimulr // exprn_ile1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_iexpr x n : 0 < x -> x < 1 -> (x ^+ n < x) = (1 < n)%N.",
            "VernacStartTheoremProof",
            "0d248361cca758cdbdf9a6d8402a5c60af12f2b1"
        ],
        [
            "case: n=> [|[|n]] //; first by rewrite expr0 => _ /ltr_gtF ->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> x0 x1; rewrite exprS gtr_pmulr // ?exprn_ilt1 // ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_iexpr := (ler_iexpr, ltr_iexpr).",
            "VernacDefinition",
            "52124ebd89b8f58c06c8f119d0146dbfa3f3eff5"
        ],
        [
            "Lemma ler_eexpr x n : (0 < n)%N -> 1 <= x -> x <= x ^+ n.",
            "VernacStartTheoremProof",
            "d8b563f7df36d2e61dcb053b2f301978302dd3d6"
        ],
        [
            "case: n => // n _ x_ge1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite exprS ler_pemulr ?(ler_trans _ x_ge1) // exprn_ege1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_eexpr x n : 1 < x -> (x < x ^+ n) = (1 < n)%N.",
            "VernacStartTheoremProof",
            "27f0639ec3b960bf7921e1ef695fb3cbfd44dcb7"
        ],
        [
            "move=> x_ge1; case: n=> [|[|n]] //; first by rewrite expr0 ltr_gtF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS ltr_pmulr ?(ltr_trans _ x_ge1) ?exprn_egt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_eexpr := (ler_eexpr, ltr_eexpr).",
            "VernacDefinition",
            "2cccbed340dd452379bcef524b2b3d42ea9c486b"
        ],
        [
            "Definition lter_expr := (lter_iexpr, lter_eexpr).",
            "VernacDefinition",
            "3b5359df1a6455e646011b3050e70c8ec4ac4e33"
        ],
        [
            "Lemma ler_wiexpn2l x : 0 <= x -> x <= 1 -> {homo (GRing.exp x) : m n / (n <= m)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "9c29f793289539204af1bb148c07a1c14b96f007"
        ],
        [
            "move=> xge0 xle1 m n /= hmn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -(subnK hmn) exprD ler_pimull ?(exprn_ge0, exprn_ile1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_weexpn2l x : 1 <= x -> {homo (GRing.exp x) : m n / (m <= n)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "5214df0d46bff570a867a07070d5c0b90350a2bb"
        ],
        [
            "move=> xge1 m n /= hmn; rewrite -(subnK hmn) exprD.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite ler_pemull ?(exprn_ge0, exprn_ege1) // (ler_trans _ xge1) ?ler01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ieexprn_weq1 x n : 0 <= x -> (x ^+ n == 1) = ((n == 0%N) || (x == 1)).",
            "VernacStartTheoremProof",
            "1e372faca37013ec282972cba9c9514e6cfe17a0"
        ],
        [
            "move=> xle0; case: n => [|n]; first by rewrite expr0 eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (@real_ltrgtP x 1); do ?by rewrite ?ger0_real.",
            "VernacExtend",
            "09d2a9a8185b9355b5ea9923b8ee73e4bb71f9bf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by move=> x_lt1; rewrite ?ltr_eqF // exprn_ilt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by move=> x_lt1; rewrite ?gtr_eqF // exprn_egt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move->; rewrite expr1n eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ieexprIn x : 0 < x -> x != 1 -> injective (GRing.exp x).",
            "VernacStartTheoremProof",
            "f950b9b296fc02999f1c989756d5d054fb23f955"
        ],
        [
            "move=> x_gt0 x_neq1 m n; without loss /subnK <-: m n / (n <= m)%N.",
            "VernacExtend",
            "d999ee33e7c6564a01a7bb2262aa207bb3b6058f"
        ],
        [
            "by move=> IH eq_xmn; case/orP: (leq_total m n) => /IH->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: {m}(m - n)%N => // m /eqP/idPn[]; rewrite -[x ^+ n]mul1r exprD.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite (inj_eq (mulIf _)) ?ieexprn_weq1 ?ltrW // expf_neq0 ?gtr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_iexpn2l x : 0 < x -> x < 1 -> {mono (GRing.exp x) : m n / (n <= m)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "3b95865476d7bd8a71e47c98d6bca95f7b3b59b9"
        ],
        [
            "move=> xgt0 xlt1; apply: (lenr_nmono (inj_nhomo_ltnr _ _)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: ler_wiexpn2l; rewrite ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: ieexprIn; rewrite ?ltr_eqF ?ltr_cpable.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_iexpn2l x : 0 < x -> x < 1 -> {mono (GRing.exp x) : m n / (n < m)%N >-> m < n}.",
            "VernacStartTheoremProof",
            "9edaaca03295bdf92714ee213cfd1ffc1c01dfd8"
        ],
        [
            "by move=> xgt0 xlt1; apply: (lenrW_nmono (ler_iexpn2l _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_iexpn2l := (ler_iexpn2l, ltr_iexpn2l).",
            "VernacDefinition",
            "6407093e1f99d8712c025d433bdc58326a3c8b61"
        ],
        [
            "Lemma ler_eexpn2l x : 1 < x -> {mono (GRing.exp x) : m n / (m <= n)%N >-> m <= n}.",
            "VernacStartTheoremProof",
            "ed3574c5f98545c8108b19d3d6308951a15f7c5a"
        ],
        [
            "move=> xgt1; apply: (lenr_mono (inj_homo_ltnr _ _)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: ler_weexpn2l; rewrite ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: ieexprIn; rewrite ?gtr_eqF ?gtr_cpable //; apply: ltr_trans xgt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_eexpn2l x : 1 < x -> {mono (GRing.exp x) : m n / (m < n)%N >-> m < n}.",
            "VernacStartTheoremProof",
            "be5b3f21e3adeb5b850bdc9d89894110fed5685e"
        ],
        [
            "by move=> xgt1; apply: (lenrW_mono (ler_eexpn2l _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_eexpn2l := (ler_eexpn2l, ltr_eexpn2l).",
            "VernacDefinition",
            "a4eea85650a1a3a4ea465612b1929715a647d411"
        ],
        [
            "Lemma ltr_expn2r n x y : 0 <= x -> x < y -> x ^+ n < y ^+ n = (n != 0%N).",
            "VernacStartTheoremProof",
            "b6baacd1e305a3d4696204889f77810e9ff9f466"
        ],
        [
            "move=> xge0 xlty; case: n; first by rewrite ltrr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "elim=> [|n IHn]; rewrite ?[_ ^+ _.+2]exprS //.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "rewrite (@ler_lt_trans _ (x * y ^+ n.+1)) ?ler_wpmul2l ?ltr_pmul2r ?IHn //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ltrW // ihn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite exprn_gt0 // (ler_lt_trans xge0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_expn2r n : {in nneg & , {homo ((@GRing.exp R)^~ n) : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "c2ad128140ca6f87f3c71d5bf06c62dca1f09293"
        ],
        [
            "move=> x y /= x0 y0 xy; elim: n => [|n IHn]; rewrite !(expr0, exprS) //.",
            "VernacExtend",
            "cbbd752ffe762291637c91622d62599b0c60d123"
        ],
        [
            "by rewrite (@ler_trans _ (x * y ^+ n)) ?ler_wpmul2l ?ler_wpmul2r ?exprn_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_expn2r := (ler_expn2r, ltr_expn2r).",
            "VernacDefinition",
            "ee609fb838c71ee278e2cb9e32db4eb7417434cc"
        ],
        [
            "Lemma ltr_wpexpn2r n : (0 < n)%N -> {in nneg & , {homo ((@GRing.exp R)^~ n) : x y / x < y}}.",
            "VernacStartTheoremProof",
            "9a65621a21c27d2e585de4335144a113d35aba8c"
        ],
        [
            "by move=> ngt0 x y /= x0 y0 hxy; rewrite ltr_expn2r // -lt0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pexpn2r n : (0 < n)%N -> {in nneg & , {mono ((@GRing.exp R)^~ n) : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "6bee3535b4cbbc7c1ba77dbb2c06ed1c678aad0a"
        ],
        [
            "case: n => // n _ x y; rewrite !qualifE /= => x_ge0 y_ge0.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have [-> | nzx] := eqVneq x 0; first by rewrite exprS mul0r exprn_ge0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -subr_ge0 subrXX pmulr_lge0 ?subr_ge0 //= big_ord_recr /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite subnn expr0 mul1r /= ltr_spaddr // ?exprn_gt0 ?lt0r ?nzx //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite sumr_ge0 // => i _; rewrite mulr_ge0 ?exprn_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pexpn2r n : (0 < n)%N -> {in nneg & , {mono ((@GRing.exp R)^~ n) : x y / x < y}}.",
            "VernacStartTheoremProof",
            "ef2a60692e417e7f5f1f9054dcc388193f906377"
        ],
        [
            "by move=> n_gt0 x y x_ge0 y_ge0; rewrite !ltr_neqAle !eqr_le !ler_pexpn2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_pexpn2r := (ler_pexpn2r, ltr_pexpn2r).",
            "VernacDefinition",
            "e6a0c1134bbaade909fd0c5edc1cfa10adf81e49"
        ],
        [
            "Lemma pexpIrn n : (0 < n)%N -> {in nneg &, injective ((@GRing.exp R)^~ n)}.",
            "VernacStartTheoremProof",
            "d46f2e81ff8831e96a030452d553e8f21bcd1657"
        ],
        [
            "by move=> n_gt0; apply: incr_inj_in (ler_pexpn2r _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expr_le1 n x : (0 < n)%N -> 0 <= x -> (x ^+ n <= 1) = (x <= 1).",
            "VernacStartTheoremProof",
            "b0302bd08c6885f7820857a5d384b3a9b39f02c0"
        ],
        [
            "by move=> ngt0 xge0; rewrite -{1}[1](expr1n _ n) ler_pexpn2r // [_ \\in _]ler01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expr_lt1 n x : (0 < n)%N -> 0 <= x -> (x ^+ n < 1) = (x < 1).",
            "VernacStartTheoremProof",
            "4acc81303007f6a44a8cb80c3b36ec623a88f129"
        ],
        [
            "by move=> ngt0 xge0; rewrite -{1}[1](expr1n _ n) ltr_pexpn2r // [_ \\in _]ler01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition expr_lte1 := (expr_le1, expr_lt1).",
            "VernacDefinition",
            "a0ded46662efff43fdfe0eda5ff652924ad660d8"
        ],
        [
            "Lemma expr_ge1 n x : (0 < n)%N -> 0 <= x -> (1 <= x ^+ n) = (1 <= x).",
            "VernacStartTheoremProof",
            "2781b440ea7ab5e98dbab452c5db36d4fb2ba987"
        ],
        [
            "by move=> ngt0 xge0; rewrite -{1}[1](expr1n _ n) ler_pexpn2r // [_ \\in _]ler01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expr_gt1 n x : (0 < n)%N -> 0 <= x -> (1 < x ^+ n) = (1 < x).",
            "VernacStartTheoremProof",
            "e7dc45bae4dedeb8bba7d7ccb2a6bdd41487d0c2"
        ],
        [
            "by move=> ngt0 xge0; rewrite -{1}[1](expr1n _ n) ltr_pexpn2r // [_ \\in _]ler01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition expr_gte1 := (expr_ge1, expr_gt1).",
            "VernacDefinition",
            "db0a718cbcd544a00c66de44f15b76fbc197d5aa"
        ],
        [
            "Lemma pexpr_eq1 x n : (0 < n)%N -> 0 <= x -> (x ^+ n == 1) = (x == 1).",
            "VernacStartTheoremProof",
            "77f6220dc4355fcc42acfeb163e62382af95f2af"
        ],
        [
            "by move=> ngt0 xge0; rewrite !eqr_le expr_le1 // expr_ge1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pexprn_eq1 x n : 0 <= x -> (x ^+ n == 1) = (n == 0%N) || (x == 1).",
            "VernacStartTheoremProof",
            "7ec315069ac6966c5edbef15b6a437d187c19b16"
        ],
        [
            "by case: n => [|n] xge0; rewrite ?eqxx // pexpr_eq1 ?gtn_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_expn2 n x y : (0 < n)%N -> 0 <= x -> 0 <= y -> (x ^+ n == y ^+ n) = (x == y).",
            "VernacStartTheoremProof",
            "1e41fc9eab9feb4cb40a1a83305ec36c28b3a713"
        ],
        [
            "by move=> ngt0 xge0 yge0; rewrite (inj_in_eq (pexpIrn _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrp_eq1 x : 0 <= x -> (x ^+ 2 == 1) = (x == 1).",
            "VernacStartTheoremProof",
            "047125a8192895b9fcdcfaa694ca29c00f7a8fdf"
        ],
        [
            "by move/pexpr_eq1->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrn_eq1 x : x <= 0 -> (x ^+ 2 == 1) = (x == -1).",
            "VernacStartTheoremProof",
            "94db90412d1096c6fd13ea3ae397fca208d3e0e8"
        ],
        [
            "by rewrite -sqrrN -oppr_ge0 -eqr_oppLR => /sqrp_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_sqr : {in nneg &, {mono (fun x => x ^+ 2) : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "d341eca294e091cce915b3d27fbf8ccf1ed6f404"
        ],
        [
            "exact: ler_pexpn2r.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_sqr : {in nneg &, {mono (fun x => x ^+ 2) : x y / x < y}}.",
            "VernacStartTheoremProof",
            "583b3ba76190e7ec1551d6be9dc3634b56d943d9"
        ],
        [
            "exact: ltr_pexpn2r.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_pinv : {in [pred x in GRing.unit | 0 < x] &, {mono (@GRing.inv R) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "6a611ff3efd88793616265e92e7f9d306549610f"
        ],
        [
            "move=> x y /andP [ux hx] /andP [uy hy] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(ler_pmul2l hx) -(ler_pmul2r hy).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !(divrr, mulrVK) ?unitf_gt0 // mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_ninv : {in [pred x in GRing.unit | x < 0] &, {mono (@GRing.inv R) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "4def1e6687544958a7251ecf89df3dedb31eea2e"
        ],
        [
            "move=> x y /andP [ux hx] /andP [uy hy] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(ler_nmul2l hx) -(ler_nmul2r hy).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !(divrr, mulrVK) ?unitf_lt0 // mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pinv : {in [pred x in GRing.unit | 0 < x] &, {mono (@GRing.inv R) : x y /~ x < y}}.",
            "VernacStartTheoremProof",
            "2dbdf3369eb3394ac8f3aeb8a599dc6ac392caa2"
        ],
        [
            "exact: lerW_nmono_in ler_pinv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_ninv : {in [pred x in GRing.unit | x < 0] &, {mono (@GRing.inv R) : x y /~ x < y}}.",
            "VernacStartTheoremProof",
            "3c696868850919893c9597f5e5247287c55e9077"
        ],
        [
            "exact: lerW_nmono_in ler_ninv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invr_gt1 x : x \\is a GRing.unit -> 0 < x -> (1 < x^-1) = (x < 1).",
            "VernacStartTheoremProof",
            "6ce82548fe8dcb429171cfc169a1d92e6cedb4e3"
        ],
        [
            "by move=> Ux xgt0; rewrite -{1}[1]invr1 ltr_pinv ?inE ?unitr1 ?ltr01 ?Ux.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invr_ge1 x : x \\is a GRing.unit -> 0 < x -> (1 <= x^-1) = (x <= 1).",
            "VernacStartTheoremProof",
            "cdf23f0a972df750ed8692bd58b0cab7e8acf6c0"
        ],
        [
            "by move=> Ux xgt0; rewrite -{1}[1]invr1 ler_pinv ?inE ?unitr1 ?ltr01 // Ux.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition invr_gte1 := (invr_ge1, invr_gt1).",
            "VernacDefinition",
            "0232a3b12ff13e5d7f8fec6e47f48a4f33086dcd"
        ],
        [
            "Lemma invr_le1 x (ux : x \\is a GRing.unit) (hx : 0 < x) : (x^-1 <= 1) = (1 <= x).",
            "VernacStartTheoremProof",
            "e0772f356d44f41e1570a22d5ac922bc5441c973"
        ],
        [
            "by rewrite -invr_ge1 ?invr_gt0 ?unitrV // invrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invr_lt1 x (ux : x \\is a GRing.unit) (hx : 0 < x) : (x^-1 < 1) = (1 < x).",
            "VernacStartTheoremProof",
            "b0923bede801f4f7fe1c3ffc7417358332b4e79c"
        ],
        [
            "by rewrite -invr_gt1 ?invr_gt0 ?unitrV // invrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition invr_lte1 := (invr_le1, invr_lt1).",
            "VernacDefinition",
            "26f58e09ad0a43cacf066e80644de80290a1a565"
        ],
        [
            "Definition invr_cp1 := (invr_gte1, invr_lte1).",
            "VernacDefinition",
            "f2b044315329381be0faf8206423d368655056c5"
        ],
        [
            "Lemma real_ler_norm x : x \\is real -> x <= `|x|.",
            "VernacStartTheoremProof",
            "2a01e36caa63bf18151cd61626468812064df346"
        ],
        [
            "by case/real_ger0P=> hx //; rewrite (ler_trans (ltrW hx)) // oppr_ge0 ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_real x : `|x| \\is real.",
            "VernacStartTheoremProof",
            "6054291cac403001ce70d758213465af1096f9bf"
        ],
        [
            "by rewrite ger0_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve normr_real : core.",
            "VernacHints",
            "fb45d86961987cdd3e497abfdaf57bace19a4f9d"
        ],
        [
            "Lemma ler_norm_sum I r (G : I -> R) (P : pred I): `|\\sum_(i <- r | P i) G i| <= \\sum_(i <- r | P i) `|G i|.",
            "VernacStartTheoremProof",
            "11fe1c4c01af8749139b343290a8c0d89ba74712"
        ],
        [
            "elim/big_rec2: _ => [|i y x _]; first by rewrite normr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(ler_add2l `|G i|); apply: ler_trans; apply: ler_norm_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_norm_sub x y : `|x - y| <= `|x| + `|y|.",
            "VernacStartTheoremProof",
            "131626d8c7d317ed5b01334b56f0da9acba29f7b"
        ],
        [
            "by rewrite (ler_trans (ler_norm_add _ _)) ?normrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_dist_add z x y : `|x - y| <= `|x - z| + `|z - y|.",
            "VernacStartTheoremProof",
            "622cbb122b1b183a896b40b484aa2bcdb70798cb"
        ],
        [
            "by rewrite (ler_trans _ (ler_norm_add _ _)) // addrA addrNK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_sub_norm_add x y : `|x| - `|y| <= `|x + y|.",
            "VernacStartTheoremProof",
            "dfc235474420b23e64a5a386ede3a13be7f4eb26"
        ],
        [
            "rewrite -{1}[x](addrK y) lter_sub_addl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (ler_trans (ler_norm_add _ _)) // addrC normrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_sub_dist x y : `|x| - `|y| <= `|x - y|.",
            "VernacStartTheoremProof",
            "b526fe90a90d52047bf284ccdefd14237468e47a"
        ],
        [
            "by rewrite -[`|y|]normrN ler_sub_norm_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_dist_dist x y : `|`|x| - `|y| | <= `|x - y|.",
            "VernacStartTheoremProof",
            "609c3cf478b15347074340e84e27763beeaf9a48"
        ],
        [
            "have [||_|_] // := @real_lerP `|x| `|y|; last by rewrite ler_sub_dist.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite distrC ler_sub_dist.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_dist_norm_add x y : `| `|x| - `|y| | <= `| x + y |.",
            "VernacStartTheoremProof",
            "1a454449510b77fc5d6ad46d2a672b677825e577"
        ],
        [
            "by rewrite -[y]opprK normrN ler_dist_dist.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ler_norml x y : x \\is real -> (`|x| <= y) = (- y <= x <= y).",
            "VernacStartTheoremProof",
            "e90ba5ee7e73e01e0b950940dcd65c88934ac60e"
        ],
        [
            "move=> xR; wlog x_ge0 : x xR / 0 <= x => [hwlog|].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move: (xR) => /(@real_leVge 0) /orP [|/hwlog->|hx] //.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -[x]opprK normrN ler_opp2 andbC ler_oppl hwlog ?realN ?oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ger0_norm //; have [le_xy|] := boolP (x <= y); last by rewrite andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (ler_trans _ x_ge0) // oppr_le0 (ler_trans x_ge0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ler_normlP x y : x \\is real -> reflect ((-x <= y) * (x <= y)) (`|x| <= y).",
            "VernacStartTheoremProof",
            "40540d02d7eda20663d8dfdba8ce2c96ab9b49e6"
        ],
        [
            "by move=> Rx; rewrite real_ler_norml // ler_oppl; apply: (iffP andP) => [] [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments real_ler_normlP {x y}.",
            "VernacArguments",
            "6483f8448e0031a04e5df1f69a0abd45ca5345f2"
        ],
        [
            "Lemma real_eqr_norml x y : x \\is real -> (`|x| == y) = ((x == y) || (x == -y)) && (0 <= y).",
            "VernacStartTheoremProof",
            "547e9332bc9a7d032edfbe7530fd116e99928e3b"
        ],
        [
            "move=> Rx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/idP/idP=> [|/andP[/pred2P[]-> /ger0_norm/eqP]]; rewrite ?normrE //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: real_ler0P => // hx; rewrite 1?eqr_oppLR => /eqP exy.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by move: hx; rewrite exy ?oppr_le0 eqxx orbT //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move: hx=> /ltrW; rewrite exy eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_eqr_norm2 x y : x \\is real -> y \\is real -> (`|x| == `|y|) = (x == y) || (x == -y).",
            "VernacStartTheoremProof",
            "63909e8be155970d1a2d30d3d7709558f2e23c36"
        ],
        [
            "move=> Rx Ry; rewrite real_eqr_norml // normrE andbT.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: real_ler0P; rewrite // opprK orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ltr_norml x y : x \\is real -> (`|x| < y) = (- y < x < y).",
            "VernacStartTheoremProof",
            "e01eecb01d729ce4661776acc184e9239fe72942"
        ],
        [
            "move=> Rx; wlog x_ge0 : x Rx / 0 <= x => [hwlog|].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move: (Rx) => /(@real_leVge 0) /orP [|/hwlog->|hx] //.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -[x]opprK normrN ltr_opp2 andbC ltr_oppl hwlog ?realN ?oppr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ger0_norm //; have [le_xy|] := boolP (x < y); last by rewrite andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (ltr_le_trans _ x_ge0) // oppr_lt0 (ler_lt_trans x_ge0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition real_lter_norml := (real_ler_norml, real_ltr_norml).",
            "VernacDefinition",
            "4fa68195a17ae7a48634b7702d1d423edda620d5"
        ],
        [
            "Lemma real_ltr_normlP x y : x \\is real -> reflect ((-x < y) * (x < y)) (`|x| < y).",
            "VernacStartTheoremProof",
            "b6ca6913851a214ece4049be83ea694ac998b7e8"
        ],
        [
            "move=> Rx; rewrite real_ltr_norml // ltr_oppl.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: (iffP (@andP _ _)); case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments real_ltr_normlP {x y}.",
            "VernacArguments",
            "57791e01f61d990b1036ccfd152a75ce5c5b1275"
        ],
        [
            "Lemma real_ler_normr x y : y \\is real -> (x <= `|y|) = (x <= y) || (x <= - y).",
            "VernacStartTheoremProof",
            "b8c8415977d4c9a0f5fd94672de1d24f26383e18"
        ],
        [
            "move=> Ry.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [xR|xNR] := boolP (x \\is real); last by rewrite ?Nreal_leF ?realN.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite real_lerNgt ?real_ltr_norml // negb_and -?real_lerNgt ?realN //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite orbC ler_oppr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ltr_normr x y : y \\is real -> (x < `|y|) = (x < y) || (x < - y).",
            "VernacStartTheoremProof",
            "5fb256eeb44b9d3f985e7b9321f605e25a9a5423"
        ],
        [
            "move=> Ry.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [xR|xNR] := boolP (x \\is real); last by rewrite ?Nreal_ltF ?realN.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite real_ltrNge ?real_ler_norml // negb_and -?real_ltrNge ?realN //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite orbC ltr_oppr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition real_lter_normr := (real_ler_normr, real_ltr_normr).",
            "VernacDefinition",
            "1a5889859202a7a4b50270c448b6d6676e28b8e4"
        ],
        [
            "Lemma ler_nnorml x y : y < 0 -> `|x| <= y = false.",
            "VernacStartTheoremProof",
            "c9f66ec6205e7223310b8bbb9b7ec48ab860a9a0"
        ],
        [
            "by move=> y_lt0; rewrite ltr_geF // (ltr_le_trans y_lt0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_nnorml x y : y <= 0 -> `|x| < y = false.",
            "VernacStartTheoremProof",
            "b93200e83c322bca57a1b93798a3a8a977fde8d8"
        ],
        [
            "by move=> y_le0; rewrite ler_gtF // (ler_trans y_le0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_nnormr := (ler_nnorml, ltr_nnorml).",
            "VernacDefinition",
            "ced95b46681636d13e47f3c47e57933ab212da9f"
        ],
        [
            "Lemma real_ler_distl x y e : x - y \\is real -> (`|x - y| <= e) = (y - e <= x <= y + e).",
            "VernacStartTheoremProof",
            "4bcac3650a067a9c4fe740391b31e232df666cbd"
        ],
        [
            "by move=> Rxy; rewrite real_lter_norml // !lter_sub_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_ltr_distl x y e : x - y \\is real -> (`|x - y| < e) = (y - e < x < y + e).",
            "VernacStartTheoremProof",
            "8947ccc9a5d4662c55c056988c7ee12df361a173"
        ],
        [
            "by move=> Rxy; rewrite real_lter_norml // !lter_sub_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition real_lter_distl := (real_ler_distl, real_ltr_distl).",
            "VernacDefinition",
            "ed7287fcc939b1a71a5661e85e58633e704b1f8b"
        ],
        [
            "Lemma eqr_norm_id x : (`|x| == x) = (0 <= x).",
            "VernacStartTheoremProof",
            "6797c11b0ed90d7c337001c1103619bb4225ed96"
        ],
        [
            "by rewrite ger0_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_normN x : (`|x| == - x) = (x <= 0).",
            "VernacStartTheoremProof",
            "f17fa97e7c9d3da32b5139859bfbf9d3b4115cbb"
        ],
        [
            "by rewrite ler0_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eqr_norm_idVN := =^~ (ger0_def, ler0_def).",
            "VernacDefinition",
            "7adf5a006e29f4f24bd17bdbc3298d7b0c46c250"
        ],
        [
            "Lemma real_exprn_even_ge0 n x : x \\is real -> ~~ odd n -> 0 <= x ^+ n.",
            "VernacStartTheoremProof",
            "db569232809b34b4e697e0ec4c1aa6d21740312e"
        ],
        [
            "move=> xR even_n; have [/exprn_ge0 -> //|x_lt0] := real_ger0P xR.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite -[x]opprK -mulN1r exprMn -signr_odd (negPf even_n) expr0 mul1r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite exprn_ge0 ?oppr_ge0 ?ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_exprn_even_gt0 n x : x \\is real -> ~~ odd n -> (0 < x ^+ n) = (n == 0)%N || (x != 0).",
            "VernacStartTheoremProof",
            "3ae33d0667ef541f38dcf153b83f6015c82ee753"
        ],
        [
            "move=> xR n_even; rewrite lt0r real_exprn_even_ge0 ?expf_eq0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite andbT negb_and lt0n negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_exprn_even_le0 n x : x \\is real -> ~~ odd n -> (x ^+ n <= 0) = (n != 0%N) && (x == 0).",
            "VernacStartTheoremProof",
            "3c7bccda33b0e22bc1d90cdcf0fdb909d13e174e"
        ],
        [
            "move=> xR n_even; rewrite !real_lerNgt ?rpred0 ?rpredX //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite real_exprn_even_gt0 // negb_or negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_exprn_even_lt0 n x : x \\is real -> ~~ odd n -> (x ^+ n < 0) = false.",
            "VernacStartTheoremProof",
            "68a0d9696351cd3a752ae8b16f658e3408a8196f"
        ],
        [
            "by move=> xR n_even; rewrite ler_gtF // real_exprn_even_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_exprn_odd_ge0 n x : x \\is real -> odd n -> (0 <= x ^+ n) = (0 <= x).",
            "VernacStartTheoremProof",
            "aedfe86f565c66cb495f4b8ee3d632ee680c5d53"
        ],
        [
            "case/real_ger0P => [x_ge0|x_lt0] n_odd; first by rewrite exprn_ge0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: negbTE; rewrite ltr_geF //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: n n_odd => // n /= n_even; rewrite exprS pmulr_llt0 //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite real_exprn_even_gt0 ?ler0_real ?ltrW // ltr_eqF ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_exprn_odd_gt0 n x : x \\is real -> odd n -> (0 < x ^+ n) = (0 < x).",
            "VernacStartTheoremProof",
            "cc6eebd322c70b9706ef46e41a3c37a9ba7dd164"
        ],
        [
            "by move=> xR n_odd; rewrite !lt0r expf_eq0 real_exprn_odd_ge0; case: n n_odd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_exprn_odd_le0 n x : x \\is real -> odd n -> (x ^+ n <= 0) = (x <= 0).",
            "VernacStartTheoremProof",
            "decc81deea926f61f8ac5e745680cd9d9f9d4c6f"
        ],
        [
            "by move=> xR n_odd; rewrite !real_lerNgt ?rpred0 ?rpredX // real_exprn_odd_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_exprn_odd_lt0 n x : x \\is real -> odd n -> (x ^+ n < 0) = (x < 0).",
            "VernacStartTheoremProof",
            "ab5ce03bc0bf3575602b4da4e1d7d13b92bd48b8"
        ],
        [
            "by move=> xR n_odd; rewrite !real_ltrNge ?rpred0 ?rpredX // real_exprn_odd_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realEsqr x : (x \\is real) = (0 <= x ^+ 2).",
            "VernacStartTheoremProof",
            "9ea8169813ccb34f259d1204af971323709a6db8"
        ],
        [
            "by rewrite ger0_def normrX eqf_sqr -ger0_def -ler0_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_normK x : x \\is real -> `|x| ^+ 2 = x ^+ 2.",
            "VernacStartTheoremProof",
            "36e4a398a28b4fb3b1bbf9fbdadab04c5d19c97e"
        ],
        [
            "by move=> Rx; rewrite -normrX ger0_norm -?realEsqr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_sign s : `|(-1) ^+ s| = 1 :> R.",
            "VernacStartTheoremProof",
            "113308a7ccd62938733d703e38aaa9682b70ffbd"
        ],
        [
            "by rewrite normrX normrN1 expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normrMsign s x : `|(-1) ^+ s * x| = `|x|.",
            "VernacStartTheoremProof",
            "ede537ccfbbf586a114490a1e2914e10ceb8a9dd"
        ],
        [
            "by rewrite normrM normr_sign mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma signr_gt0 (b : bool) : (0 < (-1) ^+ b :> R) = ~~ b.",
            "VernacStartTheoremProof",
            "23626a5aee8b96a5455ead604026c26658d6b138"
        ],
        [
            "by case: b; rewrite (ltr01, ltr0N1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma signr_lt0 (b : bool) : ((-1) ^+ b < 0 :> R) = b.",
            "VernacStartTheoremProof",
            "fb34faf3d1b6134b6caa929d4f8113869c98b35d"
        ],
        [
            "by case: b; rewrite // ?(ltrN10, ltr10).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma signr_ge0 (b : bool) : (0 <= (-1) ^+ b :> R) = ~~ b.",
            "VernacStartTheoremProof",
            "bc08252cfc54137d5d22494435fe44b6bac5727b"
        ],
        [
            "by rewrite le0r signr_eq0 signr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma signr_le0 (b : bool) : ((-1) ^+ b <= 0 :> R) = b.",
            "VernacStartTheoremProof",
            "17d2160f6a20a2aecd4142f1eec22e5008292a58"
        ],
        [
            "by rewrite ler_eqVlt signr_eq0 signr_lt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma signr_inj : injective (fun b : bool => (-1) ^+ b : R).",
            "VernacStartTheoremProof",
            "239de4d1553526701264787d793c31667d640e7a"
        ],
        [
            "exact: can_inj (fun x => 0 >= x) signr_le0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_def x : sg x = (-1) ^+ (x < 0)%R *+ (x != 0).",
            "VernacStartTheoremProof",
            "6342ab929dab098097d65fdb2417e107e631ace0"
        ],
        [
            "by rewrite /sg; do 2!case: ifP => //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neqr0_sign x : x != 0 -> (-1) ^+ (x < 0)%R = sgr x.",
            "VernacStartTheoremProof",
            "798c2f2ff86cfbd1ccfae266124cfaaba0f10bba"
        ],
        [
            "by rewrite sgr_def => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtr0_sg x : 0 < x -> sg x = 1.",
            "VernacStartTheoremProof",
            "c2ae32a4029e95488fa40e14eff244e585cb0e78"
        ],
        [
            "by move=> x_gt0; rewrite /sg gtr_eqF // ltr_gtF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr0_sg x : x < 0 -> sg x = -1.",
            "VernacStartTheoremProof",
            "d0a086056a7ed0d693db8ffbb9731f14e588a7f5"
        ],
        [
            "by move=> x_lt0; rewrite /sg x_lt0 ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr0 : sg 0 = 0 :> R.",
            "VernacStartTheoremProof",
            "1739eb3112cf13bd29fe35df9d6126f5105f5954"
        ],
        [
            "by rewrite /sgr eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr1 : sg 1 = 1 :> R.",
            "VernacStartTheoremProof",
            "c265b258a1758182af446a62703294b4f96f4bc6"
        ],
        [
            "by rewrite gtr0_sg // ltr01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgrN1 : sg (-1) = -1 :> R.",
            "VernacStartTheoremProof",
            "a1bf76a6baa1f7044b453bb57d349a77d058d2b5"
        ],
        [
            "by rewrite ltr0_sg // ltrN10.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sgrE := (sgr0, sgr1, sgrN1).",
            "VernacDefinition",
            "b007cb735f021b0c486603eb0a6bb90bab83e1f3"
        ],
        [
            "Lemma sqr_sg x : sg x ^+ 2 = (x != 0)%:R.",
            "VernacStartTheoremProof",
            "083d024ed2d9684b515cad712889aca0f6e1e539"
        ],
        [
            "by rewrite sgr_def exprMn_n sqrr_sign -mulnn mulnb andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_sg_eq1 x y : (sg x * y == 1) = (x != 0) && (sg x == y).",
            "VernacStartTheoremProof",
            "aa0cb5f7aa6fc6f877f344d3537a45b1362af904"
        ],
        [
            "rewrite /sg eq_sym; case: ifP => _; first by rewrite mul0r oner_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: ifP => _; rewrite ?mul1r // mulN1r eqr_oppLR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_sg_eqN1 x y : (sg x * sg y == -1) = (x != 0) && (sg x == - sg y).",
            "VernacStartTheoremProof",
            "2e5bfee25aed8cc7f9d8a5878bf954e2da191d5b"
        ],
        [
            "move/sg: y => y; rewrite /sg eq_sym eqr_oppLR.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: ifP => _; first by rewrite mul0r oppr0 oner_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: ifP => _; rewrite ?mul1r // mulN1r eqr_oppLR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_eq0 x : (sg x == 0) = (x == 0).",
            "VernacStartTheoremProof",
            "9c27df58743764b93ecd8536592c0f55db6928ab"
        ],
        [
            "by rewrite -sqrf_eq0 sqr_sg pnatr_eq0; case: (x == 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_odd n x : x != 0 -> (sg x) ^+ n = (sg x) ^+ (odd n).",
            "VernacStartTheoremProof",
            "addd74776cf969b87d16d9f3468efc455b8fa17d"
        ],
        [
            "by rewrite /sg; do 2!case: ifP => // _; rewrite ?expr1n ?signr_odd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgrMn x n : sg (x *+ n) = (n != 0%N)%:R * sg x.",
            "VernacStartTheoremProof",
            "1631f953c0b98960b2ee28febdfb574e3b218114"
        ],
        [
            "case: n => [|n]; first by rewrite mulr0n sgr0 mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !sgr_def mulrn_eq0 mul1r pmulrn_llt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_nat n : sg n%:R = (n != 0%N)%:R :> R.",
            "VernacStartTheoremProof",
            "9490f08559f937c1f464b771c9de88dc1b48c6f7"
        ],
        [
            "by rewrite sgrMn sgr1 mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_id x : sg (sg x) = sg x.",
            "VernacStartTheoremProof",
            "d0516c5fda7049b42f99dfd8273ac73179a6c878"
        ],
        [
            "by rewrite !(fun_if sg) !sgrE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_lt0 x : (sg x < 0) = (x < 0).",
            "VernacStartTheoremProof",
            "c5a23fcc40e34c6aa9a1d3571c40d5abb964a8be"
        ],
        [
            "rewrite /sg; case: eqP => [-> // | _].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: ifP => _; rewrite ?ltrN10 // ltr_gtF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_le0 x : (sgr x <= 0) = (x <= 0).",
            "VernacStartTheoremProof",
            "2329527eeaffc650fc83c63084cddf7a21e0e558"
        ],
        [
            "by rewrite !ler_eqVlt sgr_eq0 sgr_lt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realEsign x : x \\is real -> x = (-1) ^+ (x < 0)%R * `|x|.",
            "VernacStartTheoremProof",
            "eb6bce00d9f25ee2a67ebf37de4e0a06fd6a8681"
        ],
        [
            "by case/real_ger0P; rewrite (mul1r, mulN1r) ?opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realNEsign x : x \\is real -> - x = (-1) ^+ (0 < x)%R * `|x|.",
            "VernacStartTheoremProof",
            "916753aa268e308957dc62f7040919215d18e8d8"
        ],
        [
            "by move=> Rx; rewrite -normrN -oppr_lt0 -realEsign ?rpredN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_normrEsign (x : R) (xR : x \\is real) : `|x| = (-1) ^+ (x < 0)%R * x.",
            "VernacStartTheoremProof",
            "d094aaee0d38a7f31b91c3319fadee2c9a8cad2b"
        ],
        [
            "by rewrite {3}[x]realEsign // signrMK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_mulr_sign_norm x : x \\is real -> (-1) ^+ (x < 0)%R * `|x| = x.",
            "VernacStartTheoremProof",
            "ee4e273bc08209fb6eebd3d50ce29fe41dc4b3d5"
        ],
        [
            "by move/realEsign.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_mulr_Nsign_norm x : x \\is real -> (-1) ^+ (0 < x)%R * `|x| = - x.",
            "VernacStartTheoremProof",
            "9e78ac0bf6bbc4d2264c5c13ce461a062ac99726"
        ],
        [
            "by move/realNEsign.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realEsg x : x \\is real -> x = sgr x * `|x|.",
            "VernacStartTheoremProof",
            "7a1ed217270a5a7b0207a50f65ed900e68a8811c"
        ],
        [
            "move=> xR; have [-> | ] := eqVneq x 0; first by rewrite normr0 mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> /neqr0_sign <-; rewrite -realEsign.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normr_sg x : `|sg x| = (x != 0)%:R.",
            "VernacStartTheoremProof",
            "d9987e1215eba2c93c7acb2d9eda2684b26fbb99"
        ],
        [
            "by rewrite sgr_def -mulr_natr normrMsign normr_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_norm x : sg `|x| = (x != 0)%:R.",
            "VernacStartTheoremProof",
            "8d5f0a9a078c7226fe3b5c5f75d0354815ccf3e4"
        ],
        [
            "by rewrite /sg ler_gtF ?normr_ge0 // normr_eq0 mulrb if_neg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_refl x C : reflect (x <= x ?= iff C) C.",
            "VernacStartTheoremProof",
            "ffc197f5ad76b951e3a5f52dccc2763c379aef63"
        ],
        [
            "by apply: (iffP idP) => [-> | <-] //; split; rewrite ?eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_trans x1 x2 x3 C12 C23 : x1 <= x2 ?= iff C12 -> x2 <= x3 ?= iff C23 -> x1 <= x3 ?= iff C12 && C23.",
            "VernacStartTheoremProof",
            "7c88918378900122fe8034a99693eaedec32caeb"
        ],
        [
            "move=> ltx12 ltx23; apply/lerifP; rewrite -ltx12.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "case eqx12: (x1 == x2).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (eqP eqx12) ltr_neqAle !ltx23 andbT; case C23.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (@ltr_le_trans _ x2) ?ltx23 // ltr_neqAle eqx12 ltx12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_le x y : x <= y -> x <= y ?= iff (x >= y).",
            "VernacStartTheoremProof",
            "b32e35d812c3de223c604cbe84c8c641e4fbeccc"
        ],
        [
            "by move=> lexy; split=> //; rewrite eqr_le lexy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_eq x y : x <= y -> x <= y ?= iff (x == y).",
            "VernacStartTheoremProof",
            "eb11d1a0bba6b768579f24a7ebb217aabad17c85"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger_lerif x y C : x <= y ?= iff C -> (y <= x) = C.",
            "VernacStartTheoremProof",
            "5d7e6b665192362019124da28c61ef82783f5fdb"
        ],
        [
            "by case=> le_xy; rewrite eqr_le le_xy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_lerif x y C : x <= y ?= iff C -> (x < y) = ~~ C.",
            "VernacStartTheoremProof",
            "0723fdbb703b288cb80d1ff48e19d4f4fdae821d"
        ],
        [
            "by move=> le_xy; rewrite ltr_neqAle !le_xy andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_nat m n C : (m%:R <= n%:R ?= iff C :> R) = (m <= n ?= iff C)%N.",
            "VernacStartTheoremProof",
            "0849bd3e55fbcdac91aba27db9b0782c72ac5f60"
        ],
        [
            "by rewrite /lerif !ler_nat eqr_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mono_in_lerif (A : pred R) (f : R -> R) C : {in A &, {mono f : x y / x <= y}} -> {in A &, forall x y, (f x <= f y ?= iff C) = (x <= y ?= iff C)}.",
            "VernacStartTheoremProof",
            "63e858f74fe009f27439e507d069b35ca0186dcf"
        ],
        [
            "by move=> mf x y Ax Ay; rewrite /lerif mf ?(inj_in_eq (incr_inj_in mf)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mono_lerif (f : R -> R) C : {mono f : x y / x <= y} -> forall x y, (f x <= f y ?= iff C) = (x <= y ?= iff C).",
            "VernacStartTheoremProof",
            "95db2287ed3944d2a082e145e1d5a243e78ab37f"
        ],
        [
            "by move=> mf x y; rewrite /lerif mf (inj_eq (incr_inj _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmono_in_lerif (A : pred R) (f : R -> R) C : {in A &, {mono f : x y /~ x <= y}} -> {in A &, forall x y, (f x <= f y ?= iff C) = (y <= x ?= iff C)}.",
            "VernacStartTheoremProof",
            "77723db4a8be2603c3c77a443a88ccc753edf132"
        ],
        [
            "move=> mf x y Ax Ay; rewrite /lerif eq_sym mf //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite ?(inj_in_eq (decr_inj_in mf)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmono_lerif (f : R -> R) C : {mono f : x y /~ x <= y} -> forall x y, (f x <= f y ?= iff C) = (y <= x ?= iff C).",
            "VernacStartTheoremProof",
            "8bbf18784f4368e661cdfd6114a1a5996a9a1859"
        ],
        [
            "by move=> mf x y; rewrite /lerif eq_sym mf ?(inj_eq (decr_inj mf)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_subLR x y z C : (x - y <= z ?= iff C) = (x <= z + y ?= iff C).",
            "VernacStartTheoremProof",
            "c8c0f92cc1a77cf846cb217d94784e85ca395bf3"
        ],
        [
            "by rewrite /lerif !eqr_le ler_subr_addr ler_subl_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_subRL x y z C : (x <= y - z ?= iff C) = (x + z <= y ?= iff C).",
            "VernacStartTheoremProof",
            "83d5558f3485c094b6a77933dd605e03d1bfc0ee"
        ],
        [
            "by rewrite -lerif_subLR opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_add x1 y1 C1 x2 y2 C2 : x1 <= y1 ?= iff C1 -> x2 <= y2 ?= iff C2 -> x1 + x2 <= y1 + y2 ?= iff C1 && C2.",
            "VernacStartTheoremProof",
            "be75cc9974a581039093a142a70116153de2f5c4"
        ],
        [
            "rewrite -(mono_lerif _ (ler_add2r x2)) -(mono_lerif C2 (ler_add2l y1)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: lerif_trans.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_sum (I : finType) (P C : pred I) (E1 E2 : I -> R) : (forall i, P i -> E1 i <= E2 i ?= iff C i) -> \\sum_(i | P i) E1 i <= \\sum_(i | P i) E2 i ?= iff [forall (i | P i), C i].",
            "VernacStartTheoremProof",
            "43fbebfb3ce62b8efe32e449e81b175d9c4494e5"
        ],
        [
            "move=> leE12; rewrite -big_andE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "elim/big_rec3: _ => [|i Ci m2 m1 /leE12]; first by rewrite /lerif lerr eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exact: lerif_add.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_0_sum (I : finType) (P C : pred I) (E : I -> R) : (forall i, P i -> 0 <= E i ?= iff C i) -> 0 <= \\sum_(i | P i) E i ?= iff [forall (i | P i), C i].",
            "VernacStartTheoremProof",
            "cb0bb2f6b3f97427c4ca7674d38b384e9129f4d4"
        ],
        [
            "by move/lerif_sum; rewrite big1_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_lerif_norm x : x \\is real -> x <= `|x| ?= iff (0 <= x).",
            "VernacStartTheoremProof",
            "5892f621ea91400e851a3ca8193cd291b5ce278b"
        ],
        [
            "by move=> xR; rewrite ger0_def eq_sym; apply: lerif_eq; rewrite real_ler_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_pmul x1 x2 y1 y2 C1 C2 : 0 <= x1 -> 0 <= x2 -> x1 <= y1 ?= iff C1 -> x2 <= y2 ?= iff C2 -> x1 * x2 <= y1 * y2 ?= iff (y1 * y2 == 0) || C1 && C2.",
            "VernacStartTheoremProof",
            "dbc78392d773e55546dfacee9a2f5534bf932971"
        ],
        [
            "move=> x1_ge0 x2_ge0 le_xy1 le_xy2; have [y_0 | ] := altP (_ =P 0).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/lerifP; rewrite y_0 /= mulf_eq0 !eqr_le x1_ge0 x2_ge0 !andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "move/eqP: y_0; rewrite mulf_eq0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case/pred2P=> <-; rewrite (le_xy1, le_xy2) ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /= mulf_eq0 => /norP[y1nz y2nz].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have y1_gt0: 0 < y1 by rewrite ltr_def y1nz (ler_trans _ le_xy1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [x2_0 | x2nz] := eqVneq x2 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/lerifP; rewrite -le_xy2 x2_0 eq_sym (negPf y2nz) andbF mulr0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mulr_gt0 // ltr_def y2nz -x2_0 le_xy2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= le_xy2; rewrite -(mono_lerif _ (ler_pmul2l y1_gt0)).",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by apply: lerif_trans; rewrite (mono_lerif _ (ler_pmul2r _)) // ltr_def x2nz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_nmul x1 x2 y1 y2 C1 C2 : y1 <= 0 -> y2 <= 0 -> x1 <= y1 ?= iff C1 -> x2 <= y2 ?= iff C2 -> y1 * y2 <= x1 * x2 ?= iff (x1 * x2 == 0) || C1 && C2.",
            "VernacStartTheoremProof",
            "a251c250ffd385a41d9393bcb6526afd85a34dfd"
        ],
        [
            "rewrite -!oppr_ge0 -mulrNN -[x1 * x2]mulrNN => y1le0 y2le0 le_xy1 le_xy2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply: lerif_pmul => //; rewrite (nmono_lerif _ ler_opp2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_pprod (I : finType) (P C : pred I) (E1 E2 : I -> R) : (forall i, P i -> 0 <= E1 i) -> (forall i, P i -> E1 i <= E2 i ?= iff C i) -> let pi E := \\prod_(i | P i) E i in pi E1 <= pi E2 ?= iff (pi E2 == 0) || [forall (i | P i), C i].",
            "VernacStartTheoremProof",
            "1468e1428e23929b281f514f73ee210daf2258e7"
        ],
        [
            "move=> E1_ge0 leE12 /=; rewrite -big_andE; elim/(big_load (fun x => 0 <= x)): _.",
            "VernacExtend",
            "9d0009e9024dcd45b101a0b7756bd6217d27133c"
        ],
        [
            "elim/big_rec3: _ => [|i Ci m2 m1 Pi [m1ge0 le_m12]].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by split=> //; apply/lerifP; rewrite orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Ei_ge0 := E1_ge0 i Pi; split; first by rewrite mulr_ge0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "congr (lerif _ _ _): (lerif_pmul Ei_ge0 m1ge0 (leE12 i Pi) le_m12).",
            "VernacExtend",
            "f3a9615ebe5fa15549c1ecd556f50efbdb2824d9"
        ],
        [
            "by rewrite mulf_eq0 -!orbA; congr (_ || _); rewrite !orb_andr orbA orbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_lerif_mean_square_scaled x y : x \\is real -> y \\is real -> x * y *+ 2 <= x ^+ 2 + y ^+ 2 ?= iff (x == y).",
            "VernacStartTheoremProof",
            "5c74f1d5f420fcb52e24f063d442da43554a7473"
        ],
        [
            "move=> Rx Ry; rewrite -[_ *+ 2]add0r -lerif_subRL addrAC -sqrrB -subr_eq0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -sqrf_eq0 eq_sym; apply: lerif_eq; rewrite -realEsqr rpredB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_lerif_AGM2_scaled x y : x \\is real -> y \\is real -> x * y *+ 4 <= (x + y) ^+ 2 ?= iff (x == y).",
            "VernacStartTheoremProof",
            "8c46e38bb65c4bf5d8150f3dad94738d440d9eb3"
        ],
        [
            "move=> Rx Ry; rewrite sqrrD addrAC (mulrnDr _ 2) -lerif_subLR addrK.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "exact: real_lerif_mean_square_scaled.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_AGM_scaled (I : finType) (A : pred I) (E : I -> R) (n := #|A|) : {in A, forall i, 0 <= E i *+ n} -> \\prod_(i in A) (E i *+ n) <= (\\sum_(i in A) E i) ^+ n ?= iff [forall i in A, forall j in A, E i == E j].",
            "VernacStartTheoremProof",
            "ed2c88b8dc46c015a4a34d6a39dab336f439dbc0"
        ],
        [
            "elim: {A}_.+1 {-2}A (ltnSn #|A|) => // m IHm A leAm in E n * => Ege0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/lerifP; case: ifPn => [/forall_inP-Econstant | Enonconstant].",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "have [i /= Ai | A0] := pickP (mem A); last by rewrite [n]eq_card0 ?big_pred0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have /eqfun_inP-E_i := Econstant i Ai; rewrite -(eq_bigr _ E_i) sumr_const.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite exprMn_n prodrMn -(eq_bigr _ E_i) prodr_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set mu := \\sum_(i in A) E i; pose En i := E i *+ n.",
            "VernacExtend",
            "dda58a04ca4da9adf6d016079f462c4d6ff69ca8"
        ],
        [
            "pose cmp_mu s := [pred i | s * mu < s * En i].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have{Enonconstant} has_cmp_mu e (s := (-1) ^+ e): {i | i \\in A & cmp_mu s i}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/sig2W/exists_inP; apply: contraR Enonconstant.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite negb_exists_in => /forall_inP-mu_s_A.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have n_gt0 i: i \\in A -> (0 < n)%N by rewrite [n](cardD1 i) => ->.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{mu_s_A} mu_s_A i: i \\in A -> s * En i <= s * mu.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Ai; rewrite real_lerNgt ?mu_s_A ?rpredMsign ?ger0_real ?Ege0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -(pmulrn_lge0 _ (n_gt0 i Ai)) -sumrMnl sumr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [_ /esym/eqfun_inP] := lerif_sum (fun i Ai => lerif_eq (mu_s_A i Ai)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite sumr_const -/n -mulr_sumr sumrMnl -/mu mulrnAr eqxx => A_mu.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/forall_inP=> i Ai; apply/eqfun_inP=> j Aj.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by apply: (pmulrnI (n_gt0 i Ai)); apply: (can_inj (signrMK e)); rewrite !A_mu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [[i Ai Ei_lt_mu] [j Aj Ej_gt_mu]] := (has_cmp_mu 1, has_cmp_mu 0)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {cmp_mu has_cmp_mu}/= !mul1r !mulN1r ltr_opp2 in Ei_lt_mu Ej_gt_mu.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose A' := [predD1 A & i]; pose n' := #|A'|.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have [Dn n_gt0]: n = n'.+1 /\\ (n > 0)%N by rewrite [n](cardD1 i) Ai.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have i'j: j != i by apply: contraTneq Ej_gt_mu => ->; rewrite ltr_gtF.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{i'j} A'j: j \\in A' by rewrite !inE Aj i'j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have mu_gt0: 0 < mu := ler_lt_trans (Ege0 i Ai) Ei_lt_mu.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (bigD1 i) // big_andbC (bigD1 j) //= mulrA; set pi := \\prod_(k | _) _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "have [-> | nz_pi] := eqVneq pi 0; first by rewrite !mulr0 exprn_gt0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have{nz_pi} pi_gt0: 0 < pi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ltr_def nz_pi prodr_ge0 // => k /andP[/andP[_ /Ege0]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -/(En i) -/(En j); pose E' := [eta En with j |-> En i + En j - mu].",
            "VernacExtend",
            "75b8af130f1ffab51ae8ba47bf4a2268ca7eb69f"
        ],
        [
            "have E'ge0 k: k \\in A' -> E' k *+ n' >= 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/andP=> /= _ Ak; apply: mulrn_wge0; case: ifP => _; last exact: Ege0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite subr_ge0 ler_paddl ?Ege0 // ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -/n Dn in leAm; have{leAm IHm E'ge0}: _ <= _ := IHm _ leAm _ E'ge0.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "have ->: \\sum_(k in A') E' k = mu *+ n'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (addrI mu); rewrite -mulrS -Dn -sumrMnl (bigD1 i Ai) big_andbC /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite !(bigD1 j A'j) /= addrCA eqxx !addrA subrK; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_bigr => k /andP[_ /negPf->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite prodrMn exprMn_n -/n' ler_pmuln2r ?expn_gt0; last by case: (n').",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have ->: \\prod_(k in A') E' k = E' j * pi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (bigD1 j) //=; congr *%R; apply: eq_bigr => k /andP[_ /negPf->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(ler_pmul2l mu_gt0) -exprS -Dn mulrA; apply: ltr_le_trans.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite ltr_pmul2r //= eqxx -addrA mulrDr mulrC -ltr_subl_addl -mulrBl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrC ltr_pmul2r ?subr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Implicit Type p : {poly R}.",
            "VernacReserve",
            "9a60f53f5e0608bb8a250587312b2c25faa6e187"
        ],
        [
            "Lemma poly_disk_bound p b : {ub | forall x, `|x| <= b -> `|p.[x]| <= ub}.",
            "VernacStartTheoremProof",
            "881fdd819123e9948550f8eac2f91be706a302dd"
        ],
        [
            "exists (\\sum_(j < size p) `|p`_j| * b ^+ j) => x le_x_b.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite horner_coef (ler_trans (ler_norm_sum _ _ _)) ?ler_sum // => j _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite normrM normrX ler_wpmul2l ?ler_expn2r ?unfold_in ?normr_ge0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: ler_trans (normr_ge0 x) le_x_b.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NumDomainOperationTheory.",
            "VernacEndSegment",
            "1c827ed7b00e1a8e01ab8c2a25bae6b8647be0ff"
        ],
        [
            "Hint Resolve ler_opp2 ltr_opp2 real0 real1 normr_real : core.",
            "VernacHints",
            "ea30486061abb276fc4c6fa95b5ac35b8e7b5247"
        ],
        [
            "Arguments ler_sqr {R} [x y].",
            "VernacArguments",
            "a04a2c52074a93acdc42f3eba8e24cd94043a9a5"
        ],
        [
            "Arguments ltr_sqr {R} [x y].",
            "VernacArguments",
            "2293471c8c8bf333f56308dc0572e098645e2d7a"
        ],
        [
            "Arguments signr_inj {R} [x1 x2].",
            "VernacArguments",
            "5412650c4405bf879434c9e5e06827bc5931017b"
        ],
        [
            "Arguments real_ler_normlP {R x y}.",
            "VernacArguments",
            "b1bd23fc95debe56cdb6537ceebbebb29ffaa862"
        ],
        [
            "Arguments real_ltr_normlP {R x y}.",
            "VernacArguments",
            "8556ecb5a8890dc167f6d9a790fc7f6e3684b746"
        ],
        [
            "Arguments lerif_refl {R x C}.",
            "VernacArguments",
            "63291e7279a1f9fd2126fa2e2d0e6ef27070883c"
        ],
        [
            "Arguments mono_in_lerif [R A f C].",
            "VernacArguments",
            "d5c3b43a10c244155c05422a544efe07c6a4e1c8"
        ],
        [
            "Arguments nmono_in_lerif [R A f C].",
            "VernacArguments",
            "2c79d5d466db622b679407637dededc106e12ffc"
        ],
        [
            "Arguments mono_lerif [R f C].",
            "VernacArguments",
            "5d92dfaf6d5d3e84415200280a8179bf1dc7d7c8"
        ],
        [
            "Arguments nmono_lerif [R f C].",
            "VernacArguments",
            "9f866d6cad45abf6ea3c8f4a3b26feaa48fcf088"
        ],
        [
            "Section NumDomainMonotonyTheoryForReals.",
            "VernacBeginSection",
            "954587bff1c29a54ec7659fe8edaef615a3085f0"
        ],
        [
            "Variables (R R' : numDomainType) (D : pred R) (f : R -> R') (f' : R -> nat).",
            "VernacAssumption",
            "f71c89f3b1d8f273617300027d45dfee28258ee5"
        ],
        [
            "Implicit Types (m n p : nat) (x y z : R) (u v w : R').",
            "VernacReserve",
            "b40a001fa5da550ca9d94d0cabd390bf11d90d2f"
        ],
        [
            "Lemma real_mono : {homo f : x y / x < y} -> {in real &, {mono f : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "aeef22901d4ff86191bbd217a8cb1e5b9b07f07b"
        ],
        [
            "move=> mf x y xR yR /=; have [lt_xy | le_yx] := real_lerP xR yR.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite ltrW_homo.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltr_geF ?mf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_nmono : {homo f : x y /~ x < y} -> {in real &, {mono f : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "4da14fefb536b42618de408a035e2e90dc7b56da"
        ],
        [
            "move=> mf x y xR yR /=; have [lt_xy|le_yx] := real_ltrP xR yR.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite ltr_geF ?mf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltrW_nhomo.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_mono_in : {in D &, {homo f : x y / x < y}} -> {in [pred x in D | x \\is real] &, {mono f : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "cc97712051649c7baa07e950f646e6b9d40dbc68"
        ],
        [
            "move=> Dmf x y /andP[hx xR] /andP[hy yR] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [lt_xy|le_yx] := real_lerP xR yR; first by rewrite (ltrW_homo_in Dmf).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltr_geF ?Dmf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_nmono_in : {in D &, {homo f : x y /~ x < y}} -> {in [pred x in D | x \\is real] &, {mono f : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "49afb8f7e80b7db520a64bde8c60e451a8b394a4"
        ],
        [
            "move=> Dmf x y /andP[hx xR] /andP[hy yR] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [lt_xy|le_yx] := real_ltrP xR yR; last by rewrite (ltrW_nhomo_in Dmf).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltr_geF ?Dmf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realn_mono : {homo f' : x y / x < y >-> (x < y)%N} -> {in real &, {mono f' : x y / x <= y >-> (x <= y)%N}}.",
            "VernacStartTheoremProof",
            "21c48b585535d1cd3c49029c7f6dd1a17e4765e1"
        ],
        [
            "move=> mf x y xR yR /=; have [lt_xy | le_yx] := real_lerP xR yR.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite ltrnW_homo.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltn_geF ?mf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realn_nmono : {homo f' : x y / y < x >-> (x < y)%N} -> {in real &, {mono f' : x y / y <= x >-> (x <= y)%N}}.",
            "VernacStartTheoremProof",
            "bfc6c828ebe1fb586cd3809858b54ee442fdfca2"
        ],
        [
            "move=> mf x y xR yR /=; have [lt_xy|le_yx] := real_ltrP xR yR.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite ltn_geF ?mf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltrnW_nhomo.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realn_mono_in : {in D &, {homo f' : x y / x < y >-> (x < y)%N}} -> {in [pred x in D | x \\is real] &, {mono f' : x y / x <= y >-> (x <= y)%N}}.",
            "VernacStartTheoremProof",
            "a260e0d3459ebd393cb94bb258fd971505204f16"
        ],
        [
            "move=> Dmf x y /andP[hx xR] /andP[hy yR] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [lt_xy|le_yx] := real_lerP xR yR; first by rewrite (ltrnW_homo_in Dmf).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltn_geF ?Dmf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma realn_nmono_in : {in D &, {homo f' : x y / y < x >-> (x < y)%N}} -> {in [pred x in D | x \\is real] &, {mono f' : x y / y <= x >-> (x <= y)%N}}.",
            "VernacStartTheoremProof",
            "19c83a38dacfebcb20e8549bfe599aeffb15ff34"
        ],
        [
            "move=> Dmf x y /andP[hx xR] /andP[hy yR] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [lt_xy|le_yx] := real_ltrP xR yR; last by rewrite (ltrnW_nhomo_in Dmf).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltn_geF ?Dmf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NumDomainMonotonyTheoryForReals.",
            "VernacEndSegment",
            "5d41ef1aab6405a78bce0bdaa6b48cab1296156e"
        ],
        [
            "Section FinGroup.",
            "VernacBeginSection",
            "577332d6dfc409f1110bc9981517d36592c72afb"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Variables (R : numDomainType) (gT : finGroupType).",
            "VernacAssumption",
            "c43b5eb5ed9df896fb98500e41078b45f8d38943"
        ],
        [
            "Implicit Types G : {group gT}.",
            "VernacReserve",
            "69191693445dc2dbe8fdddf7d73e414747afe899"
        ],
        [
            "Lemma natrG_gt0 G : #|G|%:R > 0 :> R.",
            "VernacStartTheoremProof",
            "42138c3b69b8fbda3435722515a2e3a9b0db8b79"
        ],
        [
            "by rewrite ltr0n cardG_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natrG_neq0 G : #|G|%:R != 0 :> R.",
            "VernacStartTheoremProof",
            "f319ff61410c5767bd968b209f17f00ee8084853"
        ],
        [
            "by rewrite gtr_eqF // natrG_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natr_indexg_gt0 G B : #|G : B|%:R > 0 :> R.",
            "VernacStartTheoremProof",
            "5b052206fbce96348b89e8db5a7e5d0956af3f09"
        ],
        [
            "by rewrite ltr0n indexg_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natr_indexg_neq0 G B : #|G : B|%:R != 0 :> R.",
            "VernacStartTheoremProof",
            "1a6d611ff12929c444d4e11d96b67229d64d455d"
        ],
        [
            "by rewrite gtr_eqF // natr_indexg_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FinGroup.",
            "VernacEndSegment",
            "b52830ffb672d4c9b2af7b684e30642b340bddaf"
        ],
        [
            "Section NumFieldTheory.",
            "VernacBeginSection",
            "86b07d231cae1f86adf55a642bbff590cf4450bb"
        ],
        [
            "Variable F : numFieldType.",
            "VernacAssumption",
            "54a2a87fd83f87f32f2019148f109eace8d8a33f"
        ],
        [
            "Implicit Types x y z t : F.",
            "VernacReserve",
            "61855f2ce30d052e5c0a336dae369f1c32fecd77"
        ],
        [
            "Lemma unitf_gt0 x : 0 < x -> x \\is a GRing.unit.",
            "VernacStartTheoremProof",
            "b87438bd0fd8df359522fdc6520cd307704adc7d"
        ],
        [
            "by move=> hx; rewrite unitfE eq_sym ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitf_lt0 x : x < 0 -> x \\is a GRing.unit.",
            "VernacStartTheoremProof",
            "b632477b8714800aa074a786fc4724d97bcc8fbf"
        ],
        [
            "by move=> hx; rewrite unitfE ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lef_pinv : {in pos &, {mono (@GRing.inv F) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "1ac439320322589b8e00850b377a6cb8ed50bd96"
        ],
        [
            "by move=> x y hx hy /=; rewrite ler_pinv ?inE ?unitf_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lef_ninv : {in neg &, {mono (@GRing.inv F) : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "e3fc3ffb63cf5ff3126dae21d7dc191ace44a4b3"
        ],
        [
            "by move=> x y hx hy /=; rewrite ler_ninv ?inE ?unitf_lt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltf_pinv : {in pos &, {mono (@GRing.inv F) : x y /~ x < y}}.",
            "VernacStartTheoremProof",
            "ab5bc27df5db7d6811a0feac11aa405c92039eac"
        ],
        [
            "exact: lerW_nmono_in lef_pinv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltf_ninv: {in neg &, {mono (@GRing.inv F) : x y /~ x < y}}.",
            "VernacStartTheoremProof",
            "5d1105a2e66d1f834075c80dfb06515e1ea63e39"
        ],
        [
            "exact: lerW_nmono_in lef_ninv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ltef_pinv := (lef_pinv, ltf_pinv).",
            "VernacDefinition",
            "ca9435275db03be809ba62c97f77179a6cce45b9"
        ],
        [
            "Definition ltef_ninv := (lef_ninv, ltf_ninv).",
            "VernacDefinition",
            "f04386684ab6c055b1d5d3b8e6abc0c40af047a0"
        ],
        [
            "Lemma invf_gt1 x : 0 < x -> (1 < x^-1) = (x < 1).",
            "VernacStartTheoremProof",
            "2fe19bec285fb989e5f301ac4ea4b67bdbfc4fc8"
        ],
        [
            "by move=> x_gt0; rewrite -{1}[1]invr1 ltf_pinv ?posrE ?ltr01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invf_ge1 x : 0 < x -> (1 <= x^-1) = (x <= 1).",
            "VernacStartTheoremProof",
            "f546cc7c508b861498792a689db1846a959391e9"
        ],
        [
            "by move=> x_lt0; rewrite -{1}[1]invr1 lef_pinv ?posrE ?ltr01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition invf_gte1 := (invf_ge1, invf_gt1).",
            "VernacDefinition",
            "d2a6f1503baed960fb09af4529bf656acc7f3492"
        ],
        [
            "Lemma invf_le1 x : 0 < x -> (x^-1 <= 1) = (1 <= x).",
            "VernacStartTheoremProof",
            "df4fe686b9f1e99fe37fdc0231c00666b54b2e06"
        ],
        [
            "by move=> x_gt0; rewrite -invf_ge1 ?invr_gt0 // invrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invf_lt1 x : 0 < x -> (x^-1 < 1) = (1 < x).",
            "VernacStartTheoremProof",
            "dd89d9fe503989dbfd4c4c9838411a7aa3f64061"
        ],
        [
            "by move=> x_lt0; rewrite -invf_gt1 ?invr_gt0 // invrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition invf_lte1 := (invf_le1, invf_lt1).",
            "VernacDefinition",
            "69f052adcc3a820065143d24f1a79d84b03f3a17"
        ],
        [
            "Definition invf_cp1 := (invf_gte1, invf_lte1).",
            "VernacDefinition",
            "1ff5f00708c2601c11bd3a04c2a667e5adc8353e"
        ],
        [
            "Lemma ler_pdivl_mulr z x y : 0 < z -> (x <= y / z) = (x * z <= y).",
            "VernacStartTheoremProof",
            "b8bc30fa48001c91b7078fbc99d25d588178aa3e"
        ],
        [
            "by move=> z_gt0; rewrite -(@ler_pmul2r _ z) ?mulfVK ?gtr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pdivl_mulr z x y : 0 < z -> (x < y / z) = (x * z < y).",
            "VernacStartTheoremProof",
            "c4dc9e34eb71a63b7d3ab8590a61f7f336bfd9f3"
        ],
        [
            "by move=> z_gt0; rewrite -(@ltr_pmul2r _ z) ?mulfVK ?gtr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_pdivl_mulr := (ler_pdivl_mulr, ltr_pdivl_mulr).",
            "VernacDefinition",
            "9e477d8848a656ec7cf65328c9b67676a1f02bbf"
        ],
        [
            "Lemma ler_pdivr_mulr z x y : 0 < z -> (y / z <= x) = (y <= x * z).",
            "VernacStartTheoremProof",
            "9a285d032ebd4e1fc794680aa9e16e657fcc32c1"
        ],
        [
            "by move=> z_gt0; rewrite -(@ler_pmul2r _ z) ?mulfVK ?gtr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pdivr_mulr z x y : 0 < z -> (y / z < x) = (y < x * z).",
            "VernacStartTheoremProof",
            "dbdd8847ed62efb590a36dea3a9d46c4c967408c"
        ],
        [
            "by move=> z_gt0; rewrite -(@ltr_pmul2r _ z) ?mulfVK ?gtr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_pdivr_mulr := (ler_pdivr_mulr, ltr_pdivr_mulr).",
            "VernacDefinition",
            "b7e6b44371c5e5d0e345ad9eb51c3a7bc30fbdf8"
        ],
        [
            "Lemma ler_pdivl_mull z x y : 0 < z -> (x <= z^-1 * y) = (z * x <= y).",
            "VernacStartTheoremProof",
            "df90f4b1eb9f7bb9cffaf1387b618975e9b65a6d"
        ],
        [
            "by move=> z_gt0; rewrite mulrC ler_pdivl_mulr ?[z * _]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pdivl_mull z x y : 0 < z -> (x < z^-1 * y) = (z * x < y).",
            "VernacStartTheoremProof",
            "1221cc5c1468281b1a6e4700836984847f229d80"
        ],
        [
            "by move=> z_gt0; rewrite mulrC ltr_pdivl_mulr ?[z * _]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_pdivl_mull := (ler_pdivl_mull, ltr_pdivl_mull).",
            "VernacDefinition",
            "7fc187254942252a2c832258d39d770892b63c19"
        ],
        [
            "Lemma ler_pdivr_mull z x y : 0 < z -> (z^-1 * y <= x) = (y <= z * x).",
            "VernacStartTheoremProof",
            "94abf97a47c7f42025006270d7eee68a03dfdc03"
        ],
        [
            "by move=> z_gt0; rewrite mulrC ler_pdivr_mulr ?[z * _]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_pdivr_mull z x y : 0 < z -> (z^-1 * y < x) = (y < z * x).",
            "VernacStartTheoremProof",
            "f695cea9b40822a0c5dfa2d43c8ffc29f6f6af3f"
        ],
        [
            "by move=> z_gt0; rewrite mulrC ltr_pdivr_mulr ?[z * _]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_pdivr_mull := (ler_pdivr_mull, ltr_pdivr_mull).",
            "VernacDefinition",
            "4683dd0f5131ee2bc6c1eac044031e7bdc7292af"
        ],
        [
            "Lemma ler_ndivl_mulr z x y : z < 0 -> (x <= y / z) = (y <= x * z).",
            "VernacStartTheoremProof",
            "ae41ec0af5f0930804a2987dcea15b4c5962d60f"
        ],
        [
            "by move=> z_lt0; rewrite -(@ler_nmul2r _ z) ?mulfVK ?ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_ndivl_mulr z x y : z < 0 -> (x < y / z) = (y < x * z).",
            "VernacStartTheoremProof",
            "7dfdc9f7caf2e898eb04972927120476aaf96d55"
        ],
        [
            "by move=> z_lt0; rewrite -(@ltr_nmul2r _ z) ?mulfVK ?ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_ndivl_mulr := (ler_ndivl_mulr, ltr_ndivl_mulr).",
            "VernacDefinition",
            "bfb9f9bf6a31dcf336b92e9ad11fa103b401978c"
        ],
        [
            "Lemma ler_ndivr_mulr z x y : z < 0 -> (y / z <= x) = (x * z <= y).",
            "VernacStartTheoremProof",
            "257f5039ec1ececcf0e0e9fb276e5ea05044070e"
        ],
        [
            "by move=> z_lt0; rewrite -(@ler_nmul2r _ z) ?mulfVK ?ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_ndivr_mulr z x y : z < 0 -> (y / z < x) = (x * z < y).",
            "VernacStartTheoremProof",
            "9eb9c60d86fbde4c23793e4df335d23ea7aafe8a"
        ],
        [
            "by move=> z_lt0; rewrite -(@ltr_nmul2r _ z) ?mulfVK ?ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_ndivr_mulr := (ler_ndivr_mulr, ltr_ndivr_mulr).",
            "VernacDefinition",
            "46b8e16d02e4665a567e1f7bc5770e922d6959a2"
        ],
        [
            "Lemma ler_ndivl_mull z x y : z < 0 -> (x <= z^-1 * y) = (y <= z * x).",
            "VernacStartTheoremProof",
            "e5d87a3621a29a0ba670a15867793756859ff433"
        ],
        [
            "by move=> z_lt0; rewrite mulrC ler_ndivl_mulr ?[z * _]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_ndivl_mull z x y : z < 0 -> (x < z^-1 * y) = (y < z * x).",
            "VernacStartTheoremProof",
            "0d5d1687b9f43fa69269926b432571b25c172dfe"
        ],
        [
            "by move=> z_lt0; rewrite mulrC ltr_ndivl_mulr ?[z * _]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_ndivl_mull := (ler_ndivl_mull, ltr_ndivl_mull).",
            "VernacDefinition",
            "7d9efe833ffa06af0487b19ee090141ff9715445"
        ],
        [
            "Lemma ler_ndivr_mull z x y : z < 0 -> (z^-1 * y <= x) = (z * x <= y).",
            "VernacStartTheoremProof",
            "97feae39ce66db455a55189ef7ffb2d18f020a0d"
        ],
        [
            "by move=> z_lt0; rewrite mulrC ler_ndivr_mulr ?[z * _]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_ndivr_mull z x y : z < 0 -> (z^-1 * y < x) = (z * x < y).",
            "VernacStartTheoremProof",
            "0ae4cc250a4df87d9299dbf9fef98f29d00602c8"
        ],
        [
            "by move=> z_lt0; rewrite mulrC ltr_ndivr_mulr ?[z * _]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_ndivr_mull := (ler_ndivr_mull, ltr_ndivr_mull).",
            "VernacDefinition",
            "4ffa62c06bc8f4546985c7e46cc141b0af537c7f"
        ],
        [
            "Lemma natf_div m d : (d %| m)%N -> (m %/ d)%:R = m%:R / d%:R :> F.",
            "VernacStartTheoremProof",
            "ca8fef365620434624d341ec11dafbd504309801"
        ],
        [
            "by apply: char0_natf_div; apply: (@char_num F).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normfV : {morph (@norm F) : x / x ^-1}.",
            "VernacStartTheoremProof",
            "20704357082347f158a726d1a2ba9aa003d12388"
        ],
        [
            "move=> x /=; have [/normrV //|Nux] := boolP (x \\is a GRing.unit).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite !invr_out // unitfE normr_eq0 -unitfE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normf_div : {morph (@norm F) : x y / x / y}.",
            "VernacStartTheoremProof",
            "b904103c3f7b30aea23bc846c2dc6f78c445bd38"
        ],
        [
            "by move=> x y /=; rewrite normrM normfV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invr_sg x : (sg x)^-1 = sgr x.",
            "VernacStartTheoremProof",
            "d7a1b2e19957dca1a1dc89c10a0ac218947ae33c"
        ],
        [
            "by rewrite !(fun_if GRing.inv) !(invr0, invrN, invr1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgrV x : sgr x^-1 = sgr x.",
            "VernacStartTheoremProof",
            "e01fd060e6b3223d1173bfa3e2f60d0f7562c7eb"
        ],
        [
            "by rewrite /sgr invr_eq0 invr_lt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation mid x y := ((x + y) / 2%:R).",
            "VernacSyntacticDefinition",
            "ac99efcf7fef14af7e96d40a00386d3e11d19f50"
        ],
        [
            "Lemma midf_le x y : x <= y -> (x <= mid x y) * (mid x y <= y).",
            "VernacStartTheoremProof",
            "c55637c0fac8d61061306cee9a6e4a3f475b57a5"
        ],
        [
            "move=> lexy; rewrite ler_pdivl_mulr ?ler_pdivr_mulr ?ltr0Sn //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !mulrDr !mulr1 ler_add2r ler_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midf_lt x y : x < y -> (x < mid x y) * (mid x y < y).",
            "VernacStartTheoremProof",
            "82e7eab56fe885c6586557be5e21a2afc91c7f36"
        ],
        [
            "move=> ltxy; rewrite ltr_pdivl_mulr ?ltr_pdivr_mulr ?ltr0Sn //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !mulrDr !mulr1 ltr_add2r ltr_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition midf_lte := (midf_le, midf_lt).",
            "VernacDefinition",
            "2d0949612f73dac58258510ae0f0a547805ce6c9"
        ],
        [
            "Lemma real_lerif_mean_square x y : x \\is real -> y \\is real -> x * y <= mid (x ^+ 2) (y ^+ 2) ?= iff (x == y).",
            "VernacStartTheoremProof",
            "b6aad0afd5a0e216206c6fcb41b5b7f7b7a986c9"
        ],
        [
            "move=> Rx Ry; rewrite -(mono_lerif (ler_pmul2r (ltr_nat F 0 2))).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite divfK ?pnatr_eq0 // mulr_natr; apply: real_lerif_mean_square_scaled.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma real_lerif_AGM2 x y : x \\is real -> y \\is real -> x * y <= mid x y ^+ 2 ?= iff (x == y).",
            "VernacStartTheoremProof",
            "756a5207c72527bc8d87fa342996d6ced9bcba8b"
        ],
        [
            "move=> Rx Ry; rewrite -(mono_lerif (ler_pmul2r (ltr_nat F 0 4))).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite mulr_natr (natrX F 2 2) -exprMn divfK ?pnatr_eq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: real_lerif_AGM2_scaled.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_AGM (I : finType) (A : pred I) (E : I -> F) : let n := #|A| in let mu := (\\sum_(i in A) E i) / n%:R in {in A, forall i, 0 <= E i} -> \\prod_(i in A) E i <= mu ^+ n ?= iff [forall i in A, forall j in A, E i == E j].",
            "VernacStartTheoremProof",
            "374d4ce205852b65b892e112ce920f00175e2edd"
        ],
        [
            "move=> n mu Ege0; have [n0 | n_gt0] := posnP n.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite n0 -big_andE !(big_pred0 _ _ _ _ (card0_eq n0)); apply/lerifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose E' i := E i / n%:R.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have defE' i: E' i *+ n = E i by rewrite -mulr_natr divfK ?pnatr_eq0 -?lt0n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /lerif_AGM_scaled (i): i \\in A -> 0 <= E' i *+ n by rewrite defE' => /Ege0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -/n -mulr_suml (eq_bigr _ (in1W defE')); congr (_ <= _ ?= iff _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by do 2![apply: eq_forallb_in => ? _]; rewrite -(eqr_pmuln2r n_gt0) !defE'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Implicit Type p : {poly F}.",
            "VernacReserve",
            "9ba3eba3ff853bf747a482b2bee2cdb3c1adbc2e"
        ],
        [
            "Lemma Cauchy_root_bound p : p != 0 -> {b | forall x, root p x -> `|x| <= b}.",
            "VernacStartTheoremProof",
            "f923cab6e45f701364fdccc56fca197a16910583"
        ],
        [
            "move=> nz_p; set a := lead_coef p; set n := (size p).-1.",
            "VernacExtend",
            "2ed4407a743960054f801c19fd623f6ef3da7a83"
        ],
        [
            "have [q Dp]: {q | forall x, x != 0 -> p.[x] = (a - q.[x^-1] / x) * x ^+ n}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (- \\poly_(i < n) p`_(n - i.+1)) => x nz_x.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite hornerN mulNr opprK horner_poly mulrDl !mulr_suml addrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite horner_coef polySpred // big_ord_recr (reindex_inj rev_ord_inj) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/n -lead_coefE; congr (_ + _); apply: eq_bigr=> i _.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "by rewrite exprB ?unitfE // -exprVn mulrA mulrAC exprSr mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [b ub_q] := poly_disk_bound q 1; exists (b / `|a| + 1) => x px0.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "have b_ge0: 0 <= b by rewrite (ler_trans (normr_ge0 q.[1])) ?ub_q ?normr1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{b_ge0} ba_ge0: 0 <= b / `|a| by rewrite divr_ge0 ?normr_ge0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite real_lerNgt ?rpredD ?rpred1 ?ger0_real ?normr_ge0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contraL px0 => lb_x; rewrite rootE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have x_ge1: 1 <= `|x| by rewrite (ler_trans _ (ltrW lb_x)) // ler_paddl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nz_x: x != 0 by rewrite -normr_gt0 (ltr_le_trans ltr01).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {}Dp // mulf_neq0 ?expf_neq0 // subr_eq0 eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have: (b / `|a|) < `|x| by rewrite (ltr_trans _ lb_x) // ltr_spaddr ?ltr01.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraTneq => /(canRL (divfK nz_x))Dax.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite ltr_pdivr_mulr ?normr_gt0 ?lead_coef_eq0 // mulrC -normrM -{}Dax.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ler_gtF // ub_q // normfV invf_le1 ?normr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Lemma natf_indexg (gT : finGroupType) (G H : {group gT}) : H \\subset G -> #|G : H|%:R = (#|G|%:R / #|H|%:R)%R :> F.",
            "VernacStartTheoremProof",
            "4b58f28976c18eec3231a1585023eba55395e6a5"
        ],
        [
            "by move=> sHG; rewrite -divgS // natf_div ?cardSg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NumFieldTheory.",
            "VernacEndSegment",
            "526dccbf4d7ae03a432082a27f62a2d805bff956"
        ],
        [
            "Section RealDomainTheory.",
            "VernacBeginSection",
            "85f6512d25176ffaa1ff617de4062b963f4a995e"
        ],
        [
            "Hint Resolve lerr : core.",
            "VernacHints",
            "332b7e3642dc10b6820fdc9a2c0cda5626304d70"
        ],
        [
            "Variable R : realDomainType.",
            "VernacAssumption",
            "0693f35b06db2e27c7cf58627c33e70282f912ba"
        ],
        [
            "Implicit Types x y z t : R.",
            "VernacReserve",
            "301ab45a59a3df7a22e11e8d5888ade83e78783d"
        ],
        [
            "Lemma num_real x : x \\is real.",
            "VernacStartTheoremProof",
            "8d36577a85a9d4f4a1d580d8f43d8b8d6e5740b9"
        ],
        [
            "exact: num_real.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve num_real : core.",
            "VernacHints",
            "1f2eb525c05a5760139b14ebdc993c82138aa0f4"
        ],
        [
            "Lemma ler_total : total (@le R).",
            "VernacStartTheoremProof",
            "36e5b6aaa7777338fa357a0d49dc03296e6751f5"
        ],
        [
            "by move=> x y; apply: real_leVge.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_total x y : x != y -> (x < y) || (y < x).",
            "VernacStartTheoremProof",
            "11581112e23f6790104e2ec0219c002ed6ab66a6"
        ],
        [
            "by rewrite !ltr_def [_ == y]eq_sym => ->; apply: ler_total.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlog_ler P : (forall a b, P b a -> P a b) -> (forall a b, a <= b -> P a b) -> forall a b : R, P a b.",
            "VernacStartTheoremProof",
            "0d924f75c06a1b81a94c6911fdc7a944051f20d2"
        ],
        [
            "by move=> sP hP a b; apply: real_wlog_ler.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlog_ltr P : (forall a, P a a) -> (forall a b, (P b a -> P a b)) -> (forall a b, a < b -> P a b) -> forall a b : R, P a b.",
            "VernacStartTheoremProof",
            "ad5b9297a667d19795a1578dec231924e710cfa1"
        ],
        [
            "by move=> rP sP hP a b; apply: real_wlog_ltr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrNge x y : (x < y) = ~~ (y <= x).",
            "VernacStartTheoremProof",
            "b2d6a32ef6208245f1e00906111a49efa971f4b2"
        ],
        [
            "exact: real_ltrNge.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerNgt x y : (x <= y) = ~~ (y < x).",
            "VernacStartTheoremProof",
            "88b4b69be5e203ba7796e4e0fd7228cca5716fe5"
        ],
        [
            "exact: real_lerNgt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerP x y : ler_xor_gt x y `|x - y| `|y - x| (x <= y) (y < x).",
            "VernacStartTheoremProof",
            "de6ad824e0003926f909e95d1a236bdfb7e67af8"
        ],
        [
            "exact: real_lerP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrP x y : ltr_xor_ge x y `|x - y| `|y - x| (y <= x) (x < y).",
            "VernacStartTheoremProof",
            "a5e2ea080452d972f613ebe07d7f811c74caf0e8"
        ],
        [
            "exact: real_ltrP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrgtP x y : comparer x y `|x - y| `|y - x| (y == x) (x == y) (x <= y) (y <= x) (x < y) (x > y) .",
            "VernacStartTheoremProof",
            "c9ef982e13b474d344f7659422c5a6577e86b31b"
        ],
        [
            "exact: real_ltrgtP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ger0P x : ger0_xor_lt0 x `|x| (x < 0) (0 <= x).",
            "VernacStartTheoremProof",
            "c1c38a8da9c8fa416e13048bc4c6d468cf9566c2"
        ],
        [
            "exact: real_ger0P.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler0P x : ler0_xor_gt0 x `|x| (0 < x) (x <= 0).",
            "VernacStartTheoremProof",
            "28135f1b6851b1b5dd322fcd2c704bf4e399dd86"
        ],
        [
            "exact: real_ler0P.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltrgt0P x : comparer0 x `|x| (0 == x) (x == 0) (x <= 0) (0 <= x) (x < 0) (x > 0).",
            "VernacStartTheoremProof",
            "850af5381930e8d1c4245271cb7e1fa619fd7497"
        ],
        [
            "exact: real_ltrgt0P.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neqr_lt x y : (x != y) = (x < y) || (y < x).",
            "VernacStartTheoremProof",
            "2d7056253fe264b09ae0996afe9592e7e202c965"
        ],
        [
            "exact: real_neqr_lt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_leLR x y z t : (x <= y -> z <= t) -> (y < x -> t < z) -> (x <= y) = (z <= t).",
            "VernacStartTheoremProof",
            "ad0513ab19dcf444d77daecd9f358cf2b8a9be96"
        ],
        [
            "by move=> *; apply/idP/idP; rewrite // !lerNgt; apply: contra.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_leRL x y z t : (x <= y -> z <= t) -> (y < x -> t < z) -> (z <= t) = (x <= y).",
            "VernacStartTheoremProof",
            "2e01b3ed92b3f311466f199f39eeedacf3114d57"
        ],
        [
            "by move=> *; symmetry; apply: eqr_leLR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_ltLR x y z t : (x < y -> z < t) -> (y <= x -> t <= z) -> (x < y) = (z < t).",
            "VernacStartTheoremProof",
            "003fb7e593250dea81cd3ba97b5ef32f6f916939"
        ],
        [
            "by move=> *; rewrite !ltrNge; congr negb; apply: eqr_leLR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_ltRL x y z t : (x < y -> z < t) -> (y <= x -> t <= z) -> (z < t) = (x < y).",
            "VernacStartTheoremProof",
            "38c5c55bac143f734f84ee72da6c45b58c22d3d2"
        ],
        [
            "by move=> *; symmetry; apply: eqr_ltLR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_lt0 x y : (x * y < 0) = [&& x != 0, y != 0 & (x < 0) (+) (y < 0)].",
            "VernacStartTheoremProof",
            "0c8a952ebc20b1d6a41a1371907907947c8fcc6b"
        ],
        [
            "have [x_gt0|x_lt0|->] /= := ltrgt0P x; last by rewrite mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite pmulr_rlt0 //; case: ltrgt0P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite nmulr_rlt0 //; case: ltrgt0P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neq0_mulr_lt0 x y : x != 0 -> y != 0 -> (x * y < 0) = (x < 0) (+) (y < 0).",
            "VernacStartTheoremProof",
            "90edbf0b6c92d42a4a7b5cec5b5ae559723d3f4f"
        ],
        [
            "by move=> x_neq0 y_neq0; rewrite mulr_lt0 x_neq0 y_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_sign_lt0 (b : bool) x : ((-1) ^+ b * x < 0) = (x != 0) && (b (+) (x < 0)%R).",
            "VernacStartTheoremProof",
            "f9133cedef3690a5cec6a9f8cc263699cb2226cc"
        ],
        [
            "by rewrite mulr_lt0 signr_lt0 signr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_sign_norm x : (-1) ^+ (x < 0)%R * `|x| = x.",
            "VernacStartTheoremProof",
            "4da8809a541e762b2d7b9d6cd27fc6fe93e62e67"
        ],
        [
            "by rewrite real_mulr_sign_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_Nsign_norm x : (-1) ^+ (0 < x)%R * `|x| = - x.",
            "VernacStartTheoremProof",
            "1c03ca5e11786ac1bb4c984aa8dd5bf621233593"
        ],
        [
            "by rewrite real_mulr_Nsign_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numEsign x : x = (-1) ^+ (x < 0)%R * `|x|.",
            "VernacStartTheoremProof",
            "5bc83f84be7fe8c59ce88c40d74ee91fd0d7a666"
        ],
        [
            "by rewrite -realEsign.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numNEsign x : -x = (-1) ^+ (0 < x)%R * `|x|.",
            "VernacStartTheoremProof",
            "41a97d54d41e641640fa0c6ae60e5b5fe6fb9db4"
        ],
        [
            "by rewrite -realNEsign.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normrEsign x : `|x| = (-1) ^+ (x < 0)%R * x.",
            "VernacStartTheoremProof",
            "c8466b8b3d05f26bb0823f047320f0bfaeaecee0"
        ],
        [
            "by rewrite -real_normrEsign.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RealDomainTheory.",
            "VernacEndSegment",
            "8f9cfeb681d8e15ec1ba441b88c28640ca39522d"
        ],
        [
            "Hint Resolve num_real : core.",
            "VernacHints",
            "1f2eb525c05a5760139b14ebdc993c82138aa0f4"
        ],
        [
            "Section RealDomainMonotony.",
            "VernacBeginSection",
            "2e61042863fb715e84a84a4035b9d19d4c362640"
        ],
        [
            "Variables (R : realDomainType) (R' : numDomainType) (D : pred R).",
            "VernacAssumption",
            "5a96a1333583900917e9b4cb733639b9daa505e7"
        ],
        [
            "Variables (f : R -> R') (f' : R -> nat).",
            "VernacAssumption",
            "238498433a77005cdbe1674aba0263ad81b05170"
        ],
        [
            "Implicit Types (m n p : nat) (x y z : R) (u v w : R').",
            "VernacReserve",
            "b40a001fa5da550ca9d94d0cabd390bf11d90d2f"
        ],
        [
            "Hint Resolve (@num_real R) : core.",
            "VernacHints",
            "bec8502972c93ca75aadad4ecc78ae9361e4689a"
        ],
        [
            "Lemma ler_mono : {homo f : x y / x < y} -> {mono f : x y / x <= y}.",
            "VernacStartTheoremProof",
            "5b7503986ed4e3a426c5a33433304453fba4bfdb"
        ],
        [
            "by move=> mf x y; apply: real_mono.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nmono : {homo f : x y /~ x < y} -> {mono f : x y /~ x <= y}.",
            "VernacStartTheoremProof",
            "4155d38d7d4fe050a07054fb2ccb8f5991d3e3f0"
        ],
        [
            "by move=> mf x y; apply: real_nmono.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_mono_in : {in D &, {homo f : x y / x < y}} -> {in D &, {mono f : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "b0d314694c05fd085ede23ba696e662c242358b7"
        ],
        [
            "by move=> mf x y Dx Dy; apply: (real_mono_in mf); rewrite ?inE ?Dx ?Dy /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_nmono_in : {in D &, {homo f : x y /~ x < y}} -> {in D &, {mono f : x y /~ x <= y}}.",
            "VernacStartTheoremProof",
            "09ab6e57b5008dfba317522e69894647baa3fc2d"
        ],
        [
            "by move=> mf x y Dx Dy; apply: (real_nmono_in mf); rewrite ?inE ?Dx ?Dy /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lern_mono : {homo f' : m n / m < n >-> (m < n)%N} -> {mono f' : m n / m <= n >-> (m <= n)%N}.",
            "VernacStartTheoremProof",
            "d97996a0134be0da8054746354ed672117021080"
        ],
        [
            "by move=> mf x y; apply: realn_mono.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lern_nmono : {homo f' : m n / n < m >-> (m < n)%N} -> {mono f' : m n / n <= m >-> (m <= n)%N}.",
            "VernacStartTheoremProof",
            "4e7289ff1fd9184712e00e25a4ccdb92d633ad02"
        ],
        [
            "by move=> mf x y; apply: realn_nmono.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lern_mono_in : {in D &, {homo f' : m n / m < n >-> (m < n)%N}} -> {in D &, {mono f' : m n / m <= n >-> (m <= n)%N}}.",
            "VernacStartTheoremProof",
            "88f2b34ebf7330cca29c87fe1d87a967cd0c306d"
        ],
        [
            "by move=> mf x y Dx Dy; apply: (realn_mono_in mf); rewrite ?inE ?Dx ?Dy /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lern_nmono_in : {in D &, {homo f' : m n / n < m >-> (m < n)%N}} -> {in D &, {mono f' : m n / n <= m >-> (m <= n)%N}}.",
            "VernacStartTheoremProof",
            "b904a5a44a8346655eee1c691ab65c5a0f8daffb"
        ],
        [
            "by move=> mf x y Dx Dy; apply: (realn_nmono_in mf); rewrite ?inE ?Dx ?Dy /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RealDomainMonotony.",
            "VernacEndSegment",
            "1e6b6fa914a9f69beef3f9a31c3171518019381a"
        ],
        [
            "Section RealDomainArgExtremum.",
            "VernacBeginSection",
            "193da3459e50b616edd2f997b543e1b4e51687c0"
        ],
        [
            "Context {R : realDomainType} {I : finType} (i0 : I).",
            "VernacContext",
            "390a84bff0287e3bdf990f6683d0d7a6afe43f84"
        ],
        [
            "Context (P : pred I) (F : I -> R) (Pi0 : P i0).",
            "VernacContext",
            "f2fd749669ad8613b1c9824da58c76fbb1752a88"
        ],
        [
            "Definition arg_minr := extremum <=%R i0 P F.",
            "VernacDefinition",
            "ab2dd3f4d07edf521bc856c8314a510b2914ee1e"
        ],
        [
            "Definition arg_maxr := extremum >=%R i0 P F.",
            "VernacDefinition",
            "31d09a713bc67a0605573b3eaa67b580663c4c5c"
        ],
        [
            "Lemma arg_minrP: extremum_spec <=%R P F arg_minr.",
            "VernacStartTheoremProof",
            "cc805ecea0132bf9e91c339a67b3e62dc6056d60"
        ],
        [
            "by apply: extremumP => //; [apply: ler_trans|apply: ler_total].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma arg_maxrP: extremum_spec >=%R P F arg_maxr.",
            "VernacStartTheoremProof",
            "2156eb8e8837cf7758339a1c115d8dde9dbea1ef"
        ],
        [
            "apply: extremumP => //; first exact: lerr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> ??? /(ler_trans _) le /le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> ??; apply: ler_total.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RealDomainArgExtremum.",
            "VernacEndSegment",
            "0a301ae308ed9538d453ccec2552814a7d7ace92"
        ],
        [
            "Notation \"[ 'arg' 'minr_' ( i < i0 | P ) F ]\" := (arg_minr i0 (fun i => P%B) (fun i => F)) (at level 0, i, i0 at level 10, format \"[ 'arg' 'minr_' ( i < i0 | P ) F ]\") : form_scope.",
            "VernacNotation",
            "ccbbe545ad239589303b57aa4dc329ad40009505"
        ],
        [
            "Notation \"[ 'arg' 'minr_' ( i < i0 'in' A ) F ]\" := [arg minr_(i < i0 | i \\in A) F] (at level 0, i, i0 at level 10, format \"[ 'arg' 'minr_' ( i < i0 'in' A ) F ]\") : form_scope.",
            "VernacNotation",
            "78644bcfaf1169351515cadc60bc1b98979ee151"
        ],
        [
            "Notation \"[ 'arg' 'minr_' ( i < i0 ) F ]\" := [arg minr_(i < i0 | true) F] (at level 0, i, i0 at level 10, format \"[ 'arg' 'minr_' ( i < i0 ) F ]\") : form_scope.",
            "VernacNotation",
            "e98ae1da9ab4e5fd3d2467a621b67e8c5049090b"
        ],
        [
            "Notation \"[ 'arg' 'maxr_' ( i > i0 | P ) F ]\" := (arg_maxr i0 (fun i => P%B) (fun i => F)) (at level 0, i, i0 at level 10, format \"[ 'arg' 'maxr_' ( i > i0 | P ) F ]\") : form_scope.",
            "VernacNotation",
            "961679544f9c27c9c2bf7441200b0b2ec3c1d9e6"
        ],
        [
            "Notation \"[ 'arg' 'maxr_' ( i > i0 'in' A ) F ]\" := [arg maxr_(i > i0 | i \\in A) F] (at level 0, i, i0 at level 10, format \"[ 'arg' 'maxr_' ( i > i0 'in' A ) F ]\") : form_scope.",
            "VernacNotation",
            "12427e88df99b7d8fccb4e24b8b376d838af13a3"
        ],
        [
            "Notation \"[ 'arg' 'maxr_' ( i > i0 ) F ]\" := [arg maxr_(i > i0 | true) F] (at level 0, i, i0 at level 10, format \"[ 'arg' 'maxr_' ( i > i0 ) F ]\") : form_scope.",
            "VernacNotation",
            "bf4a716bdbd3df1e24043dba0612d5ca610335b4"
        ],
        [
            "Section RealDomainOperations.",
            "VernacBeginSection",
            "f4f063c1af868ed3fb2e71448b4d66fe69a4ba9b"
        ],
        [
            "Variable R : realDomainType.",
            "VernacAssumption",
            "0693f35b06db2e27c7cf58627c33e70282f912ba"
        ],
        [
            "Implicit Types x y z t : R.",
            "VernacReserve",
            "301ab45a59a3df7a22e11e8d5888ade83e78783d"
        ],
        [
            "Hint Resolve (@num_real R) : core.",
            "VernacHints",
            "bec8502972c93ca75aadad4ecc78ae9361e4689a"
        ],
        [
            "Lemma sgr_cp0 x : ((sg x == 1) = (0 < x)) * ((sg x == -1) = (x < 0)) * ((sg x == 0) = (x == 0)).",
            "VernacStartTheoremProof",
            "f2d371a001c3e6d0a1e27cd1dfcf29441ef30f67"
        ],
        [
            "rewrite -[1]/((-1) ^+ false) -signrN lt0r lerNgt sgr_def.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (x =P 0) => [-> | _]; first by rewrite !(eq_sym 0) !signr_eq0 ltrr eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !(inj_eq signr_inj) eqb_id eqbF_neg signr_eq0 //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant sgr_val x : R -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> bool -> R -> Set := | SgrNull of x = 0 : sgr_val x 0 true true true true false false true false false true false false 0 | SgrPos of x > 0 : sgr_val x x false false true false false true false false true false false true 1 | SgrNeg of x < 0 : sgr_val x (- x) false true false false true false false true false false true false (-1).",
            "VernacInductive",
            "56460d8531d8e324d3b5d0979fd5453444769c64"
        ],
        [
            "Lemma sgrP x : sgr_val x `|x| (0 == x) (x <= 0) (0 <= x) (x == 0) (x < 0) (0 < x) (0 == sg x) (-1 == sg x) (1 == sg x) (sg x == 0) (sg x == -1) (sg x == 1) (sg x).",
            "VernacStartTheoremProof",
            "57c85d480fc0bb14501e60bc7a7b38e6c3b3c0b2"
        ],
        [
            "by rewrite ![_ == sg _]eq_sym !sgr_cp0 /sg; case: ltrgt0P; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normrEsg x : `|x| = sg x * x.",
            "VernacStartTheoremProof",
            "ad885300d18f9cc9bdb0c99d22e5d43170bee0d7"
        ],
        [
            "by case: sgrP; rewrite ?(mul0r, mul1r, mulN1r).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma numEsg x : x = sg x * `|x|.",
            "VernacStartTheoremProof",
            "93c8a9807d73c6665de7cc6eaa92d2afd3918955"
        ],
        [
            "by case: sgrP; rewrite !(mul1r, mul0r, mulrNN).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulr_sg_norm x : sg x * `|x| = x.",
            "VernacStartTheoremProof",
            "bd6a9011c2fd9eed44cbeffbd25e215a6bf5f5c5"
        ],
        [
            "by rewrite -numEsg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgrM x y : sg (x * y) = sg x * sg y.",
            "VernacStartTheoremProof",
            "54b0f169bedd8a1799bd8d616da2b521ce766a15"
        ],
        [
            "rewrite !sgr_def mulr_lt0 andbA mulrnAr mulrnAl -mulrnA mulnb -negb_or mulf_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (~~ _) => //; rewrite signr_addb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgrN x : sg (- x) = - sg x.",
            "VernacStartTheoremProof",
            "c7ab05de292e3efa1df536afc4ad95c126e8d8c0"
        ],
        [
            "by rewrite -mulrN1 sgrM sgrN1 mulrN1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgrX n x : sg (x ^+ n) = (sg x) ^+ n.",
            "VernacStartTheoremProof",
            "50d3ed26d5fd90679343a29fcc643f30533e0ab3"
        ],
        [
            "by elim: n => [|n IHn]; rewrite ?sgr1 // !exprS sgrM IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_smul x y : sg (sg x * y) = sg x * sg y.",
            "VernacStartTheoremProof",
            "089bd788c84f6a653ce41d63a29f9050717b9b52"
        ],
        [
            "by rewrite sgrM sgr_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_gt0 x : (sg x > 0) = (x > 0).",
            "VernacStartTheoremProof",
            "a9311e26675c316cc922f6d9da24f8b4459c39f9"
        ],
        [
            "by rewrite -sgr_cp0 sgr_id sgr_cp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgr_ge0 x : (sgr x >= 0) = (x >= 0).",
            "VernacStartTheoremProof",
            "2f5a42aab82bfeeba31fc477ee66c51e48e9a744"
        ],
        [
            "by rewrite !lerNgt sgr_lt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_norm x : (x <= `|x|).",
            "VernacStartTheoremProof",
            "ed11a2ed0f01614b3ed5d210d929c3200f3c04c5"
        ],
        [
            "exact: real_ler_norm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_norml x y : (`|x| <= y) = (- y <= x <= y).",
            "VernacStartTheoremProof",
            "369bbf06c8a2aad228bfee6340433e5f824ac115"
        ],
        [
            "exact: real_ler_norml.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_normlP x y : reflect ((- x <= y) * (x <= y)) (`|x| <= y).",
            "VernacStartTheoremProof",
            "c04ee33fcb404458d1ab8077627db6245ed64924"
        ],
        [
            "exact: real_ler_normlP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments ler_normlP {x y}.",
            "VernacArguments",
            "b2289a14294e64aaa993996d16f474259bde6157"
        ],
        [
            "Lemma eqr_norml x y : (`|x| == y) = ((x == y) || (x == -y)) && (0 <= y).",
            "VernacStartTheoremProof",
            "adc8f1dcef75de66e9c7c945cfe3e88f82f0bef3"
        ],
        [
            "exact: real_eqr_norml.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_norm2 x y : (`|x| == `|y|) = (x == y) || (x == -y).",
            "VernacStartTheoremProof",
            "eb676508fa067ac03d9b8f548d7c52aadeddf192"
        ],
        [
            "exact: real_eqr_norm2.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_norml x y : (`|x| < y) = (- y < x < y).",
            "VernacStartTheoremProof",
            "33fff973ec8302bf131de964810ca88aa91d7b0c"
        ],
        [
            "exact: real_ltr_norml.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_norml := (ler_norml, ltr_norml).",
            "VernacDefinition",
            "8acfd6fd1d16ddf955ca499b0f4bf9b93590e967"
        ],
        [
            "Lemma ltr_normlP x y : reflect ((-x < y) * (x < y)) (`|x| < y).",
            "VernacStartTheoremProof",
            "c1fea0d26b76eb1e1bb06210f058a4afee0c1eea"
        ],
        [
            "exact: real_ltr_normlP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments ltr_normlP {x y}.",
            "VernacArguments",
            "bb5e3a2616b99936fca12137a803267c0f9fb6a1"
        ],
        [
            "Lemma ler_normr x y : (x <= `|y|) = (x <= y) || (x <= - y).",
            "VernacStartTheoremProof",
            "f4d29706639c75e058b0116693007579dbd53de8"
        ],
        [
            "by rewrite lerNgt ltr_norml negb_and -!lerNgt orbC ler_oppr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_normr x y : (x < `|y|) = (x < y) || (x < - y).",
            "VernacStartTheoremProof",
            "a40efaf9d6e4ae2cb77bdb9fee867217e12571d7"
        ],
        [
            "by rewrite ltrNge ler_norml negb_and -!ltrNge orbC ltr_oppr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_normr := (ler_normr, ltr_normr).",
            "VernacDefinition",
            "2b3f97e175d3451c6207dbfbf8767c1ff2dcacf5"
        ],
        [
            "Lemma ler_distl x y e : (`|x - y| <= e) = (y - e <= x <= y + e).",
            "VernacStartTheoremProof",
            "5517d81bd4b7a18f078043ff356180819df0c39b"
        ],
        [
            "by rewrite lter_norml !lter_sub_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_distl x y e : (`|x - y| < e) = (y - e < x < y + e).",
            "VernacStartTheoremProof",
            "b48636adf0b085d63296ffbd52f1f8d8d53562b0"
        ],
        [
            "by rewrite lter_norml !lter_sub_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_distl := (ler_distl, ltr_distl).",
            "VernacDefinition",
            "7d25fa2d92cadf9237528f4ece664c00e7a26708"
        ],
        [
            "Lemma exprn_even_ge0 n x : ~~ odd n -> 0 <= x ^+ n.",
            "VernacStartTheoremProof",
            "7ce359cb268f0b6fd76e3a4aca9b33c34f925f2f"
        ],
        [
            "by move=> even_n; rewrite real_exprn_even_ge0 ?num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_even_gt0 n x : ~~ odd n -> (0 < x ^+ n) = (n == 0)%N || (x != 0).",
            "VernacStartTheoremProof",
            "d8f0faff4695dd27959f47ca738cee9d47dfa387"
        ],
        [
            "by move=> even_n; rewrite real_exprn_even_gt0 ?num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_even_le0 n x : ~~ odd n -> (x ^+ n <= 0) = (n != 0%N) && (x == 0).",
            "VernacStartTheoremProof",
            "ba4fd7fcf496b3199a5fb7de11a2168ff91477ea"
        ],
        [
            "by move=> even_n; rewrite real_exprn_even_le0 ?num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_even_lt0 n x : ~~ odd n -> (x ^+ n < 0) = false.",
            "VernacStartTheoremProof",
            "50165f6d6c65e93a15023351d23b582074caf830"
        ],
        [
            "by move=> even_n; rewrite real_exprn_even_lt0 ?num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_odd_ge0 n x : odd n -> (0 <= x ^+ n) = (0 <= x).",
            "VernacStartTheoremProof",
            "ee56b53831652340abf41073f128db1eab2801f5"
        ],
        [
            "by move=> even_n; rewrite real_exprn_odd_ge0 ?num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_odd_gt0 n x : odd n -> (0 < x ^+ n) = (0 < x).",
            "VernacStartTheoremProof",
            "098c0ccf328a5f7e5e84e64d04c6ed602834013d"
        ],
        [
            "by move=> even_n; rewrite real_exprn_odd_gt0 ?num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_odd_le0 n x : odd n -> (x ^+ n <= 0) = (x <= 0).",
            "VernacStartTheoremProof",
            "42b50c9ae2053dbcf4c64dce12e6dc97bf11583d"
        ],
        [
            "by move=> even_n; rewrite real_exprn_odd_le0 ?num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprn_odd_lt0 n x : odd n -> (x ^+ n < 0) = (x < 0).",
            "VernacStartTheoremProof",
            "f2af508b866ea4a16658532f06d7c77bf4034e33"
        ],
        [
            "by move=> even_n; rewrite real_exprn_odd_lt0 ?num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqr_ge0 x : 0 <= x ^+ 2.",
            "VernacStartTheoremProof",
            "80613b1c4c1a8940f5d5b80fc8de91e145a2e09f"
        ],
        [
            "by rewrite exprn_even_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqr_norm_eq1 x : (x ^+ 2 == 1) = (`|x| == 1).",
            "VernacStartTheoremProof",
            "8ec13734dd9b82c89e10ca6834e0c0a4bfd032d9"
        ],
        [
            "by rewrite sqrf_eq1 eqr_norml ler01 andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_mean_square_scaled x y : x * y *+ 2 <= x ^+ 2 + y ^+ 2 ?= iff (x == y).",
            "VernacStartTheoremProof",
            "00e0a17da788d9be1496b5f1c9c3828639fd4b51"
        ],
        [
            "exact: real_lerif_mean_square_scaled.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_AGM2_scaled x y : x * y *+ 4 <= (x + y) ^+ 2 ?= iff (x == y).",
            "VernacStartTheoremProof",
            "a1eedc28c73088834f1aece5d6c00cacd97b0333"
        ],
        [
            "exact: real_lerif_AGM2_scaled.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section MinMax.",
            "VernacBeginSection",
            "950f61320ac36134e7ce8d22c077f4fea96abcda"
        ],
        [
            "Lemma minrC : @commutative R R min.",
            "VernacStartTheoremProof",
            "621e9564e50d271f47e20aaf90bffad82a3ee35b"
        ],
        [
            "by move=> x y; rewrite /min; case: ltrgtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minrr : @idempotent R min.",
            "VernacStartTheoremProof",
            "2fc5f8b3a030775a225af6eabbd7279df3fdf567"
        ],
        [
            "by move=> x; rewrite /min if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minr_l x y : x <= y -> min x y = x.",
            "VernacStartTheoremProof",
            "576254c691cea2c476851d1fdfb2c830659f817c"
        ],
        [
            "by rewrite /minr => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minr_r x y : y <= x -> min x y = y.",
            "VernacStartTheoremProof",
            "25d2e44a07302288c01029b5d9bf86ba6c4158d3"
        ],
        [
            "by move/minr_l; rewrite minrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxrC : @commutative R R max.",
            "VernacStartTheoremProof",
            "c64ff73def7308184a5b29c67ced4e9f6ac845d6"
        ],
        [
            "by move=> x y; rewrite /maxr; case: ltrgtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxrr : @idempotent R max.",
            "VernacStartTheoremProof",
            "85d938c51e621af8254f5f4963c64c77ee7bb8a1"
        ],
        [
            "by move=> x; rewrite /max if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxr_l x y : y <= x -> max x y = x.",
            "VernacStartTheoremProof",
            "dfd827cbfc7c47d35c684237b2347d95c16259d3"
        ],
        [
            "by move=> hxy; rewrite /max hxy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxr_r x y : x <= y -> max x y = y.",
            "VernacStartTheoremProof",
            "bdd30fa54a355c706db38e28b4c968b2bc763f71"
        ],
        [
            "by move=> hxy; rewrite maxrC maxr_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addr_min_max x y : min x y + max x y = x + y.",
            "VernacStartTheoremProof",
            "b35d3a817bbd4e8be070b6964879fc029312d63e"
        ],
        [
            "case: (lerP x y)=> hxy; first by rewrite maxr_r ?minr_l.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite maxr_l ?minr_r ?ltrW // addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addr_max_min x y : max x y + min x y = x + y.",
            "VernacStartTheoremProof",
            "8f8eafe58cbd8096ee68d76cdc41b1729e266371"
        ],
        [
            "by rewrite addrC addr_min_max.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minr_to_max x y : min x y = x + y - max x y.",
            "VernacStartTheoremProof",
            "5a2355fdc1aa5270a31e4b9bb463381a043ce623"
        ],
        [
            "by rewrite -[x + y]addr_min_max addrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxr_to_min x y : max x y = x + y - min x y.",
            "VernacStartTheoremProof",
            "f9d157821658bd260a914d496ef2ea1d56057aea"
        ],
        [
            "by rewrite -[x + y]addr_max_min addrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minrA x y z : min x (min y z) = min (min x y) z.",
            "VernacStartTheoremProof",
            "7dfafcf3e505aac2d5037e28f0f456354970fe97"
        ],
        [
            "rewrite /min; case: (lerP y z) => [hyz | /ltrW hyz].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: lerP => hxy; rewrite ?hyz // (@ler_trans _ y).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: lerP=> hxz; first by rewrite !(ler_trans hxz).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (lerP x y)=> hxy; first by rewrite lerNgt hxz.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: ltrgtP hyz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minrCA : @left_commutative R R min.",
            "VernacStartTheoremProof",
            "8779b46bf42b8f946b47980f9849e5a56b832b90"
        ],
        [
            "by move=> x y z; rewrite !minrA [minr x y]minrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minrAC : @right_commutative R R min.",
            "VernacStartTheoremProof",
            "064a4b8b0e5b4ef9cbed6ff6403dc15d55248efc"
        ],
        [
            "by move=> x y z; rewrite -!minrA [minr y z]minrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant minr_spec x y : bool -> bool -> R -> Type := | Minr_r of x <= y : minr_spec x y true false x | Minr_l of y < x : minr_spec x y false true y.",
            "VernacInductive",
            "5c5aca8386287b5ea716d296a8aafeaf5f16d917"
        ],
        [
            "Lemma minrP x y : minr_spec x y (x <= y) (y < x) (min x y).",
            "VernacStartTheoremProof",
            "67f756e7b8c512c2fad4964c12bebdb531df4fcd"
        ],
        [
            "case: lerP=> hxy; first by rewrite minr_l //; constructor.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite minr_r 1?ltrW //; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_max x y : - max x y = min (- x) (- y).",
            "VernacStartTheoremProof",
            "b80233fbbdecf1984e10dd1e5e0e0e944acc35c8"
        ],
        [
            "case: minrP; rewrite lter_opp2 => hxy; first by rewrite maxr_l.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite maxr_r // ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppr_min x y : - min x y = max (- x) (- y).",
            "VernacStartTheoremProof",
            "0791034b38635857d0c300ccd740b737ecdb698c"
        ],
        [
            "by rewrite -[maxr _ _]opprK oppr_max !opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxrA x y z : max x (max y z) = max (max x y) z.",
            "VernacStartTheoremProof",
            "db5f183d6a21e3efede53b673b5c8682aeea6728"
        ],
        [
            "by apply/eqP; rewrite -eqr_opp !oppr_max minrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxrCA : @left_commutative R R max.",
            "VernacStartTheoremProof",
            "53a9af6566ed61710cef6fbd5ededa13be3a8103"
        ],
        [
            "by move=> x y z; rewrite !maxrA [maxr x y]maxrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxrAC : @right_commutative R R max.",
            "VernacStartTheoremProof",
            "caae3abc7c2e05b5d4a2a430a3aaf376973b641c"
        ],
        [
            "by move=> x y z; rewrite -!maxrA [maxr y z]maxrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant maxr_spec x y : bool -> bool -> R -> Type := | Maxr_r of y <= x : maxr_spec x y true false x | Maxr_l of x < y : maxr_spec x y false true y.",
            "VernacInductive",
            "4d5eb10507047cf45570de73e90c774985c92f3d"
        ],
        [
            "Lemma maxrP x y : maxr_spec x y (y <= x) (x < y) (maxr x y).",
            "VernacStartTheoremProof",
            "4b4d26fddf037447e3527db2cbd84f02f8f54b1f"
        ],
        [
            "case: lerP => hxy; first by rewrite maxr_l //; constructor.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite maxr_r 1?ltrW //; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_minl x y : (min x y == x) = (x <= y).",
            "VernacStartTheoremProof",
            "bbbe5cf4433a459cb4efd1325f0bbe5c9e1bd2e2"
        ],
        [
            "by case: minrP=> hxy; rewrite ?eqxx // ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_minr x y : (min x y == y) = (y <= x).",
            "VernacStartTheoremProof",
            "b79401dacf721df1167de64668fe85ce39e6099b"
        ],
        [
            "by rewrite minrC eqr_minl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_maxl x y : (max x y == x) = (y <= x).",
            "VernacStartTheoremProof",
            "3bcab037742771cf3e5e72ad8662764f19cd90e1"
        ],
        [
            "by case: maxrP=> hxy; rewrite ?eqxx // eq_sym ltr_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_maxr x y : (max x y == y) = (x <= y).",
            "VernacStartTheoremProof",
            "849192ad1a61986bdfa7650d63351778143863f8"
        ],
        [
            "by rewrite maxrC eqr_maxl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_minr x y z : (x <= min y z) = (x <= y) && (x <= z).",
            "VernacStartTheoremProof",
            "5cac17e4e2f782939a1006855909d08ad7e45b88"
        ],
        [
            "case: minrP=> hyz.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: lerP=> hxy //; rewrite (ler_trans _ hyz).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: lerP=> hxz; rewrite andbC // (ler_trans hxz) // ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_minl x y z : (min y z <= x) = (y <= x) || (z <= x).",
            "VernacStartTheoremProof",
            "d604030c620fe18ed2224cfe27eb954c10fb8a82"
        ],
        [
            "case: minrP => hyz.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: lerP => hyx //=; symmetry; apply: negbTE.",
            "VernacExtend",
            "6d3c43c6fb244d064a2402b9c6b87980e80a6bff"
        ],
        [
            "by rewrite -ltrNge (@ltr_le_trans _ y).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: lerP => hzx; rewrite orbC //=; symmetry; apply: negbTE.",
            "VernacExtend",
            "115938d5cdd0dcd0885c80f02fe0c9385ac5c456"
        ],
        [
            "by rewrite -ltrNge (@ltr_trans _ z).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_maxr x y z : (x <= max y z) = (x <= y) || (x <= z).",
            "VernacStartTheoremProof",
            "64cc8b520644d597dca24ab75337069a4465fc76"
        ],
        [
            "by rewrite -lter_opp2 oppr_max ler_minl !ler_opp2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_maxl x y z : (max y z <= x) = (y <= x) && (z <= x).",
            "VernacStartTheoremProof",
            "21a04bd9f5eeb5513d7f20ddc2d725f94966b61e"
        ],
        [
            "by rewrite -lter_opp2 oppr_max ler_minr !ler_opp2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_minr x y z : (x < min y z) = (x < y) && (x < z).",
            "VernacStartTheoremProof",
            "5df416bafcffcbe08877254861d9558c936aa745"
        ],
        [
            "by rewrite !ltrNge ler_minl negb_or.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_minl x y z : (min y z < x) = (y < x) || (z < x).",
            "VernacStartTheoremProof",
            "528d34aed04c1054cec600cccf192216adc92b74"
        ],
        [
            "by rewrite !ltrNge ler_minr negb_and.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_maxr x y z : (x < max y z) = (x < y) || (x < z).",
            "VernacStartTheoremProof",
            "519c83e905cae7e6cbd0a1f5b2c622007ffd5585"
        ],
        [
            "by rewrite !ltrNge ler_maxl negb_and.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_maxl x y z : (max y z < x) = (y < x) && (z < x).",
            "VernacStartTheoremProof",
            "8ae8ced003c9001f206f478f03a4a4ab655675d1"
        ],
        [
            "by rewrite !ltrNge ler_maxr negb_or.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lter_minr := (ler_minr, ltr_minr).",
            "VernacDefinition",
            "849c477793dac5d514233d383c897310534b3511"
        ],
        [
            "Definition lter_minl := (ler_minl, ltr_minl).",
            "VernacDefinition",
            "5aab0558ba9d9571f036eb481c9e7c94b5fb4682"
        ],
        [
            "Definition lter_maxr := (ler_maxr, ltr_maxr).",
            "VernacDefinition",
            "4ae68366594349dd3e825549b3dc540785ec0cce"
        ],
        [
            "Definition lter_maxl := (ler_maxl, ltr_maxl).",
            "VernacDefinition",
            "5de117c0a7abf61e2ff37d7750eaf419abebf105"
        ],
        [
            "Lemma addr_minl : @left_distributive R R +%R min.",
            "VernacStartTheoremProof",
            "0ea365f6baf935b9601f8352c4aaeca152f9955d"
        ],
        [
            "move=> x y z; case: minrP=> hxy; first by rewrite minr_l // ler_add2r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite minr_r // ltrW // ltr_add2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addr_minr : @right_distributive R R +%R min.",
            "VernacStartTheoremProof",
            "86e7dd1588486c38e02170916456077aa817aabb"
        ],
        [
            "move=> x y z; case: minrP=> hxy; first by rewrite minr_l // ler_add2l.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite minr_r // ltrW // ltr_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addr_maxl : @left_distributive R R +%R max.",
            "VernacStartTheoremProof",
            "b26061cba20370790194712518f58fd13c09b040"
        ],
        [
            "move=> x y z; rewrite -[_ + _]opprK opprD oppr_max.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite addr_minl -!opprD oppr_min !opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addr_maxr : @right_distributive R R +%R max.",
            "VernacStartTheoremProof",
            "d2479e89f323da5ace4fd1f22c80a9ef89e73ad8"
        ],
        [
            "move=> x y z; rewrite -[_ + _]opprK opprD oppr_max.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite addr_minr -!opprD oppr_min !opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minrK x y : max (min x y) x = x.",
            "VernacStartTheoremProof",
            "60bc2a931acec204b873cb7bd68b8bec05e999a5"
        ],
        [
            "by case: minrP => hxy; rewrite ?maxrr ?maxr_r // ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minKr x y : min y (max x y) = y.",
            "VernacStartTheoremProof",
            "ebc9d75b57cd82e3534f5eb446b9f6ef82013a64"
        ],
        [
            "by case: maxrP => hxy; rewrite ?minrr ?minr_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxr_minl : @left_distributive R R max min.",
            "VernacStartTheoremProof",
            "9a0a01575936c637820a0417e0c7632c424feb90"
        ],
        [
            "move=> x y z; case: minrP => hxy.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by case: maxrP => hm; rewrite minr_l // ler_maxr (hxy, lerr) ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: maxrP => hyz; rewrite minr_r // ler_maxr (ltrW hxy, lerr) ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxr_minr : @right_distributive R R max min.",
            "VernacStartTheoremProof",
            "20d3253c21d819071d0b4d1d7dcd132a415be1af"
        ],
        [
            "by move=> x y z; rewrite maxrC maxr_minl ![_ _ x]maxrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minr_maxl : @left_distributive R R min max.",
            "VernacStartTheoremProof",
            "b6f1036b9ac4aa99e08b367496beb2276b3e951c"
        ],
        [
            "move=> x y z; rewrite -[min _ _]opprK !oppr_min [- max x y]oppr_max.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite maxr_minl !(oppr_max, oppr_min, opprK).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minr_maxr : @right_distributive R R min max.",
            "VernacStartTheoremProof",
            "616dcd69da81dcaedc0bdde3071e909d70adacc7"
        ],
        [
            "by move=> x y z; rewrite minrC minr_maxl ![_ _ x]minrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minr_pmulr x y z : 0 <= x -> x * min y z = min (x * y) (x * z).",
            "VernacStartTheoremProof",
            "6bede18d2e6df239970a3b30305c065d8997a7e8"
        ],
        [
            "case: sgrP=> // hx _; first by rewrite hx !mul0r minrr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: minrP=> hyz; first by rewrite minr_l // ler_pmul2l.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite minr_r // ltrW // ltr_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minr_nmulr x y z : x <= 0 -> x * min y z = max (x * y) (x * z).",
            "VernacStartTheoremProof",
            "509ee4e533e947ff2202900c83aef15b117bc7d1"
        ],
        [
            "move=> hx; rewrite -[_ * _]opprK -mulNr minr_pmulr ?oppr_cp0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite oppr_min !mulNr !opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxr_pmulr x y z : 0 <= x -> x * max y z = max (x * y) (x * z).",
            "VernacStartTheoremProof",
            "c5205f48f23dedd9764e33980217e7294417f4d4"
        ],
        [
            "move=> hx; rewrite -[_ * _]opprK -mulrN oppr_max minr_pmulr //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite oppr_min !mulrN !opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxr_nmulr x y z : x <= 0 -> x * max y z = min (x * y) (x * z).",
            "VernacStartTheoremProof",
            "4c2e64b03c6ab80138919d05d904f17c4831ad51"
        ],
        [
            "move=> hx; rewrite -[_ * _]opprK -mulrN oppr_max minr_nmulr //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite oppr_max !mulrN !opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minr_pmull x y z : 0 <= x -> min y z * x = min (y * x) (z * x).",
            "VernacStartTheoremProof",
            "65944171f959d8ac5cf1ed3e53c3bc4ad230fa1c"
        ],
        [
            "by move=> *; rewrite mulrC minr_pmulr // ![_ * x]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minr_nmull x y z : x <= 0 -> min y z * x = max (y * x) (z * x).",
            "VernacStartTheoremProof",
            "324c995f1bd1f29b304e1a17b93411d9cd9cadbe"
        ],
        [
            "by move=> *; rewrite mulrC minr_nmulr // ![_ * x]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxr_pmull x y z : 0 <= x -> max y z * x = max (y * x) (z * x).",
            "VernacStartTheoremProof",
            "5b2459da52491177e60e18505a61ada4048942bb"
        ],
        [
            "by move=> *; rewrite mulrC maxr_pmulr // ![_ * x]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxr_nmull x y z : x <= 0 -> max y z * x = min (y * x) (z * x).",
            "VernacStartTheoremProof",
            "dcd45dacde28d4fa6d96bd6df723c2ea8aad847c"
        ],
        [
            "by move=> *; rewrite mulrC maxr_nmulr // ![_ * x]mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxrN x : max x (- x) = `|x|.",
            "VernacStartTheoremProof",
            "3125035532d9146cacd98607f4bc46cba35b76ab"
        ],
        [
            "case: ger0P=> hx; first by rewrite maxr_l // ge0_cp //.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite maxr_r // le0_cp // ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxNr x : max (- x) x = `|x|.",
            "VernacStartTheoremProof",
            "7a9e0388f5c652e55d34f115c106e5701ea35c3d"
        ],
        [
            "by rewrite maxrC maxrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minrN x : min x (- x) = - `|x|.",
            "VernacStartTheoremProof",
            "7bf98dabe1fe02bf17ba758a703e0e1982498d87"
        ],
        [
            "by rewrite -[minr _ _]opprK oppr_min opprK maxNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minNr x : min (- x) x = - `|x|.",
            "VernacStartTheoremProof",
            "84c1d1ad2b4b87cb766009ee04ec1d35ee798ffc"
        ],
        [
            "by rewrite -[minr _ _]opprK oppr_min opprK maxrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MinMax.",
            "VernacEndSegment",
            "d8650f137f86b3589520bd3b5074185b9eab132e"
        ],
        [
            "Section PolyBounds.",
            "VernacBeginSection",
            "db75e293120366160f0dab6cd26ac9cc2272f527"
        ],
        [
            "Variable p : {poly R}.",
            "VernacAssumption",
            "c9abc5218bfba365320ba4a13f73e72baa4534aa"
        ],
        [
            "Lemma poly_itv_bound a b : {ub | forall x, a <= x <= b -> `|p.[x]| <= ub}.",
            "VernacStartTheoremProof",
            "f94bec7c728aee97d84df0e91e84587b6187a0b7"
        ],
        [
            "have [ub le_p_ub] := poly_disk_bound p (Num.max `|a| `|b|).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists ub => x /andP[le_a_x le_x_b]; rewrite le_p_ub // ler_maxr !ler_normr.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by have [_|_] := ler0P x; rewrite ?ler_opp2 ?le_a_x ?le_x_b orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monic_Cauchy_bound : p \\is monic -> {b | forall x, x >= b -> p.[x] > 0}.",
            "VernacStartTheoremProof",
            "55f7563d187b37c3057326a1fa54cec9d81dd9f5"
        ],
        [
            "move/monicP=> mon_p; pose n := (size p - 2)%N.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have [p_le1 | p_gt1] := leqP (size p) 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists 0 => x _; rewrite (size1_polyC p_le1) hornerC.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite -[p`_0]lead_coefC -size1_polyC // mon_p ltr01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose lb := \\sum_(j < n.+1) `|p`_j|; exists (lb + 1) => x le_ub_x.",
            "VernacExtend",
            "801cf49622ecacdc7aba5baf9428af93fd6cae3f"
        ],
        [
            "have x_ge1: 1 <= x; last have x_gt0 := ltr_le_trans ltr01 x_ge1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(ler_add2l lb) ler_paddl ?sumr_ge0 // => j _; apply: normr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite horner_coef -(subnK p_gt1) -/n addnS big_ord_recr /= addn1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [in p`__]subnSK // subn1 -lead_coefE mon_p mul1r -ltr_subl_addl sub0r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: ler_lt_trans (_ : lb * x ^+ n < _); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite exprS ltr_pmul2r ?exprn_gt0 ?(ltr_le_trans ltr01) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(ltr_add2r 1) ltr_spaddr ?ltr01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -sumrN mulr_suml ler_sum // => j _; apply: ler_trans (ler_norm _) _.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "rewrite normrN normrM ler_wpmul2l ?normr_ge0 // normrX.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ger0_norm ?(ltrW x_gt0) // ler_weexpn2l ?leq_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyBounds.",
            "VernacEndSegment",
            "6f48ba3b6f593143857a7f23259cd0f7eb585409"
        ],
        [
            "End RealDomainOperations.",
            "VernacEndSegment",
            "70a779a737d4cb7ab711117e322e6bbf8bb4376e"
        ],
        [
            "Section RealField.",
            "VernacBeginSection",
            "b0271f3ee586a271506c68f61c843b9e6cd39e24"
        ],
        [
            "Variables (F : realFieldType) (x y : F).",
            "VernacAssumption",
            "d82c4937eb1e74aa1cfec1ffdd98b92d470ab493"
        ],
        [
            "Lemma lerif_mean_square : x * y <= (x ^+ 2 + y ^+ 2) / 2%:R ?= iff (x == y).",
            "VernacStartTheoremProof",
            "9a8469b57e608b7b85a04781db12f7bf3036021d"
        ],
        [
            "by apply: real_lerif_mean_square; apply: num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_AGM2 : x * y <= ((x + y) / 2%:R)^+ 2 ?= iff (x == y).",
            "VernacStartTheoremProof",
            "dac585693925ee305210059a914b545a225fa574"
        ],
        [
            "by apply: real_lerif_AGM2; apply: num_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RealField.",
            "VernacEndSegment",
            "e7523b5e2f923f3a9faf79cdefd1a1f7f7f446e3"
        ],
        [
            "Section ArchimedeanFieldTheory.",
            "VernacBeginSection",
            "d62b3995717ddee4a40246a0fe20bc5ed219165a"
        ],
        [
            "Variables (F : archiFieldType) (x : F).",
            "VernacAssumption",
            "434ace2e540fc790be6458e70a327d2863552fa7"
        ],
        [
            "Lemma archi_boundP : 0 <= x -> x < (bound x)%:R.",
            "VernacStartTheoremProof",
            "91d96f975b9d6186c7bd10e612c9421853a0e799"
        ],
        [
            "by move/ger0_norm=> {1}<-; rewrite /bound; case: (sigW _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upper_nthrootP i : (bound x <= i)%N -> x < 2%:R ^+ i.",
            "VernacStartTheoremProof",
            "592ed61a9c4246f566c45d166903797d44a10bfb"
        ],
        [
            "rewrite /bound; case: (sigW _) => /= b le_x_b le_b_i.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply: ler_lt_trans (ler_norm x) (ltr_trans le_x_b _ ).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -natrX ltr_nat (leq_ltn_trans le_b_i) // ltn_expl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ArchimedeanFieldTheory.",
            "VernacEndSegment",
            "a6f4ba46f90212ead6951659235af090bae35993"
        ],
        [
            "Section RealClosedFieldTheory.",
            "VernacBeginSection",
            "cd91421f4b928977a052e25f30a0d58941c481d7"
        ],
        [
            "Variable R : rcfType.",
            "VernacAssumption",
            "bd512f1b0cfd6e4a5aa32d8eebc4ade5a45de144"
        ],
        [
            "Implicit Types a x y : R.",
            "VernacReserve",
            "e77dd9108dd404812eedf86e56c02b2cea0254f6"
        ],
        [
            "Lemma poly_ivt : real_closed_axiom R.",
            "VernacStartTheoremProof",
            "bdef75f0e970cb7aae3ac0dda045f2268c8db55e"
        ],
        [
            "exact: poly_ivt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtr_ge0 a : 0 <= sqrt a.",
            "VernacStartTheoremProof",
            "2c5adaa19300c1fe8fe6215380b58c01347798f0"
        ],
        [
            "by rewrite /sqrt; case: (sig2W _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve sqrtr_ge0 : core.",
            "VernacHints",
            "ab7cad26bca47a09436ad2a54140e199f17d63ea"
        ],
        [
            "Lemma sqr_sqrtr a : 0 <= a -> sqrt a ^+ 2 = a.",
            "VernacStartTheoremProof",
            "34f34b301208020fe4237c8f04634582d1de9361"
        ],
        [
            "by rewrite /sqrt => a_ge0; case: (sig2W _) => /= x _; rewrite a_ge0 => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler0_sqrtr a : a <= 0 -> sqrt a = 0.",
            "VernacStartTheoremProof",
            "1ae10f2b3d08d0ee89eccc0690e0a00c2b51d8de"
        ],
        [
            "rewrite /sqrtr; case: (sig2W _) => x /= _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by have [//|_ /eqP//|->] := ltrgt0P a; rewrite mulf_eq0 orbb => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr0_sqrtr a : a < 0 -> sqrt a = 0.",
            "VernacStartTheoremProof",
            "81fbb7cf42a49ce47d6079bc4aeef0a72ce8e646"
        ],
        [
            "by move=> /ltrW; apply: ler0_sqrtr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant sqrtr_spec a : R -> bool -> bool -> R -> Type := | IsNoSqrtr of a < 0 : sqrtr_spec a a false true 0 | IsSqrtr b of 0 <= b : sqrtr_spec a (b ^+ 2) true false b.",
            "VernacInductive",
            "65d095b93fbad7901de668319184773100033a84"
        ],
        [
            "Lemma sqrtrP a : sqrtr_spec a a (0 <= a) (a < 0) (sqrt a).",
            "VernacStartTheoremProof",
            "321ab3d494338fb34047e1609d7a792648944049"
        ],
        [
            "have [a_ge0|a_lt0] := ger0P a.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -{1 2}[a]sqr_sqrtr //; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltr0_sqrtr //; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtr_sqr a : sqrt (a ^+ 2) = `|a|.",
            "VernacStartTheoremProof",
            "bdb5a37dd1a9677d8dcf171e89bcb57a2947ecd8"
        ],
        [
            "have /eqP : sqrt (a ^+ 2) ^+ 2 = `|a| ^+ 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -normrX ger0_norm ?sqr_sqrtr ?sqr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqf_sqr => /predU1P[-> //|ha].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have := sqrtr_ge0 (a ^+ 2); rewrite (eqP ha) oppr_ge0 normr_le0 => /eqP ->.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "by rewrite normr0 oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtrM a b : 0 <= a -> sqrt (a * b) = sqrt a * sqrt b.",
            "VernacStartTheoremProof",
            "ff50be75886f521112cf4fb7470bb99bc210be0c"
        ],
        [
            "case: (sqrtrP a) => // {a} a a_ge0 _; case: (sqrtrP b) => [b_lt0 | {b} b b_ge0].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite mulr0 ler0_sqrtr // nmulr_lle0 ?mulr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mulrACA sqrtr_sqr ger0_norm ?mulr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtr0 : sqrt 0 = 0 :> R.",
            "VernacStartTheoremProof",
            "43cbc9a6444ddf775134b8ec749c220c8ea2f395"
        ],
        [
            "by move: (sqrtr_sqr 0); rewrite exprS mul0r => ->; rewrite normr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtr1 : sqrt 1 = 1 :> R.",
            "VernacStartTheoremProof",
            "9bf568ebd74769fd20f839e6e0dc74cb0cf1368d"
        ],
        [
            "by move: (sqrtr_sqr 1); rewrite expr1n => ->; rewrite normr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtr_eq0 a : (sqrt a == 0) = (a <= 0).",
            "VernacStartTheoremProof",
            "eb3de646991df9b5124ad92cd2c29df3928f4e20"
        ],
        [
            "case: sqrtrP => [/ltrW ->|b]; first by rewrite eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ltrgt0P => [b_gt0|//|->]; last by rewrite exprS mul0r lerr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltr_geF ?pmulr_rgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtr_gt0 a : (0 < sqrt a) = (0 < a).",
            "VernacStartTheoremProof",
            "f6281fbaa7a8cacf741849c52e431c2e7db192d9"
        ],
        [
            "by rewrite lt0r sqrtr_ge0 sqrtr_eq0 -ltrNge andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_sqrt a b : 0 <= a -> 0 <= b -> (sqrt a == sqrt b) = (a == b).",
            "VernacStartTheoremProof",
            "409c29a9f1411a2327ead63bea51fcfd4d1609d0"
        ],
        [
            "move=> a_ge0 b_ge0; apply/eqP/eqP=> [HS|->] //.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by move: (sqr_sqrtr a_ge0); rewrite HS (sqr_sqrtr b_ge0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_wsqrtr : {homo @sqrt R : a b / a <= b}.",
            "VernacStartTheoremProof",
            "4baf75e5211958652346e627cab40000b6b7e514"
        ],
        [
            "move=> a b /= le_ab; case: (boolP (0 <= a))=> [pa|]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltrNge; move/ltrW; rewrite -sqrtr_eq0; move/eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(@ler_pexpn2r R 2) ?nnegrE ?sqrtr_ge0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !sqr_sqrtr // (ler_trans pa).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_psqrt : {in @pos R &, {mono sqrt : a b / a <= b}}.",
            "VernacStartTheoremProof",
            "0e175306d03ae2b68fa89814f9fd67463ad0b73b"
        ],
        [
            "apply: ler_mono_in => x y x_gt0 y_gt0.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite !ltr_neqAle => /andP[neq_xy le_xy].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite ler_wsqrtr // eqr_sqrt ?ltrW // neq_xy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_sqrt a b : 0 < b -> (sqrt a <= sqrt b) = (a <= b).",
            "VernacStartTheoremProof",
            "19eea7899b41f30a61d96aba92989cb7f169c66e"
        ],
        [
            "move=> b_gt0; have [a_le0|a_gt0] := ler0P a; last by rewrite ler_psqrt.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ler0_sqrtr // sqrtr_ge0 (ler_trans a_le0) ?ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_sqrt a b : 0 < b -> (sqrt a < sqrt b) = (a < b).",
            "VernacStartTheoremProof",
            "d9d134ddec59723a3e5240800685677d8f5c5bc2"
        ],
        [
            "move=> b_gt0; have [a_le0|a_gt0] := ler0P a; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (lerW_mono_in ler_psqrt).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ler0_sqrtr // sqrtr_gt0 b_gt0 (ler_lt_trans a_le0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RealClosedFieldTheory.",
            "VernacEndSegment",
            "2eff29e1598228593796176f6d7e59c9981c9e8e"
        ],
        [
            "Definition conjC {C : numClosedFieldType} : {rmorphism C -> C} := ClosedField.conj_op (ClosedField.conj_mixin (ClosedField.class C)).",
            "VernacDefinition",
            "3d0f5bc473ff1d5ed780fe1f91d6c25aa816143f"
        ],
        [
            "Notation \"z ^*\" := (@conjC _ z) (at level 2, format \"z ^*\") : ring_scope.",
            "VernacNotation",
            "2816463b0f5ef229e851844cb8d21fb6915fb169"
        ],
        [
            "Definition imaginaryC {C : numClosedFieldType} : C := ClosedField.imaginary (ClosedField.conj_mixin (ClosedField.class C)).",
            "VernacDefinition",
            "9af82c41dfd45f7c11b8fdfd73e3f8faa4896b15"
        ],
        [
            "Notation \"'i\" := (@imaginaryC _) (at level 0) : ring_scope.",
            "VernacNotation",
            "55feb1e030a1e409e20702994e5c29b9e68ef5e2"
        ],
        [
            "Section ClosedFieldTheory.",
            "VernacBeginSection",
            "2c1ea011401797a9f1bb51523dff5d539324ea76"
        ],
        [
            "Variable C : numClosedFieldType.",
            "VernacAssumption",
            "1dddf9942eeb1de3f4f99605bdfb851589cd7fe5"
        ],
        [
            "Implicit Types a x y z : C.",
            "VernacReserve",
            "7f937071343c7823ce8ccdfcaf853d2c73069faf"
        ],
        [
            "Definition normCK x : `|x| ^+ 2 = x * x^*.",
            "VernacDefinition",
            "927bfbb0fea02f58b1fb26390091e0e5152cadfe"
        ],
        [
            "by case: C x => ? [? ? []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrCi : 'i ^+ 2 = -1 :> C.",
            "VernacStartTheoremProof",
            "a0eede6c20dd3874078120f74b08c0df7edb7ed1"
        ],
        [
            "by case: C => ? [? ? []].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjCK : involutive (@conjC C).",
            "VernacStartTheoremProof",
            "6de6e56958dcc52f9aaf300716cbdb1117b13fa5"
        ],
        [
            "have JE x : x^* = `|x|^+2 / x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [->|x_neq0] := eqVneq x 0; first by rewrite rmorph0 invr0 mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: (canRL (mulfK _)) => //; rewrite mulrC -normCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> x; have [->|x_neq0] := eqVneq x 0; first by rewrite !rmorph0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !JE normrM normfV exprMn normrX normr_id.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite invfM exprVn mulrA -[X in X * _]mulrA -invfM -exprMn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite divff ?mul1r ?invrK // !expf_eq0 normr_eq0 //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let Re2 z := z + z^*.",
            "VernacDefinition",
            "2223263c91c30df571af1657969e91776159006d"
        ],
        [
            "Definition nnegIm z := (0 <= imaginaryC * (z^* - z)).",
            "VernacDefinition",
            "8a3e7e8fb946dfae5e818c17b662490b6d2e37d2"
        ],
        [
            "Definition argCle y z := nnegIm z ==> nnegIm y && (Re2 z <= Re2 y).",
            "VernacDefinition",
            "baf5732224462f87a5f1fd252fd85157847a8f68"
        ],
        [
            "Variant rootC_spec n (x : C) : Type := RootCspec (y : C) of if (n > 0)%N then y ^+ n = x else y = 0 & forall z, (n > 0)%N -> z ^+ n = x -> argCle y z.",
            "VernacInductive",
            "056fa07f2d61701772b0a5adcb96c18ab45dc600"
        ],
        [
            "Fact rootC_subproof n x : rootC_spec n x.",
            "VernacStartTheoremProof",
            "f7c2509c4e5c718c961b5ded9931c06a785e8bb8"
        ],
        [
            "have realRe2 u : Re2 u \\is Num.real.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite realEsqr expr2 {2}/Re2 -{2}[u]conjCK addrC -rmorphD -normCK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite exprn_ge0 ?normr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have argCle_total : total argCle.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> u v; rewrite /total /argCle.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by do 2!case: (nnegIm _) => //; rewrite ?orbT //= real_leVge.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have argCle_trans : transitive argCle.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> u v w /implyP geZuv /implyP geZvw; apply/implyP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by case/geZvw/andP=> /geZuv/andP[-> geRuv] /ler_trans->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose p := 'X^n - (x *+ (n > 0))%:P; have [r0 Dp] := closed_field_poly_normal p.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have sz_p: size p = n.+1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite size_addl ?size_polyXn // ltnS size_opp size_polyC mulrn_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: posnP => //; case: negP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose r := sort argCle r0; have r_arg: sorted argCle r by apply: sort_sorted.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have{Dp} Dp: p = \\prod_(z <- r) ('X - z%:P).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Dp lead_coefE sz_p coefB coefXn coefC -mulrb -mulrnA mulnb lt0n andNb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite subr0 eqxx scale1r; apply: eq_big_perm.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite perm_eq_sym perm_sort.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have mem_rP z: (n > 0)%N -> reflect (z ^+ n = x) (z \\in r).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> n_gt0; rewrite -root_prod_XsubC -Dp rootE !hornerE hornerXn n_gt0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite subr_eq0; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists r`_0 => [|z n_gt0 /(mem_rP z n_gt0) r_z].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have sz_r: size r = n by apply: succn_inj; rewrite -sz_p Dp size_prod_XsubC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: posnP => [n0 | n_gt0]; first by rewrite nth_default // sz_r n0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/mem_rP=> //; rewrite mem_nth ?sz_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: {Dp mem_rP}r r_z r_arg => // y r1; rewrite inE => /predU1P[-> _|r1z].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by apply/implyP=> ->; rewrite lerr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/(order_path_min argCle_trans)/allP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nthroot n x := let: RootCspec y _ _ := rootC_subproof n x in y.",
            "VernacDefinition",
            "1ce20f0e1f35ffb27fde3bf8d4c9924c40d14b98"
        ],
        [
            "Notation \"n .-root\" := (nthroot n) (at level 2, format \"n .-root\") : ring_core_scope.",
            "VernacNotation",
            "b9a05ee3a247e3df75171acae598a9bbf6cb879f"
        ],
        [
            "Notation \"n .-root\" := (nthroot n) (only parsing) : ring_scope.",
            "VernacNotation",
            "8bfad0f9cc0e63f4fe10e26118b824f945249450"
        ],
        [
            "Notation sqrtC := 2.-root.",
            "VernacSyntacticDefinition",
            "cb4d3bd564308771491b43c0b62f8f837e290d38"
        ],
        [
            "Definition Re x := (x + x^*) / 2%:R.",
            "VernacDefinition",
            "ed7b068ab22028714d2d85b9beaa45aa205a5f75"
        ],
        [
            "Definition Im x := 'i * (x^* - x) / 2%:R.",
            "VernacDefinition",
            "6002a088a49cf937bc1fdb41ece850e4ced3fcd7"
        ],
        [
            "Notation \"'Re z\" := (Re z) (at level 10, z at level 8) : ring_scope.",
            "VernacNotation",
            "6e607d49143e9602c4a6c6c55c93ecf2c0402deb"
        ],
        [
            "Notation \"'Im z\" := (Im z) (at level 10, z at level 8) : ring_scope.",
            "VernacNotation",
            "cf1c2ce6ae4bf4a048ebc7fe3357286872a8ebb7"
        ],
        [
            "Let nz2 : 2%:R != 0 :> C.",
            "VernacDefinition",
            "3325709c1e7fc0d23f8659a0abd4b68fcc04148c"
        ],
        [
            "by rewrite pnatr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normCKC x : `|x| ^+ 2 = x^* * x.",
            "VernacStartTheoremProof",
            "cf54c7275d880c3a887de0f32c117208b3824a43"
        ],
        [
            "by rewrite normCK mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_conjC_ge0 x : 0 <= x * x^*.",
            "VernacStartTheoremProof",
            "3532529b1c5b65322e24077be7839662463767fc"
        ],
        [
            "by rewrite -normCK exprn_ge0 ?normr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_conjC_gt0 x : (0 < x * x^*) = (x != 0).",
            "VernacStartTheoremProof",
            "dec2107bfeaa22e37dd44385ddafb1e071f7ce43"
        ],
        [
            "have [->|x_neq0] := altP eqP; first by rewrite rmorph0 mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -normCK exprn_gt0 ?normr_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_conjC_eq0 x : (x * x^* == 0) = (x == 0).",
            "VernacStartTheoremProof",
            "43e6942aa1fa9130e150962ea2a9eb9974806a11"
        ],
        [
            "by rewrite -normCK expf_eq0 normr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC_ge0 x : (0 <= x^*) = (0 <= x).",
            "VernacStartTheoremProof",
            "ede42581dfe568b2b762b187c7a8009e951e10a7"
        ],
        [
            "wlog suffices: x / 0 <= x -> 0 <= x^*.",
            "VernacExtend",
            "348aa27e7c84ea4ca2ac06b8a3b3db24e74b6ad7"
        ],
        [
            "by move=> IH; apply/idP/idP=> /IH; rewrite ?conjCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite le0r => /predU1P[-> | x_gt0]; first by rewrite rmorph0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(pmulr_rge0 _ x_gt0) mul_conjC_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC_nat n : (n%:R)^* = n%:R :> C.",
            "VernacStartTheoremProof",
            "2212f46f0a6a14ca4a16cf2a0b6f15c3b22ac4d4"
        ],
        [
            "exact: rmorph_nat.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC0 : 0^* = 0 :> C.",
            "VernacStartTheoremProof",
            "dcb21a25e60eec4e11bcc3200c43e146072b9f09"
        ],
        [
            "exact: rmorph0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC1 : 1^* = 1 :> C.",
            "VernacStartTheoremProof",
            "41970042666e7e3c73b4a48c42a533649efffda1"
        ],
        [
            "exact: rmorph1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC_eq0 x : (x^* == 0) = (x == 0).",
            "VernacStartTheoremProof",
            "183dbfd02d5c7ba6b13f7637444c0aaf80d64198"
        ],
        [
            "exact: fmorph_eq0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invC_norm x : x^-1 = `|x| ^- 2 * x^*.",
            "VernacStartTheoremProof",
            "631c016669b2ff688c3cb71e3d4de4282a3327f8"
        ],
        [
            "have [-> | nx_x] := eqVneq x 0; first by rewrite conjC0 mulr0 invr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite normCK invfM divfK ?conjC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CrealE x : (x \\is real) = (x^* == x).",
            "VernacStartTheoremProof",
            "5e924c392a94ab6a5a0c758f7b288d2f070e1071"
        ],
        [
            "rewrite realEsqr ger0_def normrX normCK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have [-> | /mulfI/inj_eq-> //] := eqVneq x 0; rewrite rmorph0 !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CrealP {x} : reflect (x^* = x) (x \\is real).",
            "VernacStartTheoremProof",
            "d6a592e5b52576ae75361c3ad1725d156e820325"
        ],
        [
            "by rewrite CrealE; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_Creal x : x \\is real -> x^* = x.",
            "VernacStartTheoremProof",
            "5b174d9edb3ba5adaab1b231c2793e3fcd4fe93a"
        ],
        [
            "by move/CrealP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_normC z : `|z|^* = `|z|.",
            "VernacStartTheoremProof",
            "afd28e44191d52e1ce2a8313c0c1ce65501d1f31"
        ],
        [
            "by rewrite conj_Creal ?normr_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma geC0_conj x : 0 <= x -> x^* = x.",
            "VernacStartTheoremProof",
            "aff1d83091692ca3014ce19c3a8c6379775ad506"
        ],
        [
            "by move=> /ger0_real/CrealP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma geC0_unit_exp x n : 0 <= x -> (x ^+ n.+1 == 1) = (x == 1).",
            "VernacStartTheoremProof",
            "a2f16419e6d29c6e9b8aa0ce0f4804399a274c00"
        ],
        [
            "by move=> x_ge0; rewrite pexpr_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac case_rootC := rewrite /nthroot; case: (rootC_subproof _ _).",
            "VernacExtend",
            "4a6cc8c1310d297f96e5e638ce328de73863b9fa"
        ],
        [
            "Lemma root0C x : 0.-root x = 0.",
            "VernacStartTheoremProof",
            "8a2f79ca12af73b41ca55514e9575107493e89db"
        ],
        [
            "by case_rootC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootCK n : (n > 0)%N -> cancel n.-root (fun x => x ^+ n).",
            "VernacStartTheoremProof",
            "95432cefae1233ce9bf96be404e8c8e47f0cc7e3"
        ],
        [
            "by case: n => //= n _ x; case_rootC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root1C x : 1.-root x = x.",
            "VernacStartTheoremProof",
            "3a5ad95b41a3a03d4cbe1647ae7f2827474531cb"
        ],
        [
            "exact: (@rootCK 1).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC0 n : n.-root 0 = 0.",
            "VernacStartTheoremProof",
            "280a033fc5add3e58574b799f3a36dfc57b60591"
        ],
        [
            "have [-> | n_gt0] := posnP n; first by rewrite root0C.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have /eqP := rootCK n_gt0 0; rewrite expf_eq0 n_gt0 /= => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_inj n : (n > 0)%N -> injective n.-root.",
            "VernacStartTheoremProof",
            "e7b4101f5852b362573658c9df6f6e26894e97e5"
        ],
        [
            "by move/rootCK/can_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_rootC n : (n > 0)%N -> {mono n.-root : x y / x == y}.",
            "VernacStartTheoremProof",
            "f22d433485964694801b2b5e2e7920ac063249d8"
        ],
        [
            "by move/rootC_inj/inj_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_eq0 n x : (n > 0)%N -> (n.-root x == 0) = (x == 0).",
            "VernacStartTheoremProof",
            "be93a738cbaf08ee737320c381769459f4d68ace"
        ],
        [
            "by move=> n_gt0; rewrite -{1}(rootC0 n) eqr_rootC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonRealCi : ('i : C) \\isn't real.",
            "VernacStartTheoremProof",
            "a9c2cb901a4b282db0f30b9f6a260e6d6d4700a1"
        ],
        [
            "by rewrite realEsqr sqrCi oppr_ge0 ltr_geF ?ltr01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neq0Ci : 'i != 0 :> C.",
            "VernacStartTheoremProof",
            "344c15690bde66254c8b47f3b89aac79ec3896bf"
        ],
        [
            "by apply: contraNneq nonRealCi => ->; apply: real0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normCi : `|'i| = 1 :> C.",
            "VernacStartTheoremProof",
            "6afe989530c53eb95fb8a40292dc3b1212c39e28"
        ],
        [
            "apply/eqP; rewrite -(@pexpr_eq1 _ _ 2) ?normr_ge0 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -normrX sqrCi normrN1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invCi : 'i^-1 = - 'i :> C.",
            "VernacStartTheoremProof",
            "9ed4dda05cc3e2fcff28e9eae705f6d6c39efd89"
        ],
        [
            "by rewrite -div1r -[1]opprK -sqrCi mulNr mulfK ?neq0Ci.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjCi : 'i^* = - 'i :> C.",
            "VernacStartTheoremProof",
            "b0564778bf75124eccd952414883e95da770b568"
        ],
        [
            "by rewrite -invCi invC_norm normCi expr1n invr1 mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Crect x : x = 'Re x + 'i * 'Im x.",
            "VernacStartTheoremProof",
            "c212bd2d72ca1155b163d4ab62c8d6e44846b274"
        ],
        [
            "rewrite 2!mulrA -expr2 sqrCi mulN1r opprB -mulrDl addrACA subrr addr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -mulr2n -mulr_natr mulfK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Creal_Re x : 'Re x \\is real.",
            "VernacStartTheoremProof",
            "2bd3c4d26854410612a8f5948ebcbb39e69756d4"
        ],
        [
            "by rewrite CrealE fmorph_div rmorph_nat rmorphD conjCK addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Creal_Im x : 'Im x \\is real.",
            "VernacStartTheoremProof",
            "8ec4f5988fac3e08dea0d80856a305f8dbaa38b4"
        ],
        [
            "rewrite CrealE fmorph_div rmorph_nat rmorphM rmorphB conjCK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite conjCi -opprB mulrNN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Creal_Re Creal_Im : core.",
            "VernacHints",
            "d3a9f4bb0cdb3f6902d4f81799bfb1de50fb835d"
        ],
        [
            "Fact Re_is_additive : additive Re.",
            "VernacStartTheoremProof",
            "81d06ff9cd8104bdde10939dfc85b486b48ab8f2"
        ],
        [
            "by move=> x y; rewrite /Re rmorphB addrACA -opprD mulrBl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Re_additive := Additive Re_is_additive.",
            "VernacDefinition",
            "6ba86bddfa49a560caef8a13eba0486c1819997d"
        ],
        [
            "Fact Im_is_additive : additive Im.",
            "VernacStartTheoremProof",
            "4ee6408e82f0ac8e8323155af8107a69934f3001"
        ],
        [
            "by move=> x y; rewrite /Im rmorphB opprD addrACA -opprD mulrBr mulrBl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Im_additive := Additive Im_is_additive.",
            "VernacDefinition",
            "771fca7e417a5bfa65a4d53ebbddae8b1b6ed942"
        ],
        [
            "Lemma Creal_ImP z : reflect ('Im z = 0) (z \\is real).",
            "VernacStartTheoremProof",
            "e6a2937d0116acfdda48b6fa366b9a135734c4bb"
        ],
        [
            "rewrite CrealE -subr_eq0 -(can_eq (mulKf neq0Ci)) mulr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(can_eq (divfK nz2)) mul0r; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Creal_ReP z : reflect ('Re z = z) (z \\in real).",
            "VernacStartTheoremProof",
            "c8166e4511e35428dcd58d7c4414f72a18d29067"
        ],
        [
            "rewrite (sameP (Creal_ImP z) eqP) -(can_eq (mulKf neq0Ci)) mulr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(inj_eq (addrI ('Re z))) addr0 -Crect eq_sym; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ReMl : {in real, forall x, {morph Re : z / x * z}}.",
            "VernacStartTheoremProof",
            "f0e2ff9b293095f05675c2bba8f11b5ace5456d6"
        ],
        [
            "by move=> x Rx z /=; rewrite /Re rmorphM (conj_Creal Rx) -mulrDr -mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ReMr : {in real, forall x, {morph Re : z / z * x}}.",
            "VernacStartTheoremProof",
            "1c21fbfe4ccc08e21910d6b5c6b32a85c5df1469"
        ],
        [
            "by move=> x Rx z /=; rewrite mulrC ReMl // mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ImMl : {in real, forall x, {morph Im : z / x * z}}.",
            "VernacStartTheoremProof",
            "cca7fc375c0c9f170b85b9c1430695b4c6b7f01f"
        ],
        [
            "by move=> x Rx z; rewrite /Im rmorphM (conj_Creal Rx) -mulrBr mulrCA !mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ImMr : {in real, forall x, {morph Im : z / z * x}}.",
            "VernacStartTheoremProof",
            "b53122472a72e813a3fb2db768d61b0b94d830cd"
        ],
        [
            "by move=> x Rx z /=; rewrite mulrC ImMl // mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Re_i : 'Re 'i = 0.",
            "VernacStartTheoremProof",
            "f1c6a7c6a01b4ec2f86ce2784942e81f64f82916"
        ],
        [
            "by rewrite /Re conjCi subrr mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Im_i : 'Im 'i = 1.",
            "VernacStartTheoremProof",
            "e9f1cf13efdfb8bee835e16daa15cf35731aa789"
        ],
        [
            "rewrite /Im conjCi -opprD mulrN -mulr2n mulrnAr ['i * _]sqrCi.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulNrn opprK divff.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Re_conj z : 'Re z^* = 'Re z.",
            "VernacStartTheoremProof",
            "47ecd807ff342c6792ef6089b6f61df0d137e3fe"
        ],
        [
            "by rewrite /Re addrC conjCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Im_conj z : 'Im z^* = - 'Im z.",
            "VernacStartTheoremProof",
            "ead8919190f80561db945452e4efe688c060528e"
        ],
        [
            "by rewrite /Im -mulNr -mulrN opprB conjCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Re_rect : {in real &, forall x y, 'Re (x + 'i * y) = x}.",
            "VernacStartTheoremProof",
            "388061a5a8a6b675c987c12bfe997f4040fbf328"
        ],
        [
            "move=> x y Rx Ry; rewrite /= raddfD /= (Creal_ReP x Rx).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite ReMr // Re_i mul0r addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Im_rect : {in real &, forall x y, 'Im (x + 'i * y) = y}.",
            "VernacStartTheoremProof",
            "a009716c3015bb065c3e99b7e8ffb62b739302e5"
        ],
        [
            "move=> x y Rx Ry; rewrite /= raddfD /= (Creal_ImP x Rx) add0r.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite ImMr // Im_i mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC_rect : {in real &, forall x y, (x + 'i * y)^* = x - 'i * y}.",
            "VernacStartTheoremProof",
            "128dd306657a66062fcd83e63729f638a510300e"
        ],
        [
            "by move=> x y Rx Ry; rewrite /= rmorphD rmorphM conjCi mulNr !conj_Creal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addC_rect x1 y1 x2 y2 : (x1 + 'i * y1) + (x2 + 'i * y2) = x1 + x2 + 'i * (y1 + y2).",
            "VernacStartTheoremProof",
            "81d52f2d23687e6c4a2cd5bb9cd68eff89cc9175"
        ],
        [
            "by rewrite addrACA -mulrDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppC_rect x y : - (x + 'i * y) = - x + 'i * (- y).",
            "VernacStartTheoremProof",
            "d81e8c2be355fcae08dc9e799b4c09964a09c005"
        ],
        [
            "by rewrite mulrN -opprD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subC_rect x1 y1 x2 y2 : (x1 + 'i * y1) - (x2 + 'i * y2) = x1 - x2 + 'i * (y1 - y2).",
            "VernacStartTheoremProof",
            "defc04c5d3bb5fcfd9754c6717537000cdbdc1eb"
        ],
        [
            "by rewrite oppC_rect addC_rect.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulC_rect x1 y1 x2 y2 : (x1 + 'i * y1) * (x2 + 'i * y2) = x1 * x2 - y1 * y2 + 'i * (x1 * y2 + x2 * y1).",
            "VernacStartTheoremProof",
            "dfb1a4633dc5560abc84d2c8ff6519a69064c200"
        ],
        [
            "rewrite mulrDl !mulrDr mulrCA -!addrA mulrAC -mulrA; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite mulrACA -expr2 sqrCi mulN1r addrA addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC2_rect : {in real &, forall x y, `|x + 'i * y| ^+ 2 = x ^+ 2 + y ^+ 2}.",
            "VernacStartTheoremProof",
            "e41e65e82c82d32ae5f9e21d0fca8b0007e306c2"
        ],
        [
            "move=> x y Rx Ry; rewrite /= normCK rmorphD rmorphM conjCi !conj_Creal //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite mulrC mulNr -subr_sqr exprMn sqrCi mulN1r opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC2_Re_Im z : `|z| ^+ 2 = 'Re z ^+ 2 + 'Im z ^+ 2.",
            "VernacStartTheoremProof",
            "9255c24c817a75e99fe06daef9942c8784c7371c"
        ],
        [
            "by rewrite -normC2_rect -?Crect.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invC_rect : {in real &, forall x y, (x + 'i * y)^-1 = (x - 'i * y) / (x ^+ 2 + y ^+ 2)}.",
            "VernacStartTheoremProof",
            "07fb15821bc7d65afc2ae6c662d7a99e92c60d07"
        ],
        [
            "by move=> x y Rx Ry; rewrite /= invC_norm conjC_rect // mulrC normC2_rect.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_normC_Re_Creal z : `|'Re z| <= `|z| ?= iff (z \\is real).",
            "VernacStartTheoremProof",
            "a7fe24f4bc776c76d8368da4de16b1ca5cc4219f"
        ],
        [
            "rewrite -(mono_in_lerif ler_sqr); try by rewrite qualifE normr_ge0.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite normCK conj_Creal // normC2_Re_Im -expr2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addrC -lerif_subLR subrr (sameP (Creal_ImP _) eqP) -sqrf_eq0 eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: lerif_eq; rewrite -realEsqr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_Re_Creal z : 'Re z <= `|z| ?= iff (0 <= z).",
            "VernacStartTheoremProof",
            "0828a40401b13c612a7318bc3374eadae187c32f"
        ],
        [
            "have ubRe: 'Re z <= `|'Re z| ?= iff (0 <= 'Re z).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ger0_def eq_sym; apply/lerif_eq/real_ler_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr (_ <= _ ?= iff _): (lerif_trans ubRe (lerif_normC_Re_Creal z)).",
            "VernacExtend",
            "f3a9615ebe5fa15549c1ecd556f50efbdb2824d9"
        ],
        [
            "apply/andP/idP=> [[zRge0 /Creal_ReP <- //] | z_ge0].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by have Rz := ger0_real z_ge0; rewrite (Creal_ReP _ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqC_semipolar x y : `|x| = `|y| -> 'Re x = 'Re y -> 0 <= 'Im x * 'Im y -> x = y.",
            "VernacStartTheoremProof",
            "07008187a012946932b86976c1dd7a53ca9a2b2d"
        ],
        [
            "move=> eq_norm eq_Re sign_Im.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite [x]Crect [y]Crect eq_Re; congr (_ + 'i * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "have /eqP := congr1 (fun z => z ^+ 2) eq_norm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !normC2_Re_Im eq_Re (can_eq (addKr _)) eqf_sqr => /pred2P[] // eq_Im.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite eq_Im mulNr -expr2 oppr_ge0 real_exprn_even_le0 //= in sign_Im.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eq_Im (eqP sign_Im) oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let argCleP y z : reflect (0 <= 'Im z -> 0 <= 'Im y /\\ 'Re z <= 'Re y) (argCle y z).",
            "VernacDefinition",
            "a9ae8f3a80237e1c4358bdcccb78631f66492b6a"
        ],
        [
            "suffices dIm x: nnegIm x = (0 <= 'Im x).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite /argCle !dIm ler_pmul2r ?invr_gt0 ?ltr0n //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (iffP implyP) => geZyz /geZyz/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /('Im x) pmulr_lge0 ?invr_gt0 ?ltr0n //; congr (0 <= _ * _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_Re_max n x y : (n > 0)%N -> y ^+ n = x -> 0 <= 'Im y -> 'Re y <= 'Re (n.-root x).",
            "VernacStartTheoremProof",
            "ea14299e5970f8c62edfab1c0e181319f39f3728"
        ],
        [
            "by move=> n_gt0 yn_x leI0y; case_rootC=> z /= _ /(_ y n_gt0 yn_x)/argCleP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let neg_unity_root n : (n > 1)%N -> exists2 w : C, w ^+ n = 1 & 'Re w < 0.",
            "VernacDefinition",
            "a6f15f296b450e4082ab562f99049e0156ab0d6d"
        ],
        [
            "move=> n_gt1; have [|w /eqP pw_0] := closed_rootP (\\poly_(i < n) (1 : C)) _.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite size_poly_eq ?oner_eq0 // -(subnKC n_gt1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite horner_poly (eq_bigr _ (fun _ _ => mul1r _)) in pw_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have wn1: w ^+ n = 1 by apply/eqP; rewrite -subr_eq0 subrX1 pw_0 mulr0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices /existsP[i ltRwi0]: [exists i : 'I_n, 'Re (w ^+ i) < 0].",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by exists (w ^+ i) => //; rewrite exprAC wn1 expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: contra_eqT (congr1 Re pw_0); rewrite negb_exists => /forallP geRw0.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite raddf_sum raddf0 /= (bigD1 (Ordinal (ltnW n_gt1))) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Creal_ReP _ _) ?rpred1 // gtr_eqF ?ltr_paddr ?ltr01 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: sumr_ge0 => i _; rewrite real_lerNgt ?rpred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Im_rootC_ge0 n x : (n > 1)%N -> 0 <= 'Im (n.-root x).",
            "VernacStartTheoremProof",
            "efbc4bc91a250eae901c061516a65b6ba2a12864"
        ],
        [
            "set y := n.-root x => n_gt1; have n_gt0 := ltnW n_gt1.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "apply: wlog_neg; rewrite -real_ltrNge ?rpred0 // => ltIy0.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "suffices [z zn_x leI0z]: exists2 z, z ^+ n = x & 'Im z >= 0.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite /y; case_rootC => /= y1 _ /(_ z n_gt0 zn_x)/argCleP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [w wn1 ltRw0] := neg_unity_root n_gt1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "wlog leRI0yw: w wn1 ltRw0 / 0 <= 'Re y * 'Im w.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "move=> IHw; have: 'Re y * 'Im w \\is real by rewrite rpredM.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case/real_ger0P=> [|/ltrW leRIyw0]; first exact: IHw.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: (IHw w^*); rewrite ?Re_conj ?Im_conj ?mulrN ?oppr_ge0 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -rmorphX wn1 rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (w * y); first by rewrite exprMn wn1 mul1r rootCK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite [w]Crect [y]Crect mulC_rect.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Im_rect ?rpredD ?rpredN 1?rpredM // addr_ge0 // ltrW ?nmulr_rgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_lt0 n x : (1 < n)%N -> (n.-root x < 0) = false.",
            "VernacStartTheoremProof",
            "2fa3d2048cfddc81eff3f887af46d2809173dd39"
        ],
        [
            "set y := n.-root x => n_gt1; have n_gt0 := ltnW n_gt1.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "apply: negbTE; apply: wlog_neg => /negbNE lt0y; rewrite ler_gtF //.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "have Rx: x \\is real by rewrite -[x](rootCK n_gt0) rpredX // ltr0_real.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Re_y: 'Re y = y by apply/Creal_ReP; rewrite ltr0_real.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [z zn_x leR0z]: exists2 z, z ^+ n = x & 'Re z >= 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [w wn1 ltRw0] := neg_unity_root n_gt1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (w * y); first by rewrite exprMn wn1 mul1r rootCK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ReMr ?ltr0_real // ltrW // nmulr_lgt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "without loss leI0z: z zn_x leR0z / 'Im z >= 0.",
            "VernacExtend",
            "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
        ],
        [
            "move=> IHz; have: 'Im z \\is real by [].",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case/real_ger0P=> [|/ltrW leIz0]; first exact: IHz.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: (IHz z^*); rewrite ?Re_conj ?Im_conj ?oppr_ge0 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -rmorphX zn_x conj_Creal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: ler_trans leR0z _; rewrite -Re_y ?rootC_Re_max ?ltr0_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_ge0 n x : (n > 0)%N -> (0 <= n.-root x) = (0 <= x).",
            "VernacStartTheoremProof",
            "2ce4fd9e43f4a9d885cc00c206d0b44b964c9a10"
        ],
        [
            "set y := n.-root x => n_gt0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/idP/idP=> [/(exprn_ge0 n) | x_ge0]; first by rewrite rootCK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(ger_lerif (lerif_Re_Creal y)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have Ray: `|y| \\is real by apply: normr_real.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(Creal_ReP _ Ray) rootC_Re_max ?(Creal_ImP _ Ray) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -normrX rootCK // ger0_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_gt0 n x : (n > 0)%N -> (n.-root x > 0) = (x > 0).",
            "VernacStartTheoremProof",
            "c50ee919822644ef59beff56ce5e3054315d32ff"
        ],
        [
            "by move=> n_gt0; rewrite !lt0r rootC_ge0 ?rootC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_le0 n x : (1 < n)%N -> (n.-root x <= 0) = (x == 0).",
            "VernacStartTheoremProof",
            "7c87416f5b4919c407da1fdd3b2d40213f2babf0"
        ],
        [
            "by move=> n_gt1; rewrite ler_eqVlt rootC_lt0 // orbF rootC_eq0 1?ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_rootCl n : (n > 0)%N -> {in Num.nneg, {mono n.-root : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "d3260640494ef53d3f5b9b3c82ee2c1ef98c8794"
        ],
        [
            "move=> n_gt0 x x_ge0 y; have [y_ge0 | not_y_ge0] := boolP (0 <= y).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite -(ler_pexpn2r n_gt0) ?qualifE ?rootC_ge0 ?rootCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (contraNF (@ler_trans _ _ 0 _ _)) ?rootC_ge0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (contraNF (ler_trans x_ge0)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_rootC n : (n > 0)%N -> {in Num.nneg &, {mono n.-root : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "62bdba5676f8bff1aa3bfe488c779609f0aa5fc1"
        ],
        [
            "by move=> n_gt0 x y x_ge0 _; apply: ler_rootCl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_rootCl n : (n > 0)%N -> {in Num.nneg, {mono n.-root : x y / x < y}}.",
            "VernacStartTheoremProof",
            "7e603a460cc59203d93aff6e981b506054d80e32"
        ],
        [
            "by move=> n_gt0 x x_ge0 y; rewrite !ltr_def ler_rootCl ?eqr_rootC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_rootC n : (n > 0)%N -> {in Num.nneg &, {mono n.-root : x y / x < y}}.",
            "VernacStartTheoremProof",
            "9bad665ceeaf651e0b5b0d362f69975650e4959a"
        ],
        [
            "by move/ler_rootC/lerW_mono_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exprCK n x : (0 < n)%N -> 0 <= x -> n.-root (x ^+ n) = x.",
            "VernacStartTheoremProof",
            "11e7bf3515be3193ab1f24bcebf3985f56134037"
        ],
        [
            "move=> n_gt0 x_ge0; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -(eqr_expn2 n_gt0) ?rootC_ge0 ?exprn_ge0 ?rootCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_rootC n x : `|n.-root x| = n.-root `|x|.",
            "VernacStartTheoremProof",
            "832ca305e6c716811c0e94680e5bde2db2fec6b7"
        ],
        [
            "have [-> | n_gt0] := posnP n; first by rewrite !root0C normr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite -(eqr_expn2 n_gt0) ?rootC_ge0 ?normr_ge0 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -normrX !rootCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootCX n x k : (n > 0)%N -> 0 <= x -> n.-root (x ^+ k) = n.-root x ^+ k.",
            "VernacStartTheoremProof",
            "a1acab3eabb8223f86b1d3de3b802d24bd5dd1d6"
        ],
        [
            "move=> n_gt0 x_ge0; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -(eqr_expn2 n_gt0) ?(exprn_ge0, rootC_ge0) // 1?exprAC !rootCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC1 n : (n > 0)%N -> n.-root 1 = 1.",
            "VernacStartTheoremProof",
            "53030870248be76b4a1b768115be087516e0d58a"
        ],
        [
            "by move/(rootCX 0)/(_ ler01).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootCpX n x k : (k > 0)%N -> 0 <= x -> n.-root (x ^+ k) = n.-root x ^+ k.",
            "VernacStartTheoremProof",
            "85eb638232d63fb049c07e2158380de112be1228"
        ],
        [
            "by case: n => [|n] k_gt0; [rewrite !root0C expr0n gtn_eqF | apply: rootCX].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootCV n x : (n > 0)%N -> 0 <= x -> n.-root x^-1 = (n.-root x)^-1.",
            "VernacStartTheoremProof",
            "cdd2f68dca00be4a783e94fdfa7875a34bce88f6"
        ],
        [
            "move=> n_gt0 x_ge0; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -(eqr_expn2 n_gt0) ?(invr_ge0, rootC_ge0) // !exprVn !rootCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_eq1 n x : (n > 0)%N -> (n.-root x == 1) = (x == 1).",
            "VernacStartTheoremProof",
            "b0db966e52f7ab00322270766872c4be065fef9f"
        ],
        [
            "by move=> n_gt0; rewrite -{1}(rootC1 n_gt0) eqr_rootC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_ge1 n x : (n > 0)%N -> (n.-root x >= 1) = (x >= 1).",
            "VernacStartTheoremProof",
            "7dc19940ee2b13f7a5b50f3a8caece36952faf68"
        ],
        [
            "by move=> n_gt0; rewrite -{1}(rootC1 n_gt0) ler_rootCl // qualifE ler01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_gt1 n x : (n > 0)%N -> (n.-root x > 1) = (x > 1).",
            "VernacStartTheoremProof",
            "41a5f2757a684f9b8082d998107803ebb3631a96"
        ],
        [
            "by move=> n_gt0; rewrite !ltr_def rootC_eq1 ?rootC_ge1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_le1 n x : (n > 0)%N -> 0 <= x -> (n.-root x <= 1) = (x <= 1).",
            "VernacStartTheoremProof",
            "c3d45c114e05f961e2de86d0513320b7069791a7"
        ],
        [
            "by move=> n_gt0 x_ge0; rewrite -{1}(rootC1 n_gt0) ler_rootCl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC_lt1 n x : (n > 0)%N -> 0 <= x -> (n.-root x < 1) = (x < 1).",
            "VernacStartTheoremProof",
            "428a4057b1aee3c13117292e70bafc348ad4ffbc"
        ],
        [
            "by move=> n_gt0 x_ge0; rewrite !ltr_neqAle rootC_eq1 ?rootC_le1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootCMl n x z : 0 <= x -> n.-root (x * z) = n.-root x * n.-root z.",
            "VernacStartTheoremProof",
            "537d85c8e154a4de375ff0d34ea5f8551db3cb9d"
        ],
        [
            "rewrite le0r => /predU1P[-> | x_gt0]; first by rewrite !(mul0r, rootC0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [| n_gt1 | ->] := ltngtP n 1; last by rewrite !root1C.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: n => //; rewrite !root0C mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [x_ge0 n_gt0] := (ltrW x_gt0, ltnW n_gt1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nx_gt0: 0 < n.-root x by rewrite rootC_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Rnx: n.-root x \\is real by rewrite ger0_real ?ltrW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: eqC_semipolar; last 1 first; try apply/eqP.",
            "VernacExtend",
            "d0c7ac2eb2b4721b4ada2e0dba2f9779871e42e1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite ImMl // !(Im_rootC_ge0, mulr_ge0, rootC_ge0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -(eqr_expn2 n_gt0) ?normr_ge0 // -!normrX exprMn !rootCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqr_le; apply/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite rootC_Re_max ?exprMn ?rootCK ?ImMl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulr_ge0 ?Im_rootC_ge0 ?ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[n.-root _](mulVKf (negbT (gtr_eqF nx_gt0))) !(ReMl Rnx) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ler_pmul2l // rootC_Re_max ?exprMn ?exprVn ?rootCK ?mulKf ?gtr_eqF //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ImMl ?rpredV // mulr_ge0 ?invr_ge0 ?Im_rootC_ge0 ?ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootCMr n x z : 0 <= x -> n.-root (z * x) = n.-root z * n.-root x.",
            "VernacStartTheoremProof",
            "932f6aab4b297602391b727b2eae24cf28739315"
        ],
        [
            "by move=> x_ge0; rewrite mulrC rootCMl // mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma imaginaryCE : 'i = sqrtC (-1).",
            "VernacStartTheoremProof",
            "4906c37d8836b7cf042d1c39e3f6e310a5f26106"
        ],
        [
            "have : sqrtC (-1) ^+ 2 - 'i ^+ 2 == 0 by rewrite sqrCi rootCK // subrr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite subr_sqr mulf_eq0 subr_eq0 addr_eq0; have [//|_/= /eqP sCN1E] := eqP.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by have := @Im_rootC_ge0 2 (-1) isT; rewrite sCN1E raddfN /= Im_i ler0N1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lerif_rootC_AGM (I : finType) (A : pred I) (n := #|A|) E : {in A, forall i, 0 <= E i} -> n.-root (\\prod_(i in A) E i) <= (\\sum_(i in A) E i) / n%:R ?= iff [forall i in A, forall j in A, E i == E j].",
            "VernacStartTheoremProof",
            "c7f2bc988adfa51a13ab8e20dd604d99329c886a"
        ],
        [
            "move=> Ege0; have [n0 | n_gt0] := posnP n.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite n0 root0C invr0 mulr0; apply/lerif_refl/forall_inP=> i.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite (card0_eq n0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(mono_in_lerif (ler_pexpn2r n_gt0)) ?rootCK //=; first 1 last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite qualifE rootC_ge0 // prodr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite rpred_div ?rpred_nat ?rpred_sum.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: lerif_AGM.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtC0 : sqrtC 0 = 0.",
            "VernacStartTheoremProof",
            "d679b303efb6e165335f44ac9697d31be081e561"
        ],
        [
            "exact: rootC0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtC1 : sqrtC 1 = 1.",
            "VernacStartTheoremProof",
            "3e6df3ad1da50c193f47195dd19b605d0924adf4"
        ],
        [
            "exact: rootC1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtCK x : sqrtC x ^+ 2 = x.",
            "VernacStartTheoremProof",
            "ba9fbb1005e0874adbfb08dfd80089e9bd18b12c"
        ],
        [
            "exact: rootCK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrCK x : 0 <= x -> sqrtC (x ^+ 2) = x.",
            "VernacStartTheoremProof",
            "9b148057d0c0606228a5e8ceff8c51c75a3830a4"
        ],
        [
            "exact: exprCK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtC_ge0 x : (0 <= sqrtC x) = (0 <= x).",
            "VernacStartTheoremProof",
            "f44d836e24dba49a968129eb9adc697ffb91952f"
        ],
        [
            "exact: rootC_ge0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtC_eq0 x : (sqrtC x == 0) = (x == 0).",
            "VernacStartTheoremProof",
            "6c7c870e97a92dda0ce88f1d755311c1376ca308"
        ],
        [
            "exact: rootC_eq0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtC_gt0 x : (sqrtC x > 0) = (x > 0).",
            "VernacStartTheoremProof",
            "ca935e49358ebcd645603366ea1e612a7789e4e0"
        ],
        [
            "exact: rootC_gt0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtC_lt0 x : (sqrtC x < 0) = false.",
            "VernacStartTheoremProof",
            "f6d7711c77d05030c5b986bdbdfa96c33805bfc4"
        ],
        [
            "exact: rootC_lt0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtC_le0 x : (sqrtC x <= 0) = (x == 0).",
            "VernacStartTheoremProof",
            "61d4061c6fb7fd6679177c6ecfcd0af4ae35599b"
        ],
        [
            "exact: rootC_le0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ler_sqrtC : {in Num.nneg &, {mono sqrtC : x y / x <= y}}.",
            "VernacStartTheoremProof",
            "280610672a679a5f93962d0227b4063f6d51ad3b"
        ],
        [
            "exact: ler_rootC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltr_sqrtC : {in Num.nneg &, {mono sqrtC : x y / x < y}}.",
            "VernacStartTheoremProof",
            "046b18b451d01cfddc3fc8fb41b21eef30859ffb"
        ],
        [
            "exact: ltr_rootC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqr_sqrtC : {mono sqrtC : x y / x == y}.",
            "VernacStartTheoremProof",
            "a5e6e1fc1c313d07f67bc0adbb7d285b0e723ed9"
        ],
        [
            "exact: eqr_rootC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtC_inj : injective sqrtC.",
            "VernacStartTheoremProof",
            "0ef39796d85b8236aa124dc864486f29de4f47da"
        ],
        [
            "exact: rootC_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtCM : {in Num.nneg &, {morph sqrtC : x y / x * y}}.",
            "VernacStartTheoremProof",
            "56f10a71bcb02428a6104a5b51d260437ec1b4fd"
        ],
        [
            "by move=> x y _; apply: rootCMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrCK_P x : reflect (sqrtC (x ^+ 2) = x) ((0 <= 'Im x) && ~~ (x < 0)).",
            "VernacStartTheoremProof",
            "9e9be3d5705f96a8051376dbea32cfba63eb27fe"
        ],
        [
            "apply: (iffP andP) => [[leI0x not_gt0x] | <-]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite sqrtC_lt0 Im_rootC_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /eqP := sqrtCK (x ^+ 2); rewrite eqf_sqr => /pred2P[] // defNx.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "apply: sqrCK; rewrite -real_lerNgt ?rpred0 // in not_gt0x; apply/Creal_ImP/ler_anti; by rewrite leI0x -oppr_ge0 -raddfN -defNx Im_rootC_ge0.",
            "VernacExtend",
            "3c91a176eb68c567f143250bd6e50df1e0b63152"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC_def x : `|x| = sqrtC (x * x^*).",
            "VernacStartTheoremProof",
            "4efbea560ed9a009362f19a9e00450b5c7471cd2"
        ],
        [
            "by rewrite -normCK sqrCK ?normr_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_conjC x : `|x^*| = `|x|.",
            "VernacStartTheoremProof",
            "ce4f7ee5a9c2378de9634a44d00a0bab2f851015"
        ],
        [
            "by rewrite !normC_def conjCK mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC_rect : {in real &, forall x y, `|x + 'i * y| = sqrtC (x ^+ 2 + y ^+ 2)}.",
            "VernacStartTheoremProof",
            "d690289b1e986db2e78281547bf3451aae44acb6"
        ],
        [
            "by move=> x y Rx Ry; rewrite /= normC_def -normCK normC2_rect.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC_Re_Im z : `|z| = sqrtC ('Re z ^+ 2 + 'Im z ^+ 2).",
            "VernacStartTheoremProof",
            "e7768cf27e415e5194d7febc2f4dd43d774fb8ef"
        ],
        [
            "by rewrite normC_def -normCK normC2_Re_Im.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC_add_eq x y : `|x + y| = `|x| + `|y| -> {t : C | `|t| == 1 & (x, y) = (`|x| * t, `|y| * t)}.",
            "VernacStartTheoremProof",
            "8969ca6512f74300d24b80b1c47613a67c9cab6e"
        ],
        [
            "move=> lin_xy; apply: sig2_eqW; pose u z := if z == 0 then 1 else z / `|z|.",
            "VernacExtend",
            "d7b8cb010e17c0eef7bcb84dff260d146075a321"
        ],
        [
            "have uE z: (`|u z| = 1) * (`|z| * u z = z).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /u; have [->|nz_z] := altP eqP; first by rewrite normr0 normr1 mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite normf_div normr_id mulrCA divff ?mulr1 ?normr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [->|nz_x] := eqVneq x 0; first by exists (u y); rewrite uE ?normr0 ?mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists (u x); rewrite uE // /u (negPf nz_x); congr (_ , _).",
            "VernacExtend",
            "e246aef49e7d7b635a965d48410cc10965a77e16"
        ],
        [
            "have{lin_xy} def2xy: `|x| * `|y| *+ 2 = x * y ^* + y * x ^*.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/(addrI (x * x^*))/(addIr (y * y^*)); rewrite -2!{1}normCK -sqrrD.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite addrA -addrA -!mulrDr -mulrDl -rmorphD -normCK lin_xy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_xy: x * y^* = y * x^*.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite -subr_eq0 -[_ == 0](@expf_eq0 _ _ 2).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (canRL (subrK _) (subr_sqrDB _ _)) opprK -def2xy exprMn_n exprMn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrN mulrAC mulrA -mulrA mulrACA -!normCK mulNrn addNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{def_xy def2xy} def_yx: `|y * x| = y * x^*.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: (mulIf nz2); rewrite !mulr_natr mulrC normrM def2xy def_xy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}(divfK nz_x y) invC_norm mulrCA -{}def_yx !normrM invfM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrCA divfK ?normr_eq0 // mulrAC mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC_sum_eq (I : finType) (P : pred I) (F : I -> C) : `|\\sum_(i | P i) F i| = \\sum_(i | P i) `|F i| -> {t : C | `|t| == 1 & forall i, P i -> F i = `|F i| * t}.",
            "VernacStartTheoremProof",
            "e30f56713299e6e788296abc3ecd1834504da3af"
        ],
        [
            "have [i /andP[Pi nzFi] | F0] := pickP [pred i | P i & F i != 0]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists 1 => [|i Pi]; first by rewrite normr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/nandP: (F0 i) => [/negP[]// | /negbNE/eqP->]; rewrite normr0 mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !(bigD1 i Pi) /= => norm_sumF; pose Q j := P j && (j != i).",
            "VernacExtend",
            "9d8fbc7ebaadb48200c542591ceec3e0f555a812"
        ],
        [
            "rewrite -normr_eq0 in nzFi; set c := F i / `|F i|; exists c => [|j Pj].",
            "VernacExtend",
            "ee6f95d9a37eb9fd26e9c84c7cb80dd1aaecc234"
        ],
        [
            "by rewrite normrM normfV normr_id divff.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [Qj | /nandP[/negP[]// | /negbNE/eqP->]] := boolP (Q j); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mulrC divfK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: `|F i + F j| = `|F i| + `|F j|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "do [rewrite !(bigD1 j Qj) /=; set z := \\sum_(k | _) `|_|] in norm_sumF.",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "apply/eqP; rewrite eqr_le ler_norm_add -(ler_add2r z) -addrA -norm_sumF addrA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (ler_trans (ler_norm_add _ _)) // ler_add2l ler_norm_sum.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/normC_add_eq=> k _ [/(canLR (mulKf nzFi)) <-]; rewrite -(mulrC (F i)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC_sum_eq1 (I : finType) (P : pred I) (F : I -> C) : `|\\sum_(i | P i) F i| = (\\sum_(i | P i) `|F i|) -> (forall i, P i -> `|F i| = 1) -> {t : C | `|t| == 1 & forall i, P i -> F i = t}.",
            "VernacStartTheoremProof",
            "945eee0b0cd574a670c6a4d7591bfdc6a47b4c6a"
        ],
        [
            "case/normC_sum_eq=> t t1 defF normF.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists t => // i Pi; rewrite defF // normF // mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC_sum_upper (I : finType) (P : pred I) (F G : I -> C) : (forall i, P i -> `|F i| <= G i) -> \\sum_(i | P i) F i = \\sum_(i | P i) G i -> forall i, P i -> F i = G i.",
            "VernacStartTheoremProof",
            "8e293b7e30699d7299ceb9d448ad2267294a03d3"
        ],
        [
            "set sumF := \\sum_(i | _) _; set sumG := \\sum_(i | _) _ => leFG eq_sumFG.",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "have posG i: P i -> 0 <= G i by move/leFG; apply: ler_trans; apply: normr_ge0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have norm_sumG: `|sumG| = sumG by rewrite ger0_norm ?sumr_ge0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have norm_sumF: `|sumF| = \\sum_(i | P i) `|F i|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqr_le ler_norm_sum eq_sumFG norm_sumG -subr_ge0 -sumrB.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite sumr_ge0 // => i Pi; rewrite subr_ge0 ?leFG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [t _ defF] := normC_sum_eq norm_sumF.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [/(psumr_eq0P posG) G0 i Pi | nz_sumG] := eqVneq sumG 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqP; rewrite G0 // -normr_eq0 eqr_le normr_ge0 -(G0 i Pi) leFG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have t1: t = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (mulfI nz_sumG); rewrite mulr1 -{1}norm_sumG -eq_sumFG norm_sumF.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mulr_suml -(eq_bigr _ defF).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /psumr_eq0P eqFG i: P i -> 0 <= G i - F i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> Pi; rewrite subr_ge0 defF // t1 mulr1 leFG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> i /eqFG/(canRL (subrK _))->; rewrite ?add0r //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite sumrB -/sumF eq_sumFG subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC_sub_eq x y : `|x - y| = `|x| - `|y| -> {t | `|t| == 1 & (x, y) = (`|x| * t, `|y| * t)}.",
            "VernacStartTheoremProof",
            "9601c40587fd35e6c52ce2037d2d2d3da40bec16"
        ],
        [
            "rewrite -{-1}(subrK y x) => /(canLR (subrK _))/esym-Dx; rewrite Dx.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by have [t ? [Dxy Dy]] := normC_add_eq Dx; exists t; rewrite // mulrDl -Dxy -Dy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ClosedFieldTheory.",
            "VernacEndSegment",
            "3e6c32b4fca746280f8cc677a34c34748553393c"
        ],
        [
            "Notation \"n .-root\" := (@nthroot _ n) (at level 2, format \"n .-root\") : ring_scope.",
            "VernacNotation",
            "c32e2f8a40d54c331fe03784c753a882cae2c8d4"
        ],
        [
            "Notation sqrtC := 2.-root.",
            "VernacSyntacticDefinition",
            "cb4d3bd564308771491b43c0b62f8f837e290d38"
        ],
        [
            "Notation \"'i\" := (@imaginaryC _) (at level 0) : ring_scope.",
            "VernacNotation",
            "55feb1e030a1e409e20702994e5c29b9e68ef5e2"
        ],
        [
            "Notation \"'Re z\" := (Re z) (at level 10, z at level 8) : ring_scope.",
            "VernacNotation",
            "6e607d49143e9602c4a6c6c55c93ecf2c0402deb"
        ],
        [
            "Notation \"'Im z\" := (Im z) (at level 10, z at level 8) : ring_scope.",
            "VernacNotation",
            "cf1c2ce6ae4bf4a048ebc7fe3357286872a8ebb7"
        ],
        [
            "Arguments conjCK {C} x.",
            "VernacArguments",
            "89ef47f34795ef25233f51627946edebbf47a24e"
        ],
        [
            "Arguments sqrCK {C} [x] le0x.",
            "VernacArguments",
            "7f8c7b22da703670568bb7f01726f2a199ced72c"
        ],
        [
            "Arguments sqrCK_P {C x}.",
            "VernacArguments",
            "f62260f7c0cc8b686d25687b82ae812de4296858"
        ],
        [
            "End Theory.",
            "VernacEndSegment",
            "3b5383a8665fcdb23b7893346ca6ee697173139d"
        ],
        [
            "Module RealMixin.",
            "VernacDefineModule",
            "1e49b12cd93964360a7253fcd45111972f7db624"
        ],
        [
            "Section RealMixins.",
            "VernacBeginSection",
            "12606083f8610a0275a0849d64ebbae84c2278c7"
        ],
        [
            "Variables (R : idomainType) (le : rel R) (lt : rel R) (norm : R -> R).",
            "VernacAssumption",
            "f639b71f92d786dad659e361a63af8ae131822cc"
        ],
        [
            "Local Infix \"<=\" := le.",
            "VernacInfix",
            "e5df92cbce8a5c12fb7a7a754a6b1e0c0b429acc"
        ],
        [
            "Local Infix \"<\" := lt.",
            "VernacInfix",
            "b8846c3fb55ebac32c41d22da2cc4a2057bbe6de"
        ],
        [
            "Local Notation \"`| x |\" := (norm x) : ring_scope.",
            "VernacNotation",
            "0fa9667d998fa795c2139330bd9abf007f0bfc7c"
        ],
        [
            "Section LeMixin.",
            "VernacBeginSection",
            "aba2a41eb78af1e3884a479bf753e45745a2d512"
        ],
        [
            "Hypothesis le0_add : forall x y, 0 <= x -> 0 <= y -> 0 <= x + y.",
            "VernacAssumption",
            "7b54e77f5f06c616a3a33a05dd1f81dcf2b38a0c"
        ],
        [
            "Hypothesis le0_mul : forall x y, 0 <= x -> 0 <= y -> 0 <= x * y.",
            "VernacAssumption",
            "5d656b455fb1e15a5301567e1a86b0c00e2f8801"
        ],
        [
            "Hypothesis le0_anti : forall x, 0 <= x -> x <= 0 -> x = 0.",
            "VernacAssumption",
            "dde47fdc6524916c7902677f7f693f8b574e348b"
        ],
        [
            "Hypothesis sub_ge0 : forall x y, (0 <= y - x) = (x <= y).",
            "VernacAssumption",
            "3de8cd280e7c58f2123c5f0f5d69f16694717691"
        ],
        [
            "Hypothesis le0_total : forall x, (0 <= x) || (x <= 0).",
            "VernacAssumption",
            "439e18d2d424756da4ccb9a11d9acc28377f0c7c"
        ],
        [
            "Hypothesis normN: forall x, `|- x| = `|x|.",
            "VernacAssumption",
            "b3ba7cd6c5803eeff6864befed5841884664d4a8"
        ],
        [
            "Hypothesis ge0_norm : forall x, 0 <= x -> `|x| = x.",
            "VernacAssumption",
            "fde16b475097a39bef6ccd59fd7685fbdb5da17c"
        ],
        [
            "Hypothesis lt_def : forall x y, (x < y) = (y != x) && (x <= y).",
            "VernacAssumption",
            "1a3023cc68de76731fedc8b20c1e67da3e8874cf"
        ],
        [
            "Let le0N x : (0 <= - x) = (x <= 0).",
            "VernacDefinition",
            "bd843a3a50075874aec82bd1041a25f86c05d34f"
        ],
        [
            "by rewrite -sub0r sub_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let leN_total x : 0 <= x \\/ 0 <= - x.",
            "VernacDefinition",
            "8d84a0970b9af99b61b6ea6ec7a7f457342df1d3"
        ],
        [
            "by apply/orP; rewrite le0N le0_total.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let le00 : (0 <= 0).",
            "VernacDefinition",
            "ce07d086258dec472b6df0c70cc0aac850c85db7"
        ],
        [
            "by have:= le0_total 0; rewrite orbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let le01 : (0 <= 1).",
            "VernacDefinition",
            "0a1f9fa1c2128119f9a1dce6a78ed9de16ef9828"
        ],
        [
            "by case/orP: (le0_total 1)=> // ?; rewrite -[1]mul1r -mulrNN le0_mul ?le0N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lt0_add x y : 0 < x -> 0 < y -> 0 < x + y.",
            "VernacStartTheoremProof",
            "dc101e6550022007c3120634e2d573525ae4eba5"
        ],
        [
            "rewrite !lt_def => /andP[x_neq0 l0x] /andP[y_neq0 l0y]; rewrite le0_add //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite andbT addr_eq0; apply: contraNneq x_neq0 => hxy.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite [x]le0_anti // hxy -le0N opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact eq0_norm x : `|x| = 0 -> x = 0.",
            "VernacStartTheoremProof",
            "3512e029985399d8ed41aeb2ee7422bb6bbe9231"
        ],
        [
            "case: (leN_total x) => /ge0_norm => [-> // | Dnx nx0].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -[x]opprK -Dnx normN nx0 oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact le_def x y : (x <= y) = (`|y - x| == y - x).",
            "VernacStartTheoremProof",
            "29b6f1915256cc09a6d6289c23d4b28e0b9d9f61"
        ],
        [
            "wlog ->: x y / x = 0 by move/(_ 0 (y - x)); rewrite subr0 sub_ge0 => ->.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "rewrite {x}subr0; apply/idP/eqP=> [/ge0_norm// | Dy].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by have [//| ny_ge0] := leN_total y; rewrite -Dy -normN ge0_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact normM : {morph norm : x y / x * y}.",
            "VernacStartTheoremProof",
            "e5b3abe2f4b7ba66ba9f7791b3228f2c15cd925c"
        ],
        [
            "move=> x y /=; wlog x_ge0 : x / 0 <= x.",
            "VernacExtend",
            "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
        ],
        [
            "by move=> IHx; case: (leN_total x) => /IHx//; rewrite mulNr !normN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "wlog y_ge0 : y / 0 <= y; last by rewrite ?ge0_norm ?le0_mul.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> IHy; case: (leN_total y) => /IHy//; rewrite mulrN !normN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact le_normD x y : `|x + y| <= `|x| + `|y|.",
            "VernacStartTheoremProof",
            "a47d99bf835b090ec0a285cee522c359bc6a776f"
        ],
        [
            "wlog x_ge0 : x y / 0 <= x.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "by move=> IH; case: (leN_total x) => /IH// /(_ (- y)); rewrite -opprD !normN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -sub_ge0 ge0_norm //; have [y_ge0 | ny_ge0] := leN_total y.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by rewrite !ge0_norm ?subrr ?le0_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -normN ge0_norm //; have [hxy|hxy] := leN_total (x + y).",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by rewrite ge0_norm // opprD addrCA -addrA addKr le0_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -normN ge0_norm // opprK addrCA addrNK le0_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_total x y : (x <= y) || (y <= x).",
            "VernacStartTheoremProof",
            "8121f4c52db7dff3398bcdaa94368ec24fcb5ad3"
        ],
        [
            "by rewrite -sub_ge0 -opprB le0N orbC -sub_ge0 le0_total.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Le := Mixin le_normD lt0_add eq0_norm (in2W le_total) normM le_def lt_def.",
            "VernacDefinition",
            "fef7e704f2d2b4b6513bd596253eb8a1ca87ea23"
        ],
        [
            "Lemma Real (R' : numDomainType) & phant R' : R' = NumDomainType R Le -> real_axiom R'.",
            "VernacStartTheoremProof",
            "9fd799b5bcdc31b54cf53078e40d054292484693"
        ],
        [
            "by move->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LeMixin.",
            "VernacEndSegment",
            "5e764f43ccea6421b786db4c389247df11b186c0"
        ],
        [
            "Section LtMixin.",
            "VernacBeginSection",
            "b81ba6bdb976c4d7f0d4a7e457fd6c6186f8a4ef"
        ],
        [
            "Hypothesis lt0_add : forall x y, 0 < x -> 0 < y -> 0 < x + y.",
            "VernacAssumption",
            "2dcce0386f2634b7f81ddd3d6476be0c959208b9"
        ],
        [
            "Hypothesis lt0_mul : forall x y, 0 < x -> 0 < y -> 0 < x * y.",
            "VernacAssumption",
            "8edda4a84166a0f312955c21e94f6a180f00a529"
        ],
        [
            "Hypothesis lt0_ngt0 : forall x, 0 < x -> ~~ (x < 0).",
            "VernacAssumption",
            "05352929f62b0e845d4c70ebc17193a014e685cc"
        ],
        [
            "Hypothesis sub_gt0 : forall x y, (0 < y - x) = (x < y).",
            "VernacAssumption",
            "131d3f27dd6523776e408a89715771ee7b8e863a"
        ],
        [
            "Hypothesis lt0_total : forall x, x != 0 -> (0 < x) || (x < 0).",
            "VernacAssumption",
            "6bef0108f3250438f8b39caddde69174fda12776"
        ],
        [
            "Hypothesis normN : forall x, `|- x| = `|x|.",
            "VernacAssumption",
            "b3ba7cd6c5803eeff6864befed5841884664d4a8"
        ],
        [
            "Hypothesis ge0_norm : forall x, 0 <= x -> `|x| = x.",
            "VernacAssumption",
            "fde16b475097a39bef6ccd59fd7685fbdb5da17c"
        ],
        [
            "Hypothesis le_def : forall x y, (x <= y) = (y == x) || (x < y).",
            "VernacAssumption",
            "acb058d76e3933258f4676a88259e81bd7e9df65"
        ],
        [
            "Fact le0_add x y : 0 <= x -> 0 <= y -> 0 <= x + y.",
            "VernacStartTheoremProof",
            "71818fbb1a27877349f08319b2f19c6c8a189008"
        ],
        [
            "rewrite !le_def => /predU1P[->|x_gt0]; first by rewrite add0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/predU1P=> [->|y_gt0]; rewrite ?addr0 ?x_gt0 ?lt0_add // orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact le0_mul x y : 0 <= x -> 0 <= y -> 0 <= x * y.",
            "VernacStartTheoremProof",
            "c3dab7776d95fa0c0a58b8774f124eb740ac69e4"
        ],
        [
            "rewrite !le_def => /predU1P[->|x_gt0]; first by rewrite mul0r eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/predU1P=> [->|y_gt0]; rewrite ?mulr0 ?eqxx // orbC lt0_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact le0_anti x : 0 <= x -> x <= 0 -> x = 0.",
            "VernacStartTheoremProof",
            "7124a4821c856ad246fcb111c43890b20a3c9038"
        ],
        [
            "by rewrite !le_def => /predU1P[] // /lt0_ngt0/negPf-> /predU1P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact sub_ge0 x y : (0 <= y - x) = (x <= y).",
            "VernacStartTheoremProof",
            "f82a7b595de58c503927f33dbda2ba16fe238e5b"
        ],
        [
            "by rewrite !le_def subr_eq0 sub_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lt_def x y : (x < y) = (y != x) && (x <= y).",
            "VernacStartTheoremProof",
            "4bafc2d2bd3f9f87858265dc232bdc285fba90e4"
        ],
        [
            "rewrite le_def; case: eqP => //= ->; rewrite -sub_gt0 subrr.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by apply/idP=> lt00; case/negP: (lt0_ngt0 lt00).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact le0_total x : (0 <= x) || (x <= 0).",
            "VernacStartTheoremProof",
            "0ad77e30209d090a2ea67497d68b700276f2d7a8"
        ],
        [
            "by rewrite !le_def [0 == _]eq_sym; have [|/lt0_total] := altP eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Lt := Le le0_add le0_mul le0_anti sub_ge0 le0_total normN ge0_norm lt_def.",
            "VernacDefinition",
            "ea62cd4508c5fc8fd12a32bc8acfc6483aed86f4"
        ],
        [
            "End LtMixin.",
            "VernacEndSegment",
            "8f9503f1bb65060597e1374f250e55e74e63874a"
        ],
        [
            "End RealMixins.",
            "VernacEndSegment",
            "aa4d5b02e7a28a9e20727b65cb4ac2fc79c6e819"
        ],
        [
            "End RealMixin.",
            "VernacEndSegment",
            "1eaa93241c95cb7fac15313196f3943c21c05e91"
        ],
        [
            "End Num.",
            "VernacEndSegment",
            "483c944ce8cd23f9ae5621f19e47f4447ca1be5d"
        ],
        [
            "Export Num.NumDomain.Exports Num.NumField.Exports Num.ClosedField.Exports.",
            "VernacImport",
            "a948ae2a7b4e2d78be0f4f523a4508924d827a62"
        ],
        [
            "Export Num.RealDomain.Exports Num.RealField.Exports.",
            "VernacImport",
            "3e85cbccd1640b857caf892a1a008434274fdbdb"
        ],
        [
            "Export Num.ArchimedeanField.Exports Num.RealClosedField.Exports.",
            "VernacImport",
            "306fdce382a0b9f6641d6dde9894e2be9d6292b1"
        ],
        [
            "Export Num.Syntax Num.PredInstances.",
            "VernacImport",
            "30f436800948b34d0411423882908ef0521758c3"
        ],
        [
            "Notation RealLeMixin := Num.RealMixin.Le.",
            "VernacSyntacticDefinition",
            "89961147ac138df0a9d4eba12c343b6c51cd29a9"
        ],
        [
            "Notation RealLtMixin := Num.RealMixin.Lt.",
            "VernacSyntacticDefinition",
            "6ea05468f4d675c3613550af4f300dc8c7820d34"
        ],
        [
            "Notation RealLeAxiom R := (Num.RealMixin.Real (Phant R) (erefl _)).",
            "VernacSyntacticDefinition",
            "1fb21605faab1534561702b6d16eb0db70f28714"
        ],
        [
            "Notation ImaginaryMixin := Num.ClosedField.ImaginaryMixin.",
            "VernacSyntacticDefinition",
            "6ec1ea058a4665123be6fb6cbbca739de0ecdeed"
        ]
    ],
    "proofs": [
        {
            "name": "Rpos_key",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rneg_key",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rnneg_key",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rreal_key",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr0_eq0",
            "line_nb": 541,
            "steps": [
                {
                    "command": [
                        "by case: R x => ? [? []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_norm_add",
            "line_nb": 544,
            "steps": [
                {
                    "command": [
                        "by case: R x y => ? [? []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addr_gt0",
            "line_nb": 547,
            "steps": [
                {
                    "command": [
                        "by case: R x y => ? [? []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_leVge",
            "line_nb": 550,
            "steps": [
                {
                    "command": [
                        "by case: R x y => ? [? []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normrM",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "by case: R => ? [? []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_def",
            "line_nb": 556,
            "steps": [
                {
                    "command": [
                        "by case: R x y => ? [? []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_def",
            "line_nb": 559,
            "steps": [
                {
                    "command": [
                        "by case: R x y => ? [? []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger0_def",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "by rewrite ler_def subr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subr_ge0",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "by rewrite ger0_def -ler_def.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_ge0",
            "line_nb": 568,
            "steps": [
                {
                    "command": [
                        "by rewrite -sub0r subr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler01",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "have n1_nz: `|1| != 0 :> R by apply: contraNneq (@oner_neq0 R) => /normr0_eq0->.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite ger0_def -(inj_eq (mulfI n1_nz)) -normrM !mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr01",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_def oner_neq0 ler01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrW",
            "line_nb": 578,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_def => /andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerr",
            "line_nb": 581,
            "steps": [
                {
                    "command": [
                        "have n2: `|2%:R| == 2%:R :> R by rewrite -ger0_def ltrW ?addr_gt0 ?ltr01.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite ler_def subrr -(inj_eq (addrI `|0|)) addr0 -mulr2n -mulr_natr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqP n2) -normrM mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le0r",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_def; case: eqP => // ->; rewrite lerr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addr_ge0",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "rewrite le0r; case/predU1P=> [-> | x_pos]; rewrite ?add0r // le0r.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "by case/predU1P=> [-> | y_pos]; rewrite ltrW ?addr0 ?addr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulr_rgt0",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "rewrite !ltr_def !ger0_def normrM mulf_eq0 negb_or => /andP[x_neq0 /eqP->].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite x_neq0 (inj_eq (mulfI x_neq0)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "posrE",
            "line_nb": 597,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nnegrE",
            "line_nb": 600,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realE",
            "line_nb": 603,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_divr_closed",
            "line_nb": 606,
            "steps": [
                {
                    "command": [
                        "split=> [|x y x_gt0 y_gt0]; rewrite posrE ?ltr01 //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "have [Uy|/invr_out->] := boolP (y \\is a GRing.unit); last by rewrite pmulr_rgt0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(pmulr_rgt0 _ y_gt0) mulrC divrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nneg_divr_closed",
            "line_nb": 613,
            "steps": [
                {
                    "command": [
                        "split=> [|x y]; rewrite !nnegrE ?ler01 ?le0r // -!posrE.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "case/predU1P=> [-> _ | x_gt0]; first by rewrite mul0r eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/predU1P=> [-> | y_gt0]; rewrite ?invr0 ?mulr0 ?eqxx // orbC rpred_div.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nneg_addr_closed",
            "line_nb": 620,
            "steps": [
                {
                    "command": [
                        "by split; [apply: lerr | apply: addr_ge0].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_oppr_closed",
            "line_nb": 625,
            "steps": [
                {
                    "command": [
                        "by move=> x; rewrite /= !realE oppr_ge0 orbC -!oppr_ge0 opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_addr_closed",
            "line_nb": 629,
            "steps": [
                {
                    "command": [
                        "split=> [|x y Rx Ry]; first by rewrite realE lerr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "without loss{Rx} x_ge0: x y Ry / 0 <= x.",
                        "VernacExtend",
                        "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
                    ]
                },
                {
                    "command": [
                        "case/orP: Rx => [? | x_le0]; first exact.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -rpredN opprD; apply; rewrite ?rpredN ?oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/orP: Ry => [y_ge0 | y_le0]; first by rewrite realE -nnegrE rpredD.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite realE -[y]opprK orbC -oppr_ge0 opprB !subr_ge0 ger_leVge ?oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_divr_closed",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "split=> [|x y Rx Ry]; first by rewrite realE ler01.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "without loss{Rx} x_ge0: x / 0 <= x.",
                        "VernacExtend",
                        "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
                    ]
                },
                {
                    "command": [
                        "case/orP: Rx => [? | x_le0]; first exact.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -rpredN -mulNr; apply; rewrite ?oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "without loss{Ry} y_ge0: y / 0 <= y; last by rewrite realE -nnegrE rpred_div.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/orP: Ry => [? | y_le0]; first exact.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -rpredN -mulrN -invrN; apply; rewrite ?oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "num_real",
            "line_nb": 656,
            "steps": [
                {
                    "command": [
                        "by case: R x => T [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "archi_bound_subproof",
            "line_nb": 659,
            "steps": [
                {
                    "command": [
                        "by case: R => ? [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_ivt",
            "line_nb": 664,
            "steps": [
                {
                    "command": [
                        "by case: R => ? [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtr_subproof",
            "line_nb": 667,
            "steps": [
                {
                    "command": [
                        "case x_ge0: (0 <= x); last by exists 0; rewrite ?lerr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have le0x1: 0 <= x + 1 by rewrite -nnegrE rpredD ?rpred1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [|y /andP[y_ge0 _]] := @poly_ivt ('X^2 - x%:P) _ _ le0x1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !hornerE -subr_ge0 add0r opprK x_ge0 -expr2 sqrrD mulr1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addrAC !addrA addrK -nnegrE !rpredD ?rpredX ?rpred1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rootE !hornerE subr_eq0; exists y.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gerE",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtrE",
            "line_nb": 715,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negrE",
            "line_nb": 721,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrr",
            "line_nb": 733,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_def eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_neqAle",
            "line_nb": 740,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_def eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_eqVlt",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_neqAle; case: eqP => // ->; rewrite lerr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt0r",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_def.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt0r_neq0",
            "line_nb": 752,
            "steps": [
                {
                    "command": [
                        "by rewrite lt0r; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0_neq0",
            "line_nb": 755,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_neqAle; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr_eqF",
            "line_nb": 758,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_def; case/andP; move/negPf=> ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_eqF",
            "line_nb": 761,
            "steps": [
                {
                    "command": [
                        "by move=> hyx; rewrite eq_sym gtr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulr_rge0",
            "line_nb": 767,
            "steps": [
                {
                    "command": [
                        "by rewrite !le0r mulf_eq0; case: eqP => // [-> /negPf[] | _ /pmulr_rgt0->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler0n",
            "line_nb": 776,
            "steps": [
                {
                    "command": [
                        "by rewrite -nnegrE rpred_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0Sn",
            "line_nb": 780,
            "steps": [
                {
                    "command": [
                        "by elim: n => // n; apply: addr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0n",
            "line_nb": 783,
            "steps": [
                {
                    "command": [
                        "by case: n => //= n; apply: ltr0Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnatr_eq0",
            "line_nb": 787,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n]; rewrite ?mulr0n ?eqxx // gtr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_num",
            "line_nb": 790,
            "steps": [
                {
                    "command": [
                        "by case=> // p /=; rewrite !inE pnatr_eq0 andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_idP",
            "line_nb": 796,
            "steps": [
                {
                    "command": [
                        "by rewrite ger0_def; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger0_norm",
            "line_nb": 799,
            "steps": [
                {
                    "command": [
                        "exact: normr_idP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr0",
            "line_nb": 802,
            "steps": [
                {
                    "command": [
                        "exact: ger0_norm.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr1",
            "line_nb": 805,
            "steps": [
                {
                    "command": [
                        "exact: ger0_norm.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_nat",
            "line_nb": 808,
            "steps": [
                {
                    "command": [
                        "exact: ger0_norm.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normrMn",
            "line_nb": 811,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulr_natl normrM normr_nat mulr_natl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_prod",
            "line_nb": 814,
            "steps": [
                {
                    "command": [
                        "exact: (big_morph norm normrM normr1).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normrX",
            "line_nb": 817,
            "steps": [
                {
                    "command": [
                        "by rewrite -(card_ord n) -!prodr_const normr_prod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_unit",
            "line_nb": 820,
            "steps": [
                {
                    "command": [
                        "move=> x /= /unitrP [y [yx xy]]; apply/unitrP; exists `|y|.",
                        "VernacExtend",
                        "8ba46be3c075524aac26608cf9979831956d13b3"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!normrM xy yx normr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr0P",
            "line_nb": 828,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP eqP)=> [->|/normr0_eq0 //]; apply: normr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normrN1",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "have: `|-1| ^+ 2 == 1 :> R by rewrite -normrX -signr_odd normr1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite sqrf_eq1 => /orP[/eqP //|]; rewrite -ger0_def le0r oppr_eq0 oner_eq0.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by move/(addr_gt0 ltr01); rewrite subrr ltrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normrN",
            "line_nb": 837,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulN1r normrM normrN1 mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "distrC",
            "line_nb": 840,
            "steps": [
                {
                    "command": [
                        "by rewrite -opprB normrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler0_def",
            "line_nb": 843,
            "steps": [
                {
                    "command": [
                        "by rewrite ler_def sub0r normrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_id",
            "line_nb": 846,
            "steps": [
                {
                    "command": [
                        "have nz2: 2%:R != 0 :> R by rewrite pnatr_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: (mulfI nz2); rewrite -{1}normr_nat -normrM mulr_natl mulr2n ger0_norm //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{2}normrN -normr0 -(subrr x) ler_norm_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_ge0",
            "line_nb": 851,
            "steps": [
                {
                    "command": [
                        "by rewrite ger0_def normr_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler0_norm",
            "line_nb": 855,
            "steps": [
                {
                    "command": [
                        "by move=> x_le0; rewrite -[r in _ = r]ger0_norm ?normrN ?oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subr_gt0",
            "line_nb": 863,
            "steps": [
                {
                    "command": [
                        "by rewrite !ltr_def subr_eq0 subr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subr_le0",
            "line_nb": 866,
            "steps": [
                {
                    "command": [
                        "by rewrite -subr_ge0 opprB add0r subr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subr_lt0",
            "line_nb": 869,
            "steps": [
                {
                    "command": [
                        "by rewrite -subr_gt0 opprB add0r subr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_asym",
            "line_nb": 875,
            "steps": [
                {
                    "command": [
                        "move=> x y; rewrite !ler_def distrC -opprB -addr_eq0 => /andP[/eqP->].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulr2n -mulr_natl mulf_eq0 subr_eq0 pnatr_eq0 => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_le",
            "line_nb": 879,
            "steps": [
                {
                    "command": [
                        "by apply/eqP/idP=> [->|/ler_asym]; rewrite ?lerr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_trans",
            "line_nb": 882,
            "steps": [
                {
                    "command": [
                        "move=> y x z le_xy le_yz.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite -subr_gt0 -(subrK y z) -addrA addr_gt0 ?subr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_lt_trans",
            "line_nb": 886,
            "steps": [
                {
                    "command": [
                        "by rewrite !ler_eqVlt => /orP[/eqP -> //|/ltr_trans]; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_le_trans",
            "line_nb": 889,
            "steps": [
                {
                    "command": [
                        "by rewrite !ler_eqVlt => lxy /orP[/eqP <- //|/(ltr_trans lxy)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_trans",
            "line_nb": 892,
            "steps": [
                {
                    "command": [
                        "move=> y x z; rewrite !ler_eqVlt => /orP [/eqP -> //|lxy].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by move=> /orP [/eqP <-|/(ltr_trans lxy) ->]; rewrite ?lxy orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_asym",
            "line_nb": 906,
            "steps": [
                {
                    "command": [
                        "by apply/negP=> /andP [/ltr_trans hyx /hyx]; rewrite ltrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_anti",
            "line_nb": 909,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite -eqr_le=> /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_le_asym",
            "line_nb": 912,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_neqAle -andbA -eqr_le eq_sym; case: (_ == _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_lt_asym",
            "line_nb": 915,
            "steps": [
                {
                    "command": [
                        "by rewrite andbC ltr_le_asym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_geF",
            "line_nb": 919,
            "steps": [
                {
                    "command": [
                        "by move=> xy; apply: contraTF isT=> /(ltr_le_trans xy); rewrite ltrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_gtF",
            "line_nb": 922,
            "steps": [
                {
                    "command": [
                        "by apply: contraTF=> /ltr_geF->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_le0",
            "line_nb": 926,
            "steps": [
                {
                    "command": [
                        "by rewrite -normr_eq0 eqr_le normr_ge0 andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_lt0",
            "line_nb": 929,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_neqAle normr_le0 normr_eq0 andNb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_gt0",
            "line_nb": 932,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_def normr_eq0 normr_ge0 andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtnE",
            "line_nb": 952,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_neqAle eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr'E",
            "line_nb": 958,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_neqAle eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_anti",
            "line_nb": 961,
            "steps": [
                {
                    "command": [
                        "by move=> m n; rewrite -eqn_leq => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "geq_anti",
            "line_nb": 964,
            "steps": [
                {
                    "command": [
                        "by move=> m n; rewrite -eqn_leq => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_antiR",
            "line_nb": 969,
            "steps": [
                {
                    "command": [
                        "by move=> ??; rewrite andbC; apply: ler_anti.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_antiR'",
            "line_nb": 972,
            "steps": [
                {
                    "command": [
                        "by move=> ??; rewrite andbC; apply: ler_anti.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "geq_total",
            "line_nb": 976,
            "steps": [
                {
                    "command": [
                        "by move=> m n; apply: leq_total.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrW_homo",
            "line_nb": 982,
            "steps": [
                {
                    "command": [
                        "exact: homoW.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrW_nhomo",
            "line_nb": 985,
            "steps": [
                {
                    "command": [
                        "exact: homoW.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_homo_ltr",
            "line_nb": 988,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_nhomo_ltr",
            "line_nb": 991,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incr_inj",
            "line_nb": 994,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decr_inj",
            "line_nb": 997,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerW_mono",
            "line_nb": 1000,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerW_nmono",
            "line_nb": 1003,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrW_homo_in",
            "line_nb": 1006,
            "steps": [
                {
                    "command": [
                        "exact: homoW_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrW_nhomo_in",
            "line_nb": 1009,
            "steps": [
                {
                    "command": [
                        "exact: homoW_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_homo_ltr_in",
            "line_nb": 1012,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_nhomo_ltr_in",
            "line_nb": 1015,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incr_inj_in",
            "line_nb": 1018,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decr_inj_in",
            "line_nb": 1021,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerW_mono_in",
            "line_nb": 1024,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerW_nmono_in",
            "line_nb": 1027,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltnrW_homo",
            "line_nb": 1034,
            "steps": [
                {
                    "command": [
                        "exact: homoW.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltnrW_nhomo",
            "line_nb": 1037,
            "steps": [
                {
                    "command": [
                        "exact: homoW.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_homo_ltnr",
            "line_nb": 1040,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_nhomo_ltnr",
            "line_nb": 1043,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incnr_inj",
            "line_nb": 1046,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decnr_inj_inj",
            "line_nb": 1049,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lenrW_mono",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lenrW_nmono",
            "line_nb": 1055,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lenr_mono",
            "line_nb": 1058,
            "steps": [
                {
                    "command": [
                        "exact: total_homo_mono.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lenr_nmono",
            "line_nb": 1061,
            "steps": [
                {
                    "command": [
                        "exact: total_homo_mono.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltnrW_homo_in",
            "line_nb": 1064,
            "steps": [
                {
                    "command": [
                        "exact: homoW_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltnrW_nhomo_in",
            "line_nb": 1067,
            "steps": [
                {
                    "command": [
                        "exact: homoW_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_homo_ltnr_in",
            "line_nb": 1070,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_nhomo_ltnr_in",
            "line_nb": 1073,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incnr_inj_in",
            "line_nb": 1076,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decnr_inj_inj_in",
            "line_nb": 1079,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lenrW_mono_in",
            "line_nb": 1082,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lenrW_nmono_in",
            "line_nb": 1085,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lenr_mono_in",
            "line_nb": 1088,
            "steps": [
                {
                    "command": [
                        "exact: total_homo_mono_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lenr_nmono_in",
            "line_nb": 1091,
            "steps": [
                {
                    "command": [
                        "exact: total_homo_mono_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrnW_homo",
            "line_nb": 1098,
            "steps": [
                {
                    "command": [
                        "exact: homoW.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrnW_nhomo",
            "line_nb": 1101,
            "steps": [
                {
                    "command": [
                        "exact: homoW.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_homo_ltrn",
            "line_nb": 1104,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_nhomo_ltrn",
            "line_nb": 1107,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incrn_inj",
            "line_nb": 1110,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decrn_inj",
            "line_nb": 1113,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lernW_mono",
            "line_nb": 1116,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lernW_nmono",
            "line_nb": 1119,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrnW_homo_in",
            "line_nb": 1122,
            "steps": [
                {
                    "command": [
                        "exact: homoW_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrnW_nhomo_in",
            "line_nb": 1125,
            "steps": [
                {
                    "command": [
                        "exact: homoW_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_homo_ltrn_in",
            "line_nb": 1128,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_nhomo_ltrn_in",
            "line_nb": 1131,
            "steps": [
                {
                    "command": [
                        "exact: inj_homo_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incrn_inj_in",
            "line_nb": 1134,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decrn_inj_in",
            "line_nb": 1137,
            "steps": [
                {
                    "command": [
                        "exact: mono_inj_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lernW_mono_in",
            "line_nb": 1140,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lernW_nmono_in",
            "line_nb": 1143,
            "steps": [
                {
                    "command": [
                        "exact: anti_mono_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_opp2",
            "line_nb": 1151,
            "steps": [
                {
                    "command": [
                        "by move=> x y /=; rewrite -subr_ge0 opprK addrC subr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_opp2",
            "line_nb": 1155,
            "steps": [
                {
                    "command": [
                        "by move=> x y /=; rewrite lerW_nmono.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_oppr",
            "line_nb": 1160,
            "steps": [
                {
                    "command": [
                        "by rewrite (monoRL opprK ler_opp2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_oppr",
            "line_nb": 1163,
            "steps": [
                {
                    "command": [
                        "by rewrite (monoRL opprK (lerW_nmono _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_oppl",
            "line_nb": 1167,
            "steps": [
                {
                    "command": [
                        "by rewrite (monoLR opprK ler_opp2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_oppl",
            "line_nb": 1170,
            "steps": [
                {
                    "command": [
                        "by rewrite (monoLR opprK (lerW_nmono _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_gt0",
            "line_nb": 1177,
            "steps": [
                {
                    "command": [
                        "by rewrite lter_oppr oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_le0",
            "line_nb": 1181,
            "steps": [
                {
                    "command": [
                        "by rewrite lter_oppl oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_lt0",
            "line_nb": 1184,
            "steps": [
                {
                    "command": [
                        "by rewrite lter_oppl oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge0_cp",
            "line_nb": 1190,
            "steps": [
                {
                    "command": [
                        "by move=> hx; rewrite oppr_cp0 hx (@ler_trans _ 0) ?oppr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt0_cp",
            "line_nb": 1193,
            "steps": [
                {
                    "command": [
                        "move=> hx; move: (ltrW hx) => hx'; rewrite !ge0_cp hx' //.",
                        "VernacExtend",
                        "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
                    ]
                },
                {
                    "command": [
                        "by rewrite oppr_cp0 hx // (@ltr_trans _ 0) ?oppr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le0_cp",
            "line_nb": 1197,
            "steps": [
                {
                    "command": [
                        "by move=> hx; rewrite oppr_cp0 hx (@ler_trans _ 0) ?oppr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt0_cp",
            "line_nb": 1200,
            "steps": [
                {
                    "command": [
                        "move=> hx; move: (ltrW hx) => hx'; rewrite !le0_cp // hx'.",
                        "VernacExtend",
                        "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
                    ]
                },
                {
                    "command": [
                        "by rewrite oppr_cp0 hx // (@ltr_trans _ 0) ?oppr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger0_real",
            "line_nb": 1204,
            "steps": [
                {
                    "command": [
                        "by rewrite realE => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler0_real",
            "line_nb": 1207,
            "steps": [
                {
                    "command": [
                        "by rewrite realE orbC => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0_real",
            "line_nb": 1213,
            "steps": [
                {
                    "command": [
                        "by move=> /ltrW/ler0_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real0",
            "line_nb": 1216,
            "steps": [
                {
                    "command": [
                        "by rewrite ger0_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real1",
            "line_nb": 1220,
            "steps": [
                {
                    "command": [
                        "by rewrite ger0_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realn",
            "line_nb": 1224,
            "steps": [
                {
                    "command": [
                        "by rewrite ger0_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_leVge",
            "line_nb": 1227,
            "steps": [
                {
                    "command": [
                        "by rewrite -!oppr_ge0 => /(ger_leVge _) h /h; rewrite !ler_opp2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_leVge",
            "line_nb": 1230,
            "steps": [
                {
                    "command": [
                        "rewrite !realE; have [x_ge0 _|x_nge0 /= x_le0] := boolP (_ <= _); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by have [/(ler_trans x_le0)->|_ /(ler_leVge x_le0) //] := boolP (0 <= _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by have [/(ger_leVge x_ge0)|_ /ler_trans->] := boolP (0 <= _); rewrite ?orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realB",
            "line_nb": 1235,
            "steps": [
                {
                    "command": [
                        "exact: rpredB.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realN",
            "line_nb": 1238,
            "steps": [
                {
                    "command": [
                        "exact: rpredN.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realBC",
            "line_nb": 1241,
            "steps": [
                {
                    "command": [
                        "by rewrite -realN opprB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realD",
            "line_nb": 1244,
            "steps": [
                {
                    "command": [
                        "exact: rpredD.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lerP",
            "line_nb": 1250,
            "steps": [
                {
                    "command": [
                        "move=> xR /(real_leVge xR); have [le_xy _|Nle_xy /= le_yx] := boolP (_ <= _).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have [/(ler_lt_trans le_xy)|] := boolP (_ < _); first by rewrite ltrr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ler0_norm ?ger0_norm ?subr_cp0 ?opprB //; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [lt_yx|] := boolP (_ < _).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite ger0_norm ?ler0_norm ?subr_cp0 ?opprB //; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr_def le_yx andbT negbK=> /eqP exy; rewrite exy lerr in Nle_xy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ltrP",
            "line_nb": 1258,
            "steps": [
                {
                    "command": [
                        "by move=> xR yR; case: real_lerP=> //; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ltrNge",
            "line_nb": 1261,
            "steps": [
                {
                    "command": [
                        "by move=> x y xR yR /=; case: real_lerP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lerNgt",
            "line_nb": 1264,
            "steps": [
                {
                    "command": [
                        "by move=> x y xR yR /=; case: real_lerP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ltrgtP",
            "line_nb": 1267,
            "steps": [
                {
                    "command": [
                        "move=> xR yR; case: real_lerP => // [le_yx|lt_xy]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite gtr_eqF // ltr_eqF // ler_gtF ?ltrW //; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: real_lerP => // [le_xy|lt_yx]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr_eqF // gtr_eqF //; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /eqP ->: x == y by rewrite eqr_le le_yx le_xy.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite subrr eqxx; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ger0P",
            "line_nb": 1278,
            "steps": [
                {
                    "command": [
                        "move=> hx; rewrite -{2}[x]subr0; case: real_ltrP; by rewrite ?subr0 ?sub0r //; constructor.",
                        "VernacExtend",
                        "83d895b4ccde6e76d544d023288a8eb52ce43373"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ler0P",
            "line_nb": 1281,
            "steps": [
                {
                    "command": [
                        "move=> hx; rewrite -{2}[x]subr0; case: real_ltrP; by rewrite ?subr0 ?sub0r //; constructor.",
                        "VernacExtend",
                        "83d895b4ccde6e76d544d023288a8eb52ce43373"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ltrgt0P",
            "line_nb": 1284,
            "steps": [
                {
                    "command": [
                        "move=> hx; rewrite -{2}[x]subr0; case: real_ltrgtP; by rewrite ?subr0 ?sub0r //; constructor.",
                        "VernacExtend",
                        "83d895b4ccde6e76d544d023288a8eb52ce43373"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_neqr_lt",
            "line_nb": 1287,
            "steps": [
                {
                    "command": [
                        "by move=> * /=; case: real_ltrgtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_sub_real",
            "line_nb": 1290,
            "steps": [
                {
                    "command": [
                        "by move=> le_xy; rewrite ger0_real // subr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_sub_real",
            "line_nb": 1293,
            "steps": [
                {
                    "command": [
                        "by move=> le_xy; rewrite ler0_real // subr_le0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_real",
            "line_nb": 1296,
            "steps": [
                {
                    "command": [
                        "by move=> le_xy; rewrite -(addrNK x y) rpredDl ?ler_sub_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_real",
            "line_nb": 1299,
            "steps": [
                {
                    "command": [
                        "by move=> le_yx; rewrite -(ler_real le_yx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger1_real",
            "line_nb": 1302,
            "steps": [
                {
                    "command": [
                        "by move=> /ger_real->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler1_real",
            "line_nb": 1305,
            "steps": [
                {
                    "command": [
                        "by move=> /ler_real->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nreal_leF",
            "line_nb": 1308,
            "steps": [
                {
                    "command": [
                        "by move=> yR; apply: contraNF=> /ler_real->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nreal_geF",
            "line_nb": 1311,
            "steps": [
                {
                    "command": [
                        "by move=> yR; apply: contraNF=> /ger_real->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nreal_ltF",
            "line_nb": 1314,
            "steps": [
                {
                    "command": [
                        "by move=> yR xNR; rewrite ltr_def Nreal_leF ?andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nreal_gtF",
            "line_nb": 1317,
            "steps": [
                {
                    "command": [
                        "by move=> yR xNR; rewrite ltr_def Nreal_geF ?andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_wlog_ler",
            "line_nb": 1320,
            "steps": [
                {
                    "command": [
                        "move=> sP hP a b ha hb; wlog: a b ha hb / a <= b => [hwlog|]; last exact: hP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: (real_lerP ha hb)=> [/hP //|/ltrW hba]; apply: sP; apply: hP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_wlog_ltr",
            "line_nb": 1324,
            "steps": [
                {
                    "command": [
                        "move=> rP sP hP; apply: real_wlog_ler=> // a b.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite ler_eqVlt; case: (altP (_ =P _))=> [->|] //= _ lab; apply: hP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_add2l",
            "line_nb": 1328,
            "steps": [
                {
                    "command": [
                        "by move=> y z /=; rewrite -subr_ge0 opprD addrAC addNKr addrC subr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_add2r",
            "line_nb": 1331,
            "steps": [
                {
                    "command": [
                        "by move=> y z /=; rewrite ![_ + x]addrC ler_add2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_add2l",
            "line_nb": 1334,
            "steps": [
                {
                    "command": [
                        "by move=> y z /=; rewrite (lerW_mono (ler_add2l _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_add2r",
            "line_nb": 1337,
            "steps": [
                {
                    "command": [
                        "by move=> y z /=; rewrite (lerW_mono (ler_add2r _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_add",
            "line_nb": 1343,
            "steps": [
                {
                    "command": [
                        "by move=> lxy lzt; rewrite (@ler_trans _ (y + z)) ?lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_lt_add",
            "line_nb": 1346,
            "steps": [
                {
                    "command": [
                        "by move=> lxy lzt; rewrite (@ler_lt_trans _ (y + z)) ?lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_le_add",
            "line_nb": 1349,
            "steps": [
                {
                    "command": [
                        "by move=> lxy lzt; rewrite (@ltr_le_trans _ (y + z)) ?lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_add",
            "line_nb": 1352,
            "steps": [
                {
                    "command": [
                        "by move=> lxy lzt; rewrite ltr_le_add // ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_sub",
            "line_nb": 1355,
            "steps": [
                {
                    "command": [
                        "by move=> lxy ltz; rewrite ler_add // lter_opp2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_lt_sub",
            "line_nb": 1358,
            "steps": [
                {
                    "command": [
                        "by move=> lxy lzt; rewrite ler_lt_add // lter_opp2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_le_sub",
            "line_nb": 1361,
            "steps": [
                {
                    "command": [
                        "by move=> lxy lzt; rewrite ltr_le_add // lter_opp2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_sub",
            "line_nb": 1364,
            "steps": [
                {
                    "command": [
                        "by move=> lxy lzt; rewrite ltr_add // lter_opp2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_subl_addr",
            "line_nb": 1367,
            "steps": [
                {
                    "command": [
                        "by rewrite (monoLR (addrK _) (ler_add2r _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_subl_addr",
            "line_nb": 1370,
            "steps": [
                {
                    "command": [
                        "by rewrite (monoLR (addrK _) (ltr_add2r _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_subr_addr",
            "line_nb": 1373,
            "steps": [
                {
                    "command": [
                        "by rewrite (monoLR (addrNK _) (ler_add2r _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_subr_addr",
            "line_nb": 1376,
            "steps": [
                {
                    "command": [
                        "by rewrite (monoLR (addrNK _) (ltr_add2r _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_subl_addl",
            "line_nb": 1382,
            "steps": [
                {
                    "command": [
                        "by rewrite lter_sub_addr addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_subl_addl",
            "line_nb": 1385,
            "steps": [
                {
                    "command": [
                        "by rewrite lter_sub_addr addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_subr_addl",
            "line_nb": 1388,
            "steps": [
                {
                    "command": [
                        "by rewrite lter_sub_addr addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_subr_addl",
            "line_nb": 1391,
            "steps": [
                {
                    "command": [
                        "by rewrite lter_sub_addr addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_addl",
            "line_nb": 1397,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}[x]addr0 lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_addl",
            "line_nb": 1400,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}[x]addr0 lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_addr",
            "line_nb": 1403,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}[x]add0r lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_addr",
            "line_nb": 1406,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}[x]add0r lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_addl",
            "line_nb": 1409,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}[x]addr0 lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr_addl",
            "line_nb": 1412,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}[x]addr0 lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_addr",
            "line_nb": 1415,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}[x]add0r lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr_addr",
            "line_nb": 1418,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}[x]add0r lter_add2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_paddl",
            "line_nb": 1422,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite -[y]add0r ler_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_paddl",
            "line_nb": 1425,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite -[y]add0r ler_lt_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_spaddl",
            "line_nb": 1428,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite -[y]add0r ltr_le_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_spsaddl",
            "line_nb": 1431,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite -[y]add0r ltr_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_naddl",
            "line_nb": 1434,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite -[z]add0r ler_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_naddl",
            "line_nb": 1437,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite -[z]add0r ler_lt_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_snaddl",
            "line_nb": 1440,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite -[z]add0r ltr_le_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_snsaddl",
            "line_nb": 1443,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite -[z]add0r ltr_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_paddr",
            "line_nb": 1446,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite [_ + x]addrC ler_paddl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_paddr",
            "line_nb": 1449,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite [_ + x]addrC ltr_paddl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_spaddr",
            "line_nb": 1452,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite [_ + x]addrC ltr_spaddl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_spsaddr",
            "line_nb": 1455,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite [_ + x]addrC ltr_spsaddl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_naddr",
            "line_nb": 1458,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite [_ + x]addrC ler_naddl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_naddr",
            "line_nb": 1461,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite [_ + x]addrC ltr_naddl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_snaddr",
            "line_nb": 1464,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite [_ + x]addrC ltr_snaddl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_snsaddr",
            "line_nb": 1467,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite [_ + x]addrC ltr_snsaddl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "paddr_eq0",
            "line_nb": 1470,
            "steps": [
                {
                    "command": [
                        "rewrite le0r; case/orP=> [/eqP->|hx]; first by rewrite add0r eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (gtr_eqF hx) /= => hy; rewrite gtr_eqF // ltr_spaddl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "naddr_eq0",
            "line_nb": 1474,
            "steps": [
                {
                    "command": [
                        "by move=> lex0 ley0; rewrite -oppr_eq0 opprD paddr_eq0 ?oppr_cp0 // !oppr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addr_ss_eq0",
            "line_nb": 1477,
            "steps": [
                {
                    "command": [
                        "by case/orP=> /andP []; [apply: paddr_eq0 | apply: naddr_eq0].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumr_ge0",
            "line_nb": 1480,
            "steps": [
                {
                    "command": [
                        "exact: (big_ind _ _ (@ler_paddl 0)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_sum",
            "line_nb": 1483,
            "steps": [
                {
                    "command": [
                        "exact: (big_ind2 _ (lerr _) ler_add).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "psumr_eq0",
            "line_nb": 1486,
            "steps": [
                {
                    "command": [
                        "elim: r=> [|a r ihr hr] /=; rewrite (big_nil, big_cons); first by rewrite eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=> pa /=; rewrite ?paddr_eq0 ?ihr ?hr // sumr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "psumr_eq0P",
            "line_nb": 1490,
            "steps": [
                {
                    "command": [
                        "move=> F_ge0 /eqP; rewrite psumr_eq0 // -big_all big_andE => /forallP hF i Pi.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by move: (hF i); rewrite implyTb Pi /= => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pmul2l",
            "line_nb": 1494,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0 y z /=; rewrite -subr_ge0 -mulrBr pmulr_rge0 // subr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pmul2l",
            "line_nb": 1497,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; apply: lerW_mono (ler_pmul2l _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pmul2r",
            "line_nb": 1501,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0 y z /=; rewrite ![_ * x]mulrC ler_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pmul2r",
            "line_nb": 1504,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; apply: lerW_mono (ler_pmul2r _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nmul2l",
            "line_nb": 1508,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0 y z /=; rewrite -ler_opp2 -!mulNr ler_pmul2l ?oppr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nmul2l",
            "line_nb": 1511,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; apply: lerW_nmono (ler_nmul2l _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nmul2r",
            "line_nb": 1515,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0 y z /=; rewrite ![_ * x]mulrC ler_nmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nmul2r",
            "line_nb": 1518,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; apply: lerW_nmono (ler_nmul2r _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wpmul2l",
            "line_nb": 1522,
            "steps": [
                {
                    "command": [
                        "by rewrite le0r => /orP[/eqP-> y z | /ler_pmul2l/mono2W//]; rewrite !mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wpmul2r",
            "line_nb": 1525,
            "steps": [
                {
                    "command": [
                        "by move=> x_ge0 y z leyz; rewrite ![_ * x]mulrC ler_wpmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wnmul2l",
            "line_nb": 1528,
            "steps": [
                {
                    "command": [
                        "by move=> x_le0 y z leyz; rewrite -![x * _]mulrNN ler_wpmul2l ?lter_oppE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wnmul2r",
            "line_nb": 1531,
            "steps": [
                {
                    "command": [
                        "by move=> x_le0 y z leyz; rewrite -![_ * x]mulrNN ler_wpmul2r ?lter_oppE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pmul",
            "line_nb": 1534,
            "steps": [
                {
                    "command": [
                        "move=> x1ge0 x2ge0 le_xy1 le_xy2; have y1ge0 := ler_trans x1ge0 le_xy1.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "exact: ler_trans (ler_wpmul2r x2ge0 le_xy1) (ler_wpmul2l y1ge0 le_xy2).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pmul",
            "line_nb": 1538,
            "steps": [
                {
                    "command": [
                        "move=> x1ge0 x2ge0 lt_xy1 lt_xy2; have y1gt0 := ler_lt_trans x1ge0 lt_xy1.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite (ler_lt_trans (ler_wpmul2r x2ge0 (ltrW lt_xy1))) ?ltr_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pmuln2r",
            "line_nb": 1542,
            "steps": [
                {
                    "command": [
                        "by case: n => // n _ x y /=; rewrite -mulr_natl -[y *+ _]mulr_natl ler_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pmuln2r",
            "line_nb": 1545,
            "steps": [
                {
                    "command": [
                        "by move/ler_pmuln2r/lerW_mono.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrnI",
            "line_nb": 1548,
            "steps": [
                {
                    "command": [
                        "by move/ler_pmuln2r/incr_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_pmuln2r",
            "line_nb": 1551,
            "steps": [
                {
                    "command": [
                        "by move/pmulrnI/inj_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrn_lgt0",
            "line_nb": 1554,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite -(mul0rn _ n) ltr_pmuln2r // mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrn_llt0",
            "line_nb": 1557,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite -(mul0rn _ n) ltr_pmuln2r // mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrn_lge0",
            "line_nb": 1560,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite -(mul0rn _ n) ler_pmuln2r // mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrn_lle0",
            "line_nb": 1563,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite -(mul0rn _ n) ler_pmuln2r // mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_wmuln2r",
            "line_nb": 1566,
            "steps": [
                {
                    "command": [
                        "by move=> ltxy; case: n=> // n; rewrite ltr_pmuln2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_wpmuln2r",
            "line_nb": 1569,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0 x y /= / ltr_wmuln2r ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wmuln2r",
            "line_nb": 1572,
            "steps": [
                {
                    "command": [
                        "by move=> x y hxy /=; case: n=> // n; rewrite ler_pmuln2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrn_wge0",
            "line_nb": 1575,
            "steps": [
                {
                    "command": [
                        "by move=> /(ler_wmuln2r n); rewrite mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrn_wle0",
            "line_nb": 1578,
            "steps": [
                {
                    "command": [
                        "by move=> /(ler_wmuln2r n); rewrite mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_muln2r",
            "line_nb": 1581,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n]; rewrite ?lerr ?eqxx // ler_pmuln2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_muln2r",
            "line_nb": 1584,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n]; rewrite ?lerr ?eqxx // ltr_pmuln2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_muln2r",
            "line_nb": 1587,
            "steps": [
                {
                    "command": [
                        "by rewrite !eqr_le !ler_muln2r -orb_andr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrn_eq0",
            "line_nb": 1590,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulr_natl mulf_eq0 pnatr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrIn",
            "line_nb": 1593,
            "steps": [
                {
                    "command": [
                        "move=> x_neq0 m n; without loss /subnK <-: m n / (n <= m)%N.",
                        "VernacExtend",
                        "d999ee33e7c6564a01a7bb2262aa207bb3b6058f"
                    ]
                },
                {
                    "command": [
                        "by move=> IH eq_xmn; case/orP: (leq_total m n) => /IH->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move/eqP; rewrite mulrnDr -subr_eq0 addrK mulrn_eq0 => /predU1P[-> | /idPn].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wpmuln2l",
            "line_nb": 1598,
            "steps": [
                {
                    "command": [
                        "by move=> xge0 m n /subnK <-; rewrite mulrnDr ler_paddl ?mulrn_wge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wnmuln2l",
            "line_nb": 1601,
            "steps": [
                {
                    "command": [
                        "by move=> xle0 m n hmn /=; rewrite -ler_opp2 -!mulNrn ler_wpmuln2l // oppr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrn_wgt0",
            "line_nb": 1604,
            "steps": [
                {
                    "command": [
                        "by case: n => // n hx; rewrite pmulrn_lgt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulrn_wlt0",
            "line_nb": 1607,
            "steps": [
                {
                    "command": [
                        "by case: n => // n hx; rewrite pmulrn_llt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pmuln2l",
            "line_nb": 1610,
            "steps": [
                {
                    "command": [
                        "move=> x_gt0 m n /=; case: leqP => hmn; first by rewrite ler_wpmuln2l // ltrW.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -(subnK (ltnW hmn)) mulrnDr ger_addr ltr_geF //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrn_wgt0 // subn_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pmuln2l",
            "line_nb": 1615,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; apply: lenrW_mono (ler_pmuln2l _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nmuln2l",
            "line_nb": 1618,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0 m n /=; rewrite -ler_opp2 -!mulNrn ler_pmuln2l // oppr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nmuln2l",
            "line_nb": 1621,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; apply: lenrW_nmono (ler_nmuln2l _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nat",
            "line_nb": 1624,
            "steps": [
                {
                    "command": [
                        "by rewrite ler_pmuln2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nat",
            "line_nb": 1627,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_pmuln2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_nat",
            "line_nb": 1630,
            "steps": [
                {
                    "command": [
                        "by rewrite (inj_eq (mulrIn _)) ?oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnatr_eq1",
            "line_nb": 1633,
            "steps": [
                {
                    "command": [
                        "exact: eqr_nat 1%N.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lern0",
            "line_nb": 1636,
            "steps": [
                {
                    "command": [
                        "by rewrite -[0]/0%:R ler_nat leqn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrn0",
            "line_nb": 1639,
            "steps": [
                {
                    "command": [
                        "by rewrite -[0]/0%:R ltr_nat ltn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler1n",
            "line_nb": 1642,
            "steps": [
                {
                    "command": [
                        "by rewrite -ler_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr1n",
            "line_nb": 1645,
            "steps": [
                {
                    "command": [
                        "by rewrite -ltr_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrn1",
            "line_nb": 1651,
            "steps": [
                {
                    "command": [
                        "by rewrite -ltr_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrN10",
            "line_nb": 1654,
            "steps": [
                {
                    "command": [
                        "by rewrite oppr_lt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerN10",
            "line_nb": 1657,
            "steps": [
                {
                    "command": [
                        "by rewrite oppr_le0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr10",
            "line_nb": 1660,
            "steps": [
                {
                    "command": [
                        "by rewrite ler_gtF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler10",
            "line_nb": 1663,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_geF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0N1",
            "line_nb": 1666,
            "steps": [
                {
                    "command": [
                        "by rewrite ler_gtF // lerN10.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler0N1",
            "line_nb": 1669,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr_geF // ltrN10.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrn_rgt0",
            "line_nb": 1672,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite -(mulr0n x) ltr_pmuln2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrn_rlt0",
            "line_nb": 1675,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite -(mulr0n x) ltr_pmuln2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrn_rge0",
            "line_nb": 1678,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite -(mulr0n x) ler_pmuln2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulrn_rle0",
            "line_nb": 1681,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite -(mulr0n x) ler_pmuln2l ?leqn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrn_rgt0",
            "line_nb": 1684,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite -(mulr0n x) ltr_nmuln2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrn_rge0",
            "line_nb": 1687,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite -(mulr0n x) ler_nmuln2l ?leqn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulrn_rle0",
            "line_nb": 1690,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite -(mulr0n x) ler_nmuln2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulr_rlt0",
            "line_nb": 1693,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite -oppr_gt0 -mulrN pmulr_rgt0 // oppr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulr_rle0",
            "line_nb": 1696,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite -oppr_ge0 -mulrN pmulr_rge0 // oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulr_lgt0",
            "line_nb": 1699,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite mulrC pmulr_rgt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulr_lge0",
            "line_nb": 1702,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite mulrC pmulr_rge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulr_llt0",
            "line_nb": 1705,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite mulrC pmulr_rlt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmulr_lle0",
            "line_nb": 1708,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite mulrC pmulr_rle0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulr_rgt0",
            "line_nb": 1711,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite -mulrNN pmulr_rgt0 lter_oppE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulr_rge0",
            "line_nb": 1714,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite -mulrNN pmulr_rge0 lter_oppE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulr_rlt0",
            "line_nb": 1717,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite -mulrNN pmulr_rlt0 lter_oppE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulr_rle0",
            "line_nb": 1720,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite -mulrNN pmulr_rle0 lter_oppE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulr_lgt0",
            "line_nb": 1723,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite mulrC nmulr_rgt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulr_lge0",
            "line_nb": 1726,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite mulrC nmulr_rge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulr_llt0",
            "line_nb": 1729,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite mulrC nmulr_rlt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmulr_lle0",
            "line_nb": 1732,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite mulrC nmulr_rle0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_ge0",
            "line_nb": 1735,
            "steps": [
                {
                    "command": [
                        "by move=> x_ge0 y_ge0; rewrite -(mulr0 x) ler_wpmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_le0",
            "line_nb": 1738,
            "steps": [
                {
                    "command": [
                        "by move=> x_le0 y_le0; rewrite -(mulr0 x) ler_wnmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_ge0_le0",
            "line_nb": 1741,
            "steps": [
                {
                    "command": [
                        "by move=> x_le0 y_le0; rewrite -(mulr0 x) ler_wpmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_le0_ge0",
            "line_nb": 1744,
            "steps": [
                {
                    "command": [
                        "by move=> x_le0 y_le0; rewrite -(mulr0 x) ler_wnmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_gt0",
            "line_nb": 1747,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0 y_gt0; rewrite pmulr_rgt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodr_ge0",
            "line_nb": 1750,
            "steps": [
                {
                    "command": [
                        "by move=> Ege0; rewrite -nnegrE rpred_prod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodr_gt0",
            "line_nb": 1753,
            "steps": [
                {
                    "command": [
                        "by move=> Ege0; rewrite -posrE rpred_prod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_prod",
            "line_nb": 1756,
            "steps": [
                {
                    "command": [
                        "move=> leE12; elim/(big_load (fun x => 0 <= x)): _.",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "elim/big_rec2: _ => // i x2 x1 /leE12/andP[le0Ei leEi12] [x1ge0 le_x12].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr_ge0 // ler_pmul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_prod_nat",
            "line_nb": 1768,
            "steps": [
                {
                    "command": [
                        "move=> lt_mn ltE12; rewrite !big_nat ltr_prod {ltE12}//.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply/hasP; exists m; rewrite ?mem_index_iota leqnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realMr",
            "line_nb": 1772,
            "steps": [
                {
                    "command": [
                        "move=> x_neq0 xR; case: real_ltrgtP x_neq0 => // hx _; rewrite !realE.",
                        "VernacExtend",
                        "9c3f4e82a1696e467f5acd1f5c747a8b7b11bee4"
                    ]
                },
                {
                    "command": [
                        "by rewrite nmulr_rge0 // nmulr_rle0 // orbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite pmulr_rge0 // pmulr_rle0 // orbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realrM",
            "line_nb": 1777,
            "steps": [
                {
                    "command": [
                        "by move=> y_neq0 yR; rewrite mulrC realMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realM",
            "line_nb": 1780,
            "steps": [
                {
                    "command": [
                        "exact: rpredM.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realrMn",
            "line_nb": 1783,
            "steps": [
                {
                    "command": [
                        "by move=> n_neq0; rewrite -mulr_natl realMr ?realn ?pnatr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_pmull",
            "line_nb": 1786,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{2}[y]mul1r ler_pmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr_pmull",
            "line_nb": 1789,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{2}[y]mul1r ltr_pmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_pmulr",
            "line_nb": 1792,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{2}[y]mulr1 ler_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr_pmulr",
            "line_nb": 1795,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{2}[y]mulr1 ltr_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pmull",
            "line_nb": 1798,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{1}[y]mul1r ler_pmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pmull",
            "line_nb": 1801,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{1}[y]mul1r ltr_pmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pmulr",
            "line_nb": 1804,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{1}[y]mulr1 ler_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pmulr",
            "line_nb": 1807,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{1}[y]mulr1 ltr_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_nmull",
            "line_nb": 1810,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{2}[y]mul1r ler_nmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr_nmull",
            "line_nb": 1813,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{2}[y]mul1r ltr_nmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_nmulr",
            "line_nb": 1816,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{2}[y]mulr1 ler_nmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr_nmulr",
            "line_nb": 1819,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{2}[y]mulr1 ltr_nmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nmull",
            "line_nb": 1822,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{1}[y]mul1r ler_nmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nmull",
            "line_nb": 1825,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{1}[y]mul1r ltr_nmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nmulr",
            "line_nb": 1828,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{1}[y]mulr1 ler_nmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nmulr",
            "line_nb": 1831,
            "steps": [
                {
                    "command": [
                        "by move=> hy; rewrite -{1}[y]mulr1 ltr_nmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pemull",
            "line_nb": 1834,
            "steps": [
                {
                    "command": [
                        "by move=> hy hx; rewrite -{1}[y]mul1r ler_wpmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nemull",
            "line_nb": 1837,
            "steps": [
                {
                    "command": [
                        "by move=> hy hx; rewrite -{2}[y]mul1r ler_wnmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pemulr",
            "line_nb": 1840,
            "steps": [
                {
                    "command": [
                        "by move=> hy hx; rewrite -{1}[y]mulr1 ler_wpmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nemulr",
            "line_nb": 1843,
            "steps": [
                {
                    "command": [
                        "by move=> hy hx; rewrite -{2}[y]mulr1 ler_wnmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pimull",
            "line_nb": 1846,
            "steps": [
                {
                    "command": [
                        "by move=> hy hx; rewrite -{2}[y]mul1r ler_wpmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nimull",
            "line_nb": 1849,
            "steps": [
                {
                    "command": [
                        "by move=> hy hx; rewrite -{1}[y]mul1r ler_wnmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pimulr",
            "line_nb": 1852,
            "steps": [
                {
                    "command": [
                        "by move=> hy hx; rewrite -{2}[y]mulr1 ler_wpmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nimulr",
            "line_nb": 1855,
            "steps": [
                {
                    "command": [
                        "by move=> hx hy; rewrite -{1}[y]mulr1 ler_wnmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_ile1",
            "line_nb": 1858,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite (@ler_trans _ y) ?ler_pimull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_ilt1",
            "line_nb": 1861,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite (@ler_lt_trans _ y) ?ler_pimull // ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_ege1",
            "line_nb": 1865,
            "steps": [
                {
                    "command": [
                        "by move=> le1x le1y; rewrite (@ler_trans _ y) ?ler_pemull // (ler_trans ler01).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_egt1",
            "line_nb": 1868,
            "steps": [
                {
                    "command": [
                        "by move=> le1x lt1y; rewrite (@ltr_trans _ y) // ltr_pmull // (ltr_trans ltr01).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_gt0",
            "line_nb": 1873,
            "steps": [
                {
                    "command": [
                        "have [ux | nux] := boolP (x \\is a GRing.unit); last by rewrite invr_out.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/idP/idP=> /ltr_pmul2r<-; rewrite mul0r (mulrV, mulVr) ?ltr01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_ge0",
            "line_nb": 1877,
            "steps": [
                {
                    "command": [
                        "by rewrite !le0r invr_gt0 invr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_lt0",
            "line_nb": 1880,
            "steps": [
                {
                    "command": [
                        "by rewrite -oppr_cp0 -invrN invr_gt0 oppr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_le0",
            "line_nb": 1883,
            "steps": [
                {
                    "command": [
                        "by rewrite -oppr_cp0 -invrN invr_ge0 oppr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divr_ge0",
            "line_nb": 1888,
            "steps": [
                {
                    "command": [
                        "by move=> x_ge0 y_ge0; rewrite mulr_ge0 ?invr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divr_gt0",
            "line_nb": 1891,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0 y_gt0; rewrite pmulr_rgt0 ?invr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realV",
            "line_nb": 1894,
            "steps": [
                {
                    "command": [
                        "exact: rpredV.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_ge0",
            "line_nb": 1897,
            "steps": [
                {
                    "command": [
                        "by move=> xge0; rewrite -nnegrE rpredX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realX",
            "line_nb": 1900,
            "steps": [
                {
                    "command": [
                        "exact: rpredX.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_gt0",
            "line_nb": 1903,
            "steps": [
                {
                    "command": [
                        "by rewrite !lt0r expf_eq0 => /andP[/negPf-> /exprn_ge0->]; rewrite andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_ile1",
            "line_nb": 1907,
            "steps": [
                {
                    "command": [
                        "move=> xge0 xle1; elim: n=> [|*]; rewrite ?expr0 // exprS.",
                        "VernacExtend",
                        "cbbd752ffe762291637c91622d62599b0c60d123"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr_ile1 ?exprn_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_ilt1",
            "line_nb": 1911,
            "steps": [
                {
                    "command": [
                        "move=> xge0 xlt1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: n; [by rewrite eqxx ltrr | elim=> [|n ihn]; first by rewrite expr1].",
                        "VernacExtend",
                        "a7b6ee2f76374c98381142f15a8f09c3ce180c8a"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS mulr_ilt1 // exprn_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_ege1",
            "line_nb": 1917,
            "steps": [
                {
                    "command": [
                        "by move=> x_ge1; elim: n=> [|n ihn]; rewrite ?expr0 // exprS mulr_ege1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_egt1",
            "line_nb": 1920,
            "steps": [
                {
                    "command": [
                        "move=> xgt1; case: n; first by rewrite eqxx ltrr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "elim=> [|n ihn]; first by rewrite expr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS mulr_egt1 // exprn_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_iexpr",
            "line_nb": 1927,
            "steps": [
                {
                    "command": [
                        "by case: n => n // *; rewrite exprS ler_pimulr // exprn_ile1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_iexpr",
            "line_nb": 1930,
            "steps": [
                {
                    "command": [
                        "case: n=> [|[|n]] //; first by rewrite expr0 => _ /ltr_gtF ->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=> x0 x1; rewrite exprS gtr_pmulr // ?exprn_ilt1 // ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_eexpr",
            "line_nb": 1935,
            "steps": [
                {
                    "command": [
                        "case: n => // n _ x_ge1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS ler_pemulr ?(ler_trans _ x_ge1) // exprn_ege1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_eexpr",
            "line_nb": 1939,
            "steps": [
                {
                    "command": [
                        "move=> x_ge1; case: n=> [|[|n]] //; first by rewrite expr0 ltr_gtF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS ltr_pmulr ?(ltr_trans _ x_ge1) ?exprn_egt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wiexpn2l",
            "line_nb": 1945,
            "steps": [
                {
                    "command": [
                        "move=> xge0 xle1 m n /= hmn.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(subnK hmn) exprD ler_pimull ?(exprn_ge0, exprn_ile1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_weexpn2l",
            "line_nb": 1949,
            "steps": [
                {
                    "command": [
                        "move=> xge1 m n /= hmn; rewrite -(subnK hmn) exprD.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite ler_pemull ?(exprn_ge0, exprn_ege1) // (ler_trans _ xge1) ?ler01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ieexprn_weq1",
            "line_nb": 1953,
            "steps": [
                {
                    "command": [
                        "move=> xle0; case: n => [|n]; first by rewrite expr0 eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (@real_ltrgtP x 1); do ?by rewrite ?ger0_real.",
                        "VernacExtend",
                        "09d2a9a8185b9355b5ea9923b8ee73e4bb71f9bf"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by move=> x_lt1; rewrite ?ltr_eqF // exprn_ilt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by move=> x_lt1; rewrite ?gtr_eqF // exprn_egt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move->; rewrite expr1n eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ieexprIn",
            "line_nb": 1962,
            "steps": [
                {
                    "command": [
                        "move=> x_gt0 x_neq1 m n; without loss /subnK <-: m n / (n <= m)%N.",
                        "VernacExtend",
                        "d999ee33e7c6564a01a7bb2262aa207bb3b6058f"
                    ]
                },
                {
                    "command": [
                        "by move=> IH eq_xmn; case/orP: (leq_total m n) => /IH->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: {m}(m - n)%N => // m /eqP/idPn[]; rewrite -[x ^+ n]mul1r exprD.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite (inj_eq (mulIf _)) ?ieexprn_weq1 ?ltrW // expf_neq0 ?gtr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_iexpn2l",
            "line_nb": 1973,
            "steps": [
                {
                    "command": [
                        "by move=> xgt0 xlt1; apply: (lenrW_nmono (ler_iexpn2l _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_eexpn2l",
            "line_nb": 1982,
            "steps": [
                {
                    "command": [
                        "by move=> xgt1; apply: (lenrW_mono (ler_eexpn2l _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_expn2r",
            "line_nb": 1986,
            "steps": [
                {
                    "command": [
                        "move=> xge0 xlty; case: n; first by rewrite ltrr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "elim=> [|n IHn]; rewrite ?[_ ^+ _.+2]exprS //.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "rewrite (@ler_lt_trans _ (x * y ^+ n.+1)) ?ler_wpmul2l ?ltr_pmul2r ?IHn //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltrW // ihn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprn_gt0 // (ler_lt_trans xge0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_expn2r",
            "line_nb": 1993,
            "steps": [
                {
                    "command": [
                        "move=> x y /= x0 y0 xy; elim: n => [|n IHn]; rewrite !(expr0, exprS) //.",
                        "VernacExtend",
                        "cbbd752ffe762291637c91622d62599b0c60d123"
                    ]
                },
                {
                    "command": [
                        "by rewrite (@ler_trans _ (x * y ^+ n)) ?ler_wpmul2l ?ler_wpmul2r ?exprn_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_wpexpn2r",
            "line_nb": 1998,
            "steps": [
                {
                    "command": [
                        "by move=> ngt0 x y /= x0 y0 hxy; rewrite ltr_expn2r // -lt0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pexpn2r",
            "line_nb": 2001,
            "steps": [
                {
                    "command": [
                        "case: n => // n _ x y; rewrite !qualifE /= => x_ge0 y_ge0.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "have [-> | nzx] := eqVneq x 0; first by rewrite exprS mul0r exprn_ge0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -subr_ge0 subrXX pmulr_lge0 ?subr_ge0 //= big_ord_recr /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite subnn expr0 mul1r /= ltr_spaddr // ?exprn_gt0 ?lt0r ?nzx //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite sumr_ge0 // => i _; rewrite mulr_ge0 ?exprn_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pexpn2r",
            "line_nb": 2008,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0 x y x_ge0 y_ge0; rewrite !ltr_neqAle !eqr_le !ler_pexpn2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pexpIrn",
            "line_nb": 2012,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; apply: incr_inj_in (ler_pexpn2r _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expr_le1",
            "line_nb": 2015,
            "steps": [
                {
                    "command": [
                        "by move=> ngt0 xge0; rewrite -{1}[1](expr1n _ n) ler_pexpn2r // [_ \\in _]ler01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expr_lt1",
            "line_nb": 2018,
            "steps": [
                {
                    "command": [
                        "by move=> ngt0 xge0; rewrite -{1}[1](expr1n _ n) ltr_pexpn2r // [_ \\in _]ler01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expr_ge1",
            "line_nb": 2022,
            "steps": [
                {
                    "command": [
                        "by move=> ngt0 xge0; rewrite -{1}[1](expr1n _ n) ler_pexpn2r // [_ \\in _]ler01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expr_gt1",
            "line_nb": 2025,
            "steps": [
                {
                    "command": [
                        "by move=> ngt0 xge0; rewrite -{1}[1](expr1n _ n) ltr_pexpn2r // [_ \\in _]ler01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pexpr_eq1",
            "line_nb": 2029,
            "steps": [
                {
                    "command": [
                        "by move=> ngt0 xge0; rewrite !eqr_le expr_le1 // expr_ge1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pexprn_eq1",
            "line_nb": 2032,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n] xge0; rewrite ?eqxx // pexpr_eq1 ?gtn_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_expn2",
            "line_nb": 2035,
            "steps": [
                {
                    "command": [
                        "by move=> ngt0 xge0 yge0; rewrite (inj_in_eq (pexpIrn _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrp_eq1",
            "line_nb": 2038,
            "steps": [
                {
                    "command": [
                        "by move/pexpr_eq1->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrn_eq1",
            "line_nb": 2041,
            "steps": [
                {
                    "command": [
                        "by rewrite -sqrrN -oppr_ge0 -eqr_oppLR => /sqrp_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_sqr",
            "line_nb": 2044,
            "steps": [
                {
                    "command": [
                        "exact: ler_pexpn2r.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_sqr",
            "line_nb": 2047,
            "steps": [
                {
                    "command": [
                        "exact: ltr_pexpn2r.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pinv",
            "line_nb": 2050,
            "steps": [
                {
                    "command": [
                        "move=> x y /andP [ux hx] /andP [uy hy] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -(ler_pmul2l hx) -(ler_pmul2r hy).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(divrr, mulrVK) ?unitf_gt0 // mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_ninv",
            "line_nb": 2055,
            "steps": [
                {
                    "command": [
                        "move=> x y /andP [ux hx] /andP [uy hy] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -(ler_nmul2l hx) -(ler_nmul2r hy).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(divrr, mulrVK) ?unitf_lt0 // mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pinv",
            "line_nb": 2060,
            "steps": [
                {
                    "command": [
                        "exact: lerW_nmono_in ler_pinv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_ninv",
            "line_nb": 2063,
            "steps": [
                {
                    "command": [
                        "exact: lerW_nmono_in ler_ninv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_gt1",
            "line_nb": 2066,
            "steps": [
                {
                    "command": [
                        "by move=> Ux xgt0; rewrite -{1}[1]invr1 ltr_pinv ?inE ?unitr1 ?ltr01 ?Ux.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_ge1",
            "line_nb": 2069,
            "steps": [
                {
                    "command": [
                        "by move=> Ux xgt0; rewrite -{1}[1]invr1 ler_pinv ?inE ?unitr1 ?ltr01 // Ux.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_le1",
            "line_nb": 2073,
            "steps": [
                {
                    "command": [
                        "by rewrite -invr_ge1 ?invr_gt0 ?unitrV // invrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_lt1",
            "line_nb": 2076,
            "steps": [
                {
                    "command": [
                        "by rewrite -invr_gt1 ?invr_gt0 ?unitrV // invrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ler_norm",
            "line_nb": 2081,
            "steps": [
                {
                    "command": [
                        "by case/real_ger0P=> hx //; rewrite (ler_trans (ltrW hx)) // oppr_ge0 ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_real",
            "line_nb": 2084,
            "steps": [
                {
                    "command": [
                        "by rewrite ger0_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_norm_sum",
            "line_nb": 2088,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ => [|i y x _]; first by rewrite normr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(ler_add2l `|G i|); apply: ler_trans; apply: ler_norm_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_norm_sub",
            "line_nb": 2092,
            "steps": [
                {
                    "command": [
                        "by rewrite (ler_trans (ler_norm_add _ _)) ?normrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_dist_add",
            "line_nb": 2095,
            "steps": [
                {
                    "command": [
                        "by rewrite (ler_trans _ (ler_norm_add _ _)) // addrA addrNK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_sub_norm_add",
            "line_nb": 2098,
            "steps": [
                {
                    "command": [
                        "rewrite -{1}[x](addrK y) lter_sub_addl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (ler_trans (ler_norm_add _ _)) // addrC normrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_sub_dist",
            "line_nb": 2102,
            "steps": [
                {
                    "command": [
                        "by rewrite -[`|y|]normrN ler_sub_norm_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_dist_dist",
            "line_nb": 2105,
            "steps": [
                {
                    "command": [
                        "have [||_|_] // := @real_lerP `|x| `|y|; last by rewrite ler_sub_dist.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite distrC ler_sub_dist.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_dist_norm_add",
            "line_nb": 2109,
            "steps": [
                {
                    "command": [
                        "by rewrite -[y]opprK normrN ler_dist_dist.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ler_norml",
            "line_nb": 2112,
            "steps": [
                {
                    "command": [
                        "move=> xR; wlog x_ge0 : x xR / 0 <= x => [hwlog|].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "move: (xR) => /(@real_leVge 0) /orP [|/hwlog->|hx] //.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[x]opprK normrN ler_opp2 andbC ler_oppl hwlog ?realN ?oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ger0_norm //; have [le_xy|] := boolP (x <= y); last by rewrite andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (ler_trans _ x_ge0) // oppr_le0 (ler_trans x_ge0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ler_normlP",
            "line_nb": 2119,
            "steps": [
                {
                    "command": [
                        "by move=> Rx; rewrite real_ler_norml // ler_oppl; apply: (iffP andP) => [] [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_eqr_norm2",
            "line_nb": 2130,
            "steps": [
                {
                    "command": [
                        "move=> Rx Ry; rewrite real_eqr_norml // normrE andbT.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: real_ler0P; rewrite // opprK orbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ltr_norml",
            "line_nb": 2134,
            "steps": [
                {
                    "command": [
                        "move=> Rx; wlog x_ge0 : x Rx / 0 <= x => [hwlog|].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "move: (Rx) => /(@real_leVge 0) /orP [|/hwlog->|hx] //.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[x]opprK normrN ltr_opp2 andbC ltr_oppl hwlog ?realN ?oppr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ger0_norm //; have [le_xy|] := boolP (x < y); last by rewrite andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (ltr_le_trans _ x_ge0) // oppr_lt0 (ler_lt_trans x_ge0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ltr_normlP",
            "line_nb": 2142,
            "steps": [
                {
                    "command": [
                        "move=> Rx; rewrite real_ltr_norml // ltr_oppl.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: (iffP (@andP _ _)); case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ler_normr",
            "line_nb": 2147,
            "steps": [
                {
                    "command": [
                        "move=> Ry.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [xR|xNR] := boolP (x \\is real); last by rewrite ?Nreal_leF ?realN.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite real_lerNgt ?real_ltr_norml // negb_and -?real_lerNgt ?realN //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite orbC ler_oppr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ltr_normr",
            "line_nb": 2153,
            "steps": [
                {
                    "command": [
                        "move=> Ry.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [xR|xNR] := boolP (x \\is real); last by rewrite ?Nreal_ltF ?realN.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite real_ltrNge ?real_ler_norml // negb_and -?real_ltrNge ?realN //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite orbC ltr_oppr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nnorml",
            "line_nb": 2160,
            "steps": [
                {
                    "command": [
                        "by move=> y_lt0; rewrite ltr_geF // (ltr_le_trans y_lt0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_nnorml",
            "line_nb": 2163,
            "steps": [
                {
                    "command": [
                        "by move=> y_le0; rewrite ler_gtF // (ler_trans y_le0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ler_distl",
            "line_nb": 2167,
            "steps": [
                {
                    "command": [
                        "by move=> Rxy; rewrite real_lter_norml // !lter_sub_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_ltr_distl",
            "line_nb": 2170,
            "steps": [
                {
                    "command": [
                        "by move=> Rxy; rewrite real_lter_norml // !lter_sub_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_norm_id",
            "line_nb": 2174,
            "steps": [
                {
                    "command": [
                        "by rewrite ger0_def.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_normN",
            "line_nb": 2177,
            "steps": [
                {
                    "command": [
                        "by rewrite ler0_def.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_exprn_even_ge0",
            "line_nb": 2181,
            "steps": [
                {
                    "command": [
                        "move=> xR even_n; have [/exprn_ge0 -> //|x_lt0] := real_ger0P xR.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite -[x]opprK -mulN1r exprMn -signr_odd (negPf even_n) expr0 mul1r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprn_ge0 ?oppr_ge0 ?ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_exprn_even_gt0",
            "line_nb": 2186,
            "steps": [
                {
                    "command": [
                        "move=> xR n_even; rewrite lt0r real_exprn_even_ge0 ?expf_eq0 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite andbT negb_and lt0n negbK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_exprn_even_le0",
            "line_nb": 2190,
            "steps": [
                {
                    "command": [
                        "move=> xR n_even; rewrite !real_lerNgt ?rpred0 ?rpredX //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite real_exprn_even_gt0 // negb_or negbK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_exprn_even_lt0",
            "line_nb": 2194,
            "steps": [
                {
                    "command": [
                        "by move=> xR n_even; rewrite ler_gtF // real_exprn_even_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_exprn_odd_ge0",
            "line_nb": 2197,
            "steps": [
                {
                    "command": [
                        "case/real_ger0P => [x_ge0|x_lt0] n_odd; first by rewrite exprn_ge0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: negbTE; rewrite ltr_geF //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case: n n_odd => // n /= n_even; rewrite exprS pmulr_llt0 //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite real_exprn_even_gt0 ?ler0_real ?ltrW // ltr_eqF ?orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_exprn_odd_gt0",
            "line_nb": 2203,
            "steps": [
                {
                    "command": [
                        "by move=> xR n_odd; rewrite !lt0r expf_eq0 real_exprn_odd_ge0; case: n n_odd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_exprn_odd_le0",
            "line_nb": 2206,
            "steps": [
                {
                    "command": [
                        "by move=> xR n_odd; rewrite !real_lerNgt ?rpred0 ?rpredX // real_exprn_odd_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_exprn_odd_lt0",
            "line_nb": 2209,
            "steps": [
                {
                    "command": [
                        "by move=> xR n_odd; rewrite !real_ltrNge ?rpred0 ?rpredX // real_exprn_odd_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realEsqr",
            "line_nb": 2212,
            "steps": [
                {
                    "command": [
                        "by rewrite ger0_def normrX eqf_sqr -ger0_def -ler0_def.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_normK",
            "line_nb": 2215,
            "steps": [
                {
                    "command": [
                        "by move=> Rx; rewrite -normrX ger0_norm -?realEsqr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_sign",
            "line_nb": 2218,
            "steps": [
                {
                    "command": [
                        "by rewrite normrX normrN1 expr1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normrMsign",
            "line_nb": 2221,
            "steps": [
                {
                    "command": [
                        "by rewrite normrM normr_sign mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signr_gt0",
            "line_nb": 2224,
            "steps": [
                {
                    "command": [
                        "by case: b; rewrite (ltr01, ltr0N1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signr_lt0",
            "line_nb": 2227,
            "steps": [
                {
                    "command": [
                        "by case: b; rewrite // ?(ltrN10, ltr10).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signr_ge0",
            "line_nb": 2230,
            "steps": [
                {
                    "command": [
                        "by rewrite le0r signr_eq0 signr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signr_le0",
            "line_nb": 2233,
            "steps": [
                {
                    "command": [
                        "by rewrite ler_eqVlt signr_eq0 signr_lt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signr_inj",
            "line_nb": 2236,
            "steps": [
                {
                    "command": [
                        "exact: can_inj (fun x => 0 >= x) signr_le0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_def",
            "line_nb": 2239,
            "steps": [
                {
                    "command": [
                        "by rewrite /sg; do 2!case: ifP => //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neqr0_sign",
            "line_nb": 2242,
            "steps": [
                {
                    "command": [
                        "by rewrite sgr_def => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtr0_sg",
            "line_nb": 2245,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite /sg gtr_eqF // ltr_gtF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0_sg",
            "line_nb": 2248,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite /sg x_lt0 ltr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr0",
            "line_nb": 2251,
            "steps": [
                {
                    "command": [
                        "by rewrite /sgr eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr1",
            "line_nb": 2254,
            "steps": [
                {
                    "command": [
                        "by rewrite gtr0_sg // ltr01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrN1",
            "line_nb": 2257,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr0_sg // ltrN10.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqr_sg",
            "line_nb": 2261,
            "steps": [
                {
                    "command": [
                        "by rewrite sgr_def exprMn_n sqrr_sign -mulnn mulnb andbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_sg_eq1",
            "line_nb": 2264,
            "steps": [
                {
                    "command": [
                        "rewrite /sg eq_sym; case: ifP => _; first by rewrite mul0r oner_eq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => _; rewrite ?mul1r // mulN1r eqr_oppLR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_sg_eqN1",
            "line_nb": 2268,
            "steps": [
                {
                    "command": [
                        "move/sg: y => y; rewrite /sg eq_sym eqr_oppLR.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: ifP => _; first by rewrite mul0r oppr0 oner_eq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => _; rewrite ?mul1r // mulN1r eqr_oppLR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_eq0",
            "line_nb": 2273,
            "steps": [
                {
                    "command": [
                        "by rewrite -sqrf_eq0 sqr_sg pnatr_eq0; case: (x == 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_odd",
            "line_nb": 2276,
            "steps": [
                {
                    "command": [
                        "by rewrite /sg; do 2!case: ifP => // _; rewrite ?expr1n ?signr_odd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrMn",
            "line_nb": 2279,
            "steps": [
                {
                    "command": [
                        "case: n => [|n]; first by rewrite mulr0n sgr0 mul0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !sgr_def mulrn_eq0 mul1r pmulrn_llt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_nat",
            "line_nb": 2283,
            "steps": [
                {
                    "command": [
                        "by rewrite sgrMn sgr1 mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_id",
            "line_nb": 2286,
            "steps": [
                {
                    "command": [
                        "by rewrite !(fun_if sg) !sgrE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_lt0",
            "line_nb": 2289,
            "steps": [
                {
                    "command": [
                        "rewrite /sg; case: eqP => [-> // | _].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => _; rewrite ?ltrN10 // ltr_gtF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_le0",
            "line_nb": 2293,
            "steps": [
                {
                    "command": [
                        "by rewrite !ler_eqVlt sgr_eq0 sgr_lt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realEsign",
            "line_nb": 2296,
            "steps": [
                {
                    "command": [
                        "by case/real_ger0P; rewrite (mul1r, mulN1r) ?opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realNEsign",
            "line_nb": 2299,
            "steps": [
                {
                    "command": [
                        "by move=> Rx; rewrite -normrN -oppr_lt0 -realEsign ?rpredN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_normrEsign",
            "line_nb": 2302,
            "steps": [
                {
                    "command": [
                        "by rewrite {3}[x]realEsign // signrMK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_mulr_sign_norm",
            "line_nb": 2305,
            "steps": [
                {
                    "command": [
                        "by move/realEsign.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_mulr_Nsign_norm",
            "line_nb": 2308,
            "steps": [
                {
                    "command": [
                        "by move/realNEsign.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realEsg",
            "line_nb": 2311,
            "steps": [
                {
                    "command": [
                        "move=> xR; have [-> | ] := eqVneq x 0; first by rewrite normr0 mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=> /neqr0_sign <-; rewrite -realEsign.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normr_sg",
            "line_nb": 2315,
            "steps": [
                {
                    "command": [
                        "by rewrite sgr_def -mulr_natr normrMsign normr_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_norm",
            "line_nb": 2318,
            "steps": [
                {
                    "command": [
                        "by rewrite /sg ler_gtF ?normr_ge0 // normr_eq0 mulrb if_neg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_refl",
            "line_nb": 2321,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP idP) => [-> | <-] //; split; rewrite ?eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_trans",
            "line_nb": 2324,
            "steps": [
                {
                    "command": [
                        "move=> ltx12 ltx23; apply/lerifP; rewrite -ltx12.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "case eqx12: (x1 == x2).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP eqx12) ltr_neqAle !ltx23 andbT; case C23.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (@ltr_le_trans _ x2) ?ltx23 // ltr_neqAle eqx12 ltx12.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_le",
            "line_nb": 2330,
            "steps": [
                {
                    "command": [
                        "by move=> lexy; split=> //; rewrite eqr_le lexy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_eq",
            "line_nb": 2333,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger_lerif",
            "line_nb": 2336,
            "steps": [
                {
                    "command": [
                        "by case=> le_xy; rewrite eqr_le le_xy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_lerif",
            "line_nb": 2339,
            "steps": [
                {
                    "command": [
                        "by move=> le_xy; rewrite ltr_neqAle !le_xy andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_nat",
            "line_nb": 2342,
            "steps": [
                {
                    "command": [
                        "by rewrite /lerif !ler_nat eqr_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mono_in_lerif",
            "line_nb": 2345,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y Ax Ay; rewrite /lerif mf ?(inj_in_eq (incr_inj_in mf)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mono_lerif",
            "line_nb": 2348,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y; rewrite /lerif mf (inj_eq (incr_inj _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmono_in_lerif",
            "line_nb": 2351,
            "steps": [
                {
                    "command": [
                        "move=> mf x y Ax Ay; rewrite /lerif eq_sym mf //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite ?(inj_in_eq (decr_inj_in mf)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmono_lerif",
            "line_nb": 2355,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y; rewrite /lerif eq_sym mf ?(inj_eq (decr_inj mf)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_subLR",
            "line_nb": 2358,
            "steps": [
                {
                    "command": [
                        "by rewrite /lerif !eqr_le ler_subr_addr ler_subl_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_subRL",
            "line_nb": 2361,
            "steps": [
                {
                    "command": [
                        "by rewrite -lerif_subLR opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_add",
            "line_nb": 2364,
            "steps": [
                {
                    "command": [
                        "rewrite -(mono_lerif _ (ler_add2r x2)) -(mono_lerif C2 (ler_add2l y1)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: lerif_trans.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_sum",
            "line_nb": 2368,
            "steps": [
                {
                    "command": [
                        "move=> leE12; rewrite -big_andE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "elim/big_rec3: _ => [|i Ci m2 m1 /leE12]; first by rewrite /lerif lerr eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exact: lerif_add.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_0_sum",
            "line_nb": 2373,
            "steps": [
                {
                    "command": [
                        "by move/lerif_sum; rewrite big1_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lerif_norm",
            "line_nb": 2376,
            "steps": [
                {
                    "command": [
                        "by move=> xR; rewrite ger0_def eq_sym; apply: lerif_eq; rewrite real_ler_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_pmul",
            "line_nb": 2379,
            "steps": [
                {
                    "command": [
                        "move=> x1_ge0 x2_ge0 le_xy1 le_xy2; have [y_0 | ] := altP (_ =P 0).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/lerifP; rewrite y_0 /= mulf_eq0 !eqr_le x1_ge0 x2_ge0 !andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "move/eqP: y_0; rewrite mulf_eq0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case/pred2P=> <-; rewrite (le_xy1, le_xy2) ?orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /= mulf_eq0 => /norP[y1nz y2nz].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have y1_gt0: 0 < y1 by rewrite ltr_def y1nz (ler_trans _ le_xy1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [x2_0 | x2nz] := eqVneq x2 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/lerifP; rewrite -le_xy2 x2_0 eq_sym (negPf y2nz) andbF mulr0.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr_gt0 // ltr_def y2nz -x2_0 le_xy2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have:= le_xy2; rewrite -(mono_lerif _ (ler_pmul2l y1_gt0)).",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by apply: lerif_trans; rewrite (mono_lerif _ (ler_pmul2r _)) // ltr_def x2nz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_nmul",
            "line_nb": 2392,
            "steps": [
                {
                    "command": [
                        "rewrite -!oppr_ge0 -mulrNN -[x1 * x2]mulrNN => y1le0 y2le0 le_xy1 le_xy2.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply: lerif_pmul => //; rewrite (nmono_lerif _ ler_opp2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lerif_mean_square_scaled",
            "line_nb": 2404,
            "steps": [
                {
                    "command": [
                        "move=> Rx Ry; rewrite -[_ *+ 2]add0r -lerif_subRL addrAC -sqrrB -subr_eq0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -sqrf_eq0 eq_sym; apply: lerif_eq; rewrite -realEsqr rpredB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lerif_AGM2_scaled",
            "line_nb": 2408,
            "steps": [
                {
                    "command": [
                        "move=> Rx Ry; rewrite sqrrD addrAC (mulrnDr _ 2) -lerif_subLR addrK.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "exact: real_lerif_mean_square_scaled.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_disk_bound",
            "line_nb": 2459,
            "steps": [
                {
                    "command": [
                        "exists (\\sum_(j < size p) `|p`_j| * b ^+ j) => x le_x_b.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite horner_coef (ler_trans (ler_norm_sum _ _ _)) ?ler_sum // => j _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite normrM normrX ler_wpmul2l ?ler_expn2r ?unfold_in ?normr_ge0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: ler_trans (normr_ge0 x) le_x_b.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_mono",
            "line_nb": 2480,
            "steps": [
                {
                    "command": [
                        "move=> mf x y xR yR /=; have [lt_xy | le_yx] := real_lerP xR yR.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltrW_homo.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr_geF ?mf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_nmono",
            "line_nb": 2485,
            "steps": [
                {
                    "command": [
                        "move=> mf x y xR yR /=; have [lt_xy|le_yx] := real_ltrP xR yR.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr_geF ?mf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltrW_nhomo.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_mono_in",
            "line_nb": 2490,
            "steps": [
                {
                    "command": [
                        "move=> Dmf x y /andP[hx xR] /andP[hy yR] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [lt_xy|le_yx] := real_lerP xR yR; first by rewrite (ltrW_homo_in Dmf).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr_geF ?Dmf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_nmono_in",
            "line_nb": 2495,
            "steps": [
                {
                    "command": [
                        "move=> Dmf x y /andP[hx xR] /andP[hy yR] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [lt_xy|le_yx] := real_ltrP xR yR; last by rewrite (ltrW_nhomo_in Dmf).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr_geF ?Dmf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realn_mono",
            "line_nb": 2500,
            "steps": [
                {
                    "command": [
                        "move=> mf x y xR yR /=; have [lt_xy | le_yx] := real_lerP xR yR.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltrnW_homo.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltn_geF ?mf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realn_nmono",
            "line_nb": 2505,
            "steps": [
                {
                    "command": [
                        "move=> mf x y xR yR /=; have [lt_xy|le_yx] := real_ltrP xR yR.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltn_geF ?mf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltrnW_nhomo.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realn_mono_in",
            "line_nb": 2510,
            "steps": [
                {
                    "command": [
                        "move=> Dmf x y /andP[hx xR] /andP[hy yR] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [lt_xy|le_yx] := real_lerP xR yR; first by rewrite (ltrnW_homo_in Dmf).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltn_geF ?Dmf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "realn_nmono_in",
            "line_nb": 2515,
            "steps": [
                {
                    "command": [
                        "move=> Dmf x y /andP[hx xR] /andP[hy yR] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [lt_xy|le_yx] := real_ltrP xR yR; last by rewrite (ltrnW_nhomo_in Dmf).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltn_geF ?Dmf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natrG_gt0",
            "line_nb": 2525,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr0n cardG_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natrG_neq0",
            "line_nb": 2528,
            "steps": [
                {
                    "command": [
                        "by rewrite gtr_eqF // natrG_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natr_indexg_gt0",
            "line_nb": 2531,
            "steps": [
                {
                    "command": [
                        "by rewrite ltr0n indexg_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natr_indexg_neq0",
            "line_nb": 2534,
            "steps": [
                {
                    "command": [
                        "by rewrite gtr_eqF // natr_indexg_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitf_gt0",
            "line_nb": 2541,
            "steps": [
                {
                    "command": [
                        "by move=> hx; rewrite unitfE eq_sym ltr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitf_lt0",
            "line_nb": 2544,
            "steps": [
                {
                    "command": [
                        "by move=> hx; rewrite unitfE ltr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lef_pinv",
            "line_nb": 2547,
            "steps": [
                {
                    "command": [
                        "by move=> x y hx hy /=; rewrite ler_pinv ?inE ?unitf_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lef_ninv",
            "line_nb": 2550,
            "steps": [
                {
                    "command": [
                        "by move=> x y hx hy /=; rewrite ler_ninv ?inE ?unitf_lt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltf_pinv",
            "line_nb": 2553,
            "steps": [
                {
                    "command": [
                        "exact: lerW_nmono_in lef_pinv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltf_ninv",
            "line_nb": 2556,
            "steps": [
                {
                    "command": [
                        "exact: lerW_nmono_in lef_ninv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invf_gt1",
            "line_nb": 2561,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite -{1}[1]invr1 ltf_pinv ?posrE ?ltr01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invf_ge1",
            "line_nb": 2564,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite -{1}[1]invr1 lef_pinv ?posrE ?ltr01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invf_le1",
            "line_nb": 2568,
            "steps": [
                {
                    "command": [
                        "by move=> x_gt0; rewrite -invf_ge1 ?invr_gt0 // invrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invf_lt1",
            "line_nb": 2571,
            "steps": [
                {
                    "command": [
                        "by move=> x_lt0; rewrite -invf_gt1 ?invr_gt0 // invrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pdivl_mulr",
            "line_nb": 2576,
            "steps": [
                {
                    "command": [
                        "by move=> z_gt0; rewrite -(@ler_pmul2r _ z) ?mulfVK ?gtr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pdivl_mulr",
            "line_nb": 2579,
            "steps": [
                {
                    "command": [
                        "by move=> z_gt0; rewrite -(@ltr_pmul2r _ z) ?mulfVK ?gtr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pdivr_mulr",
            "line_nb": 2583,
            "steps": [
                {
                    "command": [
                        "by move=> z_gt0; rewrite -(@ler_pmul2r _ z) ?mulfVK ?gtr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pdivr_mulr",
            "line_nb": 2586,
            "steps": [
                {
                    "command": [
                        "by move=> z_gt0; rewrite -(@ltr_pmul2r _ z) ?mulfVK ?gtr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pdivl_mull",
            "line_nb": 2590,
            "steps": [
                {
                    "command": [
                        "by move=> z_gt0; rewrite mulrC ler_pdivl_mulr ?[z * _]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pdivl_mull",
            "line_nb": 2593,
            "steps": [
                {
                    "command": [
                        "by move=> z_gt0; rewrite mulrC ltr_pdivl_mulr ?[z * _]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_pdivr_mull",
            "line_nb": 2597,
            "steps": [
                {
                    "command": [
                        "by move=> z_gt0; rewrite mulrC ler_pdivr_mulr ?[z * _]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_pdivr_mull",
            "line_nb": 2600,
            "steps": [
                {
                    "command": [
                        "by move=> z_gt0; rewrite mulrC ltr_pdivr_mulr ?[z * _]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_ndivl_mulr",
            "line_nb": 2604,
            "steps": [
                {
                    "command": [
                        "by move=> z_lt0; rewrite -(@ler_nmul2r _ z) ?mulfVK ?ltr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_ndivl_mulr",
            "line_nb": 2607,
            "steps": [
                {
                    "command": [
                        "by move=> z_lt0; rewrite -(@ltr_nmul2r _ z) ?mulfVK ?ltr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_ndivr_mulr",
            "line_nb": 2611,
            "steps": [
                {
                    "command": [
                        "by move=> z_lt0; rewrite -(@ler_nmul2r _ z) ?mulfVK ?ltr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_ndivr_mulr",
            "line_nb": 2614,
            "steps": [
                {
                    "command": [
                        "by move=> z_lt0; rewrite -(@ltr_nmul2r _ z) ?mulfVK ?ltr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_ndivl_mull",
            "line_nb": 2618,
            "steps": [
                {
                    "command": [
                        "by move=> z_lt0; rewrite mulrC ler_ndivl_mulr ?[z * _]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_ndivl_mull",
            "line_nb": 2621,
            "steps": [
                {
                    "command": [
                        "by move=> z_lt0; rewrite mulrC ltr_ndivl_mulr ?[z * _]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_ndivr_mull",
            "line_nb": 2625,
            "steps": [
                {
                    "command": [
                        "by move=> z_lt0; rewrite mulrC ler_ndivr_mulr ?[z * _]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_ndivr_mull",
            "line_nb": 2628,
            "steps": [
                {
                    "command": [
                        "by move=> z_lt0; rewrite mulrC ltr_ndivr_mulr ?[z * _]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natf_div",
            "line_nb": 2632,
            "steps": [
                {
                    "command": [
                        "by apply: char0_natf_div; apply: (@char_num F).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normfV",
            "line_nb": 2635,
            "steps": [
                {
                    "command": [
                        "move=> x /=; have [/normrV //|Nux] := boolP (x \\is a GRing.unit).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite !invr_out // unitfE normr_eq0 -unitfE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normf_div",
            "line_nb": 2639,
            "steps": [
                {
                    "command": [
                        "by move=> x y /=; rewrite normrM normfV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_sg",
            "line_nb": 2642,
            "steps": [
                {
                    "command": [
                        "by rewrite !(fun_if GRing.inv) !(invr0, invrN, invr1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrV",
            "line_nb": 2645,
            "steps": [
                {
                    "command": [
                        "by rewrite /sgr invr_eq0 invr_lt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midf_le",
            "line_nb": 2649,
            "steps": [
                {
                    "command": [
                        "move=> lexy; rewrite ler_pdivl_mulr ?ler_pdivr_mulr ?ltr0Sn //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulrDr !mulr1 ler_add2r ler_add2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lerif_mean_square",
            "line_nb": 2658,
            "steps": [
                {
                    "command": [
                        "move=> Rx Ry; rewrite -(mono_lerif (ler_pmul2r (ltr_nat F 0 2))).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite divfK ?pnatr_eq0 // mulr_natr; apply: real_lerif_mean_square_scaled.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "real_lerif_AGM2",
            "line_nb": 2662,
            "steps": [
                {
                    "command": [
                        "move=> Rx Ry; rewrite -(mono_lerif (ler_pmul2r (ltr_nat F 0 4))).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite mulr_natr (natrX F 2 2) -exprMn divfK ?pnatr_eq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: real_lerif_AGM2_scaled.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cauchy_root_bound",
            "line_nb": 2677,
            "steps": [
                {
                    "command": [
                        "move=> nz_p; set a := lead_coef p; set n := (size p).-1.",
                        "VernacExtend",
                        "2ed4407a743960054f801c19fd623f6ef3da7a83"
                    ]
                },
                {
                    "command": [
                        "have [q Dp]: {q | forall x, x != 0 -> p.[x] = (a - q.[x^-1] / x) * x ^+ n}.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (- \\poly_(i < n) p`_(n - i.+1)) => x nz_x.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite hornerN mulNr opprK horner_poly mulrDl !mulr_suml addrC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite horner_coef polySpred // big_ord_recr (reindex_inj rev_ord_inj) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -/n -lead_coefE; congr (_ + _); apply: eq_bigr=> i _.",
                        "VernacExtend",
                        "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprB ?unitfE // -exprVn mulrA mulrAC exprSr mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [b ub_q] := poly_disk_bound q 1; exists (b / `|a| + 1) => x px0.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "have b_ge0: 0 <= b by rewrite (ler_trans (normr_ge0 q.[1])) ?ub_q ?normr1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have{b_ge0} ba_ge0: 0 <= b / `|a| by rewrite divr_ge0 ?normr_ge0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite real_lerNgt ?rpredD ?rpred1 ?ger0_real ?normr_ge0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: contraL px0 => lb_x; rewrite rootE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have x_ge1: 1 <= `|x| by rewrite (ler_trans _ (ltrW lb_x)) // ler_paddl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nz_x: x != 0 by rewrite -normr_gt0 (ltr_le_trans ltr01).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite {}Dp // mulf_neq0 ?expf_neq0 // subr_eq0 eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have: (b / `|a|) < `|x| by rewrite (ltr_trans _ lb_x) // ltr_spaddr ?ltr01.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: contraTneq => /(canRL (divfK nz_x))Dax.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite ltr_pdivr_mulr ?normr_gt0 ?lead_coef_eq0 // mulrC -normrM -{}Dax.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ler_gtF // ub_q // normfV invf_le1 ?normr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natf_indexg",
            "line_nb": 2699,
            "steps": [
                {
                    "command": [
                        "by move=> sHG; rewrite -divgS // natf_div ?cardSg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_total",
            "line_nb": 2711,
            "steps": [
                {
                    "command": [
                        "by move=> x y; apply: real_leVge.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_total",
            "line_nb": 2714,
            "steps": [
                {
                    "command": [
                        "by rewrite !ltr_def [_ == y]eq_sym => ->; apply: ler_total.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlog_ler",
            "line_nb": 2717,
            "steps": [
                {
                    "command": [
                        "by move=> sP hP a b; apply: real_wlog_ler.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlog_ltr",
            "line_nb": 2720,
            "steps": [
                {
                    "command": [
                        "by move=> rP sP hP a b; apply: real_wlog_ltr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrNge",
            "line_nb": 2723,
            "steps": [
                {
                    "command": [
                        "exact: real_ltrNge.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerNgt",
            "line_nb": 2726,
            "steps": [
                {
                    "command": [
                        "exact: real_lerNgt.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerP",
            "line_nb": 2729,
            "steps": [
                {
                    "command": [
                        "exact: real_lerP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrP",
            "line_nb": 2732,
            "steps": [
                {
                    "command": [
                        "exact: real_ltrP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrgtP",
            "line_nb": 2735,
            "steps": [
                {
                    "command": [
                        "exact: real_ltrgtP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ger0P",
            "line_nb": 2738,
            "steps": [
                {
                    "command": [
                        "exact: real_ger0P.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler0P",
            "line_nb": 2741,
            "steps": [
                {
                    "command": [
                        "exact: real_ler0P.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrgt0P",
            "line_nb": 2744,
            "steps": [
                {
                    "command": [
                        "exact: real_ltrgt0P.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neqr_lt",
            "line_nb": 2747,
            "steps": [
                {
                    "command": [
                        "exact: real_neqr_lt.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_leLR",
            "line_nb": 2750,
            "steps": [
                {
                    "command": [
                        "by move=> *; apply/idP/idP; rewrite // !lerNgt; apply: contra.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_leRL",
            "line_nb": 2753,
            "steps": [
                {
                    "command": [
                        "by move=> *; symmetry; apply: eqr_leLR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_ltLR",
            "line_nb": 2756,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite !ltrNge; congr negb; apply: eqr_leLR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_ltRL",
            "line_nb": 2759,
            "steps": [
                {
                    "command": [
                        "by move=> *; symmetry; apply: eqr_ltLR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_lt0",
            "line_nb": 2762,
            "steps": [
                {
                    "command": [
                        "have [x_gt0|x_lt0|->] /= := ltrgt0P x; last by rewrite mul0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite pmulr_rlt0 //; case: ltrgt0P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite nmulr_rlt0 //; case: ltrgt0P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neq0_mulr_lt0",
            "line_nb": 2767,
            "steps": [
                {
                    "command": [
                        "by move=> x_neq0 y_neq0; rewrite mulr_lt0 x_neq0 y_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_sign_lt0",
            "line_nb": 2770,
            "steps": [
                {
                    "command": [
                        "by rewrite mulr_lt0 signr_lt0 signr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_sign_norm",
            "line_nb": 2773,
            "steps": [
                {
                    "command": [
                        "by rewrite real_mulr_sign_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_Nsign_norm",
            "line_nb": 2776,
            "steps": [
                {
                    "command": [
                        "by rewrite real_mulr_Nsign_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numEsign",
            "line_nb": 2779,
            "steps": [
                {
                    "command": [
                        "by rewrite -realEsign.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numNEsign",
            "line_nb": 2782,
            "steps": [
                {
                    "command": [
                        "by rewrite -realNEsign.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normrEsign",
            "line_nb": 2785,
            "steps": [
                {
                    "command": [
                        "by rewrite -real_normrEsign.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_mono",
            "line_nb": 2795,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y; apply: real_mono.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nmono",
            "line_nb": 2798,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y; apply: real_nmono.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_mono_in",
            "line_nb": 2801,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y Dx Dy; apply: (real_mono_in mf); rewrite ?inE ?Dx ?Dy /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_nmono_in",
            "line_nb": 2804,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y Dx Dy; apply: (real_nmono_in mf); rewrite ?inE ?Dx ?Dy /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lern_mono",
            "line_nb": 2807,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y; apply: realn_mono.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lern_nmono",
            "line_nb": 2810,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y; apply: realn_nmono.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lern_mono_in",
            "line_nb": 2813,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y Dx Dy; apply: (realn_mono_in mf); rewrite ?inE ?Dx ?Dy /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lern_nmono_in",
            "line_nb": 2816,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y Dx Dy; apply: (realn_nmono_in mf); rewrite ?inE ?Dx ?Dy /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "arg_minrP",
            "line_nb": 2825,
            "steps": [
                {
                    "command": [
                        "by apply: extremumP => //; [apply: ler_trans|apply: ler_total].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_cp0",
            "line_nb": 2844,
            "steps": [
                {
                    "command": [
                        "rewrite -[1]/((-1) ^+ false) -signrN lt0r lerNgt sgr_def.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (x =P 0) => [-> | _]; first by rewrite !(eq_sym 0) !signr_eq0 ltrr eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(inj_eq signr_inj) eqb_id eqbF_neg signr_eq0 //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrP",
            "line_nb": 2850,
            "steps": [
                {
                    "command": [
                        "by rewrite ![_ == sg _]eq_sym !sgr_cp0 /sg; case: ltrgt0P; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normrEsg",
            "line_nb": 2853,
            "steps": [
                {
                    "command": [
                        "by case: sgrP; rewrite ?(mul0r, mul1r, mulN1r).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "numEsg",
            "line_nb": 2856,
            "steps": [
                {
                    "command": [
                        "by case: sgrP; rewrite !(mul1r, mul0r, mulrNN).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulr_sg_norm",
            "line_nb": 2859,
            "steps": [
                {
                    "command": [
                        "by rewrite -numEsg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrM",
            "line_nb": 2862,
            "steps": [
                {
                    "command": [
                        "rewrite !sgr_def mulr_lt0 andbA mulrnAr mulrnAl -mulrnA mulnb -negb_or mulf_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (~~ _) => //; rewrite signr_addb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrN",
            "line_nb": 2866,
            "steps": [
                {
                    "command": [
                        "by rewrite -mulrN1 sgrM sgrN1 mulrN1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgrX",
            "line_nb": 2869,
            "steps": [
                {
                    "command": [
                        "by elim: n => [|n IHn]; rewrite ?sgr1 // !exprS sgrM IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_smul",
            "line_nb": 2872,
            "steps": [
                {
                    "command": [
                        "by rewrite sgrM sgr_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_gt0",
            "line_nb": 2875,
            "steps": [
                {
                    "command": [
                        "by rewrite -sgr_cp0 sgr_id sgr_cp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgr_ge0",
            "line_nb": 2878,
            "steps": [
                {
                    "command": [
                        "by rewrite !lerNgt sgr_lt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_norm",
            "line_nb": 2881,
            "steps": [
                {
                    "command": [
                        "exact: real_ler_norm.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_norml",
            "line_nb": 2884,
            "steps": [
                {
                    "command": [
                        "exact: real_ler_norml.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_normlP",
            "line_nb": 2887,
            "steps": [
                {
                    "command": [
                        "exact: real_ler_normlP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_norml",
            "line_nb": 2891,
            "steps": [
                {
                    "command": [
                        "exact: real_eqr_norml.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_norm2",
            "line_nb": 2894,
            "steps": [
                {
                    "command": [
                        "exact: real_eqr_norm2.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_norml",
            "line_nb": 2897,
            "steps": [
                {
                    "command": [
                        "exact: real_ltr_norml.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_normlP",
            "line_nb": 2901,
            "steps": [
                {
                    "command": [
                        "exact: real_ltr_normlP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_normr",
            "line_nb": 2905,
            "steps": [
                {
                    "command": [
                        "by rewrite lerNgt ltr_norml negb_and -!lerNgt orbC ler_oppr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_normr",
            "line_nb": 2908,
            "steps": [
                {
                    "command": [
                        "by rewrite ltrNge ler_norml negb_and -!ltrNge orbC ltr_oppr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_distl",
            "line_nb": 2912,
            "steps": [
                {
                    "command": [
                        "by rewrite lter_norml !lter_sub_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_distl",
            "line_nb": 2915,
            "steps": [
                {
                    "command": [
                        "by rewrite lter_norml !lter_sub_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_even_ge0",
            "line_nb": 2919,
            "steps": [
                {
                    "command": [
                        "by move=> even_n; rewrite real_exprn_even_ge0 ?num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_even_gt0",
            "line_nb": 2922,
            "steps": [
                {
                    "command": [
                        "by move=> even_n; rewrite real_exprn_even_gt0 ?num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_even_le0",
            "line_nb": 2925,
            "steps": [
                {
                    "command": [
                        "by move=> even_n; rewrite real_exprn_even_le0 ?num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_even_lt0",
            "line_nb": 2928,
            "steps": [
                {
                    "command": [
                        "by move=> even_n; rewrite real_exprn_even_lt0 ?num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_odd_ge0",
            "line_nb": 2931,
            "steps": [
                {
                    "command": [
                        "by move=> even_n; rewrite real_exprn_odd_ge0 ?num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_odd_gt0",
            "line_nb": 2934,
            "steps": [
                {
                    "command": [
                        "by move=> even_n; rewrite real_exprn_odd_gt0 ?num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_odd_le0",
            "line_nb": 2937,
            "steps": [
                {
                    "command": [
                        "by move=> even_n; rewrite real_exprn_odd_le0 ?num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exprn_odd_lt0",
            "line_nb": 2940,
            "steps": [
                {
                    "command": [
                        "by move=> even_n; rewrite real_exprn_odd_lt0 ?num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqr_ge0",
            "line_nb": 2943,
            "steps": [
                {
                    "command": [
                        "by rewrite exprn_even_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqr_norm_eq1",
            "line_nb": 2946,
            "steps": [
                {
                    "command": [
                        "by rewrite sqrf_eq1 eqr_norml ler01 andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_mean_square_scaled",
            "line_nb": 2949,
            "steps": [
                {
                    "command": [
                        "exact: real_lerif_mean_square_scaled.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_AGM2_scaled",
            "line_nb": 2952,
            "steps": [
                {
                    "command": [
                        "exact: real_lerif_AGM2_scaled.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minrC",
            "line_nb": 2956,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /min; case: ltrgtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minrr",
            "line_nb": 2959,
            "steps": [
                {
                    "command": [
                        "by move=> x; rewrite /min if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minr_l",
            "line_nb": 2962,
            "steps": [
                {
                    "command": [
                        "by rewrite /minr => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minr_r",
            "line_nb": 2965,
            "steps": [
                {
                    "command": [
                        "by move/minr_l; rewrite minrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxrC",
            "line_nb": 2968,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /maxr; case: ltrgtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxrr",
            "line_nb": 2971,
            "steps": [
                {
                    "command": [
                        "by move=> x; rewrite /max if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxr_l",
            "line_nb": 2974,
            "steps": [
                {
                    "command": [
                        "by move=> hxy; rewrite /max hxy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxr_r",
            "line_nb": 2977,
            "steps": [
                {
                    "command": [
                        "by move=> hxy; rewrite maxrC maxr_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addr_min_max",
            "line_nb": 2980,
            "steps": [
                {
                    "command": [
                        "case: (lerP x y)=> hxy; first by rewrite maxr_r ?minr_l.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite maxr_l ?minr_r ?ltrW // addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addr_max_min",
            "line_nb": 2984,
            "steps": [
                {
                    "command": [
                        "by rewrite addrC addr_min_max.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minr_to_max",
            "line_nb": 2987,
            "steps": [
                {
                    "command": [
                        "by rewrite -[x + y]addr_min_max addrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxr_to_min",
            "line_nb": 2990,
            "steps": [
                {
                    "command": [
                        "by rewrite -[x + y]addr_max_min addrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minrA",
            "line_nb": 2993,
            "steps": [
                {
                    "command": [
                        "rewrite /min; case: (lerP y z) => [hyz | /ltrW hyz].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by case: lerP => hxy; rewrite ?hyz // (@ler_trans _ y).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: lerP=> hxz; first by rewrite !(ler_trans hxz).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (lerP x y)=> hxy; first by rewrite lerNgt hxz.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: ltrgtP hyz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minrCA",
            "line_nb": 3000,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; rewrite !minrA [minr x y]minrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minrAC",
            "line_nb": 3003,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; rewrite -!minrA [minr y z]minrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minrP",
            "line_nb": 3007,
            "steps": [
                {
                    "command": [
                        "case: lerP=> hxy; first by rewrite minr_l //; constructor.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite minr_r 1?ltrW //; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_max",
            "line_nb": 3011,
            "steps": [
                {
                    "command": [
                        "case: minrP; rewrite lter_opp2 => hxy; first by rewrite maxr_l.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite maxr_r // ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppr_min",
            "line_nb": 3015,
            "steps": [
                {
                    "command": [
                        "by rewrite -[maxr _ _]opprK oppr_max !opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxrA",
            "line_nb": 3018,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite -eqr_opp !oppr_max minrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxrCA",
            "line_nb": 3021,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; rewrite !maxrA [maxr x y]maxrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxrAC",
            "line_nb": 3024,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; rewrite -!maxrA [maxr y z]maxrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxrP",
            "line_nb": 3028,
            "steps": [
                {
                    "command": [
                        "case: lerP => hxy; first by rewrite maxr_l //; constructor.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite maxr_r 1?ltrW //; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_minl",
            "line_nb": 3032,
            "steps": [
                {
                    "command": [
                        "by case: minrP=> hxy; rewrite ?eqxx // ltr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_minr",
            "line_nb": 3035,
            "steps": [
                {
                    "command": [
                        "by rewrite minrC eqr_minl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_maxl",
            "line_nb": 3038,
            "steps": [
                {
                    "command": [
                        "by case: maxrP=> hxy; rewrite ?eqxx // eq_sym ltr_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_maxr",
            "line_nb": 3041,
            "steps": [
                {
                    "command": [
                        "by rewrite maxrC eqr_maxl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_minr",
            "line_nb": 3044,
            "steps": [
                {
                    "command": [
                        "case: minrP=> hyz.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: lerP=> hxy //; rewrite (ler_trans _ hyz).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: lerP=> hxz; rewrite andbC // (ler_trans hxz) // ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_maxr",
            "line_nb": 3056,
            "steps": [
                {
                    "command": [
                        "by rewrite -lter_opp2 oppr_max ler_minl !ler_opp2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_maxl",
            "line_nb": 3059,
            "steps": [
                {
                    "command": [
                        "by rewrite -lter_opp2 oppr_max ler_minr !ler_opp2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_minr",
            "line_nb": 3062,
            "steps": [
                {
                    "command": [
                        "by rewrite !ltrNge ler_minl negb_or.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_minl",
            "line_nb": 3065,
            "steps": [
                {
                    "command": [
                        "by rewrite !ltrNge ler_minr negb_and.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_maxr",
            "line_nb": 3068,
            "steps": [
                {
                    "command": [
                        "by rewrite !ltrNge ler_maxl negb_and.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_maxl",
            "line_nb": 3071,
            "steps": [
                {
                    "command": [
                        "by rewrite !ltrNge ler_maxr negb_or.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addr_minl",
            "line_nb": 3078,
            "steps": [
                {
                    "command": [
                        "move=> x y z; case: minrP=> hxy; first by rewrite minr_l // ler_add2r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite minr_r // ltrW // ltr_add2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addr_minr",
            "line_nb": 3082,
            "steps": [
                {
                    "command": [
                        "move=> x y z; case: minrP=> hxy; first by rewrite minr_l // ler_add2l.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite minr_r // ltrW // ltr_add2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addr_maxl",
            "line_nb": 3086,
            "steps": [
                {
                    "command": [
                        "move=> x y z; rewrite -[_ + _]opprK opprD oppr_max.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite addr_minl -!opprD oppr_min !opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addr_maxr",
            "line_nb": 3090,
            "steps": [
                {
                    "command": [
                        "move=> x y z; rewrite -[_ + _]opprK opprD oppr_max.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite addr_minr -!opprD oppr_min !opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minrK",
            "line_nb": 3094,
            "steps": [
                {
                    "command": [
                        "by case: minrP => hxy; rewrite ?maxrr ?maxr_r // ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minKr",
            "line_nb": 3097,
            "steps": [
                {
                    "command": [
                        "by case: maxrP => hxy; rewrite ?minrr ?minr_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxr_minl",
            "line_nb": 3100,
            "steps": [
                {
                    "command": [
                        "move=> x y z; case: minrP => hxy.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by case: maxrP => hm; rewrite minr_l // ler_maxr (hxy, lerr) ?orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: maxrP => hyz; rewrite minr_r // ler_maxr (ltrW hxy, lerr) ?orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxr_minr",
            "line_nb": 3105,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; rewrite maxrC maxr_minl ![_ _ x]maxrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minr_maxl",
            "line_nb": 3108,
            "steps": [
                {
                    "command": [
                        "move=> x y z; rewrite -[min _ _]opprK !oppr_min [- max x y]oppr_max.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite maxr_minl !(oppr_max, oppr_min, opprK).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minr_maxr",
            "line_nb": 3112,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; rewrite minrC minr_maxl ![_ _ x]minrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minr_pmulr",
            "line_nb": 3115,
            "steps": [
                {
                    "command": [
                        "case: sgrP=> // hx _; first by rewrite hx !mul0r minrr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: minrP=> hyz; first by rewrite minr_l // ler_pmul2l.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite minr_r // ltrW // ltr_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minr_nmulr",
            "line_nb": 3120,
            "steps": [
                {
                    "command": [
                        "move=> hx; rewrite -[_ * _]opprK -mulNr minr_pmulr ?oppr_cp0 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite oppr_min !mulNr !opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxr_pmulr",
            "line_nb": 3124,
            "steps": [
                {
                    "command": [
                        "move=> hx; rewrite -[_ * _]opprK -mulrN oppr_max minr_pmulr //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite oppr_min !mulrN !opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxr_nmulr",
            "line_nb": 3128,
            "steps": [
                {
                    "command": [
                        "move=> hx; rewrite -[_ * _]opprK -mulrN oppr_max minr_nmulr //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite oppr_max !mulrN !opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minr_pmull",
            "line_nb": 3132,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite mulrC minr_pmulr // ![_ * x]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minr_nmull",
            "line_nb": 3135,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite mulrC minr_nmulr // ![_ * x]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxr_pmull",
            "line_nb": 3138,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite mulrC maxr_pmulr // ![_ * x]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxr_nmull",
            "line_nb": 3141,
            "steps": [
                {
                    "command": [
                        "by move=> *; rewrite mulrC maxr_nmulr // ![_ * x]mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxrN",
            "line_nb": 3144,
            "steps": [
                {
                    "command": [
                        "case: ger0P=> hx; first by rewrite maxr_l // ge0_cp //.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite maxr_r // le0_cp // ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxNr",
            "line_nb": 3148,
            "steps": [
                {
                    "command": [
                        "by rewrite maxrC maxrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minrN",
            "line_nb": 3151,
            "steps": [
                {
                    "command": [
                        "by rewrite -[minr _ _]opprK oppr_min opprK maxNr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minNr",
            "line_nb": 3154,
            "steps": [
                {
                    "command": [
                        "by rewrite -[minr _ _]opprK oppr_min opprK maxrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_itv_bound",
            "line_nb": 3160,
            "steps": [
                {
                    "command": [
                        "have [ub le_p_ub] := poly_disk_bound p (Num.max `|a| `|b|).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists ub => x /andP[le_a_x le_x_b]; rewrite le_p_ub // ler_maxr !ler_normr.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by have [_|_] := ler0P x; rewrite ?ler_opp2 ?le_a_x ?le_x_b orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_mean_square",
            "line_nb": 3186,
            "steps": [
                {
                    "command": [
                        "by apply: real_lerif_mean_square; apply: num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_AGM2",
            "line_nb": 3189,
            "steps": [
                {
                    "command": [
                        "by apply: real_lerif_AGM2; apply: num_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "archi_boundP",
            "line_nb": 3195,
            "steps": [
                {
                    "command": [
                        "by move/ger0_norm=> {1}<-; rewrite /bound; case: (sigW _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtr_ge0",
            "line_nb": 3210,
            "steps": [
                {
                    "command": [
                        "by rewrite /sqrt; case: (sig2W _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqr_sqrtr",
            "line_nb": 3214,
            "steps": [
                {
                    "command": [
                        "by rewrite /sqrt => a_ge0; case: (sig2W _) => /= x _; rewrite a_ge0 => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler0_sqrtr",
            "line_nb": 3217,
            "steps": [
                {
                    "command": [
                        "rewrite /sqrtr; case: (sig2W _) => x /= _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by have [//|_ /eqP//|->] := ltrgt0P a; rewrite mulf_eq0 orbb => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr0_sqrtr",
            "line_nb": 3221,
            "steps": [
                {
                    "command": [
                        "by move=> /ltrW; apply: ler0_sqrtr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtrP",
            "line_nb": 3225,
            "steps": [
                {
                    "command": [
                        "have [a_ge0|a_lt0] := ger0P a.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1 2}[a]sqr_sqrtr //; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr0_sqrtr //; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtr_sqr",
            "line_nb": 3230,
            "steps": [
                {
                    "command": [
                        "have /eqP : sqrt (a ^+ 2) ^+ 2 = `|a| ^+ 2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -normrX ger0_norm ?sqr_sqrtr ?sqr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite eqf_sqr => /predU1P[-> //|ha].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have := sqrtr_ge0 (a ^+ 2); rewrite (eqP ha) oppr_ge0 normr_le0 => /eqP ->.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "by rewrite normr0 oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtrM",
            "line_nb": 3237,
            "steps": [
                {
                    "command": [
                        "case: (sqrtrP a) => // {a} a a_ge0 _; case: (sqrtrP b) => [b_lt0 | {b} b b_ge0].",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr0 ler0_sqrtr // nmulr_lle0 ?mulr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrACA sqrtr_sqr ger0_norm ?mulr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtr0",
            "line_nb": 3242,
            "steps": [
                {
                    "command": [
                        "by move: (sqrtr_sqr 0); rewrite exprS mul0r => ->; rewrite normr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtr1",
            "line_nb": 3245,
            "steps": [
                {
                    "command": [
                        "by move: (sqrtr_sqr 1); rewrite expr1n => ->; rewrite normr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtr_eq0",
            "line_nb": 3248,
            "steps": [
                {
                    "command": [
                        "case: sqrtrP => [/ltrW ->|b]; first by rewrite eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ltrgt0P => [b_gt0|//|->]; last by rewrite exprS mul0r lerr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltr_geF ?pmulr_rgt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtr_gt0",
            "line_nb": 3253,
            "steps": [
                {
                    "command": [
                        "by rewrite lt0r sqrtr_ge0 sqrtr_eq0 -ltrNge andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_sqrt",
            "line_nb": 3256,
            "steps": [
                {
                    "command": [
                        "move=> a_ge0 b_ge0; apply/eqP/eqP=> [HS|->] //.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by move: (sqr_sqrtr a_ge0); rewrite HS (sqr_sqrtr b_ge0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_wsqrtr",
            "line_nb": 3260,
            "steps": [
                {
                    "command": [
                        "move=> a b /= le_ab; case: (boolP (0 <= a))=> [pa|]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltrNge; move/ltrW; rewrite -sqrtr_eq0; move/eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(@ler_pexpn2r R 2) ?nnegrE ?sqrtr_ge0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !sqr_sqrtr // (ler_trans pa).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_psqrt",
            "line_nb": 3266,
            "steps": [
                {
                    "command": [
                        "apply: ler_mono_in => x y x_gt0 y_gt0.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite !ltr_neqAle => /andP[neq_xy le_xy].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite ler_wsqrtr // eqr_sqrt ?ltrW // neq_xy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_sqrt",
            "line_nb": 3271,
            "steps": [
                {
                    "command": [
                        "move=> b_gt0; have [a_le0|a_gt0] := ler0P a; last by rewrite ler_psqrt.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ler0_sqrtr // sqrtr_ge0 (ler_trans a_le0) ?ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_sqrt",
            "line_nb": 3275,
            "steps": [
                {
                    "command": [
                        "move=> b_gt0; have [a_le0|a_gt0] := ler0P a; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (lerW_mono_in ler_psqrt).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ler0_sqrtr // sqrtr_gt0 b_gt0 (ler_lt_trans a_le0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normCK",
            "line_nb": 3288,
            "steps": [
                {
                    "command": [
                        "by case: C x => ? [? ? []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrCi",
            "line_nb": 3291,
            "steps": [
                {
                    "command": [
                        "by case: C => ? [? ? []].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjCK",
            "line_nb": 3294,
            "steps": [
                {
                    "command": [
                        "have JE x : x^* = `|x|^+2 / x.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [->|x_neq0] := eqVneq x 0; first by rewrite rmorph0 invr0 mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: (canRL (mulfK _)) => //; rewrite mulrC -normCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> x; have [->|x_neq0] := eqVneq x 0; first by rewrite !rmorph0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !JE normrM normfV exprMn normrX normr_id.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite invfM exprVn mulrA -[X in X * _]mulrA -invfM -exprMn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite divff ?mul1r ?invrK // !expf_eq0 normr_eq0 //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nz2",
            "line_nb": 3345,
            "steps": [
                {
                    "command": [
                        "by rewrite pnatr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normCKC",
            "line_nb": 3348,
            "steps": [
                {
                    "command": [
                        "by rewrite normCK mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_conjC_ge0",
            "line_nb": 3351,
            "steps": [
                {
                    "command": [
                        "by rewrite -normCK exprn_ge0 ?normr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_conjC_gt0",
            "line_nb": 3354,
            "steps": [
                {
                    "command": [
                        "have [->|x_neq0] := altP eqP; first by rewrite rmorph0 mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -normCK exprn_gt0 ?normr_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_conjC_eq0",
            "line_nb": 3358,
            "steps": [
                {
                    "command": [
                        "by rewrite -normCK expf_eq0 normr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_ge0",
            "line_nb": 3361,
            "steps": [
                {
                    "command": [
                        "wlog suffices: x / 0 <= x -> 0 <= x^*.",
                        "VernacExtend",
                        "348aa27e7c84ea4ca2ac06b8a3b3db24e74b6ad7"
                    ]
                },
                {
                    "command": [
                        "by move=> IH; apply/idP/idP=> /IH; rewrite ?conjCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite le0r => /predU1P[-> | x_gt0]; first by rewrite rmorph0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(pmulr_rge0 _ x_gt0) mul_conjC_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_nat",
            "line_nb": 3367,
            "steps": [
                {
                    "command": [
                        "exact: rmorph_nat.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC0",
            "line_nb": 3370,
            "steps": [
                {
                    "command": [
                        "exact: rmorph0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC1",
            "line_nb": 3373,
            "steps": [
                {
                    "command": [
                        "exact: rmorph1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_eq0",
            "line_nb": 3376,
            "steps": [
                {
                    "command": [
                        "exact: fmorph_eq0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invC_norm",
            "line_nb": 3379,
            "steps": [
                {
                    "command": [
                        "have [-> | nx_x] := eqVneq x 0; first by rewrite conjC0 mulr0 invr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite normCK invfM divfK ?conjC_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CrealE",
            "line_nb": 3383,
            "steps": [
                {
                    "command": [
                        "rewrite realEsqr ger0_def normrX normCK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by have [-> | /mulfI/inj_eq-> //] := eqVneq x 0; rewrite rmorph0 !eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CrealP",
            "line_nb": 3387,
            "steps": [
                {
                    "command": [
                        "by rewrite CrealE; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_Creal",
            "line_nb": 3390,
            "steps": [
                {
                    "command": [
                        "by move/CrealP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_normC",
            "line_nb": 3393,
            "steps": [
                {
                    "command": [
                        "by rewrite conj_Creal ?normr_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "geC0_conj",
            "line_nb": 3396,
            "steps": [
                {
                    "command": [
                        "by move=> /ger0_real/CrealP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "geC0_unit_exp",
            "line_nb": 3399,
            "steps": [
                {
                    "command": [
                        "by move=> x_ge0; rewrite pexpr_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root0C",
            "line_nb": 3403,
            "steps": [
                {
                    "command": [
                        "by case_rootC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootCK",
            "line_nb": 3406,
            "steps": [
                {
                    "command": [
                        "by case: n => //= n _ x; case_rootC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root1C",
            "line_nb": 3409,
            "steps": [
                {
                    "command": [
                        "exact: (@rootCK 1).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC0",
            "line_nb": 3412,
            "steps": [
                {
                    "command": [
                        "have [-> | n_gt0] := posnP n; first by rewrite root0C.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by have /eqP := rootCK n_gt0 0; rewrite expf_eq0 n_gt0 /= => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_inj",
            "line_nb": 3416,
            "steps": [
                {
                    "command": [
                        "by move/rootCK/can_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_rootC",
            "line_nb": 3419,
            "steps": [
                {
                    "command": [
                        "by move/rootC_inj/inj_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_eq0",
            "line_nb": 3422,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite -{1}(rootC0 n) eqr_rootC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonRealCi",
            "line_nb": 3425,
            "steps": [
                {
                    "command": [
                        "by rewrite realEsqr sqrCi oppr_ge0 ltr_geF ?ltr01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neq0Ci",
            "line_nb": 3428,
            "steps": [
                {
                    "command": [
                        "by apply: contraNneq nonRealCi => ->; apply: real0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normCi",
            "line_nb": 3431,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite -(@pexpr_eq1 _ _ 2) ?normr_ge0 //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -normrX sqrCi normrN1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invCi",
            "line_nb": 3435,
            "steps": [
                {
                    "command": [
                        "by rewrite -div1r -[1]opprK -sqrCi mulNr mulfK ?neq0Ci.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjCi",
            "line_nb": 3438,
            "steps": [
                {
                    "command": [
                        "by rewrite -invCi invC_norm normCi expr1n invr1 mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Crect",
            "line_nb": 3441,
            "steps": [
                {
                    "command": [
                        "rewrite 2!mulrA -expr2 sqrCi mulN1r opprB -mulrDl addrACA subrr addr0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulr2n -mulr_natr mulfK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Creal_Re",
            "line_nb": 3445,
            "steps": [
                {
                    "command": [
                        "by rewrite CrealE fmorph_div rmorph_nat rmorphD conjCK addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Creal_Im",
            "line_nb": 3448,
            "steps": [
                {
                    "command": [
                        "rewrite CrealE fmorph_div rmorph_nat rmorphM rmorphB conjCK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite conjCi -opprB mulrNN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Re_is_additive",
            "line_nb": 3453,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /Re rmorphB addrACA -opprD mulrBl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Im_is_additive",
            "line_nb": 3457,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /Im rmorphB opprD addrACA -opprD mulrBr mulrBl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Creal_ImP",
            "line_nb": 3461,
            "steps": [
                {
                    "command": [
                        "rewrite CrealE -subr_eq0 -(can_eq (mulKf neq0Ci)) mulr0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(can_eq (divfK nz2)) mul0r; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Creal_ReP",
            "line_nb": 3465,
            "steps": [
                {
                    "command": [
                        "rewrite (sameP (Creal_ImP z) eqP) -(can_eq (mulKf neq0Ci)) mulr0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(inj_eq (addrI ('Re z))) addr0 -Crect eq_sym; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ReMl",
            "line_nb": 3469,
            "steps": [
                {
                    "command": [
                        "by move=> x Rx z /=; rewrite /Re rmorphM (conj_Creal Rx) -mulrDr -mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ReMr",
            "line_nb": 3472,
            "steps": [
                {
                    "command": [
                        "by move=> x Rx z /=; rewrite mulrC ReMl // mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ImMl",
            "line_nb": 3475,
            "steps": [
                {
                    "command": [
                        "by move=> x Rx z; rewrite /Im rmorphM (conj_Creal Rx) -mulrBr mulrCA !mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ImMr",
            "line_nb": 3478,
            "steps": [
                {
                    "command": [
                        "by move=> x Rx z /=; rewrite mulrC ImMl // mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Re_i",
            "line_nb": 3481,
            "steps": [
                {
                    "command": [
                        "by rewrite /Re conjCi subrr mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Im_i",
            "line_nb": 3484,
            "steps": [
                {
                    "command": [
                        "rewrite /Im conjCi -opprD mulrN -mulr2n mulrnAr ['i * _]sqrCi.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulNrn opprK divff.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Re_conj",
            "line_nb": 3488,
            "steps": [
                {
                    "command": [
                        "by rewrite /Re addrC conjCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Im_conj",
            "line_nb": 3491,
            "steps": [
                {
                    "command": [
                        "by rewrite /Im -mulNr -mulrN opprB conjCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Re_rect",
            "line_nb": 3494,
            "steps": [
                {
                    "command": [
                        "move=> x y Rx Ry; rewrite /= raddfD /= (Creal_ReP x Rx).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite ReMr // Re_i mul0r addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Im_rect",
            "line_nb": 3498,
            "steps": [
                {
                    "command": [
                        "move=> x y Rx Ry; rewrite /= raddfD /= (Creal_ImP x Rx) add0r.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite ImMr // Im_i mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_rect",
            "line_nb": 3502,
            "steps": [
                {
                    "command": [
                        "by move=> x y Rx Ry; rewrite /= rmorphD rmorphM conjCi mulNr !conj_Creal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addC_rect",
            "line_nb": 3505,
            "steps": [
                {
                    "command": [
                        "by rewrite addrACA -mulrDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppC_rect",
            "line_nb": 3508,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrN -opprD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subC_rect",
            "line_nb": 3511,
            "steps": [
                {
                    "command": [
                        "by rewrite oppC_rect addC_rect.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC2_rect",
            "line_nb": 3518,
            "steps": [
                {
                    "command": [
                        "move=> x y Rx Ry; rewrite /= normCK rmorphD rmorphM conjCi !conj_Creal //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrC mulNr -subr_sqr exprMn sqrCi mulN1r opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC2_Re_Im",
            "line_nb": 3522,
            "steps": [
                {
                    "command": [
                        "by rewrite -normC2_rect -?Crect.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invC_rect",
            "line_nb": 3525,
            "steps": [
                {
                    "command": [
                        "by move=> x y Rx Ry; rewrite /= invC_norm conjC_rect // mulrC normC2_rect.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_normC_Re_Creal",
            "line_nb": 3528,
            "steps": [
                {
                    "command": [
                        "rewrite -(mono_in_lerif ler_sqr); try by rewrite qualifE normr_ge0.",
                        "VernacExtend",
                        "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
                    ]
                },
                {
                    "command": [
                        "rewrite normCK conj_Creal // normC2_Re_Im -expr2.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite addrC -lerif_subLR subrr (sameP (Creal_ImP _) eqP) -sqrf_eq0 eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: lerif_eq; rewrite -realEsqr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "argCleP",
            "line_nb": 3549,
            "steps": [
                {
                    "command": [
                        "suffices dIm x: nnegIm x = (0 <= 'Im x).",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "rewrite /argCle !dIm ler_pmul2r ?invr_gt0 ?ltr0n //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: (iffP implyP) => geZyz /geZyz/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /('Im x) pmulr_lge0 ?invr_gt0 ?ltr0n //; congr (0 <= _ * _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_Re_max",
            "line_nb": 3555,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0 yn_x leI0y; case_rootC=> z /= _ /(_ y n_gt0 yn_x)/argCleP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_unity_root",
            "line_nb": 3558,
            "steps": [
                {
                    "command": [
                        "move=> n_gt1; have [|w /eqP pw_0] := closed_rootP (\\poly_(i < n) (1 : C)) _.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_poly_eq ?oner_eq0 // -(subnKC n_gt1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite horner_poly (eq_bigr _ (fun _ _ => mul1r _)) in pw_0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have wn1: w ^+ n = 1 by apply/eqP; rewrite -subr_eq0 subrX1 pw_0 mulr0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suffices /existsP[i ltRwi0]: [exists i : 'I_n, 'Re (w ^+ i) < 0].",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by exists (w ^+ i) => //; rewrite exprAC wn1 expr1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: contra_eqT (congr1 Re pw_0); rewrite negb_exists => /forallP geRw0.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "rewrite raddf_sum raddf0 /= (bigD1 (Ordinal (ltnW n_gt1))) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (Creal_ReP _ _) ?rpred1 // gtr_eqF ?ltr_paddr ?ltr01 //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: sumr_ge0 => i _; rewrite real_lerNgt ?rpred0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_ge0",
            "line_nb": 3601,
            "steps": [
                {
                    "command": [
                        "set y := n.-root x => n_gt0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/idP/idP=> [/(exprn_ge0 n) | x_ge0]; first by rewrite rootCK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -(ger_lerif (lerif_Re_Creal y)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have Ray: `|y| \\is real by apply: normr_real.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Creal_ReP _ Ray) rootC_Re_max ?(Creal_ImP _ Ray) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -normrX rootCK // ger0_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_gt0",
            "line_nb": 3609,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite !lt0r rootC_ge0 ?rootC_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_le0",
            "line_nb": 3612,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt1; rewrite ler_eqVlt rootC_lt0 // orbF rootC_eq0 1?ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_rootCl",
            "line_nb": 3615,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0 x x_ge0 y; have [y_ge0 | not_y_ge0] := boolP (0 <= y).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(ler_pexpn2r n_gt0) ?qualifE ?rootC_ge0 ?rootCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (contraNF (@ler_trans _ _ 0 _ _)) ?rootC_ge0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (contraNF (ler_trans x_ge0)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_rootC",
            "line_nb": 3621,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0 x y x_ge0 _; apply: ler_rootCl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_rootCl",
            "line_nb": 3624,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0 x x_ge0 y; rewrite !ltr_def ler_rootCl ?eqr_rootC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_rootC",
            "line_nb": 3627,
            "steps": [
                {
                    "command": [
                        "by move/ler_rootC/lerW_mono_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_rootC",
            "line_nb": 3634,
            "steps": [
                {
                    "command": [
                        "have [-> | n_gt0] := posnP n; first by rewrite !root0C normr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -(eqr_expn2 n_gt0) ?rootC_ge0 ?normr_ge0 //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -normrX !rootCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC1",
            "line_nb": 3643,
            "steps": [
                {
                    "command": [
                        "by move/(rootCX 0)/(_ ler01).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootCpX",
            "line_nb": 3646,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n] k_gt0; [rewrite !root0C expr0n gtn_eqF | apply: rootCX].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_eq1",
            "line_nb": 3653,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite -{1}(rootC1 n_gt0) eqr_rootC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_ge1",
            "line_nb": 3656,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite -{1}(rootC1 n_gt0) ler_rootCl // qualifE ler01.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_gt1",
            "line_nb": 3659,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite !ltr_def rootC_eq1 ?rootC_ge1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_le1",
            "line_nb": 3662,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0 x_ge0; rewrite -{1}(rootC1 n_gt0) ler_rootCl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC_lt1",
            "line_nb": 3665,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0 x_ge0; rewrite !ltr_neqAle rootC_eq1 ?rootC_le1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootCMr",
            "line_nb": 3687,
            "steps": [
                {
                    "command": [
                        "by move=> x_ge0; rewrite mulrC rootCMl // mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imaginaryCE",
            "line_nb": 3690,
            "steps": [
                {
                    "command": [
                        "have : sqrtC (-1) ^+ 2 - 'i ^+ 2 == 0 by rewrite sqrCi rootCK // subrr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite subr_sqr mulf_eq0 subr_eq0 addr_eq0; have [//|_/= /eqP sCN1E] := eqP.",
                        "VernacExtend",
                        "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
                    ]
                },
                {
                    "command": [
                        "by have := @Im_rootC_ge0 2 (-1) isT; rewrite sCN1E raddfN /= Im_i ler0N1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lerif_rootC_AGM",
            "line_nb": 3695,
            "steps": [
                {
                    "command": [
                        "move=> Ege0; have [n0 | n_gt0] := posnP n.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite n0 root0C invr0 mulr0; apply/lerif_refl/forall_inP=> i.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite (card0_eq n0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(mono_in_lerif (ler_pexpn2r n_gt0)) ?rootCK //=; first 1 last.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite qualifE rootC_ge0 // prodr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpred_div ?rpred_nat ?rpred_sum.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exact: lerif_AGM.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtC0",
            "line_nb": 3706,
            "steps": [
                {
                    "command": [
                        "exact: rootC0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtC1",
            "line_nb": 3709,
            "steps": [
                {
                    "command": [
                        "exact: rootC1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtCK",
            "line_nb": 3712,
            "steps": [
                {
                    "command": [
                        "exact: rootCK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrCK",
            "line_nb": 3715,
            "steps": [
                {
                    "command": [
                        "exact: exprCK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtC_ge0",
            "line_nb": 3718,
            "steps": [
                {
                    "command": [
                        "exact: rootC_ge0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtC_eq0",
            "line_nb": 3721,
            "steps": [
                {
                    "command": [
                        "exact: rootC_eq0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtC_gt0",
            "line_nb": 3724,
            "steps": [
                {
                    "command": [
                        "exact: rootC_gt0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtC_lt0",
            "line_nb": 3727,
            "steps": [
                {
                    "command": [
                        "exact: rootC_lt0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtC_le0",
            "line_nb": 3730,
            "steps": [
                {
                    "command": [
                        "exact: rootC_le0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ler_sqrtC",
            "line_nb": 3733,
            "steps": [
                {
                    "command": [
                        "exact: ler_rootC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltr_sqrtC",
            "line_nb": 3736,
            "steps": [
                {
                    "command": [
                        "exact: ltr_rootC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqr_sqrtC",
            "line_nb": 3739,
            "steps": [
                {
                    "command": [
                        "exact: eqr_rootC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtC_inj",
            "line_nb": 3742,
            "steps": [
                {
                    "command": [
                        "exact: rootC_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtCM",
            "line_nb": 3745,
            "steps": [
                {
                    "command": [
                        "by move=> x y _; apply: rootCMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrCK_P",
            "line_nb": 3748,
            "steps": [
                {
                    "command": [
                        "apply: (iffP andP) => [[leI0x not_gt0x] | <-]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite sqrtC_lt0 Im_rootC_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /eqP := sqrtCK (x ^+ 2); rewrite eqf_sqr => /pred2P[] // defNx.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "apply: sqrCK; rewrite -real_lerNgt ?rpred0 // in not_gt0x; apply/Creal_ImP/ler_anti; by rewrite leI0x -oppr_ge0 -raddfN -defNx Im_rootC_ge0.",
                        "VernacExtend",
                        "3c91a176eb68c567f143250bd6e50df1e0b63152"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC_def",
            "line_nb": 3754,
            "steps": [
                {
                    "command": [
                        "by rewrite -normCK sqrCK ?normr_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_conjC",
            "line_nb": 3757,
            "steps": [
                {
                    "command": [
                        "by rewrite !normC_def conjCK mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC_rect",
            "line_nb": 3760,
            "steps": [
                {
                    "command": [
                        "by move=> x y Rx Ry; rewrite /= normC_def -normCK normC2_rect.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC_Re_Im",
            "line_nb": 3763,
            "steps": [
                {
                    "command": [
                        "by rewrite normC_def -normCK normC2_Re_Im.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC_sum_eq",
            "line_nb": 3785,
            "steps": [
                {
                    "command": [
                        "have [i /andP[Pi nzFi] | F0] := pickP [pred i | P i & F i != 0]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists 1 => [|i Pi]; first by rewrite normr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/nandP: (F0 i) => [/negP[]// | /negbNE/eqP->]; rewrite normr0 mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !(bigD1 i Pi) /= => norm_sumF; pose Q j := P j && (j != i).",
                        "VernacExtend",
                        "9d8fbc7ebaadb48200c542591ceec3e0f555a812"
                    ]
                },
                {
                    "command": [
                        "rewrite -normr_eq0 in nzFi; set c := F i / `|F i|; exists c => [|j Pj].",
                        "VernacExtend",
                        "ee6f95d9a37eb9fd26e9c84c7cb80dd1aaecc234"
                    ]
                },
                {
                    "command": [
                        "by rewrite normrM normfV normr_id divff.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [Qj | /nandP[/negP[]// | /negbNE/eqP->]] := boolP (Q j); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrC divfK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: `|F i + F j| = `|F i| + `|F j|.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "do [rewrite !(bigD1 j Qj) /=; set z := \\sum_(k | _) `|_|] in norm_sumF.",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqr_le ler_norm_add -(ler_add2r z) -addrA -norm_sumF addrA.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (ler_trans (ler_norm_add _ _)) // ler_add2l ler_norm_sum.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/normC_add_eq=> k _ [/(canLR (mulKf nzFi)) <-]; rewrite -(mulrC (F i)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC_sum_eq1",
            "line_nb": 3800,
            "steps": [
                {
                    "command": [
                        "case/normC_sum_eq=> t t1 defF normF.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by exists t => // i Pi; rewrite defF // normF // mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC_sum_upper",
            "line_nb": 3804,
            "steps": [
                {
                    "command": [
                        "set sumF := \\sum_(i | _) _; set sumG := \\sum_(i | _) _ => leFG eq_sumFG.",
                        "VernacExtend",
                        "ced270260aea2dd3ab523a646806c84962140531"
                    ]
                },
                {
                    "command": [
                        "have posG i: P i -> 0 <= G i by move/leFG; apply: ler_trans; apply: normr_ge0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have norm_sumG: `|sumG| = sumG by rewrite ger0_norm ?sumr_ge0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have norm_sumF: `|sumF| = \\sum_(i | P i) `|F i|.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqr_le ler_norm_sum eq_sumFG norm_sumG -subr_ge0 -sumrB.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite sumr_ge0 // => i Pi; rewrite subr_ge0 ?leFG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [t _ defF] := normC_sum_eq norm_sumF.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [/(psumr_eq0P posG) G0 i Pi | nz_sumG] := eqVneq sumG 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite G0 // -normr_eq0 eqr_le normr_ge0 -(G0 i Pi) leFG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have t1: t = 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: (mulfI nz_sumG); rewrite mulr1 -{1}norm_sumG -eq_sumFG norm_sumF.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr_suml -(eq_bigr _ defF).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /psumr_eq0P eqFG i: P i -> 0 <= G i - F i.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move=> Pi; rewrite subr_ge0 defF // t1 mulr1 leFG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> i /eqFG/(canRL (subrK _))->; rewrite ?add0r //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite sumrB -/sumF eq_sumFG subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC_sub_eq",
            "line_nb": 3822,
            "steps": [
                {
                    "command": [
                        "rewrite -{-1}(subrK y x) => /(canLR (subrK _))/esym-Dx; rewrite Dx.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by have [t ? [Dxy Dy]] := normC_add_eq Dx; exists t; rewrite // mulrDl -Dxy -Dy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le0N",
            "line_nb": 3851,
            "steps": [
                {
                    "command": [
                        "by rewrite -sub0r sub_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leN_total",
            "line_nb": 3854,
            "steps": [
                {
                    "command": [
                        "by apply/orP; rewrite le0N le0_total.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le00",
            "line_nb": 3857,
            "steps": [
                {
                    "command": [
                        "by have:= le0_total 0; rewrite orbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le01",
            "line_nb": 3860,
            "steps": [
                {
                    "command": [
                        "by case/orP: (le0_total 1)=> // ?; rewrite -[1]mul1r -mulrNN le0_mul ?le0N.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt0_add",
            "line_nb": 3863,
            "steps": [
                {
                    "command": [
                        "rewrite !lt_def => /andP[x_neq0 l0x] /andP[y_neq0 l0y]; rewrite le0_add //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "rewrite andbT addr_eq0; apply: contraNneq x_neq0 => hxy.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite [x]le0_anti // hxy -le0N opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq0_norm",
            "line_nb": 3868,
            "steps": [
                {
                    "command": [
                        "case: (leN_total x) => /ge0_norm => [-> // | Dnx nx0].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[x]opprK -Dnx normN nx0 oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_def",
            "line_nb": 3872,
            "steps": [
                {
                    "command": [
                        "wlog ->: x y / x = 0 by move/(_ 0 (y - x)); rewrite subr0 sub_ge0 => ->.",
                        "VernacExtend",
                        "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
                    ]
                },
                {
                    "command": [
                        "rewrite {x}subr0; apply/idP/eqP=> [/ge0_norm// | Dy].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by have [//| ny_ge0] := leN_total y; rewrite -Dy -normN ge0_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normM",
            "line_nb": 3877,
            "steps": [
                {
                    "command": [
                        "move=> x y /=; wlog x_ge0 : x / 0 <= x.",
                        "VernacExtend",
                        "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
                    ]
                },
                {
                    "command": [
                        "by move=> IHx; case: (leN_total x) => /IHx//; rewrite mulNr !normN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "wlog y_ge0 : y / 0 <= y; last by rewrite ?ge0_norm ?le0_mul.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=> IHy; case: (leN_total y) => /IHy//; rewrite mulrN !normN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_normD",
            "line_nb": 3883,
            "steps": [
                {
                    "command": [
                        "wlog x_ge0 : x y / 0 <= x.",
                        "VernacExtend",
                        "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
                    ]
                },
                {
                    "command": [
                        "by move=> IH; case: (leN_total x) => /IH// /(_ (- y)); rewrite -opprD !normN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub_ge0 ge0_norm //; have [y_ge0 | ny_ge0] := leN_total y.",
                        "VernacExtend",
                        "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
                    ]
                },
                {
                    "command": [
                        "by rewrite !ge0_norm ?subrr ?le0_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -normN ge0_norm //; have [hxy|hxy] := leN_total (x + y).",
                        "VernacExtend",
                        "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
                    ]
                },
                {
                    "command": [
                        "by rewrite ge0_norm // opprD addrCA -addrA addKr le0_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -normN ge0_norm // opprK addrCA addrNK le0_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_total",
            "line_nb": 3892,
            "steps": [
                {
                    "command": [
                        "by rewrite -sub_ge0 -opprB le0N orbC -sub_ge0 le0_total.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Real",
            "line_nb": 3896,
            "steps": [
                {
                    "command": [
                        "by move->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le0_add",
            "line_nb": 3909,
            "steps": [
                {
                    "command": [
                        "rewrite !le_def => /predU1P[->|x_gt0]; first by rewrite add0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/predU1P=> [->|y_gt0]; rewrite ?addr0 ?x_gt0 ?lt0_add // orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le0_mul",
            "line_nb": 3913,
            "steps": [
                {
                    "command": [
                        "rewrite !le_def => /predU1P[->|x_gt0]; first by rewrite mul0r eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/predU1P=> [->|y_gt0]; rewrite ?mulr0 ?eqxx // orbC lt0_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le0_anti",
            "line_nb": 3917,
            "steps": [
                {
                    "command": [
                        "by rewrite !le_def => /predU1P[] // /lt0_ngt0/negPf-> /predU1P[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_ge0",
            "line_nb": 3920,
            "steps": [
                {
                    "command": [
                        "by rewrite !le_def subr_eq0 sub_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_def",
            "line_nb": 3923,
            "steps": [
                {
                    "command": [
                        "rewrite le_def; case: eqP => //= ->; rewrite -sub_gt0 subrr.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "by apply/idP=> lt00; case/negP: (lt0_ngt0 lt00).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le0_total",
            "line_nb": 3927,
            "steps": [
                {
                    "command": [
                        "by rewrite !le_def [0 == _]eq_sym; have [|/lt0_total] := altP eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}